decremental source shortest maintain distance source node node node graph undergo deletion static counterpart linear decremental challenge undirected unweighted classic update  algorithm decade approximation factor recently improve bernstein roditty article linear approximation algorithm update obtain linear moreover obtain logw integer prior graph algorithm graph  bound algorithm oblivious adversary contrast previous rely maintain sparse emulator algorithm relies maintain sparse hop introduce cohen pram literature hop graph distance node approximate hop distance algorithm maintain hop linear linear deletion knowledge maintain approximate distance hop extend monotone  combine bound hop technique bernstein  independent CCS concept theory computation shortest dynamic graph algorithm sparsification spanner introduction dynamic graph algorithm refer data structure graph update query operation classify accord update operation decremental algorithm deletion incremental algorithm insertion fully dynamic algorithm insertion deletion article decremental algorithm source shortest undirected graph unweighted allows operation delete delete graph distance return distance distG node node graph allows additional operation increase increase positive integer parameter algorithm approximation algorithm distance query distance return distance estimate distG distG complexity associate query denote distance query update denote deletion node graph deletion additionally dependence maximum notation hide factor polylogarithmic article focus algorithm  query goal minimize update simply refer context related static version easily dijkstra algorithm moreover due thorup linear undirected graph positive integer implies naively decremental update static algorithm deletion non trivial decremental algorithm due  takesO update unweighted undirected graph algorithm refer ES throughout article application decremental strongly component multicommodity ES resist attempt improve decade roditty zwick explain phenomenon evidence ES optimal maintain distance unweighted undirected graph unless breakthrough boolean matrix multiplication preliminary version subpolynomial factor essentially update maintain distance assumption truly subcubic algorithm online boolean matrix vector multiplication assumption fully dynamic approximate journal acm vol article publication date november decremental undirected graph linear update algorithm amortize per update query incremental decremental algorithm respectively update query shift focus amortize decremental approximation algorithm amortization usually implicitly update sequence deletion improvement unweighted undirected graph due bernstein roditty randomize approximation algorithm update bound slightly quadratic ES unless input graph sparse preliminary version bernstein  deterministic approximation algorithm unweighted undirected graph update respectively undirected graph extension technique update logw graph  ES easily adapt unweighted graph later extend ES  algorithm graph technique recent algorithm bernstein  earlier approximate shortest approximate logw algorithm graph recently obtain randomize approximation algorithm update decremental approximate graph  logc constant algorithm important source reachability strongly component recently  vassilevska williams  algorithm reference combinatorial algorithm update query per deletion implies faster combinatorial algorithm boolean matrix multiplication maintain reachable node source deletion algorithm reference update query falsify exponential hypothesis significance decremental important understand complexity article obtain linear algorithm decremental approximate undirected graph update logw maintains estimate distance source node node guarantee constant query algorithm randomize assumes oblivious adversary fix sequence update advance assumption approximate decremental utilize randomization algorithm bound update expectation vega algorithm unweighted algorithm significantly improves upon previous algorithm improvement respect subpolynomial factor achieve dense regime consequence technique obtain algorithm shortest APSP integer obtain randomize conditional bound graph min enhance readability assume constant cite related omit dependence journal acm vol article publication date november decremental approximate APSP algorithm query update logw expectation remark  approximation constant query update logw sparse graph almost optimal almost static ofO instead static approximate APSP prior graph bernstein randomize decremental approximate APSP algorithm constant query update timeO logw unweighted undirected graph previous improve upon update approximation error integer bernstein roditty randomize decremental approximate APSP algorithm constant query update integer randomize decremental approximate APSP algorithm unweighted undirected graph query update logn outline preliminary decremental approximate shortest algorithm technical overview approach algorithm hierarchical approach decremental approximate algorithm distance update maintain approximate distance decremental algorithm maintain approximate distance update approximate define hop allows maintain approximate shortest distance update timem scheme distance formulate scheme reduction decremental algorithm maintain approximate internally decremental approximate algorithm decremental approximate algorithm internally decremental algorithm maintain approximate explain hierarchical approach obtain decremental approximate algorithm update distance addition algorithm maintain approximate suitable query algorithm decremental approximate APSP algorithm algorithm finally conclude article PRELIMINARIES article maintain approximate shortest undirected graph positive integer parameter graph undergoes sequence update deletion increase decremental denote node denote node deletion undirected graphG denote ing  distance distG node node shortest minimum distG node denote incident node ofu furthermore  denote  subgraph ofG induced node inu contains undirected graph definition equivalent journal acm vol article publication date november decremental undirected graph linear update similarly  denote subset induced distance estimate approximation distance distG distG  underestimate distance overestimate multiplicative error additive error additive error simply approximation instead approximation algorithm graph undergo deletion increase insertion graph denote deletion insertion plus insert denote update similarly denote update central data structure decremental algorithm approximate shortest  ES data structure maintains shortest node depth lemma data structure ES graph undergo deletion increase node depth parameter maintains node distG distG distG constant query update  max algorithm earlier developed algorithm guarantee decremental source sink shortest recent approach approximate decremental APSP graph emulator emulator graphG graph node ofG distG  distG node maintain distance approximation distance emulator sparser graph usually efficient maintain distance however maintain undergoes update unweighted undirected graph undergo deletion emulator thorup zwick spanner construction relatively approximation maintain efficiently however definition emulator occasional insertion emulator purely decremental algorithm approach algorithm mimic behavior classic ES emulator undergoes insertion approach bernstein roditty extends ES fully dynamic algorithm analyzes additional incur insertion approach introduce reference monotone ES basically ignores insertion decrease distance estimate maintains however algorithm approximation arbitrary approximate emulator exploit structural emulator guarantee approximation reference analysis monotone ES specific emulator article analysis algorithm monotone ES maintain approximate distance depth maximum monotone ES monotone ES analyze reference related notion spanner additionally subgraph journal acm vol article publication date november lemma update monotone ES maximum graph undergo deletion insertion increase technical overview explain article algorithm maintain hop graph undergo deletion algorithm  maintain shortest source node depth deletion unweighted graph therefore maintain shortest graph positive integer therefore maintain shortest establish technique algorithm maintain approximate source shortest timeO algorithm maintain approximate shortest graph algorithm efficient graph hop diameter node shortest artificially construct graph hop hop graph distG graph exists node distG hop terminology hop approximate algorithm obtain algorithm obtain hop  hop bem however simply construct hop dynamic algorithm maintain hop deletion algorithm performs task almost linear deletion roughly achieve graph undergo deletion maintain restrict hop node shortest hop shortcut graph distG logn hop maintain unrestricted hop hierarchical approach maintain hop ofG reduces hop factor logn multiplicative error shortcut graph maintain hop reduces hop another factor logn introduce another error hop guarantee node  logn hop visualizes hierarchical approach notion hop introduce cohen pram literature conceptually related notion emulator related notion shortest diameter distribute compute reference knowledge hop concept dynamic algorithm literature without mention bernstein fully dynamic approximate APSP algorithm bernstein cluster thorup zwick yield hop node node cluster fully dynamic algorithm cluster recomputed scratch update conceptually hop decremental journal acm vol article publication date november decremental undirected graph linear update illustration hierarchical approach maintain hop reduction logn node distance hop shortcut subpaths logn hop shortcut hop hop shortcut hop variant bernstein hop however slightly simpler cluster preliminary version elkin neiman huang pettie hop thorup zwick cluster optimal hop parameter approximate distance static hop assume unweighted undirected graph simplicity assume constant explain obtain hop randomize construction thorup zwick notion node construction hop analysis logn parameter sequence node obtain obtain node independently probability node define priority maximum node priority define distG distG distG minv distG distG node priority expectation argument node non decrease distance node belongs probability therefore expectation node priority node priority distG argument argument thorup zwick graph journal acm vol article publication date november illustration approximation argument priority dot shortest ing shorten distance dash imply existence nearby node increase priority node priority node distG contains node priority distG node distG contains node priority distG node distG priority contains distG ratio quantity node integer distG  distG choice error multiplicative additive literature graph emulator multiplicative error additive error roughly strategy proof node shortest shorten distance without introduce approximation error recall assume thatG unweighted otherwise node closer ratio distance proof node priority node node priority distG distG distG illustrate proof strategy strategy hop reduction argument integer node distance shortest shorten distance without introduce approximation error otherwise requirement integer thorup zwick simplify exposition thorup zwick actually define graph union shortest node node graph approximation error subgraph spanner journal acm vol article publication date november decremental undirected graph linear update node closer ratio distance argument distance shorten therefore  distG bernstein argument latter statement remove maximum proof strategy outline dynamic algorithm allows limit depth suitable choice logn function guarantee define node distG  distG distG distG  distG distG  distG distG distG  however distG distG hop parameter instead obtain hop efficient construction ignore compute construct static thorup zwick remark naive algorithm compute timeO reduce sample instead node modify obtain sequence obtain independently probability endpoint sample priority node  define node priority equation definition compute thorup zwick compute distG minv distG node artificial source node node dijkstra algorithm logn compute node priority shortest depth distG obtain node implementation dijkstra algorithm node queue upon logn incident argument random sample guarantee dijkstra computation logn node priority logn described compute journal acm vol article publication date november define  distG distance preserve hop reduce necessarily sparsification anymore bound purpose sparsification aspect relevant hop reduction static compute hop hop maintain deletion graph undergoes deletion hop update unfortunately maintain efficiently however maintain node approximate distG distG distG priority logd differs definition inequality distG distG instead inequality distG distG relaxed inequality alone increase additive error hop reduction argument node priority node directly boundary whereas twice away increase additive error easily compensate reduce priority constant factor limit depth obtain restrict hop sufficient hop reduction node relatively later purpose despite modification clearly therefore bound apply algorithm maintain maintain distG threshold node artificial source node node maintain ES depth pmd node priority maintain maintain ES depth min distG distG increase restart ES naively incur ofO instance ES however easily implement ES instance ES expectation distG increase logd exceeds initialize logd ES node therefore maintain logd expectation node priority expectation maintain approximate logd expectation prefer ES preprocessing initial ES node anymore distG remains unchanged therefore remove implementation dijkstra algorithm node queue upon journal acm vol article publication date november decremental undirected graph linear update decremental approximate sketch algorithm maintain shortest source node ofm logn priority maintain source shortest depth ES maintain approximate shortest node distance  approach maintain  sketch logd expectation hop distG argument graph node distG distG distG  maintain approximate shortest node distance hop reduction combination technique graph multiple instead incur error approximate shortest distG distG distG distG distG efficiency observation algorithm graph factor graph integer exactly factor instead maintain shortest depth maintain shortest depth obtain approximation node distG however cannot simply ES delete node approximate therefore insert dynamic shortest algorithm situate purely decremental however insertion nice structure previously developed technique monotone ES monotone ES ignore decrease insert  proof argue distance anymore node monotone ES maintain monotone ES distance insert explain insertion corresponds node node fix node priority logd possibility node namely distG increase node expectation expectation expectation almost linear algorithm slightly complicate logn priority hierarchy hop reduction algorithm maintain hop node distG fromu distG distG hop achieve hierarchical approach hop maintain approximate shortest journal acm vol article publication date november depth data structure maintain approximate shortest depth maintain approximate hop hierarchy ES algorithm maintain shortest depth efficient monotone ES hop maintain hop efficient monotone ES obstacle implement hierarchical approach maintain approximate layer hierarchy algorithm maintain approximate sketch ES decremental algorithm hierarchical approach replace ES monotone  approximate distance estimate approximation error increase layer argument algorithm maintain approximate layer bound however instance monotone ES node issue monotone ES subgraph induced node node priority subgraph contains expectation recursively algorithm graph incur factor increase depth recursion update extension graph hop construction described unweighted graph however distG node technique mention construct  graph node distG  shortest approximate shortest instance algorithm graph maintain hop approximate refine analysis hop analysis shortest define node distance hop reduce distance tov graph cannot guarantee node distance exactly therefore define furthest node distance furthermore define distance hop contains hop graph reduce distance hop unweighted graph sufficient hop graph really hop graph algorithm approximate approximate  maintain approximate node already algorithm maintain approximate shortest reduction algorithm maintain approximate shortest distance oracle exponentially increase distance oracle assign integer priority node ensure structural node node priority journal acm vol article publication date november decremental undirected graph linear update estimate distance approximate shortest algorithm maintain estimate distance node node incur detour priority limited strategy succeed eventually analysis explicitly bound distance detour function distance difference priority become bound purpose hop distance oracle respectively addition structural bound obtain useful application bound ensure appropriate randomize assignment priority complication arise decremental algorithm distance bound update dynamically maintain formally statement proposition assume decremental approximate algorithm approx fix graph undergo deletion increase node fix source node approx maintains update node distance estimate distG distG distG update ing approx return node decremental algorithm  maintain approximate graph undergo deletion increase node parameter assigns node priority maintains node node distance estimate node node node distG distG  priority node distG node priority distG distG expectation logd denotes node sequence update update  logn logd expectation update  return node leaf journal acm vol article publication date november definition algorithm maintain approximate node initialization obtain sample independently probability node priority maximum instance approx artificial source node node denote distance estimate approx node node priority maintain min initialization increase compute node distG instance approx subgraph induced denote estimate distance maintain approx maintain node inequality remove  return approximate distance estimate approx relation approximate maintain algorithm thorup zwick translate approximate definition node priority distG distG node priority distG distG relaxed version statement approximate lemma node priority node distG node priority distG distG proof distG distG  distG distG exists node priority distG distG assume distG  distG distG distG distG equivalent distG journal acm vol article publication date november decremental undirected graph linear update distG assume distG distG definition latter inequality node shortest fromu ing distance non decrease therefore node implies distG distG distG desire approximate useful analysis easily bound lemma node proof distG denote node distance fromu increase node graphG therefore remains priority trivially contains node distG trivially distG distG however distG distG definition distG distG distG distG distG define lemma node priority expectation random choice sample proof trivially assume suffices immediately define distG min distG distG graph accord distance definition distG broken arbitrary fix strictly graph probability independently expectation assume without loss generality distG distG distG distG incident exist journal acm vol article publication date november node distG distG distG distG distG implies expectation desire approximate approximate correspond distance estimate distance estimate node approximate desire approximation guarantee although compute subgraphs lemma node distG distG proof distG subgraph distG distG therefore inequality distG distG trivially  distG previous version ofG possibly version recomputed therefore node distG distG   approximate structural allows shortcut node nearby node priority lemma node priority node distG node priority distG distG proof definition non decrease argument distG distG otherwise lemma node priority distG distG distG otherwise lemma node priority distG distG inequality distG distG distG distG distG distG distG distG journal acm vol article publication date november decremental undirected graph linear update argument obtain node priority distG distG happens eventually node priority distG distG applies distG latter inequality node shortest distance non decrease therefore node implies distG distG distG desire bound approximate maintain easily bound node definition ensure approximate subset lemma approximate expectation logd denotes node sequence update proof bound node approximate node denote priority node increase min increase increase minimum increase logd non negative lemma increase node lemma expectation random choice sample node logd expectation node priority expectation random choice sample node approximate logd expectation sample independently finally analyze algorithm maintain approximate data structure approx algorithm depends approx lemma maintain node logn logd expectation proof initialization algorithm instance approx depth maintain node priority approximate correspond distance estimate analyze journal acm vol article publication date november increase compute node distance implementation dijkstra algorithm node queue upon logn incident lemma lemma expectation random choice sample compute logn expectation maintain instance approx depth subgraph ofG induced node expectation therefore expectation increase logd node priority expectation random choice sample logn logd expectation claimed claimed approximate  approximate maintain approximate shortest already algorithm maintain approximate reduction hop define approximate shortcut hop graph maintain approximate shortest monotone ES challenge approach bound approximation guarantee hop encompasses proof approximation guarantee static variant hop static proof sufficient decremental monotone ES exploit additional structure approximate define hop structural useful node node priority distance function distance difference priority upper bound approximation guarantee proof concern mainly factor affect monotone ES factor hop precisely hop update input graph bound approximate precisely node factor maximum depth maximum depth relatively additional approximation error account choice parameter balance moderate formally statement proposition assume decremental algorithm  maintain approximate fix Dˆ graph undergo deletion increase node parameter assigns node priority maintains update node node node distance estimate journal acm vol article publication date november decremental undirected graph linear update node node distG distG non decrease function  guarantee node priority node distG Dˆ exists node priority distG distG update  return node leaf approximate data structure approx graph undergo deletion increase node fix source node parameter logn Dˆ maintains distance estimate nodev distG distG distG update approx denotes node sequence update update approx return node assume without loss generality distance estimate maintain  non decrease  report decrease ignore distance non decrease deletion increase algorithm description algorithm approx maintains node node min otherwise update algorithm  node leaf approximate distance estimate increase node information return  update ing undergoes insertion deletion increase define shortcut graph algorithm approx simply monotone ES monotone  apparent pseudocode algorithm denote journal acm vol article publication date november  define graph node  contains min define graph node multiple furthermore define graph node factor maintain monotone ES maximum denote node node algorithm return distance estimate graph integer undergo insertion deletion increase update furthermore guarantee analysis analysis algorithm graph factor integer algorithm efficient lemma update monotone ES maximum denotes node sequence update proof lemma maintain monotone ES maximum update deletion increase insertion bound contains define via approximate node approximate journal acm vol article publication date november decremental undirected graph linear update insertion deletion increase limited maximum therefore conclude claimed definition approximation guarantee analyze approximation guarantee define important analysis bound growth ari  ifi intuitively distance shortcut shortest source node hop node priority shortcut attempt fails distance nearby node priority hop node additionally equivalently obtain finally intuitively amount additive error hop node priority capture additional error node priority lemma  proof definition  journal acm vol article publication date november lemma proof logn rewrite expression logn logn lemma proof  asi ari inequality induction induction assume journal acm vol article publication date november decremental undirected graph linear update lemma proof lemma    inequality lemma lemma arp proof definition  lemma arp lemma proof fix proof induction trivially  ari finally induction assume inequality induction hypothesis     journal acm vol article publication date november analysis approximation guarantee analyze approximation error monotone ES maintain approximation error consists approximation error monotone ES considers relatively therefore hop approximation error formula approximation error depends priority node distance monotone ES proof review monotone ES reference algorithm classic ES monotone ES maintains node monotone ES initialize compute shortest depth  deletion increase sequence deletion increase insertion monotone ES insertion deletion increase handle deletion increase classic ES node exceeds maximum procedure handle insertion trivial completeness pseudocode monotone ES algorithm analysis monotone ES terminology node incident node proof monotone ES observation monotone ES node decrease become insert node equation implies return distance estimate underestimate distance prerequisite reference apply variant inequality argue node lemma previous update precondition simply capture monotone ES node exceeds decrease anymore initialization update precondition fulfil automatically additive error define node function max distG otherwise journal acm vol article publication date november decremental undirected graph linear update algorithm monotone ES internal data structure node heap intend graph global heap intend node update procedure initialize compute shortest depth foreach  insert heap procedure delete increase procedure increase increase insert heap respectively update heap heap  procedure insert increase insert heap heap procedure  heap empty node minimum heap remove minv minv retrieve heap arg minv ES foreach update heap insert heap already intuition bound hop desire approximation guarantee approximation guarantee formally lemma approximation guarantee node priority distG distG journal acm vol article publication date november lemma desire bound approximation error easily  distG  lemma distG distG distG distG distG distG lemma node distG proof trivially otherwise max distG distG distG distG distG distG proof lemma proof induction update node priority distG ofu monotone  ofs previous deletion ing distance estimate approximation distance distance non decrease previous deletion trivially assume monotone ES ofu previous deletion ing induction define node distG distG shortest fromu ing letv furthest node fromu distG implies distG distG furthermore shortest closer  distG distG distG contains argument distG lemma definition distG function non decrease argument lemma lemma journal acm vol article publication date november decremental undirected graph linear update Dˆ distG Dˆ node priority distG distG contains contains contains distG distG   inequality lemma distG definition furthermore guarantee therefore distG inequality lemma maximum monotone ES lemma observation therefore distG distG distG distG denote priority inequality induction hypothesis journal acm vol article publication date november distG proof assumption distG implies distG distG distG distG inequality distG assumption distG distG distG distG distG distG distG distG distG max distG inequality trivial observation distG max distG proof lemma distG distG distG choice shortest therefore deletion apply induction hypothesis distG distG distG distG due definition therefore journal acm vol article publication date november decremental undirected graph linear update definition definition distG induction hypothesis distG rearrange distG distG distG distG inequality equation distG distG distG shortest distG distG distG distG distG distG rearrange distG distG shortest distG distG zero addition distG distG  lemma distG distG distG distG distG distG rearrange distG shortest lemma distG inequality equation implies distG inequality lemma maximum monotone ES lemma distG journal acm vol article publication date november node priority distG distG lemma therefore distG definition contains distG distG  lemma conclude inequality apply induction hypothesis proof distG distG inequality easily definition distG distG distG distG distG distG max distG proof lemma apply induction hypothesis inequality distG distG distG distG distG journal acm vol article publication date november decremental undirected graph linear update definition definition definition distG induction hypothesis distG rearrange distG distG distG inequality distG inequality equation distG rearrange distG inequality equation distG definition distG lemma distG inequality equation implies distG maximum monotone ES lemma distG  everything combine obtain decremental algorithm approximate approximate APSP approximate obtain algorithm approximate obtain algorithm approximate distance node distance source parameter hierarchical approach obtain algorithm algorithm maintain approximate shortest obtain algorithm maintain approximate algorithm maintain approximate shortest distance initial algorithm scheme ES lemma decremental approximate algorithm fix source node maintains node distance estimate distG distG distG update expectation logn journal acm vol article publication date november update return node proof proof logn furthermore proof decremental approximate algorithm depth finally decremental approximate algorithm approx distG distG distG update approx logn update approx return node proof induction  lemma distance update claimed induction apply proposition obtain decremental algorithm  parameter maintains node node distance estimate node node node distG distG  node priority node distG node priority distG distG expectation  denotes node update  logn  ptk expectation  induction hypothesis logn journal acm vol article publication date november decremental undirected graph linear update analyze logn argue apply proposition obtain approximate decremental algorithm approx parameter logn logn logn logn logn logn therefore apply proposition obtain approximate decremental algorithm approx parameter maintains node distance estimate distG distG distG  update approx  update ing approx return node expectation therefore update approx logn logn logn approx denote algorithm internally approx approx additionally maintains node min approx approx return update node minimum compute constant journal acm vol article publication date november approx asymptotic update approx remains fulfills desire approximation guarantee node distG distG distG furthermore distG  node distG distG distG distG distG distG  distG distG distG proof lemma approx desire decremental approximate algorithm correctness simply choice update logn definition furthermore logn logn update algorithm algorithm distance technique theorem decremental approximate algorithm fix source node maintains node distance estimate distG distG constant query update logw expectation polylog update logw expectation proof define graph node multiple guarantee  furthermore define graph node factor journal acm vol article publication date november decremental undirected graph linear update algorithm algorithm lemma graph maintain distance estimate node satisfies distG distG distG algorithm return distance estimate min   distG minimum distance estimate implies distG distG maximum consist shortest  tov ing distG   denote ing andG respectively consists   therefore distG  distG distG distG distG distG distG distG distG distG distG distG lemma  distG distG distG distG desire analyze algorithm lemma maintain node logn choice update maintain distance estimate logw expectation obtain approximation instead approximation simply algorithm update logw logn journal acm vol article publication date november logn logn update therefore logw  update logw logw  logn query algorithm described compute min  approximate distance reduce query min heap node allows query constant increase asymptotic bound update approximate APSP technique obtain decremental approximate APSP algorithm conceptually approximate algorithm theorem plug algorithm maintain approximate proposition adequate query procedure distance estimate maintain approximate return approximate distance node theorem decremental approximate APSP algorithm upon query approximate node return distance estimate distG distG query update logw expectation polylog update logw expectation proof approximate algorithm theorem approximation update logw expectation polylog update ist logw expectation proposition maintain approximate  update logn expectation simplification logw logw polylog desire additionally maintain node node node minimum node priority node maintain heap node priority journal acm vol article publication date november decremental undirected graph linear update leaf insert remove heap update heap insert remove update heap node minimal heap heap operation logarithmic update algorithm proposition increase logarithmic factor alter overall bound algorithm query approximate distance node procedure query procedure return otherwise priority computes node node priority minimum recursively query approximate distance distance estimate via finally return minimum distance estimate procedure query priority foreach exists query mini return instance  recursive recursive priority increase query procedure node distance estimate compute procedure query satisfies distG priority proof proof induction priority denote distance estimate return procedure query proposition choice distG distinguish  andv ifv  distG proposition choice node priority distG distG argue distG implies upper bound priority definition journal acm vol article publication date november distG distG distG distG simplify presentation distG inequality distG distG distG distG distG induction hypothesis distG distG distG distG distG distG distG distG therefore distG furthermore algorithm guarantee distG conclusion article source shortest undirected graph maintain deletion linear update constant query approach maintain hop linear linear update achieve graph substantially improve  update reference challenge suitable hop graph static moreover improve  update reference decremental reachability already derandomize algorithm task deterministically maintain priority induced node bound distance maintain hop related algorithm roditty zwick  maintain priority induced cluster thorup zwick bound distance correspond spanner emulator derandomized static previously demonstrate derandomize decremental approximate APSP algorithm roditty zwick technique maintain cluster principally approach bernstein  recently introduce technique deterministically journal acm vol article publication date november decremental undirected graph linear update maintain approximate deletion yield update logw graph unweighted graph respectively technique extend obtain deterministic algorithm randomize sparse regime