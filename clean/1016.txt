possibility compute cryptographic primitive fully arithmetic model finite model input cryptographic primitive encryption scheme sequence honest implement arithmetic circuit underlie adversary non access model capture standard information theoretic construction positive negative model various cryptographic task positive cod related intractability assumption computational primitive commitment scheme public encryption oblivious transfer secure computation implement model negative garble circuit additively homomorphic encryption secure computation online complexity cannot achieve model reveal qualitative difference standard boolean model arithmetic model explain retrospect limitation previous construction CCS concept theory computation cryptographic primitive cryptographic protocol additional arithmetic complexity cryptography secure computation introduction article possibility cryptographic independent underlie algebraic domain concrete motivate compute encrypt data alice private data encrypt server server program data assume data item algebraic domain finite precision correspondingly program described sequence arithmetic operation naturally alice employ fully homomorphic encryption FHE however standard FHE construction typically assume data binary computation boolean circuit translate binary unfortunately suffers limitation translation typically expensive introduces overhead typically emulation modular strongly depends representation finally scenario boolean emulation simply feasible access wise representation data item already encrypt algebraic scheme exponent generator grade encode scheme FHE operation strive generality FHE treat oracle later instantiate concrete domain article explore feasibility scheme generally cryptographic primitive implement independently underlie algebraic domain formalize via notion arithmetic construction cryptographic primitive model cryptographic construction standard cryptographic construction typically described tuple efficient randomize algorithm implement honest input algorithm consist binary plaintext ciphertext security parameter default polynomial input algorithm satisfy syntactic correctness security definition assume latter formulate via adversary challenger construction secure adversary polynomial boolean circuit adversary probability predefined threshold arithmetic construction arithmetic model input honest vector generic honest manipulate apply operation addition subtraction multiplication zero access honest access representation input honest generate constant sample random sample random overall honest described efficiently computable randomize arithmetic circuit formal definition contrast honest adversary  capture probabilistic boolean circuit uniform circuit polynomial security adversarial realization formally standard security augment additional preliminary adversary specify challenger boolean circuit implement operation respect adversarially chosen binary representation continued adversary attack construction PF specify PF finite boolean multiplication circuit nlog journal acm vol article publication date april arithmetic cryptography standard boolean circuit hence security arithmetic guarantee construction PF secure concrete oracle realizable adversary encryption illustrate model define arithmetic perfectly secure encryption scheme syntactically scheme consists generation algorithm KGen encryption algorithm enc decryption algorithm dec satisfy perfect correctness KGenn deck  message perfect security define via  security parameter adversary specifies message challenger responds ciphertext  KGenn adversary output scheme perfectly secure computationally unbounded adversary probability generalization pad arithmetic encryption scheme generation algorithm sample random encrypt message output decrypt ciphertext output message operation implement randomize arithmetic circuit scheme perfectly secure namely chosen computationally unbounded adversary probability cannot exceed contribution goal article cryptographic primitive admit arithmetic construction similarly pad typical information theoretic construction naturally  notable various secret scheme classical information theoretic secure multiparty protocol detailed account related construct computationally secure primitive arithmetic model affirmative arithmetic construction computational primitive informal theorem arithmetic construction public encryption commitment scheme oblivious linear evaluation arithmetic analog oblivious transfer protocol secure multiparty computation without honest majority computation assume intractability assumption related linear code emphasize focus feasibility efficiency attempt optimize complexity construction underlie intractability assumption essentially assumes pseudorandomness matrix vector computational complexity representation limited computational adversary specifically primitive secure polynomial circuit underlie implementable polynomial circuit limitation inherent computationally secure scheme otherwise inefficient representation scheme embed NP oracle journal acm vol article publication date april random generate matrix obtain random codeword  replace random coordinate random random linear code assumption denote  previously instantiate binary standard parity lpn assumption indeed primitive theorem construct extend various lpn scheme literature theorem arithmetic model highly nontrivial computational cryptography secure protocol  boolean primitive impossible cryptographic task achieve standard model cannot implement  garble circuit secure computation protocol online communication homomorphic encryption scheme multiplication scalar addition detail garble circuit yao garble circuit GC construction boolean circuit secret randomness garble circuit Cˆ along function unknown input garble circuit Cˆ reveal additional information latter requirement formalize existence efficient decoder recovers Cˆ efficient simulator sample distribution computationally indistinguishable Cˆ depends security parameter input yao celebrate transformation existence pseudorandom generator equivalently function definition arithmetic garble circuit naturally generalizes boolean target function formal polynomial arithmetic circuit encode garble circuit Cˆ along arithmetic function Cˆ output reveal additional information boolean existence arithmetic decoder simulator garble depends security parameter relaxed notion online efficiency meaning independent circuit complexity input latter requirement typically definition garble scheme garble arithmetic circuit recently partial progress fully arithmetic construction encoder decoder theorem inherently impossible  contrast standard error lwe assumption coordinate perturbed drawn interval arithmetic unclear sample interval grows lwe construction  discussion journal acm vol article publication date april arithmetic cryptography informal theorem arithmetic garble circuit furthermore assume existence standard function online efficient arithmetic garble circuit exist recall boolean garble circuit construct function hence theorem arithmetic model boolean model proof theorem secure computation online complexity generalize previous nontrivial bound online communication complexity semihonest secure computation protocol roughly exchange message solely internal randomness offline phase online phase input exchange message input online offline model standard boolean protocol achieve highly efficient online communication complexity efficient deterministic functionality deliver output hereafter refer functionality obtain semihonest protocol online communication yao garble circuit succinct garble circuit contrast arithmetic model online communication complexity complexity function informal theorem assume arithmetic pseudorandom generator exist constant exists arithmetic functionality fnc cannot securely compute arithmetic semihonest protocol online communication existence arithmetic pseudorandom generator RLC assumption theorem generalizes multiparty honest majority homomorphic encryption scalar multiplicative homomorphic encryption scheme standard public encryption scheme public transform ciphertext encpk scalar encryption formally efficient randomize transformation message almost public distribution encpk encpk encpk statistically refer homomorphism statistical wellknown scheme goldwasser micali cryptosystem elgamal cryptosystem arithmetic impossible scalar multiplicative homomorphism statistical weaker homomorphism multihop equation asserts correctness preserve repeatedly apply impossible implement arithmetic encryption theorem simulator  inefficient latter corresponds  notion security journal acm vol article publication date april scalar multiplication addition ciphertexts aka additive encryption scheme informal theorem arithmetic encryption scheme statistically homomorphic scalar multiplication multihop homomorphic addition scalar multiplication theorem strengthen distribution equation within constant statistical distance secure private encryption scheme additional noninteractive perfectly binding commitment multiplicative homomorphism theorem scheme polynomially hop scheme compactness respect inner computation remark interestingly construct arithmetic secure  encryption scheme scalar multiplication scalar addition respect weaker homomorphism marginals define equation identically distribute unfortunately weak homomorphism useless application homomorphic encryption discussion positive negative arithmetic model highly nontrivial significantly weaker standard model beyond arithmetic construction negative explain retrospect limitation previous arithmetic garble circuit construct shrink gadget symmetric encryption homomorphic implementation gadget integer allows garble circuit  model encoder treat input integer decoder  theorem limitation inherent specifically conclude arithmetic construction shrink gadget similarly theorem partially explains online communication complexity arithmetic mpc protocol ben moreover implication regard standard boolean model inspire computational complexity theory negative barrier  barrier construction  bound lpn RLC versus lwe construction parity assumption typically extend arithmetic RLC assumption therefore lpn construction deem bound specifically theorem suggests lpn encryption multihop additive homomorphism scheme easily construct regev error lwe assumption expose qualitative difference conference version article weaker impossibility apply restrict arithmetic encryption scheme journal acm vol article publication date april arithmetic cryptography assumption indeed gap lwe homomorphism equation apply repeatedly weak lpn homomorphism apply crucial gap explain lwe powerful application lpn restrict primitive weak homomorphism typical lpn scheme probably researcher insight arithmetic bound lack multihop homomorphism limitation concrete construction inherent arithmetic construction quote  fundamental lwe allows cryptographic lpn lpn  lwe construction another  barrier kick information theoretic construction standard technique domain polynomial error code  construction deem restrict bound mention bound information theoretic primitive  notoriously arithmetic model restricts honest bound accessible capture exist scheme therefore arithmetic promising bound information theoretic primitive constructive perspective instead arithmetic bound barrier achieve goal homomorphic encryption lpn  route conclude primitive existence arithmetic remains pseudorandom function collision resistant hash function message authentication code signature extend positive restrict model sample random apply zero model construct function standard assumption negative bound liberal arithmetic model upper bound random representation previous already mention information theoretic primitive admit arithmetic implementation notable MACs affine function shamir secret scheme classical information theoretic secure multiparty protocol ben randomize encoding   extension generic   cramer  computationally secure primitive knowledge previous arithmetic model honest classical secret scheme access structure situation becomes involve complicate secure multiparty protocol journal acm vol article publication date april richer interface underlie therefore construction satisfy arithmetic notion IPS model relevant model hereafter refer IPS model context secure multiparty computation model access representation representation chosen adversary allows honest upper bound standard boolean cryptographic scheme encryption oblivious transfer contrast operation cannot apply model naor  yield semihonest secure protocol IPS model pseudorandomness noisy reed solomon codewords extend malicious model improve efficiency underlie intractability assumption rely existence boolean oblivious transfer primitive arithmetic reduction another arithmetic construction primitive secure computation protocol  primitive arithmetic oblivious transfer define respect arithmetic reduction arithmetic reduction secure multiparty computation threshold additive homomorphic encryption franklin  semihonest model extend malicious model assume underlie encryption equip purpose zero knowledge protocol similarly arithmetic reduction garble arithmetic circuit symmetric encryption generic model instructive arithmetic model generic model GGM extension generic model idealize model adversary computation independent representation underlie cryptographic contrast model honest player arithmetic independent adversary  specify representation correspondingly model purpose GGM allows unconditional hardness generic attack model allows increase usability cryptographic construction independent demonstrate difference model happens ideal oracle instantiate concrete model boolean construction remain secure definition whereas GGM scheme become completely insecure TECHNIQUES negative negative obtain reduce task attack arithmetic primitive task analyze arithmetic circuit latter novel notably partial derivative originally developed context arithmetic complexity theory overall bound algorithm arithmetic circuit attack IPS model trivially commit apply binary commitment representation model manipulate via operation journal acm vol article publication date april arithmetic cryptography arithmetic construction outline proof negative presentation sketch version theorem private simultaneous message PSM model conceptually simpler garble circuit secure computation protocol contains overview proof theorem communication bound PSM model PSM model alice bob private input respectively random alice bob message carol carol predefined function goal minimize communication complexity standard boolean garble circuit obtain protocol alice communication depends input security parameter independent bob input complexity specifically standard cryptographic assumption alice message contrast arithmetic model alice message bob input alice input bob input consist vector target function alice message shorter carol nontrivial information bob input carol output nonzero vector orthogonal clearly violates privacy allows carol exclude input bob assume zero gate simply polynomial observation fix randomness bob input bob message residual polynomial alice carol alice computes vector univariate polynomial input output message carol computes vector multivariate polynomial alice message vector correctness protocol fix characteristic polynomial univariate polynomial RHS equation univariate polynomial LHS formally equivalent namely polynomial formal partial derivative equivalent definition LHS simplifies apply chain RHS syntactically vector univariate polynomial contains output derivative respect formal variable bold font fix standard font  treat formal variable polynomial compute circuit poly GF prime poly journal acm vol article publication date april similarly jacobian matrix matrix multivariate polynomial entry partial derivative ith output respect jth input formal variable carol attack carol therefore cannot compute derivative however therefore compute circuit standard technique transform circuit jacobian carol alice message alice input carol evaluate circuit obtain matrix observation unknown vector indeed evaluate RHS equation overall carol matrix span bob input carol nonzero vector orthogonal security protocol handle zero gate zero gate function compute alice carol polynomial anymore equation partial derivative function define remove zero gate assume simplicity circuit contains zero gate apply expression polynomial distinguish zero polynomial remove gate replace outcome constant otherwise replace gate constant transformation therefore polynomial agrees polynomial function polynomial conclude argument easily generalizes zero gate technicality arises due attacker carol access compute outer contains zero gate apply nonzero polynomial vanishes image previous procedure apply alone fail  issue random image remove zero gate consistent inner carol alice attack gate handle similarly minor technicality extension previous argument alice communication grows bob input alice communication grows complexity function bob input via pseudorandom generator prg roughly embed prg function communication protocol allows pseudorandomness prg approach extends arithmetic garble circuit secure multiparty protocol yield theorem impossibility homomorphic encryption theorem strongly relies existence efficient algorithm promise denote arithmetic predictability AP arithmetic circuit distinguish journal acm vol article publication date april arithmetic cryptography predictable randomly chosen random variable predictable exists efficient predictor probability unpredictable randomly chosen random variable information theoretically unpredictable computationally unbounded predictor fails probability theorem attack homomorphic encryption reduces AP focus simplicity scalar multiplicative statistical homomorphism theorem public ciphertext encpk unknown plaintext multiplicative homomorphism construct circuit plaintext encryption probability distribution induced uniform choice internal randomness homomorphic evaluator fix constant encryption simply encryption zero loses information regard unpredictable contrast encryption encryption  predict decryption algorithm hence efficient algorithm predictability allows security multiplicative homomorphic encryption building technique algorithm solves AP underlie sufficiently circuit compute polynomial gate zero gate random algorithm surprisingly random jacobian span gradient target polynomial generalize arithmetic circuit gate zero gate random reduces circuit computes polynomial reduction introduces error robust AP fortunately previous algorithm generalizes positive positive theorem approach outline arithmetic binary symmetric encryption approach abstract notion arithmetic binary symmetric encryption abe abe arithmetic symmetric encryption scheme allows encrypt binary scheme arithmetic model essentially sequence encryption scheme allows import binary construction arithmetic therefore bridge binary arithmetic standard binary public encryption scheme obtain arithmetic public encryption hybrid mode namely encrypt message encrypt via abe private binary upper bound poly circuit arbitrary journal acm vol article publication date april binary public encryption encrypt binary message conveniently purpose suffices secure abe similarly public encryption abe obtain arithmetic construction cpa secure symmetric encryption commitment scheme achieve arithmetic secure computation protocol additional weak homomorphism ciphertext generate ciphertext decrypts ciphertext ciphertext hence weak homomorphism contradict negative technical decryption algorithm implement polynomial arithmetic formula branching program abe RLC secure abe obtain generalize random linear code assumption  encrypt message sample random generate matrix random noisy codeword encode message via repetition code noisy codeword mask encode message ciphertext consists private noisy coordinate described binary vector decryption implement ignore noisy coordinate linear equation properly chosen constant unique negligible probability abe secure computation explain construct secure arithmetic computation abe weak homomorphism construction variant construction recall binary oblivious transfer OT functionality input sender selection receiver delivers receiver convert maliciously secure binary OT maliciously secure arithmetic oblivious transfer AOT sender input transformation abe sender encrypts arithmetic message binary sends ciphertexts receiver receiver binary OT convert AOT oblivious linear evaluation ole latter functionality sender another receiver delivers receiver construction abe exploit weak homomorphism specifically receiver sends ciphertext sender homomorphism generate ciphertext decrypts ciphertext cannot receiver leak information instead secure computation protocol decrypt invoked input receiver binary decryption complexity protocol implement efficiently via AOT semihonest ole semihonest ole arithmetic variant classical  protocol obtain arithmetic secure although security abe cannot achieve unconditionally message depends security parameter cannot concrete abe directly AOT securely deliver  version journal acm vol article publication date april arithmetic cryptography computation protocol arithmetic function semihonest model protocol transform malicious IPS compiler compiler arithmetic additional arithmetic multiparty protocol security constant malicious maliciously secure AOT already construct alternative approach briefly mention alternative approach derive arithmetic construction primitive mention theorem  lpn scheme already mention exist lpn scheme easily extend arithmetic generalize random linear code assumption alternative arithmetic construction primitive symmetric encryption commitment public encryption AOT approach inferior abe approach strength underlie assumption approach obtain arithmetic public encryption assume RLC constant rate code  rate cpa secure symmetric encryption approach hardness polynomial constant contrast primitive abe approach hardness constant rate code constant rate assumption consistent knowledge assumption formally weaker imply nevertheless proof approach beneficial demonstrate lpn scheme generalize arithmetic discussion  cryptographic transformation another construct arithmetic primitive concrete construction primitive standard binary cryptographic transformation complex primitive translate binary transformation arithmetic indeed exist binary transformation straightforward arithmetic analog already mention classical  construction semihonest secure computation oblivious transfer OT naturally extends arithmetic similarly naor transform PRGs commitment arithmetic analog another arithmetic construction commitment security reduce RLC assumption interestingly binary cryptographic transforms  typically happens construction inspects input applies operation zero arbitrary conditioning cannot implement arithmetic varies possibly exponential domain typical classical GGM construction pseudorandom function PRFs PRGs GGM construction prf compute exponential PRGs ith chosen ith input meaningfully adopt arithmetic conditioning structure goldreich levin construction  predicate yao construction garble circuit function latter negative arithmetic analog binary construction provably impossible negative journal acm vol article publication date april prf arithmetic construction prf future research organization preliminary definition arithmetic cryptographic primitive dedicate bound primitive garble circuit secure computation homomorphic encryption positive presentation random linear code intractability assumption proceed primitive pseudorandom generator encryption scheme commitment secure computation protocol PRELIMINARIES preliminary standard background probabilistic notation  entropy hash polynomial rational function derivative proceed somewhat nonstandard definition efficient representation generalize arithmetic circuit probabilistic notion statistical distance  function negligible constant sufficiently neg denote unspecified negligible function sequence overwhelm probability neg distribution finite domain denote statistical distance distribution identically distribute denote distribution ensemble statistically indistinguishable denote neg ensemble computationally indistinguishable denote polynomial circuit neg entropy integer denote ary entropy function define  logq min entropy random variable  finite domain define minx supp jointly distribute random variable define predictability pred maxa maximum inefficient algorithm verify strategy output heaviest conditional distribution hence pred def max uniform variant  however positive secure computation nonuniform version simplifies treatment auxiliary input latter composition theorem goldreich chapter journal acm vol article publication date april arithmetic cryptography logarithmic version predictability capture average min entropy def pred useful variant markov inequality average min entropy apply function random variable lose information conditioning random variable output reduce average min entropy possibly correlate random variable YW XW YW XW denote joint distribution prx function furthermore randomize function internal random coin statistically independent proof definition YW XW hence markov inequality YW XW item logarithm predicts probability define predicts probability hence pred pred finally item lemma hash keyed function pairwise independent hash function prk generalization leftover hash lemma pairwise independent hash function extract randomness source average min entropy lemma  ET AL pairwise independent hash function jointly distribute random variable distribute journal acm vol article publication date april polynomial rational function notation denote finite vector notation denote vector denote nonzero vector coordinate notation denote inner vector scalar vector scalar multiplication bold font emphasize distinction formal variable assignment multivariate monomial variable finite define   positive integer multivariate polynomial sum monomials formal polynomial naturally induces function polynomial formally equivalent denote compute formal polynomial monomial coefficient clearly correspond function converse direction characteristic standard upper bound polynomial lemma nonzero polynomial therefore probability random rational function polynomial zero polynomial rational function maximum constituent polynomial partial function undefined rational function denote input define function formally equivalent denote polynomial formally equivalent clearly correspond function converse direction application schwartz zippel lemma derivative proceed standard definition formal derivative multivariate polynomial rational function finite useful comprehensive treatment derivative finite   oppose euclidean finite distance notion limit infinitely hence instead define partial derivative via limit euclidean finite derivative polynomial rational function formal notion derivative define  definition extend polynomial additivity rational function derivative throughout article formal derivative sufficiently characteristic strictly underlie polynomial formal derivative inherit standard derivative polynomial constant derivative zero function apply exceeds characteristic demonstrate nonzero polynomial formal derivative zero function journal acm vol article publication date april arithmetic cryptography definition partial derivative finite monomial   formal partial derivative respect define monomial cia xci  partial derivative polynomial define sum derivative monomials partial derivative rational function define xiv xiu partial derivative polynomial rational function respectively polynomial rational function respectively verify derivative equivalent rational function equivalent vector rational function variable denote vector normal font variable bold font specific notation refers partial derivative respect evaluate definition formal jacobian vector rational function variable finite jacobian matrix matrix formal derivative entry denote partial derivative evaluate subset input variable denote submatrix contains correspond variable standard chain apply formal derivative rational function finite rational FUNCTIONS rational function variable finite chain vector rational function variable finite vector rational function variable efficient throughout article finite efficient representation operation efficiently computable define boolean circuit implement definition circuit implementation boolean circuit input operation constant zerocheck sample bitsample appropriate encode binary valid implementation finite injective mapping label operation label label label correspond operation constant label constant label label zerocheck label journal acm vol article publication date april label zerocheck label sample implement uniform distribution label bitsample implement uniform distribution label definition efficient polynomial boolean circuit implement circuit implement uniform ppt implement output negligible probability circuit implement per definition defines probability distribution finite distribution efficient implementation interchangeably moreover omit subscript context efficient sequence prime implement GF nonuniform boolean circuit uniform definition capture ppt adversary chooses random prime output circuit implement GF variant correspond standard distinction uniform nonuniform adversary remark sensitive uniformity issue specifically negative adversary uniform positive uniform nonuniform adversarial model underlie assumption arithmetic circuit arithmetic circuit circuit gate perform arithmetic operation circuit respect representation access representation addition standard arithmetic operation zero although arithmetic operation meaningful scheme equality cannot recognize operation model randomize arithmetic circuit randomize gate sample gate underlie uniformly random bitsample gate uniformly random contains zero definition arithmetic circuit arithmetic circuit acyclic graph input gate source label input variable constant randomize gate sample bitsample internal gate label zerocheck arithmetic circuit input variable output variable induces randomize mapping CF furthermore implementation naturally induces boolean circuit CF implement mapping CF representation CF CF interchangeably context throughout circuit assume default polynomial uniformity exist ppt turing machine input output description occasionally restrict arithmetic circuit subset gate notably deterministic arithmetic circuit sample bitsample gate deterministic arithmetic circuit without zerocheck gate compute rational function deterministic arithmetic circuit without zerocheck gate compute polynomial refer journal acm vol article publication date april arithmetic cryptography latter restrict circuit strictly arithmetic circuit efficiently compute derivative deterministic arithmetic circuit without zerocheck gate deterministic arithmetic circuit variable without zerocheck gate correspond rational function construct circuit evaluates partial derivative construct polynomial operation derivative circuit zerocheck gate define circuit compute rational function circuit approximate arithmetic circuit without zerocheck gate specifically useful bound proposition  zerocheck  deterministic arithmetic circuit zerocheck gate zero GF prime cardinality exists deterministic arithmetic circuit without zerocheck gate strictly arithmetic circuit computes polynomial satisfy obtain replace ith zerocheck gate constant gate furthermore ith zerocheck gate evaluates input computes polynomial computes rational function formally equivalent exists probabilistic algorithm output probability circuit poly proof circuit define repeatedly apply subroutine zerocheck gate accord topological function compute incoming zero function replace gate constant zero otherwise replace gate constant zero fails function ith iteration compute zerocheck circuit therefore rational function numerator denominator bound furthermore none identically zero otherwise circuit zero apply input standard technique   proof thm extract strictly arithmetic circuit computes respectively nonzero nonzero otherwise moreover sequence induces zerocheck gate circuit corresponds exactly constant replace gate derive item furthermore fourth item uis identically zero via standard polynomial identity algorithm evaluate poly random accept outcome zero item uis polynomial schwartz zippel lemma union bound input assumption computes polynomial journal acm vol article publication date april recall compute circuit therefore numerator denominator upper bound function formally equivalent indeed polynomial nonzero polynomial contradicts schwartz zippel lemma attack variant zerocheck removal procedure definition algorithm algorithm input arithmetic circuit define prime algorithm evaluates circuit replaces zerocheck gate constant constant induces output zerocheck circuit circuit  composition arithmetic circuit inner outer assume apply separately lemma random sufficiently compose circuit computes importantly attack chain applies correspond derivative lemma strictly arithmetic circuit deterministic arithmetic circuit agrees function input prime max proof circuit obtain compose proposition fix function formally equivalent definition circuit derivative equation apply chain yield fix denote polynomial compute LHS rational function compute RHS goal fix boil define denominator vanish define guarantee derivative rational function define derivative define journal acm vol article publication date april arithmetic cryptography cryptographic  arithmetic setting define arithmetic version cryptographic primitive reader skip refer later appropriate denote security parameter pseudorandom generator definition arithmetic pseudorandom generator APRG definition APRG output pseudorandom allows input random random discus choice later definition arithmetic pseudorandom generator APRG  sequence polynomial arithmetic circuit  output vector random gate random sample random deterministic input gate APRG arithmetic pseudorandom generator satisfies expansion refer ratio expansion factor difference additive expansion pseudorandomness probability efficient adversary pseudorandomness neg security parameter adversary implementation sends challenger challenger sample challenger sends adversary sample  challenger sends adversary sample adversary output APRG zerocheck gate random sometimes APRG mapping randomness sample random gate output denote APRG consist random random encryption scheme define arithmetic version encryption scheme goldreich chapter treat public symmetric unified definition arithmetic encryption scheme KGen KGenn enc  dec  uniform sequence poly arithmetic circuit KGen enc dec arithmetic public encryption scheme correctness message KGenn DecF EncF neg probability choice randomness circuit EncF DecF computational security efficient adversary probability ind cpa neg journal acm vol article publication date april ind cpa adversary receives chooses sends challenger challenger sample KGenF adversary chosen plaintext query repeatedly adversary request adversary sends challenger responds EncF adversary sends challenger sample responds EncF adversary output symmetric corresponds challenger pas adversary scheme secure secure adversary chosen plaintext query arithmetic symmetric encryption scheme security arithmetic binary encryption secret subset essentially sequence remark encrypt message previous definition assumes message contains naturally extend definition longer vector fix unbounded binary cpa secure construction message easily extend encrypt sequence encrypt separately randomness katz  commitment noninteractive commitment scheme parameterized public chosen trust reference CRS definition statistically binding commitment scheme KGen KGenn com  ver  uniform sequence polynomial arithmetic circuit denote output circuit  commitment decommitment KGen com ver statistically binding commitment scheme correctness message KGenF   neg probability randomness circuit   statistically binding overwhelm probability choice KGenF commitment   computationally hiding efficient adversary probability neg ind cpa receives chooses sends challenger challenger sample KGenF adversary journal acm vol article publication date april arithmetic cryptography adversary chooses challenger sample computes  sends adversary output without loss generality assume  consists internal randomness committer sequence zero convention output  denote commitment remark CRS variant CRS variant commitment syntactically noninteractive commitment function parameterized public generate generation algorithm however hiding adversarially chosen public message commitment protocol standard model CRS receiver chooses public randomize encode function formalize arithmetic garble circuit via framework randomize encode function roughly deterministic function encode randomize arithmetic function input distribution induced internal randomness reveals definition arithmetic randomize encode polynomial strictly arithmetic circuit input polynomial randomize arithmetic circuit   deterministic arithmetic circuit dec  randomize encode perfect correctness DecF probability randomness encode circuit computational security  ppt probability neg adversary chooses implementation sends challenger challenger sample sends adversary output remark mention security typically formalize via simulation definition however bound weaker security definition restrict encode function compute strictly arithmetic circuit arithmetic circuit addition multiplication gate whereas encode arbitrary arithmetic circuit bound without efficiency restriction encoder notion randomize encode becomes trivial simply syntactic efficiency requirement motivate application journal acm vol article publication date april decomposable randomize encode decomposable encode application distinguish online output depends input vector offline output depends randomness encode emphasize distinction splitting function denotes outcome random gate randomize encode dec fully decomposable output encoder depends input vector xˆn emphasize encode depends input define weaker decomposability suppose encode function define input vector encode dec decomposable output depends arbitrarily usually denote clarify encode depends input notion corresponds PSM model described introduction illustration decomposable encode depict secure computation arithmetic functionality arithmetic functionality described sequence polynomial arithmetic circuit input output gate label alice bob simplicity deterministic functionality assume alice bob exactly input assumption without loss generality goldreich proposition implementation input alice bob respectively denote output alice bob respectively arithmetic protocol arithmetic protocol uniform polynomial arithmetic circuit indexed input randomness alice bob alice bob respectively respectively carol addition carol offline phase carol decoder without anything journal acm vol article publication date april arithmetic cryptography circuit interact via interaction gate gate unbounded fan fan gate unbounded fan zero fan gate assume topologically assume gate align odd numbered interaction gate gate numbered interaction gate gate vice versa semantically assume ith gate corresponds ith gate input implementation protocol naturally defines joint computation input output output output output output output output output execution input denote random variable consists deterministic random input message define similarly denote semihonest model definition semihonest secure computation deterministic functionality arithmetic protocol privately computes deterministic functionality efficient correctness output neg privacy exist probabilistic polynomial algorithm sim sim sim sim definition allows simulator non nevertheless construction simulator define arithmetic circuit access underlie bound weaker version semihonest security detail partial functionality finite functionality input sometimes partial functionality input binary aforementioned requirement adopt index ensemble appropriate input furthermore finite functionality oblivious transfer incorporate security parameter input functionality input alice input bob implicit convention guarantee input pad privacy reduction define secure reduction hybrid model protocol augment oracle arithmetic functionality standard protocol invoke trust securely input correspond journal acm vol article publication date april output formally circuit equip gate ith gate input input return output instantiate functionality instantiate notion private computation definition generalizes protocol augment oracle private reduction arithmetic functionality arithmetic functionality protocol oracle access functionality privately realizes functionality appropriate composition theorem goldreich thm guarantee replace private protocol realize without violate privacy highlevel protocol malicious model define arithmetic secure computation malicious ideal paradigm convention honest model arithmetic circuit malicious polynomial binary circuit formally arithmetic protocol securely realizes arithmetic possibly randomize functionality malicious securely realizes efficient binary protocol securely realizes binary functionality completeness briefly review standard definition maliciously secure computation binary model goldreich chapter detailed concrete definition functionality possibly randomize mapping input output protocol formulate requirement securely computes ideal adversary attack alice probabilistic polynomial circuit internal data alice addition message alice interaction adversary output arbitrary function consists input random coin toss incoming message corrupt input auxiliary input adversary aux output define random variable concatenation adversary output output identity uncorrupted denote output  aux adversary attack bob define similarly  aux denote output ideal ideal incorruptible trust employ compute functionality protocol ideal instructs input trust computes functionality sends output interaction adversary  attack alice simb attack respectively ideal output ideal define analogously previous definition adversary abort message possibly output trust sends abort message honest halt abort adversary attack ideal refer simulator denote output ideal input auxiliary input aux ideal  aux ideal simb aux respectively journal acm vol article publication date april arithmetic cryptography definition maliciously secure computation protocol securely realize functionality probabilistic polynomial circuit attack alice attack bob respectively exists probabilistic polynomial circuit simulator  attack alice simb attack bob respectively ideal  aux aux poly ideal  aux aux poly similarly bob  aux aux poly ideal simb aux aux poly arithmetic protocol securely realizes arithmetic possibly randomize  functionality efficient binary protocol securely realizes binary functionality secure reduction malicious model define analogously private reduction semihonest model lower BOUNDS cryptographic primitive cannot realize arithmetic dedicate  circuit formalize framework randomize encoding discus communication bound secure computation protocol devote homomorphic encryption    encoding recall deterministic function encode decomposable randomize arithmetic function input distribution induced random choice internal randomness reveals relevant definition arithmetic decomposable encode communication encode output theorem exists arithmetic function output decomposable arithmetic randomize encode  function consists contrast binary yao garble circuit construction efficiently computable function decomposable encode  security parameter arbitrary constant fully decomposable encode online complexity roughly input output theorem assume existence binary prg exists arithmetic function fully decomposable arithmetic randomize encode xˆn online complexity xˆi binary yao garble circuit construction efficiently computable function fully decomposable encode journal acm vol article publication date april xˆn online complexity xˆi arbitrary constant proof theorem overview outline sketch introduction roughly exploit correctness dec argue sufficiently fix randomness circuit dec compute rational function therefore chain input variable dec hence dec encode deduce span dec communication information violates privacy properly chosen function argument assumes dec compute rational function derivative define encoder decoder dec zerocheck gate cope apply robust zerocheck removal algorithm definition proceed formal proof theorem proof theorem function scalar vector assume contradiction dec decomposable arithmetic depends security via adversary omit underlie security parameter context adversary prime max   GF standard implementation challenger sample sample compute challenger encode define circuit  compute zerocheck arithmetic circuit output span otherwise output valid adversary distinguishes advantage neg challenge challenger sends sample randomly chosen adversary accepts probability neg proof fix randomness challenger fix denote circuit   outcome apply due decomposability independent syntactically journal acm vol article publication date april arithmetic cryptography perfect correctness decomposability hence lemma neg conclude  neg challenge challenger sends sample randomly chosen adversary accepts probability proof fix randomness challenger uniformly distribute denote matrix  input matrix dimension span vector span output probability upper bound overall probability neg neg theorem proof theorem prg   pseudorandom generator binary transform boolean circuit computes arithmetic circuit substitute gate gate abuse notation  denote transform circuit input circuit consists functionality preserve specifically random vector prg consists pseudorandom sequence theorem function matrix consists generate prg assume contradiction encode fully decomposable arithmetic randomize encode decoder dec shorter fully decomposable xˆn conclude average argument xˆi shorter exploit binary prg specifically define adversary adversary prime max   GF parse challenge journal acm vol article publication date april sample random fix default sample randomness encode  compute dec dec output   otherwise output analysis adversary adversary accepts probability neg pseudorandom prg adversary rely security encode arbitrary later random accepted probability conclude prg fix overwhelm probability   prg dec dec proof  perfect correctness dec hence lemma overwhelm probability dec circuit output dec circuit output dec circuit unknown attacker circuit exists fix xˆn output depends  encode decomposable hence derive respect entry correspond output  vanish previous equation therefore simplifies  restriction output  recall completes proof analyze probability accepts pseudorandom neg  proof assume contradiction adversary accepts prg probability nonnegligible adversary attack computational privacy randomize encoding adversary prime max   GF standard implementation challenger sample prg journal acm vol article publication date april arithmetic cryptography sample prg challenger input challenge dec dec output   otherwise output agrees input input valid adversary output overwhelm probability probability return exactly probability accepts prg indeed uniform overall advantage assumption nonnegligible contradict computational privacy randomize encode encode shorter random binary unlikely accepted previous proof dimension argument  proof shorter  shorter focus fix randomness   indeed dec output  xˆi matrix xˆi exists nontrivial vector kernel xˆi denote nonzero coordinate namely vector  establish equation orthogonal unique vector orthogonal  denotes jth vector jth coordinate coordinate indeed overall accepts random bitstrings probability pseudorandom probability neg security prg arithmetic multiparty computation bound online communication secure computation arithmetic model definition secure computation privacy minimal secure computation privacy restriction bound specifically functionality receives output namely alice input bob input alice functionality without anything journal acm vol article publication date april security bob everything notion security formalize later recall arithmetic protocol uniform  arithmetic circuit communicate via gate recall input output denote output denote latter random variable consists deterministic random input message formal definition definition arithmetic computation semihonest security arithmetic protocol   realizes deterministic functionality privacy correctness input output privacy semihonest alice polynomial turing machine adversary exists probabilistic polynomial turing machine sim adversary probability neg adversary implementation input  output challenger sample return sim adversary output previous definition uniform input chosen uniform adversary bound clearly trivial protocol achieves privacy alice sends input bob computes function return alice protocol alice receives  output exchange arbitrary message offline phase online offline mpc without loss generality assume protocol alice bob format alice bob randomness respectively offline phase mpc protocol denote transcript message alice offline phase offline phase alice receives input bob receives input exchange message denote message bob denote incoming online communication complexity alice simplicity assume amount depends security parameter message protocol alice algorithm output protocol refer algorithm decoder dec online communication bob alice output bound applies strictly arithmetic zerocheck gate bitsample gate simply computes polynomial journal acm vol article publication date april arithmetic cryptography bound relies existence arithmetic pseudorandom generator definition recall output APRG pseudorandom input random random later APRG polynomial construct RLC assumption constant rate constant rate furthermore APRG zerocheck gate random theorem assume existence arithmetic prg arbitrary constant strictly arithmetic function fnc cannot realize semihonest security arithmetic protocol incoming online communication complexity alice shorter remark multiparty bound communication applies multiparty honest majority indeed protocol role alice bob server input output immediately yield protocol semihonest security semihonest secure coalition proof theorem later lemma existence APRG implies existence APRG output APRG arithmetic function APRG random gate input gate sample random convention whenever random chosen chosen distribution binary input chosen random APRG pseudorandom however pseudorandomness function  guaranteed sample distribution function APRG alice input function bob proof APRG strictly arithmetic prg computational privacy mpc protocol online communication bob alice strictly shorter define adversary computational privacy mpc protocol previous subscript denote fix input distinguisher GF prime upper bound accumulate circuit alice bob dec circuit computes sample sample random APRG compute APRG challenger implementation input challenge procedure  define denote computation decoder fix  compute zero removal procedure define definition  return otherwise return sample accord alice challenge zero return overwhelm probability journal acm vol article publication date april hybrid distribution sample random APRG sim sim output avoid clutter modification respect previous distribution sample distribution output tuple sim challenge errs output probability neg fix fix randomness  neg output APRG define  proof fix arithmetic circuit output denotes bob online message correspond input circuit obtain compose subcircuits alice bob therefore perfect correctness mapping APRG strictly arithmetic therefore apply lemma neg definition plug definition yield overwhelm probability adversary return overwhelm probability adversary return probability neg focus  subroutine analyze acceptance probability  hybrid distribution distribution corresponds distribution hybrid distribution define   proof fix coin simulator arbitrary matrix therefore span journal acm vol article publication date april arithmetic cryptography vector distribute uniformly independently probability upper bound proof proof proceeds via hybrid argument indeed distinguisher distribution construct adversary APRG input adversary sample return sim receives input sample APRG random sample random sample hence APRG advantage distinguishes distribution verify identically distribute uniformly distribute combine conclude  neg  challenge adversary output probability neg recall adversary output probability neg overall probability neg computational privacy mpc protocol homomorphic encryption homomorphic encryption scheme arithmetic model relatively operation scalar multiplication ciphertext addition explain introduction attack rely reduction arithmetic predictability define efficiently proof defer homomorphic encryption define attack algorithm arithmetic predictability define arithmetic predictability denote APd parameterized bound proximity parameter entropy gap prime defines GF definition arithmetic predictability APd arithmetic circuit output input additional target polynomial arithmetic circuit distinguish exists possibly inefficient rational function nonzero polynomial journal acm vol article publication date april exists probability distribution recall average min entropy random variable random variable logarithmic probability parameter briefly explain role parameter starter polynomial denominator nonzero scalar focus instance probability perfectly predictable denotes uniform distribution denominator polynomial predictor ignore input zero hence weakens predictability instance allows richer predictor parameter unpredictability instance extreme random variable completely unpredictable cannot probability weaken instance predictable binary version previous denote gap context bound pac indeed joint distribution dimensional label instance learnable possibly inefficient learner instance information theoretic  AP closely related estimate entropy distribution sample circuit goldreich  binary circuit arithmetic circuit binary variant  admit statistical zero knowledge proof intractable AP APd efficiently solvable input circuit poly instance instance error probability sufficiently efficiently recall strictly arithmetic circuit bitsample gate sample gate zerocheck gate gate recall generalize arithmetic circuit gate assume target polynomial strictly arithmetic circuit attack theorem APd efficiently input strictly arithmetic circuit compute polynomial remark parameter unpredictability oppose unpredictability parameter notion robust crucial journal acm vol article publication date april arithmetic cryptography input generalize arithmetic circuit input strictly arithmetic circuit internal random gate sample assume probability distribution equation define internal randomness addition random choice proof outline via algorithm random jacobian span gradient target polynomial analysis technique defer useful attack input strictly arithmetic circuit via sequence randomize karp reduction proof apply theorem theorem extends inverse polynomial expense exp remark later attack arithmetic homomorphic encryption suffices APd negligible zero poly exponentially prime however respect generalize arithmetic circuit gate zero gate sample gate via reduction strictly arithmetic parameter attack statistical scalar multiplicative homomorphic encryption recall arithmetic encryption scheme define triple KGen enc dec KGen KGenn enc  dec  uniform sequence polynomial arithmetic circuit definition assume KGenn output additional evaluation security adversary security assume scheme satisfies notion homomorphic evaluation definition scalar multiplicative homomorphic evaluator statistical scalar multiplicative homomorphic evaluator encryption scheme KGen enc dec uniform sequence polynomial randomize arithmetic circuit   input ciphertext message scalar evaluation satisfy negligible KGenF correctness message probability ciphertext  EncF decrypts correctly DecF implicitly upper bound input output therefore without explicit bound journal acm vol article publication date april statistical homomorphism message random variable  EncF EncF statistical distance  weak scalar multiplicative homomorphic evaluator statistical homomorphism replace weak homomorphism message random variable  EncF EncF statistical distance arithmetic encryption statistical scalar multiplicative homomorphism weak symmetric encryption security assume without loss generality scheme perfectly contrast later weak multiplicative homomorphism achieve arithmetic model RLC assumption theorem constant secure symmetric encryption scheme statistical scalar multiplicative arithmetic model proof upper bound circuit homomorphic evaluator  circuit decryption algorithm attack scheme suffices APd sufficiently specifically attacker receives chooses prime sends implementation GF challenger evaluation KGenF adversary chooses message sends challenger ciphertext encrypts adversary defines randomize arithmetic circuit pek  strictly arithmetic circuit theorem classify instance instance APd output otherwise output fix chosen KGenF satisfy correctness statistical homomorphism definition recall happens negligible probability analyze probability suffices encryption pek instance encryption pek instance encryption correspondingly pek output encryption perfect correctness decryption algorithm without loss generality decryption algorithm deterministic encryption output randomness decryption ciphertext scheme negligible decryption error perfectly scheme encryption algorithm ciphertext decrypts correctly error replace ciphertext unencrypted message encryption flag transformation incurs negligible loss security journal acm vol article publication date april arithmetic cryptography  dec satisfies  pek apply proposition  exists rational function compute zerocheck circuit polynomial  rational function function certifies pek instance pek satisfies finally denominator  upper bound encryption pek instance indeed pek output ciphertext homomorphism statistical message random variable  EncF EncF conclude pek uniform statistically independent EncF pek instance theorem remark theorem positive application typically strive statistical homomorphic encryption negligible error parameter theorem therefore negative applies constant similarly theorem bound arbitrary inverse polynomial public extend theorem statistical homomorphism define definition applies noticeable evaluation public indeed attack described proof theorem succeed noticeable scheme broken apply vulnerable random statistical homomorphism strategy efficiently implement efficiently probability chosen challenger vulnerable attack dummy ciphertexts decryption attack succeed extension cpa secure symmetric encryption encryption oracle evaluation vulnerable finally attack generalizes decryption algorithm possibly inefficient polynomial poly extension handle restrict arithmetic commitment scheme statistical multiplicative homomorphism inefficient decryption attack additive homomorphic encryption theorem statistical homomorphism scalar multiplication assumes homomorphic evaluator generates ciphertexts statistically ciphertexts generate via encryption algorithm journal acm vol article publication date april weaker homomorphism refer multihop application homomorphic evaluator preserve correctness extend expense powerful homomorphic operation specifically encryption homomorphic addition ciphertexts addition multiplication unencrypted scalar definition multihop additive homomorphic encryption  encryption scheme KGen enc dec multihop additively homomorphic exists uniform sequence polynomial randomize arithmetic circuit    negligible KGenF multihop ciphertext decrypts DecF scalar probability DecF  DecF  multiplication  scalar  powerful fully homomorphic encryption moreover requirement regard distribution homomorphically generate ciphertexts theorem semantically secure multihop additively homomorphic symmetric encryption scheme arithmetic model proof upper bound circuit homomorphic addition multiplication circuit decryption algorithm latter upper bound ciphertext attack scheme suffices APd neg convenient attack multiple message variant ind cpa challenge consists polynomially vector message katz  chapter notion equivalent message variant ind cpa definition verify equivalence arithmetic attacker denote homomorphic addition denote homomorphic multiplication ciphertext unencrypted scalar omit readability dependency security parameter evaluation receives chooses prime sends implementation GF challenger evaluation KGenF adversary sends challenger message vector consists random message zero vector vector ciphertexts encrypts adversary defines generalize arithmetic circuit pek formal input pek homomorphically computes inner plaintexts correspond plaintext vector adversary defines journal acm vol article publication date april arithmetic cryptography strictly arithmetic output circuit  circuit adversary theorem classify instance instance APd output otherwise output proof theorem fix chosen KGenF satisfy correctness definition encryption vector circuit pek output encryption plaintext output target circuit argument theorem pek instance conclude proof suffices encryption pek probability choice instance jointly distribute random variable pek pek consists entry hence item unpredictability pek pek encryption zero pek statistically independent finally computes pairwise independent hash function therefore equation compose leakage pek source hash function apply source generalize hash lemma triple statistical distance triple pek markov inequality pek pek neg pek instance theorem remark verify proof theorem existence homomorphic encryption allows compactly evaluate inner latter polynomial homomorphic evaluator vector plaintexts vector ciphertexts encrypts plaintexts ciphertext decrypts consists proof theorem output jacobian span gradient target polynomial underlie without compactness constraint homomorphism becomes trivial useless homomorphic evaluator simply output ciphertexts actual computation decryptor journal acm vol article publication date april rational function vector kayal corollary checked efficiently error via randomize algorithm algorithm random vector output matrix span vector analyze algorithm instance input instance algorithm output probability proof assume input instance namely variate rational function zero denominator  LHS upper bound polynomial RHS upper bound sufficiently  lemma rational function equivalent therefore chain lemma  treat vector hence vector zero denominator pas algorithm output denominator zeroed probability recall denominator polynomial upper bound polynomial hence schwartz zippel lemma random zero probability choice parameter instance originally rational     ET AL GF tuple polynomial prime jacobian linearly dependent rational function exists polynomial furthermore direction guaranteed remark direction polynomial  refer  polynomial existence corresponds classical notion algebraic dependence instance jacobian span gradient target polynomial rational function input instance span proof assume contradiction span without loss generality assume linearly independent otherwise journal acm vol article publication date april arithmetic cryptography minimal subset polynomial jacobian span instance subset polynomial exists anneal polynomial furthermore linearly independent polynomial anneal polynomial polynomial assume instance exists distribution derive contradiction inefficient distinguisher vector distinguisher accepts input definition accepts image therefore analyze acceptance probability fix denote distinguisher accepts namely def indeed maximal integer nonzero polynomial promise equation polynomial hence schwartz zippel lemma prx fix residual polynomial nonzero polynomial equation marginals equation implies recall markov inequality item combine equation apply union bound random probability finally journal acm vol article publication date april hence distinguisher accepts probability overall distinguish advantage plug obtain distinguish advantage finally remains span random matrix span standard matrix polynomial vector polynomial jacobian span rational function prx span proof matrix obtain subset basis matrix rank span strictly define matrix remove arbitrary define remove correspond entry span span span hence suffices matrix polynomial likely nondegenerate evaluate random indeed det det det polynomial corresponds determinant compute rational function inequality schwartz zippel nonzero polynomial nondegenerate combine conclude instance accepted probability completes proof theorem proof theorem proof sequence karp reduction generalize arithmetic circuit strictly arithmetic circuit remove random gate remove sample gate sample uniform bitsample gate sample uniform handle easy sample gate additional input gate formally denote sample gate denote outcome sample gate fix circuit sample gate furthermore verify instance instance respectively bitsample gate slightly complicate strictly arithmetic circuit arithmetic circuit bitsample gate denote arithmetic circuit obtain fix bitsample gate lemma  bitsample  instance APd instance APd journal acm vol article publication date april arithmetic cryptography instance APd probability instance APd proof item definition indeed instance APd therefore instance APd probability instance mapped instance uniform distribution instance exists distribution joint distribution define random variable jointly distribute distribution specifically randomize mapping uniformly sample output recall identically distribute definition hence equation notation jointly distribute XY denote distribution satisfies equation indeed instance APd satisfies equation respectively denotes distribution respectively respectively proof markov inequality suffices distinguisher  distinguisher maximizes distinguishers quantity statistical journal acm vol article publication date april distance rewrite difference upper bound difference randomize function sample output marginals difference upper bound completes proof equation random satisfies equation probability random satisfies equation probability lemma conclude random satisfies equation probability overall union bound random likely probability establish lemma remove zerocheck gate zerocheck gate lemma  zerocheck  exists poly computable probabilistic mapping arithmetic circuit zerocheck arithmetic circuit strictly arithmetic circuit instance APd probability instance APd journal acm vol article publication date april arithmetic cryptography instance APd probability instance APd removal zerocheck gate mapping zero output arbitrary reduction regardless behavior circuit proof zerocheck removal procedure define proposition recall procedure output probability zerocheck circuit Pˆ strictly arithmetic circuit computes polynomial Pˆ input Pˆ define zerocheck circuit input output output compute Pˆ output polynomial Gˆ input variable intuitively random Gˆ contains information signal Pˆ analyze procedure instance assume algorithm proposition succeed instance APd Pˆ Gˆ instance APd proof instance exists nonzero polynomial define input variable extend polynomial additional input variable via Pˆ Gˆ Pˆ Gˆ Pˆ Gˆ Pˆ Gˆ Pˆ Pˆ equality Gˆ equality Pˆ equality assumption overall equality zero denominator Pˆ Gˆ finally analyze instance instance APd Pˆ Gˆ instance APd proof instance distribution distribution distribution journal acm vol article publication date april obtain concatenate independent uniform independent item Pˆ Gˆ hybrid random variable output tuple random variable distribute identically Pˆ Gˆ  happens probability therefore distribution addition verify distribution indeed obtain via randomize mapping derives transitivity statistical distance Pˆ Gˆ completes proof lemma remove gate lemma   exists efficiently computable deterministic mapping arithmetic circuit arithmetic circuit strictly arithmetic circuit instance APd instance APd instance APd instance APd proof assume ith output described circuit arithmetic circuit compute polynomial without loss generality arithmetic circuit transform expense increase factor   proof thm define instance target polynomial modify input variable formally redefine instance instance instance instance assume exists define rational function output construction denominator indeed instance APd  denominator polynomial variable journal acm vol article publication date april arithmetic cryptography analyze instance assume distribution distribution randomize mapping vector sample output vector  verify distribution distribute identically finally item hence instance APd lemma theorem employ lemma reduce instance APd strictly arithmetic instance APd apply theorem detail arithmetic circuit strictly arithmetic circuit transform strictly arithmetic circuit sample gate input gate remove bitsample gate apply lemma remove zerocheck gate apply lemma remove gate apply lemma circuit input output instance probability instance APd instance probability instance APd sufficiently therefore theorem guarantee algorithm decides instance instance APd error poly error obtain via standard amplification technique output overall instance correctly probability instance correctly probability previous procedure poly independent randomness output iteration output err instance probability err instance probability completes proof theorem positive RESULTS construction cryptographic primitive arithmetic model introduce RLC assumption construction construction arithmetic pseudorandom generator symmetric public encryption commitment protocol secure computation explain introduction alternative construction approach abstract primitive arithmetic binary encryption allows import binary construction arithmetic approach adopts lpn construction arithmetic reduction approach exploit classical cryptographic transformation arithmetic variant remark adversarial model nonuniform model efficient adversary denote probabilistic polynomial binary journal acm vol article publication date april circuit choice simplify presentation easily adopt uniform model RLC assumption RLC assumption asserts noisy codeword random linear code pseudorandom notation integer denote probability distribution coordinate zero probability random probability context omit denote probability distribution parameter  denote correspond distribution ensemble assumption RLC security parameter parameter parameter RLC assumption asserts efficient adversary probability neg ind receives chooses implementation sends challenger challenger sample challenge challenger sends uniformly chosen matrix vector challenger sends output remark RLC assumption equivalent assumption efficient error distribution efficiently sample negligible statistical distance arithmetic circuit receives input random random circuit chooses subset noisy coordinate sample independent bernoulli random variable implement binary circuit random input emulate arithmetic circuit input random noisy coordinate random assign overwhelm probability noisy coordinate implement random RLC become harder increase decrease proposition hence desirable assumption matrix proposition future reference proposition assume RLC assumption polynomially bound efficiently computable rate RLC efficiently computable RLC RLC arbitrary constant journal acm vol article publication date april arithmetic cryptography proof vector sample vector vector mapping sample distribution uniform distribution computable polynomial distinguisher RLC implies distinguisher RLC mapping input output matrix consists vector consists entry distribution DL uniform distribution uniform distribution FL FL computable polynomial distinguisher RLC implies distinguisher RLC mapping input sample FN return distribution uniform distribution uniform distribution FN therefore poly distinguisher RLC implies poly distinguisher RLC polynomial proposition arithmetic pseudorandom generator construct APRG arbitrary polynomial RLC assumption observation recall APRG  randomize circuit sample pseudorandom distribution randomize gate definition convention prg sample gate bitsample gate motivate application tolerate gate bitsample gate reduce via binary prg observation assume APRG  output pseudorandom per item previous definition gate sample random sample gate sample random bitsample constant exists arithmetic prg APRG APRG sample pseudorandom sample gate bitsample gate furthermore APRG zerocheck gate APRG proof binary prg pseudorandom APRG sample prg output instead bitsample gate outcome pseudorandom otherwise prg furthermore prg arithmetic  boolean logic replace multiplication finally existence binary prg hypothesis theorem indeed binary prg derive directly instantiate APRG sufficiently implementation guarantee random uniform uniform journal acm vol article publication date april completely eliminate bitsample gate existence arithmetic prg random expansion minimal APRG expands input output construct APRG polynomial expansion transformation standard transformation binary goldreich chapter lemma APRG expansion suppose exists arithmetic prg APRG additive expansion polynomial poly exists arithmetic prg APRG output denotes furthermore APRG APRG proof sketch assume wlog underlie APRG sample gate bitsample gate furthermore random gate APRG input gate accordingly APRG function construct function APRG output pseudorandom evaluate random input observation reduce binary input function APRG define iteratively compute parse output proof security standard hybrid argument define hybrid uniformly chosen iteration remain unchanged hybrid corresponds construction outcome hybrid clearly uniform indistinguishable distinguisher distinguishes distribution violate pseudorandomness challenge sample random location sample uniformly iteration construction output distinguisher distinguish advantage distinguisher lemma construction RLC arithmetic construction APRG RLC assumption recall RLC assumption asserts random matrix random vector error vector output pseudorandom assumption immediate construction APRG theorem assume RLC constant exists APRG arbitrary polynomial output proof circuit sample random matrix random vector computes sample described polynomial bitsample gate sample binary vector independent bernoulli random variable probability journal acm vol article publication date april arithmetic cryptography sample random location vector output zero vector chernoff bound latter happens probability distribution statistically RLC distribution pseudorandom assumption output generator pseudorandom random strictly upper bound output apply observation lemma APRG arbitrary polynomial output encryption construct arithmetic encryption scheme public symmetric RLC assumption construction secure symmetric encryption scheme encrypts binary arithmetic binary encryption scheme obtain cpa secure arithmetic encryption scheme symmetric public setting finally lpn construction  yield arithmetic symmetric encryption scheme public encryption scheme secure arithmetic binary encryption recall arithmetic binary encryption arithmetic symmetric encryption scheme security additional secret subset essentially sequence definition bridge binary model arithmetic model construction abe RLC assumption notation integer denote probability distribution coordinate probability construction arithmetic binary encryption parameterize construction constant constant security parameter parameter scheme consists circuit KGenn sample binary vector EncF sample output denotes vector entry wise DecF assignment variable satisfies linear restriction  coordinate output assign decryption implement  linear equation diagonal matrix  lemma establish correctness security scheme reader subsection denotes binary vector vector journal acm vol article publication date april lemma correctness KGenn DecF EncF neg proof linear equation decryption clearly valid equation exists vector  entry sum zero equation satisfies decryption succeed vector exists exponentially probability indeed equation satisfies equation uniquely via exist vector span  coordinate chernoff bound happens exponentially probability recall uniformly distribute conclude probability span vector negligible lemma lemma security constant suppose RLC assumption construction instantiate computationally secure proof assume contradiction efficient adversary  ind probability nonnegligible function define adversary RLC assumption adversary initialize challenger challenger sample challenge return otherwise return receives distribute random  assumption probability output security pad output probability exactly overall distinguishes nonnegligible advantage corollary constant assumption RLC exists abe scheme remark  parity assumption trivially information theoretic rate contrast journal acm vol article publication date april arithmetic cryptography RLC assumption nontrivial implies existence function constant indeed sufficiently entropy sample RLC instance roughly entropy output assumption immediately implies existence pseudorandom generator remark weak homomorphism interestingly construction weakly homomorphic addition multiplication ciphertext EncF message scalar ciphertext EncF compute homomorphism weak joint distribution statistically ciphertexts EncF EncF impossibility apply abe symmetric public encryption employ abe security obtain cpa secure arithmetic encryption scheme public symmetric combine abe standard binary encryption via hybrid mode construction    binary cpa secure encryption scheme symmetric public    abe arithmetic encryption scheme KGenn output  EncF sample  output   DecF compute  output  correctness directly correctness underlie binary encryption scheme abe scheme lemma security suppose    cpa secure public encryption scheme symmetric encryption scheme respectively    secure abe construction cpa secure public symmetric respectively arithmetic encryption scheme proof adversary attempt standard ind cpa analyze probability define II variant probability return interact ith neg cpa security binary encryption scheme challenge neg security arithmetic binary encryption scheme challenge neg cpa security binary encryption scheme challenge hybrid argument neg probability ind cpa neg journal acm vol article publication date april II hybrid  query stage challenge stage       challenge previous public adversary query stage private hidden adversary recall binary vector vector scalar remark encrypt message construction allows encrypt however scheme cpa secure extend encrypt sequence via standard concatenation explain remark combine previous corollary derive construction  public arithmetic encryption scheme RLC assumption standard binary public encryption scheme symmetric existence binary cpa secure encryption scheme already existence standard function RLC assumption remark overall obtain corollary corollary assume RLC constant constant exists cpa secure arithmetic symmetric encryption furthermore additionally assume existence standard public encryption scheme exists cpa secure arithmetic public encryption scheme construction symmetric encryption proceed construction symmetric encryption generalizes lpn construction although underlie assumption corollary scheme demonstrates lpn encryption  construction cpa secure symmetric encryption scheme parameterize construction constant security parameter parameter scheme consists circuit KGenn sample enc output denotes vector dec output majority entry vector majority operation compute  via zerocheck gate logical majority via arithmetic gate standard boolean basis replace multiplication subtraction explain exists arithmetic circuit sample construction realizable arithmetic model journal acm vol article publication date april arithmetic cryptography remark correctness otherwise correctness GF setting interested correctness replace restriction reed solomon RS error code instead repetition code RS code encode decode  modification allows construction seemingly secure assumption improve rate efficiency scheme RS code standard amortization technique described lemma security suppose RLC assumption polynomial constant construction instantiate computationally secure proof assume contradiction efficient adversary  probability nonnegligible function poly upper bound define adversary RLC assumption adversary initiate challenger challenger parse ith chosen plaintext query challenge sample challenge return otherwise return input sample RLC distribution dtn assumption probability output however ftn ftn message information theoretically hidden adversary output probability exactly therefore distinguishes dtn uniform distribution ftn ftn contradict assumption lemma correctness parameter define construction DecF EncF neg proof decryption fails noisy coordinate vector constant strictly chernoff bound latter happens probability corollary constant assume RLC polynomial exists ind cpa secure symmetric encryption scheme arithmetic model construction public encryption construction arithmetic public encryption scheme variant  binary cryptosystem underlie RLC assumption corollary journal acm vol article publication date april scheme lpn encryption  scheme weak correctness later amplify fledge scheme via standard technique construction cpa secure public encryption scheme security parameter KGenn sample vector compute denotes concatenation sample random matrix span ker MT MB enc sample output recall vector entry dec output fail otherwise compute output lemma correctness sufficiently KGenn dec enc fail neg fail probability successful decryption KGenn dec enc sufficiently proof ham multiplicative chernoff bound happens probability neg equation uniformly distribute zero probability equation output decryption algorithm equality MT therefore conclude decryption fix vector denote ham exp sufficiently denote previous scheme PKE security define variant PKE denote PKE public enc define PKE although define decryption algorithm PKE cpa security sample matrix span ker MT random invertible matrix journal acm vol article publication date april arithmetic cryptography define proof proceed RLC assumption PKE semantically secure lemma efficient KGenF computationally indistinguishable conclude construction semantically secure lemma suppose RLC PKE semantically secure proof assume contradiction efficient adversary  security PKE probability nonnegligible function public assume without loss generality adversary issue encryption query define adversary RLC assumption adversary initiate challenger challenger public sends challenge sample denote output return return message information theoretically hidden probability exactly output challenger uniform sample vector identically distribute enc probability output challenger RLC sample overall distinguish RLC assumption define assumption probability contradicts RLC assumption public PKE PKE computationally indistinguishable PKE PKE suppose RLC efficient adversary probability neg ind receives chooses sends challenger challenger sample KGenF define construction journal acm vol article publication date april hybrid distribution KGenn random matrix span ker MT output chosen readability modification respect previous hybrid distribution challenger sample sends output proof efficient distinguisher efficient output hybrid argument probability neg denote uniform distribution matrix rank define variant  algorithm hybrid corresponds KGen hybrid corresponds random hybrid indistinguishable KGenn distinguisher distribution immediately implies adversary ind RLC advantage random matrix rank probability neg clearly kernel random subspace dimension random matrix span uniformly distribute rank matrix previous argument statistically uniform matrix ensemble KGenn computationally indistinguishable uniform distribution hence distinguish probability neg security construction lemma security suppose RLC construction cpa secure proof assume contradiction adversary ind cpa construction probability nonnegligible adversary distinguishes random  random matrix adversary initiate challenger challenger public request encryption enc journal acm vol article publication date april arithmetic cryptography challenge sample enc return otherwise return lemma  probability neg assumption KGenF adversary probability nonnegligible hence overall ind probability neg nonnegligible advantage lemma via suffices RLC recall assume hardness RLC RLC however issue RLC implies RLC argue proposition building lemma amplification PKE scheme overwhelm probability previous construction polynomially decrypt decrypt via erroneous decryption algorithm ciphertext majority fail occurs probability overwhelm probability polynomially  decryption chernoff inequality overwhelm probability majority decryption output security harm execution randomness corollary assume RLC exists cpa secure public encryption scheme arithmetic model emphasize corollary arithmetic PKE weaker therefore assumption  construction statistically binding commitment scheme RLC assumption noninteractive construction reference model assume trust honestly generates invoke generation algorithm advantage construction homomorphic construction standard model prg construction naor  plug arithmetic prg RLC assumption noninteractive statistically binding commitment noninteractive statistically binding commitment scheme hardness parity RLC assumption generalize scheme arithmetic commitment scheme tuples construction CRS model assume KGen execute trust definition commitment scheme definition construction statistically binding commitment commitment scheme parameterized security parameter parameter parameter journal acm vol article publication date april arbitrarily constant algorithm commitment scheme KGenF public commitment consists matrix  commit message public sender sample computes commitment decommitment commitment  public commitment decommitment receiver computes output constant chosen satisfy inequality integer logq logq denotes ary entropy function equation recall equation establish correctness honest execution verifier accepts overwhelm probability indeed sample vector verification succeed probability chernoff inequality constant probability exceeds negligible security lemma suppose RLC assumption constant construction statistically binding computationally hiding commitment scheme proof generates code distance    chapter randomly chosen generate matrix span error code distance probability plug satisfies equation conclude overwhelm probability protocol statistically binding assume contradiction  commitment codeword contradiction hypothesis regard distance finally commitment scheme computationally hiding assume adversary hiding  nonnegligible advantage adversary RLC assumption adversary initiate challenger challenger sample adversary journal acm vol article publication date april arithmetic cryptography sample compute return return return otherwise probability exactly hence probability exactly  assumption hence probability overall ind RLC assumption nonnegligible advantage contradiction hypothesis corollary assume RLC assumption constant exists arithmetic commitment scheme CRS model CRS commitment protocol commitment scheme arithmetic analog naor commitment reference syntactically noninteractive commitment function parameterized public generate generation algorithm however hiding adversarially chosen public message commitment protocol standard model CRS receiver chooses public construction arithmetic pseudorandom generator  input output  denote explicitly output  consist random random construction CRS statistically binding commitment protocol commitment scheme parameterized security parameter APRG arithmetic prg expansion factor define protocol KGenF receiver publishes public  commit message public sender sample APRG computes  scalar multiplication decommitment  commitment public decommitment receiver output APRG protocol indeed realizes commitment scheme lemma assume pseudorandomness APRG scheme computationally hiding furthermore public chosen adversarially proof assume efficient malicious receiver hiding scheme chooses public distinguish definition probability nonnegligible adversary security APRG adversary invoke initialize distinguish APRG challenger sample commitment return output otherwise output journal acm vol article publication date april assumption random output APRG distribute identically honestly generate commitment probability nonnegligible hence return probability however hide information theoretically therefore probability exactly return probability exactly overall probability contradiction security APRG lemma overwhelm probability scheme statistically binding proof public ambiguous exist message APRG APRG happens prg APRG however consists vector probability random ambiguous negligible arithmetic prg expansion factor APRG lemma latter RLC assumption theorem obtain corollary corollary assume arithmetic prg exists arithmetic commitment protocol reference specifically RLC constant exists arithmetic commitment protocol reference secure computation securely compute arithmetic functionality arithmetic functionality arithmetic oblivious transfer oblivious linear evaluation eventually privately compute functionality described arithmetic circuit addition multiplication gate extend multiparty straightforward mostly focus semihonest adaptation malicious model sketch arithmetic oblivious transfer define arithmetic oblivious transfer via partial functionality receiver input selection security parameter sender input security parameter functionality delivers receiver  sender receives output empty standard binary variant functionality denote OT corresponds sender input binary poly abe privately reduce AOT standard binary OT construction standard transformation OT OT construction OT binary oblivious transfer protocol    arithmetic binary encryption scheme journal acm vol article publication date april arithmetic cryptography input sender input receiver scheme sender sample binary  binary OT protocol input recall ski binary sender sends receiver vector  ski receiver output   decryption fails output theorem assume abe construction privately reduces AOT standard binary OT underlie binary OT secure malicious AOT proof correctness construction immediately correctness binary OT correctness abe simulator sender trivial message simulator sim receiver generates corresponds message sender xth input input zero formally sim sample  computes ciphertexts  ski output tuple  security abe guarantee simulated indistinguishable combine construction corollary derive corollary corollary assume constant constant RLC assumption assume existence binary oblivious transfer protocol exists arithmetic AOT protocol latter assumption existence binary oblivious transfer protocol arithmetic AOT protocol immediately implies existence binary oblivious transfer alternative construction  PKE alternative construction AOT establish public  encryption scheme pseudorandom construction protocol described gen dec enc arithmetic circuit  PKE scheme define construction correctness scheme correctness underlie PKE scheme lemma privacy suppose RLC assumption construction privately realizes AOT functionality proof correctness correctness  PKE lemma simulator sender sim simply output random matrix input internal randomness pseudorandomness public establish simulated indistinguishable simulator receiver sim essentially replaces encryption zero formally journal acm vol article publication date april AOT  sim sample KGenn computes   output semantic security  encryption random implies simulated indistinguishable corollary assume RLC exists computationally secure AOT protocol semihonest model AOT oblivious linear evaluation oblivious linear evaluation ole functionality receiver sender delivers receiver sender assume security parameter ole via weakly homomorphic encryption obtain ole via weak homomorphic encryption specifically receiver encrypt sender homomorphically modify ciphertext ciphertext leak information  ole refresh ciphertext via subprotocol AOT instantiate approach abe construction remark generalization concretely recall encrypt message sample RLC distribution pad encode message encryption weak homomorphic namely ciphertext enc scalar compute ciphertexts valid encryption easy  vector random noisy coordinate remain correlate vector remove correlation receiver  coordinate AOT construction approach abstraction theorem assume RLC constant constant construction privately reduces ole AOT journal acm vol article publication date april arithmetic cryptography ole AOT proof ith coordinate satisfies equality hence distribute encryption private furthermore ciphertext statistically independent correctness correctness abe receiver perfectly simulated AOT hybrid model output sample protocol encryption matrix sender simulated sample protocol encryption zero uniform private security abe implies simulated indistinguishable combine corollary derive corollary corollary suppose constant RLC assumption standard OT exists exists arithmetic ole protocol semihonest model remark abstraction previous construction abstract rely abe weakly homomorphic ciphertext  scalar obtain ciphertext decrypts secure decryption decryption functionality  privately reduces AOT  functionality ciphertext sender journal acm vol article publication date april private receiver delivers  receiver construction outline private realization  tailor concrete abe alternative generic approach information theoretic arithmetic randomize encode specifically assume  admits fully decomposable randomize encode per definition decoder  privately reduces AOT via protocol ciphertext holder randomness encode encode depends ciphertext ith private AOT secret holder encode depends function compute arithmetic branching program admits  fully decomposable arithmetic randomize encode hence previous approach apply weakly homomorphic abe decryption algorithm implement polynomial branching program functionality protocol privately compute functionality described arithmetic circuit addition multiplication gate refer functionality strictly arithmetic functionality protocol arithmetic version binary construction goldreich chapter recall structure compute secretly input propagate circuit computes gate  compute secret output gate output reveal relevant secret reconstruction difficulty  compute output multiplication gate protocol functionality mult sender receiver correspond secret addition functionality target sender receiver corresponds formally relation privately reduce mult functionality ole construction mult protocol input sender receiver sender sample engage ole protocol sender sender input receiver receiver input denote output receiver engage ole protocol sender sender receiver receiver denote output receiver receiver output recall private computation refers semihonest model secure computation refers malicious model somewhat nonstandard formulation allows deterministic functionality journal acm vol article publication date april arithmetic cryptography lemma construction privately reduces mult ole proof correctness protocol assume correctness underlie ole privacy reduction construction ole simulator ole replace oracle simulation straightforward sender receives message simulation trivial receiver simulator output input verify simulated distribute identically receiver construction securely evaluate circuit construction private circuit evaluation arithmetic circuit contains addition multiplication gate input associate others execute protocol secret input secret input input sample sends input emulate circuit circuit evaluation compute gate output specifically gate outgo compute addition gate locally computes multiplication gate multiplication protocol construction input output protocol recover output output compute sends output output associate recovers correctness addition gate straightforward correctness multiplication gate correctness construction correctness entire protocol infer inductive argument privacy construction reduces construction proof sketch without loss generality simulator simulator input input denote output simulator secret secret honest sample uniformly random circuit evaluation evaluate addition gate honest multiplication gate sample output uniformly random output recovery output simulator input output secret denote compute previous output secret output simulation distribute identically output identically distribute journal acm vol article publication date april execution output output distribute exactly output multiplication gate uniformly random output exclude finally output generate deterministic function previous distribution hence affect distance simulation execution theorem functionality efficiently described arithmetic circuit addition multiplication gate privately reduces arithmetic ole construction reduction combine corollary derive corollary corollary suppose constant RLC assumption standard OT exists strictly arithmetic functionality privately compute arithmetic model corollary easily extend multiparty standard multiparty variant construction malicious model briefly sketch extension previous malicious model theorem implicit IPS compiler arithmetic protocol secure multiparty computation information theoretic security theorem assume existence semihonest secure computation strictly arithmetic functionality existence AOT malicious security strictly arithmetic functionality securely compute security malicious arithmetic model construction generalizes malicious theorem assume abe construction securely reduces malicious AOT standard binary OT combine theorem corollary corollary derive corollary corollary assume RLC constant assume existence standard OT strictly arithmetic functionality securely compute security malicious arithmetic model extend multiparty standard technique proof theorem reduce malicious security AOT security ideal OT functionality honest receiver malicious polynomial algorithm equip auxiliary input aux role sender model define correspond adversary  ideal model implementation  instantiate security parameter journal acm vol article publication date april arithmetic cryptography  aux invoke aux sends OT oracle sends receiver compute  decryption fails trust empty output aux straightforward input auxiliary input aux ideal distribution identically distribute honest sender malicious polynomial algorithm receiver model aux auxiliary input construct ideal adversary simb security parameter simb aux sample  invoke aux request sends binary OT oracle trust denote sample     output output simulated indistinguishable aux denote message generate aux denote output sequence input auxiliary input aux aux aux aux aux aux aux aux aux ideal simb aux aux   denotes empty computational  security abe scheme adversary distinguishes distribution immediately translates adversary distinguishes encryption encryption