framework cryptographic protocol analyze security framework allows specify security requirement practically cryptographic task unified systematic furthermore framework security protocol preserve composition operation universal composition propose framework security preserve composition operation allows modular analysis complex cryptographic protocol simpler building moreover within framework protocol guaranteed maintain security context presence unbounded arbitrary protocol session concurrently adversarially manner useful guarantee allows argue security cryptographic protocol complex unpredictable environment communication network CCS concept theory computation computational complexity cryptography cryptographic protocol concurrency distribute compute model calculus security privacy formal theory security additional security model specification analysis security preserve composition universal composition modular security introduction rigorously demonstrate protocol securely essential component cryptographic protocol appropriate mathematical model protocol formulate within model definition security capture requirement task definition protocol securely demonstrate mathematical representation satisfies definition security within devise mathematical model however devise mathematical model protocol formulate adequate definition security within devise model tricky business model realistic adversarial behavior plethora prevalent technique distribute network definition guarantee intuitive notion security capture respect adversarial behavior consideration challenge formulate security cryptographic protocol capture threat execution environment potential interaction protocol network another related challenge notion security modular cryptographic protocol application simpler building guarantee overall security address challenge focal initial definition security specific cryptographic task reference model capture execution analyze protocol indeed choice definition security allows relatively concise intuitive statement simpler analysis protocol however initial definition insufficient within context application encryption notion semantic security later augment flavor security chosen ciphertext attack address protocol setting commitment notion later augment flavor non malleability  address requirement application zero knowledge protocol notion composition notion construction exchange notion protocol fail secure communication combine secure symmetric encryption authentication protocol oblivious transfer secure multiparty function evaluation definition guarantee security concurrent composition capture security concern arise specific protocol environment application directly environment application within extend definition security approach instance exchange non malleable commitment concurrent zero knowledge concurrently secure protocol definition explicitly model adversarially coordinate session protocol approach however definition complexity scope inherently limited specific environment concern alternative approach definition protocol isolation guarantee secure composition definition security refer session protocol vitro security vivo namely realistic setting protocol session concurrently protocol obtain formulate definition security guarantee preservation security composition operation protocol approach considerably simplifies formulate definition security analyze protocol furthermore guarantee security arbitrary protocol environment explicitly approach meaningful framework cryptographic protocol security indeed otherwise preserve security alongside protocol protocol security arbitrary definition secure protocol developed reference definition obvious candidate framework however composition operation guarantee secure composition journal acm vol article publication date september universally composable security cryptographic protocol setting security computationally bound adversary multiple protocol session concurrently adversarially coordinate relation elaborate appendix proposes another framework analyze security cryptographic protocol within framework formulates methodology express security requirement cryptographic task furthermore defines formal operation compose protocol notion security express within framework preserve security composition operation composition operation universal composition definition security framework protocol satisfy universally composable UC consequently dub framework UC security framework security framework preserve universal composition implies secure protocol task remains secure arbitrary unknown multi multi execution environment implies significantly variant standard security concern non malleability security concurrent composition security preserve respect unbounded session protocol protocol framework define security protocol guarantee security preserve composition propose publication influence influence later version mention reference specific influence mention relevant introduction organize definitional approach underlie formalism universal composition operation theorem discus issue associate instantiate approach within framework expressive usable related prior publication version review appendix definitional approach briefly sketch propose framework highlight overall definitional approach definitional framework mention seminal goldreich micali wigderson protocol secure cryptographic task envision ideal task secure ideal input trust locally computes output prescribed output ideal regard formal specification security requirement task protocol securely realize task protocol emulates ideal task damage adversary interact protocol adversary ideal task prior formalism formalization definitional approach exist definitional mention formalism secure composability guarantee variety computational model understand framework definitional framework briefly sketch framework notion security composition operation intimately elsewhere reference terminology decouple security environmental security composition articulate concurrent journal acm vol article publication date september canetti instantiation ideal paradigm traditional task secure function evaluation namely evaluate function secret input synchronous ideally authenticate network protocol computer program program intend execute communicate computational entity accordance model protocol execution consists interact compute protocol local input random choice model reference throughout introduction refer machine additional compute adversary entity subset addition communication network machine protocol adversary interact exchange message specify manner entity eventually generates local output concatenation local output adversary global output ideal evaluate function ideally input incorruptible trust computes function specify adversary limited interact trust corrupt adversary determines input corrupt learns output protocol securely evaluates function adversary interacts protocol exists ideal adversary input global output indistinguishable global output ideal adversary definition suffices capture security protocol alone protocol session isolation indeed securely evaluates guaranteed generate output indistinguishable input furthermore pertinent information corrupt input output computation output adversary corrupt indistinguishable output generate simulator relevant input output however definition limited guarantee regard security involve execution protocol specifically secure composition guaranteed protocol session concurrently coordinate attack indeed protocol definition insecure session active coordinate attack reference discussion implication motivation definitional approach failure preserve security concurrent composition reference UC framework UC framework preserve overall structure approach difference formulation model computation notion emulation understand formulation alternative equivalent formulation formulation algorithmic entity environment machine model computation environment machine whatever external formally model interactive turing machine ITMs however specific choice turing machine underlie computational model somewhat arbitrary imperative model concrete complexity realistic computation adequate ram pram model quintessential journal acm vol article publication date september universally composable security protocol execution protocol execution adversary user etc environment interacts protocol execution twice execution environment arbitrary input adversary execution terminates environment output adversary finally environment output interpret environment interact protocol ideal securely evaluates function adversary exists ideal adversary environment non negligible probability interact ideal description corresponds static corruption variant definition reference corrupt fix advance adaptive corruption definition reference allows additional interaction environment protocol corrupt difference UC framework framework reference environment interacts adversary specifically UC framework environment adversary interact throughout protocol execution exchange information message output generate protocol protocol securely realizes function respect interactive environment UC realizes seemingly difference formulation model computation significant conceptual information protocol session consideration protocol input output furthermore information outside inside model circular information protocol environment essential capture threat multi session concurrent execution environment concrete reference technical environment serf interactive distinguisher protocol execution ideal imposes considerably severe restriction ideal adversary construct proof security environment cannot difference protocol execution ideal interact throughout execution furthermore cannot rewind cannot information previously indeed intensive interaction allows security preserve universal composition indeed restriction incompatible simulation rewinding technique underlies traditional cryptographic protocol analysis alternative technique additional difference UC framework framework reference UC framework allows capture secure function evaluation reactive task input output generate throughout computation furthermore input previously generate output output input local random choice obtain extend trust ideal secure function evaluation constitute algorithmic entity ideal functionality ideal functionality model another machine repeatedly receives input appropriate output maintain local model guarantee output ideal respect input input chosen adaptively previous output protocol communication extension model orthogonal previous extension journal acm vol article publication date september canetti valid reference difference reference capture communication model ability dynamically generate program later universal composition mention earlier universal composition operation extension subroutine substitution operation context sequential algorithm context distribute protocol specifically protocol subroutine ideal functionality addition standard instruction instruction input furthermore contains instruction obtain output recall session typically involves multiple machine session operates subroutine multiple machine furthermore framework allows multiple session multiple session concurrently framework mechanism session distinguish another actual session independently without additional coordination protocol UC realizes accord definition construct compose protocol protocol replace session session specifically input session machine correspond session output machine session treat output obtain correspond session universal composition theorem protocol secure protocol precisely guarantee adversary exists adversary environment machine non negligible probability interact UC realizes ideal functionality essentially universal composition theorem considers environment adversary coordinate attack various session along highlevel theorem guarantee coordinate attack translate attack plus attack attack operates separately session universality universal composition compose protocol literature sequential parallel concurrent composition protocol session compose session program program input input reference detailed taxonomy discussion reference composition capture universal composition compose protocol session capture via appropriate protocol appropriate protocol session subroutine appropriately chosen input arranges appropriate synchronization prior version elsewhere literature protocol denote compose protocol denote however notation suggests model operation attache fix protocol subroutine contrast situation multiple subroutine protocol replace whereas remain unaffected journal acm vol article publication date september universally composable security message delivery various subroutine session consequently guaranteed protocol UC realizes ideal functionality UC realize compose protocol composition operation literature universal composition allows formulate protocol equivalently decompose complex individual protocol salient protocol session joint generally joint subroutine otherwise session protocol serf subroutine session protocol furthermore subroutine protocol protocol analyze session separately vitro deduce security overall traditional session situation composition becomes useful commonplace setting multiple secure communication session authentication module multiple protocol session reference randomly chosen hash function universal composition situation investigate reference protocol subroutine session reference protocol subroutine arbitrary untrusted protocol discussion implication composition theorem modularity security traditionally secure composition theorem treat modular analysis complex protocol instance motivation reference complex task partition task simpler sub task protocol securely realize sub task addition protocol realize task assume secure realization sub task finally composition theorem argue protocol compose already sub protocol securely realizes task interpretation protocol designer advance protocol session protocol schedule implication indeed useful addition articulates another implication composition theorem arguably protocol UC realize functionality guaranteed within protocol environment environment priori environment participant protocol execution unaware protocol session concurrently adversarially coordinate manner useful almost essential security guarantee protocol complex unpredictable adversarial environment communication network framework useful simplicity expressibility definitional approach described actual definition security analyze protocol pinpoint formal model allows protocol distribute model formulate ideal functionality interpretation ideal functionality specification correctness security otherwise task model rigorous representation execution protocol alongside adversary environment ideal ideal functionality alongside simulator environment outline addition model universal composition operation assert associate theorem journal acm vol article publication date september canetti devise model involves multiple choice various choice affect detail formality definition security expressive ability capture situation task protocol faithfulness ability capture realistic attack complexity definition goal devise model intuitive expressive faithful reality however simplicity expressive faithfulness odds model tradeoff desideratum model somewhat simplistic goal highlight salient definitional approach minimal formalism price restrict protocol task naturally model model significantly expressive price additional formalism highlight definitional choice elaborate discussion definitional choice throughout aspect model rigorously capture notion subroutine machine subroutine protocol session machine denote computational entity without specific detail involves rigorous concept input subroutine machine obtain output subroutine machine machine subroutine multiple machine mention observation model significantly simplify treatment observation devise formalism protocol ideal functionality similarly formalize ideal separately protocol execution instead ideal functionality protocol ideal execute protocol alongside adversary environment protocol ideal functionality caveat model formalize ability machine interact directly adversary enable capability ideal functionality simplify observation directly formalize within model computation array corruption model namely adversarial deviate protocol traditional model  curious byzantine corruption model corrupt chosen statically adaptively variety attack channel leakage coercion transient others model formally model corruption instead corruption model capture adversary deliver corruption message protocol behavior appropriately upon receipt message observation directly formalize array communication synchronization model model computation traditionally model authenticate communication private communication synchronous communication broadcast etc instead communication capture channel machine subroutine machine latter machine communicate entity communication model capture via program channel machine program communication adversary meaningfulness approach guaranteed UC theorem indeed compose protocol model communication abstraction capture via ideal functionality protocol UC realizes operates journal acm vol article publication date september universally composable security communication model capture via ideal functionality compose protocol protocol UC emulates approach flexibility express multiple variant communication model tradeoff simplicity expressibility formal model capture dynamically network simplistic variant model postulate static fix computational entity fix identity program entity communicate priori fix entity identity similarly computational entity constitute protocol session fix ahead model indeed simpler argue amenable capture realistic setting identity program connectivity computational entity progress server interact client identity advance dynamically chosen peer peer protocol membership dynamic participant instruct execute code dynamically generate others adversarially independent session protocol session protocol model built mechanism capture situation allows dynamically generate dynamically generate program identity communication model delineate session protocol priori unbounded session dynamically throughout computation without global coordination latter model approach apart exist model distribute compute indeed exist model typically impose static restriction reduce ability express protocol scenario threat prevalent network another choice relates formalism strives pin detail model syntax program express protocol execution instead relies minimal syntax turing machine develop formal abstract domain specific program facilitate mechanize representation analysis protocol ideal functionality within framework future finally model computation public version version indeed model evolve considerably archive reference later version addition literature tradeoff simplicity expressibility reference appendix detail previous version overview article restrict model computation increase readability presentation somewhat informal model distribute model basis formulate definition security assert composability contribution independent indeed model model literature distribute computation mention capture fully dynamic evolve distribute account computational journal acm vol article publication date september canetti mechanism hook abstract concept protocol session subroutine emulation protocol another composition protocol model protocol execution presence adversary environment notion protocol emulation variant definition protocol emulation asserts relationship concept ideal functionality defines protocol realize ideal functionality universal composition operation prof universal composition theorem exemplifies framework proposes convention express various corruption operation handful ideal functionality capture salient communication corruption model finally appendix review related relationship briefly review previous version warmup RESTRICTED model version definition security composition theorem simplicity obtain somewhat restrict model computation thereby somewhat restrict expressive definition applicability composition theorem positive restriction allows highlight definition composition theorem minimal formalism improve readability allows somewhat informal defines namely protocol definition security universal composition theorem model sketch proof machine protocol earlier analyze algorithm computer program distribute protocol refer algorithm contrast algorithm standard shot sequential execution protocol consist program program intend independently potentially concurrently others program obtains input random input generates output execution program interact transmit information subsection formalism define argue protocol formalism regard individual program machine formalize protocol collection machine reader formalism traditional cryptographic protocol collection program machine program overall action actual entity usually refer principal enable composition consist multiple machine machine treat subroutine machine within construct machine computational physically execute actual processor abstract actually execute physical machine ideal functionality per model sketch introduction machine subroutine multiple caller machine caller machine entity useful capture multi ideal functionality instance traditional notion journal acm vol article publication date september universally composable security compute machine machine identity remains unchanged throughout computation information machine label input output backdoor information outside machine label consistently sender label backdoor information model information adversary graphical clarity future drawing input drawn arrow downward subroutine output arrow upwards backdoor communication arrow sideways communication machine depict communication channel machine capture via channel machine subroutine formalism readability almost completely refrain syntax machine construct define propose rudimentary syntax interactive turing machine reasonable model syntax machine identity machine identity visible machine computation remains unchanged throughout incoming information machine label input input machine output output subroutine machine incoming information backdoor model information adversary define machine communication  identity machine information information input output backdoor communication consists sequence ID ID identity input output backdoor attention restrict collection machine machine input machine output backdoor information backdoor information machine input output backdoor information machine infer communication machine triple ID ID identity communication program machine graphical depiction machine protocol define multi protocol namely collection program joint goal execute separately exchange information formalism protocol simply journal acm vol article publication date september canetti machine minimal consistency requirement communication machine reader remind machine model computational module correspond traditional concept principal define collection machine protocol facilitate consistency requirement machine protocol formally define subroutine caller identity ID subroutine identity machine communication allows input identity ID communication contains entry input ID identity ID caller identity communication allows output identity ID machine idi machine subroutine machine machine  subroutine identity machine caller machine machine idi caller identity protocol machine identity machine subroutine caller subroutine identity machine correspond actual machine ID subroutine identity exists ID  protocol machine caller identity correspond machine caller identity ID machine identity ID machine ID external identity machine machine internal machine formalism allows subroutine cycle machine subsidiary machine subroutine another machine subsidiary protocol machine subsidiary subroutine reader however caution inherently non hierarchical protocol conducive modular analysis terminology translate traditional notion anm protocol formalism protocol  machine potentially internal machine internal machine subsidiary machine module within program correspond traditional internal machine subsidiary machine naturally correspond physical resource communication link abstract ideal functionality define security protocol introduction security protocol respect task define execution protocol ideal output compute trust obtains input approach substantiate formulate execute potentially multi protocol within adversarial execution environment preliminary define security formulate notion correspondence protocol protocol emulation notion applies protocol essentially protocol emulates protocol successfully mimic behavior within execution environment otherwise emulates interact interact finally define ideal distribute computational task formulate ideal protocol task protocol securely realizes task emulates ideal protocol task journal acm vol article publication date september universally composable security protocol execution protocol emulation formal model protocol execution notion protocol emulation minimal discussion discussion aspect formalism network communication corrupt model model execution protocol consists machine plus additional machine environment adversary environment identity communication allows input machine adversary identity communication allows backdoor information machine assume none identity machine external identity machine communication machine augment ability backdoor information identity namely introduction environment adversary aspect interaction environment interaction via input protocol output namely via official channel adversary namely information leakage protocol execution influence via information transfer machine adversarial definition security later quantify polynomial execution adversary environment initial input input machine execute machine ID performs instruction transmit information identity ID execution suspend message input machine identity ID source identity chosen external identity along label input source identity execution resume pause instructs transmit information another machine identity ID exists message machine identity ID along label source identity ID resume execute identity ID external identity message along identity ID ID resume execute machine message output pause without information execution resume environment assume binary output variable execution environment halt output execution content output variable environment graphical depiction model protocol execution execπ denote random variable local random choice involve machine output execution environment adversary input described execπ denote ensemble execπ protocol emulation define protocol emulate another protocol directly capture requirement environment interact adversary choice adversary machine polytime overall machine bound polynomial global security parameter initial input environment jumping ahead execution protocol simulated standard probabilistic turing machine polynomial journal acm vol article publication date september canetti model execution protocol environment writes input output machine addition interact freely machine subroutine access security parameter machine asymptotics security parameter definition UC emulation restrict model protocol UC emulates protocol polytime adversary exists polytime adversary polytime environment ensemble execπ execϕ indistinguishable input probability output interact differs negligible amount probability output interact discussion discus aspect model execution notion protocol emulation additional discussion UC emulation UC emulation guarantee correspondence protocol ability attack emulate protocol attack emulate protocol combine environment interact input output link interact backdoor link via cannot distinguish interact machine identity exactly addition guaranteed output distribute  input guaranteed information learnt simulatable indistinguishable information generate information output randomize guaranteed joint distribution output machine indistinguishable joint distribution output machine furthermore output jointly output respectively introduction notion emulation apart previous notion considers environment active role distinguish emulate protocol emulate protocol environment unable distinguish protocol adversary protocol simulator ability interact evolve indeed interactive definition crucial role proof universal composition theorem journal acm vol article publication date september universally composable security model inter communication model allows machine communicate via input output representation communication channel machine instead communication channel capture via dedicate machine exhibit channel model sake illustration machine authenticate asynchronous communication machine machine machine proceeds upon input machine machine sends backdoor information upon backdoor output indeed  channel secrecy guarantee ability arbitrarily delay delivery message asynchrony communication delivers message communication ideally authentic communication model analogously arguably model communication link outside model computation model expressive communication channel capture via program channel machine information channel machine discloses adversary via backdoor tape responds instruction adversary backdoor tape determines channel model corruption model protocol execution explicit construct adversarial behavior machine mention sake model definition security preserve generality expressibility sketch adversarial behavior within model adversarial behavior capture adversary assume machine corruption instruction target machine backdoor information protocol formal instruction directive message specific instruction specialized corruption model relevant behavior upon corruption mechanism allows corruption outright malicious dubbed byzantine behavior honest curious behavior channel leakage transient failure coercion instance adaptive byzantine corruption model corruption instruction program machine entire adversary execute program instead program model static byzantine corruption switch program corruption instruction arrives activation definition protocol emulation meaningful presence machine corruption mechanism guarantee corruption perform commensurate corruption perform handle issue postulate adversary corrupts machine specifically instruct environment however mechanism implicitly mandate internal machine structure emulate protocol identical emulate protocol restrictive indeed analyst typically simpler instead mechanism devise allows environment obtain information regard machine currently adversary  machine protocol machine notify machine protocol upon corruption environment corruption activity query machine machine programmed disclose partial information corruption activity information journal acm vol article publication date september canetti disclose environment security specification protocol discussion generally model traditional operation corruption heavily relies code machine model actual code execute actual machine indeed powerful model technique allows model flexible expressive however preserve meaningfulness clearly delineate separation model code code delineation formalize later extensively activation concurrency recall definition postulate singlethreaded simplistic model execute protocol machine active machine activate exclusively currently active machine model restriction model adequately distribute computation occurs concurrently location indeed model contrast physical distribute computation multiple physically traditional mathematical model concurrent execution distribute reference argue spite simplicity model capture salient situation concern elaborate traditionally execution concurrent execution physically mathematically capture collection execution locally sequential interleave local execution sequentialized execution causality constraint model dubbed non deterministic schedule granularity atomic namely assume execute location without interruption factor concurrency consideration expressive model model mental simpler instead granularity atomic ahead interleavings atomic model granularity atomic message another machine specific interleave machine message thread sequential execution aggregate local decision algorithmically machine however simplicity formalism restrict expressive indeed capture granularity atomic program machine message desire atomic sequence operation arbitrary adversarial interleave capture machine message adversarial machine desire variability timing exemplify model asynchronous communication channel sketch previous comment furthermore model allows restrict attention computationally bound schedule oppose fully non deterministic schedule ability crucial capture security guarantee computationally bound adversary realize functionality recall security protocol define protocol execution ideal task ideal protocol ideal protocol task ingredient ideal protocol ideal functionality machine journal acm vol article publication date september universally composable security ideal protocol idealF ideal functionality machine idealF denote DF DF dummy relay input relay output destination machine adversary communicates backdoor information capture desire functionality specification task instruction trust specifically ideal protocol capture task participant consists ideal functionality machine plus machine dummy upon input dummy input along identity caller machine upon output along destination identity dummy destination graphical depiction ideal protocol denote idealF terminology machine idealF dummy internal machine idealF define protocol realizes ideal functionality straightforward definition realize ideal functionality restrict model protocol UC realizes ideal functionality UC emulates idealF discussion motivate aspect ideal functionality ideal protocol backdoor communication adversary backdoor communication flexible expressive tune security guarantee indeed introduction task disclosure information via corruption protocol message explicitly information similarly task amount adversarial influence output participant via corruption message schedule account information capture stateful reactive task ideal functionality naturally capture security requirement reactive task indeed maintain local output input random choice role dummy glance dummy redundant potentially ideal protocol consist input directly directly output destination machine however ideal protocol easily distinguishable distribute implementation environment interaction machine identity multiple machine indeed role dummy environment journal acm vol article publication date september canetti universal composition operation machine ideal protocol idealF machine idealF replace machine protocol solid input output dash backdoor communication treat ideal distribute consists multiple computational entity input generate output separately entity actual computational centrally dummy role ignore backdoor information description capture specification information task universal composition subsection universal composition operation theorem concentrate compose protocol ideal functionality ideal protocol subroutine protocol composition operation define subroutine protocol protocol namely subset machine subroutine protocol valid protocol machine caller respect stress machine subroutine universal composition operation universal composition operation generalization subroutine substitution operation sequential algorithm distribute protocol specifically protocol compatible protocol identity preserve injective correspondence machine furthermore external identity communication machine namely identity communication correspond machine protocol subroutine protocol compatible machine identity machine compose protocol denote identical subroutine protocol replace protocol interpretation protocol machine compatible valid protocol notational simplicity instead idealF graphical depiction composition operation composition theorem protocol identity compatible protocol machine identity machine theorem universal composition restrict model protocol subroutine UC emulates identity compatible protocol UC emulates journal acm vol article publication date september universally composable security operation simulator environment visual clarity potentially multi protocol depict discussion interpretation discussion universal composition corollary protocol UC realizes ideal functionality subroutine protocol idealF ideal protocol compose protocol  UC realizes ideal functionality proof sketch observation underlies proof UC emulation allows unrestricted exchange information environment adversary interaction distinct interleave interaction interaction interaction caller respect simulate overall interaction separately simulate interleave interaction interaction simulatable UC emulates interaction trivially simulatable caller respect identical caller respect observation define adversary dummy adversary merely serf transparent channel protocol input request deliver message backdoor tape machine request addition incoming backdoor message protocol machine environment along identity machine stateless separable independent adversary proof theorem proceeds UC emulates exists adversary simulator environment interact adversary gear interact construct simulator gear interact simulator channel communication environment without similarly communication caller channel without communication machine pipelined via message generate machine input environment incoming message machine without message generate machine without output environment message machine intuitively simulation instance behaves exactly environment concretely validity simulation demonstrate via reduction validity environment distinguishes execution execution construct environment distinguishes execution execution essentially orchestrates entire interaction interaction subroutine protocol journal acm vol article publication date september canetti relayed external interacts interacts interact similarly interacts session interact crucial execution entire efficiently simulated machine detailed proof derive hardest adversary simulate protocol  successfully simulate dummy adversary environment successfully simulate polytime adversary environment observation proven respect model simplify proof UC theorem finally UC theorem apply repeatedly substitute multiple subroutine protocol protocol UC realize furthermore application theorem nest subroutine protocol simulation overhead additive namely runtime bound runtime plus constant runtime UC theorem cam apply polynomially simulation overhead polynomial model computation treatment considers identity program connectivity compute fix advance helpful model restriction realistic situation protocol threat extend treatment account fully dynamic evolve distribute computational entity extends definition machine protocol defines model distribute computation within dynamically evolve account computational limitation building model developed extend definition protocol emulation realize ideal functionality extends formulate model computation separately protocol execution underlies notion protocol emulation non essential detour detour clarify motivate definitional choice along furthermore model independent potentially basis notion security correctness distribute computation strives completely pinpoint model computation detail default approach contrast approach abstract cryptography calculus aim capture abstract irrespective specific implementation computational consideration model definition resource bound computation facilitate reading longer discussion comparison model postpone model define namely protocol however treatment protocol specifically recall protocol fix compute identity connectivity contrast identity connectivity program compute chosen adaptively execution model capture journal acm vol article publication date september universally composable security computational entity dynamically dynamically generate identity program capture inevitable ambiguity address message local partial knowledge allows various behavior communication medium reliability model facilitates account computational address delivery information choice concept address message identity protocol session resource bound computation presentation proceeds defines syntax rudimentary program protocol extends notion interactive turing machine contains data structure instruction operating distribute defines semantics protocol namely execution model distribute consist protocol sketch facilitate readability motivate discussion postpone relevant discussion along interactive turing machine ITMs interactive turing machine itm extend standard turing machine formalism capture distribute algorithm protocol definition interactive turing machine gear capture interact machine reference reference volume chapter definition standard definition turing machine mechanism allows machine exchange information via tape formalism extend accommodate protocol multiple compute multiple concurrent execution various protocol exist purpose somewhat richer syntax ITMs define semantics syntax described model execution ITMs formalism aim minimal syntax program abstraction intentional leaf building useful program mention introduction turing machine underlie computational device mainly due tradition computational model accounting computational complexity program replacement ram pram machine boolean arithmetic circuit quintessential candidate additional discussion definition interactive turing machine itm  turing machine reference augmentation tape data structure identity tape tape cannot tape content tape interpret contains description standard encode program namely transition function initial tape content description code identity identity code extend identity recall  turing machine multiple tape equip variant model advantage allows combine turing machine machine arbitrary interleave operation runtime essentially sum individual runtimes requirement plus additive overhead circuit ram pram model compositionality discussion journal acm vol article publication date september canetti informally content tape identify instance itm within ITMs outgo message tape informally tape outgo message generate sufficient address information delivery message externally writable tape information compute device input tape informally tape information treat input program external user subroutine output tape informally tape information treat output computation perform program module subroutine program backdoor tape informally tape information adversary information capture adversarial influence program stress message tape model artifact message actually protocol principal tape itm cannot tape reading direction activation tape informally tape itm currently execution instruction external instruction informally instruction message currently outgo message tape possibly specify tape machine identity specify outgo message tape concrete specification postpone message instruction instruction specifies tape input subroutine output backdoor reading message tape implement instruction assume message message  definition configuration itm consists content tape location tape configuration active activation tape inactive instance itm consists content identity tape alone recall identity tape contains code plus identity content identity tape remains unchanged throughout execution configuration configuration instance content identity tape configuration agrees namely program encode identity tape identity tape activation itm instance iti sequence configuration correspond computation active configuration inactive configuration informally activation activation sink halt halt future activation upon activation immediately reset activation ram pram machine underlie compute instruction redundant however turing machine handle incoming message unbounded discussion journal acm vol article publication date september universally composable security throughout itm instance iti treat associate program indeed identity tape remains immutable execution configuration computation iti corresponds machine exception communication machine specify execute ITMs execution itm involve multiple itis formalism another construct function regulates transfer information itis function determines external instruction within execution function corresponds collection communication machine however significantly flexibility expressive clarity define model distribute compute discussion proceed formal description ITMs formally ITMs itm initial itm disallow function execution ITMs execution input consists sequence activation itis activation activation configuration identity tape contains code identity input tape contains sufficiently random random tape accordance iti initial iti execution execution initial iti halt halt configuration initial iti output execution content outgo message tape initial iti halt execution prefix prefix execution definition execution remains specify  instruction configuration activation activation described tape another iti invoke itis mechanism allows communication itis external instruction instruction invoke itis specifically external instruction denote iti executes instruction content outgo message tape interpret standard encode tuple extend identity target iti tape input subroutine output backdoor reveal sender flag flag message apply  execution prefix disallow instruction initial iti activate activation tape subroutine output interpret extend identity iti currently exists namely configuration execution prefix extend identity message tape blank reveal sender without loss generality random tape direction tape infinitely location chosen random reading journal acm vol article publication date september canetti flag extend identity iti tape target iti activate configuration generate configuration previous configuration execution information incoming message tape activation tape configuration iti currently exist iti code identity  configuration generate code identity tape random tape initial iti iti invoked external instruction invoked interpret predicate extend identity iti invocation message deliver iti exists message deliver initial iti activate iti writes backdoor tape iti sends backdoor message writes onto input tape input writes subroutine output tape subroutine output simply output convenient formally define iti reject incoming message iti reject ignores incoming message reading message return prior reading message activation without action notation  denote random variable output execution ITMs input probability random choice itis  denote ensemble  discussion uniqueness identity discus aspect  instruction motivates difference communication mechanism framework invocation itis execution iti guarantee iti unique extend identity execution itis itis identity code address mechanism unambiguous furthermore non mode allows itis communicate unambiguously without code identity predicate partial knowledge intend identity extend definition ITMs mechanism itis communicate specify code identity itis transmits information mechanism iti identity sometimes code itis transmit information construct sufficient formalism distribute computational however definition security formulate later additional requirement model recall definition involve mental replaces protocol session session another protocol within framework replacement ability situation iti sends message another iti message actually deliver another iti journal acm vol article publication date september universally composable security code similarly message whereas sender modification mechanism enable situation function recall function output disallowed definition function extend modify external request itis extend output external instruction consists completely tuple execute although definition extend function modify external instruction extend function modify external operation specific limited subroutine etc input execution reject input subroutine output reject subroutine output subroutine execution subroutine invoked iti subroutine caller subsidiary subroutine another subsidiary model impose hierarchical subroutine structure itis instance itis subroutine iti subroutine iti subroutine itis restriction impose later specific context protocol protocol define itm definition goal capture algorithm distribute physically participant engage joint computation namely itm static describes program participant computation protocol specifies program participant role itm program alternatively protocol define sequence machine machine code participant however formalism unnecessary notational complexity model protocol session notion session protocol intuitive appeal however rigorously define reasonably tricky indeed delineate isolate session protocol within execution dynamic multiple itis multiple code traditionally session protocol define fix machine predefined program identity fix advance indeed framework definitional approach however account protocol session identity participant participant dynamically execution unfolds account session protocol code dynamically fix onset execution entire flexible definition desirable definition propose attempt formalize intuition itis execution belong session protocol addition invoked intention interact joint purpose participant session typically within physical entity distribute probably rephrase addition invoker iti session intend iti participates joint interaction itis session journal acm vol article publication date september canetti framework mechanism invoker iti specify protocol session iti participate construct purpose identity interpret via standard unambiguous encode identity iti session identifier sid identifier pid protocol session consist itis sid code  differentiate itis within protocol session associate itis cluster physical computer network additional discussion sid pid mechanism coin additional terminology execution prefix ITMs session protocol prefix itis code sid shorthand protocol session meaning itis protocol session session itis protocol session meaning extend session protocol extend session execution prefix define inductively inspect itis prefix invocation newly invoked iti extend session session subroutine iti already extend session invoked iti already sub extend session iti sub extend session extend session session informally extend session transitive closure invocation relation itis session disregard invocation itis via subroutine output tape comparison model recall protocol define differently protocol machine restriction subsidiary machine protocol machine protocol however approach longer meaningful model itis dynamically furthermore iti later become subsidiary another machine define protocol session extend session myopic consistent dynamic evolution protocol roughly correspond protocol  definition motivate polynomial ITMs parameterized subsection adapts standard notion resource bound computation distribute accommodate dynamically component communication multiple protocol session thereof exist cryptography universal statement capability feasible computation notion security precise formulation resource bound computation however formulation behave dynamically distribute propose extension adequate within model proceed definition notion resource bound computation typically purpose efficient algorithm examine function complexity previous version extend session define differently session subsidiary definition simplifies formalism situation extend session protocol itis subsidiary session discussion journal acm vol article publication date september universally composable security input interpret input another purpose bound feasible computation purpose security typically computation asymptotically efficient algorithm concerned within resource bound glance security interested interpretation however recall argue security algorithmic reduction translates attacker scheme attacker underlie construct assume secure reduction efficient former algorithmic furthermore definition security formulate later efficient transformation namely simulator feasible computation another conclusion model capture interpretation traditionally turing machine bound input halt within generalize notion ITMs option activation itm completes within incoming message overall incoming message externally writable tape itm however option bound overall activation itm allows ITMs unbounded execution unbounded compute component resource bound capture intuitive concept resource bound distribute computation another alternative bound overall itm invocation regardless activation option overall incoming message externally writable tape itm however situation ITMs component bound consumes unbounded resource itis message repeatedly increase reference input indeed reference ITMs cannot input tape adequate however restriction exist overall input infinite itis bound furthermore infinite chain itis iti chain invokes potentially infinite infinite prevent via mechanism message import message import contains import message define budget iti configuration sum import message iti minus import message iti iti bound configuration invocation provision allows guarantee reasonable function specifically whenever increase super additive overall ITMs bound finite bound import initial input namely import message input tape initial iti initial configuration intuitively provision treat import message token iti receives token incoming message import token itis message import itis guaranteed token remains unchanged itis generate dynamically tape journal acm vol article publication date september canetti definition bound ppt recall import message import message itm locally bound prefix execution ITMs iti program satisfies overall computational overall import message machine externally writable tape overall import message externally writable tape machine bound ITMs define inductively  bound itm  ist bound addition  bound itm  specify recipient itm bound bound itm ppt exists polynomial bound protocol ppt ppt itm briefly motivate definition departs traditional formulation resource bound computation contrast traditional notion input resource bound message tape recipient extra generality model itis invoked activate via message input message import binary instead traditional message convention allows import message amount information contains furthermore additional flexibility distribute multiple subroutine instance situation situation algorithm subroutine subroutine input message computational situation subroutine eventually computational whereas remain subroutine advance subroutine traditional input formalism distinguish situation overall algorithm indeed invoke subroutine contrast formalism allows distinguish situation overall algorithm whereas logn clarity generality refrain specify specific mechanism ITMs bound specific function  discus specific potential formulation resource bound distribute computation consistency standard notion resource bound computation execution resource bound ITMs simulated standard TM comparable resource recall thatt super additive ift proposition super additive increase function initial itm ITMs bound addition function computable execution simulated non interactive turing machine input initial input import extend ITMs function increase import external request ITMs invoked bound ppt furthermore import ppt standard input journal acm vol article publication date september universally composable security proof overall configuration execution bound import initial input mention treat resource message token token token around itis remains unchanged throughout formally recall execution ITMs consists sequence activation activation sequence configuration active iti execution essentially sequence configuration itis  itis active till ith configuration execution overall import message iti configuration active prior ith configuration execution minus overall import message itis previous configuration bound bound namely super additivity however machine simulates execution simply writes configuration halt configuration accepts configuration accepts  super additive function increase import specify external instruction overall plus spent evaluate function however evaluate input import bound function linear parameterized definition bound ITMs guarantee execution bound ITMs completes bound however guarantee regard relative compute ITMs simplify formalization security asymptotic treatment parameter tends infinity bound variability compute ITMs restrict attention security parameter serf minimum initial budget iti specifically itm parameterized security parameter unless overall import code machine identity tape ITMs parameterized security parameter itis generate parameterized security parameter addition import initial input import input initial iti function specifically polynomial security parameter discussion subsection discus model computation model literature aim capture distribute computation concurrently explicitly aim model security protocol incomplete model csp model hoare CCS model calculus milner calculus model computation spi calculus abadi gordon calculus framework restriction parameterized essential treatment security somewhat restrictive model situation computational entity vastly computational adopt sake simplicity readability extend formulation capture situation priori bound relative computational entity future journal acm vol article publication date september canetti functional representation probabilistic polynomial automaton  lynch probabilistic automaton lynch   abstract cryptography model maurer  equational approach   approach mention appendix discussion  ITMs identity  mechanism model resource bound computation stress however partition somewhat arbitrary topic inter related motivate ITMs definitional choice explicit imperative formalism underlie computational model computation sequence mechanical turing machine functional calculus denotational domain theory indeed imperative model elegant easily amenable abstraction formal directly capture complexity computation physical aspect computation indeed model capture interplay complexity local computation communication randomness physical channel resource bound adversarial activity interplay security cryptographic protocol moreover imperative formalism strives faithfully exist computer network duality data code facilitates model dynamic code generation transmission activation physical communication channel interact potentially unbounded allows complexity issue sometimes gloss spent address message function message address another advantage imperative formalism directly complexity computation facilitates model adversarial computationally bound schedule distribute finally imperative formalism naturally allows concrete parametric treatment security asymptotic treatment mesh computational complexity theory imperative model computation exist literature turing machine model ram pram model arithmetic logical circuit choice turing machine mostly tradition essential reasonable model allows resource bound computation adversarially resource bound communication downside itm model program relatively abstraction computer program protocol contrast literature describes protocol informal bridge gap develop library subroutine program convenient representation protocol lose correspondence ITMs interactive ram machine alternative demonstrate security preserve correspondence program abstract model computation limited ITMs model correspondence reference research future technical caveat traditional tape turing machine model imposes significant overhead operation program interleave manner instead preferable model allows express operation combine sequential program sequential program simply journal acm vol article publication date september universally composable security executes program arbitrary schedule interleave execution runtime combine program sum individual program plus additive factor treatment restrict  turing machine model reference alternatively ram pram model identity mechanism extend identity content identity tape mechanism model distinguish itis computational distribute computation model guarantee itis extend identity furthermore identity iti iti invokes creates fully accessible iti extend identity cannot modify throughout execution finally extend identity partition code program session ID ID motivate choice identity algorithmically externally chosen identity iti creates iti aim software engineering indeed creates computational usually program directly via proxy mechanism sufficient information identify furthermore demonstrate externally chosen unique identity essential perform task broadcast byzantine agreement within distribute compute framework creates iti algorithmic code newly invoked iti reflection prevalent akin app powerful analytical protocol reference ability meaningfully analyze within model another consequence formalism protocol intend another protocol subroutine intend another  description essentially description subroutine prevent iti modify identity mainly simplify delineation individual computational indeed expressive lose indeed itis invoke itis related identity program code external operation recall semantics external operation crucially depends code recipient itis convention odd code sender respectively recipient message network typically recipient  sender furthermore code iti extremely generic universal turing machine actual program message iti receives verify practically arbitrary code bound impossible undecidability notwithstanding indeed code easy verify code desirable implement algorithm disclose data communicates itis bound allows protocol designer protocol instruction verify itis interacts satisfy extremely powerful framework expressive globally unique identity guarantee extend identity globally unique throughout simplifies model facilitates protocol analysis however model guarantee simplification reality journal acm vol article publication date september canetti indeed reality exist multiple identical program identity physically aware concern situation indeed expressible within model simply protocol ignore portion identity formalism  model mandate identity inaccessible program furthermore model allows multiple itis execution non extend identity program underline  identity unique sid mechanism sid mechanism relatively flexible delineate individual protocol session dynamically distribute allows capture within formal model intuitive notion session distribute protocol collection local action indeed sort agreement coordination entity participant protocol session sid mechanism embodies agreement joint identifier briefly logically protocol session distribute sid mechanism finally relaxation individual protocol session protocol session statically advance sid mechanism naturally indeed trivial convenient ensure itis protocol session sid another dynamic multiple individual protocol session protocol session iti computational within physical entity itis belong protocol session  within protocol session itis model physical without prior coordination message directly via subroutine indeed prevalent distribute protocol client server protocol category sid mechanism allows capture protocol straightforward iti protocol session incoming input specifies code sid itis session sid code communication itis session jumping ahead model protocol execution described network communication model subroutine output iti model actual communication iti subroutine iti iti functionality manner alternatively protocol session dynamically computational protocol session hierarchically via input exist autonomously within protocol session sid mechanism formalism indeed exist itis sufficient information itis sid creation protocol session without additional coordination additional coordination sid reference protocol discussion situation sid confuse potentially upon execution protocol session indeed sid session invoked remains immutable throughout journal acm vol article publication date september universally composable security formulate alternative convention regard delineation protocol session sids protocol session related convention loose coordination itis protocol session instance participant sids exists global function sids determines sids belong session sids execution however mechanism complicate model extra generality obtain essential treatment finally framework reference additional restriction format sids specifically reference sid protocol session sid protocol session enforce hierarchical sid structure convenient convention limit others furthermore model regardless convention adhere delete itis definition ITMs delete iti iti invoked remains execution halt identity remains valid reserve throughout halt iti activate performs operation initial iti activate convention avoid ambiguity address message itis model ephemeral reusable identity via protocol specific structure identity mechanism model external mechanism function earlier traditional model distribute computation model inter component communication via dedicate channel component various restriction information information abstract construct corresponds channel channel typically treat static parameter mutable program pre furthermore information channel treat computational regardless component message model communication elegant facilitates protocol frame within model facilitates analytical operation component channel component however earlier model realistic situation makeup component evolves capture commonplace situation sender partial information identity code recipient account message address delivery dynamically complexity important factor finally account dynamic generation program external instruction function aim sufficiently expressive flexible mechanism capture transmit information iti another highlight motivate salient aspect mechanism invoke itis model allows dynamic invocation itis algorithmic feature important model situation computation unfolds moreover invite crucial model situation itis protocol session advance journal acm vol article publication date september canetti indeed situation commonplace peer peer protocol public blockchain client initiate interaction server server learns client exists via message protocol program software update generate algorithmically incorporate computation identify recipient iti tenet external mechanism iti responsible identify recipient iti sufficiently unambiguous external operation mode identify recipient mode capture flag flag external iti exist  creation iti flag external iti exist exist iti specification operation fails exist iti specification mode operation mode creation computational information regard identity program contrast mode information exist without intent completely specify identity program recipient specify recipient enable delivery flexibility convenient situation sender code identity recipient additional comment stress iti notify target iti currently exists indeed incorporate built notification mechanism unnatural distribute predicate mechanism recipient iti allows flexibility completely target extend identity almost iti restrict predicate appropriate function convention iti satisfies predicate convenient guarantee consistency execution message predicate deliver iti future message specify predicate deliver multiple itis satisfy itis satisfy identify iti external mechanism mode regard information recipient iti learns identity program iti iti reveal sender flag recipient iti learns extend identity iti flag iti information regard identity iti mode extreme mode traditional fix link communication recipient fully identity program entity instance recipient iti invoked sender previous version unintentionally implicit notification mechanism specifically existence itis identity code external iti differs exist iti code fail unnatural model attack iti iti planning invoke iti affect behavior simply iti identity code request fail transmission information without explicitly message reflect realistic attack interferes definition security later journal acm vol article publication date september universally composable security iti subroutine message output subroutine return caller target tape output tape extreme situation recipient iti knowledge iti incoming message physical communication link remote unknown source extend formalism intermediate situation situation recipient learns identity iti code partial information identity code chose sake simplicity mode suffice purpose capture intermediate situation within model iti perform iti creates iti receives message reveal sender flag sends recipient along partial information reveal sender recipient learns specify partial information code allows recipient trust partial information recipient code iti enables recipient meaningful decision non trivial code mechanism propose previous usage verify code code allows salient recognizable recipient standard encode mechanism indeed peer accept representation program reject another representation functionally equivalent jumping message recall definition allows itm instruction reading incoming data tape incoming message instruction superfluous itm simply namely instruction becomes maintain reasonable notion resource bound computation heterogeneous untrusted network computational participant considerably addition participant adversarial powerful participant overwhelm powerful participant simply message reality attack easily thwart simply message namely abort attempt interpret incoming message become however without message instruction itm model abortion reading incoming message manner powerful overwhelm powerful respect itm model adequately reality discussion exemplifies subtlety involve model ITMs notion security subsequent technical meaning without ability incoming message contrast ram machine model provision phenomenon independently context zero knowledge protocol function itm function convenient mechanism allows definition communication model model capture specific concern definition security indeed definition capture within framework  function journal acm vol article publication date september canetti alternative equivalent formulation ITMs replace function purpose router itm information itis specifically formulation external input input tape activate input input tape initial itm itis input tape externally writable tape iti non extend writes request request tape request recipient operation extend arbitrary externally writable tape itis runtime limitation without increase import deliver message capture resource bound computation recognize ppt ITMs concern regard notion ppt turing machine itm ppt undecidable itm ppt standard around issue specify encoding ITMs easy verify obeys obey encode ppt ITMs essentially ppt itm encodes obeys exists notion ppt notion efficiently recognizable readily notion ppt definition efficiently recognizable specifically encode locally ppt itm specify  understood itm encode computational halt encode ppt itm guarantee addition code specify external operation bound exponent straightforward recognize notion ppt protocol reference efficiently recognizable indeed regard barrier applicability notion alternative notion bound computation impose overall bound recall suffice simply bound individual activation iti function content externally writable tape prior definition unbounded execution ITMs bound definition around restriction overall iti alternative approach directly impose overall bound instance potentially bound overall externally execution approach attractive considerably simpler avoids link activation itm previous activation itm however approach severe drawback execution halt overall local behavior iti activate namely initial iti artificial initial iti obtain global information execution via timing execution halt instance initial iti reject pas another iti activate accept activate depends computation itis invoked exceeds allot accepts depends information legitimately available distribute jumping ahead notion security artificially restrictive specifically environment distinguish execution overall execution journal acm vol article publication date september universally composable security differs operation contrast equivalent environment overall computational communicate polynomial amount bound function security parameter alone another alternative define resource bound ITMs parameterized define restrict iti computation function security parameter alone overall iti bound security parameter formulation actually popular notion choice reference bound simpler allows proposition akin proposition however drawback capture algorithm protocol input alternatively activation instance signature scheme ppt security parameter alone message bound fix polynomial security parameter similarly message bound fix polynomial security parameter contrast standard definition cryptographic primitive signature scheme encryption scheme pseudorandom function scheme handle activation arbitrary ppt adversary cannot bound specific polynomial security parameter consequently bound runtime fix function security parameter severely restricts protocol task express analyze within framework furthermore definition bound computation security definition inevitably weaker standard quantification ppt adversary fails adversary polynomial input bound polynomial security parameter exist protocol secure adversary ppt security parameter insecure adversary ppt input reference another drawback bound fix function security parameter advantage universality computation duality machine encoding elaborate ppt ITMs input ppt itm simulate operation ppt ITMs sufficiently input suggests universal turing machine receives description itm simulated plus sufficiently input allows simulation universality notion feasible computation useful gain assurance validity definition security define later bound ITMs function security parameter alone indeed notion security define longer ITMs bound difference cosmetic instance pseudorandom function respect query bound fix polynomial security parameter construct without computational assumption whereas standard notion implies function  goldreich        müller      useful discussion model ppt ITMs shortcoming journal acm vol article publication date september canetti protocol execution UC emulation formulates model protocol execution definition UC emulation central define security protocol definition however formulate within model computation depth formulation variant protocol emulation defer formulate notion realize ideal functionality model protocol execution defines protocol emulation alternative formulation variant definition model protocol execution model protocol execution extends model protocol execution expressive formalism model explicitly communication channel machine explicit provision corrupt discus exemplifies capture communication corruption model model execution formally model protocol execution define ITMs formulate recall ITMs consists initial itm function initial itm correspond environment function encode adversary protocol various itis communicate proceed actual definition highlight challenge extend definitional recall mechanism iti communication namely external mechanism mandate iti aware identity sometimes program recipient furthermore mechanism sometimes allows recipient iti identity program sender incompatible subroutine substitution composition operation define indeed subroutine substitution replaces program subroutine program furthermore iti oblivious replacement model reconcile contradict requirement furthermore model involves environment machine role multiple itis mechanism input environment recipient input itis environment model computation reconcile requirement define appropriate function model ITMs model consists extend parameterized ITMs exec initial itm environment input initial actual environment protocol execution function exec define summarize external writes environment pas input input itis choice itis sid function code itis specify extend identity iti adversary identify pid definition ppt ITMs earlier version definitional attempt discussion   particularly instructive journal acm vol article publication date september universally composable security summary model protocol execution pid target iti code target iti function precisely external operation flag extend identity target iti tape reveal sender flag extend identity source iti andm message handle input tape sid sid external operation execution operation reject pid input tape iti identity code iti exists invoked input tape iti identity code ifr sender identity recipient input tape input tape recipient source extend identity session identifier itis sid session itis code sid sid external writes function allows adversary iti pid backdoor tape itis addition tape exist itis external request flag unset external writes itis external operation itis sender extend identity outgo message namely reveal sender flag journal acm vol article publication date september canetti itis backdoor tape flag unset recipient code specify message deliver regardless code adversary furthermore message cannot import addition itis pas input subroutine output iti modification iti session target tape subroutine output tape target iti exist subroutine output tape along target extend identity sender identity sender code execπ def  exec itis invoked execution protocol consist extend session jumping ahead model protocol execution simplification execution environment bridge gap via notion subroutine respect protocol UC emulation formalizes notion protocol emulate another protocol extend definition model express nuanced variant concept environment machine specifically formulate notion identity bound environment balance environment external identity identity bound environment recall model protocol execution environment extend identity source input sends protocol extend identity environment external identity environment external identity indeed essential input subroutine output external entity protocol convenient situation protocol analyze external identity instance protocol designer reserve identity protocol subroutine itis furthermore identity environment protocol extra  capture identity environment  external identity generally identity dynamically execution PT predicate input entire configuration environment input protocol determines accept source identity assume environment balance environment notion protocol emulation unnecessarily restrictive environment satisfy regard relative import protocol itis adversary environment transfer import adversary serf simplify model analysis security simplifies proof structural model lemma theorem crucially restriction affect expressive model jumping ahead restrict predicate easy emulates protocol harder later specifically context composition theorem indeed decision extend identity designate external protocol discussion definition compliant protocol journal acm vol article publication date september universally composable security recall  already restrict parameterized import iti security parameter furthermore definition protocol emulation concentrate import input environment polynomial security parameter however restriction limit relative import input environment adversary itis difference arbitrary polynomial security parameter consequently model allows environment situation computational resource protocol hence protocol  communication complexity arbitrarily relative computational resource available adversary situation unnatural instance environment polytime adversary protocol communication indeed situation definition UC emulation definition become overly restrictive avoid situation attention restrict environment amount resource adversary namely overall import input adversary receives comparable amount resource itis specifically environment balance execution overall import input adversary sum import input itis execution environment import itis overall overall import input adversary stress import adversary arbitrarily polynomially relative overall import environment protocol itis distribution ensemble  formal definition recall definition distribution ensemble  probability distribution ensemble infinite probability distribution distribution associate ensemble output computation parameter input parameter security parameter suffice restrict attention binary distribution distribution definition binary probability distribution  indistinguishable exists probability distribution ensemble output ITMs namely output environment precisely ensemble execπ def execπ stress definition considers distribution polynomial essentially situation initial input environment polynomial function security parameter recall import initial input indeed adversary prescribed protocol exemplify protocol identical instructs adversary initial random message proportional import adversary echo message message import UC emulate accord definition  adversary delivers protocol message bound halt mimic behavior simulator additional handle additional message polytime exist environment itis import journal acm vol article publication date september canetti environment finally formally define UC protocol emulation definition ppt protocol predicate extend identity UC emulates respect identity bound environment UC emulates ppt adversary exists ppt adversary balance ppt identity bound environment execϕ execπ UC emulates simply UC emulates essentially discussion interpretation UC emulation restrict model apply alternative formulation UC emulation subsection alternative formulation UC emulation definition environment non binary output definition quantifies environment generate binary output extension model environment arbitrary output definition security output ensemble execπ execϕ longer binary computationally indistinguishable define yao reference easy however extra generality definition equivalent definition deterministic environment environment arbitrary external input polynomial suffices deterministic environment definition quantifies deterministic environment equivalent definition proof omit however equivalence environment environment input import emulation respect dummy adversary definition simplify instead quantify adversary suffices ideal protocol adversary simulate environment behavior specific adversary adversary dummy adversary delivers backdoor message generate environment specify recipient delivers environment backdoor message generate protocol otherwise dummy adversary hardest adversary simulate simulate adversary implies simulate adversary intuitively dummy adversary hardest simulate environment communication protocol leaf simulator wiggle specifically dummy adversary denote proceeds activate input import input message deliver identity code iti import writes backdoor tape iti identity code limitation described activate message backdoor tape adversary subroutine output along extend identity sender recall message import polynomially bound mechanism variable import minus import backdoor tape minus input incoming message backdoor tape activation variable security parameter journal acm vol article publication date september universally composable security activation without message mechanism implement linear target identity input message environment message environment albeit import message environment adversary additional import without deliver message definition ppt protocol predicate extend identity UC emulates protocol respect dummy adversary exists ppt adversary balance ppt identity bound environment execϕ execπ ppt protocol predicate extend identity  definition UC emulates respect dummy adversary discussion technical emulation respect dummy adversary easy definition involves quantifier furthermore restricts interface environment adversary indeed notion almost easy however chose formulation notion protocol emulation somewhat intuitively appeal definition harder convince emulation respect dummy adversary capture security requirement task farther away notion security reference obvious definition closure transitivity UC emulation respect dummy adversary easy UC security relaxation notion observational equivalence reference indeed observational equivalence essentially fix entire interacts whereas UC emulation respect dummy adversary allows analyst insert simulator translates adversarial interface adversarial interface external cannot distinguish proof fix predicate extend identity proof construct identity bound environment clearly UC emulates definition UC emulates respect dummy adversary implication direction access communication environment adversary quantify environment essentially implies quantification adversary precisely protocol SD adversary guaranteed definition emulation respect dummy adversary SD satisfies execϕ SD execπ balance ppt UC emulates accord definition purpose adversary construct adversary execϕ execπ balance ppt adversary simulated instance SD obtains input import operates locally activates input import till completes activation really away token simulated within activates SD input  outgo message generate activation identity code target iti journal acm vol article publication date september canetti message import message recall message subroutine output environment backdoor message iti generate message activation input SD instruction empty subroutine output environment  input SD asi maximum polynomial bound protocol overall import input execution overall import SD assume later argue validity instruction SD SD instructs message tape iti writes message tape iti obtains message backdoor tape operates activates SD incoming message backdoor tape SD SD completes activation activation SD generates message backdoor tape iti writes message backdoor tape iti message generate SD par activates message iti code backdoor tape subroutine output SD import halt instruction guarantee remains ppt SD faulty activation generates outgo message generates message message generate aim another iti activates SD input message generate import message identity code recipient iti input SD import instruction SD generate outgo message graphical depiction operation analysis argue ppt dominate module plus SD module simulation overhead overall import input recall import backdoor tape overall module polynomial bound overall import input SD module within SD bound psd psd denotes polynomial bound SD proof assert validity assume contradiction adversary balance identity bound environment execϕ execπ construct balance identity bound environment ED execπ ED execπ execϕ SD ED execϕ execϕ SD ED execπ ED contradiction premise UC emulates respect dummy adversary andrew miller activate SD generates subroutine output environment message environment ED construct later proof remains balance indeed previous version journal acm vol article publication date september universally composable security operation simulator proof SD simulated internally structure operation adversary definition simulation environment ED internally interaction simulated instance activation initial input ED activates input halt output ED halt output generates input import iti identity iti code iti target iti adversary ED sends input iti target iti adversary ED activates input import completes activation ED input external adversary mimic input SD receives within ED external adversary input outgo message generate activation identity code target iti message import message import input external adversary maximum polynomial bound protocol import input activation overall import input execution stress ED activates external adversary target message environment generate message activation ED ED instructs external adversary empty subroutine output environment target identity message input external adversary environment ED enters bypass ED obtains subroutine output tape output external adversary operates ED bypass exit bypass activates output proceeds ED bypass deliver output directly similarly behavior ED par activates incoming message iti code till completes activation activation generates journal acm vol article publication date september canetti outgo message environment ED activates output generate message activation ED activates output ED proceeds message generate aim another iti ED activates external adversary input message import message identity code recipient iti import input ED obtains output iti adversary activates output proceeds clearly identity bound ED argue ED balance balance execution ED import ED iti adversary import iti overall import ED external adversary overall import external adversary namely assume ED balance verify ensemble execπ ED execπ identically distribute instructive due insufficient similarly execϕ SD ED execϕ identically distribute SD distribute identically SD module within emulation respect simulation another alternative formulation definition imposes technical restriction simulator instead simulator adversary simulator access code simulator remains restrict simulator manner capture tangible security concern context classic notion zero knowledge requirement strictly restrictive notion security definition description reference UC framework security via simulation equivalent standard notion security emulation formulate overall model protocol execution unchanged imposes restriction operation simulator specifically adversary composite consists program itm subroutine program another itm upon activation composite adversary program activate program invokes activates subroutine obtains subroutine output subroutine access program internal subroutine furthermore subroutine access outgo message tape overall composite itm simulator program composite adversary SA denote composite adversary consists program subroutine itm simulator ppt bound polynomial ppt computational program SA bound overall import SA input tape overall import definition predicate extend identity protocol UC emulates protocol simulation exists ppt adversary ppt adversary balance ppt identity bound environment execϕ SA execπ UC emulation simulation equivalent UC emulation journal acm vol article publication date september universally composable security ppt multiparty protocol  predicate extend identity UC emulates definition UC emulates simulation proof direction definition direction simulator proof simulator consists program SD discussion formulation security via simulation considerably restrictive standard cryptographic model simulation standard model simulator random tape effectively rewind reset arbitrary previous execution contrast communication restrict obtain subroutine output execution potentially hidden randomness definition equivalent non notion security formulation simulation reminiscent notion blackbox simulation reference reference however simulation equivalent definition due formalization probabilistic polynomial simulator environment variant definition simulator code environment exist simulator satisfies execϕ execπ reference variant emulation respect specialized simulator argue reference emulation respect specialized simulator directly guarantee promise UC security indeed proof UC theorem crucially simulator environment however within framework emulation respect specialized simulator actually equivalent fledge UC security hence UC specialized simulator suffices apply UC theorem protocol UC emulates protocol definition UC emulates respect specialized simulator proof clearly UC emulates definition UC emulates respect specialized simulator direction assume UC emulates respect specialized simulator ppt adversary ppt environment exists ppt simulator execϕ execπ universal environment input consist encode itm input bound import input input output whatever output halt clearly machine ppt linear input guaranteed exists simulator execϕ execπ execϕ execπ balance ppt environment fix ppt machine definition letc constant exponent bound distribution execϕ identical distribution execϕ similarly distribution execπ identical distribution execπ consequently execϕ execϕ execπ execπ journal acm vol article publication date september canetti polynomial polynomial albeit polynomial consequently execϕ execπ polynomial derivation remark extension equivalence argument computationally unbounded environment adversary reference crucial proof environment permit existence environment universal respect environment context computationally bound environment feature becomes definition ppt ITMs security parameter input indeed definitional framework literature reference model restrict ITMs bound fix polynomial security parameter framework standard security security respect specialized simulator notion reference variant UC emulation variant notion UC emulation specifically statistical emulation emulation respect environment quantitative notion  additional observation statistical perfect emulation definition extend standard notion statistical perfect emulation reference unbounded complexity simulator polynomial complexity statistically UC emulates addition execϕ execπ identical perfectly UC emulates another variant allows unlimited computational regardless complexity however variant weaker security guarantee reference security respect environment definition considers environment input polynomial generate arbitrary recursively input initial joint adversary alternatively environment namely environment meaningful external input notion security considers environment external input contains information import environment input protocol internal stochastic environment indeed jumping ahead UC theorem respect environment specialized simulator simulator environment UC theorem respect environment quantitative notion emulation notion protocol emulation define qualitative security essentially guarantee feasible attack feasible attack feasible interpret broadly polynomial subsection formulates quantitative variant definition parameter quantify emulation slack meaning probability environment distinguishes interaction interaction simulation overhead meaning difference complexity adversary construct adversary recall itm bound function bound journal acm vol article publication date september universally composable security definition functional function function function definition protocol predicate extend identity functionals UC emulates emulation slack simulation overhead UC emulates polynomial bound adversary exists bound adversary polynomial bound identity bound environment input execϕ execπ  security parameter protocol depends naturally understood context omit concrete variant definition abandon asymptotic framework instead concentrate specific security parameter definition protocol predicate extend identity UC emulates adversary exists adversary identity bound environment input execϕ execπ stress definition quantifies ppt environment adversary polynomial complexity potentially formulate definition  environment adversary simulator weaker definition quantify environment adversary specific complexity however definition considerably weaker definition guarantee security adversary environment bound specific runtimes furthermore protocol simulator contrast definition bound specify parameter arbitrarily complex environment adversary indeed fully parametric definition universal composition theorem  simulation theorem account appropriate quantitative degradation simulation overhead emulation slack simulation overhead additive notion  simulation overhead bound additive polynomial factor depends protocol independent adversary protocol predicate UC emulates definition exists polynomial UC emulates otherwise UC emulates guaranteed overhead additive polynomial factor depends furthermore increase emulation slack predicate intrinsic simulation overhead respect proof proof indeed proof construct adversary valid simulator complexity bound polynomial bound polynomial complexity equation journal acm vol article publication date september canetti UC emulation transitive observation straightforward protocol predicate UC emulates UC emulates protocol UC emulates moreover UC emulates UC emulates UC emulates functional output sum output denotes composition functionals transitivity protocol protocol bound constant complexity adversary longer bound polynomial overall polynomial bound intrinsic simulation overhead implies simulation overhead remains polynomial protocol polynomial similarly emulation slack remains negligible protocol polynomial stress transitivity UC emulation confuse  multiple nest protocol application UC theorem  security  apply machinery UC emulation developed towards goal namely define security protocol via realize ideal functionality formulate additional structural protocol  protocol essentially protocol itis session input generate output itis member extend session facilitate additional requirement formulate mechanism structural requirement protocol mechanism dub mechanism extensively throughout article capture variety situation security concern within minimalistic formal framework mechanism subroutine respect protocol defines ideal functionality ideal protocol functionality definition securely realize ideal functionality structure protocol subsection mechanism tune model protocol execution capture realistic attack security concern  instead directly analyze security protocol protocol augments prescribed essentially encapsulate within wrapper code monitor sometimes modifies communication outside conceptually code model related instruction mental security analysis advantage mechanism capture actual setting structure protocol legal protocol per model hence structural apply indeed mechanism extensively instance code sends message backdoor tape responds message tape typically code indeed actual code typically message communicate adversary mechanism capture communication corruption within model journal acm vol article publication date september universally composable security specifically protocol itm structure consists sub convenient structure itm ITMs itm access tape whereas access tape externally writable tape externally writable tape outgo message tape outgo message tape externally writable outgo message tape become internal tape writable readable respectively extend identity extend identity layout      sid pid denote sid pid program subscript denote respectively identity tape whereas pertain neither modify identity tape activation activate activate activate activation executes execute completes activation resume execute stress sends outgo message completes activation outgo message outgo message tape outgo message tape definition bound ITMs definition applies structure ITMs import balance structure itm calculate respect incoming outgo  import message overall import balance import incoming message import incoming message protocol henceforth assume structure furthermore structure protocol structure protocol multiple unaware outer treat inner prevalent later innermost correspond actual  code model code namely code security subroutine respect protocol model protocol execution highly simplify render execution protocol session within execution environment protocol session alongside itis model itis machine member extend session furthermore input session sub session situation obtain subroutine output iti already member extend session similarly situation obtain input iti already member extend session furthermore input another iti member extend session situation recipient iti already exists member extend session contrast execute component itis outside extend session coexist situation indeed furthermore gap definition ITMs incoming message externally writable tape footnote  ram pram model instead redirect message tape journal acm vol article publication date september canetti formal model actual execution environment actual attack advantage actual execution environment assume absolute separation extend session protocol mechanism bridging gap vitro model protocol execution execution environment capture variety gap bridge define behavioral requirement protocol formulate restriction message receipt generation without specific requirement implement protocol satisfy behavioral requirement subroutine respect behavioral guarantee arguably suffice capture intuitive notion security suffice universal composition theorem sake concreteness formulate specific mechanism implement behavioral requirement mechanism model separation namely attempt extraneous communication member extend protocol session itis intercept construction alternative mechanism separation future definition protocol subroutine respect session within execution protocol environment satisfies requirement execution protocol adversary environment per definition protocol execution stress requirement satisfied session subroutine execution involves itis member extend session sub session reject input iti already subsidiary session recall reject message recipient iti return prior message activation without message sub session reject incoming subroutine output iti already subsidiary session sub session subroutine output exist iti already sub session sub session input exist iti already sub session subroutine respect protocol model protocol automatically subroutine respect indeed requirement already bake static communication structure embody construct communication generally guarantee protocol remain subroutine respect naturally inter communication generally separation physical consideration sake concreteness formalism structure protocol become useful define protective architecture itis session analyze protocol within isolated sandbox enforces   itis input external itis input exist external iti subroutine output sub session external iti protective execution environment capture appropriately relax guarantee journal acm vol article publication date september universally composable security specifically sandbox protocol program proceeds activation code structure iti sid flag code sid caller iti code sid iti addition incoming message input oppose subroutine output flag sub halt remain inactive subsequent activation indicates iti session indicates caller iti member extend session message externally writable tape message input flag input transfer directly sub flag verify iti code sid activate input message reject input similarly message subroutine output iti verify code sid iti activates subroutine output reject output incoming backdoor message without presumably message handle inner within completes activation outgo message iti outgo message subroutine output flag message generate instruction output iti code code sid sid recipient similarly input message generate instruction input iti code code sid sid recipient verify sandbox overall structure protocol subroutine respect regardless behaves indeed session sid sid itis extend session furthermore sub extend session sid prevents sub session subroutine output itis already sub session prevents member session input exist itis already member session realize ideal functionality security protocol define protocol execution ideal task ideal thanks christian  julia       mistake previous formulation subroutine respect protocol develop formalism journal acm vol article publication date september canetti protocol ideal protocol task recall ideal protocol consists ideal functionality machine capture desire functionality task instruction trust plus multiple dummy role ideal protocol syntactically distribute protocol consists multiple machine input ideal functionality subroutine output ideal functionality specify destination extend concept ideal functionality ideal protocol model ideal functionality simply iti pid ideal functionality meaningless formally extend notion dummy dynamic formalism indeed dummy computation dynamically generate identity program furthermore transmit unbounded volume input subroutine output ideal protocol ideal protocol idealF ideal functionality define sid activate sid pid input iti extend identity  reveal sender identity flag pas input  instance identity iti code sid pid reveal sender identity flag recall flag implies iti exist invoked furthermore obtain pid dummy activate subroutine output  iti code identity actual subroutine output  extend identity target iti pas subroutine output iti extend identity  reveal sender identity flag message backdoor tape corruption message ignore intention ideal protocol adversary corruption instruction directly ideal functionality discussion dummy ideal functionality protocol security analysis code ideal functionality technically protocol session idealF code access environment via dummy idealF formally ppt without complexity task protocol polynomial bound dummy dummy shave import ideal functionality specifically polynomial bound polynomial bound idealF fix potentially polynomial upon input import idealF pas import similarly upon subroutine output import idealF pas import target iti activation without anything mechanism guarantee activate input subroutine output import idealF import allows similarly furthermore faster ratio tends grows convention allows protocol designer journal acm vol article publication date september universally composable security approximation without sacrifice precision analysis dummy essentially transparent import input  realize ideal functionality finally define protocol specification specification consists interdependent correctness termination secrecy requirement ideal functionality UC realizes UC emulates ideal protocol however requirement suffice guarantee meaningful security additionally  itis associate session communication itis via input session subroutine output generate capture realize protocol subroutine respect definition ideal functionality protocol predicate extend identity protocol UC realizes subroutine respect addition UC emulates idealF ideal protocol universal composition universal composition operation prof universal composition theorem respect definition UC emulation formulate graphical depiction composition operation defines composition operation composition theorem proof discus motivates aspect theorem sketch extension composition operation proof composition theorem extend model execution extension significant model operation substitute session protocol session protocol  UC realizes straightforward dynamic model operation delicate surgery careful specification furthermore model computation allows protocol  subroutine composition operation formulate operation protocol namely transformation apply code protocol model operation finally composition operation replaces session session composition operation replaces multiple session  seamless protocol subroutine protocol alternatively simply definition idealF described item idealF polynomially bound validity model analysis invalidate conclusion proposition ideal protocol idealF propose footnote overall exposition idealF polytime previous formulation ideal protocol ignore dummy polytime previous formulation dummy adversary issue incorrect proof   error formalize composition operation operation protocol allows treat compose protocol without specific model protocol execution allows model execution unchanged throughout journal acm vol article publication date september canetti universal composition operation theorem universal composition operator input protocol presumably subroutine protocol presumably UC emulates intention compose protocol behaves essentially replaces however intuitive intend meaning detail define operator formally mechanism specifically code target code input itis session similarly subroutine output generate itis source code function properly sub itis extend session structure protocol remain unaware existence replacement itis sub session session session namely iti sub iti session specifically protocol compose protocol structure protocol denote activate input respectively subroutine output iti code identity sid pid activation subr variable variable subr variable sid code protocol UC operator apply iti extend instance variable subr sid code instance otherwise subr code sid iti variable subr occurs iti iti instance protocol iti outside instance activate input respectively subroutine output iti code identity sid pid input code sid iti sid iti iti interpret structure code code code subroutine output addition subr instructs pas input respectively subroutine output iti identity sid pid input respectively subroutine output iti code identity sid pid subr subr sid subroutine output code sid iti subr sid subr provision prior version   omission journal acm vol article publication date september universally composable security subroutine output code sid iti sid subr subr backdoor message adversary without similarly backdoor message generate adversary without protocol ppt ppt bound polynomial essentially maximum individual bound polynomial protocol ideal protocol idealF ideal functionality denote compose protocol compliant subroutine expose protocol UC theorem generally protocol UC realizes protocol protocol UC realize protocol however model impose restriction identity itis input instance compliant respect realizes subroutine respect construct subroutine structure expose adversary mechanism adversary extend identity iti iti currently member session detail protocol compliant external writes sub session target tape input tape mode similarly message subroutine output tape itis reveal sender flag subroutine output reject external instruction external instruction member extend session instruction target code instruction target code target sid extend identity itis extend session pas input itis code satisfy predicate identity bound environment polytime predicate input entire configuration iti input member protocol session determines accept input stress however predicate evaluate locally iti proceed requirement namely subroutine structure relevant session protocol respectively expose adversary  protocol requirement without specify implementation concrete mechanism implement requirement definition protocol subroutine expose session within execution protocol environment interface adversary adversary specify extend identity notify response member extend session interface query backdoor tape iti extend identity alone requirement implement straightforward nutshell mechanism session dedicate directory iti itis currently belong extend session iti journal acm vol article publication date september canetti extend session session query directory iti session directory iti iti extend session inform directory iti activation generate input subroutine output iti detail specify mechanism structure protocol subroutine expose session structure code denote proceeds identifier interpret directory activation iti code sid pid sends input reveal  flag directory iti upon directory iti resume processing activation local code local identity instructs input respectively subroutine output iti sends input input respectively subroutine output iti instruction iti item upon subroutine output external writes input tape iti sub session obtain machine session directory iti directory serf itis extend session local identity activate instead activate input iti iti session eligible itis member extend session subroutine output activate input input subroutine iti already member extend session session report subroutine output output eligible itis output activate backdoor message query adversary informs adversary iti member extend session directory iti remains polytime invoke input import register plus query composition theorem theorem corollary quantitative statement UC theorem theorem universal composition statement ppt protocol ppt predicate compliant subroutine respect subroutine expose UC emulates protocol UC emulates protocol alternative subroutine protocol subroutine expose directory iti invoke itis subroutine newly invoked iti contact iti obtain actual message alternative formal advantage sub session formally subroutine iti chose somewhat another protocol subroutine expose reference mandate hierarchical subroutine structure protocol invocation furthermore hierarchical structure sids convention sometimes overly restrictive suffice journal acm vol article publication date september universally composable security stress UC emulates respect environment identity bound namely environment assume identity input itis corollary universal composition ideal functionality ppt protocol ppt ideal functionality ppt predicate idealF compliant idealF subroutine respect subroutine expose UC realizes protocol UC emulates protocol concentrate protocol securely realize ideal functionality corollary essentially protocol securely realizes ideal functionality ppt securely realizes securely realizes corollary universal composition realize ideal functionality ideal functionality ppt subroutine expose idealF compliant protocol UC realizes subroutine expose protocol UC realizes compose protocol UC realizes proof adversary interacts itis theorem guarantee exists adversary   environment UC realizes UC realizes respect identity bound environment exists simulator   AF identity bound transitivity  ensemble obtain   identity bound environment proof theorem outline proof proof proof significantly complex source complication dynamic boundary protocol session another handle replace multiple session session composite simulator identify incoming input backdoor message session message pertains reduce environment session environment distinguishes complication contrast model straightforward proof outline proof formulation emulation respect dummy adversary equivalent standard definition formulation considerably simplifies proof UC emulates compliant compose protocol construct adversary ppt interact dummy adversary satisfy   outline proof proceeds UC emulates guarantee exists adversary simulator identity bound environment execπ execϕ journal acm vol article publication date september canetti construct simulator demonstrate satisfies equation reduction environment violates equation construct environment violates equation construction simulator operates recall interact itis interaction backdoor tape protocol itis via mimic backdoor message sub session backdoor message session simulator mimic backdoor message itis interacts directly itis mimic dummy adversary recall itis member extend session member extend session itis player specifically recall delivers via dummy adversary backdoor message member sub session addition backdoor message itis dummy adversary address expectation internally session simulator session interacts activate message iti treat handle instance iti session handle correspond instance instance exists generates input instance directory iti session member extend session instance responds positively input handle instance generates input instance instruction deliver backdoor message iti instruction instance activation overall import input overall import input none instance positively treat namely backdoor  deliver iti subroutine respect situation member extend session activate backdoor message iti treat handle instance mechanism iti session correspond instance instance exist iti session directory itis session member extend session respond positively activates instance incoming backdoor  instruction instance activation none directory itis responds positively treat namely message subroutine respect situation member extend session occurs session recursively session subroutine session namely session subsidiary session import import construct environment balance polynomial bound roughly   polynomial bound maximum session generate discussion detailed proof journal acm vol article publication date september universally composable security operation proof composition theorem input backdoor message itis extend session actual recipient input session correspond instance backdoor message instance correspond actual session graphical clarity session multi protocol instance associate session exist handle instance associate correspond session graphical depiction operation description simulator defer detailed proof analysis assume exists environment distinguishes probability interaction interaction upper bound session invoked interaction construct environment distinguish probability interaction itis session interaction session construction analysis proceeds via traditional hybrid argument however apply argument explain naively argument proceed denote protocol session remain unchanged whereas session replace session therefore random distinguish probability interaction interaction exploit random interacts respectively internal instance interaction respectively however overall indeed solid hybrid protocol itis lth session globally invoked furthermore simulator behave differently session global around define hybrid differently protocol instead define function lth function replaces session session similarly modify simulator journal acm vol article publication date september canetti operation interaction simulated session remain unchanged lth session mapped external execution remain session replace session graphical clarity session multi protocol asks environment session session simulated member session treat Sˆ denote modify simulator construct interacts respectively internal instance respectively lth hybrid specifically chooses random simulated execution Sˆ lth function sketch exception whenever Sˆ asks simulate session positively session actual interaction replace simulated execution interaction lth session denote whenever simulated player input sub lth session environment input correspond iti external execution subroutine output generate actual iti treat subroutine output correspond simulated player similarly whenever simulated adversary Sˆ input  session corresponds input actual adversary interacts subroutine output obtain actual adversary Sˆ subroutine output correspond instance simulated halt halt output whatever output graphical depiction operation detailed proof proceed detailed proof theorem substantiate outline journal acm vol article publication date september universally composable security simulator protocol construction UC emulates respect  environment compliant compose protocol simulator instance execϕ  identity bound environment simulator validity ppt polynomial bound polynomial bound bound journal acm vol article publication date september canetti session invoked import input balance assume exists balance environment machine violates validity violates equation construct balance identity bound environment machine violates validity respect violates equation specifically fix input security parameter assume   execπ execϕ polynomial function construct hybrid preparation define hybrid execution protocol adversary environment upper bound session within execution session protocol execution subsidiary session execution bound analysis itis aware ppt polynomial recall  function define model protocol execution protocol adversary hybrid function function  Sˆ identical function  exception external request input tape itis  session invoked within session redirect correspond session external request input tape itis session treat  denote sid ith session invoked within session external request iti input tape iti  pid pid function writes request input tape iti iti exists invoked stress modification apply external request iti itis member extend session factor increase complexity import instance comparable entire import account model allows session import import session instance consistent execution environment balance indeed import instance maximal namely resolve issue additional factor guarantee environment define later remains balance essentially factor account itis protocol obtain additional import via backdoor message obtain adversary import individual session overall import environment restrict setting import session advance alternatively session roughly import alternatively depends import itis addition import session import polynomial bound complexity becomes maximum polynomial bound convention import binary unary becomes journal acm vol article publication date september universally composable security similarly whenever  pid request pas subroutine output iti function code iti subroutine output tape adversary invoked  Sˆ denote Sˆ identical exception Sˆ receives input aim session asks environment session simulated Sˆ proceeds respect session member session treat similarly Sˆ receives backdoor message member session asks environment session simulated Sˆ proceeds respect session member session treat definition hybrid model environment crucial execution itis member extend session furthermore iti subsidiary session membership invocation subroutine respect construction analysis environment ppt entire execution polynomial indeed polynomial bound bound maximum polynomial bound compliant identity bound spite identity bound furthermore balance balance execution overall import external adversary twice import adversary execution overall import itis session overall import itis session plus import member via backdoor message however overall import bound import adversary namely balance proof analyzes validity demonstrate execϕ Sˆ respectively execπ Sˆ denote distribution execϕ Sˆ respectively execπ Sˆ chose execϕ Sˆ distribute identically  indeed distribute identically execution similarly execπ Sˆ distribute identically  distribute identically execution consequently inequality equation rewrite execϕ Sˆ execπ Sˆ furthermore execϕ Sˆ execπ Sˆ journal acm vol article publication date september canetti environment session journal acm vol article publication date september universally composable security equation inspection Sˆ indeed simulated within distribute identically identical interact Sˆ hybrid namely function  Sˆ Sˆ regard session simulate equation execπ execϕ execϕ Sˆ execπ Sˆ execϕ Sˆ execπ Sˆ contradiction assumption valid simulator discussion extension aspect universal composition theorem highlight additional aspect extension theorem composability respect environment recall environment variant definition emulation definition considers environment external input contains information import UC theorem variant proof compose multiple protocol composition theorem theorem replace session protocol session another protocol theorem multiple protocol replace protocol respectively directly extend proof define universal protocol mimic multiple nest protocol session universal composition operation apply repeatedly perform nest replacement sub protocol sub protocol instance protocol UC emulates protocol protocol UC emulates protocol protocol compose protocol UC emulates recall UC theorem demonstrates simulation overhead grows composition additive factor depends protocol involve security preserve nest polynomial depth consequently UC theorem apply polynomially UC theorem extends arbitrary polynomial nest UC operation independently reference variant UC framework beyond ppt UC theorem proven ppt ITMs namely involve entity ppt readily theorem ITMs definition guarantee execution ITMs simulated itm precisely ITMs simulatable ITMs itm representation exists itm input random input subroutine output session journal acm vol article publication date september canetti subroutine output proposition asserts super additive function ITMs simulatable protocol UC emulates protocol respect definition ppt ITMs replace namely ITMs proposition simulatable ITMs protocol UC emulates respect protocol UC emulates protocol respect stress however UC theorem false setting ITMs cannot simulated itm exemplify entity bound ppt protocol ppt specifically ideal functionality ppt ppt protocol UC realizes respect ppt environment protocol session ideal protocol UC emulate ppt emulate define recall definition pseudorandom ensemble evasive define reference related purpose ensemble pseudorandom evasive ensemble pseudorandom random computationally indistinguishable evasive non uniform ppt algorithm prob negligible reference via counting argument pseudorandom evasive ensemble exist define ensemble interacts iti security parameter   input output otherwise output protocol realize security parameter output input output easy UC realizes evasive probability input negligible output negligible probability furthermore output pseudorandom indistinguishable output hybrid protocol session denote upon invocation security parameter activates obtains  chooses output output halt otherwise obtain output output otherwise output fail easy output however output separation ppt protocol UC realizes protocol output negligible probability UC  computational MODELS earlier model computation explicit mechanism model communication network limited mechanism schedule    sahai journal acm vol article publication date september universally composable security distribute explicit mechanism express adversarial infiltration computational entity explicit express leakage information compute device indeed bare model immediately realistic protocol attack security requirement forth mechanism capture realistic protocol attack security requirement convention model formulates ideal functionality capture abstraction model communication motivate introduction abstract model compose protocol ideal functionality abstract model protocol realize functionality abstract model preserve overall security addition capture specific convention ideal functionality exemplifies model platform tune expressive model toolbox technique ideal functionality capture situation concern guarantee mechanism express various corruption namely model situation computational entity deviate prescribed protocol potentially adversarial useful convention ideal functionality ideal functionality capture commonplace abstract model communication specifically authenticate secure synchronous communication finally ideal functionality capture non concurrent protocol execution model corruption operation corruption construct model analyze security cryptographic protocol corruption capture variety concern situation preserve secrecy eavesdropper adversarial byzantine behavior resilience virus exploit resilience channel attack incoercibility model protocol execution definition protocol emulation explicit mechanism model corruption instead demonstrates corruption model via convention regard protocol instruction perform upon backdoor message adversary choice model simpler cleaner flexibility capture variety concern via corruption mechanism issue address mechanism model corruption within framework extent environment aware corruption operation extreme environment remains completely unaware corruption notion protocol emulation become loose protocol emulate protocol attack without corrupt anyone emulate attack corrupt participant extreme environment learns entire extend identity corrupt itis emulate emulate protocol identical mechanism corruption mechanism determines behavior iti corruption furthermore specifies information regard itis currently corrupt available environment upon request protocol analyst amount information environment learns corruption operation affect security UC emulation journal acm vol article publication date september canetti corrupt iti adversary writes corrupt backdoor tape denotes parameter corruption identity mask function partially mask iti identity discussion function protocol standard reveal corruption proceeds within iti code sid pid upon receipt backdoor message corrupt corrupt input corruption aggregation iti identifier return corrupt iti behavior varies accord specific corruption instructs input subroutine iti iti augments code code code standard reveal corruption protocol import adversary corruption instruction associate import specify protocol import corruption aggregation iti proceeds invoked corruption notification input corrupt iti iti return invoked report corruption status input iti presumably environment return iti notification corruption corruption aggregation machine role directory machine  protocol exception aggregate information environment adversary corruption aggregation machine iti protocol session furthermore corrupt iti member multiple nest extend session protocol protocol designer register corrupt aggregation machine protocol session identity mask function identity mask function mechanism allows specify information environment obtains corrupt itis information obtains actual subroutine structure analyze protocol determines structure extend session diverge structure extend session UC emulate instance output identity code corrupt iti environment receives identity corrupt itis protocol standard reveal corruption UC emulates iti extend session exists iti extend session identity somewhat relaxed identity mask function return pid corrupt iti itis naturally grouped cluster itis cluster pid allows hiding internal subroutine structure within cluster cluster correspond physical computer administrative entity  function instrumental model pid wise corruption another identity mask function considers sid construct hierarchical session subroutine graph identity mask function return pid plus information ancestor sid allows capture consist multiple session another protocol identity session internal subroutine structure within session finally UC emulate standard reveal corruption respect classic multi protocol ideal journal acm vol article publication date september universally composable security protocol ideal functionality behavior corruption detail corruption model sketch prevalent corruption model express within framework iti structure behavior inner corruption operation corruption unaware cannot access outer byzantine corruption simplest corruption capture corruption byzantine corruption protocol byzantine  upon corrupt message complies requirement standard reveal corruption protocol upon backdoor tape external writes presumably message recipient identity relevant flag activation due incoming input  sends entire local adversary data erasure trust model restrict protocol protocol data becomes inactive corruption non adaptive static corruption formulation byzantine corruption capture adaptive corruption namely corruption computation proceeds information adversary sometimes useful weaker threat model identity adversarially itis fix computation non adaptive static adversary framework protocol static corruption instructs upon invocation notification message adversary corruption message deliver activation later corruption message ignore passive honest curious corruption byzantine corruption capture situation adversary obtains behavior corrupt itis another standard corruption model allows adversary internal corrupt iti adversary passive passive corruption capture reaction corrupt message adversary protocol passive corruption upon corrupt message corrupt flag upon receipt input subroutine output activates activation corrupt flag sends internal adversary activation due incoming message adversary performs external operation instruct previous activation halt remains inactive future activation activate due another incoming message adversary message delivers message prepares activation additional remark variant define allows adversary whenever passively corrupt iti activate allows adversary iti halt alternative formulation adversary learns corrupt iti iti halt variant define adversary modify input iti alternative formulation adversary modify input corrupt itis literature formulation naturally however non adaptive corruption variant collapse journal acm vol article publication date september canetti physical channel leakage attack practical realistic security concern protection physical attack compute device attacker information sometimes modify internal computation device via physical access timing attack reference microwave attack reference analysis attack reference attack dubbed channel attack literature formalization security attack reference attack directly model via reaction itis corruption message instance ability adversary memory location detect whenever internal operation modular multiplication directly model corrupt iti adversary appropriate function internal leakage nuanced variant passive corruption corrupt iti discloses function internal furthermore per leakage instruction limitation model allows adversary obtain leakage information individual itis capture realistic setting channel attack joint information multiple protocol session physical device protocol resilient attack augment formal model sidechannel attack mechanism allows joint non modular leakage multiple itis mechanism described reference transient mobile corruption proactive security corruption permanent corruption iti corrupt remains corrupt throughout computation another variant allows itis recover corruption regain security corruption mobile transient security corruption proactive security transient corruption capture recover message adversary upon recover message iti reporting incoming message input adversary adversary instruction recover message report corruption aggregation iti define corruption message coercion coercion attack external entity influence input attack iti contributes computation without physically attack iti input contribute coercion mechanism coerce reveal later local obtain secret input verify consistency public transcript protocol resilience coercion meaningful setting participant susceptible social pressure voting scheme quintessential entity protocol mechanism attacker fake input fake random input indistinguishable adversary input random input actually protocol execution attacker unable attack fake input another framework coercion attack model along assume protocol description fake algorithm furthermore iti caller iti algorithm user protocol coercion compliant upon receipt coercion instruction recipient iti notifies caller iti coercion instruction caller iti return cooperate message coerce iti discloses entire internal adversary iti journal acm vol article publication date september universally composable security return report fake input message coerce iti internal sends subroutine output adversary incoercibility resilience coercion attack capture realize ideal functionality guarantee ideal incoercibility upon instruction coerce iti ideal functionality request caller iti return caller iti input instruction cooperate ideal functionality report adversary input caller iti return instruction fake input ideal functionality simply report adversary protocol  coercion compliant addition UC realizes ideal functionality guarantee ideal incoercibility ideal functionality convention pseudo code description ideal functionality clearer readable methodology ideal functionality capture commonplace security requirement identity itis input subroutine output recall framework ideal functionality extend identity itis input extend identity itis obtain subroutine output respect immediate caller dummy ideal protocol code dummy guarantee extend identity itis input dummy determines extend identity itis obtain output  feature framework crucial ability capture realistic task quintessential fauth message authentication functionality described ideal functionality input upon activation input verify iti dummy input iti extend identity similarly generate  meaning perform external operation dummy subroutine output tape iti extend identity dummy iti iti actually instruction slightly abuse terminology iti dummy ideal protocol behavior upon corruption ideal protocol idealF corruption model message adversary backdoor tape ideal functionality recall backdoor message deliver dummy ignore indeed behavior upon receipt corruption message important security specification restrict attention accepts corruption instruction identity identity exist dummy identity itis idealF specifically ideal functionality standard pid wise corruption upon corrupt message adversary pid dummy session idealF corrupt return adversary subroutine output addition input dummy ignore instead journal acm vol article publication date september canetti adversary input instruction upon receipt backdoor message input behaves input finally subroutine output intend adversary instead upon report corruption status input caller iti return corrupt identity caller instruction capture standard behavior ideal upon corruption exist definitional framework reference granularity corruption pid itis session uncorrupted fully corrupt security requirement protocol realizes granularity corrupt itis itis subroutine subroutine corrupt individually identity mask function output identity alternatively ideal functionality refine corruption mechanism corruption specific subroutine sub session secrecy leakage coercion furthermore ideal functionality overall behavior identity corrupt itis discussion scope delayed output recall subroutine output ideal functionality recipient immediately activation contrast subroutine output generate distribute protocol inevitably delayed due delay message delivery relax ideal functionality slack functionality permission adversary generate  precisely ideal functionality sends delayed output iti engages interaction instead simply output sends adversary backdoor tape message generate subroutine output subroutine output public adversary subroutine output private mention furthermore contains unique identifier distinguishes message adversary execution adversary echo unique identifier backdoor tape subroutine output arbitrary code convenient ideal functionality description arbitrary code adversary code inspect program technique ideal functionality minimal specify requirement implementation instance adversary program program security correctness satisfied violate output error message relevant itis signature encryption functionality formalize reference non interactive zero knowledge reference exist literature another technique enable express requirement adversarial isolation external environment protocol formulation non concurrent security glance technique problematic algorithm arbitrary polynomial whereas bound fix polynomial around technicality directly instead invoke subroutine iti polynomial bound appropriately import adversary namely request backdoor tape journal acm vol article publication date september universally composable security iti exist mechanism guarantee protocol subroutine respect communication model subsection capture within UC framework abstract model communication commonplace model completely unprotected adversarially communication authenticate communication secure communication synchronous communication bare framework without additional ideal functionality already model communication unprotected communication medium guarantee regard secrecy authenticity delivery communicate information specifically message communication medium amount message adversary message medium amount message adversary express specification proceed completes activation outgo message network writes network backdoor tape adversary similarly activate message network backdoor tape activates incoming message network capture abstraction ideal functionality capture authenticate secure synchronous communication respectively authenticate communication ideally authenticate message transmission primitive allows entity message entity allows verify message indeed guaranteed accepts message furthermore requirement meaningful protocol namely corrupt adaptive corruption authenticity requirement meaningful uncorrupted protocol precisely somewhat informally assume computational entity associate immutable identity sender identity identity intend recipient assume sender namely identity receiver onset protocol receiver knowledge ahead accepts message learns framework protocol assume ideally authenticate message transmission cast protocol access ideal authenticate message transmission functionality capture formalizes functionality security requirement informally formalization cast informal notion entity identity within model model sender extend identity namely iti computational initiate transmission message similarly recipient specify extend identity iti computational message stress program implement message entity message transmission service formalism sender receiver code fully disclose code discus later journal acm vol article publication date september canetti message authentication functionality fauth proceed ideal functionality activation ideal authenticate message transmission functionality fauth input iti sid precisely source iti input dummy fauth extend identity iti input dummy indeed recall code dummy extend identity iti invoked sid sid fauth extend identity intend recipient iti message input fauth contains pid fauth flag reveal sender flag  clarity fauth generates public delayed output sid fauth sends adversary backdoor tape upon backdoor tape fauth writes sid subroutine subroutine output tape precisely fauth output dummy identity sid dummy output fauth accepts adversarial corruption request corrupt message deliver receiver fauth adversary message deliver identity receiver finally response request fauth report corrupt request report corruption mental assert security correspond actual input generate actual code specifically request sender report information onwards eventually environment lean corruption information potentially aggregate highlight regard security guarantee fauth fauth reveals content message extend identity sender receiver adversary capture secrecy message sender receiver identity guaranteed argue reveal code sender receiver expose participant furthermore sender code recipient advance however issue address protocol fauth itis directly fauth subroutine output fauth code generic contains sensitive information fauth allows adversary content message destination sender corrupt delivery uncorrupted message provision capture journal acm vol article publication date september universally composable security recipient actually generates output formalization formalism distinguish sender corrupt receiver corrupt grain formalization distinction instance intend recipient corrupt content message adversarially identity receiver remains fauth guarantee non transferable authentication interact fauth receiver gain ability protocol whereby reliably learns message indeed sender situation guarantee achievable suffice appropriately relaxed variant fauth reference finally highlight model choice fauth fauth authenticate transmission message authenticate transmission multiple message obtain multiple session fauth rely universal composition theorem security important allows session protocol authenticate communication session fauth thereby protocol analyze per session independently session model significantly simplifies analysis protocol obtain authenticate communication another model aspect fauth generates output receiver without receiver input sid exclusively sender sender receiver sid advance realize fauth fauth formalization authenticate communication model serf specify security requirement authentication protocol earlier validity dual universal composition theorem briefly summarize regard realizability fauth impossible realize fauth bare model protocol generate output protocol useless ppt environment adversary generates output non negligible probability protocol UC realizes fauth bare model useless realize fauth algorithmically abstraction definitional approach abstraction formulate ideal functionality ideal functionality ideal functionality allows secret preliminary stage capture pre password mechanism another ideal functionality service trust bulletin public ledger register public public potential receiver correctly obtain public register formulation fauth fail adversary deliver message recipient identity sender corrupt delivery unrealistically security guarantee intuitively essential reasonable authentication protocol oversight reference non interactive formulation fauth crucial underlie computational model allows dynamic address generation itis indeed powerful formulation fauth functionality motivation formulation underlie computational model journal acm vol article publication date september canetti secure message transmission functionality parameterized leakage function context abstraction ideal functionality physical social algorithmic mechanism authentication binding entity cryptographic construct message authentication indeed ideal functionality authentication protocol mechanism important aspect model binding identity pre public infrastructure realistic binding typically authentication multiple message context protocol incompatible formulation fauth ideal functionality handle message indeed protocol UC realizes fauth binding module digital signature algorithm along public infrastructure cannot subroutine respect unless session protocol session binding module capture reality modular analysis situation mechanism exist literature decompose protocol multiple session fauth protocol realizes fauth jointly session authentication module multiple overlap component component consists session fauth along authentication module UC theorem assert security desire consist multiple session protocol realize fauth session session authentication module mechanism scope detail reference secure communication abstraction secure communication secure message transmission usually communication authenticate addition adversary access content transmit message typically assume adversary learns message plus partial information message generally information domain message framework access ideal secure message transmission mechanism cast access secure message transmission functionality fsmt behavior fsmt fauth exception fsmt parameterized leakage function capture information leakage transmit  adversary learns  information entire fauth regard smt identity function journal acm vol article publication date september universally composable security fauth fsmt transmission message secure transmission multiple message obtain multiple session fsmt convention regard corruption sender receiver corrupt fsmt discloses adversary addition fauth fsmt allows adversary content message identity recipient corrupt message delivery uncorrupted message sender another difference fsmt fauth fsmt allows adversary upon corruption message contrast fauth behavior fsmt upon corruption meaningful corruption execution protocol variant secrecy requirement message remain secret sender receiver compromise compromise protocol execution capture secrecy formulation modify behavior upon corruption sender receiver disclose plaintext message adversary corruption message deliver code fsmt remains unchanged another requirement protection traffic analysis recall whenever sends message fsmt notifies adversary message reflect encryption hide message namely protection traffic analysis capture security traffic analysis modify fsmt adversary message alternatively learns message sender receiver realize fsmt protocol UC realize fsmt construct public encryption scheme semantically secure chosen plaintext attack encryption encrypt message authenticate communication via fauth  enc dec encryption scheme domain plaintexts  generation algorithm enc encryption algorithm dec decryption algorithm decryption guaranteed plaintext protocol denote invoked input sid  sid sid sends initialization message namely invokes session  input sid init smt sid sid pid upon invocation subroutine output sid init smt identity sid algorithm  secret public  sends sid sid fauth sid computes enc fauth sid return finally upon receipt sid within computes dec output sid verify protocol UC realizes fsmt underlie encryption scheme semantically secure chosen plaintext attack domain plaintexts leakage function input return return otherwise semantically secure domain reference UC realizes smt presence non adaptive corruption furthermore non commit reference UC realizes smt adaptive corruption data erasure trust adversary internal corrupt fauth realize multiple session fsmt session complex protocol considerably efficient multiple journal acm vol article publication date september canetti independent session protocol realizes fsmt encryption scheme encrypt message however encryption scheme additional semantically secure reference replayable chosen ciphertext security RCCA suffices purpose non adaptive corruption adaptive corruption construction discussion reference UC joint mechanism analyze protocol employ multiple independent session fsmt spite session realize session encryption protocol synchronous communication convenient abstraction communication network synchronous communication roughly computation proceeds receives message previous generates outgo message synchronous variant UC framework reference subsection alternative capture synchronous communication within UC framework synchronous communication capture within unmodified framework access ideal functionality fsyn guarantee traditionally synchronous network fsyn discus motivate aspect specifically fsyn aim capture variant synchronous model guarantee awareness  access variable variable non decrease synchronize message delivery message uncorrupted guaranteed message sends message guarantee necessarily implies guaranteed delivery guaranteed message uncorrupted authentic delivery message uncorrupted guaranteed unmodified furthermore recipient sender identity message requirement essential exist meaningful notion synchronous communication imply knowledge simplicity express variant finally stress activation within assume adversarial message corrupt message uncorrupted rush model synchronous network fsyn sid synchronization assumes notify existence session fsyn otherwise task itis  indeed variety mechanism task setting liveness guarantee activation fsyn initializes  fsyn responds input input sid fsyn interprets journal acm vol article publication date september universally composable security synchronous communication functionality fsyn message sender identity adversary fsyn yield adversary guaranteed delivery message harm activation fsyn without adversary response fsyn uncorrupted already message increment input sid fsyn proceeds fsyn return message fsyn report upon corrupt adversary fsyn corrupt stress fsyn deliver message explicitly request obtain message functionality available multiple guarantee fairness delivery message indeed protocol fsyn guaranteed uncorrupted message message available recipient similarly protocol realizes fsyn guarantee delivery message uncorrupted formulation fsyn earlier version slightly explicitly notification message adversary advancement confirmation adversary advance adversary advancement functionality guarantee delivery message flaw reference fix propose journal acm vol article publication date september canetti fsyn highlight fsyn sketch typical fsyn session protocol session session fsyn session invoked assume session sid session  session fsyn derive sid session along  session initializes counter input fsyn message subsequent activation fsyn input sid sid typically derive sid response obtains message performs local processing increment local fsyn input sid contains outgo message fsyn return incomplete return environment discussion additional  message delivery protocol essentially traditional synchronous network indeed fsyn guarantee actively participate communication counter advance uncorrupted activate possibly empty message furthermore uncorrupted obtain incoming message uncorrupted obtain message session fsyn guarantee synchronous message delivery within context message session delivery message directly via session fsyn arbitrarily faster arbitrarily allows capture addition traditional model completely synchronous network everyone synchronize realistic setting synchronous execution protocol within asynchronous environment protocol execution execution internally synchronize execution mutually asynchronous fsyn input asynchronous input guarantee input within protocol fsyn deploy standard mechanism guarantee actual computation input participate itis within sid aim capture situation identity participant initiator advance situation participant priori capture computation proceeds fsyn update accordingly capture session fsyn fsyn fsyn initial stage fsyn notifies execution initial stage fsyn transfer environment delivery message guaranteed fsyn response environment adversary compose fsyn hybrid protocol within framework protocol bound subroutine respect session fsyn cannot subroutine protocol session sid sid unless session subroutine journal acm vol article publication date september universally composable security composite protocol communication synchronous across session protocol analyze entire protocol cannot meaningfully compose protocol analyze separately composability composability regain via universal composition joint  theorem alternatively via generalize UC  framework  theorem within framework analyze individual session protocol session session fsyn argue overall behavior session session fsyn account protocol relaxation reliability authenticity guarantee within session fsyn advance message deliver fix guaranteed deliver upon request relax timeliness guarantee fsyn guarantee message deliver within generate bound advance alternatively unknown dynamically specify adversary message delay corresponds timing model reference unknown delay corresponds non asynchronous communication model message guaranteed deliver unknown delay reference non concurrent security feature UC framework guarantee security protocol session concurrently adversarially manner sometimes useful capture within UC framework security necessarily preserve concurrent composition realizable simpler protocol  setup assumption express non concurrent security protocol within framework methodology protocol attack protocol involve execute protocol concurrently analyze protocol expressible model recall difference UC model model guarantee  security UC model environment interact adversary computation whereas non concurrent model environment receives information adversary computation protocol essentially UC environment behave non concurrent model argument demonstrate transform protocol protocol πnc πnc essentially functionality πnc environment behave non concurrently replace interaction adversary interaction ideal functionality fnc mimic adversary interacts actual adversary limited πnc non concurrent version identical upon initial invocation πnc fnc init input sid local external iti extend session πnc backdoor tape adversary replace input fnc similarly output fnc treat message backdoor tape incoming message actual backdoor tape ignore formally transformation implement via appropriate code journal acm vol article publication date september canetti non concurrent communication functionality fnc functionality fnc  input init notifies adversary sid code Aˆ backdoor tape Aˆ adversary non concurrent model fnc behaves adversary Aˆ non concurrent security model fnc Aˆ input message message extend session instruction respect information Aˆ sends information subroutine output backdoor message addition fnc verifies Aˆ within boundary model namely delivers backdoor message exist itis subsidiary session protocol purpose assume subroutine expose Aˆ generates output environment fnc sends external adversary halt formalism applies protocol assume idealize communication model ideal functionality model fauth fsyn indeed apply protocol ideal functionality fauth fsyn generic transformation modify ideal functionality fauth fsyn interact fnc instead interact adversary equivalence definition reference recall security definition reference guarantee security preserve non concurrent composition protocol discussion specifically recall notion reference essentially UC security exception model execution synchronous analogous fsyn environment adversary prohibit input output activation protocol activation protocol concentrate difference alternative formulation reference notion within framework environment non concurrent input adversary input adversary activation furthermore ignores output adversary definition ppt protocol ppt predicate  emulates ppt adversary exists ppt adversary journal acm vol article publication date september universally composable security non concurrent balance identity bound ppt environment execϕ execπ argue informally NC emulation capture essence notion reference conjecture exist security analysis protocol protocol reference reference realize ideal functionality fault assume authenticate communication assumption essentially  demonstrate protocol NC emulate correspond ideal functionality perspective formalize equivalence security notion reference UC emulation presence fnc via proposition proposition ppt protocol ppt predicate πnc  NC emulates proposition UC theorem alternative albeit somewhat indirect formulation non concurrent composition theorem reference significantly applies reactive protocol multiple input output proof πnc UC emulates NC emulates adversary gear interact non concurrent environment simulator SA execπ execϕ SA non concurrent environment construct SA adversary Aˆ version gear πnc specifically upon initial activation Aˆ code fnc πnc Aˆ behaves dummy adversary non concurrent ensemble execπ  Aˆ identical SA simulator πnc Aˆ SA  Aˆ execϕ SA direction remains NC emulates πnc UC emulates suffices demonstrate πnc UC emulates respect dummy adversary furthermore suffices πnc UC emulates respect specialized simulator simulator depends environment UC environment interact πnc dummy adversary Aˆ denote adversary code response backdoor message fnc dummy adversary generates code obtain output environment enc enc generates input πnc enc input unchanged similarly output πnc unchanged input adversary ignore input backdoor tape fnc input contains code Aˆ enc adversary enc receives output adversary output whatever output halt clearly enc non concurrent environment therefore NC emulates exists simulator execπ Aˆ enc execϕ enc however execπ Aˆ enc identical  execution similarly simulator Sˆ identical Sˆ ignores input environment withholds output environment halt execϕ enc distribute identically execϕ Sˆ indeed journal acm vol article publication date september canetti execution  execπ Aˆ enc execϕ enc execϕ Sˆ namely  UC emulates model partial concurrency finally methodology extend analyze partial concurrency protocol partial concurrency multiple flavor instance model bound concurrency fnc limited interaction external adversary alternatively limited external adversary alternatively composite protocol component cannot concurrently concurrent execution component sub component within component appendix related survey related brevity concentrate framework directly affect affect version influence subsequent revision omit framework extend review reference simplicity exposition mostly rough chronological thematic concentrate contribution definitional aspect cryptographic protocol protocol although naturally prior laid foundation notion security cryptographic protocol yao explicitly express unified framework express security requirement secure computation protocol goldreich micali wigderson forth trust paradigm namely approach define security via comparison ideal involve trust albeit informal another greatly influence UC framework dolev  naor important security concern arise cryptographic protocol concurrently within concern reference address central framework rigorous definitional framework secure protocol due goldwasser levin shortly framework micali  beaver notion reducibility reference directly underlies notion protocol composition subsequent beaver framework directly formalize protocol ideal however reference formalism address security restrict setting computational issue reference survey reference detail framework reference concentrate synchronous communication although reference trust paradigm forth reactive functionality framework concentrate task secure function evaluation extension asynchronous communication network eventual message delivery formulate reference model notion security reactive functionality sketch   ideal definition computational security resource bound adversary reference reference framework reference journal acm vol article publication date september universally composable security strengthen handle secure composition reference defines composition operation modular composition non concurrent version universal composition protocol session active detail addition security protocol framework preserve modular composition closely related formulation reference reference sketch strengthen definition concurrent composition UC framework implement sketch framework  maurer rigorous treatment reactive functionality  micali definition micali  unconditionally secure function evaluation specific communication ideally private notion security preserve concurrent composition operation universal composition formulate additional composition operation synchronous composition security guarantee definition composition operation schedule various session protocol however extend definition model setting adversary access communication honest lincoln mitchell mitchell  develop calculus  milner incorporates random choice computational limitation adversary reference demonstrate express probabilistic polynomial within calculus definitional approach similarity simulation approach define computational variant observational equivalence secure  equivalent ideal desire functionality guaranteed indeed environment interact ideal protocol execution however ideal protocol analyze equivalent notion ideal functionality associate task independent analyze protocol harder formalize security requirement task model randomize distribute computation asynchronous driven important component considerably influence model    nelson canetti  concurrent framework    rigorously address concurrent universal composition computational sketch reference define security reactive functionality synchronous security preserve session subroutine protocol compose concurrently protocol extension reference framework asynchronous network reference notion security reference reactive simulatability role honest user roughly mapped role environment define however difference  machine model computation automaton model reference oppose itm model model schedule execution postulate static participant identity fix advance somewhat model protocol session constant journal acm vol article publication date september canetti fix advance impossible argue security protocol session non constant function security parameter advance technical difference notion polynomial computation entity bound fix polynomial security parameter regardless input discussion schedule     extend framework reference protocol session depends security parameter otherwise static reference framework reactive simulatability preserve universal composition reference formulation return approach entity protocol session fix irrespective security parameter  mitchell  datta  mitchell  reference extend  reference express simulatability define cast calculus probabilistic polynomial computation demonstrate universal composition theorem framework rigorously aspect framework define reference reactive simulatability define reference tight correspondence reference notion security define demonstrate  framework postulate static execution model extend probabilistic automaton lynch   framework allows formulate security cryptographic protocol along UC framework involves develop mechanism task schedule curb non deterministic schedule model resource bound computation framework concurrent distribute allows analyze partially specify protocol standard allows schedule choice non deterministically allows meaningful UC style security specification   alternative simplify formalism composable simulation security protocol formalism generalization kahn network allows equational temporal representation analysis protocol security    formulate itm model computation allows define UC style notion security model combination traditional calculus representation argumentation composition along fix pre boundary dynamic communication address structure within individual model  model midpoint restrict model fledge model useful express dynamic internal structure apply universal composition theorem protocol boundary fix advance calculus alternatively restrict model  model however useful situation apply composition theorem protocol structure dynamically runtime decentralize peer peer  model approach bound runtime notion import message influence model reference  müller   alternative definition polynomial ITMs discussion  shoup flaw previous journal acm vol article publication date september universally composable security version formulate variant UC framework avoids flaw framework  differs notion polynomial reference mandate rigid subroutine structure protocol specific format session IDs subroutine structure indeed simplify argumentation protocol  framework argue footnote nielsen  müller  formulate synchronous variant UC framework  canetti cohen  simplify formulation UC framework gear simplify presentation analysis protocol standard multiparty computation setting previous version finally framework evolve considerably highlight advance addition revision corrects multiple inaccuracy model discrepancy previous version detail reference appendix version version version formulate rigorous model distribute computation model execution protocol ideal communication corruption model treat variant model revision version introduces notion ITMs treat communication model additional construct model UC theorem model version restrict notion polynomial security parameter expressive notion account input formally defines security respect dummy adversary demonstrates equivalence UC security detailed proof composition theorem revision version treat corruption model additional construct model improve treatment identity translate identity composition operation simplifies notion polynomial introduces notion balance environment subroutine respect protocol version version improves treatment identity subroutine respect protocol introduces subroutine expose protocol fix flaw composition theorem generalizes notion polynomial runtime import simplifies definition itis model protocol execution introduces simplify static model computation version version model mechanism express subroutine respect subroutine expose protocol composition operation corruption