temporal logic formal specify proposition qualify unified approach program verification applies sequential parallel program uniform framework abstraction automate propose exclusively computation logic CTL linear temporal logic LTL infinite unfortunately logic significantly reduce expressiveness restrict interplay temporal operator quantifier disallow expression practical along future occurs infinitely contrarily CTL superset CTL LTL facilitate interplay CTL exclusively allows expressiveness involve existential stabilization possibility exist automate verification expressive CTL infinite article proposes capable task introduce fully automate symbolically CTL infinite integer program internal encode admits subtle interplay nest temporal operator quantifier occurs within CTL proof program transformation employ nondeterminism transition relation nondeterminism explicit variable predict future outcome synthesize quantify precondition transform program program satisfy CTL formula article demonstrates viability approach  capable crucial previously additionally linear extension CTL infinite linear unique discus extension variable implement approach report benchmark program demonstrate expressiveness CTL specification code drawn device driver various industrial CCS concept theory computation modal temporal logic verification model logic verification additional model CTL introduction context motivation  amir  introduce utilize temporal logic unify approach program analysis sequential parallel program temporal proposition qualify allows logical basis correctness program additionally temporal logic formalizes intuitive programmer employ implementation program surge static analysis technique automatically verify various temporal logic finite infinite  prevalent notion constitutes correctness program reduce temporal concept invariance  lamport  lamport refines concept safety liveness respectively safety concept partial correctness something happens sequential program mutual exclusion critical deadlock freedom program  concurrent program liveness concept correctness addition generalization behavior program loop termination program eventually terminate starvation freedom eventually serf liveness addition correctness program temporal logic allows hierarchical specification developer standpoint expressive imprecise contrarily formal expressive precise temporal logic bridge expression precision gap logical program abstraction specification program implementation statement program meaningful statement hierarchical directly extra mechanism bridge description temporal logic branching logic computation logic CTL  verification within transition satisfy temporal formula linear logic linear temporal logic LTL satisfy formula however logic significantly reduce expressiveness junction contrarily CTL superset LTL CTL facilitate interplay proof verification temporal logic introduce   lamport CTL model infinite generalizes termination  undecidable decision procedure explore structure  automaton introduce satisfaction CTL formula binary relation   later extend   axiomatization propositional CTL reynolds inspire relatively deductive proof verification CTL possibly infinite formal definition safety liveness introduce  schneider  schneider finite prefix execution continuation contrast notion lamport infinite execution slightly notion safety liveness liveness continuation finite prefix journal acm vol article publication date verify increasingly expressive temporal logic infinite proof verify CTL  implement  however  semi automate user construct auxiliary assertion participate proof fully automatic CTL undecidable infinite fully automate implementation proof proven furthermore despite existence automate verification CTL LTL integer manipulate program verification CTL CTL formula cannot merely partition isolated CTL LTL sub formula partition fails treat intricate dependence allows symbolically representation branching linear conducive automatic analysis outstanding automatic program verification restriction interplay linear branching operator various crucial  involve assertion along future occurs infinitely cannot express LTL CTL crucial express existence spawn reachable infinite however expressible CTL demonstrate CTL capable express CTL LTL necessitate interplay article address application CTL integer  addition introduce admits arbitrary nest within vice versa strategy allows symbolically representation fully automatic capable CTL infinite program expressiveness temporal logic application program discern difficulty partition subtle interplay arbitrary nest formula delve temporal sub logic relation finite distinction branching linear logic crucial automation standpoint verify logic decidable however undecidable infinite unbounded arithmetic distinction issue CTL LTL temporal logic homogenous approach computational previously mention branching logic linear logic interpretation correspond continually branching possibility linear sequence actual respectively branching approach future equally nondeterministic transition unique future possibly infinite future nondeterminism translates computation linear approach instance future actually assertion interpret future quantifier linear logic despite discrepancy expressiveness CTL LTL incomparable simply interpretation however journal acm vol article publication date restriction logic impose interplay linear operator quantifier disallows vital appropriately express correctness although CTL express interaction input nondeterminism capability LTL inadequate express cannot model trace assumption environment sequential concurrent setting scheduler LTL express deficiency mitigate fairness branching logic CTL allows interaction linear branching specify fairness assumption pertain environment CTL cannot generalize model trace recent practical application CTL model exclusive CTL addition analysis crucial application CTL infinite expressiveness CTL briefly informal description CTL syntax reader intuitively understand formal definition CTL formula quantifier temporal operator exists quantifier indicates exists indicates exists denotes temporal formula however CTL temporal operator precede quantifier temporal operator globally along eventually eventually verify future weak unlike verify forever linear logic LTL fragment CTL allows formula occurrence quantifier within LTL subset CTL LTL formula implicitly prefixed universal quantifier LTL formula FG asserts trace variable eventually become forever  logic CTL restrict subset CTL temporal operator directly precede quantifier CTL sub formula compose quantifier temporal operator CTL formula EF exists eventually recall CTL allows unrestricted nest quantifier temporal operator CTL allows express involve existential stabilization eventually become reachable additionally express possibility viability reachable spawn computation afford extra expressive CTL liveness imperative verify kernel apis application program interface acquire resource apis release resource later  asserts exists infinitely along expressible CTL LTL crucial journal acm vol article publication date verify increasingly expressive temporal logic infinite express existence spawn reachable CTL approximation  differs subtly exists along eventually future LTL approximate disprove FG however approach cannot nest within another quantifier stress expressive deficiency LTL   nest  inside formula conveys divergence stabilizes diverge infinitely expressible neither CTL LTL crucial express existence spawn reachable CTL examine disallow convey regard CTL approximation   differs along stabilizes diverge infinitely induce unsatisfiable slightly weaker   unsatisfiable CTL approximation   indeed entail stabilizes exists approximation sufficient cannot satisfy infinitely diverge LTL cannot approximate disprove FG GF cannot characterize proof within quantifier another CTL AG EG  dictate program exists computation computation eventually linear FG significantly stricter computation disjunct disjunct finally  AF asserts exists computation whenever future falsification assertion impossible express LTL demonstrate aforementioned subsystem OS kernel infrastructure postgresql database server apache web server extend CTL linear philosophical context developed temporal logic temporal connective refer future context verification connective cast aside sake minimality expressive linear temporal logic computation definite unique however specify temporal formula become overly convolute specify correctness render intuitiveness  temporal logic obsolete extend CTL admit connective allows exponentially succinct temporal formula furthermore connective formulation specification intuitive future sub logic exist interpretation correspond regard branching CTL branching future linear CTL linear future unique assume finite extension branching connective extensively  journal acm vol article publication date connective expressiveness computational complexity CTL differs linear branching expressive CTL CTL model finite CTL PSPACE satisfiability EXPTIME complexity CTL CTL beneficial expressiveness specific verify address extension CTL article instead linear extension CTL infinite linear unique specifically fragment CTL addition linear connective CTL CTL increase complexity satisfiability finite linear connective sufficiently beneficial enriches temporal logic intuitive succinct specification automaton theoretic algorithm verification CTL finite introduce  however aware implementation technique additionally aware temporal operator model infinite program CTL succinctly intuitively express concern verification device driver driver request packet pending IoMarkIrpPending queue AG queue irp queue irp IoMarkIrpPending irp however solely future connective queue irp IoMarkIrpPending irp queue irp queue irp IoMarkIrpPending irp queue action denote queue irp ensure queue cannot IoMarkIrpPending irp queue indeed ensure future queue cannot additionally additional IoMarkIrpPending irp future connective formulation intuitive succinct connective alternative connective simply ensure encounter queue request packet previously marked pending queue discus fragment CTL variable usage fragment tackle merely restricts newly introduce formula immediately additional formula formula disallow refer future within formula affect nest formula nest formula within CTL discus limitation earlier linear connective CTL additional expressive computation definite unique speculate automate translation CTL CTL suitable strategy embed additional variable however CTL specifically fragment tackle translation  translation algorithm induce combinatorial explosion limited temporal height   journal acm vol article publication date verify increasingly expressive temporal logic infinite bound conversion temporal logic temporal logic without expressible fragment already fragment succinctness expression additionally conversion linear connective future connective likely sub formula resemble variable introduce hence translation strategy accompany combinatorial formula explosion beneficial aware implementation non elementary translation LTL LTL clearly none CTL approach contribution contribution automate model allows arbitrary nest within vice versa strategy recursively partition CTL formula nest sub formula synthesize precondition ensures satisfaction nest sub formula substitute precondition outer sub formula essence algorithm within acquire sufficient precondition formula admit interaction formula purpose recursively deconstruct CTL formula allows subtle interplay arbitrary nest formula occurs sub formula sufficient branching nondeterministic decision within program transition relation devise temporarily substitute nondeterministic decision symbolically partially determinized nondeterministic decision regard variable summarize decision regard future program execution interchange formula determinized relation collapse incorporate quantifier precondition CTL acquire via exist CTL model checker furthermore extend CTL algorithm CTL via instrumentation unique variable per connective within CTL formula variable consequent nest temporal formula consequent nest formula within connective sub formula variable satisfied sub formula synthesize precondition however nest formula another connective variable satisfied additional variable associate sub formula satisfaction variable clearly dependent connective verify additionally variable analyze within context future formula verify future CTL sub formula incorporates correspond sub formula sake clarity demonstrate technical contribution exclusively verify CTL demonstrate extend algorithm CTL approach developed capable automatically program previously fully automate article description experimental developed various program drawn industrial available mit opensource license http github com  limitation program heap recursion concurrency heap program experimental evaluation abstract approximation technique introduce effective technique temporal program journal acm vol article publication date heap remains research technique relies availability CTL model non termination procedure principle applicable infinite procedure available integer variable additionally procedure series technique safety termination  CTL furthermore determinization procedure address issue later PRELIMINARIES define program transition standard treat program graph annotate update perform variable program triple var location transition var variable domain vals specifies transition program assertion var var prim var constant vals var refers variable update var refers variable update notation var reference variable replace reference detail pertain assertion technique per limited specific concretely implementation depends exist model checker technology linear constraint variable program assertion handle model checker complicate assertion location location incoming transition program location transition exit express var location incoming transition initial location allows encode complex initial omit merely display location incoming transition program transition program var vals program valuation function program variable program described location controlflow graph correspond variable valuation assertion program update program variable assertion relate variable refer location graph necessarily assertion refer location treat location boolean proposition assertion program variable assertion describes update incrementing regard location prim location indicates target transition later precondition assertion program satisfy probably reference location program transition exists transition valuation function var var vals var initial transition journal acm vol article publication date verify increasingly expressive temporal logic infinite arbitrary valuation express var hence valuation affect satisfaction var valuation obtain restrict valuation variable denote restriction program define similarly trace infinite sequence exists program location valuation denote computation initial restrict attention infinite computation modify program transition temporal logic formula ensure infinite CTL syntax semantics interested verify computation logic CTL syntax CTL negation normal formula interpret formula interpret assume atomic proposition express underlie theory variable constant formula formula define program CTL formula denote iff iff iff iff iff iff formula interpret program CTL formula location denote formula iff iff iff iff iff iff   iff   iff formula denote formula denote initial program context formula formula journal acm vol article publication date graph multiple partition  branching logic CTL restrict subset CTL temporal operator cannot nest formula   formula linear logic LTL fragment CTL allows formula occurrence quantifier within LTL subset CTL LTL formula implicitly prefixed universal quantifier utilize strongly subgraphs identify program strongly subgraphs allows branching relation characterize instance branching nondeterministic decision within program transition relation branching relation distinguish exists nondeterministic transition stem location strongly subgraph notation regard strongly subgraphs definition branching relation program denote sequence location cycle exists program location cycle program location identify SCS maximal non trivial strongly subgraphs  subgraphs SCS disjoint exists SCS detail regard identification SCS standard omit denote minimal SCS SCS contains location MINSCS define  SCS disjoint graph partition minimal SCS minimal SCS alternative partition accord partition minimal SCS branching relation location transition MINSCS MINSCS remain minimal SCS minimal SCS  aforementioned partition indeed within MINSCS leaf  partition sufficient evidence transition SCS multiple transition SCS SCS multiple branching relation identify location journal acm vol article publication date verify increasingly expressive temporal logic infinite approach overview overview overview CTL verification procedure PROVECTL algorithm algorithm depth explanation later procedure recurse structure CTL formula sub formula precondition ensures satisfaction assertion program variable location characterize program satisfy precondition innermost sub formula precondition outer sub formula dependent CTL formula deconstruct differentiate  crux verify CTL formula within identify interplay arbitrary nest formula precondition  logic formula acquire via exist CTL model technique return assertion characterize sub formula essence algorithm within acquire sufficient precondition formula admit interaction formula algorithm procedure define later article approximate procedure performs syntactic conversion formula correspond approximate universal CTL formula ACTL  formula checked exist CTL model checker symbolically partially determinized program reduce formula verification formula verification determinize allows characterization characterization satisfaction ACTL approximate formula implies satisfaction formula however inverse procedure construct partially determinized program symbolic representation characterize instance branching nondeterminism branching relation stem program location nondeterministic decision regard prophecy variable future outcome program execution recall branching relation distinguish strongly subgraph QUANTELIM acquires satisfy formula verify determinized program allows quantification within CTL formula satisfy formula CTL formula acquire satisfy verify determinized program quantifier elimination acquire satisfy quantify assertion prophecy variable formula universally quantify prophecy variable satisfy formula existentially quantify prophecy variable program  exists future eventually become ACTL universal subset CTL address universal quantifier  AF existence EG EF journal acm vol article publication date graph program CTL  graph determinize prophecy variable correspond nondeterministic branching relation stabilization express CTL clearly program evidence remains forever recursively handle sub formula identify formula approximate return approximate formula AG initiate CTL model task seek  AG formula valid eventually future program initial AG however exists nondeterministic choice eventually loop exists exemplify infinite branching possibility possibly remain forever sub formula approximate formula allows symbolically determinize program simultaneously simulate related graph originate distinct program procedure determinize return symbolically  program newly introduce prophecy variable associate branching relation prediction occurrence relation recall branching relation nondeterministic transition remain SCS SCS indeed disjoint strongly subgraph initialize nondeterministic program positive concrete chosen nondeterministic assignment predicts instance transition transition remain decremented passage loop terminate loop prophecy variable  reset return loop negative assignment denotes remain forever non termination modification trace program utilize exist CTL model checker return assertion characterize verify determinized program denote PD approximate CTL formula AG assertion return indeed program program remains forever proceed replace subformula assertion CTL formula  verify journal acm vol article publication date verify increasingly expressive temporal logic infinite outermost CTL formula EF syntactically readily acceptable CTL formula however cannot simply CTL model checker quantifier exists within relation context inner formula FG CTL model checker verify  determinized program previously generate procedure return precondition indeed eventually quantifier elimination existentially quantify introduce prophecy variable existential quantification corresponds satisfy formula program prophecy variable combine PD satisfy formula clearly sufficient proof conclude  indeed happens program mention satisfies formula  CTL  detail CTL model procedure PROVECTL define procedure utilized PROVECTL namely determinize approximate model procedure utilization QUANTELIM determinization procedure determinize construct symbolically partially determinized program branching relation characterize instance branching nondeterminism partial determinization denotes program non determinism transformation procedure algorithm program partially determinized program PD contingent upon nondeterministic branching relation return ultimately determinize proof branching logic formula formula sufficient branching relation symbolically determinize program relation distinguish exist nondeterministic relation stem location strongly subgraph procedure iterate program identify MINSCS location MINSCS MINSCS equivalent conclude transition leaf SCS desire minimal SCS  nondeterministic decision transition divert remain within SCS nondeterministic identification determinization facilitate application program strongly subgraphs synth location nondeterministic branching location identify branching relation correspond decision remain SCS synth iterate program branching relation encounter introduce prophecy variable predict future outcome decision recall exist multiple transition strongly subgraph multiple branching relation identify location prophecy variable location utilized across journal acm vol article publication date algorithm determinize identifies branching relation construct symbolically determinized program determinize program PD synth LD ED  PD  foreach ED MINSCS SCS MINSCS synth synth foreach ED synth   MINSCS return PD transition indeed motivation identify nondeterministic symbolically simulate branching program decision regard prophecy variable information regard modify program allows correspondence verification formula reduce verification ACTL formula synth prophecy variable program variable var within MINSCS constrain decrement within MINSCS constrain remains unconstrained entail reset nondeterministic integer nondeterministic decision cycle prophecy variable corresponds behavior successor SCS computation remains SCS nondeterminism within transition relation initialization initial choice later nondeterministic determinization maintains program prophecy variable introduce merely nondeterminism transition relation nondeterministic theorem PD var furthermore PD var proof location SCS MINSCS variable  annotate future transition reset transition  PD reset transition   leaf unconstrained journal acm vol article publication date verify increasingly expressive temporal logic infinite assign arbitrary transition transition internal transition  transition PD transition   PD transition neither reset internal   implicitly  internal transition  reset transition define infinity clearly annotation transition PD appropriate annotation PD PD projection var exactly infinite PD assignment prophecy variable PD definition transition PD however assertion var assertion prophecy variable var approximation algorithm syntactic conversion pure linear formula CTL LTL correspond approximation ACTL procedure formula atomic precondition correspond satisfaction nest CTL formula within recall precondition assertion program variable location characterize program satisfy temporal formula precondition conditional parameter utilized LTL formula due recursive PROVECTL precondition already  generate algorithm approximate syntactic conversion formula correspond approximation ACTL approximate return  return  return  return   return   return return universal quantifier  appropriate temporal operator sub formula replace correspond precondition respectively aligns PROVECTL recursively iterate inner sub formula precondition outer sub formula dependent replace formula CTL approximation indeed modify formula context deterministic program approximation formula correspond formula truth future journal acm vol article publication date theorem notational convenience assume operator arity refer operand operand exist important ignore theorem program formula sub formula  approximation  implies  approximate proof proposition boolean combination simpler formula proof immediate suppose approximate AG suppose approximate satisfy satisfy however assumption contradicts assumption suppose approximate AF suppose approximate satisfy however approximate satisfies satisfies satisfies  proof weak account theorem existential quantification conclude CTL formula formula prophecy variable PD restrict attention valuation prophecy variable satisfy formula clearly satisfies requirement satisfies formula algorithm verify wrap PROVECTL  verify bool var PD determinize PROVECTL PD return var vals implies CTL verification procedure CTL verification procedure PROVECTL algorithm depicts verify wrap procedure PROVECTL algorithm generate determinized program PD aforementioned procedure determinize program PROVECTL along program CTL PROVECTL return assertion characterize argument return disregard within recursive PROVECTL PROVECTL return verify precondition satisfied initial program procedure PROVECTL algorithm synthesize precondition CTL CTL formula deconstruct journal acm vol article publication date verify increasingly expressive temporal logic infinite algorithm recursive CTL verification procedure employ exist CTL model checker procedure approximate QUANTELIM CTL program determinized version PD parameter assertion characterize return along boolean formula checked formula hence approximate rec PROVECTL PD formula bool var ormula PROVECTL PD PROVECTL PD PROVECTL PD false false replace QUANTELIM CTL PD CTL false  ormula PROVECTL PD PROVECTL PD PROVECTL PD false approximate CTL PD return differentiate sub formula crux verify CTL formula within identify interplay arbitrary nest formula identify formula action identify formula action algorithm denote temporal operator formula recursively accumulate precondition generate sub formula sub formula precondition ensures satisfaction precondition journal acm vol article publication date atomic proposition proposition precondition utilized remain action algorithm verify formula formula  formula syntactically convert universal subset branching logic ACTL procedure approximate recall precondition generate sub formula utilized approximate replace correspond precondition respectively approximate return correspond formula universal quantifier precedes temporal operator within precondition newly attain ACTL formula acquire via exist CTL model checker return assertion characterize exist functionality prototype upon latter recall precondition formula precondition correspond formula merely approximation utilize determinized program PD employ CTL model checker program assertion return characterize recall PD correspondence sufficient branching relation determinize program decision regard introduce prophecy variable reduce assertion return define introduce prophecy variable PD finally boolean flag flag argument return PROVECTL indicates caller return recursive approximate modify verify sub formula formula respectively admit interaction formula demonstrate verify formula formula partition sub formula syntax CTL recall temporal operator denote allows utilize exist CTL model checker eliminate redundant verification temporal operator already precede quantifier partition formula pure linear formula LTL deconstruction CTL formula allows identify intricate interplay formula recursively generate precondition subformula recall precondition atomic proposition proposition return atomic sub formula otherwise recursively acquire precondition utilized procedure replace replace substitute correspond precondition respectively return formula precondition branching logic formula acquire via exist CTL model checker however quantification within CTL formula formula satisfy formula immediate inner sub formula pure journal acm vol article publication date verify increasingly expressive temporal logic infinite linear formula identify aforementioned boolean flag partition role sub formula formula formula indicates quantifier exists within context verify formula branching formula verify PD PD characterize actually collapse later characterization formula interplay formula demonstrate algorithm QUANTELIM applies quantifier elimination convert characterization characterization restrict attention infinite exists QUANTELIM AP AEG CTL PD EG return QE AEG return QE AEG quantifier elimination satisfy precondition procedure QUANTELIM algorithm convert characterization characterization execute PROVECTL QUANTELIM assertion return CTL model checker determinized program PD partition CTL formula formula quantify assertion prophecy variable universal CTL formula universally quantify prophecy variable satisfy algorithm existential CTL formula existentially quantify prophecy variable prediction prophecy variable finite program quantification restrict exist prophecy infinite loop terminate prophecy variable longer decrease cannot another loop transition longer decrease loop terminate hence acquire precondition AEG satisfy CTL formula entail   PD precondition AEG  ensure quantification prophecy variable finite generate due invalid prediction prophecy variable accord polarity quantification universal existential assertion return QUANTELIM characterize false immediate inner sub formula formula indicates indeed CTL model checker program demonstrate upon return PROVECTL caller verify precondition outer temporal CTL formula precondition satisfied initial program verification CTL formula finally false procedure theorem verify return journal acm vol article publication date proof induction quantifier CTL formula compute satisfy PROVECTL satisfies formula quantification computation recursive approximate precondition  induction structure theorem precondition approximate formula precondition obtain universal quantification approximation PD valuation prophecy variable infinite satisfies PD reachable initial computation theorem exists computation PD var satisfies assignment prophecy variable reachable PD formula quantification computation recursive approximate precondition  induction structure theorem precondition approximate formula precondition obtain existential quantification approximation PD valuation prophecy variable infinite satisfies PD infinite PD computation PD reachable PD formula nest quantifier proof proceeds relies structure negation normal soundness previous approximation sub formula implication theorem direction fail implicate negation negate formula convert negation normal procedure incompleteness stem approximation formula correspond ACTL formula although approximation checked PD PD determinize discus incompleteness determinization scheme completeness determinization determinization technique adopt repurposed symbolic determinization technique introduce  verification LTL formula inherit limitation within technique discus aforementioned limitation contrive illustrative serf theoretical completeness determinization characterize journal acm vol article publication date verify increasingly expressive temporal logic infinite program determinization insufficient inside loop EG exists computation satisfies representative passage loop unfortunately procedure program satisfies recall procedure determinize program replace nondeterministic decision regard prophecy variable future outcome program execution attempt verify approximate ACTL variant introduce ACTL approximation AX sub exists satisfy AX satisfy characterize precondition false ACTL approximation apply QUANTELIM precondition false similarly remain ACTL approximation sub formula procedure fail verify program within specify advance uncountably choice program describes choice describes choice construct LTL formula toggle choice identify loop loop CTL formula  aforementioned corresponds existence choice determinization strategy choice future choice strengthen determinization strategy choice encode variable journal acm vol article publication date arbitrary integer whenever whenever odd whenever integer becomes reset arbitrary encode arbitrarily choice loop forever improvement completely determinize program indeed computation remain loop branching whenever reset branching formula creates prediction arbitrarily choice sufficient prediction unfortunately uncountably fully determinize program nondeterministic variable infinite precision trick odd choice determinization approach limited impossible completely determinize program clearly theoretical completeness determinization stress determinization procedure handle program verify automaton theoretic approach LTL model determinization tailor formula verify aware implementation automaton theoretic approach handle LTL sub formula within CTL formula infinite program however future eliminate limitation determinization procedure countable non determinism context nest nondeterministic branching incompleteness technique introduce allows interaction linear branching fairness assumption pertain environment suspect building upon technique procedure CTL verification formula examine viability practicality extension CTL  CTL extension CTL admits temporal operator refer previously mention specifically fragment linear logic CTL redefine semantics incorporate connective addition extend recursive CTL verification procedure incorporation demonstrates stage algorithm additionally discus challenge extend CTL exhibit usefulness CTL extension via CTL syntax semantics define fragment CTL article avoid introduce henceforth CTL refer fragment stress refer CTL CTL syntax CTL formula formula formula partition pure formula formula inclusion modifies semantics formula distinguish distinct occurrence hence model formula become computation define non empty finite sequence journal acm vol article publication date verify increasingly expressive temporal logic infinite initial denote prefix computation denote ith prefix similarly denote ith prefix denote denote computation computation progress additional information formula formula formula define temporal operator denote future connective connective address future connective utilize literature notation yesterday historically program CTL formula denote iff iff iff iff iff iff formula interpret computation assume inclusion future connective specify program CTL formula computation location denote iff iff iff iff iff formula computation denote formula denote initial program context formula formula CTL formula detail CTL model procedure PROVECTL algorithm recall translation CTL CTL verify CTL non elementary translation algorithm induce combinatorial explosion limited temporal height stress bound express fragment journal acm vol article publication date algorithm extend recursive CTL verification procedure CTL rec PROVECTL PD formula bool program program var ormula PD PROVECTL PD PD PROVECTL PD PD PROVECTL PD false false replace QUANTELIM CTL PD CTL PD ADDHISTORY PD false  ormula PD PROVECTL PD PD PROVECTL PD PD PROVECTL PD false false approximate approximate CTL PD PD ADDHISTORY PD false return PD journal acm vol article publication date verify increasingly expressive temporal logic infinite introduce procedure extends PROVECTL introduce sub procedure ADDHISTORY INSTRUMENTHISTORY introduce variable per connective within CTL formula overview  depth explanation regard extension ADDHISTORY INSTRUMENTHISTORY procedure precondition sub formula introduce variable program variable consequent nest temporal formula within program ADDHISTORY creates variable appropriate satisfy assertion tailor  verify INSTRUMENTHISTORY extends transition PD assertion update truth introduce variable boolean truth variable within program computation corresponds truth formula variable precondition sub formula detail additional procedure PROVECTL detailed explores usage variable PROVECTL generate determinized program PD procedure determinize program PROVECTL along program CTL extension CTL formula deconstruct formula differentiate sub formula future sub formula identify formula temporal operator action identify formula action algorithm ADDHISTORY variable correspond  CTL ADDHISTORY PD formula operator program program false INSTRUMENTHISTORY PD INSTRUMENTHISTORY PD return PD ADDHISTORY indeed accepts temporal operator addition sub formula operates highlight subtle difference treatment formula algorithm treatment future formula exist model checker CTL however formula characterizes model checker journal acm vol article publication date algorithm INSTRUMENTHISTORY embeds variable within transition INSTRUMENTHISTORY program var foreach var var return return characterization satisfy formula precondition characterize approach variable program hence precondition refer introduce variable hence partition formula ADDHISTORY treat temporal operator formula variable correspond temporal operator detailed description ADDHISTORY ADDHISTORY INSTRUMENTHISTORY algorithm conversion linear formula correspond variable embed program PD pertain linear formula reduce variable capture truth CTL formula procedure temporal operator correspond  formula precondition correspond satisfaction nest CTL formula within aligns PROVECTL recursively iterate inner sub formula precondition outer sub formula dependent precondition already  generate due structure CTL precondition formula precondition satisfy formula express variable alone refer prophecy variable PD recall conditional parameter utilized CTL formula generate unique variable correspond  operator analyze variable indeed boolean variable computation satisfies false otherwise define assign assertion initial transition PD transition remain transition aforementioned temporal operator assign truth valuation atomic precondition remain transition becomes satisfied reflect sometime recall refers update reference variable replace reference prim version journal acm vol article publication date verify increasingly expressive temporal logic infinite dissatisfaction become false false valuation remain denote false exists previous PD satisfied remain transition satisfied valuation update immediate previous assign truth valuation disjunction satisfied otherwise valuation addition previously reflect indefinitely assign truth valuation atomic precondition assign valuation initialization enforces become falsify becomes appropriately assign ADDHISTORY INSTRUMENTHISTORY INSTRUMENTHISTORY variable within program PD respectively define variable PD demonstrate algorithm program iterate initial location  otherwise variable  modify program variable return finally algorithm return transform program PD alongside variable atomic proposition precondition linear formula encode linear formula within program sufficient return precondition truth valuation contingent upon newly embed transition ADDHISTORY deterministic computation program computation program annotate additional information theorem sub formula outermost operator temporal operator program Pˆ var Pˆ ADDHISTORY Pˆ computation unique computation Pˆ var computation Pˆ proof construct extend assignment variable induction computation Pˆ initial location unique variable option algorithm induction location option algorithm computation Pˆ  computation journal acm vol article publication date direction computation Pˆ transition Pˆ transition ADDHISTORY algorithm var computation Pˆ valuation obtain restrict valuation variable var remains formula precondition sub formula nest within ADDHISTORY soundly approximates truth approximation due precondition sub formula approximation theorem formula program var precondition compute sub formula suppose   ADDHISTORY var proof theorem premise theorem define indeed ADDHISTORY var define computation ADDHISTORY var formula suppose assumption proceed induction soundly approximates truth initialize soundly approximates truth update suppose assumption proceed induction truth initialize false soundly approximates truth update pure formula disjunction conjunction however precondition conjunction precondition similarly disjunction soundness boolean connective immediate PROVECTL return algorithm algorithm treatment formula somewhat PROVECTL future temporal operator treat previous temporal operator deterministically encode variable variable false finally boolean connective pure formula future temporal operator precondition boolean combination precondition sub formula masked CTL previous algorithm however decision PD depends accordingly disjunction theorem verify return program var proof induction quantifier CTL formula compute satisfy return PROVECTL journal acm vol article publication date verify increasingly expressive temporal logic infinite program return PROVECTL var satisfies formula quantification suppose computation recursive ADDHISTORY sub formula approximate precondition future sub formula ADDHISTORY PD variable induction structure theorem precondition ADDHISTORY theorem precondition approximate precondition obtain obtain obtain universal quantification approximation version PD obtain obtain CTL model checker obtain theorem PD valuation prophecy variable infinite satisfies  PD obtain repeatedly replace sub formula approximate version recursive approximate theorem satisfies formula quantification suppose universal obtain recursive ADDHISTORY sub formula approximate precondition future sub formula ADDHISTORY PD variable induction structure theorem precondition ADDHISTORY induction structure theorem precondition approximate precondition obtain obtain obtain existential quantification approximation version PD obtain obtain CTL model checker obtain theorem PD valuation prophecy variable computation satisfies  PD obtain repeatedly replace sub formula approximate version recursive approximate computation PD PD computation PD projection var var variable theorem computation theorem formula nest quantifier proof proceeds relies structure negation normal soundness previous approximation sub formula journal acm vol article publication date interaction prophecy discus extend algorithm handle CTL CTL ensures reference future prophecy variable inside reference variable indeed definition formula ensures sub formula operator formula formula boolean operator nest removal restriction attempt algorithm future formula immediately nest within formula due determinization arise verify formula precondition approximation satisfy future formula refer prophecy variable precondition relevant respect PD prophecy variable sub formula refers precondition variable program truth formula assertion truth variable described ADDHISTORY reference prophecy variable variable PD PD approximation PD however CTL algorithm algorithm quantification within formula nest collapse precondition refer prophecy variable variable relevant precondition prophecy variable handle appropriate quantification QUANTELIM however conversion characterization characterization precondition alone sufficient CTL quantify precondition transition PD QUANTELIM seek acquire satisfy formula program assertion variable assertion prophecy variable previous PROVECTL quantification indeed universal universally quantify assertion sufficient translate truth variable however existential quantification embed variable prophecy variable existential quantification chosen universal quantification option formally definition complex fragment CTL future within within universal quantification remains formula demonstrate limitation counterexample program EX clearly iteration onward location variable program sufficient information express truth information program express truth formula role variable information program enables distinguish program formula FG FG usage determinized program analysis precondition AG precondition AF precondition AG precondition AF journal acm vol article publication date verify increasingly expressive temporal logic infinite variable initial transition transition loop transition variable initial transition transition attempt introduce variable quantification indeed indeed existentially quantify introduce prophecy variable transition PD necessitate transition however indeed false everywhere existential quantification transition sufficient transform variable PD sufficient  CTL CTL demonstrates usage variable comprehensive CTL algorithm extends verify CTL program  exists infinitely clearly program evidence enters loop remain loop forever importantly pas AFG recursively handle sub formula inner sub formula sub formula namely function ADDHISTORY precondition precondition atomic proposition atomic proposition ADDHISTORY variable correspond connective upon INSTRUMENTHISTORY conjuncts transition PD update variable variable HG introduce PD initial boolean valuation remain transition satisfied HG valuation update update variable HG return ADDHISTORY precondition satisfy inner sub formula HG replace namely HG identify HG sub formula  CTL formula AF HG return approximate AF HG nondeterministic choice successor satisfy HG sub formula HG recall approximate formula allows symbolically determinize program simultaneously simulate related graph originate distinct program determinize return symbolically partially determinized program newly introduce prophecy variable namely associate branching relation prediction occurrence relation prophecy variable initialize nondeterministic reset whenever exit minimal SCS associate location decremented whenever journal acm vol article publication date graph program CTL  graph ADDHISTORY variable connective graph determinize prophecy variable correspond nondeterministic branching relation inside minimal SCS CTL utilize exist CTL model checker return assertion characterize HG verify determinized program denote PD  CTL formula AF HG CTL model task PD HG HG replace HG finally outermost CTL formula EG dictate PROVECTL algorithm verify EG journal acm vol article publication date verify increasingly expressive temporal logic infinite syntactically acceptable CTL formula cannot simply CTL model checker quantifier exists within relation context inner formula GF CTL model checker verify  determinized program previously generate procedure return precondition HG HG satisfy formula  indeed finally quantifier elimination existentially quantify introduce prophecy variable recall program prophecy variable combine PD satisfy formula clearly sufficient proof conclude  procedure QUANTELIM existentially quantifies precondition quantifier precondition HG variable PD precondition evaluate program HG indeed initial program mention satisfy formula evaluation discus implementation procedure algorithm implementation built extension source project source framework implement combine extends technique developed decade aim verification temporal program operates input format automatically extract llvm compiler framework intermediate representation analyze program program objective allows user dis temporal via reduction safety termination  analysis technique report application extend PROVECTL algorithm algorithm concern request packet irp device driver requirement irp cancel routine allows cancellation operation irp queue cancel routine cancel routine irp spin lock irp pointer queue spin lock lock thread acquire simply loop repeatedly lock available however queue irp despite spin lock requirement driver irp pending IoMarkIrpPending queue driver indeed irp pending acquire spin lock  queue irp cancel routine cancel routine requirement verify driver irp pending IoMarkIrpPending queue AG   IoMarkIrpPending source code implementation benchmark available mit source license http github com  journal acm vol article publication date device driver cancel routine irp PROVECTL program denote determinized variation PD attain determinize algorithm previously algorithm supplementary information regard interpret parse program command attain recursively partition CTL formula sub formula  IoMarkIrpPending identify formula connective refer ADDHISTORY algorithm algorithm  IoMarkIrpPending site atomic proposition respectively subformula algorithm corresponds initial PD denotes remain transition HU PD uniquely synthesize variable HU serf precondition sub formula valuation HU satisfy sub formula  IoMarkIrpPending substitute HU sub formula attain CTL formula AG  HU inner sub formula happens another formula  ADDHISTORY upon HU substitute previous linear sub formula correspond variable initial transition assign false assign HU journal acm vol article publication date verify increasingly expressive temporal logic infinite previous sub formula transition PD  precondition HU substitute linear sub formula associate variable finally outer CTL formula AG   transformation transition within PD embed variable correspond inner linear  outer formula simply treat CTL formula precondition acquire via exist CTL model checker return assertion characterize   recall exist functionality utilize CTL model checker nest sub formula future formula hence determinization model checker return counterexample deem precondition benchmark drawn CTL industrial code subsystem OS kernel infrastructure postgresql database server apache web server execute intel 8GHz core processor CTL allows express possibility viability reachable spawn computation additionally demonstrate verify involve existential stabilization eventually become reachable OS frag OS frag  arch bench verify described detail demonstrate CTL extension cancel toy demonstrate expressiveness CTL usefulness verify program benchmark tackle infinite program exist automate verify CTL finite applicable display benchmark program correspond CTL verify display code loc report verify CTL indicates indicates verify likewise indicates fail indicates due timeout timeout memory exception timeout trigger verification exceeds various verify program CTL negation allows disprove negation demonstrate practical viability approach runtimes within performance previously exhibit specialized  verify significantly expressive infinite program successfully verify invalidate CTL correspond benchmark due aforementioned limitation countable nondeterministic determinization technique journal acm vol article publication date experimental evaluation infinite program drawn OS  toy compete available comparison related various algorithm model CTL finite program decidable setting approach  lei reduces CTL formula calculus fix equation relation firstorder quantifier equality approach implement  vincent calculus model checker invoked translation approach described global  model checker linear model checker computes satisfies formula precondition replaces sub formula super formula formula contrarily seek verify undecidable infinite program sensitive integer calculus model polynomial equivalent parity conceive approach potentially CTL model latter reduce parity combine  vincent   however infinite integrate calculus within program extract invariant pertain program series reduction inhibits performance furthermore manual instantiation structure assertion characterize subset infinite journal acm vol article publication date verify increasingly expressive temporal logic infinite approach implementation technique described infinite program generalize approach introduce  reduces linear model branching model extend approach global model instead local model incorporate precondition existential quantification addition various improvement technique exist automate verification infinite program branching linear    important distinction however interaction linear branching formula finally previously adopt repurposed symbolic determinization technique introduce  verification LTL formula infinite symbolic determinization counterexample refinement generate counterexample counterexample branching  semantics preserve transformation encodes structure nest CTL formula within generation counterexample precondition generation syntactically partition formula longer limit interplay linear operator quantifier strategy CONCLUDING REMARKS introduce fully automatic capable CTL infinite integer program allows automatically verify program branching linear temporal operator developed implementation capable automatically program previously underlie symbolic representation capable facilitate interaction addition novel methodology extends CTL procedure verification fragment CTL user exponentially succinct logic linear introduce transformation embeds variable correspond nest connective formula within transition variable truth valuation CTL formula along computation future eliminate limitation determinization procedure potentially utilize technique introduce allows interaction linear branching fairness assumption pertain environment additionally specify behavior relate data various stage computation crucial express program correctness relate program data throughout execution however CTL alone cannot express without quantification exist automate model CTL quantification encode constraint within exist CTL model checker obtain automatic verifier CTL however unclear strategy integrate CTL model checker constraint quantification investigate aforementioned approach extend CTL logic