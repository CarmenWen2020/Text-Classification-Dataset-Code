distribute minimum span mst central fundamental distribute graph algorithm kutten peleg devise algorithm timeO hop diameter input vertex graph message complexity peleg  algorithm kutten peleg essentially tight achieve optimal optimal message complexity recent breakthrough affirmative devise randomize algorithm message complexity simultaneous message optimality achieve deterministic algorithm article building affirmative devise deterministic algorithm computes mst logn logn logn message polylogarithmic factor message complexity algorithm significantly respective factor addition algorithm analysis oppose complicate previous sublinear algorithm finally algorithm devise randomize mst algorithm message complexity radius graph parameter typically improves previous bound elkin CCS concept theory computation shortest additional distribute graph algorithm minimum span introduction background distribute minimum span mst fundamental extensively distribute graph algorithm seminal algorithm logn message complexity logn vertex input graph respectively complexity improve retain bound logn message kutten peleg improve previous devise algorithm hop diameter equivalently unweighted diameter albeit message complexity peleg  bound logn groundbreaking devise nearly  algorithm another research direction reduce communication complexity nearly optimal algorithm kutten peleg  towards bound logn recent breakthrough devise randomize algorithm complexity message complexity conclusion intrigue randomization simultaneously achieve message optimality article devise deterministic algorithm logn message complexity logn logn addition deterministic algorithm drastically simpler addition polylogarithmic factor message complexity algorithm significantly respective factor explicitly specify factor however algorithm construct neighborhood elkin latter algorithm message complexity factor definitely incur algorithm addition apparent analysis complexity generalize congest logn model positive integer parameter model bandwidth vertex identity formal definition algorithm implement logn logn message bound compute mst congest logn model upper bound logn bound gap standard congest model bound message complexity due bound applies deterministic algorithm randomize  algorithm applies randomize comparison apply network model latter model computation vertex identity however vertex computation identity non comparison notation hide factor polylogarithmic although stress heavily crucial detail journal acm vol article publication date march deterministic distribute mst algorithm optimal randomize algorithm achieves message complexity ofO although complexity sublinear algorithm deterministic comparison applies network model hence message complexity logn logn optimal logn factor logn factor technical overview sublinear mst algorithm kutten peleg consists phase phase construct mst collection vertex disjoint subtrees fix mst vertex input graphG subtrees fragment moreover fragment algorithm kutten peleg diameter fragment computation mst ingenious variant boruvka algorithm stage mst compute procedure pipeline mst procedure auxiliary bfs input graph candidate fragment pipelined efficiency intermediate vertex filter candidate discover heaviest cycle phase algorithm kutten peleg responsible message complexity involves local computation recent nearly message optimal algorithm consists phase phase algorithm kutten peleg however phase algorithm employ strategy kutten peleg communication pipeline mst procedure merge fragment via boruvka algorithm merge diameter fragment via boruvka algorithm naive implementation merge proportional diameter fragment overcome maintain mst fragment refer fragment compute phase algorithm recall consists fragment parameter mst mst fragment diameter mst mst Fˆ algorithm maintains obtain merge fragment fragment Fˆ via boruvka algorithm compute minimum outgo MWOE fragment Fˆ Fˆ algorithm computes fragment minimum Fˆ Fˆ Fˆ Fˆ algorithm upcast auxiliary bfs information compute MWOE  fragment Fˆ Fˆ compute mst Fˆ fragment latter obtain merge fragment Fˆ via boruvka algorithm procedure described previously message efficient however generally message complexity super linear resolve issue employ hierarchy sparse neighborhood communication efficient fragment within  fragment sophisticated complicate algorithm elaborate analysis incurs polylogarithmic factor message complexity non trivial local data structure vertex moreover journal acm vol article publication date march elkin currently deterministic distribute message efficient algorithm construct neighborhood algorithm resort randomize algorithm elkin becomes randomize article propose simpler situation instead construct mst construct mst slightly generalize refining analysis kutten peleg lenzen logd logd message phase algorithm kutten peleg however within desire bound algorithm oppose mst recall argue earlier latter message efficient compute minimum vertex fragment Fˆ Fˆ Fˆ fragment contains ino importantly  auxiliary message entire message complexity algorithm linear oppose previous entire algorithm analysis ultimately essentially detail originate previous article related singh bernstein devise mst algorithm optimal message complexity timeO diam mst logn maximum input graph diam mst hop diameter compute mst latter parameter diam instance author devise mst algorithm parameter instance definition bound mst computation input graph however algorithm author detect termination unless estimate input khan  devise ano logn approximate mst algorithm another parameter local shortest diameter bound compute approximate mst elkin bound quantum distribute communication bound mst graph constant hop diameter elkin mst graph congest clique model ghaffari  devise message optimal efficient mst algorithm model  devise randomize non comparison mst algorithm diam mst message algorithm assumes computation vertex identity KT model function journal acm vol article publication date march deterministic distribute mst algorithm optimal efficient mst algorithm planar graph generally graph bound genus ghaffari  subsequent preliminary version article  subsequent related publish  extend mst additional fundamental approximate min approximate shortest disc    continued research KT model vertex computation  devise asynchronous randomize non comparison mst algorithm message complexity min sublinear graph sparse   devise synchronous randomize non comparison mst algorithm model KT tradeoff message complexity specifically min message refer reader ghaffari kuhn related excellent recent survey additional aforementioned algorithm elkin computes mst message without detect termination ino upper bound vertex assume upper bound computation elkin assumption mst algorithm detects termination article deterministic  algorithm within framework elkin obtain randomize algorithm message complexity algorithm algorithm elkin without detect termination upper bound vertex computation PRELIMINARIES synchronous congest model distribute communication vertex input graph host processor processor communicate another via logn message synchronous assume polynomial alternatively message restrict identity congest logn model parameter vertex message logn alternatively vertex identity via incident assume graph communication vertex unique identity denote algorithm model message complexity algorithm overall message throughout execution algorithm execution vertex incident belong mst assume mst unique assumption without loss generality chapter peleg subtree unique mst mst fragment simply fragment journal acm vol article publication date march elkin collection positive integer mst mst fragment fragment vertex disjoint positive parameter mst mst contains fragment diameter diameter subgraph maximum distance vertex diameter mst maximum diameter fragment mst coarsens mst fragment exists fragment contains subtrees span boruvka algorithm collection mst fragment phase computes MWOE fragment computes fragment graph vertex fragment  merges component fragment graph fragment obtains mst fragment fragment decrease factor phase logn chapter peleg detail non vertex denote vertex denote identity vertex fragment designate vertex  identity identity   algorithm analysis kutten peleg algorithm  lemma chapter mst lemma lecture lenzen positive parameter mst compute message refer mst fragment fragment algorithm construct auxiliary bfs entire graph vertex message fragment designate vertex vertex route message fragment belong subtree compute interval vertex vertex interval disjoint belong nest vertex interval ancestor vertex interval interval vertex route message fragment belongs interval contains sends message compute interval conduct convergecast convergecast vertex subtree assigns interval assigns deg disjoint     within assigns parallel disjoint interval finally conduct pipelined convergecast learns interval fragment lemma lenzen applies inspect proof reveals message complexity procedure analyze kutten peleg lenzen analysis slightly weaker bound sake completeness  proof journal acm vol article publication date march deterministic distribute mst algorithm optimal entire compute interval message whereas pipelined convergecast  ando message suppose already conduct phase boruvka algorithm obtain coarsen implement phase boruvka algorithm construct coarsen mst consequently assume vertex identity fragment fragment Fˆ belongs addition assume identity respective fragment Fˆ assume identity fragment phase identity fragment fragment identity fragment Fˆ coarsens argue induction guarantee induction mst construct vertexv update identity  ando message addition upcast identity fragment conduct bfs stage message fragment compute parallel fragment minimum Fˆ Fˆ fragment coarsens fragment computation message recall mst diameter fragment upcast  information auxiliary bfs vertex via pipelined convergecast procedure intermediate vertex fragment Fˆ vertex subtree message chapter peleg locally computes MWOE  fragment Fˆ locally computes fragment graph vertex fragment  computes mst specifically fragment identity fragment Fˆ coarsens computation conduct identity fragment Fˆ coarsens Fˆ consequently fragment Fˆ coarsens fragment sends message message Fˆ Fˆ Fˆ coarsens message Fˆ destination interval  attach rout along unique   fragment receives message writes belongs Fˆ pipelined downcast message message rout destination along vertex fragment broadcast identity Fˆ fragment Fˆ vertex message finally vertex update fragment identity message completes description phase boruvka algorithm analyze message complexity phase logn phase journal acm vol article publication date march elkin overall logn logn logn compute interval compute account compute    identity fragment similarly message complexity logn logn construct compute interval consequent phase overall message complexity logn logn compute mst parameter logn logn message algorithm identical described jth phase phase altogether logn message phase logn message phase hence message complexity logn logn summarize theorem deterministic algorithm described earlier computes mst congest model logn logn logn message extend algorithm  logn model positive integer parameter discus diameter proceed complementary diameter regime construct mst logn logn message upcast identity fragment message jth phase algorithm compute minimum parallel fragment Fˆ Fˆ message pipelined convergecast equivalently upcast item message detail pipelined downcast message message downcast sends message along destination broadcasting entire graph update fragment identity message overall phase logn logn logn logn logn upper bound overall message phase logn logn hence message complexity logn logn diameter regime construct logn logn message compute minimum journal acm vol article publication date march deterministic distribute mst algorithm optimal fragment parallel phase message phase message overall sum logn logn logn logn logn message hence entire algorithm logn message complexity logn logn theorem deterministic algorithm described earlier computes mst congest logn model logn logn logn message  mst sake completeness algorithm due construct mst integer parameter constant arbitrary construct mst fragment diameter finally construction version algorithm slightly lenzen bound message complexity slightly respective bound algorithm phase phase algorithm already compute mst induction mst singleton phase algorithm collection mst phase fragment diameter computes MWOE denote fragment message addition phase vertex update identity fragment message message receiver writes  MWOE MWOE endpoint belonging identity fragment becomes endpoint defines candidate fragment graph vertex fragment MWOE fragment compute maximal MM elaborate fragment merge fragment along MWOE connects fragment necessarily via MWOE fragment fragment diameter merges along procedure computes MM completes description algorithm mst consists merge fragment fragment participate merge described earlier fragment diameter diam unmatched fragment MWOE endpoint remark lemma proof closely related lemma lenzen lemma diam journal acm vol article publication date march elkin proof fragment Fˆ subtree diameter fragment graph  fragment moreover fragment subtree diameter induction hypothesis diameter nevertheless hence diameter Fˆ lemma fragment Fˆ contains vertex proof proof induction fragment Fˆ contains vertex induction hypothesis fragment contains vertex fragment diam hence merges fragment fragment outgo MWOE induction hypothesis merge fragment hence substitute diam rescale appropriate constant obtain desire mst sketch procedure computes MM analyze message complexity recall lemma fragment diameter simulate cole  vertex algorithm internal fragment message initial fragment identity implement usingO message straightforward manner overall computation message vertex fragment unmatched insert unmatched update become involves convergecast fragment learns unmatched addition internal vertex learns descendent unmatched entire algorithm implement message straightforward manner hence entire computation MM phase algorithm message phase message sum phase obtain timeO message complexity summarize theorem theorem integer parameter deterministic algorithm described earlier computes mst timeO usingO message argue previously constraint downcast upcast bandwidth analyze downcast upcast pipelined convergecast routine congest logn model parameter straightforward extension journal acm vol article publication date march deterministic distribute mst algorithm optimal classical upcast downcast procedure  model described chapter peleg hop diameter vertex downcast routine message specify destination assume interval rout already compute vertex interval interval assume  thatr interval destination downcast message respective destination message employ straightforward routine vertex destination resides subtree sends message destination reside denote message denote message destination belong easy procedure vertex distance min message statement induction substitute derive theorem theorem downcast message hop diameter congest logn model message assume equip interval rout symmetrical algorithm analysis apply upcast pipelined convergecast primitive originally message vertex host message vertex objective corollary upcast message  logn model  message message efficient algorithm  parameterized elkin author define radius parameter graph positive function parameter define recall assume distinct unique mst cycle heaviest elimination radius respect cycle denote   max instance maximum distance vertex cycle min elimination radius  minimum elimination radius respect cycle heaviest radius graph maximum elimination radius   elkin argue local model mst deterministically without termination detection tight constant factor moreover randomize algorithm congest model algorithm message complexity apply termination detection assume vertex upper bound message complexity earlier argue devise randomize algorithm congest model message vertex upper bound notation hide factor polylogarithmic journal acm vol article publication date march elkin applies termination detection replace algorithm elkin modify algorithm employ neighborhood definition parameter collection positive integer cluster neighborhood unweighted graph overlap   maxu vertex Γˆ cluster exists Γˆ maximum overlap maxv neighborhood introduce developed seminal  peleg linial  elkin cohen theorem parameter randomize distribute algorithm congest model construct neighborhood  logn logn logn message randomize mst algorithm message assume vertex upper bound assume vertex estimate algorithm construct neighborhood algorithm elkin theorem logn iso message complexity overlap cluster parallel invoke algorithm theorem unweighted diameter cluster logn congestion incur cluster logn logn message iso logn logn cluster actual logn message complexity logn logn finally mst computation obtain collection TQ mst cluster collection cluster contains endpoint belongs mst TQ argue mst lemma denote unknown algorithm mst mst TQ cluster proof cluster contains endpoint distinct mst TQ unique belong TQ cycle heaviest cycle contradiction TQ hence direction lemma  belongs mst TQ journal acm vol article publication date march deterministic distribute mst algorithm optimal proof suppose contradiction exists cycle heaviest definition radius elimination radius neighborhood exists  Γˆ Γˆ therefore cycle heaviest belong mst TQ contradiction hence reduction construct  optimal mst algorithm depends radius depends hop diameter theorem theorem vertex upper bound radius exists randomize algorithm congest model computes mst logn message finally input algorithm detect termination variant algorithm applies modification analogous scenario elkin precede algorithm μˆi belong TQ cluster designate mst return easy precede argument μˆi μˆi belong unique  filter subgraph algorithm maintains mst subgraph becomes mst μˆi logn logn message complexity corollary precede randomize algorithm computes mst congest model without termination detection message