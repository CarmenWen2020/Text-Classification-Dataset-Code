integer connectivity matrix matrix label perfect matchings graph vertex entry hamiltonian cycle otherwise motivate application hamiltonicity rank exactly GF upper bound establish explicit factorization submatrices matchings label respectively submatrices therefore basis bound submatrix label rank obtain algorithmic rank structure matchings nno monte carlo algorithm solves hamiltonicity bipartite graph monte carlo algorithm solves  decomposition width input graph moreover algorithm exponential hypothesis algorithm  imply breakthrough  algorithm cnf CCS concept theory computation graph algorithm analysis parameterized complexity algorithm mathematics compute matchings factor additional hamiltonicity bound treewidth parameterized complexity matchings introduction hamiltonicity generalization salesman widely acknowledge NP classic algorithm tackle variant thereof  approximation algorithm lin kernighan heuristic polynomial approximation scheme euclidean tsp classic belonging due bellman independently karp demonstrates salesman denotes vertex input graph introduce dynamic program subset become fundamental algorithmic paradigm obtain exponential algorithm  wagner fomin  chapter considerable effort improve algorithm efficient algorithm already independently author influential survey woeginger renew attention already salesman hamiltonicity nno affirmative bound claw graph breakthrough partially resolve nno monte carlo algorithm hamiltonicity undirected graph algorithm bipartite graph unfortunately derandomize algorithm extend salesman without incur pseudo polynomial dependence input approach cop NP graph hamiltonicity exploit structure input seek algorithm input graph treewidth pathwidth pathwidth decomposition closely related decomposition correspond width excellent NP graph researcher discover concept independently fundamental graph minor robertson seymour introduce notion treewidth decomposition become dominant terminology graph treewidth informally decompose efficiently manner dynamic program decompose accord decomposition refer  information notion algorithm bound treewidth graph influential  obtain later algorithm function substantially improve greatly improve tractability verify separately intersection neighborhood vertex input graph obtain employ dynamic program independent equivalently vertex  standard reduction dependence cannot improve subexponential algorithm unless exponential hypothesis fails unless cnf subexponential algorithm assumption exponential hypothesis seth algorithm optimal cannot  positive independent dominate assume input graph vertex along decomposition width journal acm vol article publication date march hamiltonicity via perfect matchings salesman hamiltonian cycle situation local   introduce notion catalan structure obtain algorithm solves minor graph obtain  connectivity encode bound intersect decomposition along connectivity hamiltonian cycle monte carlo algorithm  algorithm algorithm  violate seth nevertheless complexity hamiltonian cycle remain elusive recently superset author connection optimal substructure dynamic program algorithm rank matrix matrix indexed partial partial combine valid partial redundant safely forget denote rank context mostly GF deterministic algorithm connectivity derandomizing technique algorithm  hamiltonian cycle contribution inspire mention matrix connectivity matrix perfect matchings basis connectivity matrix establish rank article basis elaborate rank connectivity matrix integer connectivity matrix matrix label perfect matchings graph vertex entry hamiltonian cycle otherwise  rank exactly GF establish define explicit perfect matchings  basis GF unique partner union hamiltonian cycle label induce permutation matrix implies rank bound explicit factorization rectangular matrix inner dimension indexed theorem prof indeed basis explicit formula linear combination completes claimed rank bound raz  matrix obtain restrict perfect matchings bipartite graph independent via representation theory rank exactly rank author disprove rank conjecture communication complexity nondeterministic communication complexity matchings hamiltonian cycle rank conjecture imply lemma factorization matrix contains submatrix matrix inner dimension weaken version communication complexity arora  journal acm vol article publication date march algorithm hamiltonicity exploit specific basis distinct subset matchings factorization theorem allows deterministic algorithm compute parity hamiltonian cycle undirected graph bipartite graph nno combine isolation lemma obtain monte carlo algorithm decision version hamiltonicity undirected bipartite graph within algorithm undirected graph algorithm  allows bipartite graph recall hamiltonicity undirected bipartite graph  algorithm undirected graph bipartite graph justified algorithm bound pathwidth perfect matchings obtain faster algorithm hamiltonian cycle via nontrivial pathwidth dynamic program routine regard algorithm rank bound  hamiltonian cycle graph decomposition width replace memoization partial fingerprint basis representation encode partial consistent basis modulo per basis achieve  lemma efficiently convert fingerprint basis another permit perform dynamic program computation insertion partial crucially depends structure notably lemma proof rank upper bound implicit difference related algorithmic obtain faster algorithm hamiltonicity parameterized pathwidth dynamic program strategy unlike exist dynamic program formulation furthermore randomization isolation lemma guarantee unique fingerprint approach finally achieve  depends crucially structure basis matchings lemma directly rank similarly subsequent bound existence sufficiently permutation identity matrix directly rank bound bound assume seth algorithm significantly improve satisfiability cnf formula consist clause variable  latter contradict exponential hypothesis introduce although consensus truth bound seth previous interpret barrier significantly improve algorithm namely elusive  algorithm cnf tight conditional bound basis gadget reduction cnf although setup previous bound reduction generic gadget induced subgraph gadget exploit crucial submatrix connectivity matrix induced journal acm vol article publication date march hamiltonicity via perfect matchings permutation matrix basis unique partner union hamiltonian cycle previous reduction choice hamiltonian cycle per bag propagate series gadget throughout decomposition algorithmic conclusion corollary bound pathwidth algorithm corollary obtain  monte carlo algorithm hamiltonicity cubic graph knowledge algorithm graph PRELIMINARIES graph standard graph notation denote arc vertex vertex undirected notation graph vertex respectively endpoint   hamiltonian cycle cycle vertex exactly cycle vertex incident exactly cycle pack vertex ofG incident cycle vertex disjoint remove cycle cycle obtain pack perfect matchings perfect graph vertex incident exactly union perfect matchings graph cycle graph cycle potentially perfect matchings graph structure partition borrowing partition lattice partially refinement express union perfect matchings hamiltonian cycle perfect matchings equivalent trivial partition outcome operation sake completeness formally define arbitrary partition ofu define relation equivalence relation transitive closure outcome exactly partition equivalence accord perfect matchings simplifies graph vertex vertex partition induced component instructive perfect matchings union hamiltonian cycle yield component notation partition lattice pathwidth decomposition decomposition graph node associate vertex bag node node unique pathwidth bag minus pathwidth graph minimum pathwidth decomposition ofG focus dynamic program decomposition mention passing related notion journal acm vol article publication date march treewidth define node decomposition instead presentation dynamic program decomposition adhere simplify description easy commonly notion nice decomposition introduce  adjacent node assume bag vertex achieve without increase treewidth overview decomposition dynamic program decomposition   extension introduce bag define nice decomposition definition nice decomposition nice decomposition decomposition underlie node predecessor node bag leftmost bag bag associate leftmost node empty introduce vertex bag internal node predecessor bag introduce introduce bag internal node label predecessor bag introduce exactly bag introduce forget bag internal node predecessor bag forget rightmost bag bag associate rightmost node empty easy verify decomposition pathwidth transform  nice decomposition without increase width notation integer  bracket notation predicate otherwise shorthand structure MATCHING connectivity matrix outline structure connectivity matrix specifically basis rank exactly explicit matrix factorization application matrix factorization exponential algorithm hamiltonicity factorization connectivity matrix recall matrix label perfect matchings graph vertex entry hamiltonian cycle otherwise dimension matrix perfect vertex union matchings hamiltonian cycle cannot hamiltonian cycle perfect matchings journal acm vol article publication date march hamiltonicity via perfect matchings matrix auxiliary information indexed perfect matchings  depict schematically matchings numbered correspond basis definition label LC obtain linear combination GF correspond basis matchings perfect matchings easily complement identity matrix matrix matrix rank introduce perfect matchings goal correspond basis GF definition vertex matchings local endpoint distance respect structure matchings easy bound rank submatrix induced permutation matrix already rank essence bound pathwidth dynamic program hamiltonian cycle upper bound involve obtain concrete factorization rectangular submatrices induced indexed factorization technical inductive argumentation basis algorithm introduce perfect define function partner perfect shorthand definition denote empty integer bitstring define perfect matchings journal acm vol article publication date march denote binary complement bitstring finally perfect matchings bitstring unfortunately formal definition enlighten regard actual structure perfect matchings clarify structure matchings recall recursively construct perfect matchings integer another replace vertex explain intuition bitstrings   exactly choice connects exactly vertical choice perfect matchings adjacent bitstring determines option restriction latter choice proposition integer consists perfect matchings graph vertex adjacent distinct perfect matchings clearly perfect matchings integer symmetric structure aim perfect matchings basis connectivity matrix regard matchings union hamiltonian cycle proposition integer bitstrings hamiltonian cycle proof indexed earlier hence definition prescribe exactly choice without loss generality consequently specifies effectively obtain  allows alternate choice hamiltonian cycle assume prescribe matchings verify decides journal acm vol article publication date march hamiltonicity via perfect matchings unmatched cycle union vertex union matchings hamiltonian cycle indicates matchings proposition directly rank bound submatrix matchings permutation matrix theorem due technicality proof defer theorem equivalent connectivity matrix rectangular submatrices label matchings theorem implies basis rank theorem integer accord definition recall exactly entry indexed indexed consequently theorem factorization submatrices permutation submatrix denote asc formula label perfect matchings label basis matchings lexicographically bitstrings matrix label perfect matchings label basis matchings lexicographically bitstrings corollary rank connectivity matrix GF integer proof proposition rank connectivity matrix contains submatrix permutation matrix equation theorem immediately rank submatrices rank dimension algorithm hamiltonicity monte carlo algorithm hamiltonian cycle  undirected graph bipartite graph algorithm insight perfect matchings greatly rely theorem decision version compute parity hamiltonian cycle modulo algorithm proof lemma proof lemma algorithm undirected graph  ωmax parity hamiltonian cycle nωmax  ωmax lemma algorithm bipartite graphG function ωmax parity hamiltonian cycle nωmax  ωmax journal acm vol article publication date march application isolation lemma modulo counting suffices probability hamiltonian definition function isolates unique  lemma isolation lemma nonempty universe ωmax uniformly independently random isolates ωmax theorem exists monte carlo algorithm hamiltonian cycle  undirected graph bipartite graph proof graph undirected bipartite arc arc assign integer ωmax uniformly independently random ωmax lemma lemma calculate parity hamiltonian cycle nωmax odd hamiltonian cycle algorithm return otherwise return algorithm usage parity calculate algorithm hamiltonian cycle graph algorithm certainly return however graph contains hamiltonian cycle lemma probability function isolates hamiltonian cycle consequently odd hamiltonian cycle algorithm return hamiltonian cycle nωmax therefore obtain monte carlo algorithm basis matchings technical lemma core algorithm perfect matchings introduce subset matchings bound lemma compute extension basis matchings hamiltonian cycle lemma dynamic program mention subset basis matchings lemma cardinality proof recall integer define formally distinct matchings subset basis whereas  longer bitstrings additionally assume subset incident universe inequality inequality analysis contains incident refer analyze journal acm vol article publication date march hamiltonicity via perfect matchings contains contains subset upper bound directly definition ofr analyze choice contains choice penultimate incident definitely contains penultimate bound independently saving identical however penultimate contains neither penultimate contribution upper bound anymore moreover horizontal vector matrix obtain  consequently bdi therefore claimed upper bound matrix fix constant hidden inside notation analysis tight  subset analysis definition perfect matchings undirected graph denote perfect matchings recall denote perfect matchings graph definition extension hamiltonian cycle undirected graph function ωmax perfect integer denote perfect matchings hamiltonian cycle ext ext lemma undirected graph function ωmax  ωmax compute nωmax ext nωmax journal acm vol article publication date march proof arbitrary fix vertex necessarily perfect vertex nωmax denote fromv graph alternately exactly   ext hence dynamic program routine compute nωmax sufficient compute subset recursive formula define lemma formula memoization claimed algorithm proof lemma lemma focus compute hamiltonian cycle modulo proof lemma iterate distinct incident arbitrary fix vertex parity hamiltonian cycle incident hamiltonian cycle hamiltonian cycle exactly ensure subdivide odd incident somewhat abuse notation denote bijection hamiltonian cycle subdivision subdivision hamiltonian cycle uniquely decompose perfect matchings fix nωmax goal compute perfect matchings hamiltonian cycle formally calculate sum modulo theorem formula modulo ext ext journal acm vol article publication date march hamiltonicity via perfect matchings summation denote perfect matchings contribute ext analogously graph incident lemma claimed hence proof lemma proof lemma graph lemma handle undirected graph however exploit  harness directedness graph proof lemma bipartite graph bipartition clearly assume otherwise hamiltonian cycle auxiliary undirected bipartite graph split arc underlie undirected graph split hamiltonian cycle uniquely split arc corresponds perfect moreover perfect perfect cycle consist cycle goal perfect matchings hamiltonian cycle underlie undirected graph guarantee exactly hamiltonian cycle bipartite graph fix integer nωmax hamiltonian cycle graph thm ext ext lemma proof lemma  hamiltonicity USING   algorithm hamiltonian cycle graph decomposition width recall partial hamiltonian cycle vertex bag internal vertex bag endpoint internal unused suffices partition bag endpoint arrangement perfect matchings endpoint information downside involves roughly  partial dominates faster algorithm instead partition endpoint internal unused vertex perfect matchings endpoint journal acm vol article publication date march implement packing intuitively combine fingerprint packing indeed fix global vertex induced subset packing cycle matchings abstract away unused vertex partition basis GF modulo nevertheless useful ensure sufficiently error existence unique hamiltonian cycle minimum via isolation lemma version modulo counting setup dynamic program decomposition graph along decomposition pathwidth nonnegative ωmax task compute ωmax parity hamiltonian cycle exactly assume nice decomposition width treat decomposition sequence bag fix arbitrary vertex proceed outline partition internal endpoint unused vertex basis perfect matchings endpoint respect induced compute parity packing consistent basis maintain information throughout dynamic program spent unsurprisingly bag introduce involve recomputation fingerprint inherently cannot explicitly packing technical convenience algorithm incident vertex hamiltonian cycle nice decomposition easily rightmost introduce vertex bag introduce vertex bag additional easily verify remain bag namely introduce forget vertex bag reorder freely constraint vertex forgotten introduce incident reorder decomposition bag introduce vertex forget vertex forget vertex bag precede vertex bag dynamic program algorithm bag compute bag interested choice parity packing hamiltonian cycle implies interested counting partial cycle cannot cycle vertex arbitrarily perform dynamic program decomposition proceed bag precede introduce bag bag vertex compute entry partition integer ωmax perfect matchings basis restrict clarify definition basis  identify apply definition entry contains parity packing graph induced vertex bag introduce journal acm vol article publication date march hamiltonicity via perfect matchings cycle vertex exactly vertex bag denote pack respect pack additionally union cycle entry odd zero cannot odd endpoint vertex disjoint tacitly ignore entry technical difficulty dynamic program handle information respect basis perfect matchings introduce decomposition crucial efficiently compute representation information respect intuitively lemma allows basis representation apply lemma separately partition previous vertex choice simplify entry basis lemma applies dynamic program application packing lemma denote packing integer denote basis matchings obtain via definition identify furthermore denote parity packing cycle permutation basis obtain permute accord identify identify parity packing cycle compute denote proof clearly permutation swap consecutive suffices lemma vertex successor ofv accord index  swap refer initial obtain arbitrary basis obtain computation  andw vertex grouped notation recall throughout specify distinguish along andw initial avoid redundant sometimes explicitly fix vertex inw  vertex difference basis matchings respect option applies tov   successor ofv determines vertex journal acm vol article publication date march matchings restrict displayed respect initial discus namely basis initial vertex imply happens swap ofv andw directly basis initial andw hence consecutive contains swap endpoint unchanged andw consecutive ordering basis initial remains consecutive swap context accordingly vertex subcases denote precedes succeed precedes succeed understood obtain basis obtain deduce relevant vertex crucially recall basis contains exactly vertex consecutive precedes precedes obtain vertex predecessor obtain specify ofw initial  basis due matchings pack cycle exactly cycle crucially union union cycle exactly disjoint endpoint otherwise trivially addition union exactly additional cycle whereas creates cycle corresponds exactly behavior perfect matchings vertex clearly equivalent hence compute desire succeed succeed obtain vertex successor obtain specify ofv initial isv basis journal acm vol article publication date march hamiltonicity via perfect matchings matchings restrict displayed respect initial matchings restrict displayed respect initial matchings relation previous argumentation precedes succeed obtain vertex predecessor successor obtain however contradicts assumption basis obtain vertex succeed precedes vertex consecutive consecutive obtain vertex marked exactly consecutive obtain initial  matchings easily basis initial cycle odd cycle argument union cycle disjoint union endpoint convenient verify connectivity matrix fort equivalently journal acm vol article publication date march cycle  corresponds perfect MF vertex contains cycle equivalent MF analogous statement remains consult matchings correspond respectively matchings MF checked verify sum modulo prof implies desire compute via  compute access compute matchings basis prof claimed return description algorithm dynamic program decomposition proceeds previous bag denote compute bag denote tuv correspond obtain basis lemma vertex introduce forget vertex bag vertex affect packing computation introduce bag packing vertex basis bag bag vertex empty trivial entry introduce vertex bag bag vertex introduces vertex accordingly previous bag vertex furthermore vertex bag clearly subgraph vertex precede bag plus introduce pack incident partition partition choice basis already previous bag namely forget vertex bag bag vertex forgets vertex previous bag vertex vertex bag previous bag fix partition basis standard pack definition conversely journal acm vol article publication date march hamiltonicity via perfect matchings pack modulo previous bag pack hence introduce bag bag vertex introduces previous bag vertex packing cannot bag vertex compute tablet previous bag  information respect basis vertex lemma proceed compute subsequently transform completes procedure introduce bag explain computation tuv arbitrary partition integer perfect latter basis modify ofv induced fromv pack perfect matchings matchings basis directly definition tuv basis matchings perfect recall basis respect induced distinguish accord pack contains contains cycle vertex definition entry compute parity packing others cycle cycle packing account cannot beyond imply packing clearly pack namely exactly apart already  parity packing avoid tuv  bracket notation recurrence contribution correspond pack whenever sufficient packing cycle implies perfect already parity packing tuv simply retrieve tuv later remains compute parity packing cycle packing without cycle relate packing previous bag fix pack disjoint union cycle perfect journal acm vol article publication date march endpoint cycle correspond pack previous bag rid retain essentially cycle structure effectively additional model contract pack furthermore clearly contains cycle cycle consequence cycle cycle formally pack pack useful computation basis modify indeed basis remove vertex remain vertex due structure imply recall basis matchings exactly adjacent accordingly bitstring determines vertex precede subsequent determines distinguish subcases entire isp  accordingly otherwise determines previous determines subcase possibly overall basis correspond bitstring minus account contribution packing without compute tuv tuv perfect contribution tuv packing pack contains contains cycle effectively pack furthermore contains cycle cycle cycle cycle basis straightforward modify occupy respectively exactly replace basis however crucial basis compute tuv lemma journal acm vol article publication date march hamiltonicity via perfect matchings corresponds bitstring tuv tuv symmetric previous despite modify argumentation vertex clearly perfect incident nevertheless packing parity packing consistent already tuv pack pack easy cycle cycle basis modify imply basis definition additional determines vertex indeed basis modify tuv tuv handle compute remains apply lemma compute data respect standard completes introduce bag output compute bag dynamic program terminates bag directly precede introduce bag forget vertex bag vertex bag vertex bag similarly introduce bag precede easy bag cannot introduce bag introduce succeed bag hamiltonian cycle correspond packing endpoint packing hamiltonian cycle combine definition compute parity packing unique basis accordingly algorithm choice otherwise analyze compute entry bag already compute spending effectively per entry entry corresponds basis nωmax tuples partition basis matchings upper bound journal acm vol article publication date march multinomial theorem obtain lemma lemma algorithm graph along decomposition width computes entry correspond rightmost introduce bag decomposition  wrap lemma counting modulo theorem isolation lemma lemma algorithm graph along decomposition width function ωmax parity hamiltonian cycle nωmax  proof recall vertex introduce rightmost decomposition  vertex algorithm deg parity hamiltonian cycle graph remove hamiltonian cycle exactly fix reorder decomposition described setup dynamic program bag decomposition introduce associate vertex forget vertex forget vertex lemma compute entry correspond bag precedes introduce bag ωmax definition entry parity hamiltonian cycle hence lemma theorem exists randomize algorithm graph along decomposition width solves hamiltonian cycle  algorithm cannot false positive false negative probability proof routine assign ωmax uniformly independently random ωmax algorithm lemma parity hamiltonian cycle ωmax parity return otherwise return procedure clearly claimed algorithm return exists hamiltonian cycle conversely suppose exists hamiltonian cycle probability lemma isolates hamiltonian cycle ofG hence probability exists unique minimum hamiltonian cycle minimize hamiltonian cycle odd combine proof theorem theorem observation application exponential algorithm journal acm vol article publication date march hamiltonicity via perfect matchings hamiltonian cycle graph obtain theorem exists integer graph vertex vertex vertex theorem constructive correspond decomposition consequently decomposition polynomial observation incident vertex introduce decomposition packing pack cannot hamiltonian cycle indeed incident exists graph hamiltonian cycle similarly incident introduce packing exist bag decomposition vertex suffices instead incident introduce decomposition nonzero entry consequently choice neglect incident introduce already satisfy dynamic program contribute entry bag assume incident introduce decomposition consequently bag upper bound hence obtain corollary exists randomize algorithm graph maximum solves hamiltonian cycle constant  algorithm cannot false positive false negative probability finally approach lemma alter definition dynamic program routine parity graph lemma algorithm graph along decomposition width function ωmax integer parity nωmax  proof iterate endpoint unordered vertex parity fix transform decomposition nice decomposition bag forget vertex forget vertex bag append bag vertex standard transformation nice decomposition increase width decomposition perform dynamic program decomposition proceed bag vertex compute entry journal acm vol article publication date march partition integer ωmax perfect matchings basis restrict entry contains parity packing graph induced vertex bag introduce consists exactly cycle vertex exactly vertex bag denote definition entry additional counter pack vertex necessarily hamiltonian accommodate dynamic program formula slightly update counter straightforward formula introduce bag becomes tuv tuv however nontrivial difference previous dynamic program forget vertex bag vertex subcase introduce analysis assume formula becomes tuv longer vertex graph dynamic program terminates bag directly precede forget vertex bag vertex bag vertex bag definition entry parity apply isolation lemma exactly manner obtain theorem theorem exists randomize algorithm graph along decomposition width integer admits  algorithm cannot false positive false negative probability journal acm vol article publication date march hamiltonicity via perfect matchings lower bound hamiltonicity indication algorithm improve algorithm achieve significantly dependence pathwidth input graph polynomial factor input without breakthrough cnf express theorem theorem algorithm solves hamiltonian cycle exists algorithm solves cnf  recall definition connectivity matrix indexed perfect matchings graph vertex hamiltonian cycle proof bound rank basis matchings induces permutation submatrix proposition overview overview proof previous bound algorithm exploit width decomposition graph vertex grouped  fori separator decomposition gadget graph hamiltonian cycle behave  respect unify standard vertex incident vertex vertex component graph obtain remove vertex connection establish graph enforce propagates hamiltonian cycle encode assignment  clause satisfied  generic gadget proposition ensure induced connection hamiltonian cycle separator basis matchings proposition allows enforce gadget introduce gadget construction hamiltonian cycle gadget accept parameter construction vertex label incident gadget label incident vertex label function ensure hamiltonian cycle enters leaf vertex label definition label gadget label incident hamiltonian cycle consistent label gadget incident label gadget codomain multilabel gadget otherwise label gadget simultaneously labelings label respect gadget vertex incident distinct label denote dash solid journal acm vol article publication date march gadget vertex label incident label gadget label denote normal dash multilabel gadget label vertex label gadget label incident denote normal dash  indicates graph label ensure hamiltonian cycle contains exactly gadget label analysis cycle enters gadget vertex cannot gadget impossible remain vertex hence enters vertex symmetric multilabel gadget formally vertex graph incident label assigns label incident obtain replace cycle vertex consecutively denote  incident label gadget consist vertex label label  guard vertex instructive lemma hamiltonian cycle consistent hamiltonian cycle proof backward direction hamiltonian cycle guard  adjacent adjacent journal acm vol article publication date march hamiltonicity via perfect matchings induced subgraph gadget bold vertex label drawn dash label drawn normally vertex label gadget guard vertex otherwise cycle vertex moreover vertex hamiltonian cycle contains finally therefore guard vertex hamiltonian cycle contains gadget incident direction hamiltonian cycle enters leaf incident label vertex gadget vertex exists consist addition modulo induced subgraph gadget discus induced subgraph gadget illustrate function gadget described journal acm vol article publication date march definition induced subgraph gadget graph described tuple hamiltonian cycle consistent refer vertex projection gadget allows hamiltonian cycle behave graph induced gadget induced subgraph gadget overlap induced subgraph gadget independently gadget implement construction obtain modify graph remove graph independent vertex  vertex adjacent label gadget label vertex independent label label illustration gadget correctness gadget remark vertex useful apply gadget actually implement construction lemma exists hamiltonian cycle consistent exists hamiltonian cycle intuition proof lemma hamiltonian cycle graph cycle vertex independent correspond chosen proof direction intersection hamiltonian cycle extend hamiltonian cycle replace replace arbitrary reverse direction hamiltonian cycle independent hamiltonian cycle contains exactly NG label gadget hamiltonian cycle contains contains exactly exactly however cannot induce cycle vertex furthermore cannot zero impossible vertex similarly cannot consequently contains exactly exactly exactly index exactly index adjacent vertex vertex label obtain hamiltonian cycle journal acm vol article publication date march hamiltonicity via perfect matchings overview construction hamiltonian bound vertex potential hamiltonian cycle incident bold adjacent vertex denotes clique vertex multilabel gadget rectangle induced subgraph gadget illustrate empty  vertex vertex induced subgraph gadget clique remove gadget hamiltonian cycle consistent graph remove construction construction reduction formal definition intuition construction parameterized integer constant journal acm vol article publication date march chosen later define multinomial negative assume cnf formula variable multiple partition denote denote intuitively assignment variable vertex bag construct decomposition discus fix equation matchings define definition notation denote obtain unify arbitrary fix cardinality construction instance hamiltonicity   fori denote clique vertex vertex clique vertex clique vertex  vertex clique  vertex vertex adjacent vertex furthermore vertex adjacent vertex induced subgraph gadget vertex projection described vertex guaranteed hamiltonian cycle induced subgraph gadget easily enforce subdivide vertex adjacent vertex consists vertex vertex vector denote obtain identify similarly denote obtain unification equivalently vector satisfy  construct projection sort  immaterial vertex constant easily establish dummy variable journal acm vol article publication date march hamiltonicity via perfect matchings projection induced subgraph  unique basis hamiltonian cycle illustrate formal definition rectangle indicates border gadget vertex rectangle outside gadget account sort   incident unique hamiltonian cycle exists unique due proposition journal acm vol article publication date march denote incident vii fix arbitrarily injective mapping exists due equation multilabel gadget partial assignment  satisfies clause vertex induced subgraph gadget correspond correspond construction induced subgraph gadget exists contains singleton moreover label respect label respect multilabel gadget label interval exist assignment intuition construction vertex joint encode joint assignment vertex ensure disjoint vertex remainder graph hamiltonian cycle graph disjoint intersection    hamiltonian cycle induced subgraph gadget exactly  induces intuitively establish matchings replace incident vertex respectively fix encode partial assignment vertex mention encode exists due equation finally clause satisfied multilabel gadget graph intersection induces partial assignment satisfies clause label clause gadget chosen consecutively ensure multilabel gadget increase pathwidth constant clause gadget gadget complicate efficient decomposition multilabel gadget constant pathwidth independent label satisfy assignment hamiltonian cycle suppose satisfies formula recall partition variable denote restrict disjoint construct graph vertex  endpoint journal acm vol article publication date march hamiltonicity via perfect matchings consists vertex application induced subgraph gadget construction vertex vertex recall vertex lexicographically suppose sufficient internal vertex propagate concatenation shorter argue construction incident  vertex vertex incident obtain matchings cycle definition remove incident denote  alter clause multilabel gadget satisfies formula exists variable satisfies fix denote restrict induced subgraph gadget correspond clause gadget label vertex expand gadget safely replace hence exists disjoint endpoint  vertex  definition consistent induced subgraph gadget consistent multilabel gadget label respect multilabel gadget furthermore contract internal graph hamiltonian cycle recall induces endpoint vertex subset depends choice clique  extend vertex  obtain disjoint exactly endpoint clique vertex vertex easily hamiltonian cycle vertex adjacent endpoint hamiltonian cycle satisfy assignment suppose hamiltonian cycle consistent induced subgraph multilabel gadget contract clause gadget obtain multilabel gadget label contraction induced subgraph gadget denote construction induced subgraph gadget injective define hamiltonian cycle induced induced journal acm vol article publication date march lemma proof construction contains incident vertex contains incident vertex vertex matchings vertex matchings suppose induces cycle equivalently construct matchings possibly unique partner picked remove incident vertex proposition hamiltonian cycle contains  vertex incident remove  contradict hamiltonian cycle hence  assignment variable furthermore multilabel gadget satisfy assignment pathwidth efficiency bound argue pathwidth construct graph expand gadget function parameter theorem multilabel  recall vertex maximum integer multilabel gadget adjacent vertex induced subgraph gadget separator label  multilabel gadget chosen proportional denotes vertex expand label gadget intuitively consists vertex jth vertex depends clearly precise claimed decomposition obtain introduce forget separator remove separator component induced subgraph gadget adjacent consecutive vertex clause gadget vertex clause gadget induced subgraph gadget separator moreover neighborhood component obtain decomposition union consecutive separator equation bag along adjacent component obtain sequence separator equation decomposition bag consecutive separator introduce forget component neighborhood subset bag claimed upper bound pathwidth union consecutive separator journal acm vol article publication date march hamiltonicity via perfect matchings discus fix constant easily exists constant sufficiently inequality elementary analysis equality directly multinomial theorem hence satisfy equation assume algorithm solves hamiltonian cycle modulo factor polynomial cnf formula   algorithm cnf variable clause conclude proof theorem proof rank matrix factorization MATCHING connectivity matrix proof theorem implies corresponds basis connectivity matrix proof induction define projection operator shrinkt perfect parameter return perfect definition matchings equivalent undo recursive definition yield proposition intuitively operator shrinkt cycle shrinkt contract operator shrinkt similarly contract additional twist vertex rename perfect proof theorem shrink operator tailor inductive argument formal definition depict definition projection vertex integer define function shrinkt shrinkt definition recall return shrinkt shrinkt shrinkt shrinkt journal acm vol article publication date march subsequent definition corresponds shrinkt shrinkt dot reference shrinkt otherwise shrinkt shrinkt omit subscript context shrink shrinkt define shorthand shrink shrink easily proposition integer shrink otherwise shrink operation interacts matchings hamiltonian cycle recall operator union perfect journal acm vol article publication date march hamiltonicity via perfect matchings matchings hamiltonian cycle connectivity matchings creates component contains  operator convenient specify vertex hamiltonian cycle interaction lemma proof defer perfect matchings hamiltonian cycle depends directly projection matchings lemma integer recall shrink hamiltonian cycle  exactly hamiltonian cycle lemma intend basis lemma lemma theorem lemma integer furthermore hamiltonian cycle shrink hamiltonian cycle shrink theorem recall theorem statement theorem theorem restate integer accord definition establish factorization connectivity matrix rectangular matrix matrix label perfect matchings label basis matchings matrix label basis matchings label perfect matchings entry rectangular matrix matchings hamiltonian cycle otherwise submatrices matrix perfect matchings summand exactly unique hamiltonian cycle basis matchings statement theorem arithmetic modulo proof theorem quickly verify theorem unique perfect  hence theorem statement LHS regard choice sum  recall RHS completes journal acm vol article publication date march perform inductive argument theorem theorem statement apply lemma transform split sum formally shorten explicitly specify append RHS recall statement lemma shrinkt shorthand shrinkt rewrite RHS RHS sum bitstrings brief inspection summands apply inductive assumption sum obtain RHS finally application lemma obtain RHS LHS intend theorem integer claimed proof lemma defer proof lemma restate lemma lemma lemma restate integer recall shrink hamiltonian cycle  exactly hamiltonian cycle proof accord definition shrink operator matchings respectively appropriate distinction clearly contains due symmetry claimed equation swap yield statement omit symmetric statement immediately journal acm vol article publication date march hamiltonicity via perfect matchings arise contains remain organize choice omit mention symmetric finally neither contains technical clarify recall union perfect matchings vertex disjoint union cycle plus possibly arise matchings equivalently regard cycle correspond function return accordingly cycle subpaths incident intuitively shrink operator remove incident remove incident thereby subpaths endpoint endpoint subpaths cycle vertex additional definition shrink subpaths structure subpaths endpoint verify equation lemma statement generally assume contains cycle disjoint cycle discussion shrink delete however imply union cycle avoids hence cannot hamiltonian cycle remains equation cycle vertex depict clearly hamiltonian cycle matchings shrink shrink hence neither hamiltonian cycle equation clearly hamiltonian cycle matchings shrink shrink hence neither hamiltonian cycle equation clearly hamiltonian cycle matchings none hamiltonian cycle definition shrinkt hamiltonian cycle hamiltonian cycle contains subpaths definition journal acm vol article publication date march proof lemma solid belong dash contains correspond entry contains journal acm vol article publication date march hamiltonicity via perfect matchings hence cannot hamiltonian cycle omit partner empty contains subpaths hence remain hamiltonian cycle contains subpaths definition cannot hamiltonian cycle subpaths hence remain hamiltonian cycle contains subpaths definition subpaths subpaths remain cycle none hamiltonian cycle tacitly ignore otherwise remain vertex disjoint vertex convenience trivial vertex hamiltonian cycle hamiltonian cycle easily combine correspond subpaths remain hamiltonian cycle cycle hamiltonian cycle hamiltonian cycle journal acm vol article publication date march hamiltonian cycle hamiltonian cycle configuration remain hamiltonian cycle exactly hamiltonian cycle contains subpath definition hamiltonian cycle subpath easily hamiltonian cycle hamiltonian cycle contains subpath definition hamiltonian cycle subpath implies hamiltonian cycle hamiltonian cycle contains subpath definition hamiltonian cycle subpath implies hamiltonian cycle hamiltonian cycle trivial subpaths namely definition journal acm vol article publication date march hamiltonicity via perfect matchings configuration vertex hamiltonian cycle denote respectively configuration remain cycle cycle cycle structure proof lemma matchings correspond respectively  subpaths subpaths union perfect matchings hamiltonian cycle depends remain cycle disjoint none union hamiltonian cycle otherwise remain exactly vertex disjoint vertex configuration partition endpoint vertex treat easily verify configuration desire hamiltonian cycle exactly journal acm vol article publication date march hamiltonian cycle completeness binary correspond reorder vertex contract completes proof lemma CONCLUSIONS matchings basis connectivity matrix obtain factorization theorem theorem explicit express perfect linear combination matchings consequence obtain deterministic algorithm compute parity hamiltonian cycle undirected graph bipartite graph nno isolation lemma monte carlo algorithm decision version hamiltonicity within moreover basis algorithm undirected graph vertex along decomposition width decides hamiltonicity  somewhat surprisingly basis involve reduction cnf bound pathwidth algorithm optimal exponential hypothesis basis obtain deterministic algorithm hamiltonicity handle graph without  assumption extend bound pathwidth algorithm bound treewidth algorithm complexity finally connectivity matrix clearly investigate application however worth explore