polynomial algorithm approximation guarantee tsp fix  analysis  algorithm tsp LP relaxation narrow LP fix optimum tour narrow lonely algorithm dynamic program lonely partition instance instance strengthen LP stage recursive dynamic program compute span LP polyhedron vertex parity CCS concept mathematics compute combinatorial optimization additional salesman dynamic program approximation algorithm introduction salesman tsp played crucial role combinatorial optimization decade despite research  classical approximation algorithm  however ratio tour endpoint tour distinct tsp classical algorithm achieves approximation ratio initiate progress recently obtain approximation ratio introduce various technique article obtain approximation ratio arbitrarily completely approach instance tsp consists finite metric goal compute endpoint circuit contains    propose compute cheapest span odd vertex parity compute perfect eulerian trail shortcut whenever vertex algorithm approximation ratio  briefly explain notation denote symmetric difference disjoint union graph vertex denote endpoint exactly endpoint denote index vertex tour circuit endpoint span vertex previous classical  analyze  algorithm LP obviously relaxation tsp incidence vector ofs tour feasible minc instead formulation fourth constraint empty karp feasible LP convex combination incidence vector span plus hence cheapest span optimum LP algorithm constraint relaxation minc although remark LPs purpose  algorithm parity vertex recall odd vertex parity odd vertex precisely metric minimum minimum minimum vector polyhedron odd therefore vector polyhedron bound parity correction vector polyhedron parity correction vector lov√°sz splitting lemma context cunningham goemans  journal acm vol article publication date march approach tsp previous approximation guarantee reference ratio       van  LP implies upper bound integrality ratio approximation ratio  algorithm  analysis assume narrow narrow  argument fails narrow chain LP constraint proof proposition feasible linear program moreover compute minimum computation graph polynomial proof LP constraint suppose neither nonempty none vertex contradiction narrow compute efficiently narrow vertex exists narrow compute minimum capacity respect capacity vertex narrow narrow focus ref subsequent approximation algorithm upper bound integrality ratio recursive dynamic program approach completely dynamic program narrow optimum tour partition instance narrow strengthen LP narrow dynamic program recursively sub instance fix recursion yield approximation ratio recently approach improve simplify  obtain approximation ratio narrow neither algorithm  yield upper bound integrality ratio currently upper bound integrality ratio obtain analysis  van  algorithm journal acm vol article publication date march   LP narrow bound LP parity correction vector enforce nonnegative combination LP coefficient cheap parity correction vector lonely outline algorithm overview sketch compute span parity correction vector polyhedron odd parity correction vector nonnegative combination LP optimum LP insufficient narrow odd irrelevant odd odd odd narrow LP fix optimum tour narrow narrow odd suppose partition narrow lonely compute cheapest span lonely easily polynomial lonely chain however insufficient constraint LP obtain insufficient combine vector LP guarantee LP narrow lonely additional constraint LP LP combine cheap parity correction vector remark uniformly obtain approximation ratio lonely lonely partition instance lonely LPs sub instance combine difficulty lonely lonely however possibility subsequent lonely lonely instance vertex instance due proposition instance compute span LP recursively combine dynamic program journal acm vol article publication date march approach tsp dash dot vertical narrow solid optimum tour bold dash lonely interval  recursion vertex fifth sub instance consist vertex dot narrow densely dot loosely dot automatically proof reveal sub instance vertex sub instance arc digraph vertex identical output dynamic program span LP odd compute cheapest eulerian trail shortcut bound parity correction vector denotes recursive dynamic program detail mention subtle previous intersect sub instance sub instance pas  sub instance ifu inequality automatically combine LP return sub instance lonely recursive dynamic program dynamic program algorithm detail algorithm recursively fix recursion depth fix coefficient algorithm explain role coefficient dynamic program yield span LP  parity correction vector LP convex combination LP  journal acm vol article publication date march   input dynamic program dash solid coefficient constant coefficient LP contribute parity correction vector precisely contribution  LP algorithm recursive formula parity correction vector precise choice constant dynamic program algorithm input dynamic program consists vertex collection output dynamic program vector contribute parity correction vector chain remark compute tour sufficient return vector chain explicit vector purpose analysis dynamic program algorithm computes optimum linear program minc journal acm vol article publication date march approach tsp vector restrict feasible linear program instance metric tsp vertex useful vector entire vector sub instance later relevant narrow proposition chain exist return vector minimum moreover return otherwise apply algorithm recursively sub instance partition lonely lonely combine sub instance optimally exponentially combine sub instance optimum combination dynamic program dynamic program shortest auxiliary graph vertex correspond entry dynamic program arc correspond sub instance precisely construct auxiliary graph vertex arc illustrates vertex define arc auxiliary digraph corresponds combination sub instance correspond arc equivalently lonely lonely correspond inner vertex algorithm compute arc digraph arc define dynamic program output application dynamic program vector chain define arc explain arc description algorithm compute shortest auxiliary digraph respect arc journal acm vol article publication date march   dash dash partition vertex drawn remark vertex identical vertex exactly denote arc moreover combine span sub instance lonely span entire similarly combine LP   incidence vector   define convex combination return vector intuition arc contribution arc span consists contribution parity correction vector LP contribute parity correction vector equation  dynamic program important output dynamic program induction assume lonely chain lemma chain journal acm vol article publication date march approach tsp proof assume belongs recall moreover narrow implies  induction  chain moreover remains chain lonely belongs lonely lemma proof assume neither endpoint endpoint  lemma implies   role oft dynamic program compute implies lemma     hence symmetric argument forc  indeed construct span lonely lemma graph proof chain empty hence statement trivial assume construction digraph  induction  span induction moreover construct remains precisely statement lemma bound span contribution parity correction vector lemma vector proof definition arc journal acm vol article publication date march   fix optimum tour input dynamic program consistent tour traverse contains exactly vertex auxiliary digraph consistent tour vin vin vin denotes inner vertex parity implies denote unique lemma input dynamic program consistent tour proof input dynamic program consistent tour incidence vector feasible linear program  therefore moreover therefore assume unique inner vertex exactly vertex consistent tour tour disjoint union vin induction hence vin vin lemma longer inequality journal acm vol article publication date march approach tsp remain lemma obtain feasible parity correction vector lemma vector subset proof vector define sum vector subset  index  lemma vector vector feasible linear program minc proof vector feasible linear program hence linear program proof assume linear program convex combination implies statement lemma vector define sum nonnegative vector remains constraint exists index empty  induction otherwise exists index imply   minimal index   nonempty  maximal index   nonempty    nonempty    similarly     journal acm vol article publication date march   illustrates definition   dash index   chosen subset nonempty proof lemma dash vertical subset nonempty              distinct unless     inequality imply remains subset     contains neither    lemma   sufficiently LP inequality lemma apply actually dynamic program densely dot inequality lemma indeed sufficient pas  pas loosely dot lemma proof inequality lemma inequality induction claimed inequality constraint LP fix journal acm vol article publication date march approach tsp situation proof lemma situation  situation  proof lemma nonempty constraint LP convex combination proof inequality pas   apply induction hypothesis inequality sub instance correspond implies inequality definition otherwise inequality  recall   implies inequality definition nonempty recall neither lemma journal acm vol article publication date march   similarly neither lemma lemma hence inequality fix constant constant recursion depth LP lonely lemma lonely relevant obtain feasible parity correction vector lemma proof lemma  lemma vector feasible linear program hence narrow chain proposition definition  narrow vector lemma  convex combination  conclude construction otherwise distinguish  otherwise  induction moreover implies journal acm vol article publication date march approach tsp  lemma apply dynamic program    constraint LP hence approximation ratio approximation ratio fix span parity correction vector chain return dynamic program input lemma opt denotes optimum tour opt proof input dynamic program compute consistent tour optimum tour lemma choice imply opt lemma odd vector polyhedron odd proof lemma moreover none journal acm vol article publication date march   hence suffices lemma theorem denote upper bound linear program exists approximation algorithm runtime proof dynamic program algorithm return span return parity correction vector sett odd compute  eulerian trail shortcut lemma lemma opt opt denotes optimum tour dynamic program linear program digraph vertex narrow hence dynamic program linear program compute narrow proposition dynamic program recursion subset narrow compute LP narrow chain recursion depth runtime dominate LP dynamic program recursively denote maximum runtime dynamic program recursive induction obtain runtime improve bound sub instance instance chosen polynomial constraint checked explicitly separation constraint reduces minimum computation hence polynomial algorithm fix remark explicit LP algorithm LP LP narrow