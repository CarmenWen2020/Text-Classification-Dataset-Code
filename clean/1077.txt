article graph logn vertex respectively previously bipartite graph crux data structure blossom creation dynamic ancestor algorithm simplify blossom involve arbitrary  article extension edmonds blossom algorithm factor bound previously bipartite graph min logn logn factor min logn logn denote sum constraint immediate application factor algorithm generalize shortest structure reference analog shortest conservative undirected graph version blossom structure factor structure logn negative shortest logn logn nonnegative bound slight improvement previously simply achieve initialization factor algorithm CCS concept theory computation graph algorithm analysis data structure analysis additional factor blossom constrain subgraph shortest conservative graph introduction article solves data structure achieve efficient algorithm extends defines graph vertex disjoint perfect vertex generally maximum cardinality cardinality exactly sum individual precede variant maximum version maximum maximum perfect maximum constraint perfect alternatively define minimum maximum perfect graph variant essentially equivalent algorithmic viewpoint definiteness article concentrate maximum perfect resource bound graph algorithm assume throughout article graph vertex notational simplicity assume achieve discard isolated vertex classic network optimization detailed discussion reference edmonds polynomial algorithm implementation edmonds algorithm increasingly logn logn edmonds algorithm generalization hungarian algorithm due kuhn bipartite graph fredman tarjan implement hungarian algorithm logn fibonacci heap affirmatively edmonds algorithm implement logn implies logn implementation optimal fredman tarjan dijkstra algorithm edmonds algorithm sort logn appropriate model computation algorithm asymptotic bound integer however remains edmonds algorithm theoretically attractive bound strongly polynomial related amount perform edmonds algorithm sensitivity analysis implementation logn  algorithm article version edmonds blossom algorithm bmatching factor generalize ordinary  subgraphs define undirected multigraph function factor subgraph vertex exactly undirected graph loop function perfect function vertex addition function maximum perfect bmatching similarly maximum factor maximum  factor bound bipartite graph min logn logn sum constraint factor min logn logn sum constraint blossom algorithm  thesis reference description algorithm pseudo polynomial bound bound achieve article algorithm ordinary plus reduction version article acm transaction algorithm vol article publication date june data structure extension factor prefer implementation algorithm avoid practical inefficiency illuminate blossom latter algorithm blossom structure exactly generalize shortest structure gabow sankowski analog shortest conservative undirected graph blossom augment shortest fix source conservative undirected graph discussion blossom proof previously min max formula maximum equation partial factor equation lastly algorithm blossom structure ordinary blossom unlike factor pendant blossom output generalize shortest structure logn negative conservative  timeO logn logn nonnegative bound slight improvement previously achieve simply initialization factor algorithm polynomial bound gabow sankowski modify achieve plus additional logn processing implementation algorithm edmonds plus nonnegative cubic minimum graph article organize concludes terminology assumption review edmonds algorithm defines blossom merge ingredient obtain bound seek specializes  merge solves algorithm factor algorithm appendix detail edmonds algorithm appendix detail factor appendix data structure compute alternate blossom alternate trail factor appendix efficient implementation expand edmonds algorithm gabow faster algorithm approach simpler suffices achieve overall bound appendix extension factor appendix generalize shortest structure reference exists algorithm blossom merge algorithm computes ancestor addition leaf conference version article algorithm extension succinctness data structure ancestor separately reference portion article independently implementation edmonds algorithm reader familiar edmonds algorithm skip review directly interested generalize version concentrate factor algorithm although lemma article conference preliminary version  merge algorithm article simplifies algorithm refine strategy sparse graph blossom merge algorithm algorithm computes ancestor addition leaf reference algorithm extension mention reference subsequent reference cole  approach operation achieve bound amortize acm transaction algorithm vol article publication date june gabow factor evolve conference achieve bound reduce article approach illuminate structure blossom avoid incur reduction terminology omit brace singleton denote interval notation integer sum notation function denotes logn denotes logarithm assume integer compute precompute precomputation graph denotes vertex vertex vertex subgraph ofG denotes exactly respectively endpoint loop  denotes vertex refer graph omit argument vertex fix graph vertex alternate vertex alternately unmatched alternate augment alternate distinct vertex augment along enlarge symmetric difference edmonds algorithm implementation summarizes edmonds algorithm implementation sketch algorithm detail implementation development latter reference review portion algorithm efficient implementation previously outstanding efficient blossom merge blossom throughout notation denotes possibility edmonds algorithm notion blossom data structure orient definition illustrate alternate vertex unless plus blossom edmonds algorithm contract blossom recursive definition definition graph distinguish blossom subgraph define vertex blossom graph contract zero vertex disjoint blossom vertex alternate vertex plus XX blossom blossom vertex refer vertex graph blossom vertex acm transaction algorithm vol article publication date june data structure extension factor blossom edmonds algorithm blossom subblossoms blossom sometimes refer vertex maximal blossom subblossoms blossom easily establish induction blossom vertex definition blossom vertex blossom vertex usually denote blossom unique vertex another vertex vertex blossom blossom accordingly blossom vertex vertex alternate blossom reverse along define definition blossom belong blossom designate plus XX unique alternate acm transaction algorithm vol article publication date june gabow suppose blossom precise vertex vertex vertex  unmatched recursively define concatenation subpaths odd reverse vertex otherwise blossom identical edmonds algorithm augment graph blossom contract corresponds augment graph contract blossom unmatched traverse augment ofG along blossom becomes blossom graph instance vertex becomes contains unmatched enters vertex contains subpath augment contract graph incident edmonds algorithm definiteness maximum perfect algorithm easily modify variant without loss generality assume perfect exists algorithm primal dual strategy edmonds formulation linear program review appendix repeatedly maximum  augments procedure augment successful augment augment augments along entire algorithm consists augment algorithm partition blossom vertex singleton blossom pseudocode augment detailed discussion assume graph perfect augment exists vertex denotes maximal blossom construct subgraph initialize blossom enlarge execute blossom expand reference addition linear program dual variable dual adjustment dual adjustment perform contains desire augment consists blossom precisely blossom contract vertex becomes blossom blossom odd intersect nontrivial instance traverse direction subpaths subpath disjoint subpaths subpath intersection inside blossom vertex blossom arbitrarily subpaths alternately disjoint acm transaction algorithm vol article publication date june data structure extension factor pseudocode edmonds algorithm distance outer inner possibility blossom vertex outer inner blossom contains node alternate incident  outer blossom incident inner blossom unique maximal blossom blossom solid descend outer discus discus role dual variable dual adjustment illustrate discussion suppose maximal blossom enlarges inner blossom outer blossom blossom simply vertex scan guaranteed blossom initialization contains outer blossom blossom blossom contract fundamental cycle blossom outer proof blossom closest fundamental cycle outer outer incident outer incident descend distinct outer previously inner blossom blossom inner vertex outer previously outer vertex remain outer acm transaction algorithm vol article publication date june gabow suppose contains blossom outer fori blossom outer blossom odd inner outer alternatively blossom later later sequence execute depends expand expand replaces inner blossom alternate blossom maximal blossom along remain subblossoms possibly none longer eligible remains alternate vertex inner outer others remain inner blossom previously descend inner outer status contains blossom expand replaces vertex blossom subblossoms subsequent expand outer vertex completes description construct vertex becomes outer remains outer contrast vertex alternate inner ultimately become outer blossom alternation vertex upper bound involve expand maximal blossom decrease terminates augment augment trace respective mention previously corresponds augment PG traverse blossom along augment  PG blossom remain blossom rematched graph augment algorithm halt vertex otherwise initialize blossom initialization retains blossom maximal blossom becomes blossom implementation edmonds algorithm choice augment  augment PG contract graph latter compute explicitly rematching role algorithm maintains linear program dual variable appendix tight dual variable satisfy linear program complementary slackness maximum consists entirely tight augment preserve complementary slackness guaranteed maximum dual adjustment modifies dual variable additional become tight correspond blossom expand dual adjustment involves candidate closest tight duals tight detail appendix blossom merge completes sketch edmonds algorithm task implement logn implement algorithm within bound contrast maximum cardinality initialization discard blossom  inner blossom acm transaction algorithm vol article publication date june data structure extension factor review define remain implementation blossom merge outer blossom tracked algorithm merge instance blossom inds identify outer vertex fundamental cycle union contract cycle suffices algorithm executes inds union universe logn incremental merge algorithm gabow tarjan improves bound linear processing associate expand data structure splitting gabow simpler algorithm suffices bound appendix blossom vertex merge data structure outer vertex expand algorithm  vertex blossom data structure compute augment ing compute blossom merge data structure expand update appendix detail data structure data structure gabow allows processing dual adjustment fibonacci heap contains candidate tightness mention previously heap minimum tight analogous fredman tarjan implementation dijkstra algorithm fibonacci heap per logn dual variable maintain per offset quantity reference leaf blossom implement blossom logn desire implement blossom precisely blossom merge define reference defines restrict component merge logn universe consists graph vertex empty model outer vertex vertex candidate blossom partition subset blossom online sequence operation blossom vertex blossom assumes operation merдe combine blossom blossom destroys blossom edдe assumes min edдe return minimum constraint currently distinct blossom sketch operation implement expand blossom outer blossom  blossom operation outer vertex  edдe operation outer vertex blossom edдe conference version splitting improve pettie thorup acm transaction algorithm vol article publication date june gabow  edдe  modify dual min edдe blossom become tight modification allows algorithm dual adjustment efficiently unknown edдe operation derive slack complementary slackness detail slack appendix concerned blossom merge refers graph blossom performs  construct blossom operation merge construct information structure blossom blossom data structure maintain outer algorithm relevant blossom merge blossom identical vertex merдe operation update information partition induced blossom blossom merge blossom refers vertex partition blossom merдe operation latter blossom edmonds algorithm merges relevant min edдe operation return mention fibonacci heap selects specifically entry maintains entry already contains entry contains entry update correspond decrease dual adjustment illustrate suppose consists furthermore entry contains edдe entry blossom correspond decrease perform algorithm blossom expand task implement sequence operation blossom vertex   min  logn bound min  min edдe vertex outer blossom expand creates outer vertex recall expansion blossom min edдe difficulty blossom merge illustrate blossom candidate min edдe blossom become irrelevant longer distinct blossom priority queue useless queue eventually delete queue deletion accomplish useful bound becomes logn indicates delete min operation  return min edдe blossom becomes irrelevant blossom  blossom merge incorporates topology graph  define blossom merge implement blossom edmonds algorithm blossom merge algorithm acm transaction algorithm vol article publication date june data structure extension factor goal maintain representation graph cannot avoid node define expand definition blossom correspond subtree TB subtrees partition vertex blossom outer vertex TB incident vertex inner incident TB consists vertex outer blossom respectively consists subpaths  subpath contains vertex vertex odd subpath entire  correspondence potential blossom execute maintain operation leaf leaf node node assume data structure pointer leaf  maintain algorithm executes blossom expand merge algorithm maintain partition outer blossom individual vertex inner blossom suppose enlarges unmatched inner blossom outer blossom vertex compute enlarge perform leaf leaf leaf finally leaf merge vertex blossom combine blossom fundamental cycle blossom ancestor blossom outer blossom consists subpaths merge outer blossom blossom inner blossom leaf vertex merge vertex blossom subgraph TA update lastly expand expand algorithm replaces inner blossom subblossoms along subblossoms definition TB odd outer blossom perform leaf vertex merge vertex correctness inner blossom equation subpaths contains  satisfies definition completes algorithm   iso compute linear allows outer vertex expand identify detail appendix acm transaction algorithm vol article publication date june gabow mention correspondence   allows potential blossom challenge simplification blossom merge assume edдe vertex ancestor int clearly blossom equivalent blossom ancestor replace accomplish reduction data structure dynamic ancestor specifically algorithm maintains operation consists dummy grows leaf operation operation nca return ancestor vertex summary implement edmonds algorithm construct leaf operation discovers  outer vertex performs nca ancestor executes blossom merge operation edдe edдe appropriate correspond future augment blossom expand performs appropriate  concludes min edдe operation assume operation return correspond assume neither previously return mention fibonacci heap candidate blossom algorithm correspond blossom perform unless corresponds augment blossom merge merдe operation execute blossom operation blossom return future min  definition operation estimate extra operation edmonds algorithm algorithm maintain incremental merge algorithm gabow tarjan  operation maintains partition blossom inner vertex linear dynamic nca algorithm reference leaf operation nca operation extra reduce task blossom merge define construct incrementally leaf operation wlog assume operation leaf computes depth vertex operation edдe merдe min edдe define blossom merge restriction argument edдe blossom operation assume edmonds algorithm appropriate leaf merдe operation multiset although become eligible blossom vertex notation assumes towards vertex denotes blossom currently assume  blossom perform  algorithm traverse repeatedly merge conference version article cole  approach dynamic nca operation addition bound amortize acm transaction algorithm vol article publication date june data structure extension factor define merge blossom blossom rank proposition max blossom blossom merge merдe operation blossom blossom edmonds algorithm blossom merge algorithm solves blossom merge logn principle algorithm data structure algorithm statement analysis feature essentially irrelevant algorithm role played inner vertex prior become outer contribute depth construct incrementally consequence algorithm merдe edдe operation strategy blossom notion rank define blossom rank define rank logn blossom rank recall blossom vertex notion algorithm data structure description data structure representation vertex depth blossom rank  perform constant logn operation fibonacci delete min logn  perform operation vertex belongs blossom logn merдe operation increase rank vertex blossom increase rank dynamically associate vertex future merge blossom guaranteed increase rank assign respectively  rank increase execution algorithm unique  define illustrate denote currently maximal blossom  andw respectively definition apply classify span classify span span classify accord relative blossom specifies unique   acm transaction algorithm vol article publication date june gabow associate blossom determines associate previously mention guarantee proposition future blossom rank algorithm progress currently maximal blossom instance algorithm instead examines reclassify accord illustrate currently maximal blossom similarly classify maximal blossom maximal blossom  classification perform hypothetical execution algorithm illustrates reclassify status algorithm parallel classification increase occurs execution edдe classify indicates reclassify acm transaction algorithm vol article publication date june data structure extension factor later edдe execute classify grown algorithm reclassify corresponds edдe parallel classification reclassify algorithm examines detects permanently discard blossom clearly irrelevant reclassify detail scenario execution parallel specify specifically blossom parameter classification algorithm blossom parameter blossom clearly guarantee increase blossom proposition parameter blossom proof   suppose contains imply max crucial accounting scheme limited precise recall vertex blossom subtree refer blossom vertex differs notion vertex instance recall merge blossom blossom edmonds algorithm blossom define stem consist ancestor ancestor exist proposition blossom contains stem remark proposition stem definition  blossom   stem stem stem illustrate stem contains stem shallower vertex ancestor stem stem stem proof  rearrange stem blossom algorithm rank maximal properly blossom rank vertex belongs logn rank maximal blossom ΣB logn achieve desire bound involves proposition blossom vertex stem logn within bound acm transaction algorithm vol article publication date june gabow data structure entire data structure motivation blossom logn designate packet logn packet consists classification parameter packet index motivation guarantee rank increase proposition allows packet individually packet implement  link allows packet concatenate header packet rank packet packet header blossom arbitrary sort packet currently contains header omit limit algorithm graph logn alternate organization blossom array logn pointer packet blossom additional loose consists classify belonging packet packet allows omit array pointer packet mention loose link maintain minimum packet loose fibonacci heap  blossom convenient lazy deletion operation merдe replaces blossom combine blossom entry delete insert entry min edдe operation perform fibonacci heap ind min minimum corresponds delete blossom entry delete delete min procedure eventually blossom return min edдe auxiliary array perform operation define collection associate index index accomplish timeO index associate auxiliary index nonempty allows gathering operation maintain packet  finally blossom bookkeeping item rank representation partition blossom data structure merge blossom merge operation merдe executes merge operation union construct blossom vertex merge operation ind blossom currently simplicity omit obvious detail associate bookkeeping ignore suppose merge algorithm ind union logn  reference clearly union within desire bound edmonds algorithm inds associate operation hence ignore bookkeeping algorithm algorithm blossom merge verify correctness desire bound logn notion packet spirit detail data structure reference various device approach achieve linear organization conference version article however approach uniform simpler acm transaction algorithm vol article publication date june data structure extension factor algorithm maintains invariant loose packet satisfies distinct blossom blossom contains guarantee blossom minimum another blossom proof guarantee minimum belongs loose packet guarantee  without minimum blossom useful  edдe fibonacci heap min blossom definition invariant min  logn blossom delete edдe algorithm edдe implement lazy fashion discard otherwise classify compute vertex rank loose update decrease iso amortize decrease creation merдe algorithm operation merдe blossom algorithm blossom merдe operation merдe algorithm analysis refer consist reclassify merдe packet rank loose loose prune eliminate redundancy ensure blossom operation blossom retain discard action preserve denote remain assign appropriate packet loose packet compute loose specifically loose update possibly decrease similarly loose remain packet subarray logn operation specifically individual promoter packet packet exist packet header examine individual spent packet packet compute insert loose empty algorithm achieves edдe execute algorithm classifies loose merge algorithm remove loose examines parameter packet acm transaction algorithm vol article publication date june gabow blossom parameter reclassify reclassify blossom parameter reclassify edдe execute algorithm classifies  loose various merges loose merge transfer loose packet packet contains packet achieve increase increase loose packet remain packet respectively merges increase merge rank rank packet discard operation packet increase increase discard rank packet correctness algorithm proposition packet assign actually exists invariant packet examine individually packet rank proposition blossom rank satisfies invariant  discard operation efficiency mention edдe merдe easily logn traverse packet header plus amount logn entire algorithm  account blossom via stem recall stem blossom proposition stem blossom important verify acm transaction algorithm vol article publication date june data structure extension factor accounting mechanism credit  involve loose motivation successive merges around cycle loose packet loose packet loose packet loose credit define credit account processing specifically credit maintain accord invariant loose credit credit lemma spent merges logn proof treat involve operation becomes remains quantity nondecreasing operation edдe loose merge involve rank packet remains packet merge edдe appropriate loose credit correspond suppose operation merдe blossom spent processing discard completely account suppose classification parameter definiteness blossom examine possibility subcase packet   proof definition  packet  merge combine  rank maximal unique tow  stem credit processing becomes clearly implies algorithm stem subcase loose credit remains packet credit processing suppose becomes loose definition former loose merge involve stem previous subcase possibility subcase loose credit processing becomes credit  subcase packet  stem rank blossom contains rank maximal currently maximal blossom stem implies blossom contains implies guarantee acm transaction algorithm vol article publication date june gabow  stem account processing merge addition credit becomes ensures merge furthermore future merge stem proof  future blossom rank blossom packet rank algorithm stem detail description algorithm progress advance reclassify rank maximal blossom another packet classification parameter merge loose merge enlarges definiteness blossom assume rank remains merge packet another merge  loose merge loose stem loose stem stem entry analyze algorithm min edдe edдe merдe conclude blossom merge algorithm achieves desire bound theorem blossom merge logn MATCHING generalization edmonds algorithm complication matchings variety blossom analogous ordinary goal algorithm ordinary involves minimize role blossom blossom impossible avoid algorithm hidden blossom generalize algorithm analysis eventually maximum timeO logn extends algorithm achieve strongly polynomial bound logn logn bound bound bipartite graph constraint function assigns nonnegative integer vertex bmatching define multigraph unlimited context graph unlimited unmatched specify partial vertex perfect vertex exactly unmodified refers perfect concern multigraph convention loop cycle subgraph regular loop parallel undirected graph cycle trail vertex contract subgraph loop contract vertex internal loop disappear contract subgraphs loop notation contraction graph derive repeatedly contract arbitrary acm transaction algorithm vol article publication date june data structure extension factor augment trail augment subgraph subgraph previously contract vertex denotes vertex respectively vertex belongs contract subgraph identify correspond incident contract vertex denote vertex distinct vertex subgraph preimage subgraph consist plus  subgraphs contraction vertex plus denotes vertex preimage respectively similarly denotes preimage respectively blossom blossom define blossom specify topology blossom update augment specialize definition mature blossom positive dual variable unlike ordinary contract blossom behave exactly vertex instance augment trail interchange unmatched along  trail enlarges vertex vertex remains augment achieve blossom ordinary contract blossom graph vertex augment contract blossom behave ordinary vertex blossom becomes mature behaves vertex vertex ordinary behaves ordinary blossom  positive contrast immature blossom blossom cannot positive define blossom topology subgraph contract behave vertex specialize notion mature blossom completeness version topological definition definition simpler defines blossom decomposition definition useful algorithmically LetG graph partial vertexv trail vertex trail alternate consecutive exactly trail consecutive instance loop alternate trail accord contains definition illustrate acm transaction algorithm vol article publication date june gabow blossom vertex definition blossom blossom subgraph recursively define alternate trail blossom graph derive contract blossom alternate trail occurrence preimage blossom loop uniformity extend notation denotes blossom trail denotes vertex vertex blossom vertex clearly vertex blossom denote blossom entire graph alternate trail blossom vertex definition essentially graph blossom alternate unique alternate trail minimal blossom contract graph unique alternate trail graph blossom vertex essentially parse graph blossom blossom decomposition blossom blossom decomposition blossom ordinary instance definition treat blossom algorithm instance blossom actually augment trail secondly definition allows algorithm blossom vertex ordinary vertex associate trail odd respectively trail alternate unless trail entire trail definition trail loop trivial trail trivial trail recursive definition trail easily definition omit trail define acm transaction algorithm vol article publication date june data structure extension factor blossom blossom blossom definition blossom mimic structure discover algorithm ordinary algorithm contract blossom discover definition graph vertex blossom definition algorithmic blossom graph derive contract zero vertex disjoint blossom trail vertex preimage blossom vertex consecutive alternate furthermore contains abbreviate respectively graph parse blossom blossom enlarge incident blossom enlarge incident blossom advantage definition blossom cycle trail algorithm blossom decompose cycle replace remains blossom overall graph suppose graph enlarge vertex graph blossom decomposition contract alternatively delay contraction definition delay contraction suppose instead enlarge loop graph remains blossom definition contract loop possibility contract loop disappears contraction blossom graph blossom definition ordinary definition equivalent ordinary blossom trail without blossom incident incident acm transaction algorithm vol article publication date june gabow definition blossom essentially equivalent difference simplest instead blossom vertex strictly lemma development algorithm algorithmic blossom blossom equivalent vertex vertex latter meaning instance blossom enlargement equivalent denote blossom involve recursive construction consists plus blossom define decomposition blossom proof induct quantity lemma blossom algorithmic blossom equivalent precisely blossom algorithmic blossom algorithmic blossom equivalent blossom proof assertion obvious assertion algorithmic blossom definition equivalent blossom induction corresponds directly definition algorithmic blossom possibility arbitrarily define vertex contract blossom blossom otherwise vertex arbitrarily chosen  subcases implies subcase alternate replace algorithmic blossom equivalent blossom contract trail consist andc algorithmic blossom motivates definition induct fail induction equivalent blossom desire blossom equivalent subcase minimal blossom replace contract blossom algorithmic blossom induction equivalent blossom otherwise contract vertex blossom algorithmic blossom induction equivalent blossom desire blossom equivalent  ifv contract blossom  subtrail ofc   subtrail replace contraction alternate trail algorithmic blossom equivalent blossom contract vertex algorithmic blossom equivalent subtrail incident enters vertex trail algorithmic blossom equivalent blossom desire blossom equivalent remain vertex  otherwise manner  subtrail  acm transaction algorithm vol article publication date june data structure extension factor leaf enters eventually exhaust desire blossom algorithmic blossom trail define previously exist algorithmic blossom ordinary define trail possibility blossom incident easy trail slightly consistent trail positive equation convention lemma trail exist algorithmic blossom proof overall argument induction refer definition possibility specify image desire trail enlarge specify traverse various blossom entire trail arbitrary occurrence partition trail unmatched trail specify equation convert desire trail contract blossom enlarge trail traverse correctly incident possibility arbitrarily exist trail blossom chosen trail alternate equation iff suppose definition alternate reverse desire trail traverse enlarge occurs enlarge trail vertex blossom blossom trail define blossom construct desire trail concatenation trail specify equation apply  determines apply equation concatenate trail alternate apply equation trail exists induction trail exists apply previous atomic vertex acm transaction algorithm vol article publication date june gabow however easy proof implies trail traverse trail possibly reverse direction trail blossom blossom previously mention blossom algorithm structure definition ordinary blossom furthermore cycle ing trail structure precisely  ing vertex exception atomic vertex vertex difficulty expand blossom expand blossom replace trail structure blossom allows augment trail algorithm enlarges generalization augment ordinary throughout subsection partial augment trail alternate trail augment replace algorithm augment trail blossom vertex multiset vertex define augment blossom AB correspond augment trail artificial vertex artificial implies parallel AB blossom vertex wherein blossom AB delete clearly alternate trail possibility ensure unmatched valid partial cardinality definition allows blossom properly augment trail suffices algorithm blossom AB algorithm augment augment blossom  trail augment  trail blossom blossom remains lemma blossom preserve rematching augment lemma graph partial blossom necessarily maximal vertex suppose trail rematched blossom subgraph vertex unless remark trail obviously identical lemma implies acm transaction algorithm vol article publication date june data structure extension factor rematching trail proof induction assume lemma blossom notation contains vertex vertex blossom blossom identical interior vertex furthermore vertex remain interior argument vertex assume portion rematched satisfies relevant definition relevant lemma suppose fix occurrence occurrence interior vertex vertex vertex subcase rematched rematched obviously creates blossom rematched lemma subcase contains exactly alternate correspond occurrence alternate alternate remain exactly rematched blossom rematched assume contract blossom inductive assumption blossom traverse along trail suppose inductive assertion rematched rematched incident blossom definition conclude definition satisfied acm transaction algorithm vol article publication date june gabow rematching subsequently rematching restores remain subgraph rematched incident rematched definition satisfied induction  incident constraint suppose contains inductive assertion rematched lemma suppose  trail rematching rematching claimed lemma rematched lemma illustrates rematching blossom blossom rematching vice versa mature blossom completeness blossom algorithm ordinary linear program duals positive blossom however complementary slackness blossom completely exactly incident principle review appendix incident definition maximal blossom ordinary blossom exactly incident irrelevant algorithm blossom assign positive detail blossom immediately absorbed blossom reader ahead unmatched unlimited blossom augment algorithm hide discussion motivates definition vertex define function decrease blossom mature perfect algorithm extend blossom mature dual adjustment positive lemma acm transaction algorithm vol article publication date june data structure extension factor transition augment blossom positive dual remain mature guaranteed lemma illustrate assume mature lemma blossom necessarily maximal mature rematched augment remains mature proof AB augment blossom AB vertex AB artificial AB contains exactly incident incident definition artificial mature unmatched augment  trail lemma rematched blossom mature contract graphG immediately augment maximal blossom immature discovery augment trail prevents blossom maturity immature blossom discard instance contract blossom incident complicates growth discard replace contraction graph contract blossom incident augment proceed algorithm discard repeatedly discard maximal blossom unless mature discard maximal blossom mature contract blossom immature maximal hidden essentially irrelevant algorithm algorithm algorithm differs ordinary important alternate outer blossom blossom blossom hide blossom expand involve acyclic terminology algorithm denotes graph blossom contract denotes denotes structure structure recall vertex blossom vertex contract blossom notation denotes vertex atomic blossom implies vertex blossom node inner unmatched otherwise outer refrain classify vertex blossom vertex outer blossom function inner outer trail  satisfies LP complementary slackness equality appendix tight notion identifies modify tight eligible outer outer blossom inner node acm transaction algorithm vol article publication date june gabow pseudocode algorithm convention denotes denotes unmatched exists related node descends denotes algorithm subsection clarify remark invariant algorithm analysis lastly execution subsection regard commentary formal proof correctness bound remark unlike ordinary inner vertex arbitrary possibility inner possibility arises inner vertex vertex already outer acm transaction algorithm vol article publication date june data structure extension factor expand blossom definition eligibility allows outer vertex outer vertex arbitrary unmatched alternate ordinary blossom equivalent atomic alternative allows blossom circuit loop inner loop outer tight loop loop blossom blossom contraction operation discard loop contraction creates outer blossom blossom absorbed blossom blossom occurs algorithm acm transaction algorithm vol article publication date june gabow algorithm expand motivates structure expand assumes entry assumption trail succinctness efficient implementation described subsection duals adjust assumption graph perfect guarantee duals progress blossom expand lemma discussion tight ignore algorithm outer inner procedure expand corresponds roughly expand ordinary purpose precede eliminate vertex cannot invariant invariant topology alternate node unmatched treat artificial vertex augment trail artificial atomic vertex blossom alternate node outer blossom maximal blossom vertex inner mature outer vertex unless  blossom maximal cycle detail inner node outer outer inner atomic outer blossom outer inner implies inner node outer equivalently alternate unmatched acm transaction algorithm vol article publication date june data structure extension factor maximal blossom algorithm inner incident immediately augment remain invariant dual variable duals review appendix tight contract blossom blossom mature blossom maximal triangular blossom inner incident node already outer unlike ordinary correspond illustrates possibility expand inner blossom leaf inner blossom mature suppose immature incident exist invalid alternate trail vertex inner blossom mature avoids complication blossom outer vertex suppose contract blossom blossom unmatched necessarily tight blossom illustrates outer blossom enlarge become mature illustrates another none blossom unmatched loop tight becomes tight augment blossom vertex lack algorithm repeatedly eventually lack another blossom blossom discover blossom lack augment discard abandon blossom newly blossom immature lack blossom illustrates algorithm creates blossom maximal blossom creates loop blossom blossom necessarily unmatched unmatched augment trail blossom expand blossom inner mature occurs blossom respectively blossom vertex blossom positive duals adjust augment unmatched longer becomes inner vertex dual adjustment expand generates recursive argument recursive augments blossom entire expand finally suppose blossom maximal blossom trail acm transaction algorithm vol article publication date june gabow initial expand issue recursive argument expand longer blossom blossom via blossom analysis analysis subsection invariant algorithm detail initialization termination lastly desire bound implementation detail dual variable proof invariant invariant preserve algorithm lemma treat blossom augment expand respectively lemma blossom expand assume augment correctly augment lemma treat detailed augment discard dual adjustment detail straightforward discus representative lemma preserve invariant proof verify blossom algorithm eligible outer blossom inner node mature vertex outer blossom tight preserve unchanged lemma blossom preserve invariant proof verify blossom outer node contract outer contract outer vacuous contract blossom valid blossom fundamental cycle outer blossom vertex blossom outer alternate unmatched precede ensures remain vertex blossom clearly desire blossom atomic satisfies definition blossom definition algorithm verify vertex cycle blossom eligible outer acm transaction algorithm vol article publication date june data structure extension factor alternate eligible  alternate contract blossom cycle verification concern vertex definition outer incident furthermore inner mature unique incident unique blossom eligible definition lemma invariant explicitly violate execution however invariant satisfied assume lemma augment discard preserve invariant proof rematching augment preserve lemma rematching along trail augment blossom unchanged vacuous augment empty rematching violate maximal blossom incident augment trail becomes maximal blossom immature empty violation temporary discard eliminates maximal blossom mature discard preserve blossom positive eliminate tight expand recall issue preserve vertex strategy invariant implies trail vertex precisely blossom subtrail induction algorithm contract  outer blossom formal analysis expand denote expand recall define blossom expand remove definition violate nonempty subtree descend unlike ordinary subtree exist remedy modify define execution expand trail define expand trail permissible alternation alternate node outer blossom arbitrary recursive invocation expand entry expand trail permissible alternation exit permissible alternation exit trail extension entry trail exit belongs expand execution recurse executes execution expand expand permissible alternation acm transaction algorithm vol article publication date june gabow remark expand implies descendant proof expand execution expand execution expand induction structure recursive execute observation implies expand satisfies exit entry expand initial expand execution expand exit permissible alternation lemma expand preserve invariant proof examine possibility execution expand satisfy preserve invariant recursive verify vertex verification execute alternate comment guard ensures atomic mature execute initial expand invocation expand argument switch invocation alternate atomic mature alternate atomic definition blossom mature definition definition maturity inspection definition alternate alternation implies blossom inner outer easily unchanged execute outer trivially invariant trivially immature execute easy valid blossom establish atomic contract blossom outer unmatched invocation expand outer permissible alternation outer easily previous execute execute  trail proof invocation expand traverse incident execute unmatched incident execute recall implies trail node recursive acyclic discard ensures remain invariant induction dual adjustment lemma corollary duals adjust acm transaction algorithm vol article publication date june data structure extension factor lemma duals adjust alternate node maximal blossom mature proof alternate node blossom mature plus observation prohibits mature outer blossom maximal blossom lemma maximal blossom mature duals adjust inner non blossom outer blossom immature outer blossom blossom prof lemma duals adjust vertex undefined implies exists immature implies clearly tight outer blossom eligible suppose inner outer eligible eligible blossom suppose outer tight unmatched tight eligible outer vertex blossom contrast ordinary duals adjust incident node inner outer possibility lemma corollary duals adjust incident node inner node outer node proof node inner outer claimed blossom outer claimed outer unmatched tight blossom inner claimed invariant preserve duals adjust unaffected adjustment recall dual adjustment appendix remain tight duals adjust alternation lemma incident remain tight corollary contract blossom remain tight definition dual adjustment preserve dual adjustment increase duals maximal blossom outer lemma implies blossom increase positive dual adjustment preserve invariant furthermore dual variable valid feasible linear program review appendix verify unmatched blossom subgraph exactly argument ordinary acm transaction algorithm vol article publication date june gabow termination correctness initialization ordinary algorithm progress augment trail modifies graph undo  creates node obviously outer outer blossom inner limited inner blossom limited blossom previous become inner blossom algorithm loop eventually halt algorithm halt perfect maximum min nontrivial component component trivial consists vertex loop theorem straightforward quantity upper bound contains vertex vertex component derivation alternate proof bound tight fails blossom expand duals cannot adjust remedy lemma fail incident vertex span blossom incident inner proof dual adjustment decrease inner blossom lower allows expand inner blossom assume unmatched lemma assume outer furthermore outer atomic span blossom blossom tight dual adjustment decrease vertex outer node duals adjust tight blossom contradiction fail inner lemma delete collection component outer blossom outer loop non vertex existence loop ensures vertex blossom lemma corollary vertex sum component lemma blossom mature non vertex perfectly non vertex upper bound tight algorithm execute arbitrary input graph halt maximum cardinality perfect exists algorithm maximum simply LP formulation maximum appendix argument ordinary summarize acm transaction algorithm vol article publication date june data structure extension factor primal LP satisfied perfect dual LP dual feasible dual adjustment enforces complementary slackness tightness inequality complementary slackness blossom positive mature complementary slackness guaranteed respectively conclude maximum algorithm algorithm alternate proof LP appendix formulation maximum ordinary algorithm  initialize information initialization specify partial dual function collection blossom requirement duals feasible tight blossom subgraph invariant simplest choice function vertex partial consist tight elsewhere function everywhere initialization handy vertex assign initial invariant vertex minimum initialization input graph perfect algorithm maximum cardinality maximum partial constraint appendix along maximum variant choice initialization various sensitivity analysis accomplish maximum ordinary dual variable efficiency analysis numerical computation algorithm organize around parameter maintain dual adjustment quantity compute dual adjustment algorithm appendix offset compute dual variable data structure adjust duals execute detail data structure dual blossom vertex currently outer node blossom decrease dual adjustment outer similarly blossom currently outer node become outer prior modulo equation compute acm transaction algorithm vol article publication date june gabow currently inner currently maximal inner blossom compute described appendix adjust duals algorithm execute fibonacci heap contains node blossom expand candidate execute node future specifically blossom becomes inner expand node expand insert plus node delete expansion blossom theorem node candidate blossom gabow algorithm future completeness appendix simpler algorithm logn suffices purpose algorithm valid pointer machine algorithm linear data structure blossom appendix expand compute instead various essentially precomputed appendix blossom implement blossom merge algorithm algorithm unchanged ordinary assume maintain correctly blossom incident inner vertex blossom handle seamlessly blossom merge algorithm alternatively easily handle outside algorithm tight modify definition ordinary inner blossom correspond trail bmatching acyclic modify trail maximal subtrail replace vertex modify definition inner blossom TB inner blossom vertex allows blossom incident handle correctly algorithm maintain essentially unchanged blossom expand suppose expand execute blossom vertex cannot mature maturity implies subtrail contradict execute outer vertex already remain vertex lea operation conclude algorithm achieves desire efficiency theorem maximum logn strongly polynomial algorithm extend algorithm strongly polynomial version previous approach bipartite network reduce  algorithm pseudocode facilitate specification explicitly compute quadratic nest blossom expand becomes inner expand acm transaction algorithm vol article publication date june data structure extension factor maximum cardinality maximum correspond optimal dual function initial execute algorithm straightforward combination previous algorithm completeness analysis correctness algorithm optimum actually exists immediately establish correctness efficiency analysis  perfect partial algorithm performs augmentation entire algorithm logn plus latter strictly dominates extend graphG  vertex max easy correspondence partial matchings perfect matchings wherein cardinality partial corresponds perfect loop furthermore maximum cardinality maximum corresponds maximum verify assertion suffices ofG loop weighs loop relation maximum reduce bipartite graph BG BG vertex constraint respectively loop ofG BG  BG optimum dual   andy exist define ong sum convention loop define dual function restrict optimum desire algorithm exists maximum BG BG recall implies exists obvious construction euler tour technique collection trail traverse trail traverse applies loop vertex  exactly incident ofv clearly desire BG apply complementary slackness definition dual function bipartite bmatching chap BG dual function optimum acm transaction algorithm vol article publication date june gabow factor structure dash structure iff BG equality recall sum convention furthermore equality BG mirror image define implies calculation remains valid loop function optimum duals restrict permissible initial algorithm recall discussion initialization algorithm BG algorithm minimum network specifically BG transportation optimum integral optimum dual function chap optimality equation precisely transportation assume trivial flip convert maximum minimum  solves transportation generally  logn logn obtain strongly polynomial bound theorem  timeO min logn logn  fundamental difference factor illustrate structure factor recall factor define arbitrary multigraphs unlike limited parallel parallel bmatching blossom enlarge incident parallel unmatched blossom parallel unmatched exist factor structure maximal another difference linear program dual variable assign blossom incident blossom acm transaction algorithm vol article publication date june data structure extension factor organization factor blossom algorithm analysis maximum factor logn extends algorithm achieve strongly polynomial bound logn logn bound bipartite graph terminology matchings whenever introduce duplicate definition instance constraint function partial factor terminology regard multigraphs contraction blossom define immature mature blossom blossom update augment blossom define definition notion blossom exit implicitly matchings definition  denote satisfies blossom vertex suppose maximal blossom blossom easy notion define definition blossom exists maximal blossom handy notation equation abbreviate similarly blossom define loop blossom blossom blossom arbitrarily chosen incident similarly blossom unmatched incident blossom construct define trail factor blossom trail traverse trail possibly reverse direction furthermore unless  maximal blossom blossom traverse blossom trail subtrail denote proof lemma blossom contains vertex alternative mature blossom complementary slackness dictate positive dual variable define mature blossom dual variable associate blossom incident review appendix blossom satisfy completeness blossom vertex mature furthermore acm transaction algorithm vol article publication date june gabow contrast algorithm creates immature blossom algorithm discard augment trail augment trail augment blossom augment define exactly bmatching blossom augment trail maximal remains blossom rematching lemma exhibit blossom extend lemma define rematched blossom denote augment trail discussion precede lemma consistency lemma prime denote blossom rematching rematched blossom lemma mature blossom exists unique satisfy remark lemma applies blossom algorithm mature lemma augment blossom remains mature blossom occurs proof uniquely define definition  implies augment mature definition augment blossom contains vertex definition maturity exactly trail trail possibly reverse direction suppose lemma rematched rematched remain possibility possibility alternate rematched blossom maximal definition augment blossom unmatched rematching augment mature blossom define algorithm assign positive dual variable blossom incident recall appendix consistent ordinary duals associate blossom blossom latter unique incident exist lemma augment maintains validity dual variable lemma lemma augment mature blossom maximal acm transaction algorithm vol article publication date june data structure extension factor pseudocode factor proof augment lemma definition substitute displayed equation transforms factor algorithm factor algorithm restriction blossom limited necessitates assign duals blossom incident introduces possibility tight simplifies algorithm unmatched symmetric similarly blossom linear program formulation algorithm algorithm dual adjustment latter differs ordinary merit detailed discussion algorithm notion define bmatching specifically contract graphG structure contraction acm transaction algorithm vol article publication date june gabow node outer inner label drawn eligible label unmatched denote blossom node definition illustrate define inner outer classification node node outer blossom otherwise inner exists blossom contrast outer blossom inner blossom possibility illustrate respectively eligibility define structure trail blossom eligible outer inner outer blossom inner blossom acm transaction algorithm vol article publication date june data structure extension factor dual adjustment factor algorithm statement definition algorithm identical dual adjustment recall terminology explain detail appendix function define dominate tight underrated respectively strictly dominate strictly underrated correspond respectively complementary slackness optimality dominate unmatched  positive duals extend finally underrated algorithm maintains duals satisfy requirement strictly dominate unmatched symmetrically strictly underrated algorithm minimum network absolute definition reflect possibility    ordinary reflect possibility eligible positive contribution organization clarify remark invariant formal proof correctness remark remark apply exception simplification blossom expand blossom cycle construct augment blossom outer blossom augment execute  blossom algorithm mature  outer blossom definition assumes expand simpler  blossom ofc mature ordinary blossom algorithm maintains blossom augment expand blossom unchanged blossom inner outer duals modify assumption graph factor guarantee duals progress discussion proof equation acm transaction algorithm vol article publication date june gabow factor algorithm invariant definition alternate node unchanged alternate atomic node blossom blossom maximal mature inner leaf unique blossom maximal cycle tight contract blossom  dominate unmatched underrated strictly underrated illustrates become underrated suppose dual adjustment assume strictly underrated exist incident outer ineligible dual adjustment decrease incident inner blossom belongs ineligible dual adjustment increase adjustment exemplify strictly underrated blossom tight underrated become tight dual adjustment increase another assume loop dual adjustment decrease vertex eligibility ineligible augment ineligible inner blossom blossom blossom tight blossom inner node unmatched cannot bmatching blossom cannot augment trail tight algorithm augment assume remains inner situation dual adjustment augment augment blossom blossom becomes unmatched blossom expand expand blossom outer node unlike expand preserve maximal contract blossom expand inner blossom strategy augment strictly underrated unmatched acm transaction algorithm vol article publication date june data structure extension factor become blossom expand expand becomes outer blossom dual adjustment return suppose blossom remains inner dual adjustment increase becomes strictly dominate topologically valid blossom augment destroyed subsequent dual adjustment tight however cannot forever eventually inner blossom expand dual adjustment increase blossom expand becomes unmatched outer blossom vertex dual adjustment decrease slack decrease eventually blossom analysis organization subsection prof invariant subsection prof correctness detail initialization termination subsection prof desire bound proof invariant invariant preserve algorithm discussion blossom augment expand treat blossom previous preserve initialize lemma preserve invariant proof blossom inner definition eligibility implies unique tight lemma blossom preserve invariant proof algorithm notation trigger blossom outer blossom verify satisfies definition outer verify blossom possibility outer unmatched incident eligibility implies unmatched blossom preserve atomic valid choice contract outer similarly inner unmatched valid outer blossom outer blossom finally cannot inner blossom definition eligibility cannot nca node blossom definition outer inner lemma expand preserve invariant proof vertex proof suppose contrary exactly incident incident neither alternative acm transaction algorithm vol article publication date june gabow conclude vertex incident preserve definition clearly becomes outer preserve alternate choice desire alternation alternation lemma augment preserve invariant proof recall augment valid augment blossom  blossom lemma augment equation remains preserve lemma dual adjustment preserve unless proof dual adjustment arbitrary blossom ordinary assume loop blossom quantity  dual adjustment limited maximal blossom clearly quantity assume loop possibility distinct blossom contributes iff define loop easy precisely outer outer blossom inner blossom inner outer blossom inner blossom define analysis helpful consult implies hence symmetric subcase suppose equation unmatched claimed suppose equation claimed subcase suppose equation claimed acm transaction algorithm vol article publication date june data structure extension factor suppose equation unmatched claimed node eligible ineligible possibility eligible exactly checked previously suppose ineligible subcase impossible outer eligible equation claimed subcase impossible equation unmatched claimed define slack nonnegative slack dual adjustment slack equation slack decrease iff eligible node assume assume otherwise lemma node eligible ineligible subcase ineligible dual adjustment increase slack clearly subcase eligible dual adjustment nonnegative slack slack slack decrease slack dual adjustment similarly slack slack decrease dual adjustment slack reconsider subcase correspond minimize becomes tight iteration similarly blossom become account dual adjustment blossom expand ordinary bmatching invariant preserve throughout algorithm termination correctness initialization algorithm loop exactly argument algorithm halt factor vertex maximum partial factor min disjoint vertex summation component theorem throughout denotes acm transaction algorithm vol article publication date june gabow derivation alternate proof min max relation proof equation upper bound partial factor proof satisfies exactly incident vertex vertex vertex component another vertex vertex accordingly correspond respectively equation loop clearly bound equation respectively component counting satisfies obviously implies equation equation valid upper bound upper bound equation tight proof fails blossom expand dual adjustment eligible inner blossom inner outer delete collection component exactly inner inner eligible exactly unmatched outer eligible component equation equation within hence equation equation tight upper bound partial factor equation component vertex equation fromc nodev eligible   blossom furthermore implies implies equation desire contains node collection blossom subtree node outer blossom blossom node node eligible outer blossom eligible claimed acm transaction algorithm vol article publication date june data structure extension factor subtree exists blossom component equation equivalent iff iff outer eligible iff outer equation possibility contains unique vertex equation equation atomic inner equation equation outer equation conclude upper bound tight algorithm execute arbitrary input graph halt partial factor maximum cardinality proof analysis fail algorithm halt equation cardinality maximum verify algorithm assume factor exists algorithm maximum verify algorithm factor remains verify LP optimality appendix complementary slackness unmatched discus primal inequality blossom correspond complementary slackness blossom inequality satisfies easy factor constraint imply arithmetic integrality equation complementary slackness tightness equation positive blossom satisfy equation tight blossom counting arithmetic equation blossom counting arithmetic equation conclude algorithm algorithm initialize partial factor collection blossom dual function satisfy invariant definition blossom mature blossom blossom cycle blossom positive blossom subgraph tight  dominate underrated unmatched respectively acm transaction algorithm vol article publication date june gabow simplest choice partial factor blossom function vertex  unmatched respectively initialization appropriate initialization arbitrary input graph algorithm maximum cardinality maximum factor partial factor constraint appendix efficiency analysis maximum factor logn analysis essentially identical difference  parameter simplest fix denotes  multigraph parallel possibly interpretation assume multiplicity sort decrease refers fix blossom chosen  assume preprocessing sort algorithm linear expand compute blossom data structure appendix blossom merge minor definition factor inner blossom traverse trail analogous bmatching define maximal subtrail replace vertex definition inner  TB trail actually vertex illustrate latter pas maintain minor difference occurs blossom outer remain vertex inner become outer subsequent expand blossom vertex blossom merge algorithm blossom unmatched modification justify equation becomes eligible dual adjustment decrease slack numerical blossom merge algorithm dual adjustment becomes tight argument depends becomes eligible remains ordinary formal proof factor eligible eligible avoids refer lemma handy appendix lemma becomes eligible remains leaf proof eligible remains eligible belongs clearly implies lemma  eligible outer blossom remains outer blossom enlarge blossom clearly remains eligible enters becomes acm transaction algorithm vol article publication date june data structure extension factor become outer blossom eligible previous applies inner blossom become outer blossom applies occurs expand vertex remains maximal blossom outer blossom applies inner blossom remains eligible apply finally suppose trail expand alternate alternation outer inner eligible previous applies theorem maximum factor logn related algorithm bound subgraphs function subgraph subgraph function satisfies convert subgraph factor graph graph vertex multiplicity loop multiplicity weighs define requirement function subgraphs correspond factor correspond subgraphs proof construct vertex exactly obviously  andw similarly clearly subgraph corollary maximum minimum subgraph logn minimum subgraph bound improves logn function nonnegative seek minimum chap proof achieve bound execute factor algorithm function maximization minimization distinct theorem desire bound minimum subgraphs nonnegative factor algorithm  function initial dual function blossom duals feasible define initial mod valid tight factor algorithm bound nonnegative finally suppose arbitrary graph minimum subgraph consists plus minimum subgraph max nonnegative function previous logn acm transaction algorithm vol article publication date june gabow strongly polynomial algorithm essentially reduction bipartite assume multigraph specify function parallel algorithm ensure disappear define graphG maximum cardinality maximum factor correspond optimal dual function remove partial factor initial execute factor algorithm analysis assume factor partial factor delete factor algorithm performs augmentation entire algorithm logn plus latter strictly dominates graphG extend graphG  vertex constraint multiplicity respectively max remain function maximum cardinality maximum factor corresponds maximum factor proof exactly bmatching maximum factor reduce bipartite graph BG BG vertex constraint multiplicity respectively loop multiplicity BG maximum factor BG optimum dual function define factor sum convention loop exists maximum factor proof apply euler tour technique euler tour trail loop define dual function apply complementary slackness definition dual function bipartite factor chap factor BG dual function optimum iff BG ofG loop BG mirror image define suppose BG unmatched implies similarly BG function optimum duals factor non bipartite graph define clearly valid nonexistent delete optimum unmatched acm transaction algorithm vol article publication date june data structure extension factor conclude restrict along permissible initial factor algorithm conclusion algorithm BG capacitate transportation optimum integral optimum dual function chap  algorithm reduces capacitate transportation uncapacitated reduction modifies graph easy optimum dual function modify graph optimum dual graph alternatively optimum dual function shortest computation  solves capacitate transportation generally capacitate  logn logn obtain strongly polynomial bound theorem maximum factor min logn logn recall vertex cardinality subgraph odd vertex function minimum proceed negative define graph enlarge loop vertex loop define constraint function minimum factor minimum augment loop satisfy constraint exactly proof minimum minimum factor loop delete inequality wlog consists vertex oft cycle assume cycle contains negative vertex strict inequality terminal furthermore parity hence loop vertex factor conclude algorithm define negative seek maximum factor initialize algorithm consist loop vertex furthermore blossom initialization valid loop tight ofG underrated dominate execute factor algorithm factor algorithm performs logn although graph loop loop vertex negative terminal theorem minimum  timeO logn nonnegative iso logn terminal iso min logn shortest shortest undirected graph conservative function negative cycle nonnegative interested source shortest source vertex shortest vertex blossom generalize acm transaction algorithm vol article publication date june gabow shortest algorithm graph distance  dual loop blossom arbitrary blossom tight blossom subgraph shortest algorithm preprocesses graph quickly return shortest vertex algorithm function slight perturbation conservative function algorithm succinct representation shortest source reader familiar generalize shortest gsp structure introduce gabow sankowski verifies representation precisely structure extends algorithm arbitrary conservative bound entire algorithm logn bound shortest vertex precise bound negative illustrates discussion conservative graph distance label vertex gsp representation arrow vertex shortest direction detail algorithm construct gsp representation factor graph optimum factor resembles gsp representation optimum factor illustrates algorithm algorithm factor algorithm structure handle shortest query specifically vertex shortest compose trail query algorithm proportional algorithm acm transaction algorithm vol article publication date june data structure extension factor accomplishes cycle graph positive criterion algorithm consists preprocessing construct query algorithm return shortest preprocessing define negative graph loop vertex constraint function execute factor algorithm maximum factor correspond duals graph enlarge vertex constraint perform factor algorithm initialize duals halt remains duals blossom structure dual function query algorithm vertex return shortest return quantity shortest distance consist plus blossom trail blossom precede return trail consist loop delete analysis algorithm arbitrary conservative assume return algorithm consists loop assumption factor algorithm correspond blossom structure available assumption cycle ofG positive proposition contains vertex node outer node blossom blossom maximal proof inner blossom inner loop contains vertex outer node non node outer consists loop blossom maximal blossom loop analyze query algorithm fix query vertex definition alternate trail alternately loop vertex vertex trail subtrail subtrail loop discard shortest define graph enlarge vertex satisfies invariant factor algorithm hypothetical algorithm hypothetical executes blossom augments tight eligible outer node augment trail augment weighs loop weigh  construction  maximum factor negative distance recall conservative positive cycle shortest acm transaction algorithm vol article publication date june gabow verify query algorithm return shortest distance proposition actually arbitrary augment trail factor algorithm generalize edmonds algorithm notational simplicity algorithm proposition augmentation hypothetical algorithm proof augment trail tight net contribution alternate interior vertex lemma net contribution blossom maximal AZ contribution AZ AZ alternate trail clearly implies net contribution desire consists loop maximal notation algorithm AZ alternate trail desire maximal recall definition trail exactly characterization applies loop weigh augment factor optimum factor weighs query algorithm formula   augment  weighs weighs desire shortest loop blossom proof blossom atomic alternate contradicts invariant implies loop blossom deduce tight finally easily specify blossom definition traverse blossom along traverse portion blossom  along  along route traverse recursively shortest vertex around cycle involves traverse backwards violate description generalize shortest mention structure succinct representation shortest fix source sketch corresponds gsp structure representation amount structure algorithm loop remove simplest positive shortest proof nonnegative satisfies implies blossom contains unique neither  shortest shortest leaf  along previously away discard blossom discard loop blossom shortest acm transaction algorithm vol article publication date june data structure extension factor representation consists overall structure node contract blossom collectively vertex structure blossom collection cycle correspond definition blossom blossom blossom pointer shortest described illustrate  blossom loop blossom define shortest gsp structure gabow sankowski consists overall node nest cycle pointer blossom reference vertex correspondence addition gsp structure numeric label validity guarantee structure query algorithm shortest guarantee graph conservative label terminology recall ofG dominate tight loop tight furthermore equality define equality representation equality loop relation satisfied label gsp structure wherein label vertex label node label clearly correspond algorithm numeric label arbitrary conservative extend representation arbitrary conservative perturb eliminate zero cycle twice representation exists arbitrary conservative accomplish symbolic execution algorithm detail appendix goal efficient algorithm integral detail preserve efficiency integrality  conservative integral execute algorithm integral specifically function cycle shortest shortest addition execute algorithm clearly algorithm shortest query however  optimum dual function numerical label previously mention correctness representation verify linear another transform duals algorithm transform duals maintain algorithm blossom structure terminology duals correspond blossom structure define function blossom blossom uniquely defines dual function via relation blossom convention maximal blossom acm transaction algorithm vol article publication date june gabow witness blossom blossom tight witness blossom witness blossom algorithm witness proof loop assume contains node node blossom proposition consists loop node node collectively loop blossom claimed witness algorithm duals denote desire transform duals construct extra dual adjustment multiple dual adjustment vertex outer dual adjustment convenience denote adjust duals algorithm shortest define transform duals vertex blossom witness transform dual function correspond transform duals easily construct linear lemma function valid optimum duals specifically satisfy invariant unmodified function factor blossom algorithm proof denote modify function algorithm loop recall loop recall query algorithm blossom loop witness choice equation uniquely define interval contains unique multiple nonnegative instance consists contributes remain remain blossom acm transaction algorithm vol article publication date june data structure extension factor inequality maximal clearly implies finally loop desire conclusion proof tight multiple tight tight cannot dominate duals underrated minimal blossom similarly implies blossom blossom proof loop clearly  witness blossom desire blossom blossom minimal blossom blossom clearly blossom summary algorithm executes algorithm transforms duals blossom structure consist loop query algorithm representation bound regard efficiency analysis applies algorithm version execution factor algorithm logn dominates construct gsp structure query algorithm shortest vertex compute proportional data structure appendix precise estimate negative conservative function acyclic magnitude initialize dual function blossom  factor algorithm  logn assume dominates acm transaction algorithm vol article publication date june gabow theorem generalize shortest structure shortest  factor algorithm structure construct timeO logn generally negative logn bound gabow sankowski bound increase negative graph negative algorithm dijkstra algorithm negative dependence negative conservative graph  shortest logn vertex incident negative contrast bellman ford algorithm dependence achieve bound model digraph undirected bipartite graph vertex vertex initialization tow magnitude negative initial consists negative representation shortest construct gsp structure exactly shortest  dual adjustment edmonds algorithm dual adjustment review linear program perfect variable function indicates linear program maximum sum convention maximize dual LP function define denotes denotes minimize tight equality constraint algorithm maintains complementary slackness tight addition blossom subgraph tight blossom rematched easy dual adjustment maintains acm transaction algorithm vol article publication date june data structure extension factor dual adjustment edmonds algorithm DETAILS MATCHING factor ALGORITHMS primal dual LPs generalization ordinary maximize minimize similarly complementary slackness essentially unchanged tight refine complementary slackness primal LP constraint vertex primal constraint blossom redundant variable blossom assume odd complementary slackness complementary slackness rewrite equation dual adjustment ordinary extend definition  loop trigger blossom ordinary numerical quantity algorithm integer precisely assume integral assume initial integral initial integral plus furthermore initial integral assumption initialization  initialization strongly polynomial algorithm BG transportation integral equation integral function preserve optimality equation acm transaction algorithm vol article publication date june gabow dual adjustment allows initialization throughout algorithm equation assume dual adjustment examine suffices integer clearly integer vertex integral integral completes proof tight equation specifically integrality implies vertex vertex tight vertexv   vertex outer decrease initialization implies desire magnitude compute algorithm bound letw magnitude harm assume initial magnitude dual adjustment quantity entire algorithm clearly implies magnitude algorithm weighs proof tight blossom positive mature odd remain requirement equation dual objective function dual adjustment decrease dual objective algorithm dual objective LP formulation objective function entire algorithm dual objective decrease initial dual objective clearly generally equation contribute dual objective contribute objective maximum claimed acm transaction algorithm vol article publication date june data structure extension factor ordinary version LPs minor modification correspondingly minor modification algorithm matchings illustrate maximum cardinality maximum define convenient treat maximum constraint contains exactly primal LP relaxes vertex constraint cardinality constraint dual variable cardinality constraint dual constraint nonnegativity constraint additional complementary slackness constraint initialize algorithm  maximum algorithm halt increase maximum cardinality maximum fails optimal LP vertex exists implies throughout algorithm vertex minimum decrease solves LP dual constraint decrease balance LP conclude algorithm prof LP formulation LPs factor incorporate limit blossom former convenient treat separately variable maximize dual LP function define minimize algorithm nonzero mature blossom notation shorthand dominate tight underrated respectively strictly dominate strictly underrated refer respectively complementary slackness optimality eliminate acm transaction algorithm vol article publication date june gabow underrated dominate implication  complementary slackness equality dual constraint implication  complementary slackness equality primal constraint compute algorithm analyze wit argument algorithm integer bound magnitude proof additional remark account function equation dual objective function rewrite proof recall  function define slack equation analog formula algorithm maintains complementary slackness blossom positive verify equation substitute expression LP dual objective desire examine LP dual objective verify augment lemma furthermore augment tight  algorithm extends variant maximum factor illustrate maximum cardinality maximum partial factor LP modify exactly modify algorithm definition LP variable exactly difference analysis complementary slackness quantity algorithm equivalent computing PATHS data structure blossom efficient computation  ordinary trail factor specifically compute proportional ordinary blossom laminar representation maximal blossom correspond corresponds leaf correspond interior node subblossoms cycle define blossom recall definition contract vertex plus XX correspond cycle traverse reverse XX proof leaf interior node blossom subblossoms interior node data structure component node vertex node doubly link sibling acm transaction algorithm vol article publication date june data structure extension factor recursive routine compute link ofG sibling node sibling vertex incident exists finally marked data structure algorithm sibling contract interior node link correspond vertex neither link vertex ancestor incident ancestor exist application data structure mainly discus compute application others detail application later construct necessarily global recursive invocation relevant navigates blossom recursive descend arbitrary arbitrary invocation clearly desire bound correctness induction clearly denote blossom sibling recursive contract blossom recursive induction remainder consists recursive induction completes correctness proof routine implementation edmonds algorithm augment executes entire augment update unmatched status inner blossom execute bucket sort described definition marked sibling subsequent expand descendant acm transaction algorithm vol article publication date june gabow recursive routine compute suppose expand processing described sibling traverse subblossoms replace corresponds marked link subblossoms longer finally node discard become procedure later expand blossom expand descendant expand correspond sibling appropriately marked processing expand described definition outer blossom odd identify marked link additionally leaf descend outer vertex merge factor data structure ordinary difference vertex additional pointer unmatched pointer pointer pointer define minimal blossom pointer correspond pointer definition pointer easily maintain augment wherein forth vertex  data structure minor minimal blossom loop leaf vertex bound interior node increase remains sibling node occurs twice refer refers denotes recursive routine compute trail parameter invocation arrives traverse issue acm transaction algorithm vol article publication date june data structure extension factor parameter mimic arrival initial algorithm implement pointer proof correctness handle correctly correctly rewrite directly corresponds rewrite finally discussion loop blossom routine modification augment augment trail traverse argument argument construct eliminate maximal  recall precede theorem easily bucket sort expand  data structure handle expand illustrate difficulty ordinary vertex define slack slack unmatched outer node tov ifv slack decrease outer node slack dual adjustment automatically decrease slack slack becomes zero perform inner blossom become inner slack becomes zero blossom later expand blossom expand fashion oscillate become eligible ineligible potential nontrivial complication outer node tight outer node overview applies factor tight algorithm applies ordinary extend algorithm factor data structure laminar structure blossom blossom previous corresponds maximal blossom blossom maximal blossom subtree addition blossom recall rank node rank clearly rank descendant node data structure node furthermore node component blossom component fails leaf component slight variant reference acm transaction algorithm vol article publication date june gabow denotes contract graph algorithm consists currently maximal blossom belonging blossom denotes vertex currently task data structure slack node define identify node blossom augment compute recall definition data structure numerical quantity subsection sum dual adjustment quantity outer vertex quantity global fibonacci heap entry candidate blossom expand entry correspond execute compute  vertex auxiliary quantity del expand blossom convert define quantity denote dual function algorithm quantity node label quantity del ancestor vertex del dual adjustment properly inner blossom del del inner node denotes  vertex become inner node compute identify pointer node described candidate outer node fibonacci heap algorithm  blossom fibonacci heap FB node FB component node slack unmatched slack blossom node FB data structure handle  uniformity assume handle blossom fibonacci heap node dwell reader obvious adjustment  return data structure explicitly slack dual adjustment instead  version related quantity whenever slack unmatched outer del prior become outer movement data structure quantity slack min outer vertex outer expression data structure minimize slack acm transaction algorithm vol article publication date june data structure extension factor minimize update outer node slack slack slack del node FB FB min slack slack unmatched ind min FB del ind min FB del vertex node entry global heap maintain ind min FB del vertexv node unique ancestor currently node heap FB node equation maintain FB node  equation node equation blossom specifically node heap  algorithm outer node unmatched examine slack decrease appropriate trigger decrease node  trigger decrease currently blossom node delete becomes inner outer  becomes inner becomes outer redefine recall alternative equation becomes inner later becomes outer blossom redefine alternative equation expand inner blossom node become vertex update data structure exists delete node FB initialize heap FA modify appropriately atomic component node FA update node assign FA min slack heap FB update heap FB insert longer node entry inner node outer node observation correctness expand procedure FB desire heap component minus easy entire logn becomes maximal logn account deletion FB component vertex reset node examine slack node traverse subtree blossom traversal proportional leaf vertexv component logn logn vertex finally importantly decrease amortize  factor aspect factor tight acm transaction algorithm vol article publication date june gabow lemma blossom proof implies implies hence iff hypothesis induction implies possibility del del equation trivial immediately lemma analog previous definition slack slack min eligible recall lemma terminology lemma define outline data structure slack maintain invariant equation quantity slack define define FB exactly equation invariant implies blossom slack ind min FB del data structure dual adjustment definition slack involves quantity IU IV account contribution slack IU IV define IU IV fix quantity relation vertex currently IV σdel becomes eligible IU IU IV compute becomes eligible thereafter equation del define slack min IU IV eligible relation imply desire invariant equation slack equation implies eligible IU IV del apply definition slack equation desire acm transaction algorithm vol article publication date june data structure extension factor remains specify IV IU contribution  define IV   del del discus definition terminology recall algorithm computes IV becomes eligible IV define vertex however verify equation whenever distinguish possibility define compute IV useful later equation establish invariant equation define useful iff becomes eligible clearly useful subset define definition analyze separately define belongs useful equation satisfied useful compute equation deduce IV relation whenever del dual adjustment increase equation contribution equation del del assume define useful unmatched lemma useful establish equation useful contribution equation σdel implies contribution equation IV claimed assume define useful useful blossom contribution del del atomic contribution zero contribution equation contribution del del del  σdel IV  independent define IV define wlog inner remain irrelevant data structure useful becomes node becomes inner precede argument useful becomes outer summary useful belongs contribution lemma contribution del  σdel IV  acm transaction algorithm vol article publication date june gabow precursor structure contribution contribution del del del del del σdel IV del del remark simplification tight specifically maximal blossom tight tight becomes maximal becomes eligible instance suppose structure inner blossom expand mention strictly underrated dual adjustment strictly underrated subsequent expansion eligible strictly underrated contribution define IU del inner  del inner outer outer atomic del del outer blossom define verify correctness becomes eligible precede definition equation thereafter remains eligible lemma equation equation dual adjustment equation dual adjustment inner blossom eligible atomic  transaction algorithm vol article publication date june data structure extension factor  del del IU del inner blossom contribution previous contribution del del contribution del del del  del IU  del possibility becomes eligible becomes outer node blossom outer blossom recall redefine plus hence interested equation outer contribution equation definition atomic blossom contribution IU outer outer blossom atomic eligible define vertex possibility non outer blossom blossom outer inner blossom inner vertex already eligible treat expand becomes maximal outer blossom expand analysis suppose outer blossom contribution equation IU remain possibility blossom contribution equation del del becomes outer blossom inner absorbed interval contribution decrease expression valid possibility expression vanishes immediately becomes outer combine expression equation del del del del IU del del concludes analysis IU acm transaction algorithm vol article publication date june gabow algorithm obvious examine examine data structure IU IV quantity compute easy latter per timing estimate affected shortest PATHS representation   appendix prof shortest representation exists arbitrary  conservative function specifically execute factor algorithm perturbation function consists loop blossom structure dual function valid  analysis algorithm suffices construct gsp representation conceptually increase unknown positive quantity factor algorithm compute numeric quantity expression quantity easily numeric manipulate arithmetic operation dual adjustment factor symbolic algorithm contrast version factor actual numeric numeric algorithm maintain relevant relevant correspond numeric algorithm wherein numeric quantity actual numeric maintain invariant relevant numeric execution performs sequence blossom expand dual adjustment symbolic algorithm symbolic algorithm quantity lexicographic iff quantity define otherwise proposition implies weak inequality proof weak inequality assume relation examine possibility dual adjustment slack define symbolic symbolic algorithm slack minimum comparison outcome adjusts min slack identify symbolic algorithm chosen slack relevant numeric algorithm precede proposition relevant numeric execution algorithm symbolic relevant proceed eligible slack decrease blossom expand execute assume broken algorithm apply dual adjustment relevant execution construct factor consists loop implies cycle execution halt consist loop desire