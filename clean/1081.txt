locally differentially private algorithm hitter achieves optimal error function  parameter prior obtain error rate optimally user domain privacy parameter sub optimally failure probability strengthen exist bound error incorporate failure probability upper bound tight respect parameter bound understand structure locally private protocol develop obtain beyond hitter advanced  local model privacy user degrades proportionally instead linearly central model privacy yield improve  guarantee bound via pack argument central model building transformation  smith generic transformation non interactive approximate private local protocol pure private local protocol contrast central model cannot obtain accurate algorithm pure approximate local privacy CCS concept theory computation sketch sample theory database privacy security additional differential privacy hitter local model introduction hitter user input item domain goal identify hitter domain user input hitter local model differential privacy LDP user randomize data locally differentially private report untrusted server aggregate user sends server randomize message leak information input user hitter local differential privacy addition intrinsic LDP algorithm  important subroutine median estimation convex optimization cluster hitter algorithm LDP already implement organization valuable information user privacy guarantee user prominent google chrome browser iOS local hitter algorithm widespread industrial application differential privacy date define precisely user user input item denote refer distribute database location locally user domain multiplicity user input goal identify estimate multiplicity specifically sequence message message useri goal report proportional maximum output within multiplicity actually contains frequency estimate parameter refer error protocol multiplicity protocol refer probability protocol successfully achieve objective failure probability denote privacy requirement user distribution message significantly affected input user formally definition algorithm satisfies differential privacy input output hitter LDP becomes harder choice LDP hitter focus construct protocol achieve combine recent locally private hitter algorithm reference recent non private algorithm reference efficient LDP intuition cannot indeed user input outcome distribution protocol remains approximately user input data longer acm transaction algorithm vol article publication date october hitter structure local privacy comparison previous performance metric  smith server user server memory user memory communication user public randomness user error notation hide logarithmic factor hitter algorithm achieve optimal error function user domain privacy parameter failure probability prior ofthe obtain error sub optimal dependence failure probability runtime linear realistic application reasonable url domain summarizes comparison previous algorithm remark focus achieve optimal error algorithm allows server obtain error exchange requirement specifically memory usage output improve bound error understanding local model strengthen bound error reference reference incorporate failure probability upper bound tight bound conceptually understanding local privacy model obtain privacy guarantee locally private protocol privacy guarantee translate accurate algorithm bound achievable error advanced  important differential privacy privacy recall differential privacy ensures individual significant outcome distribution computation guarantee individual privacy guarantee degrades gracefully specifically algorithm satisfies individual guarantee differential privacy satisfies  privacy individual local model privacy degrades privacy parameter factor unlike centralize model observation allows improve bound max information dependence algorithm output randomly chosen input locally private protocol privacy however mixed blessing bound pack argument pure private local algorithm user runtime memory reference improve assumes random access public randomness assume protocol implement without public randomness attain essentially performance acm transaction algorithm vol article publication date october pure approximate LDP another important differential privacy degrades gracefully composition allows algorithm access input database differentially private mechanism subroutine argue overall privacy guarantee pure privacy privacy parameter deteriorates factor however approximate privacy fold composition degrades privacy parameter factor reference non interactive local model enjoy approximate version composition locally private algorithm satisfy pure privacy enjoy composition guarantee approximate privacy motivate observation proceed local model approximate privacy actually useful pure privacy noninteractive protocol specifically building transformation  smith generic transformation non interactive approximate private local protocol  local protocol utility guarantee formal proof approximate local privacy cannot enable accurate analysis pure local privacy bound hitter pure LDP advanced  bound extends approximate LDP via generic transformation addition analysis bound extension argument reference reference PRELIMINARIES differential privacy notation database collection data universe database entry throughout article notation hide logarithmic factor user domain database entry contains information pertain individual algorithm operating database preserve differential privacy database significantly output distribution algorithm intuitively individual information whatever individual data arbitrarily modify without data definition differential privacy randomize algorithm differentially private datasets probability randomness local differential privacy local model individual private information locally sends differentially private report untrusted server aggregate report definition local differential privacy algorithm non interactive local protocol algorithm aggregator local  algorithm satisfies local differential privacy satisfies differential privacy interactive local protocol local  chosen adaptively throughout execution function previously obtain report user focus non interactive protocol acm transaction algorithm vol article publication date october hitter structure local privacy  protocol optimal error database distribute across user interested estimate frequency multiplicity specifically guarantee LDP definition distribute database hitter error failure probability goal output est estimate est probability est est previous algorithm hitter reduction simpler task construct frequency oracle definition distribute database frequency oracle error failure probability algorithm probability output data structure capable approximate error construct frequency oracle easy task hitter hitter algorithm frequency oracle specifically est hitter estimate frequency est otherwise moreover ignore runtime identical query frequency oracle domain hitter literature hitter frequency oracle LDP focus goal minimize error however  smith LDP algorithm task error bound tight construction frequency oracle error reduction transform frequency oracle hitter algorithm however reduction suboptimal dependency error failure probability bound informative privacy preserve reduction hitter frequency oracle achieve error optimal parameter reduction private variant recent non private algorithm reference construction frequency oracle reference exist technique informal survey technique reference highlight construction intuitive overview generally oversimplify hide difficulty arise actual analysis reduction sub optimal dependence failure probability assume frequency oracle protocol error distribute database user input frequency oracle identify acm transaction algorithm vol article publication date october potential hitter specifically identify frequency outline approach reference publicly random hash function mapping domain identify hitter denote hitter database denote assume input mapped hash assume indeed attempt identify coordinate define assume alphabet coordinate denote mth database domain correspond user public user compute locally hitter  however assume input mapped recall frequency oracle error hence accurately strategy identify hitter hash construct potential hitter mth frequent discussion strategy identifies  recall assume hash function collision input analysis withstand collision roughly aim error anyway nevertheless strategy succeed probability exponentially unacceptable hence apply strategy failure probability amplify probability repetition unfortunately repetition error increase factor apply multiple private computation dataset degrades privacy specifically obtain theorem distribute database exists LDP algorithm return est probability est min est server processing memory sizeO timeO user  runtime memory communication non private reduction recoverable code recall reduction hash function hash function fail  meaning input collide cannot identify suppose instead modify reduction introduce independent hash function  upside exponentially probability hitter hash function fail hopefully detect instead apply scheme apply error encode constant rate acm transaction algorithm vol article publication date october hitter structure local privacy constant relative distance indeed recover however aside becomes unclear concatenate coordinate construct specifically construction throughout coordinate concatenate identify hash function independent across strategy detail propose overcome issue fix hitter coordinate fail frequency comparison meaning significantly hence coordinate hash identify construct guarantee hitter coordinate occurrence concatenate reconstruct reference related compress recoverable code recall standard error code decoder receives noisy codeword recovers noiseless codeword agrees noisy codeword coordinate assume codeword exists error code protects transmission adversarial corruption codeword recoverable code protects transmission uncertainty corruption instead possibly corrupt coordinate decoder recoverable code receives LM sequence contains mth noisy codeword requirement decoder recover codewords mth formally definition recoverable code mapping enc dec enc dec XL LM satisfy enc dec LM guarantee hitter coordinate therefore principle recoverable code recover hitter formulation suffices item however currently explicit code achieve parameter setting construction overcome issue construct relaxed variant recoverable code relaxed variant suffices  reduction intuitively relaxed code utilizes randomness portion outcome hash function formally definition unique recoverable code mapping enc dec enc dec XL remark presentation oversimplify analysis reference hash function fail coordinate otherwise fail hash function fail acm transaction algorithm vol article publication date october LM assume satisfy enc dec LM theorem exist constant constant fix choice function construction unique recoverable code enc dec XL furthermore mapping enc enc enc enc pre processing algorithm computes description function enc dec poly evaluate enc linear addition invocation hash function evaluate dec LM linear polynomial completeness proof appendix construct private version algorithm reference achieves optimal error parameter remark focus reference runtime non private literature meaning minimal achievable error unclear achieve zero error trivial runtime memory contribution construct LDP hitter protocol achieves optimal error parameter private algorithm obtain non private algorithm reference modification reference appropriately parameter unique  code strategy outline identifies extra frequency identify parameter algorithm hash input  bucket informally increase significantly relative bucket becomes extra respect bucket allows reference focus identify extra within bucket separately LDP however reduction error cannot apply directly unclear apply hash function server cannot apply user input user cannot reveal bucket server compromise privacy overcome issue append outcome hash function encode unique recoverable code allows identify directly database obtain theorem theorem distribute database exists LDP algorithm return est probability est min est pre processing algorithm deterministic poly universal constant otherwise algorithm poly vega runtime ignore issue simplicity acm transaction algorithm vol article publication date october hitter structure local privacy server processing memory user runtime memory communication additional preliminary additional preliminary enable construction frequency oracle recall frequency oracle protocol communicate user output data structure capable approximate frequency domain protocol frequency oracle reference hashtogram subroutine theorem algorithm hashtogram database distribute across user exists LDP algorithm fix domain query algorithm probability algorithm query satisfy min server processing memory per query plus instantiation user runtime memory communication notation hide logarithmic factor union bound algorithm hashtogram fix ofw query error min min factor unnecessary regime allows slightly runtime memory simplify analysis algorithm hashtogram domain guarantee theorem algorithm hashtogram database distribute across user exists LDP algorithm fix domain query algorithm probability algorithm query satisfy server processing memory per query plus instantiation user runtime memory communication notation hide logarithmic factor apply theorem domain satisfy eventual analysis proof theorem accuracy guarantee hashtogram poisson approximation bin distribution bin bin poisson distribution limit distribution binomial distribution fix distribution bin approximately poi approximate joint distribution bin assume load bin independent poisson random variable acm transaction algorithm vol article publication date october theorem suppose thrown bin independently uniformly random ith bin YR independent poisson random variable nonnegative function XR YR theorem probability poisson probability indicator function bound probability poisson random variable theorem poisson distribution concentration limited independence version multiplicative chernoff bound formulation upper bound limited independence theorem theorem random variable wise independent exp fully independent exp fully independent exp limited independence version bernstein inequality theorem lemma wise independent random variable integer bound magnitude exi exists constant random partition user suppose apply locally private computation distribute database option simply apply computation parallel argue overall privacy guarantee composition theorem differential privacy another option randomly partition user disjoint subset apply computation subset option worry composition computation apply disjoint subset user argue incur sample error achieve accurate algorithm option technique reference illustrate technique distribute database predicate mapping suppose estimate estimate fix local differential privacy estimate error hence composition theorem pure differential privacy estimate error guarantee local differential privacy acm transaction algorithm vol article publication date october hitter structure local privacy algorithm  notation CM  universal constant specify later denote CM  public randomness random partition IM pairwise independent hash function wise independent hash function unique recoverable code enc dec parameter theorem player define enc enc hashtogram privacy parameter estimate fSm fSm initialize  fSm fSm dec define hashtogram privacy parameter obtain return est alternatively random partition subset chernoff bound probability estimate local differential privacy  error  error option factor formal protocol construct analyze hitter algorithm algorithm algorithm  immediate construction algorithm  satisfies LDP proceed utility analysis restriction analysis remark complementary apply frequency oracle hashtogram theorem item obtain runtime memory communication guarantee theorem database distribute across user algorithm  return est probability est min est acm transaction algorithm vol article publication date october server processing memory sizeO timeO user  runtime memory communication proof item lemma directly theorem hashtogram item freely assume item vacuously otherwise addition simplify notation fix limit generality embed domain thereby decrease failure probability constant CH CH non otherwise denote denote mapped define sequence simultaneously probability indeed guarantee item choice mapped furthermore sum frequency non mapped absolute constant happens probability CH limited independence chernoff bound theorem item union bound constant wise independent  invoke limited independence formulation bernstein inequality theorem fix collection random variable indexed define define bound variance theorem union bound analysis assume occurs partition IM  acm transaction algorithm vol article publication date october hitter structure local privacy hence chernoff bound theorem union bound partition IM exists subset constant theorem recall CM theorem poisson approximation analyze poisson fix JM independent poisson random variable fix bound poisson distribution theorem assume  probability logCM JM independent probability choice logCM logCM   hence theorem index CM union bound partition IM exists subset analysis sample exists subset perfectly hash analyze assume occurs fix recall pairwise independent hash function mapping hence  union bound acm transaction algorithm vol article publication date october assume logCM logCM probability perfectly hash logCM hash function independent probability choice perfectly hash logCM CM union bound sample exists subset analyze assume occurs  fix fix  markov inequality   probability hash function independent assume logCM probability choice logCM CM union bound randomness hashtogram exists subset fSm fSm absolute constant acm transaction algorithm vol article publication date october hitter structure local privacy analyze denote recall fix fix exists fSm fSm  logCM algorithm hashtogram theorem probability logCM coin hashtogram independent across execution probability choice logCM CM union bound proof whenever output fix denote enc code enc dec dec hence fSm enc CH CM hence fSm enc CH CM however enc recall exist addition index non fSm enc enc hence fSm inequality CH ensure enc identify argmax fSm hence enc suffices constant recall hence enc acm transaction algorithm vol article publication date october therefore suffices contains correspond fSm however CM yield generate hence CM enc overall CM advanced  max information local differential privacy admits guarantee privacy differential privacy central model protection LDP degrades proportionally quadratic improvement happens central model coincidence behavior mirror privacy guarantee differentially private algorithm composition indeed proof advanced privacy bound strategy proof advanced composition theorem definition random variable define privacy loss function define privacy loss random variable LA algorithm differentially private input outcome proof advanced composition theorem leverage privacy loss individual local randomizer  substantially privacy loss local randomizer apply independently cumulative privacy loss incur input concentrate within expectation theorem advanced  pure LDP entry LDP simplicity theorem algorithm local protocol server simply output noisy report user differential privacy processing applies protocol arbitrary aggregation procedure protocol proof without loss generality assume coordinate randomizer apply independently privacy loss acm transaction algorithm vol article publication date october hitter structure local privacy LA  differentially private proposition reference implies   hence hoeffding inequality LA completes proof remark straightforward extend theorem handle LDP algorithm proof advanced composition theorem discussion reference theorem advanced  approximate LDP entry LDP improve privacy bound immediately implies bound max information LDP protocol max information algorithm information reveals randomly chosen input motivation max information ability ensure generalization adaptive data analysis definition jointly distribute random variable approximate max information denote minimal measurable subset denotes distribution marginals algorithm approximate max information denote distribution  DP algorithm max  moreover approximate max information input distribution distribution subsequent extend analysis DP algorithm restriction distribution privacy bound local differential privacy  distribution max information LDP protocol behavior DP algorithm distribution distinct advantage adaptive data analysis LDP algorithm compose arbitrary max information algorithm generalization guarantee contrast central model differentially private algorithm composition algorithm satisfy max information bound necessarily composition satisfy nontrivial max information bound data drawn distribution acm transaction algorithm vol article publication date october theorem LDP defer proof appendix composition  response proof instantiation randomize response obey privacy guarantee advanced composition privacy  pure LDP prior estimate binary attribute admits LDP algorithm guarantee however distribution resemble fold composition randomize response interpret construction evidence advanced composition theorem pure LDP potentially interactive mechanism conceptual barrier composition theorem linear increase computation actually tight pure differential privacy composition randomize response differentially private satisfy differential privacy overcome issue notion approximate composition specifically exhibit LDP algorithm input yield distribution statistical distance composition instance randomize response performs randomize response ith input input algorithm identifies output roughly average likelihood composition concentration argument outcome probability approximate compose algorithm simply return outcome return uniformly random outside otherwise crux privacy argument latter sample roughly probability theorem differentially private algorithm suppose exists algorithm differentially private exists output identically distribute proof denote ham distance define spherical around guarantee advanced composition additive applies typical acm transaction algorithm vol article publication date october hitter structure local privacy immediate hoeffding inequality approximate compose algorithm algorithm approximate compose algorithm sample output output random sample accuracy statement theorem immediate algorithm guarantee differential privacy technical lemma sample probability probability item sample lemma proof uniform random variable analyze ratio suffices symmetry define strategy ratio roughly prescribed meanwhile contribution dominate ratio formally ratio acm transaction algorithm vol article publication date october technical  defer proof proof lemma inequality similarly inequality completes proof lemma lemma argue differentially private fix input acm transaction algorithm vol article publication date october hitter structure local privacy modulo defer completes proof theorem proof exp identical argument acm transaction algorithm vol article publication date october relationship anti concentration uniform lemma uniformly distribute exp proof probability function binomial distribution calculate consequence stirling approximation binary entropy function bound proof bound lemma bound uniform distribution exp however hoeffding inequality exp exp allows conclude ratio exp acm transaction algorithm vol article publication date october hitter structure local privacy exp approximate privacy pure privacy generic transformation  generic transformation non interactive LDP protocol LDP protocol essentially utility guarantee transformation rejection sample context differential privacy equivalence local model pure privacy SQ rejection sample  smith almost non interactive LDP protocol transform protocol communication per user expense increase randomness protocol transformation obtain transformation  smith modification transformation  smith applies sample resilient LDP protocol informally sample resilient protocol outcome distribute database approximate outcome random subset roughly user protocol sample resilient obtain avoids restriction restriction remove expense increase per user communication logn user generalize transformation LDP protocol somewhat surprisingly instead obtain LDP protocol user report carefully protocol actually satisfies  privacy generic transformation algorithm GenProt theorem  algorithm GenProt satisfies LDP moreover database variation distance GenProt sup GenProt  interpret guarantee theorem parameter suppose variation distance parameter user logn server privacy utility guarantee theorem individually lemma algorithm GenProt satisfies LDP proof fix public randomness fix user denote output useri protocol fix public randomness input output goal acm transaction algorithm vol article publication date october algorithm GenProt input user input privacy parameter parameter algorithm LDP protocol local  generate independent public user compute sample bernoulli denote sample uniformly server calculate analyze output output chosen uniformly output chosen uniformly sum independent bernoulli random variable expectation poisson binomial distribution relate random variable binomial distribution specifically random variable Wˆ define sum bernoulli expectation useful binomial distribution easy analyze poisson binomial distribution task Wˆ intuitively thatw sum oft bernoulli recall  decrease expectation bernoulli random variable hence intuitively Wˆ argument formal bernoulli Xˆ bernoulli independent Xˆ Xˆ acm transaction algorithm vol article publication date october hitter structure local privacy proof Xˆ Xˆ replace bernoulli variable sum bernoulli variable without decrease expectation Wˆ    equation identical analysis acm transaction algorithm vol article publication date october lemma occurs probability protocol happens probability  execution GenProt proof fix user input denote random variable GenProt denote random variable GenProt notation goal relate random variable define happens probability fix hence union bound define random goodi priv goodi privi goodi privi goodi analyze priv recall useful consequence definition differential privacy observation differentially private fix database  observation union bound priv acm transaction algorithm vol article publication date october hitter structure local privacy random variable GenProt fix fix goodi calculate priv privi privi privi privi privi privi privi privi privi privi privi privi recall  random function independent hence privi privi privi privi privi privi privi privi privi recall fix goodi hence privi privi privi privi acm transaction algorithm vol article publication date october analyze privi privi goodi goodi goodi goodi hence goodi goodi goodi establish goodi priv goodi denote  simplicity assume postprocessing procedure deterministic subset output denote FY notation priv priv nTδeε priv nTδeε FY priv nTδeε FY priv nTδeε FY priv nTδeε FY goodi nTδeε FY goodi shorthand denote  nTδeε FY nTδeε nTδeε acm transaction algorithm vol article publication date october hitter structure local privacy similarly analysis priv privacy ensure nTδeε nTδeε nTδeε GenProt increase probability lower bound via anti concentration LDP hitter algorithm error ignore dependence error optimal specifically  smith bound theorem non interactive LDP protocol estimate frequency domain error constant probability incorporate tight dependence failure probability bound specifically theorem non interactive LDP protocol estimate frequency domain achieve error probability explain theorem suffices simplify bound fix lemma  LDP protocol user distribute database within error probability theorem lemma implies theorem proof theorem non interactive LDP protocol estimate frequency  achieve error probability distribute database within error probability protocol counting user input generates alternative input defines modify distribute database apply obtain estimation multiplicity multiplicity hence lemma acm transaction algorithm vol article publication date october global constant addition theorem global constant combine inequality min inequality remains lemma strengthen argument reference obtain bound error theorem LDP frequency oracle error constant probability formal proof lemma establish notation overview proof overview argue previous namely advanced  generic transformation approximate pure LDP however proof somewhat streamline generic transformation approximate pure LDP assume without loss generality pure LDP protocol  user distribute  within error probability goal generate input constant denote database chosen uniformly random define  apply protocol onto database remainder proof proceeds error hence  obtain estimate error  however advanced  DP bound mutual information random input output DP algorithm remain approximately uniform transcript output protocol remain independent acm transaction algorithm vol article publication date october hitter structure local privacy combine apply anti concentration bound sum  proof lemma generic transformation proof lemma assume LDP protocol user distribute database within error probability generate input constant denote database chosen uniformly random define  execution protocol database denote public randomness generate server denote differentially private algorithm random variable denote outcome notation outcome protocol deterministic function transcript protocol fix choice denote outcome protocol  denote    estimate fix   construction mechanism abbreviate vector outcome mechanism server randomness constant recall constant satisfies differential privacy choice advanced composition reference theorem argue mutual information theorem uniformly distribute differentially private algorithm denote recall uniform satisfies differential privacy hence  constant acm transaction algorithm vol article publication date october recall  define average  transcript denote portion correspond index transcript probability coin sample execution choice fixture chernoff bound assume hence proof assume occurs fix transcript index hence execution independent across independent server randomness fix hence hence var moreover choice random variable independent interactive protocol input independent remain independent transcript fix transcript index anti concentration theorem argue acm transaction algorithm vol article publication date october hitter structure local privacy theorem exist constant sum independent random variable attain var immediate corollary theorem corollary exist constant sum independent random variable attain var interval completeness appendix proof weaker version corollary suffices application apply corollary random variable constant interval recall random variable independent hence inequality sum inequality fix choice interval   finally equation  probability protocol error estimate random database hence exist fix database error probability acm transaction algorithm vol article publication date october APPENDICES proof theorem theorem theorem LDP proof distribution jensen inequality max theorem quantity random variable sample implies sup variant corollary anti concentration corollary exist constant sum independent random variable attain var interval relatively proof sum random variable reference however unable reference analysis variable independent necessarily identically distribute feller involve corollary analysis corollary suffices application independent random variable attain denote assume constant goal interval relate situation easy analyze random variable lemma acm transaction algorithm vol article publication date october hitter structure local privacy lemma independent random variable independent interval min proof expression expression trivially expression define otherwise furthermore notation min independent random variable interval lemma replace variable variable expectation exactly without decrease probability establish statement corollary independent interval exist collection independent random variable collection random  clearly hence denote apply lemma random variable replace constant amount shift interval brings corollary corollary independent interval exist interval ˆI ˆI bin ˆI anti concentration bound binomial distribution instance apply bound acm transaction algorithm vol article publication date october theorem lemma bin exp bin exp proof interval ˆI corollary bin ˆI bin bin symmetric proceed assume recall median bin   hence  bin proof therefore proceed assume  hence   bin  exp  inequality theorem assert   theorem theorem exist constant independent random variable interval proof theorem recall definition unique recoverable code definition unique recoverable code mapping enc dec enc dec XL LM assume satisfy enc dec LM theorem consequence reference implicitly analysis proof completeness theorem exist constant constant fix choice function construction unique recoverable code enc dec XL furthermore mapping enc enc enc enc acm transaction algorithm vol article publication date october hitter structure local privacy construction standard error code enc dec constant rate error code exist linear encode decode partition enc contiguous bitstrings enc denote  bitstring enc dec denote standard error correction code enc dec unique recoverable code construct regular spectral expander vertex constant specify later construct poly poly deterministically constant reference define enc enc define enc enc enc enc kth logZ logy hence constant explain decoder dec operates LM construct graph layer vertex specifically suggests graph across endpoint fix domain satisfy enc goal decoder dec recover vertex ideal encoding enc throughout enc isolated component furthermore induced graph lemma version lemma expander lemma lemma adjacency matrix regular graph vertex suppose eigenvalue magnitude lemma ideal subset understand index enc longer argue isolated index spectral cluster definition spectral cluster vertex satisfy incident graph spectral expander eigenvalue magnitude unnormalized adjacency matrix assumption remove construction spectral expander expander spectral expansion verify efficiently random graph spectral expander probability construct expander efficient vega acm transaction algorithm vol article publication date october vol vol sum vertex  subset vol vol vol vol  random graph prescribed distribution suppose lose correspond incident upon vertex enc possibly insert insert across index delete    volume vol index subset vol furthermore  vol vol   spectral cluster task  therefore reduces cluster identify spectral cluster algorithm theorem exists universal constant polynomial linear algorithm graphG disjoint vertex spectral cluster vol vol vol vol apply theorem graph algorithm recovers  volume  volume obtain remove vertex contains   vertex  furthermore  lose  due index vertex inw reduce remove vertex remove vertex  volume vertex overall contains  vertex outside vertex corrupt codeword concatenate encode chunk specify vertex entry enc sufficiently successfully decode obtain binary encode remains identify denote analysis vol vol vol moreover recall hence cluster