subtree isomorphism asks another fundamental importance variant  algorithm truly subquadratic algorithm remain elusive reduction orthogonal vector subtree isomorphism truly subquadratic algorithm latter  exponential hypothesis seth conditional bound focus truly subquadratic algorithm classify quadratic barrier binary truly subquadratic algorithm  seth  logn vertex truly subquadratic algorithm  seth constant constant randomize truly subquadratic algorithm depth logd min algorithm binary depth reduction utilize gadget likely useful future seth bound upper bound apply folklore randomize decision complexity CCS concept theory computation reduction completeness mathematics compute additional subtree isomorphism grain complexity seth introduction frequently commonly computer fundamental computational another isomorphic obtain delete node subtree isomorphism subgraph isomorphism variant mainly  bound node preserve isomorphism article focus unordered bound constant fundamental importance complexity subtree isomorphism matula edmonds reference subgraph isomorphism extensively theoretical computer subgraph isomorphism NP generalizes clique moreover subgraph isomorphism exponential hypothesis eth subgraph isomorphism extensive attention recent article marx  fix constant besides fix non trivial polynomial solvable subtree isomorphism arguably polynomial algorithm obtain biconnected outerplanar graph series parallel graph generalization quickly become NP binary practical relevance model important application variety subtree isomorphism core expressive subtree generally application computational biology structure text database compiler optimization definition similarity propose algorithm compute theory ongoing decade reference survey textbook focus subtree isomorphism briefly discus technique introduce article adapt subtree previous accord matula algorithm subtree isomorphism propose independently edmonds matula later  matula algorithm polynomial runtime algorithm executes subroutine solves maximum bipartite graph later chung bound achieve  lingas shave factor recent development shamir  recent randomize algorithm bipartite reduce runtime matrix multiplication exponent interestingly constant algorithm runtime logn comparison STOC FOCS complexity quadratic logn improvement achieve unordered acm transaction algorithm vol article publication date june subtree isomorphism revisit conditional bound subtree isomorphism truly subquadratic algorithm unlikely restrict binary depth logn upper bound factor briefly discus algorithm bound exponential hypothesis seth impagliazzo   roughly grows variable poly subtree isomorphism seth addition diverse already vector graph sequence curve construction gadget useful conditional bound demonstrate bound subtree theorem subtree isomorphism unordered height logd logn cannot truly subquadratic seth generally bound  seth remark seth randomize algorithm bound barrier truly subquadratic randomize algorithm complement bound proceed tackle restriction algorithmically restrict input bound height bound leaf improvement binary height logn algorithm quadratic seth minimum height binary logn intrigue binary almost logn unable super linear bound obtain deterministic algorithm truly subquadratic nevertheless randomize vega algorithm solves truly subquadratic algorithm solves theorem randomize algorithm subtree isomorphism min height algorithm depth truly subquadratic depth algorithm easy implement upper bound technique obtain technique randomize decision complexity ternary vega algorithm approach binary however computer program analyze algorithm theorem randomize algorithm subtree isomorphism ternary height min finally generalize algorithm obtain truly subquadratic algorithm subtree isomorphism height constant upper bound algorithm refute seth acm transaction algorithm vol article publication date june theorem randomize algorithm solves subtree isomorphism constant height min algorithm strongly subquadratic height logd constant bound theorem tight algorithm obtain upper bound randomize query complexity upper bound bipartite perfect independent lemma another grain complexity fundamental parameterizations approach formalize recent technique seth hardness reduction orthogonal vector subtree isomorphism reduction previous  spirit careful construction gadget vector technique combine gadget andG existence orthogonal vector determines reduction tricky restrict constant reduction easily modify obtain bound related subtree LCST NP parameter label  approximation parameterized algorithm binary unlabeled quadratic adaptation theorem height logn truly subquadratic algorithm  seth theorem constant subtree height logd logn cannot truly subquadratic seth theorem surprising contrast arbitrary constant subtree isomorphism harder LCST tight quadratic upper conditional bound restriction depth theorem subtree isomorphism truly subquadratic theorem LCST cannot seth attribute algorithmic ingredient important ingredient bound binary depth logn implement reduction attention upper bound focus solvable important recent research conditional bound ingredient connection seminal randomize decision complexity algorithm binary ternary inspire complexity theory formula leaf variable evaluate formula without input surprising randomization acm transaction algorithm vol article publication date june subtree isomorphism revisit evaluate gate random input gate input gate therefore evaluate formula input application various complexity theory theory quantum query complexity related subtree isomorphism viewpoint efficient parallel algorithm lingas  randomize NC gibbon miller karp  independently obtain NC reduction bipartite subtree isomorphism reduction instance node node therefore imply bound complexity subtree isomorphism assume algorithm optimal reduction input generate quadratic bound reduce namely orthogonal vector related linear exactly isomorphism ino hopcroft tarjan later linear algorithm reference reference therein another meaning node cannot modify isomorphism subtree define node descendant subtree isomorphism linear seth lower BOUNDS seth exists variable cannot williams related seth polynomial orthogonal vector OV input OV vector output vector orthogonal williams reduce cnf OV OV cnf variable  clause seth false reduce cnf via OV variant subtree isomorphism seth bound hardness subtree isomorphism reduction reduction proof theorem reduce OV subtree isomorphism ND vertex unbounded height later construction constant height theorem orthogonal vector vector reduce subtree isomorphism ND height proof denote vector recall goal vector coordinate ingredient reduction construct vector gadget vector vector gadget  sizeO coordinate acm transaction algorithm vol article publication date june representation vector node node otherwise define vector gadget vector vector gadget difference coordinate node node reduction explains gadget construction isomorphic subtree orthogonal proof direction assume orthogonal therefore define mapping subgraph node guaranteed exists orthogonality vector easy neighbour mapped neighbour direction assume isomorphic subgraph  mapping mapped mapped mapped   implies implies node exist whenever vector orthogonal acm transaction algorithm vol article publication date june subtree isomorphism revisit reduction OV subtree isomorphism combine vector gadget isomorphic subtree orthogonal vector within define  zero vector ind dimension vector isomorphic subtree define ND compose node  addition distinct gadget vector gadget    ofG construct vector gadget node  definition  subtree correctness reduction indeed ND gadget combine gadget conclude proof isomorphic subgraph orthogonal vector reduction isomorphic subtree orthogonal vector proof direction assume orthogonal vector isomorphic subtree mapping subtrees subtree finally mapped easy neighbour mapped neighbour direction assume isomorphic subgraph correspond mapping vector gadget  image mapping entirely exactly vector  ing moreover gadget cannot mapped gadget gadget gadget pigeonhole principle mapped gadget conclude mapping neighbour mapped neighbour isomorphic subgraph implies orthogonal acm transaction algorithm vol article publication date june shorter vector gadget reduction implement depth introduce construction vector gadget gadget reduction theorem lemma vector construct binary depth linear isomorphic subtree orthogonal proof construction involve careful combination index gadget define sequence binary define index gadget ofl index compose attach index gadget index exist vector gadget construct binary leaf subtree leaf encode entry index gadget assume index denote representation denote binary sequence obtain flip node attach gadget attach index gadget index gadget finally append necessity complicate encode become proof correctness formally attach vertex denote node correspond construction node attach  similarly node corresponds construction node attach node attach node vector gadget construct attach oppose attach construction depth claimed proof isomorphic subtree direction easy vector orthogonal mapping construction isomorphism binary mapped attach subtrees finally zero exist remains isomorphic subtree index gadget crucial role mapping leaf index gadget properly index observation isomorphic subtree subset isomorphic subtree subset sufficient subset subset acm transaction algorithm vol article publication date june subtree isomorphism revisit therefore mapping subtree construction constant challenge towards proof theorem combination vector gadget without difficulty recall reduction proof theorem vector gadget essentially isomorphism gadget combine auxiliary gadget instance subtree isomorphism vector orthogonal however constant binary harder combine vector gadget gadget chosen isomorphism approach gadget leaf binary isomorphism gadget adjacent gadget matchings implement overcome difficulty construction allows isomorphism exactly gadget gadget affect outcome theorem  construct  andG node construction upper bound ND upper bound depth upper bound logd logd isomorphic subtree proof hαi  vector gadget correspond vector obtain construction lemma combine vector gadget andG construct differently assume logd integer otherwise dummy vector vector increase compose ary leaf logd vector gadget hαi formally logd hαi construct construct vector gadget correspond zero vector ary leaf attach logd leaf treat differently attach formally logd none vector encode subtree construct another ary leaf attach vector gadget leaf  subtree binary layer acm transaction algorithm vol article publication date june reduction OV subtree isomorphism binary construction immediate lemma fourth correctness construction vector isomorphic subtree proof direction orthogonal vector rearrangement rightmost leaf ary node vector gadget hαi attach vector gadget properly mapped subtrees without rearrange node vector gadget  vector gadget lemma orthogonal vector mapping remains subtree subtree ofG vector gadget hαi vector gadget  direction assume mapping subtree exist orthogonal vector mapping mapped vertex vertex construction subtree vector gadget hαi mapped vector gadget  lemma theorem connection seth OV williams imply theorem introduction acm transaction algorithm vol article publication date june subtree isomorphism revisit hardness subtree bound subtree LCST generalization subtree isomorphism although reduction already imply quadratic bound LCST optimize reduction hardness binary depth logn LCST cannot compute truly subquadratic gap LCST subtree isomorphism latter truly subquadratic upper bound strengthen hardness explanation extend upper bound LCST extension refute seth theorem implies theorem introduction theorem subtree orthogonal vector vector reduction orthogonal vector height logd logd arbitrary proof construction theorem sufficient purpose height logd logd expressive LCST implement reduction height achieve height implement vector gadget subtree gadget fix vector orthogonal vector orthogonal trick introduce  indyk reduction edit distance later reduction LCS carefully implement gadget height instead sequence assume vector vector enforce extra coordinate vector extra coordinate vector orthogonal vector assume vector entry enforce subdivide vector entry reduction subset increase runtime orthogonal vector factor subpolynomial factor vector therefore negligible vector construct vector gadget vector gadget construct lemma correspond vector vertex vector construct vector gadget vector coordinate entry entry vector gadget construct lemma correspond vector obtain vertex construction choice fix independent depends orthogonality argument formal lemma lemma subtree orthogonal otherwise proof vector acm transaction algorithm vol article publication date june orthogonal lemma isomorphic subgraph LCST assume orthogonal remark subtree denote coordinate subtree lemma subtree remains cannot entire subtree neither isomorphic subtree subtree construct ary leaf assume integer assume constant  construct similarly ary leaf  theorem subtree orthogonal vector otherwise proof node node permutation however cannot arbitrary permutation permutation implement swap binary subtree upper bound ary leaf plus LCST hαi  arbitrary permutation orthogonal vector lemma latter sum exactly bound orthogonal mapping mapped mapped arbitrarily induces permutation mapped permutation exists translates roof lemma implies mapping mapping LCST   ALGORITHMS algorithm subtree isomorphism vertex bound edmonds matula independently described procedure reduce subtree isomorphism polynomially bound collection recursively subtree isomorphism combine maximum bipartite reference approach focus bound constant isomorphic subtree subtrees acm transaction algorithm vol article publication date june subtree isomorphism revisit respectively bipartite graph vertex isomorphic subtree isomorphic subtree contains edmonds matula procedure construct graph recursion solves maximum bipartite algorithm subtree isomorphism involves challenge construct maximum bipartite currently randomize algorithm maximum bipartite due  sankowski timeO  matrix multiplication exponent improve algorithm challenge construct graph deterministic algorithm randomize algorithm however graph node query graph randomize algorithm perfect exists randomize query complexity decision complexity bipartite perfect easy randomize query complexity estimate query however straightforward query expectation query sufficient factor analysis maximum bipartite algorithm complicates simplify restrict attention bound constant constant contains desire perfect sufficient query focus solely randomize query complexity bipartite recursive algorithm subtree isomorphism easy algorithm edmonds matula algorithm handle label vertex vertex label label label subtree ofG moreover algorithm subtree ino recursively assign subtree refer appendix complexity analysis description algorithm bound theorem tight constant remainder restrict attention constant height introduce randomize algorithm solves binary min comparison correspond upper bound edmonds matula min algorithm recursive algorithm truly subquadratic complicate analysis min improve straightforward min bound edmonds matula introduce randomize algorithm upper bound min faster algorithm binary edmonds matula procedure interpret HL HR subtrees GL GR subtrees isomorphic subtree acm transaction algorithm vol article publication date june randomize recursive algorithm subtree isomorphism binary HL isomorphic subtree GL HR isomorphic subtree GR HL isomorphic subtree GR HR isomorphic subtree GL checked recursive isomorphic subtree recursive upper bound HL isomorphic subtree  HR isomorphic subtree GR similarly algorithm concludes met already isomorphic subtree ofG observation introduce randomize variant algorithm achieves significantly recursive swap HL HR probability   probability  algorithm perform unnecessary recursive formal description algorithm refer algorithm  theorem  algorithm min height height strongly subquadratic height theorem useful lemma maximum  recursive empty arbitrary height tyes tno define similarly assumption algorithm return false respectively tyes tno max tyes tno lemma tyes tyes tno tno tyes tno proof simplify notation   isomorphic subtree ofG  otherwise tyes tyes tno assume therefore probability HL GL HR GR algorithm return spending tyes expectation probability outcome recursive return precisely acm transaction algorithm vol article publication date june subtree isomorphism revisit HL GL HR GR recursive return algorithm spends tyes expectation HL GL HR GR recursive return false recursive return algorithm spends tno tyes expectation HL GL HR GR HL GL HR GR recursive return false probability probability recursive return false recursive return algorithm spends tno tyes expectation dominates others conclude tyes tyes tno tno tyes tno assume therefore contribution tno false recursive false recursive amount tno expectation contribution tyes probability false similarly probability false tno tno tyes tyes proof theorem lemma tyes tno tyes tno diagonalization matrix yield JQ therefore tyes tno prof theorem faster algorithm ternary discus subtree isomorphism ternary theorem subtree isomorphism ternary height acm transaction algorithm vol article publication date june decision bipartite binary runtime generic algorithm constant similarly binary proof theorem proceeds recursive approach recursive randomize decision bipartite perfect query corresponds recursive height analyze runtime binary distinguish query recurrence tyes algorithm isomorphic tno analyze randomize decision query randomize query protocol partition bipartite instance respectively subtrees subtrees random swap probability permutation vertex probability permutation permutation fix protocol deterministic node node chosen permutation deterministic decision depict choice query instance randomize choice described swap permute decision compute computer program establish instance perfect acm transaction algorithm vol article publication date june subtree isomorphism revisit subtrees decision bipartite happens complement graph consists cycle disjoint however instance perfect dominate others whenever perfect exists option recurrence becomes tyes tno tyes tno diagonalization yield JQ tyes tno overall iso whenever perfect acm transaction algorithm vol article publication date june induction mixture option suppose tyes  choice constant choice tno recursion tyes  instead tyes algorithm constant randomization subtree comparison edmonds matula algorithm recall algorithm constant goal decides isomorphic subtree recursion simply subtrees empty subtree subtrees subtrees bipartite graph vertex vertex isomorphic subtree graph recursively output isomorphic subtree perfect bipartite graph runtime algorithm iso min height intuitively improve runtime algorithm perform recursive correspond random detect perfect existence perfect randomize version algorithm performs recursive expectation expectation constant recursive implies algorithm faster deterministic algorithm however recursive expectation slightly variant randomize algorithm lemma bipartite graph vertex vertex suppose query access adjacency matrix randomize query algorithm decides contains perfect query expectation probability error lemma assume perfect algorithm perfect query query random perfect proof fix perfect marked marked query unmarked marked random symmetry probability fix unmarked marked probability marked query probability ith marked  sum acm transaction algorithm vol article publication date june subtree isomorphism revisit probability unmarked query therefore  unmarked assume perfect algorithm query expectation perfect probability swap randomly permute vertex query adjacent ruling existence perfect vertex contains subset neighbourhood proof prior algorithm hall theorem contains assume otherwise iteratively remove vertex satisfied define construction oft algorithm probability therefore contains odd argument probability contains algorithm query vertex perfect hall theorem probability vertex processing vertex therefore unprocessed vertex algorithm hence probability  overall query inequality proof lemma lemma probability algorithm probability algorithm perfect query upper bound however perfect query upper bound overall regardless therefore query expectation acm transaction algorithm vol article publication date june theorem randomize algorithm solves subtree isomorphism constant height algorithm strongly subquadratic height logd logd constant proof randomize recursive algorithm decides isomorphic subtree subtrees subtrees bipartite graph vertex vertex isomorphic subtree graph perfect algorithm lemma whenever recursively proof lemma suffices query expectation height upper bound desire apply wald equation vertex appendix analysis edmonds matula algorithm  lemma binary edmonds matula algorithm proof denote HL HR GL GR subtrees runtime algorithm described recurrence induction mention algorithm easily extend label version subtree constant bound completeness pseudo code variant solves label subtree generalize lemma algorithm solves label subtree bound respectively acm transaction algorithm vol article publication date june subtree isomorphism revisit algorithm  return label label sub  subtree subtree sub maximum bipartite bipartite graph define sub return proof correctness straightforward algorithm constant operation exclude recursive denote maximal subtrees runtime algorithm described recurrence induction