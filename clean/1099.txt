multi positive integer target integer subset sum subset sum series algorithm compute return realizable subset sum integer min sum hide polylogarithmic factor modify algorithm integer modulo computes realizable subset sum modulo min contribution improve upon standard dynamic program algorithm knowledge algorithm deterministic algorithm employ various algorithmic graph bipartition computational social choice finally improve independent CCS concept theory computation analysis algorithm additional subset sum convolution introduction multi positive integer integer target subset sum subset sum subset sum knapsack karp NP subset sum variety application index schedule query database precise query protocol various graph cardinality constraint survey application reference application faster pseudopolynomial algorithm subset sum imply faster polynomial algorithm extend abstract soda algorithm earlier manuscript version addition simplifies algorithm improves bound attend illinois   author address koiliaris illinois   goodwin ave  IL email  illinois edu yahoo research  york NY email chao  com permission digital personal classroom grant without fee distribute profit commercial advantage citation copyright component others acm honor abstract credit permit otherwise republish server redistribute prior specific permission fee request permission permission acm org association compute machinery http doi org acm transaction algorithm vol article publication date june koiliaris summary deterministic pseudopolynomial subset sum comment bellman DP  logu logu ram model implementation bellman  max max   obtainable eppstein  max logu data structure polynomial min thm input multi distinct target subset sum fundamental standard weakly polynomial undergraduate algorithm complexity weakly NP standard pseudopolynomial algorithm dynamic program due bellman solves chapter extensive subset sum summary previous deterministic pseudopolynomial recently improve logu factor pack technique reference subset sum input others focus data structure maintain subset sum standard operation maximum integer relatively target sum subset sum almost linear improve  eppstein described data structure efficiently maintains subset sum insertion deletion logu logn per update accelerate logu additional information future update probabilistic convolution  subset sum max hide polylogarithmic factor polylog variant subset sum modular subset sum literature additive combinatorics addition modulo input despite popularity combinatorics prior establish efficient algorithm dynamic program algorithm bellman applies solves modular subset sum publication extend abstract article spark series randomize pseudopolynomial algorithm subset sum briefly survey bringmann randomize linear algorithm ino  logu extend riemann hypothesis recently jin simpler randomize algorithm achieves slightly randomize algorithm fft improve upon deterministic achieve article derandomizing remains acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum contribution previous deterministic parameter previous logu min min input multi distinct target randomize linear algorithm modular subset sum clever sketch surprisingly algorithm fft addition randomize algorithm reference apply modular neither algorithm reference finally unlikely subset sum algorithm constant target algorithm imply exponential hypothesis seth impagliazzo  false contribution summarize subset sum multi distinct denote sum compute realizable subset sum prespecified integer compute subset sum standard subset sum target contribution algorithm compute subset sum consequently subset sum min algorithm improves previous deterministic algorithm combine multiple approach input developed series algorithm input independent building description introduce algorithm surprisingly conference version reference algorithm pseudopolynomial algorithm subset sum strike apply fft seemingly unrelated contribution algorithm solves modular subset sum min bound superficially algorithm algorithm approach algorithm augment return subset sum polylogarithmic slowdown detail improve application instance bottleneck graph partition graph asks split vertex graph bottleneck maximum across minimize another computation index computational social choice obtain significant improvement finally improve bound limited magnitude error acm transaction algorithm vol article publication date june koiliaris summary algorithm algorithm input output SS  SS  ssc  SCu SS  SS  max SS  min ssc  SCv diam SS mod mod min arrow denote algorithmic dependency subroutine prefix SS denotes algorithm return subset sum equation ssc return subset sum cardinality equation input theorem theorem capture contribution theorem theorem sum compute subset sum min extends input multiset theorem theorem multiset multiset distinct sum compute subset sum min capture contribution modular subset sum theorem theorem modular compute subset sum modulo min logm sketch technique straightforward conquer algorithm subset sum partition recursively computes subset sum combine fft fourier transform chapter algorithm logn theorem sketch algorithm partition mod fix compute subset sum combine  therefore compute subset sum maintain participate sum recover acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum sketch algorithm algorithm combine algorithm max min max employ theory handle instance remain apply min algorithm mention min compute subset sum quickly ignore sum exceed upper bound sketch theo min algorithm  prime theory partition input  subset subset arithmetic progression  subset sum quickly compute later combine subset sum sadly prime fortunately relative prime tom handle remain recursive partition classify sieve accord prime factor subproblems coprime modulus algorithm finally algorithm combine subset sum subproblems organization preliminary discussion multisets without loss generality algorithm subset sum algorithm describes min algorithm modular subset sum recover retrieve sum sum finally impact application PRELIMINARIES denote integer interval similarly denote diameter diam max max min additionally  andw  define subset sum  subset sum cardinality SC  moreover additional auxiliary definition subset sum subset sum cardinality SCu SC acm transaction algorithm vol article publication date june koiliaris subset sum cardinality SCv SC disjoint SC SC SC observation supplementary definition observation repeatedly analysis observation positive superadditive function function satisfy max logn finally computation ram model input integer express unary operation constant useful lemma compute pairwise sum almost linear fft lemma compute logu proof characteristic polynomial construct fashion polynomial sett fori coefficient nonzero fft compute polynomial logu extract lemma compute proof lemma characteristic polynomial respectively fori coefficient nonzero compute polynomial straightforward reduction regular fft multidimensional fft chapter extract multisets input multiset reduce reduction somewhat standard reference completeness multiset multiplicity denote denote distinct multiset multiset distinct cardinality denote multiset interval simply lemma multiset integer multiset remove proof multiset contains replace subset   establish acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum lemma multiset integer cardinality unique compute multiset logu multiplicity proof multiset maintain heap empty iteration extract minimum heap delete appropriate multiplicity output multiset iteration delete output multiplicity insert multiplicity update heap already algorithm iteration iteration logu overall logu iteration increase finally logu logu combine lemma simplifies upcoming analysis lemma algorithm computes compute multiset distinct logu proof compute multiset described lemma int twice partition   compute lemma logu reduces subset sum multisets distinct instance subset sum logu loss generality input restrict instead multisets simplicity exposition assume input  finding introduce algorithm subset sum succinct description analysis theorem positive integer sum compute subset sum logn proof partition roughly cardinality compute recursively compute lemma recurrence  recurrence observation logn standard conquer algorithm theorem already reference analysis conquer algorithm without fft addition earlier acm transaction algorithm vol article publication date june koiliaris algorithm SS  subset sum subroutine ssc  algorithm theorem compute SCu algorithm SCu algorithm ssc  subset sum cardinality subroutine algorithm theorem compute logn logu SCu subset sum cardinality proof partition roughly compute SCu SCu recursively SCu SCu SCu SCu SCu apply lemma yield SCu logu recursive formula logu logu logn algorithm compute subset sum congruence quickly lemma mod compute logn logu proof subset   SCu corresponds corresponds  sum compute SCu algorithm theorem return SCu desire introduce algorithm partition input congruence compute SCu combine SS  acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum theorem compute logn logu proof partition logn mod compute subset sum logn logu lemma spent compute logn logu logn logu combine logu hence logn logu logu logn logu subset  algorithm subroutine performs input maximum performs minimum algorithm balance subroutine achieve max algorithm subroutine algorithm maximum input SS  handle dense intuitively dense max employ theoretical obtain algorithm dense sum therefore algorithm previous formally definition dense dense contains max lemma reference dense structure exploit compute portion lemma reference reference theorem dense max compute sum lemma compute max proof compute logn algorithm theorem input dense compute lemma suffices compute compute via algorithm theorem logn logn dominates min algorithm subroutine computes subset sum minimum input SS  algorithm subroutine computes subset sum cardinality SCv diameter input ssc  reference approximation algorithm subset sum acm transaction algorithm vol article publication date june koiliaris algorithm SS  along algorithm subset sum introduce subroutine SS  algorithm lemma SS  algorithm lemma ssc  algorithm lemma SS dense algorithm lemma lemma disjoint SCv SCv compute SCv proof linear define SCv SCv SCv SCv hence acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum compute algorithm lemma SCv precisely inverse apply additional lemma compute SCv logn proof compute median denote linear partition compute recursively SCv SCv combine SCv lemma recurrence max logn observation lemma compute min proof partition partition compose logu compute logn indeed sort obvious fashion compute moreover interval apply lemma SCv   sum fori ino finally combine obtain additional algorithm combine yield algorithm straightforward description remains apply algorithm SS  theorem compute subset sum proof fix partition compute via algorithm lemma algorithm lemma compute ino logu lemma prof theorem modular subset sum demonstrate extend previous modular subset sum addition modulo previous algorithm ignore sum outside challenge longer sum wrap account positive integer integer modulo operation addition finite  denote gcd multiplicative integer modulo acm transaction algorithm vol article publication date june koiliaris min algorithm SS mod modular subset sum along subroutine SS  algorithm lemma compute subset sum input subset min logm logn  greedy algorithm return sequence euler  function capture integer gcd coprime relatively prime finite arithmetic progression finally denote respectively subset sum coprime compute modulo coprime SS  partition compute subset sum combine indeed lemma compute logn acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum proof multiple define integer compute logn algorithm theorem integer finally compute mod linear lemma formally compute logm logn proof partition fori compute subset  algorithm lemma fori compute application lemma logm logm logn acquire via application input collection universe output universe frame universe textbook greedy algorithm approximate linear lemma stem proof theorem remark reference lemma reference LetG ofm  subset define instance universe greedy algorithm yield apply lemma algorithmically lemma exists constant lnm lnm collection furthermore collection compute logm proof proof bound recall distinct divisor equation constant lnm lnm lnm theorem hence constant lnm lnm lnm lnm lnm therefore multiplicative integer modulo lemma exists  greedy algorithm compute quickly implement efficiently preprocessing stage compute modular inverse extend euclidean algorithm logm unique mod inverse indicates hence greedy algorithm computes logm everything completes algorithm acm transaction algorithm vol article publication date june koiliaris lemma compute subset sum min logm logn proof apply algorithm lemma logn logm logm compute logn logm logn algorithm lemma promise theorem immediate tackle subset SS mod algorithm description parametrize input instance via triple input modulus auxiliary parameter contains gcd instance algorithm computes subset sum modulo initial instance prime factor refer pivot compute recursively compute partial subset sum instance respectively compute subset sum combine lemma recursion compute subset sum algorithm lemma handle multiplicity execution algorithm recursion instance pivot multiplicity recursion generate instance partition recursion partition naively empty superfluous skip hence compress recursion instance instance compress subtree recursion label multiplicity divisor node instance instance label analysis recursion execution algorithm logm logm distinct prime factor assume lemma algorithm input modulus leaf recursion unique precisely divisor proof   prime factorization ofm vector defines leaf modulus  label vector define ith unique factorization integer modulus leaf finally divisor acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum  occurs modulus leaf theorem compute subset sum min logm proof algorithm described SS mod analysis leaf internal node leaf recursion modulus ith leaf ith divisor ofm  lemma bound min  logm logn min cauchy schwarz inequality sum min bound bound leaf min logm logn internal node modulus pivot algorithm combine instance apply lemma described modulus instance decrease geometrically instance combine combine instance yield leaf lemma sum modulus logm theorem sum modulus internal node bound  logm logm sum bound sum leaf internal node modulus convex function spent internal node logm logm logm aggregate everything algorithm bound min logm imply theorem  witness function witness function witness witness function computation algorithm trace recursion reconstruct subset sum ino witness function quickly reduce reconstruction define reconstruction hidden oracle sum input query return intersection acm transaction algorithm vol article publication date june koiliaris sum return sum intersection reconstruction asks non empty oracle assume logn   witness  reconstruction hidden witness define polynomial IQ ixi coefficient IQ precisely ith coordinate sum respectively hence oracle implement polynomial multiplication per yield deterministic algorithm compute witness function argument compute witness function hence polylogarithmic slowdown witness function perform operation effectively maintain subset sum sum APPLICATIONS EXTENSIONS algorithm subset sum subroutine benefit algorithm highlight application extension application derive directly theorem finally highlight additional application error correction code bottleneck graph partition graph vertex function bottleneck graph partition split vertex bottleneck maximum across minimize simplest graph partition cardinality constraint standard conquer algorithm reduces logn subset sum delete exists arrangement component satisfies requirement integer sum various component target sum input previously algorithm  woeginger logn theorem improve counting index standard conquer algorithm counting version subset sum namely compute function subset sum function define corollary function compute logu logb acm transaction algorithm vol article publication date june faster pseudopolynomial algorithm subset sum proof immediate extension lemma multiplication polynomial coefficient logu logb theorem positive integer compute function logu logn proof partition roughly equally compute recursively combine corollary ino logu logu observation index banzhaf index voter cutoff recover linear theorem yield algorithm compute banzhaf index previous dynamic program algorithm arithmetic operation translates ups roughly factor obtain shapley shubik index along analysis recursion conclude corollary error correction code improve improvement factor integer denote divisor sum divisor logm corollary exists constant lnm lnm lnm furthermore compute proof gcd hence lemma lnm bound lnm lnm lemma logm logd dominates logd  logd theorem therefore simplifies sum sec imply corollary lnm lnm corollary analysis employ elementary theory involve technique sieve theory yield bound