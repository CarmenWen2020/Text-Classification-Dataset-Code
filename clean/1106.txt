dynamic facility location generalization classic facility location propose    model dynamic evolve social infrastructure network generalization distance metric client facility optimize classic objective function stability switch client facility standard linear program LP relaxation classic naturally extends traditional  technique sensitive metric frequent switch LP algorithm facility location yield constant approximation algorithm dynamic facility location algorithm installs compete exponential client facility connects client repeatedly neighborhood exponential distinguish approach previous LP  facility location cluster client arbitrary cluster algorithm crucial apply LP approach dynamic CCS concept theory computation facility location cluster additional facility location exponential approximation algorithm introduction facility location extensively combinatorial optimization understood identify closely related node network metric client facility facility associate opening aim subset facility client facility minimize define sum opening chosen facility connection distance client facility dynamic facility location generalization classic temporally evolve metric propose    temporal aspect model metric client facility metric asks feasible connection client minimize objective function addition classic opening connection incur fix amount switch client facility consecutive modification introduce stable propose dynamic evolve temporally social transportation network dynamic facility location aim discover temporal evolution sensitive transient metric comprehensive discussion dynamic evolve network later classic facility location algorithmic technique combination successfully apply linear program LP filter primal dual dual fitting local greedy improvement LP approach merit easily extend related relaxation interestingly algorithmic traditional LP  LP cannot afford facility ensure client facility fractionally LP hence  algorithm define client guarantee facility randomize fails facility neighborhood construct cluster LP algorithm facility cluster cluster decision unfortunately sensitive input traditional LP technique apply dynamic generate excessive switch consecutive LP connection variable slightly article novel LP approach exponential facility location exponential previously approximation algorithm multiway buchbinder naor schwartz service buchbinder chen naor distinguish algorithm previous LP approach facility location algorithm allows client along arbitrarily LP contrast traditional counter intuitive glance longer exponential guarantee probability actually rapidly diminishes zero longer probability sufficient eliminate algorithm rely cluster algorithm consequently becomes stable respect LP dynamic separately apply LP randomness ensures algorithm connection decision LP connection variable approach thereby yield acm transaction algorithm vol article publication date february dynamic facility location via exponential constant approximation algorithm dynamic facility location algorithm lagrangian preserve constant approximation algorithm classic facility location although approximation ratio propose approximation algorithm dynamic avoid stability issue client directly randomly facility client fractionally LP random choice exponential distribution connection algorithm rely inequality algorithm assume inequality cannot achieve  approximation complexity theoretic assumption version dynamic facility location  approximation algorithm version facility opening decision global opening facility available version article flexibility facility opening decision facility specific hourly opening paid version admit approximation algorithm metric constant approximation algorithm positively related amount data social network contact primary network evolve analyze understand dynamic structure network dynamic facility location analyze temporal aspect network introduce article constant approximation algorithm apart offline dynamic version facility location online client facility online  achieve competitive ratio later  asymptotically tight competitive ratio online assumption constant competitive algorithm  bent   client drawn distribution  algorithm reassignment client   algorithm facility finally facility lease variant facility location introduce  gupta lease facility lease aim client facility multiple exist difference dynamic facility location existence switch  williamson approximation algorithm facility lease LP algorithm facility location yield randomize approximation algorithm dynamic facility location theorem randomize approximation algorithm dynamic facility location algorithm lagrangian preserve approximation algorithm classic facility location evident lemma acm transaction algorithm vol article publication date february overview approach standard LP relaxation classic consists decision variable opening variable facility connection variable client facility algorithm dynamic extension standard LP augments LP switch variable reflect distance connection variable consecutive obtain optimal apply preprocessing ensure connection variable client switch paid client fractional connection variable amount switch paid LP algorithm install compete exponential sample exponential distribution client facility exponential compete random choice algorithm subset node sample algorithm considers LP separately construct assignment exponential across facility client algorithm construct connection iteratively proceeds node neighborhood node enters cycle facility random become unusual characteristic algorithm earlier however construction sequence witness decrease neighborhood everything becomes longer probability rapidly diminish lemma observation implies node fail via counting argument connection passing within constant factor connection variable corollary bound connection opening additional argument lemma within constant factor LP finally bound switch recall exponential hence LP random construction connection LP slightly around client obstacle analysis client connection switch multiple client connection whereas LP constant namely switch recall however connection tend local connection variable cannot affect connection client probability indeed client connection variable globally constant switch expectation lemma yield analysis establish algorithm constant approximation algorithm LP approach facility location research direction envision understand technique exponential fruitful specific approximation guarantee analysis incorporate analysis guarantee connection acm transaction algorithm vol article publication date february dynamic facility location via exponential improve however remains understand analysis bound compete ratio classic facility location connection important stability potential improvement algorithm apply classic facility location client closest facility instead connection PRELIMINARIES facility location evolve metric definition dynamic facility location facility client temporally metric denote metric distance client facility switch opening facility goal output subset facility assignment client facility minimize indicator function proposition otherwise objective function consists hourly opening facility connection client switch linear program relaxation introduce standard linear program relaxation classic facility location equivalently dynamic version formulate relaxation dynamic facility location introduce generalization relaxation classic facility location standard LP relaxation classic facility location variable facility variable facility client intuition variable otherwise client facility otherwise feasible relaxation described  inequality client facility client facility facility terminology standard LP relaxation classic facility location minimize  adapt relaxation dynamic facility location relaxation variable facility variable facility client variable facility client classic facility location relaxation constrain  account switch relaxation non negative variable client facility intuition client facility relaxation dynamic facility location acm transaction algorithm vol article publication date february introduce minimize jdt  exponential refer independent exponential random variable exponential probability density function exponential distribution rate parameter random variable distribution exp exponential distribution exp exp independent exponential rate parameter min exp min exponential memoryless exp  implies exponential minimum  exponentially distribute rate preprocessing preprocessing approximation algorithm lose factor preprocessing assume LP switch client fractional connection lemma LP increase factor obtain polynomial feasible satisfy denote client fractional connection preprocessing obtain standard trick duplicate facility careful connection variable client remain consecutive remain preprocessing observation without loss generality assume satisfies facility client facility exists formal proof statement refer reader appendix acm transaction algorithm vol article publication date february dynamic facility location via exponential description algorithm preprocessed linear program relaxation satisfies lemma observation algorithm proceeds random choice opening facility client random choice sample independently exponential exp facility exponential exp client opening facility client client non decrease sample client facility arg mini facility similarly arg minj client neighborhood connection otherwise facility probability distinct simplify assumption remark procedure define indeed connects facility adjacent therefore already facility alternative presentation algorithm rewrite opening algorithm graph terminology simplify presentation analysis opening SG graph SG undirected bipartite graph vertex construct bipartite graph CG connection graph random choice algorithm CG graph vertex vertex exactly outgo arc towards vertex neighborhood SG underlie undirected graph CG therefore subgraph SG algorithm cycle CG facility cycle algorithm determines facility assignment client facility client algorithm defines connection unique outgo arc connection graph vertex already define vertex exactly outgo arc connection graph finitely vertex alternatively simply generate random permutation client algorithm interested relative random permutation suffices client rate acm transaction algorithm vol article publication date february execution algorithm graph facility client node annotate exponential correspond connection graph bold algorithm connects graph algorithm assigns facility facility assign facility client vertex facility assign facility illustrates execution algorithm useful observation analysis algorithm observation CG cycle arc proof suppose CG contains cycle SG CG hence argument yield obtain contradiction connection therefore cycle presentation algorithm guaranteed assign client facility observation easily connection graph merely graph representation reflect random choice algorithm observation version algorithm equivalent facility assignment proof verify version algorithm facility connection graph bipartite cycle contains exactly facility client cycle version version considers connection selects neighborhood subsequently neighborhood hence version version facility client neighborhood vice versa emerges cycle connection graph therefore version induction client connection consists arc assign facility version algorithm suppose CG version assigns consistent decision version suppose CG version assigns version assigns facility assigns facility hence decision consistent suppose odd integer arc outgo arc connection graph towards towards vertex already cycle observation obtain remove arc version algorithm assigns acm transaction algorithm vol article publication date february dynamic facility location via exponential induction hypothesis assigns consistent decision version algorithm symmetric argument analysis analyze algorithm described dynamic facility location throughout denote random indicator variable algorithm connects client facility random indicator variable facility probability expectation random outcome exponential notation linearity expectation return express opening connection express client facility analyze simply analyze algorithm uncapacitated facility location analyze crucially rely random choice algorithm sample exponential exponential client connection proportional LP towards switch specifically lemma lemma  lemma implies algorithm approximation algorithm dynamic facility location argument preprocessing lemma incurs factor combine lemma opening approximate within factor connection within factor switch within factor hence argument temporally opening without algorithm input specify opening facility acm transaction algorithm vol article publication date february theorem randomize approximation algorithm dynamic facility location inequality lemma respectively bound opening probability facility lemma facility proof SG cannot suppose facility outgo arc connection graph CG facility adjacent SG CG mini independent CG facility independent client exponential equality observation bound connection bound connection fix fix throughout simplify notation abbreviate SG CG SG CG respectively inequality connection client sum distance connection therefore denotes distance righthand rewrite sum SG counting connection vertex obtain bound connection SG analyze bound probability randomness exponential connection prefix connection traverse implies inequality lemma probability prefix client connection notation prefix denote prefix subpaths denote client adjacent facility SG similarly denote facility adjacent client SG abbreviate finally subset facility notation bound probability subpath prefix connection acm transaction algorithm vol article publication date february dynamic facility location via exponential lemma prefix prefix proof analyze prefix prefix arc exist CG algorithm independent source randomness client facility randomness client bound probability arc exist CG exist client moreover argument arc exist CG implies arc exist min bound probability exponential distribution client distribute accord exponential distribution rate therefore probability  min  exponential client client  distribute accord exponential distribution rate therefore probability  min  min generally otherwise facility outgo arc another client argument probability arc exist CG randomness facility bound probability arc exist similarly arc exist min argue equivalent combinatorial random permutation client probability client cardinality conditioning permutation remain client equally likely acm transaction algorithm vol article publication date february facility distribute accord rate min  arc exist probability yik bound client facility independent calculate upper bound prefix similarly probability arc exist CG bound probability arc exist CG analogous argument yik statement independence facility  connection traverse bound connection traverse graph client arc client arc lemma facility client integer connection client arc max integer connection client arc max proof proof client arc client arc probability prefix lemma prefix connection client arc hence linearity expectation prefix inequality lemma equality acm transaction algorithm vol article publication date february dynamic facility location via exponential connection prefix client arc prefix hence linearity expectation lemma upper bound prefix inequality analyze connection prefix client arc notational convenience prefix nonzero probability moreover indeed client decrease along outgo arc client instead linearity expectation upper bound prefix sum prefix lemma prefix yik yik yik yik yik substitute bound connection yik yik acm transaction algorithm vol article publication date february rearrange yik yik analyze expression recall bound argument allows upper bound max yik yik yik max xik max bound connection prefix client arc notational convenience argument prefix nonzero probability linearity expectation bound prefix prefix similarly apply lemma rearrange upper bound yik yik yik acm transaction algorithm vol article publication date february dynamic facility location via exponential argument allows upper bound connection max yik yik max yik max xik corollary connection traverse arc max connection traverse arc max corollary connection traverse arc respectively arc hence connection traverse direction bound switch lemma lemma lemma client suppose  satisfy exponential construct correspond connection graph client connection proof CG CG characterize difference recall node exactly outgo arc connection graph neighborhood SG SG hence unique outgo arc connection graph exponential define connection graph client outgo arc CG CG suppose facility outgo arc CG CG CG CG implies SG SG absent graph otherwise graph choice outgo arc consistent connection graph suppose SG SG client neighborhood graph SG sum facility outgo arc CG CG outgo arc towards characterization client differs contains proof vertex maximal prefix outgo arc CG CG choice client hence facility outgo arc CG CG towards assume without loss generality CG already acm transaction algorithm vol article publication date february connection automatically contains client connection contains contains arc therefore lemma analogue CG connection CG proof connection corollary connection  contains connection expectation expectation client connection corollary apply lemma multiple corollary suppose  satisfy exponential construct correspond connection graph client assign facility proof denote lemma considers connection variable neighborhood client whereas corollary considers connection variable around client apply lemma construct series gradually ensure neighborhood apply lemma consecutive obtain client connection CG CG client assign facility connection appendix preprocessing LP  appendix  apply LP preprocessing preprocessing formalize lemma due sake completeness preprocessing notation LP polynomial output feasible satisfy twice denote client fractional connection acm transaction algorithm vol article publication date february dynamic facility location via exponential lemma vector construct client boundary entire span interval   mint boundary otherwise increment previous boundary client defines span interval redefine connection variable client connection variable within interval define client interval mint mint achieve desire construction mint therefore connection twice connection moreover finally construction hence conclude  description preprocessing specify towards aim client interval implies recall fractional connection client within interval  therefore obtain feasible switch twice switch max construction implies increase arbitrary manner achieve acm transaction algorithm vol article publication date february standard technique apply classic LP connection variable facility opening variable preprocessing connection variable omit incident opening variable preprocessing preprocessing preprocessing formalize observation apply standard technique duplicate facility detail review standard technique multiple algorithm classic ensures suppose exists facility client respectively LP standard technique duplicate respectively facility illustrates duplication technique modifies instance creates facility however define metric facility exactly facility facility define opening modification LP approximate instance translates instance opening facility instead duplicate connection variable facility threshold split facility facility split multiple difference consecutive threshold dynamic additionally ensure facility zero observation obtain threshold acm transaction algorithm vol article publication date february dynamic facility location via exponential threshold facility LP variable across threshold therefore facility respectively opening connection facility implement subset facility finally connection variable implement implement respective client exactly connection variable remains preprocessing