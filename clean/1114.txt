construction locality sensitive hash function ham guaranteed collision vector within radius construction efficient hash collision vector distance data independent LSH without guarantee namely seminal LSH construction indyk motwani STOC efficiency construction essentially bound radius logn dataset integer constant differs factor exponent bound consequence LSH similarity ham avoid false negative efficiency CCS concept theory computation algorithm sort additional similarity dimensional locality sensitive hash recall introduction similarity dimension intense research decade research community theory computation database machine information retrieval article ham task vector preprocessed minimum ham distance query vector efficient data structure query preprocessing increase exponentially disprove exponential hypothesis algorithm community approximate distance bound distance user specify parameter sought approximation factor bound relative distance exist approximate data structure rigorously analyze drawback query linear dataset query grows exponentially multiplicative overhead grows exponentially lack unconditional guarantee return approximate arguably data structure closest overcome drawback locality sensitive hash LSH metric ham metric article LSH yield sublinear query ford logn usage polynomial linear dimension approximation  constant currently sublinear query however monte carlo guarantee approximate return probability efficient detect compute incorrect overcome drawback contribution article investigate possibility vega guarantee  ham traditional LSH scheme sequence hash function independently inherently implies probability bound extend improve ham suitably correlate hash function difference eliminate false negative achieve performance bound comparable traditional LSH combinatorial covering refer approach CoveringLSH denote ham distance vector andy imply theorem similarity specifically approximate standard ram model theorem construct data structure bound logn logn min parameter query data structure guaranteed return exists query data structure logn technique traditional LSH extend efficiently variant similarity handle without bound distance return instead achieve probability bound query bound performance data structure classical LSH constant probability false negative acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative multiplicative overhead classical LSH exponent query optimal data independent LSH notation function denote vector respectively denote wise conjunction disjunction respectively denote bitwise exclusive denote ham vector denote ham distance ΔS upper bound representation  entry vector standard ram model ΔS depends representation vector vector dense vector sparse representation ham vector ΔS assume ability constant theorem mod refer integer difference divisible finally denote dot background related vector within ham distance query vector introduce minsky papert approximate generalization arbitrary  sometimes location approximate fix query implies comparable performance somewhat simpler argument completeness reduction obtain data structure data structure radius factor logd query binary alternatively restrict radius radius logn decrease approximation factor data structure factor logn asymptotic data structure focus ham assume data structure deterministic algorithm simplicity restrict attention baseline brute algorithm vector ham distance usage assume attractive unless dependence reduce achieve query logr logr exponential dependence computer  instruction implementable lookup minimal instruction available ΔS logw folklore recursive construction lemma acm transaction algorithm vol article publication date june pagh randomize filter false negative seminal article indyk motwani randomize  vector within distance technique approximate distance inspect data structure LSH ham article function ham projection HA vector refer mask query iterate function HA identify collision hash procedure query collision exists efficient hash function evaluation collision procedure randomize filter attempt data item filter away data item filter efficiency respect vector collision sum function HA expectation randomness choice argue without loss generality assume filter efficiency depends location difference replace vector define random permutation vector affect distance collision probability solely ham vector remark vector sparse beneficial sparse representation input output function HA indeed indyk motwani function concatenate suitable sample however convenient dimensional vector understand sparse representation classical ham LSH indyk motwani collection uniformly random independent dimensional vector vector encodes sequence sample projection vector selects sample appropriately achieve tradeoff balance hash function collision distance suffices achieve collision probability distance collision vector distance linear newer development recent advance   extend preliminary data dependent LSH achieve guarantee usage evaluation specifically suffices collision hash attempt generalize data dependent certainly extension surprising development recently  williams approximation distance obtain truly sublinear per query logn concerned batch query acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative filter without false negative literature filter ham distance introduce false negative yield formal guarantee relatively previous ham projection construction ensure collision vector distance achieve nontrivial filter efficiency distance error probability construction indyk motwani exist choice mismatch coordinate ensures collision HA vector within distance however existence argument algorithm hence interested explicit construction LSH without false negative  explicit construction vector bound achieve existentially independently link similarity without false negative  extremal graph theory optimal  construct corrector hypergraphs incur collision random vector vector distance query optimal covering parameter finite geometry construction achieve data structure construction achieve filter efficiency approximation factor dependence bound crucial dimensional sparse data technique allows tradeoff filter efficiency parameter theoretical analysis filter efficiency significantly improve constant mention independently lossless context approximate computer vision analytical article differs focus filter efficiency random vector difference data vector query random location permute dimension described scheme aim random generally entropy data become efficient vector within distance query another variation scheme recently construction CoveringLSH construction ham projection ham projection lemma HA indyk sketch verify random contains collide function vector within distance unfortunately construction incorrect theorem calculation article factor exponent bound acm transaction algorithm vol article publication date june pagh collection correspond nonzero vector hadamard code message ham projection HA equation exists exists proof vector vector within distance collide function implicit vector mapped zero function zero vector definition ham projection HA exists HA trivial interested nonzero chosen collision rare vector vector aim around indexed nonzero vector depends  vector remark function integer binary representation construction identical covering finite geometry however elementary presentation knowledge finite geometry define vector mod otherwise dot vector vector nonzero binary representation lemma ham projection HA  proof satisfy define whenever recall fori interpret asr dimensional vector span dimension dimensional exists vector orthogonal span mod desire function balance nonzero vector HA precisely acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative lemma suppose andm HA proof nonzero vector dot exactly vector namely nontrivial coset orthogonal complement comment optimality HA around error hash function hash function within factor upper bound lemma choice mapping analyze chosen uniformly independently lemma satisfied suffices balance relate collision probability ham distance theorem random HA HA proof lemma exists HA lemma implies fix define equation correspond  HA fori  random independent random probability linearity expectation sum choice comment remark theorem skip reader proceed algorithmic vector sample hadamard code consist vector dimension vector define mod interpret  vector nonzero hadamard codewords ham minimum distance however error ability yield nontrivial construction improve function balance mapping vector roughly improve version lemma improvement significant exposition analyze variant acm transaction algorithm vol article publication date june pagh glance ability avoid collision CoveringLSH filter significant however similarity ham assume without loss generality distance query distance odd achieve splitting dataset odd ham respectively handle separately query radius perform radius radius data distance reduces collision distance assume maximum distance report advance algorithm affect efficiency improve maximum distance distance distance building data structure upper bound subfamily indexed vector collision guaranteed distance function subfamily subfamily   randomly binary representation theorem implies invariant distance satisfies  interpret integer distance iteration return guaranteed distance pseudocode data structure construction query CoveringLSH approximation factor directly namely threshold approximate logn threshold appropriate entropy datasets dimension logn distance tend discussion setting theorem implies efficient approximate ΔS ΔS ΔS bound compute ham distance query vector vector asymptotic complexity indyk motwani bound collision sum HA logn compute HA compute distance vector within distance collide HA ΔS bound supplement probability bound restart data structure exceed factor logn data structure resort brute fails happens polynomially probability bound performance dataset data threshold approximate amount distribution distance data significantly plus vector bound indyk motwani straightforward implementation additional function sparse vector correspond python implementation available github http github com  pagh  acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative pseudocode construct query data structure described parameter radius return simplest instantiation CoveringLSH entropy data within distance query query  sought clog notation function random return random inner compute bitwise conjunction counting  denote information associate data structure function   integer vector dimension finally denotes ham distance comment vector reference occurrence memory achieve complexity global contains independent initialize   function construct reduce exists modification  asymptotic usage dense vector desirable explicitly vector function indeed approach pseudocode suppose vector vector distance  query vector brute within  linear approximate similarity vector distance collision probability function HA expectation hash collision vector query bound compute hash inspect hash collision instructive HA indyk motwani described performance parameter hash evaluation collision probability distance computation sample desire collision probability collision probability distance probability false negative hash collision distance risk false negative nontrivial requirement LSH scheme acm transaction algorithm vol article publication date june pagh collection collection dimension ham projection HA exists bound collection construction  construction efficient generalize construction arbitrary focus efficiency distance nutshell arbitrary choice logn achieve performance differs classical LSH factor exponent exponent classical LSH approximate whenever logn integer ham projection mask data structure  cannot specify query without loss generality assume integer intuition logn increase average mask reduce collision probability increase correlate fashion maintain guarantee collision distance increase essentially sample hadamard code sample logn decrease average mask increase collision probability refinement partition distributes dimension across partition balance introduce false negative data exist partition distance query average across partition denote respectively partition partition dimension belongs conceptually expand dimension dimension simply copying increase distance factor distribute acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative dimension expand vector partition vector distance exist partition expand vector distance interval denote interval interval modulo wraparound random function interval define vector indexed vector define vector mod preimage vector dot vector vector nonzero  lemma choice choice function define ham projection HA proof satisfy argue exists vector equation mod arg min arbitrarily informally partition pigeonhole principle problematic vector associate span dimension exist orthogonal vector implies mod false desire extension theorem theorem random HA HA  proof lemma theorem consequence lemma acm transaction algorithm vol article publication date june pagh vector nonzero correspond hash argue random choice mod equality independence vector mod depends function independent probability probability equation theorem linearity expectation sum vector choice parameter complexity approximate radius bound hash plus hash collision query vector approximate define   HA expectation choice parameter theorem minimizes nontrivial ideally balance integrality parameter filter efficiency HA bound achieve numerically parameter setting theoretical analysis choice strategy reduce subproblems sweet corollary exist explicit randomize ham projection HA HA nln nln proof  sum  theorem yield  bound factor definition factor integer instead factor acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative memory access similarity vector within ham distance query vector plot respectively dataset distance exists approximate approximation factor bound exhaustive ham radius optimistically assumes dimension  dataset bound classical LSH indyk motwani fix false negative probability false negative probability latter ensure false negative sequence bound CoveringLSH partition multiple partition finally bound  nln theorem sum  exp nln inequality exp construction  generalization construction efficient distance logn construction existence asymptotically data structure distance logn achieve query unlikely faster linear realistic constant contrast seek reasonable constant factor useful acm transaction algorithm vol article publication date june pagh generalization vector dot modulo prime corresponds finite geometry covering elementary presentation without explicitly refer finite geometry vector aim around indexed nonzero vector generalize depends function vector define vector mod otherwise dot vector vector nonzero lemma ham projection HA proof identical proof lemma difference relate collision probability ham distance theorem random HA HA proof proof completely analogous theorem lemma mod sum suppose logn prime pcr prime refer choice theorem collision sum HA compute HA compute distance vector within distance collide HA ΔS remains bound accord prime gap  reference exists prime cube explicit constant assume implies exists prime exceeds constant prime upper bound nlog logn logn acm transaction algorithm vol article publication date june CoveringLSH locality sensitive hash without false negative improvement asymptotically improve bound without loss generality assume  logn vector dimension  integer crt logn increase distance factor exactly logn increase ΔS factor logn logn usage asymptotic complexity indyk motwani polylogarithmic factor comment principle combine construction partition achieve improve parameter choice however improve bound chosen direction constant upper bound bound maximum gap prime proof  conjecture prime gap imply replace constant exponent polylogarithmic overhead proof theorem data structure corollary bound ref minimizes  corollary inequality usage logn bucket pointer array vector query bound  conclusion PROBLEMS ham LSH similarity implement avoid false negative efficiency conventional LSH practical indeed practicality ham distance recently demonstrate  pagh obvious completely gap loss efficiency non constructive bound gap factor recently  manage gap additive exponent investigate tradeoff CoveringLSH superlinear employ data independent function achieve guarantee linear linear data structure query polynomial usage performance achievable false negative another direction distance similarity sankowski   recent progress direction finally CoveringLSH data independent improve performance datadependent technique  author thanks   useful comment thomas       reference explicit  indyk information reduction metric ham metric member acm transaction algorithm vol article publication date june pagh scalable similarity project reward discussion finally thanks anonymous reviewer numerous constructive suggestion