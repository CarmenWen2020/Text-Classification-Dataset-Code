introduce doubly balance graph partition graph demand function satisfy objective partition max constant exists randomize polynomial moreover perfect partition mod randomize polynomial technique extend arbitrary necessarily excess demand split evenly apply partition graph node subgraphs preserve approximately proportion CCS concept mathematics compute graph theory graph algorithm additional graph partition grid  introduction grid  effective mitigate cascade failure grid challenge partition network component independently demand almost equality demand however sufficient independent operation important infrastructure physical capacity safely transfer node demand node initial network likely capacity community almost algorithm literature heuristic effective simulation motivate application formally introduce doubly balance graph partition DBCP graph demand function satisfy objective partition thatG andG max constant excess demand split roughly evenly partition subgraphs simultaneously balance objective demand within partition objective previously   independently graph partition arbitrarily subgraphs however neither proof constructive polynomial algorithm partition linear algorithm algorithm   complexity objective related optimization  dyer  various NP hardness inapproximability relevance extensive literature balance partition necessarily minimize relevant objective balance demand alone extension objective balance corresponds objective balance demand extension partition balance node simultaneously suppose node graph partition node partition graph subgraphs split approximately evenly node summarize technique grid withstand failure standard therefore focus mainly graph partition demand balance objective parallel balance alone technique NP graph perfectly balance partition easily  graph  perfectly balance partition graph nonseparating decomposition graph   challenge balance objective demand focus occupies bulk article existence algorithm graph easy cannot achieve perfection objective without sacrifice completely objective simpler approach graph acm transaction algorithm vol article publication date march doubly balance graph partition demand balance node suffices partition roughly balance respect graph later basis handle graph partition perfectly balance respect objective mod otherwise slightly parity partition perfect objective node furthermore partition construct randomize polynomial approach convex embed characterization connectivity adapt purpose convex embed desire geometric purpose nonseparating decomposition graph   obtain suitable embed analyze graph reduce subcases separation split graph component perform series contraction achieve graph contract subgraphs partition algorithm extend algorithm graph handle complication arise contract subgraphs briefly discus partition graph node split roughly evenly conclude DEFINITIONS background overview definition graph theoretical article relatively standard borrow   graph  graph theory  subgraphs  graphG node deletion disconnect graph subset node graph denotes subgraph induced denote neighborhood node denote connectivity connectivity graph minimum graph connectivity graph graphG  node define node numbered receives node receives node adjacent numbered numbered node tarjan series parallel graph graph series parallel terminal sequence operation graph consist series parallel graph terminal respectively graph identify parallel composition acm transaction algorithm vol article publication date march series parallel graph terminal respectively graph identify series composition easy series parallel graph operation parallel composition nonseparating induced cycle decomposition subgraph graphG ing nontrivial ing internal vertex decomposition decomposition cycle graph decomposition vice versa decomposition linear cycle nonseparating induced cycle cycle avoids node theorem tutte graph node nonseparating induced cycle avoid previous theorem node   cycle theorem moreover graph nonseparating decomposition define decomposition avoid vertex cycle contains internal vertex decomposition graphG avoid vertex nonseparating decomposition graph internal vertex theorem   vertex graph nonseparating induced cycle avoid nonseparating decomposition partition graph subgraphs theorem exist partition graph subgraphs independently   theorem   graph positive integer satisfy exists partition satisfy although existence partition polynomial algorithm partition easy partition   algorithm nonseparating decomposition graph convex embed graph overview beautiful convex embed graph finite convex acm transaction algorithm vol article publication date march doubly balance graph partition hull conv  rank define rank dim conv rank subset graph convex embed mapping conv convex embed theorem LetG graph vertex equivalent convex embed theorem asserts existence graph proof theorem inspire physic embed graph behave ideal vertex formal summary proof define arbitrary assign positive elasticity  letc vector coefficient almost coefficient vector embed minimizes potential function  convex embed euclidean norm moreover embed minimizes compute    hence embed linear equation matrix multiplication  demand objective partition graph subgraphs balance approximately demand partition without regard optimization refer balance partition integer  definition graph demand function satisfy  partition minimize clearly minimum occurs easy exists perfect partition hence  strongly NP proof analogous concern partition graph subgraphs node positive proposition strongly NP  NP acm transaction algorithm vol article publication date march proof proof theorem modest reduction XC variant define subset exactly contains instance XC graph vertex    easy verify contains  clearly partition clearly cannot node negative hence consists subset consist remain node attach node respectively demand node although NP satisfy graphG maxj easily linear node proposition graph node maxj proof clearly immediately integer maxj arbitrary node assume without loss generality node define easy hence exist index accordingly letv hence maxj easy remark bound proposition tight cycle easy maxj partition  extend partition graph LetG graph function satisfy  acm transaction algorithm vol article publication date march doubly balance graph partition partition minimize proposition perfect partition efficiently partition maxj proof algorithm approach algorithm   partition graph prescribed nonseparating decomposition graph described proposition graph node maxj proof function pmax maxj  pmax recall implies pmax hence pmax furthermore hence pmax pmax implies therefore assume negative symmetric assume without loss generality theorem nonseparating decomposition avoid node ignore internal node decomposition consist node distinguish define exist index happens easy thatv partition hence partition hence partition accordingly similarly accordingly setV   easy partition acm transaction algorithm vol article publication date march therefore exist index define node attach distinct node assume without loss generality simplicity denote internal node define suppose index index assume index exactly accordingly happens hence contradicts assumption therefore easy partition index hence accordingly easy partition exactly previous suppose assumption index proof   formally define DBCP definition graph demand function satisfy  DBCP partition max acm transaction algorithm vol article publication date march doubly balance graph partition series parallel graph observation remark technique apply requirement excess demand split approximately evenly concentrate graph construct efficiently partition focus contains essential technique generalize arbitrary correspond theorem graph partition perfect respect objective satisfied  lov√°sz partition perfect respect objective satisfied observation combine objective challenge insist cannot bound insist cannot bound  graph counterexample observation exists graph DBCP proof graph depict  terminal node terminal node easy partition graph node node node consist node another hence partition graph observation exists graph DBCP proof graph depict parallel easy terminal node terminal node cannot otherwise terminal node terminal node easy verify minimize exactly terminal node terminal node moreover remain partition acm transaction algorithm vol article publication date march proof lemma bound suffices graph treat graph graph graph assume partition essentially perfect respect objective essentially imply hence multiple indeed perfect partition mod almost perfect partition treat contains cycle lemma embed graph introduce described DBCP perfect lemma mod exists DBCP mod moreover partition randomize polynomial proof assume mod proof mod theorem graph convex  moreover embed linear equation assume thatv ing  theorem convex embed around tangent perpendicular node project node onto embed convex node projection node node definition convex embed node convex hull project project project moreover acm transaction algorithm vol article publication date march doubly balance graph partition pairwise whichever node projection hence node projection node instance projection node hence node projection node projection tangent similarly partition partition tangent tangent AB diameter partition completely switch partition hence tangent tangent partition positive nonpositive rotate around node projection becomes perpendicular connects embeddings node partition node ofv project switch node happens becomes perpendicular connects embed node collinear hence node projection therefore node node hence mod partition therefore tangent partition project node graph perpendicular sort slope node ofG alternatively priority queue rotate initial yield partition  graph however proof lemma cannot directly anymore project node onto node projection necessarily node node necessarily projection lemma purpose lemma compensate freeness proof lemma graph triple partition approach proof lemma lemma exists partition acm transaction algorithm vol article publication date march  moreover partition proof algorithm   nonseparating cycle node consecutive node node exists node node adjacent node shorter lemma partition graph  convex embed mapping node mapped node inv mapped moreover embed randomize polynomial proof convex embed mapping embed node freedom elasticity coefficient vector anything zero vector cij cij assume exists node embed embed minimizes potential cij independently minimize axis axis min min min min cij min cij node node hence minimizes minimizes contradiction assume cij hence contradicts minimizes therefore node acm transaction algorithm vol article publication date march doubly balance graph partition proof lemma theorem hop hence inequality node argument node embed define embed cij cij  node however previous hence node exists node SinceG andv  ofG inv node cij hence previous hence node therefore embed depict polynomial suffices vector vector euclidean norm hence vector embed acm transaction algorithm vol article publication date march lemma graph DBCP proof proof lemma however lemma desirable partition partition embed described lemma embed partition obtain approach proof lemma implies argument proof lemma theorem theorem mod exists DBCP mod moreover partition randomize polynomial proof assume mod proof mod lemma partition described lemma lemma convex embed ofG described lemma depict proof proof lemma around tangent   project node onto node projection node node however setV node projection node projection node embed assume project node node projection respectively embed hence assume node embed contains node contains node halfplane embed easy node embed proof exactly proof lemma tangent AB diameter partition completely switch partition hence tangent tangent partition positive negative partition perpendicular connects embed exactly connects node node hence mod acm transaction algorithm vol article publication date march doubly balance graph partition partition therefore tangent partition easy graph approach proof lemma theorem arbitrary necessarily partition maxi corollary DBCP arbitrary necessarily satisfy maxi odd moreover randomize polynomial proof proof precede proof proof fix convex embed graph satisfy lemma earlier tangent perpendicular node correspond partition node previously assume without loss generality partition tangent assume hence  role switch therefore tangent  consists replace node another node hence pmax pmax maxi pmax pmax pmax pmax partition satisfies pmax hence pmax proof odd tangent perpendicular node node project remain node node earlier assume without loss generality tangent yield partition pmax partition assume pmax implies hence  role node played partition argument rotate tangent pmax pmax therefore satisfies pmax hence pmax graph define pseudo node graph definition inspire definition definition pseudo node sequence node pseudo pseudo node denotes node pseudo acm transaction algorithm vol article publication date march pseudo notion lemma separation none component DBCP proof lemma building proof graph lemma graphG andG separation component    DBCP proof separation component  pseudo pseudo assume increase partition pseudo subset proof greedily pseudo becomes really implies pseudo longer pseudo similarly another pseudo pseudo without loss generality assume fromu node without loss generality assume partition hence assume fix node node partition assume node define partition assume define node subset define hence partition argument node hence partition corollary series parallel graph DBCP proof series parallel graph separation component node furthermore separation linear derivation construction corresponds leaf correspond internal node acm transaction algorithm vol article publication date march doubly balance graph partition proof lemma corresponds subgraph series parallel composition subgraphs correspond correspond subgraph maximum node node becomes node terminal node node parallel composition graph correspond separation desire component node suppose  series composition  correspond letw terminal  terminal  terminal acm transaction algorithm vol article publication date march lemma assume without loss generality terminal node node node graph parameter series parallel graph generalize lemma graph define contractible subgraph contraction graph definition induced subgraph graph contractible VH EH component moreover replace VH node obtain graph contract remark contractible subgraph graph pseudo associate proof theorem notion graph contraction lemma partition graph reduce graph pseudo node contract graph illustrate lemma graph separation component  acm transaction algorithm vol article publication date march doubly balance graph partition contraction transform graph contract subgraphs proof separation assume separation  component ofG  assume component  component contract  andv component contract component node component suitable separation suitable contract graph linear hopcroft tarjan algorithm component definition graph contract subgraphs define subset node lemma strengthens extends lemma graph lemma graph obtain contraction exists partition  moreover partition proof partition assume graph therefore assume exists counterexample graphG partition desire derive contradiction theorem nonseparating decomposition construction internal node ing define series graph nonseparating decomposition eventually contradiction adjacent node proof suppose adjacent node SinceG andv adjacent respectively node ofG  nonseparating decomposition easy partition biconnected  otherwise  component contains node acm transaction algorithm vol article publication date march easy partition therefore node hence generally internal node correspond graph consists parallel disjoint node proof suppose cycle clearly desire satisfied partition therefore internal node consists disjoint node endpoint lighter node adjacent easy partition lighter internal node partition hence conclude satisfies consists node proof suppose disjoint assume without loss generality node adjacent node hence addition conclude hence consists node internal node endpoint internal node homeomorphic graph node endpoint coincide node graph planar graph planar embed sum twice node therefore bound cycle cycle embed outside chordless node adjacent easy chordless consecutive node easy partition satisfies lemma concludes proof lemma lemma lemma proof theorem DBCP acm transaction algorithm vol article publication date march doubly balance graph partition suitable convex embed graph lemma lemma embed node contract pseudo appropriately along correspond argument proof theorem tangent rotates projection node namely node perpendicular rotate theorem DBCP  moreover randomize polynomial proof lemma separation component  lemma prof theorem contraction transform graph proof proof theorem contains proof simpler proof lemma avoid repetition approach proof theorem theorem lemma partition described lemma lemma convex  described lemma depict embed convex embed induced subgraph ofG pseudo ofG node random connects node node pseudo node random connects hence convex embed almost surely node  lemma embed subset node subset induces subgraph proof proof theorem around tangent  project node ofG onto projection distinct label node projection letv denote node embed described lemma lemma define contains node node exist index consequently index otherwise hence andv partition therefore obtain partition acm transaction algorithm vol article publication date march assume without loss generality initial tangent AB diameter partition completely switch partition  hence tangent tangent partition positive nonpositive projection perpendicular connects switch node correspond  reverse affected node consecutive affected node similarly assume projection slightly perpendicular projection slightly perpendicular define argue previously partition assume node projection consecutive node consecutive node revers recall reverse node node hence cannot extend node therefore hence argue partition regard computation partition compute contract graph convex embed computation easily corollary approach proof theorem arbitrary necessarily easy verify argument  DBCP partition maxj corollary DBCP necessarily satisfy maxj moreover randomize polynomial GRAPHS   assume thatG graph node  ifi ifi corollary implies partition ofv split node evenly assume node corollary graph node partition acm transaction algorithm vol article publication date march doubly balance graph partition assume partition compute randomize polynomial proof suppose without loss generality equation corollary partition therefore integer hence therefore contains node node perfect partition assume without loss generality corollary implies partition max ratio node differs ratio graph hence node partition approximately proportion graph corollary graph node assume without loss generality randomize polynomial partition ratio node differs ratio graph corollary however corollary extends graph conclusion article introduce partition graph subgraphs simultaneously satisfy objective balance demand within partition generally split approximately equally excess demand roughly comparable graph achieve objective graph partition essentially perfectly balance objective furthermore partition compute polynomial paradigmatic objective balance easily partition graph node balance respect overall novel technique article apply partition heterogeneous network various context direction extend theory algorithm doubly balance partition demand objective analogue   partition graph respect corresponds extend demand polynomial algorithm construct partition finally extend graph node partition suitable graph node subgraphs preserve approximately diversity proportion population  graph node already