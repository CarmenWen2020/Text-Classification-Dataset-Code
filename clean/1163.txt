classic partial sum ultra ram model computation model extends classic ram model ultrawords standard arithmetic boolean operation scatter memory access operation access non contiguous location memory ultra ram model capture  vector processor architecture data structure partial sum constant ultrawords addition input operation doubly logarithmic bound polynomial data structure improve superlinear constant ultrawords elegant ram data structure fenwick technical contribution efficient parallel ultra ram implementation fenwick likely independent previous keywords partial sum ultra ram parallelism introduction array integer partial sum maintain data structure operation return partial sum classic data structure partial sum query application index dynamic rank dynamic array arithmetic cod bound perspective central development technique bound classic model computation complexity partial sum understood tight logarithmic upper bound operation hence practical model computation capture hardware advance overcome logarithmic barrier model ram byte overlap  model computation  model extends standard ram model individual precise model depends layout memory architecture feasible hardware prototype built  model partial sum operation parameter bound organize layout standard plug constant constant alternatively achieve recently introduce ultra ram UWRAM model computation UWRAM model extends ram model ultrawords model standard arithmetic boolean operation ultrawords scatter memory access operation access location memory specify ultraword parallel UWRAM capture vector processor architecture detail UWRAM model simulate algorithm  model UWRAM model slightly increase simulate partial sum partial sum operation parameter constant constant alternatively simulate linear achieve setup revisit partial sum UWRAM algorithm significantly improves overhead previous array integer data structure partial sum data structure modifies input array replace entry efficiently operation addition modify array data structure ultrawords definition extends standard implicit data structure concept UWRAM constant ultrawords instead standard clearly without modification computation ultrawords impossible distinguish restrict UWRAM minimal instruction ultrawords consist addition subtraction shift bitwise boolean operation multiplication UWRAM extends instruction restrict UWRAM multiplication operation ultrawords theorem array integer construct partial sum data structure operation restrict UWRAM previous theorem bound improve overhead constant ultrawords important practical application vector processor limited ultrawords available technically elegant ram data structure fenwick detailed description fenwick operation sequentially traverse implicit structure efficiently compute access structure parallel prefix sum computation ultrawords location access scatter memory operation access parallel exponential improvement fenwick bottleneck algorithm prefix sum computation interestingly multiplication compute prefix sum constant corollary multiplication UWRAM corollary array integer construct partial sum data structure operation constant multiplication UWRAM multiplication prefix sum computation image operation cannot implement constant depth polynomial circuit therefore likely practical implement ultraword however corollary achieve significant improvement UWRAM operation UWRAM capture processor worth investigate direction outline organize review UWRAM model computation fenwick UWRAM implementation fenwick finally discus extension ultra ram model ram model computation consists infinite memory instruction arithmetic boolean memory access instruction available standard program assume pointer input hence input complexity ram algorithm instruction complexity algorithm ultra ram UWRAM model computation extends ram model ultrawords distinguish restrict UWRAM minimal instruction ultrawords consist addition subtraction shift bitwise boolean operation multiplication UWRAM additionally multiplication complexity instruction standard ultrawords complexity standard algorithm restrict UWRAM capture vector processor architecture instance intel avx vector extension operation factor parallelism due similarity adopt parallelism technique ram UWRAM briefly review primitive technique ultraword consecutive notation denote similarly numbered rightmost non zero simplicity presentation reserve leftmost parallelism operation remove assumption asymptotic ultraword simulate operation precomputed constant assume available compute compile image KB image layout ultraword leftmost reserve componentwise addition addition componentwise comparison subtraction copying subtraction implement operation ultrawords later already available hardware vector processor architecture componentwise arithmetic bitwise operation straightforward implement standard parallelism technique ram instance ultrawords compute componentwise addition ultraword ing mask overflow exponentiation denote repetition componentwise ing mask ing contains iff another ultraword extract accord ultraword otherwise mention operation constant restrict UWRAM ultraword prefix sum ultraword assume integer compute prefix sum exceed maximum available define lemma ultraword compute prefix sum restrict UWRAM multiplication UWRAM proof restrict UWRAM implement standard parallel prefix sum algorithm survey  simplicity assume algorithm consists phase conceptually construct traverse perfectly balance binary height leaf internal node denote respectively phase performs traversal computes node integer leaf correspond integer internal node phase performs traversal computes integer internal node phase integer leaf prefix sum shift shift prefix sum perfectly balance implement phase constant shift addition shift addition constant computation maintain constant ultrawords multiplication instruction simply constant mask rightmost prefix sum  detailed description memory access UWRAM standard memory access operation sequence contiguous interestingly UWRAM scatter access operation access memory location necessarily contiguous parallel ultraword memory address scatter load content address ultraword contains content memory location ultrawords scatter content memory location scatter memory access capture memory model ibm architecture scatter memory access operation propose larsen pagh context model computation fenwick array integer assume simplicity fenwick data structure replaces array unchanged otherwise replace entry sum recurse subarray array subset partial sum organize layout image KB image array fenwick partial sum rightmost endpoint instance query compute sequence index index denote rightmost integer define sum sequence compute return sequence plus instance sum sequence hence access entry hence recover array operation compute compute sequence index index define update sequence sequence consecutive plus instance update sequence hence operation partial sum ultra ram efficient implementation fenwick UWRAM model computation fenwick array described constant ultraword constant computation sum update sequence UWRAM implementation operation compute sum update sequence compute sum update sequence cannot directly apply recursive definition instead express sequence prefix sum efficiently derive input integer lemma compute UWRAM sum sequence update sequence respectively define define offset sum sequence offset update sequence sequence difference sum update sequence respectively definition hence sum offset correspond rightmost corresponds rightmost rightmost corresponds immediately rightmost rightmost instance offset sum sequence correspond binary representation similarly update offset hence corresponds rightmost rightmost consecutive flip rightmost instance offset update sequence sum compute construct sum sequence ultraword scatter retrieve entry parallel another ultraword finally sum entry ultraword compute compute ultrawords algorithm image KB image compute sum sequence blank contains duplicate precomputed mask bitwise prefix sum non zero shift sum sequence obtain componentwise subtraction compute offset compute ultraword offset sum sequence otherwise non zero entry offset sum sequence construct ultraword consist duplicate compute bitwise mask discussion ultraword multiplication UWRAM construct constant restrict UWRAM construct repeatedly shift bitwise computation constant model compute sum sequence compute ultraword non zero entry sum sequence compute prefix sum non zero compute prefix sum extract correspond non zero extraction ultraword ultraword extract non zero described shift ultraword finally ultraword non zero sum sequence lemma prefix sum computation constant multiplication UWRAM restrict UWRAM remain constant compute sum finally compute scatter retrieve ultraword compute prefix sum sum scatter constant prefix sum computation constant multiplication UWRAM restrict UWRAM assume simply temporarily computation suffices perform phase prefix sum computation proof lemma sum retrieve entry operation constant multiplication UWRAM restrict UWRAM update compute algorithm modify modify computation ultraword contains update offset update offset otherwise construct mask contains elsewhere compute bitwise negate finally discussion ultraword contains offset negative offset subtraction addition update sequence ultraword scatter retrieve ultraword construct ultraword correspond non zero ultraword finally scatter update constant operation hence obtain complexity operation constant multiplication UWRAM restrict UWRAM summary restrict UWRAM multiplication UWRAM operation fenwick array constant ultrawords completes proof theorem corollary extension sometimes operation context partial sum return return mention trivial contrast operation easily lend efficient parallel implementation UWRAM straightforward implement traversal fenwick technique useful UWRAM investigate complexity operation UWRAM precise relation UWRAM  model computation simulate  algorithm overhead approach UWRAM algorithm significantly precise relation model simulation