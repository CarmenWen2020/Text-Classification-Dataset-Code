span generation graph approach graph theory algorithm technique namely conquer propose performance propose algorithm benchmarked exist algorithm algorithm implement parallel domain basis comparison circuit generate cpu algorithm randomly generate graph instance platform keywords conquer graph theory span introduction span focus academician graph related application medical computer chemistry biology astronomy computer image processing networking social medium others minimum span span computation minimum span graph computation span evolution approach adopt despite exist algorithmic technique distinct algorithm developed algorithm sixty algorithm completely approach conquer generate span graph conquer algorithmic paradigm phase conquer combine per conquer paradigm recursively subproblems posse subproblems recursively combine rigorous comparison algorithm standard algorithm approach domain respect varied instance anticipate unique approach towards comparison graph generate enrich concerned domain application span graph restate node distinct combination minimally without introduce cycle node situation essential public transportation authority identify route exist location destination within primary input route public transportation apply restriction traffic route etc route location  strategy emergency similarly extremely important network planner designer understand route exist telecom network connects node fault tolerant network link failure occurs simultaneously network supportive simulation prevent overcome various link failure scenario impact analysis proactive nowadays social networking become mainstream communication mechanism across globe monetize social networking data various social network data typically model graph individual model node communication individual model link monetize raw social network data essential identify influencers detect community various advertising agency data target campaign detect community essential understand node within community span exist allows advertisement agency define optimal campaign strategy application span minimum span mst computation probably significant practical application mst visualize constraint version span graph however application compute mst graph MSTs sort parameter graph MSTs graph approach adopt span input graph associate individual sum individual span sort report hence generalize application span graph model undirected graph combination minimally without cycle node graph address various scenario consideration algorithm propose article algorithm selection phase user refer benchmarking obtain research article along additional constraint compute platform program chosen forth literature survey generation span graph explore research graph theory adopt academician purpose namely elementary transformation successive reduction algorithm adopt generate combination graph sequence algorithm berger char gabow myers   sen   elementary transformation initial generates replace suitable algorithm    ramesh     category successive reduction graph reduce subgraphs graph obtain subgraphs algorithm  smith algorithm mention algorithm category implementation subsequent comparison algorithm devise mention regard mention classification exhaustive technique span generation developed continuously future worth mention algorithm generate span entirely technique category highlight initiate generation convert graph equivalent underlie approach algorithm ASTG dcc glance algorithm ASTG dcc span generation conquer combine propose generates span conquer paradigm graph without pendant input terminates generate span algorithm glance briefly image KB image algorithm ASTG dcc detailed description development ASTG dcc removal pendant mention conquer combine phase algorithm mention vividly respectively phase phase generation respectively development algorithm ASTG dcc focus development algorithm span generation conquer combine algorithm ASTG dcc illustration suitable conquer technique algorithm consists phase splitting graph fundamental circuit conquer generation collection component satisfy predefined criterion combine combine component data structure component graph stage involve development algorithm removal pendant remove pendant recursively graph pendant vertex vertex graph pendant graph incident pendant vertex concept pendant graph span remove span graph obtain removal pendant ensure presence resultant span graph recursive removal pendant pendant removal pendant resultant pendant remove remain pendant recursive algorithm remove PE remove pendant input graph obvious equivalent graph pendant cardinality ES VS zero image KB image algorithm remove PE splitting graph circuit phase algorithm ASTG dcc graph circuit preferably fundamental circuit initial span graph obtain apply bfs breadth dfs depth traversal technique assume graph vertex consist split span label non exists circuit subgraph induced circuit fundamental circuit circuit initial span maximum fundamental circuit algorithm fundamental circuit generate initial dfs obtain arbitrary vertex vertex conquer generation component important phase algorithm define component mostly responsible generation effectively determines efficiency algorithm classify mention fundamental circuit adjacent circuit  vertex adjacent circuit  pivotal circuit component namely criterion subsequent classification circuit creation eac VAC algorithm defines circuit vertex adjacent circuit  adjacent circuit  vertex adjacent circuit adjacent circuit graph vertex adjacent vertex vertex adjacent circuit adjacent circuit graph adjacent circuit circuit   graph selection pivotal circuit pivotal circuit circuit maximum  multiple circuit maximum  exist input graph resolve arbitrarily circuit designate pivotal circuit selection pivotal circuit underlie significance later article knowledge selection circuit chosen fundamental circuit component vertex circuit marked component mandatory component component graph pivotal circuit previous foremost component graph circuit graph circuit vertex adjacent pivotal circuit circuit component circuit component circuit vertex adjacent circuit component adjacent neither adjacent vertex adjacent otherwise till circuit scan theorem mention vertex adjacent circuit circuit span generation theorem circuit vertex adjacent combination sequence circuit resultant circuit generation span ASTG dcc proof vertex adjacent circuit adjacent vertex articulation vertex adjacent circuit consideration cycle chain circuit articulation combination exclude circuit graph structure obtain span however resultant graph obtain span circuit consideration inevitably composite circuit adjacency contradicts assumption theorem regard mention sometimes circuit graph neither vertex adjacent adjacent disjoint fundamental circuit graph disjoint circuit treat component circuit clarify mention graph vertex disjoint fundamental circuit bridge bridge graph remove disconnect graph circuit bridge remove bridge disconnection circuit graph vertex adjacent treat component image KB image vertex disjoint circuit selection component chosen vertex belong component unvisited vertex creation component component influence selection pivotal circuit regard arise unvisited vertex vertex component component partition compose maximal unvisited vertex along incident exclude already partition vertex directly component component mention circuit constitute vertex component vertex remain unvisited component hence component along vertex component whereas vertex exclusive component image KB image graph component vertex graph multiple component disconnect vertex combine circuit constitute vertex component vertex remain unvisited however directly component hence along incident along incident component vertex exclusive component respectively vertex situation mention graph understand graph graph partition partition consists vertex along hence maximal unvisited vertex unvisited incident partition consists vertex incident namely remains unvisited identification partition unvisited vertex partition incident selection component consist contains vertex component component generation component influence selection pivotal circuit component bridge graph component already mention previous component define input graph regard cardinality component denote refers component graph similarly meaning component component member lemma member component disjoint proof component fundamental circuit encompass vertex vertex belonging circuit belong circuit incident formation component endpoint unvisited component accord guideline towards formation component component formation component formation circuit component component vertex component corollary vertex component vertex component vertex graph corollary eventually component contains vertex corollary component cardinality component graph mention earlier mandatory component whereas optional illustrate concept graph vertex apply dfs vertex adjacent vertex dfs subsequently fundamental circuit concept selection component VAC eac mention component graph bold vertex remain unvisited respect component hence component encompass dot remain component graph component bold consequently remain distinct component dash component graph image KB image graph component graph component corollary graph eliminate removal pendant vertex combine combine component mainly responsible generation purpose component combine component properly systematic manner resultant span phase formation component component parameter component denote serial component component assign unique component denotes member specific component exclusive vertex denotes vertex exclusive component member component exclusive vertex vertex exclusive component minimum denotes component combination exclusive vertex component vertex disconnect maximum denotes maximum component whereas component component essentially circuit chosen maximum component minimum component zero component bridge component bridge component component generate combination phase phase generation span phase generate span combination component obtain component component component specific component exclusive vertex role specific component combination traverse exclusive vertex component treat invalid discard valid combination consist component combine another valid combination component combination phase consequently non generate phase span generation claimed theorem theorem sequence generate phase combination span proof sequence generate phase combination span per propose algorithm input graph vertex broken zero zero component component comprises fundamental circuit component comprises vertex incident component unvisited vertex directly component comprise unvisited vertex correspond incident component comprises belong component initial evaluate scenario conquer propose algorithm input graph component per phase propose algorithm combination traverse exclusive vertex valid combination generation component consists fundamental circuit maximum generation component therefore input graph component selection strategy adopt phase circuit generate span conquer input graph component per propose algorithm component comprises vertex adjacent circuit individual component contains fundamental circuit vertex disjoint circuit component neither vertex adjacent circuit resultant circuit per theorem vertex disjoint circuit therefore selection strategy adopt phase circuit generate span conquer input graph component component per propose algorithm component consist maintains relationship component maintains connectivity adjacent vertex propose algorithm considers combination traverse exclusive vertex maintain connectivity component restriction exclusive vertex per component therefore selection ensures incorporate member component along member component circuit formation generate span conquer input graph component zero component component per phase component bridge role hence neither contribute circuit formation generation component bridge contribute circuit formation explain glance understand scenario glance proof theorem component component component observation circuit max resultant circuit vertex adjacent vertex disjoint circuit vertex adjacent vertex disjoint circuit circuit accord theorem  traverse exclusive vertex maintain connectivity per component along member component circuit formation  component bridge phase circuit formation bridge circuit per conquer propose algorithm undirected input graph broken scenario due selection adopt phase formation circuit hence initial proven false discussion infer satisfied guarantee formation phase combination consist combination max  min  component component bridge stipulate component exclusive vertex component traverse phase generation span phase generate combinational combine component define component component graph combination treat valid adhere minimum maximum component towards attain validity moreover combination generate phase phase generation otherwise duplication arises unlike phase phase combination component possibility non generate non sequence disjoint component compute certainly contains cycle circuit component discard non apply dfs sequence generate phase detection elimination subgraphs circuit mention regard disconnect graph cycle dfs component important observation regard circuit phase component graph discovery relationship generate circuit input graph future research scope endpoint cannot exclusive component component contribute solely towards maintain connectivity vertex subgraph combination component endpoint component hence component mainly responsible traverse vertex graph possibility inclusion introduce circuit regard conclude component circuit unvisited vertex remains component hence unvisited remain already vertex component circuit non sequence generate component circuit unvisited vertex hence component unvisited component hence lesser circuit non sequence likely generate phase selection important aspect phase pendant vertex incident input graph already eliminate phase propose combination individual component instead randomly input graph furthermore component maximum minimum criterion define component definition adoption ensures approach brute distinct blindly input graph vertex perform individual combination optimization achieve significant standard brute highlight comparison char algorithm brute generate span undirected graph propose algorithm ASTG dcc evaluate circuit generate input graph instance significantly char algorithm ASTG dcc primarily due influence phase propose ASTG dcc achieves significant saving reduce circuit brute rejoin pendant obtain graph without pendant graph merge pendant remove ES obtain previous remain vertex vertex hence essentially remove pendant ES theorem termination algorithm ASTG dcc generates span without duplication proof ASTG dcc guarantee generate span analyze propose approach false ASTG dcc generates combination apply algorithm dfs bfs combination finally remove duplicate circuit non generation span propose algorithm combination doubt arises algorithm generate span input graph propose algorithm remove pendant input graph combine pendant intermediate compute ensure none pendant correspond vertex remains  generation therefore conclude propose pendant eliminates possibility become  phase upon graph exclude pendant correspond vertex primary objective phase fundamental circuit proof noticeable phase eliminate consideration conquer phase attempt fundamental circuit identify phase vertex adjacency various circuit propose algorithm  circuit arbitrarily adjacency designates pivotal circuit vertex disjoint circuit circuit treat pivotal circuit algorithm component namely criterion ensures none vertex  noticeable conquer phase irrespective component phase component vertex combine phase primarily phase phase algorithm smartly selects combination creates span later combine span generate phase phase algorithm generates combination component vertex graph algorithm excludes combination generate phase combination afterwards algorithm applies dfs perform report span essentially phase combine propose algorithm potential span due propose smart selection phase anyway generates span excludes generate phase therefore evaluate validity selection gap smart selection adopt phase phase algorithm considers component non bridge component however issue component  phase per selection combination exclusive vertex component discard issue legitimate span clearly phase discard  moreover combination traverse exclusive vertex component allows immediate reporting span without combination therefore combine phase combination phase phase desire span finally obtain span algorithm appends remove pendant report altogether desire span initial graph analyze individual propose algorithm propose discard combination eliminate legitimate span reporting otherwise hence initial false observation selection component affect generation explain motivation logic selection pivotal circuit earlier circuit adjacency vertex hence component component circuit adjacency  vertex hence component component phase generation circuit whereas phase phase non bridge component phase consequently evident non circuit generate phase due presence component worth mention absence component non generate phase however indeed presence component non increase circuit generate algorithm desirable component hence circuit adjacency pivotal circuit component corollary component compute mention regard selection initial dfs vertex dfs initiate role formation component fundamental circuit dfs component however eventually generate along non sequence another important observation regard bridge bridge input graph remove rejoin pendant removal bridge component graph vertex remains removal vertex algorithm separately component hence phase anymore description simpler efficiency algorithm increase graph instance bridge implementation inference efficiency indeed future scope algorithm exploration future researcher domain graph pendant due pendant vertex removal another resultant pendant due remove graph pendant image KB image graph pendant resultant graph removal pendant graph dfs initiate vertex basis fundamental circuit circuit image KB image decomposition fundamental circuit scan vertex circuit adjacent circuit   graph assume dfs mention circuit  VAC hence chosen pivotal circuit therefore marked component VAC component graph eac VAC graph  CC none CC none CC none component vertex hence component along incident namely hence non bridge component compute component graph generate phase component graph   exclusive        graph respectively combination combination combine phase hence generate phase sequence generate phase graph combination format component respectively generate sum exactly graph incidentally valid structure desire compute validity maintain maximum minimum constraint mention valid combination combination phase generate component sequence generate sequence generate sequence generate sequence generate consist non sequence apply dfs detect sequence discard non sequence underlined sequence finally merge pendant phase phase graph span hence essentially graph already component vertex exclusive endpoint component component component vertex remain unvisited formation component hence component exclusive vertex vertex interestingly component exclusive vertex graph component exclusive vertex namely graph circuit component longer exclusive vertex component another component namely exclusive vertex component graph image KB image graph component exclusive vertex corollary component exclusive vertex component exclusive vertex whereas component exclusive vertex vertex data structure complexity issue adjacency graph storage requirement vertex graph hence complexity algorithm removal pendant span graph fundamental cycle graph becomes hence detection circuit computation eac VAC selection pivotal circuit component vertex adjacent vertex disjoint circuit consume component exclusive vertex component average component component component average minimum maximum component respectively moreover component graph mention context relationship graph future scope research therefore average complexity phase generation similarly average complexity phase generation multiplier introduce dfs complexity phase obviously dominates complexity phase generation hence conclude mention computational complexity algorithm devise theorem theorem algorithm ASTG dcc computes span undirected graph component graph respectively average component respectively graph experimental newly devise algorithm ASTG dcc extensively benchmarked sequentially implement algorithm char       algorithm implement parallel domain intel core quad core processor ghz GB ram capacity implementation random graph instance intent primarily twofold demonstrate propose algorithm cpu sequential algorithm implement implement graph magnitude magnitude graph research outcome impressive cpu newly propose algorithm comparable exist algorithm faster others intentionally implement algorithm parallel benchmarking demonstrate sequential algorithm combination exist propose algorithm parallel propose algorithm implement parallel faster sequentially implement algorithm investigate intent obtain clearly depicts magnitude algorithm implement parallel faster sequentially implement previously benchmarking behaviour algorithm respect cpu instance assume instance graph vertex cpu algorithm format respectively apparent standard algorithm algorithm ASTG dcc generate graph instance undoubtedly eventually prof reference exist algorithm implement correctly experimental compute valid span randomly generate graph instance graph varies instance vertex       char algorithm ASTG dcc important observation drawn graph instance varies whereas density maximum graph percent graph instance execute generate billion execute instance algorithm depends factor instance span generate span generate depends distribute concentrate cluster subset vertex graph variation vertex graph vertex evenly distribute vertex possibility compute relatively cpu obtain algorithm parallel algorithm examines sequence span exists reduce circuit moreover unlike algorithm examine sequence algorithm examines sequence simultaneously earlier inherent parallelism algorithm reduction execute algorithm algorithm char algorithm ASTG dcc incorporate circuit comparative algorithm instance depict non sequence circuit generate comparative circuit generate char algorithm ASTG dcc instance vertex   circuit generate ASTG dcc char char ASTG dcc capture difference circuit generate char algorithm algorithm ASTG dcc regard mention sequence generate char algorithm sum circuit consecutive sequence undergo circuit procedure mention earlier algorithm ASTG dcc phase operation phase phase phase deterministically computes circuit circuit involve phase deterministically computes non generates subset sequence char hence amount redundant computation computation involve sequence char algorithm evident circuit algorithm ASTG dcc percentage circuit char algorithm behaviour analyse definitely reduces redundant char guideline detail mention generate phase none circuit mostly responsible introduce cycle algorithm performs executes circuit generate sub graph phase already improvement regard encourage future researcher guideline introduce generate subgraphs cycle devise algorithm ASTG dcc define component inherent speciality limitation boundary precise possibility circuit generate explore remains another future researcher observation reveals graph instance increase sequence generate char increase whereas performance algorithm ASTG dcc exceeds char lesser almost negligible percentage circuit compute char algorithm circuit generate algorithm char algorithm developed plot generate graph instance clearly indicates random behaviour char algorithm interestingly almost linear computational behaviour algorithm image KB image graphical representation circuit algorithm char algorithm ASTG dcc generate variety differently graph instance highlight additional regard implementation span generation algorithm survey implement implement maximum graph implement implementation graph implement graph maximum due computational limitation machine restrict graph future researcher encourage graph dimension explore behaviour algorithm graph instance generate arbitrary without bias random instance char data computation variation algorithm lesser circuit generate propose algorithm char instance graph mapping checked investigate algorithm linear behaviour char algorithm behaves undoubtedly experimentation future research mention regard earlier algorithm  ramesh concept fundamental circuit algorithm already mention fundamental circuit initiate graph component associate algorithm fundamental circuit algorithm  ramesh purpose generate exchange fundamental circuit vertex encompass  algorithm elementary transformation technique described earlier mention earlier fundamental circuit graph contains initial dfs initial dfs circuit replace correspond fundamental circuit concept utilized generation  ramesh algorithm ASTG dcc fundamental circuit standard phase standard chosen conquer combine stage moreover ASTG dcc graph vertex initial vertex accordingly component however eventually generate similarly  algorithm initial dfs generate selection eventually guaranteed generate conclusion conquer algorithm ASTG dcc developed compute span undirected graph algorithm graph component component categorize distinct component contains circuit comprises exclusive vertex along adjacent belonging earlier circuit whereas consists remain earlier component another remove pendant graph algorithm successful generate span graph phase phase guarantee non generation phase however generates non sequence discard dfs circuit algorithm future researcher improve performance phase introduce innovative approach procedure phase define component improvement phase generation performance entire algorithm comparison algorithm domain indeed explore another important achievement enhance efficiency algorithm mention removal bridge input graph rejoin pendant pendant essentially bridge component exclude bridge assume separation execution algorithm ASTG dcc implement along standard algorithm sequential parallel domain compute span graph basis cpu article establish compute span algorithm theoretical complexity explicitly mention author novelty weakness algorithm experimentally implementation environment randomly generate graph instance circuit generation ASTG dcc exhaustively char algorithm performance char algorithm ASTG dcc domain research experimentation graph instance identical various combination explore future judge performance efficiency algorithm