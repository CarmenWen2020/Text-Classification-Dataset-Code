timeline planning TP dense temporal domain undecidable restriction future semantics suffice recover decidability introduce semantic variant TP minimal weak minimal semantics express meaningful semantics minimality distance existentially quantify universally quantify reference weak minimal variant distinguishes minimality minimality future surprisingly despite apparently difference semantics TP undecidable minimal PSPACE weak minimal membership PSPACE exploit strictly expressive extension ECA robust automaton ECA allows encode weak minimal TP reduce non emptiness automaton TA finally extension ECA ECA non emptiness undecidable extension ECA ECA ECA introduce technical actually valuable per TA keywords timeline planning dense complexity automaton automaton introduction timeline planning timeline approach planning alternative classic action action approach classical planning task planner sequence action apply initial actor achieve goal timeline planning TP instead originates integration planning schedule concept context operation unlike action planning timeline explicitly distinguish action goal model domain independent interact component behavior timeline temporal constraint synchronization framework timeline express behavior component satisfies classical action temporal planning TP adopts declarative paradigm focus constraint sequence action fulfil goal declarative flavor allows knowledge engineer focus instead agent achieve goal moreover modular structure separately model distinct component TP successfully apply complex task mission planning autonomy TP planning domain model independent interact component model variable temporal behavior variable component described sequence token timeline token specifies variable overall temporal behavior timeline constrain synchronization specify quantitative temporal requirement distinct token synchronization format trigger express invariant response token trigger exist token satisfy mutual temporal relation trigger express goal exist token satisfy mutual temporal relation requirement specify synchronization corresponds freeze mechanism temporal logic freeze quantifier bind variable specific temporal context token TP TP successfully exploit application domain mission constraint activity schedule systematic expressiveness complexity TP undertaken recently discrete dense setting discrete TP EXPSPACE expressive capture action temporal planning TP dense temporal domain without recourse discretization trick assume version domain basically increase expressiveness abstract unnecessary detail artificially due necessity discretizing suitably action duration accomplishment temporally extend goal however despite format synchronization shift dense domain dramatically increase expressiveness complexity depict scenario resembles linear temporal logic MTL  wise semantics undecidable TP dense report generality undecidable undecidability expressiveness trigger trigger NP decidability recover impose suitable syntactic semantic restriction trigger significant restriction limit comparison token trigger future semantics trigger imposes non trigger token reference constraint trigger trigger impose restriction TP becomes decidable non primitive recursive complexity reduce model automaton TA MTL specification finite latter decidable worth restriction effectively contribute decidability indeed TP undecidable restrict trigger future semantics assume constrain latter illustrate preliminary account MTL trigger complexity obtain addition restrict interval token trigger EXPSPACE interval non null duration non singular interval PSPACE interval unbounded interval denote TP standard semantics TP  TP  trigger  non primitive recursive trigger EXPSPACE non singular interval trigger PSPACE interval  trigger   contribution contribution already mention proof undecidability TP future semantics relevant contribution introduction systematic investigation alternative semantics trigger dense minimal semantics standard semantics trigger occurrence non trigger token specify choice specific occurrence satisfy constraint suppose trigger token prompt token response token timeline chosen guaranteed token issue prompt reactive context usually interested relate issue prompt response arbitrarily delayed define semantics constraint satisfied suitably token trigger exploit automaton ECA robust subclass automaton TA ECA alphabet associate recorder elapse occurrence predictor future occurrence detail minimal semantics trigger minimality distance existentially quantify token trigger token trigger minimality constraint express alternative semantics weak minimal semantics distinguishes minimality respect trigger token minimality future minimal semantics considers minimality future surprisingly apparently difference definition weak minimal semantics dramatic difference complexity theoretic characterization TP TP minimal semantics undecidable TP weak minimal semantics PSPACE complexity emptiness TA ECA PSPACE membership weak minimal TP non trivial exponential reduction non emptiness TA handle trigger weak minimal semantics exploit intermediate reduction strictly expressive extension ECA ECA novel extension ECA obtain atomic constraint namely diagonal constraint polarity future sum constraint polarity atomic constraint zone obtain symbolic backward analysis semi algorithm ECA guaranteed terminate analogy ECA ECA boolean operation translate exponential equivalent exponential linear investigate extension ECA ECA polarity requirement diagonal sum constraint relaxed nonemptiness automaton undecidable summarize propose weak minimal semantics allows TP dense reasonable computational complexity without impose syntactic restriction format synchronization moreover expressive relevant practical application extension ECA ECA ECA introduce complexity per shed landscape automaton outline organize recall TP framework proof undecidability TP future semantics introduce weak minimal semantics TP minimal semantics undecidable introduce ECA ECA expressiveness complexity finally exploit ECA PSPACE completeness weak minimal TP conclusion assessment outline future research theme timeline planning recall standard TP framework described introduce weak minimal semantics standard TP TP domain knowledge encode variable behavior described transition function constrain synchronization adopt notation non negative  interval endpoint finite alphabet equivalently finite sequence denotes definition variable triple finite domain variable transition function possibly empty successor constraint function interval variable model temporal behavior autonomous elevator operates elevator elevator arrives automatically arrival definitely within whenever elevator passenger passenger elevator request elevator behavior described variable domain consists describes operation opening closure describes passenger moreover resp movement elevator resp transition function deterministic define finally constraint function define token variable consist duration token denotes component intuitively token interval variable behavior variable specify timeline non empty sequence token consistent transition function associate token timeline punctual timestamp denote otherwise sum duration token precede ith along timestamp denote finite SV variable multi timeline SV mapping assign variable timeline transaction database transaction access resource operation resource unlocked lock lock variable availability lock resource transition function graph node label constraint constant upper bound respectively duration lock image KB image variable variable transaction describes lock request issue transaction resource transaction idle issue lock access resource respectively reading resource respectively issue lock request accepted resource  timeout availability resource transition constraint function depict multi timeline variable resource transaction access depict rectangle width corresponds token duration instance timeline sequence token image KB image multi timeline variable synchronization SV finite variable multi timeline SV constrain synchronization relate token possibly belonging timeline temporal constraint token constraint difference token difference constraint synchronization exploit alphabet token refer token along multi timeline notion existential statement clause difference intuitively asserts otherwise token reference interval difference token reference respectively formally evaluate respect assignment multi timeline SV mapping assign token timeline along intuitively token reference resp satisfied resp existential statement SV statement conjunction quantifier token quantifier intuitively quantifier bind token timeline variable assignment multi timeline SV satisfies satisfied quantify token token multi timeline SV satisfies exists assignment satisfies definition synchronization SV variable existential statement trigger quantifier trigger trigger token intuitively trigger universal quantifier token timeline variable existential statement trigger simply assert satisfaction existential statement formally standard semantics synchronization define multi timeline SV satisfies trigger SV satisfies existential statement satisfies trigger SV trigger timeline existential statement assignment satisfies trigger usually exploit express initial goal trigger useful specify invariant response requirement reference introduce synchronization guarantee resource access mutual exclusion transaction preliminarily define shorthand conjunction express interval relation token associate token token reference occurs token reference token token token trigger initial resource unlocked transaction idle trigger ensures transaction resource resource lock reading trigger transaction writes lock token temporal token trigger ensure mutual exclusion writes resource transaction guarantee mutual exclusion transaction ensures feature token respectively temporal multi timeline satisfies domain TP domain specify finite SV variable finite synchronization model admissible behavior multi timeline SV satisfy TP consists domain discrete version previous duration token restrict TP future semantics already mention TP undecidable negative remain undecidable notion satisfaction trigger satisfaction future semantics future semantics non trigger token strictly trigger token definition multi timeline SV satisfies trigger future semantics satisfies trigger obtain replace existential statement future multi timeline SV satisfy future semantics future TP consists domain future multi timeline future domain described negatively theorem future TP variable undecidable interval theorem polynomial reduction halt minsky counter machine sake completeness recall definition halt minsky counter machine notion useful proof theorem nondeterministic minsky counter machine tuple finite location initial location halt location transition relation instruction transition define without loss generality assume transition exactly transition denote configuration consist location counter valuation computation non empty finite sequence configuration instruction halt consist machine computation initial configuration halt configuration undecidable proposition minsky counter construct polynomial TP instance domain interval halt exists future proof proposition report appendix sake containment TP minimal semantics subsection define variant semantics trigger newly propose investigate standard semantics trigger occurrence non trigger token specify choice specific occurrence satisfy constraint reference trigger lock request transaction ultimately satisfied timeline depict fulfils trigger assignment assignment namely witness satisfaction lock request lock lock actually choice assignment closest token trigger occurrence minimal semantics obtain standard semantics additionally assignment selects existential quantifier token variable minimal distance trigger actually constraint minimality express alternative semantics weak minimal semantics distinguishes minimality trigger token minimality future minimal semantics considers minimality future token variable definition weak minimal semantics trigger assignment multi timeline SV weakly minimal minimality along timeline minimality future along timeline assignment strongly minimal along timeline weak minimal resp minimal semantics trigger obtain standard impose assignment weakly minimal resp strongly minimal trigger token token express minimality equivalent semantics obtain token instead weak resp minimal multi timeline SV satisfy weak resp minimal semantics trigger weak resp minimal TP domain weak resp minimal obviously weak minimal minimal minimal weak minimal hence minimal semantics refinement weak minimal refinement standard semantics reference easily domain weak minimal instance synchronization assignment satisfy standard semantics binding token respectively token token cannot another token imply assignment satisfies weak minimal semantics argument conversely necessarily strongly minimal timeline variable timeline multi timeline satisfies synchronization standard weak minimal semantics binding minimal semantics synchronization satisfied bound underlie introduction weak minimal semantics trigger inspire research formal verification synthesis decade focus quantitative aspect boundedness requirement trigger formalism express quantitative temporal liveness requirement future non punctual bound request response request response within quantitative verification account unrestricted quantitative liveness undecidable dense automaton TA verification model fragment express punctual bound response undecidable non primitive recursive complexity modality disallowed therefore literature subclass fragment temporal logic introduce recover decidability tractability express non punctual bound response minimal semantics trigger exploit automaton ECA robust subclass fragment temporal logic EC TL framework specify bound distance trigger response future resp latter uniquely distance trigger minimal future resp associate observable atomic proposition differently format trigger existential universal quantification explicit mechanism refer future distinguish future logic future temporal modality trigger notion minimality choice existential token minimal semantics weak minimal semantics practical allows choice future trigger token weak minimal semantics drastically preferable complexity theoretic clearly illustrate subtlety minimal semantics basis expressive weak minimal semantics minimal token uniquely semantics minimal token future enforce adjacent temporal interval duration ingredient encode counting operation discrete stress difference weak minimal minimal semantics enlighten expressive minimal variable define synchronization introduce shorthand conjunction express interval relation token associate token token reference initial subinterval token reference symmetrically token reference subinterval token reference timeline token resp token initial subinterval resp subinterval token token precede token multi timeline domain weak minimal semantics whereas multi timeline minimal minimal semantics satisfies expressive token timeline token timeline fulfill implies minimal semantics allows enforce expressive constraint duration token exploit undecidability TP minimal semantics image KB image multi timeline assumption strict monotonicity simplify technical presentation without loss generality assume variable duration token zero undecidability minimal TP undecidability minimal TP polynomial reduction halt minsky counter machine feature reduction ability express temporal  requirement trigger token token trigger token trigger feature exemplify meaningful reduction exploit dense domain undecidability minimal TP discrete domain surprising TP standard semantics discrete domain decidable theorem minimal TP undecidable discrete proof proof polynomial reduction halt minsky counter machine minsky counter machine construct TP instance halt exists minimal discrete exploit variable encode evolution machine additional variable counter timeline correctly update domain variable otherwise intuitively transition currently non halt configuration initial configuration transition previous computational otherwise configuration encode timeline configuration code variable depict configuration code consists image KB image resp encode counter resp precedes encode counter resp counter encode duration counter token marked counter token marked similarly counter token marked respectively tag token duration trigger minimal semantics increment decrement instruction correctly encode moreover configuration code satisfies additional requirement requirement otherwise  counter token duration resp duration counter token resp pseudo configuration code define configuration code counter token token arbitrary duration restriction requirement fulfil pseudo configuration code requirement counter duration counter token marked coincides duration counter token marked relaxed pseudo computation code sequence pseudo configuration code resp resp initialization halt construction easily define transition function constraint function timeline token correspond prefix pseudo computation code hence capture timeline pseudo computation code suffices exploit trigger timeline token initialization token halt crucial reduction guarantee along pseudo computation code timeline variable satisfy trigger counter correctly encode duration token counter pseudo configuration code coincide update accordingly instruction instruction machine subset consist exploit additional variable instruction additional variable variable domain capture timeline duration token untimed projection component token arbitrary non empty variable conjunction trigger enforce along pseudo computation code duration token counter resp coincide requirement instruction variable conjunction trigger ensure duration counter token non initial pseudo configuration code update consistently instruction requirement timeline associate distinct variable synchronize ith token timeline coincide duration token zero synchronization requirement easily express trigger minimal semantics variable trigger define trigger capture minimal semantics requirement requirement instruction trigger requirement encode ensures requirement fulfil along pseudo computation code token marked token marked resp precede token token marked resp token distance trigger timeline synchronize token trigger resp resp iff associate token along resp resp trigger ensure previous requirement exploit synchronization requirement finally trigger token along timeline token precede token token token distance requirement variable minimal semantics requirement variable express trigger ensure token timeline distance trigger precede trigger trigger recall minimal semantics non trigger token distance trigger token token belonging variable image KB image trigger increment zero decrement instruction counter associate pseudo computation code non initial pseudo configuration code token counter respectively token counter respectively pseudo configuration code precede along ensure duration token coincide duration duration plus duration duration minus duration token coincide focus zero increment instruction report timeline encode ensures previous requirement fulfil iff token otherwise token marked resp precede token token marked resp token distance previous requirement enforce requirement image KB image novel extension automaton ECA TP weak minimal semantics PSPACE complexity non trivial exponential reduction non emptiness TA handle trigger weak minimal semantics exploit intermediate reduction strictly expressive extension ECA automaton ECA introduce novel extension ECA obtain atomic constraint namely diagonal constraint polarity future sum constraint polarity similarly ECA ECA boolean operation translate exponential equivalent exponential linear exploit handle trigger TP domain weak minimal semantics obtain exponential reduction weak minimal TP nonemptiness TA extension motivate technical per understand depth automaton relax requirement diagonal sum constraint automaton ECA expressive nonemptiness becomes undecidable organize subsection briefly recall automaton subsection introduce address expressiveness issue closure ECA ECA subsection define mapping ECA equivalent TA finally subsection undecidability nonemptiness ECA automaton recall automaton TA finite finite alphabet finite intuitively occurs monotonicity denote finite untimed sequence timestamps definition automaton TA tuple finite initial finite accept finite transition reset constraint conjunction atomic formula constraint denote maximal constant constraint intuitively TA transition instantaneous elapse progress reset independently transition execute elapse reset moreover constraint guard transition restrict behavior automaton formally configuration valuation assign non negative reset valuation define otherwise constraint val satisfies conjunct sequence configuration initial configuration constraint reset accept accept ECA ECA introduce extension denote ECA automaton ECA latter  subclass TA explicit reset disallowed ECA predefined association input alphabet refer distance previous occurrence input ECA extend ECA atomic constraint namely diagonal constraint alias difference constraint polarity future sum constraint polarity future additionally extension ECA denote ECA polarity requirement diagonal sum constraint relaxed adopt propositional approach input alphabet atomic proposition associate image proposition image elapse occurrence input predict future image occurrence exploit denote absence resp future occurrence proposition formally deterministically definition deterministic valuation valuation mapping assign undefined valuation specify along define definition ECA ECA ECA tuple finite initial accept finite transition ECA constraint conjunction atomic formula image image constraint image image diagonal constraint polarity image sum constraint polarity denote maximal constant constraint ECA ECA diagonal sum constraint extension ECA denote ECA transition guard exploit conjuncts diagonal resp sum constraint polarity resp polarity fix valuation val extend valuation val difference resp sum sum difference involve evaluates constraint val satisfies conjunct ECA resp ECA sequence constraint accept accept standard ECA allows express atomic constraint distance occurs specify standard bound response requirement request response within novel ECA extends ECA additional ability temporally none occurs allows instance express context version bound response illustrate assume client request server default critical bound processing default request critical request within amount scenario model ECA proposition model default resp critical request server request processing server proposition termination server processing response client image KB image ECA specify context bound response requirement formally ECA expressive ECA ECA strictly ECA ECA depict atomic proposition consists unique proposition image KB image automaton accepts difference ECA accept indeed define denote valuation associate respectively construction easily hence atomic constraint cannot distinguish valuation ECA iff definition hence definable ECA obtain theorem proposition definable ECA definable ECA hence ECA strictly expressive ECA completeness investigate ECA extension ECA polarity requirement diagonal sum constraint relaxed ECA extend ECA powerful layer model facility arbitrary sum constraint duration temporal interval moreover arbitrary diagonal constraint enforce bound sum duration temporal interval resp depict variant ECA illustrate server processing client request subdivide phase duration phase resp phase model proposition resp image KB image ECA closure similarly ECA accepted ECA resp ECA boolean operation theorem closure ECA resp ECA respectively construct ECA resp ECA resp accepts resp resp constant accepts complement constant remain subsection proof theorem actually union intersection straightforward omit focus closure  crucially purely input  ECA ECA define homomorphism ECA standard nondeterministic finite automaton NFA finite vice versa NFA define ECA omit constraint transition function fix ECA constant constraint increase finite interval define interval consist negative ECA expression expression atomic constraint ECA interval denote constraint define resp resp resp resp mapping assign interval mapping induces ECA constraint denote possibly empty valuation satisfy constraint associate reg ECA constraint valuation satisfy remark construction reg partition valuation valuation val constraint associate alphabet reg alphabet interval alphabet associate constraint induces denote define iff extend mapping obvious mapping define partition lemma statement proof statement remark statement distinct assume derive contradiction hence construction exists remark contradiction proposition establish untimed homomorphism ECA NFA homomorphism NFA ECA respectively proposition untimed homomorphism ECA interval alphabet induced construct NFA proof transition relation consists transition constraint remark lemma easily derive correctness construction proposition homomorphism NFA interval alphabet associate construct ECA proof transition relation consists transition remark lemma easily derive correctness construction lemma proposition proposition closure NFA theorem closure  ECA ECA construct singly exponential ECA accept complement constant proof ECA interval alphabet induced proposition construct NFA classical NFA construct singly exponential NFA accept apply proposition NFA construct linear ECA lemma accepts ECA automaton ECA translate singly exponential equivalent TA generalize ECA theorem ECA TA ECA construct exponential TA moreover atomic constraint proof sketch underlie translation detail appendix ECA TA accept essentially obtain replace atomic constraint standard associate reset operation constraint remove constraint proceed therefore focus removal diagonal constraint polarity sum constraint polarity removal diagonal predict constraint diagonal predict constraint image simpler handle constraint TA exploit standard additional standard resp reset proposition resp occurs input assume prediction input simulate TA obligation resp timestamp associate resp resp occurs prediction correspond obligation assume occurs strictly precedes reading reset replaces obligation update obligation constraint occurs prediction strictly precede obligation obligation distinguish occurs strictly strictly precede reading replaces obligation reset iff bound constraint bound fulfillment prediction guarantee fulfillment prediction vice versa upper bound fulfillment prediction guarantee fulfillment prediction bound obligation rewrite upper bound obligation ignore strictly strictly precede occurs obligation replace obligation unless occurs latter simply reading constraint checked obligation discard trivial reading finally assume strictly precedes bound resp upper bound prediction satisfied resp satisfied focus resp reading reset obligation replace update obligation constraint resp occurs moreover obligation ignore reset obligation rewrite reset finally ensure obligation eventually checked accept obligation removal diagonal constraint diagonal constraint image proposition associate image occurs constraint TA exploit standard reset whenever occurs input moreover proposition prefix input information concern indication requirement indication presence constraint prefix contains occurrence proposition timestamps associate occurrence prefix respectively exploit constraint whenever occurs input previously constraint resp whenever occurs input previously resp constraint exploit transition simulate TA simply indication resp resp negative input reject removal sum constraint sum constraint image simpler TA exploit standard namely reset proposition associate occurs input operates mode alternate mode mode mode obligation reset whenever proposition occurs input instead obligation mode resp mode resp reset whenever proposition occurs resp reset moreover obligation mutually exclusive obligation resp ECA exploit constraint TA mode resp mode constraint resp proposition occurs precisely upper bound constraint assume input mode obligation constraint exploit transition constraint previous input TA reject input otherwise obligation constraint proposition occurs proposition occurs input strictly precede TA proceeds switch phase precede occurs reset handle obligation input coincide constraint checked obligation discard unless constraint transition latter mode active replaces obligation obligation reset upper bound constraint strictly precede choice reset fulfillment upper bound constraint previous guarantee fulfillment constraint bound constraint obligation rewrite whenever phase resp phase input obligation replace obligation resp constraint resp proposition occurs ensure obligation eventually checked accept obligation described construction formally report appendix undecidability nonemptiness ECA nonemptiness TA decidable corollary theorem nonemptiness ECA decidable ECA completely counterpart theorem cannot automaton nonemptiness ECA undecidable reduction halt minsky counter machine minimal TP theorem nonemptiness ECA undecidable subclass ECA atomic constraint diagonal constraint polarity image proof proof polynomial reduction halt minsky counter machine fix machine adopt machine notational convention proof theorem atomic proposition construct ECA iff halt define suitable encode computation exploit proof theorem configuration encode uniquely modulo initial timestamp illustrate image KB image configuration code subdivide resp encode counter resp precedes encode counter resp counter encode distance counter marked counter marked similarly counter marked respectively tag distance tag requirement intuitively constraint increment decrement instruction correctly encode computation encode code configuration  coincides timestamp uniquely modulo initial timestamp illustrate construction ECA accepts encode computation initial configuration halt configuration hence iff halt structure acceptance capture untimed coincides untimed configuration code associate associate subword pseudo code moreover ensure pseudo code indeed code configuration faithful evolution exploit constraint ensures timestamp consistency tag pseudo code tag requirement distance marked proposition purpose resp exploit transition predict constraint image resp image moreover resp exploit transition predict constraint image resp image ensures timestamp consistency pseudo code distance counter resp coincides distance counter resp capture requirement exploit transition predict constraint ensure tag requirement constraint image ensures timestamp coincides timestamp associate halt exploit transition predict constraint image counter encode pseudo code pseudo code counter resp counter encode zero associate information pseudo code counter resp exploit transition constraint image image resp image image counter resp counter zero resp non zero ensures pseudo code encodes initial configuration ensures pseudo code code configuration successor configuration encode instruction recall counter resp resp moreover transition resp associate resp negative input reject otherwise proceeds crucially exploit requirement tag precede encode counter precede encode counter assume code configuration denote counter ensure counter resp coincide exploit transition counter constraint image ensure counter coincide counter exploit transition counter constraint image previous constraint tag requirement ensures counter sum counter similarly exploit transition constraint image ensure counter coincide counter exploit transition counter constraint image previous constraint tag requirement ensures counter sum counter similarly exploit transition constraint image ECA atomic constraint diagonal constraint polarity image decidability weak minimal TP exploit weak minimal TP decidable PSPACE upper bound obtain exponential reduction nonemptiness automaton TA handle trigger weak minimal semantics exploit intermediate ECA introduce investigate fix TP domain construct TA accept suitable encoding multi timeline SV satisfy weak minimal semantics define encode multi timeline SV proposition proposition encode token along timeline specify proposition respectively meaning explain additional proposition multi timeline code trigger ECA constraint code timeline index index exists otherwise otherwise intuitively along associate modulo counter incremented along handle trigger weak minimal semantics ECA constraint reference token occurrence input encodes timeline duration token zero code multi timeline SV obtain shuffle timeline variable non empty obtain remove code timeline initialization trigger weak minimal semantics handle ECA chosen non trigger token mapped occurrence proposition input trigger multi timeline encode mapped ECA constraint ECA cannot express trigger semantics constraint chosen punctual closest reference maximal constant integer constraint function variable SV lemma construct exponential ECA multi timeline SV encode accepted iff satisfies trigger weak minimal semantics moreover unique atomic constraint maximal constant overall trigger proof trigger SV trigger ECA satisfy lemma replace respectively hence apply closure ECA intersection theorem contains arbitrary trigger essentially encode multi timeline SV trigger occurs ECA existential statement weak minimal assignment consistent binding quantifier binding consistency constraint satisfies fix existential statement token existentially quantify variable reference associate quantifier weak minimal assignment restrict token specify tuple symbolic assignment assigns token partition pairwise disjunct resp input symbolic assignment consistent intuitively encode multi timeline SV trigger trigger occurs symbolic assignment consistent input encodes weak minimal assignment binding consistent duration token zero strict monotonicity accordingly weak minimal semantics resp resp reference previous occurrence resp occurrence resp occurrence weak minimal requirement associate reference ensure weak minimal requirement fulfil associate exist associate token additionally encode weak minimal semantics ensure resp previous occurrence resp occurrence distance zero occurrence resp previous occurrence distance zero previous requirement exploit ECA constraint denote image image image image image image constraint exploit boolean disjunction latter remove nondeterminism transition relation crucially module counter encode token constraint ensure resp reference previous occurrence resp occurrence associate symbolic assignment constraint denote obtain existential statement replace difference resp generalize atomic constraint resp definition constraint boolean constant false moreover exploit generalize ECA atomic constraint interval correspond conjunction ECA atomic constraint unbounded upper bound conjunct exploit constraint difference assignment  image image image image image image image image false otherwise constraint assignment ECA define unique input transition iff exists existential statement symbolic assignment consistent input concludes proof lemma trigger lemma establish slightly encode multi timeline easily adapt encode propose lemma construct exponential TA accept code multi timeline SV satisfy trigger moreover maximal constant overall quantifier trigger establish theorem TP domain exponential TA maximal constant overall quantifier iff weak minimal moreover weak minimal TP PSPACE proof theorem lemma lemma theorem concern construction TP domain directly recall TA effectively polynomial intersection theorem recall non emptiness TA  algorithm graph logarithmic polynomial encode maximal constant built graph without explicitly construct membership PSPACE weak minimal TP finally PSPACE hardness weak minimal TP polynomial reduction domino tile grid linear fix instance tuple finite tuples domino encode unary distinguish domino respectively initial domino grid mapping grid consists contains domino tile grid satisfy additional requirement adjacent namely constraint adjacent namely constraint initialization acceptance without loss generality assume tile tile satisfy additional requirement unique unique existence tile PSPACE construct polynomial TP instance exists weak minimal iff exists tile hence define suitable encode tiling timeline variable finite domain variable encode tile concatenate code encode tag encode token overall duration associate content along formally code timeline constraint duration requirement tag code sequence code non code tag code tag tiling encode timeline correspond concatenation code straightforward construct variable timeline token correspond prefix concatenation code moreover define synchronization weak minimal semantics trigger capture timeline encode tiling assumption resp tile unique domino resp capture concatenation code satisfy initialization halt requirement suffices ensure timeline token token express trigger finally capture constraint exploit trigger weak minimal semantics encode ensures difference token encoding belonging consecutive code constraint enforce token encode ith token belongs code token constraint trigger previous trigger encode ensures weak minimal semantics coincides standard concludes proof theorem conclusion address TP dense negatively decidability TP future semantics introduce investigate novel semantics dense domain weak minimal semantics aim overcome structural restriction format introduce recover decidability surprisingly despite apparently difference semantics minimal undecidable TP weak minimal PSPACE TP weak minimal TP investigate novel strictly expressive extension ECA per automaton future relevant issue investigate expressiveness comparison TP framework standard semantics TP framework weak minimal semantics framework incomparable expressiveness viewpoint syntax synchronization feature negation minimality standard semantics conversely mimic token assignment standard semantics framework enforce minimal semantics technical issue minimal TP variable decidability remains issue moreover aim investigate TP controllability variable environment appendix undecidability future TP report proof theorem proposition proposition minsky counter machine construct polynomial TP instance domain interval halt iff exists future proof define suitable encode computation untimed timeline neglect token duration accounting exploit finite correspond finite domain variable transition secondary define beg marker intuitively encode computation transition computation encode counter code finite code encodes counter equivalently occurrence encode counter resp resp marker encode configuration code finite counter code configuration code encodes configuration computation code non empty sequence configuration code configuration code whenever assumption computation code initial configuration code encodes initial configuration halt configuration code configuration encode configuration code computation code additionally equality requirement increment requirement decrement requirement clearly halt iff exists initial halt computation code definition define variable synchronization interval untimed future initial halt computation code halt future formally variable duration token zero strict monotonicity transition function ensures untimed timeline token correspond prefix initial computation code moreover construction trivial task define previous requirement fulfil assumption transition enforce initialization halt requirement suffices ensure timeline token token capture trigger finally crucial formedness requirement capture trigger express punctual constraint refer reader intuition enforce define essentially advantage dense temporal domain encode arbitrarily counter image KB image adjacent configuration code highlight cyan former latter encodes configuration configuration distance consecutive requirement arrow token exactly another token counter computation counter encode aim equality requirement arrow correspondence token associate counter precisely token token finally increment requirement performs increment counter something analogous previous difference token token beg token beg anticipate denote dash token shorter duration counter clearly density domain fundamental role interpretation reader refer web version article trigger distance consecutive define non trigger overall duration sequence token correspond configuration code amount exactly strict monotonicity halt requirement suffices ensure token eventually token denotes abuse notation difference exactly aim non trigger interval trigger equality requirement ensure equality requirement exploit token along timeline corresponds token secondary moreover counter tag secondary token eventually token difference exactly moreover difference exactly capture non trigger interval strict monotonicity distance consecutive ensure equality requirement timeline satisfy define adjacent configuration code along precede counter resp sequence token associate code resp construction resp resp strict monotonicity distance consecutive guarantee existence injective mapping recall token token along timeline ensure surjective hence bijection trigger increment requirement secondary ensure equality requirement express increment requirement suffices enforce counter token eventually token difference token token exactly token eventually token difference exactly token associate token anyway token eventually token difference exactly intuitively adjacent configuration code along timeline precede token token moreover token immediately precede requirement express non trigger interval define equality requirement trigger decrement requirement capture decrement requirement suffices enforce counter denotes secondary token eventually token difference token token exactly token eventually token difference exactly token eventually token difference exactly analogously symmetric increment requirement easily express non trigger interval express equality requirement construction untimed future initial halt computation code vice versa exploit  temporal domain existence initial halt computation code implies existence future concludes proof proposition appendix ECA automaton detail construction theorem theorem ECA TA ECA construct exponential TA moreover atomic constraint proof ECA formal definition TA accept additional notation diagonal constraint proposition image occurs constraint sum constraint involve intuitively indicates proposition previous input image indicates prefix input contains occurrence proposition timestamps associate occurrence prefix respectively finally resp sum constraint denotes mode resp mode handle constraint sum constraint involve iff obligation predict constraint image sum constraint sum constraint involve resp resp diagonal predict constraint image involve predictor image image obligation obligation diagonal predict constraint image sum constraint involve finite consist standard image occurs atomic constraint involve atomic constraint involve spacial predict constraint diagonal constraint predict sum constraint diagonal predict constraint image sum constraint involve finally finite consist atomic constraint constraint constraint image resp diagonal constraint image constraint diagonal constraint image constraint sum constraint image resp predict constraint image resp diagonal predict constraint image constraint diagonal predict constraint image constraint sum constraint image TA formally consists triple obligation initial consists mode sum constraint involve neither obligation associate proposition diagonal constraint accept consists contains obligation associate atomic constraint involve finally transition relation TA define transition ECA TA transition obligation reset constraint satisfy requirement constraint conjuncts atomic constraint iff iff constraint image conjunct iff conjunct conjunct diagonal constraint image conjunct iff iff iff conjunct conjunct conjunct predict constraint image iff conjunct iff conjunct conjunct iff sum constraint image iff conjunct sum constraint image occurs iff resp iff resp resp conjunct iff resp upper bound iff conjunct mode implies upper bound iff conjunct mode implies bound iff conjunct conjunct bound iff conjunct conjunct diagonal predict constraint image iff conjunct iff iff iff iff iff conjunct conjunct conjunct resp resp resp resp concludes proof theorem