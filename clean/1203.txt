introduces communication abstraction constrain delivery broadcast scd broadcast aim user appropriate abstraction implement distribute task asynchronous message passing prone crash failure abstraction allows broadcast message deliver sequence message delivers message message later delivers message message delivers message later message algorithm implement scd broadcast investigates program computability limit scd broadcast algorithm efficient building snapshot conflict replicate data distribute task computability limit scd broadcast register computationally equivalent keywords abstraction asynchronous communication abstraction communication  replicate data simplicity distribute task linearizability message passing crash atomic   consistency snapshot introduction program abstraction informatics abstraction difficulty consists user desire abstraction generality encompass situation specific address crucial issue express sequential compute functional program orient program desire abstraction generality context asynchronous distribute compute entity communicate message underlie communication network failure issue consists appropriate communication orient abstraction meaning appropriate related intend abstraction program program programmer abstraction concentrate specific feature underlie program benefit approach synchronization approach promote software transactional memory aim programmer focus synchronization synchronization implement textbook specific coordination cooperation matchings specific communication abstraction concern consensus broadcast abstraction atomic broadcast another causal message delivery broadcast abstraction allows implementation causal memory aim aim introduce investigate communication abstraction allows efficient implementation concurrent distribute task context asynchronous message passing prone crash failure concurrent interested define sequential specification queue differently task extends distribute context notion function define mapping input vector output vector input vector defines input similarly output vector defines output agreement consensus agreement distribute task implementation task input due net asynchrony failure distinguish another crashed difficulty impossibility consensus crash broadcast abstraction constrain delivery broadcast scd broadcast communication abstraction propose allows broadcast message deliver message instead message delivers message message later delivers message message deliver later another prevent deliver moreover scd broadcast imposes constraint message receives message define scd broadcast implementation asynchronous minority crash assumption actually sufficient cope net asynchrony failure scd broadcast application message generates implementation message assume upper bound message transfer delay zero processing complexity upper bound complexity elapse scd broadcast application message locally deliver application layer crashed implement task address fundamental issue scd broadcast abstraction computability limit abstraction concerned ability easiness implement atomic linearizable sequentially consistent concurrent solvable distribute task algorithm implement atomic namely snapshot distribute increase decrease counter algorithm lattice agreement task concurrent snapshot counter chosen encounter application representative identify characterize operation commute execute execute counter overwrite execute execute alone implementation counter adapt commutative operation implementation snapshot illustrates overwrite operation obtain directly scd broadcast abstraction concern slight algorithm allows obtain implementation consistency weaken linearizability sequential consistency solvable task scd broadcast concurrency inherent hidden task definition easily distribute software engineering dimension algorithm communication concerned communication brings  dimension algorithm implement variety despite individual feature snapshot counter scd broadcast implementation actually communication structure consistency satisfy linearizability sequential consistency program distribute compute differently sequential compute plenty idiosyncrasy specific distribute compute instead address distribute setting enrichment sequential compute communication abstraction asynchronous crash failure broadcast scd broadcast candidate implement solvable distribute task computability limit scd broadcast investigates computability scd broadcast abstraction namely scd broadcast atomic register equivalently snapshot computability asynchronous prone crash failure everything implement atomic register implement scd broadcast vice versa register snapshot implement asynchronous message passing minority crash propose algorithm implement scd broadcast resilience optimal theoretical consensus scd broadcast weak roadmap compose defines scd broadcast abstraction associate communication algorithm resilience optimal algorithm implement scd broadcast asynchronous message passing prone crash failure adopts distribute software engineering communication associate scd broadcast scd broadcast algorithm concurrent task focus computability limit scd broadcast finally concludes remark worth stabilize version scd algorithm article described extension commit byzantine failure described scd algorithm cop byzantine scd broadcast communication abstraction model compute model compose asynchronous sequential denote asynchronous proceeds arbitrary remains unknown halt prematurely crash failure executes local algorithm correctly crash model parameter denotes maximal crash crash faulty otherwise non faulty definition scd broadcast constrain delivery broadcast abstraction scd broadcast operation operation message broadcast input parameter trigger  non empty message classical terminology invokes operation scd broadcast message similarly trigger scd delivers message slight abuse interested message scd delivers message actually scd delivers message scd broadcast define assume without loss generality message scd broadcast validity scd delivers message scd broadcast integrity message scd deliver MS scd delivers message later message message scd delivers message later message termination non faulty scd broadcast message terminates scd broadcast invocation scd delivers message termination scd delivers message non faulty scd delivers message termination termination classical liveness uniform reliable broadcast safety validity integrity classical communication related neither message creation message corruption message duplication MS characterizes scd broadcast content message scd deliver totally independent sequence scd deliver sequence scd deliver mutually consistent cannot scd deliver later another scd delivers later nevertheless scd delivers later scd deliver message remark MS suppress message scd deliver scd broadcast boil uniform reliable broadcast abstraction message scd broadcast deliver message deliver whereas within scd delivery message respect definition scd broadcast differently due scd delivery scd delivery satisfy MS broadcast containment denote message scd deliver hence scd deliver sequence message containment directly MS termination partial message message MS integrity establish partial message define local message delivery define scd delivers message message message scd deliver twice easy partial locally containment implies remains unknown message complies partial scd broadcast weaken broadcast underlie communication network asynchronous network communicate uni directional channel message hence communication network network directly message invokes operation message operation allows message channel reliable loss corruption creation message necessarily fifo asynchronous transit message finite upper bound message transit due message asynchrony another crashed uniform fifo broadcast abstraction simplify presentation without loss generality equip fifo broadcast abstraction abstraction built previous model without enrich additional assumption define operation satisfy uniform reliable broadcast validity integrity termination termination definition scd broadcast plus message fifo fifo delivers message later message fifo delivers implementation scd broadcast scd broadcast communication abstraction oracle oracle extend understand compute cannot implement describes implementation scd broadcast asynchronous message passing minority crash model denote crash asynchronous message passing restriction failure weak assumption failure allows register built asynchronous message passing scd broadcast register computationally equivalent propose implementation optimal resilience algorithm describes algorithm implement scd broadcast terminology application message message scd broadcast protocol message implementation message generate algorithm algorithm image KB image algorithm implementation scd broadcast code local metadata quadruplet application message quadruplet meaning contains application message contains sender contains local date sequence associate sender hence identity application message denote array initialize sequence associate broadcast message msg crucial scd delivery message local variable manages local variable buffer empty quadruplet message fifo deliver scd deliver message quadruplet message scd deliver local logical local progress application message scd broadcast identify array lock application message identify scd deliver protocol message algorithm protocol message denote msg message associate application message identity application message fourth fifth describes local progress capture forwarder fifo broadcast protocol message invoke msg operation invokes operation application message executes internal operation initializes algorithm message pending scd deliver uniform fifo broadcast message msg fifo delivers protocol message msg invokes internal operation addition statement fifo delivery message entail participation uniform reliable fifo broadcast message addition invocation fifo delivery msg invokes strives scd deliver message core algorithm express relation introduce issue algorithm ensure message scd deliver message message majority fifo deliver protocol message msg protocol message msg fifo deliver message msg message msg fifo deliver msg msg date  date MS impossibility majority another majority internal operation operation enrichment reliable fifo broadcast implement protocol message msg message msg scd broadcast local relayed local already scd deliver message define predicate quadruplet creates quadruplet associate participates fifo broadcast identify local progress increase quadruplet associate assigns thereby local internal operation executes computes quadruplet application message majority message finite previous majority message msg later another message msg scd deliver scd deliver therefore avoid scd deliver scd deliver  quadruplet correspond cannot deliver correspond proof situation cannot majority message correspond message correspond capture predicate empty purge computes message scd deliver contains application message quadruplet quadruplet withdrawn moreover scd delivery update entry update ensure future predicate proof correctness lemma validity scd delivers message broadcast proof scd delivers message previously quadruplet fifo deliver protocol message msg due fifo validity generate fifo broadcast message originate invocation lemma integrity scd delivers message twice proof due statement increase successive scd broadcast application message identity quadruplet finally quadruplet suppress scd deliver concludes proof lemma lemma fifo broadcast msg executes non faulty executes msg proof broadcast message msg non faulty eventually message whatever contains quadruplet insert possibly reception message message msg otherwise incremented validate message msg message msg fifo broadcast hence deliver message msg msg message msg message msg previous applies broadcast message msg remove therefore false stamp execute stamp later lemma MS scd delivers message later scd delivers message scd delivers later message proof suppose message scd delivers later scd delivers scd delivers later scd delivers deliver message msg deliver message msg hence communication channel fifo message msg message msg otherwise communication channel fifo message msg message msg deliver message msg message msg exists intersection majority msg msg msg message msg however lemma message msg message msg contradiction lemma non faulty executes msg scd delivers message proof non faulty message insert dependency relation define dependency exist majority update due due denote transitive closure suppose contradiction timestamp associate message protocol message msg fifo broadcast infinity predecessor accord finite infinity predecessor generate infinite sequence timestamps associate invocation issue situation depict image KB image message introduce lemma non faulty eventually receives message msg broadcast infinity message msg broadcast message msg timestamps associate message scd broadcast hypothesis moreover message msg message msg express interval message msg message msg become scd deliver message accord lemma message therefore index deliver message associate timestamp channel fifo thanks majority message msg message msg contradicts suppose non faulty fifo broadcast message msg insert quadruplet timestamp precedes finite predecessor accord non faulty accord lemma eventually receives message msg non faulty majority pred quadruplet receives message msg already deliver insert moreover remove removal definition already scd deliver scd deliver lemma termination non faulty scd broadcast message scd delivers message proof non faulty scd broadcast message executes procedure similarly lemma message msg previously broadcast therefore fifo broadcast message msg due lemma scd delivers message lemma termination scd delivers message non faulty scd delivers message proof scd delivers message quadruplet insert fifo broadcast message msg lemma non faulty sends message msg lemma scd delivers message theorem algorithm implement scd broadcast communication abstraction moreover invocation operation protocol message upper bound message transfer delay local computation zero scd broadcast proof proof lemma validity lemma integrity lemma MS lemma termination lemma termination message complexity due predicate application message argument scd broadcast communication algorithm implement concurrent task communication described algorithm involves client invokes operation server scd delivers message algorithm image KB image algorithm communication code invokes operation executes task operation concurrent depends consistency implement linearizability sequential consistency message synchronize local data representation local task synchronization realize boolean parameter message message scd broadcast scd deliver message msg related task implement local computation combination communication scd broadcast framework allows implementation specific concurrent task algorithm implement snapshot counter lattice agreement task respectively algorithm model enrich scd broadcast denote scd broadcast previous communication scd broadcast snapshot snapshot definition snapshot introduce snapshot array atomic register operation denote invocation assigns atomically invocation return execute instantaneously hence execution snapshot operation linearizable underlie atomic register reader SR multi reader MR writer SR multi writer MW SWMR MWMR register register SWMR snapshot SWMR snapshot moreover invokes register MWMR snapshot MWMR implementation register implementation SWMR MWMR snapshot atomic register propose hardness snapshot associate bound survey algorithm implement SWMR snapshot SWMR register MWMR snapshot concerned implementation operation construction SWMR MWMR snapshot crash prone asynchronous message passing concerned stack construction algorithm implement SWMR MWMR atomic register algorithm implement SWMR MWMR snapshot stack approach operation message SWMR snapshot message MWMR snapshot algorithm atomic MWMR snapshot scd broadcast local representation reg local variable data plus boolean variable contains array timestamps associate timestamp local identity initial associate denote timestamp relation classical lexicographical relation timestamps denote algorithm snapshot operation algorithm consists instance communication introduce return local message sync scd broadcast pure synchronization message aim entail  occurs algorithm image KB image algorithm construction MWMR snapshot code algorithm operation assign invokes operation instance communication synchronization snapshot operation date instance communication associate timestamp scd broadcast data message addition inform message synchronization message exactly message sync synchronization terminates boolean return operation algorithm scd delivery message scd delivers message namely message register message computes maximal timestamp message update accordingly local representation finally sender message sync terminates synchronization remark linearizability imposes snapshot operation concurrent operation return recent reader mimic algorithm execute writer usually summarize  reader algorithm sync message snapshot operation serf purpose message operation already terminate snapshot operation transitivity sync message subsequent snapshot operation message snapshot operation proof algorithm implicitly proof recall scd broadcast abstraction non faulty scd deliver message exactly scd broadcast faulty behaves correctly crash scd delivers subset message scd deliver non faulty without loss generality assume initial operation issue non faulty moreover crash snapshot operation snapshot crash operation message scd deliver non faulty termination non faulty message sync scd broadcast modify local variable lemma non faulty invokes operation return invocation proof non faulty invokes operation termination scd broadcast eventually receives message message sync sends statement associate scd delivery message terminate synchronization boolean eventually consequently return invocation operation extension relation relation extend partial array timestamps denote define moreover definition array processing message lemma tsa proof totally entry increase hence array array assume contradiction register accord message similarly message situation contradicts MS conclude definition associate timestamp operation invoke timestamp define operation relation operation define terminate easy compliant partial operation lemma operation register timestamp proof timestamp respectively timestamp identity operation issue precedes invoked later scd broadcast invocation local reset boolean moreover reset due scd delivery message image hence reset due concludes proof lemma previous assume terminate boolean message message executes invokes sync terminate message sync cannot belong due integrity termination scd broadcast eventually scd delivers exactly message moreover scd delivers exactly message message sync scd delivers exactly message message sync MS cannot scd deliver whatever scd deliver message message sync concludes proof lemma associate timestamp array operation associate timestamp array operation invoke return snapshot operation array denote array accord hence tsa report operation lemma distinct operation moreover operation proof perform respectively  sync message execution terminates becomes  tsa accord timestamp message message terminates message scd deliver terminate  terminate  terminate termination MS message  message  therefore snapshot operation otherwise message message executes finally due lemma snapshot operation otherwise thanks strictly due lemma implies operation concludes proof lemma previous lemma operation linearize totally compliant sequential specification register occurrence accord extension reflexive transitive closure relation define thereafter definition operation define relation operation snapshot operation operation register lemma snapshot built algorithm linearizable proof recall definition relation operation snapshot operation operation register define relation reflexive transitive closure relation relation partial operation transitivity reflexivity construction  suppose lemma timestamp array operation moreover snapshot operation modulo lemma snapshot operation therefore suppose snapshot operation partial relation  operation otherwise operation lemma operation fourth operation register  relation timestamp lemma operation prof  extension relation compliant contains snapshot operation register accord associate return message operation definition lemma therefore moreover operation lemma otherwise due item definition accord message invocation involves invocation invocation involves protocol message theorem algorithm MWMR atomic snapshot model operation scd broadcast operation proof proof lemma lemma operation corollary theorem theorem constraint upper bound faulty register snapshot corollary algorithm resiliency optimal comparison algorithm interestingly algorithm efficient message stack snapshot algorithm message passing emulation atomic memory stack message image KB image comparison various algorithm complexity highlight sequentially consistent snapshot algorithm suppress message sync suppress algorithm implement linearizable snapshot however implement snapshot sequentially consistent operation perform snapshot consistent similarly linearizability respect suppression compliance due message sync operation purely local hence operation scd broadcast protocol message proof algorithm reader scd broadcast counter definition counter manipulate  operation denote counter sequential specification subtracts return introduction due commutative operation representative CRDT conflict replicate data define operation operation snapshot differently operation snapshot synchronization message sync data synchronization message update operation data synchronization message plus minus gain obtain operation consecutive invocation commutative lemma non faulty invokes operation return invocation proof non faulty invokes termination scd broadcast eventually receives message message plus minus sync sends statement associate scd delivery message terminate synchronization boolean eventually consequently return invocation operation definition operation perform define message operation message execution operation union message scd deliver execute define relation operation operation lemma counter built algorithm linearizable proof strict partial relation suppose operation operation prof transitivity   impossible compliant operation perform respectively message execution respectively suppose terminate return therefore consequently execution containment scd broadcast therefore extension compliant contains return operation plus message minus message accord return modify contains commutativity addition subtraction moreover due definition compose operation consequently predecessor accord therefore return minus accord concludes lemma theorem algorithm implement atomic counter proof lemma lemma algorithm satisfy sequential consistency previous algorithm easily modify obtain sequentially consistent counter technique introduce operation implementation operation purely local invoke algorithm implement differently operation issue cannot namely previous operation issue apply local counter invocation terminate writes algorithm algorithm addition manages synchronization counter initialize execute locally apply algorithm image KB image algorithm construction seq consistent counter code operation plus protocol message underlie scd broadcast operation depends pending counter operation remark technique sequentially consistent counter operation operation scd broadcast lattice agreement task definition partially partial relation upper bound upper bound upper bound upper bound semilattice finite subset upper bound denotes upper bound assume input semilattice lattice agreement task introduce generalize operation denote invokes proposes operation return decides task define assume non faulty invokes validity decides containment decides decides termination non faulty proposes decides theorem algorithm solves lattice agreement proof termination termination scd broadcast non faulty scd broadcast message scd delivers message validity definition operation executes contains execute message message msg scd broadcast containment concerned assume contradiction neither message scd deliver respectively scd deliver define similarly scd deliver partial contradiction scd broadcast definition remark scd broadcast built register theorem combination algorithm algorithm pure algorithm lattice agreement task algorithm lattice agreement register algorithm image KB image algorithm implementation scd broadcast snapshot code remark similarly algorithm implement snapshot counter satisfy sequential consistency instead linearizability algorithm message sync specify witness execution define sequential specification accord notion associate sequence consistency linearizability physical sequential consistency logical associate independently differently distribute task define relation input vector output vector without refer specific execution notion notion consistency linearizability sequential consistency meaningless task computability limit scd broadcast algorithm building scd broadcast SWMR snapshot snapshot easily obtain MWMR snapshot hence algorithm algorithm impossibility proof atomic register asynchronous message passing crash scd broadcast cannot implement snapshot scd broadcast computationally equivalent snapshot scd broadcast memory compose SWMR snapshot denote empty sequence snapshot initialize contains message scd broadcast snapshot initialize contains sequence message scd deliver notation concatenation message sequence message local manages local local snapshot local snapshot  seq auxiliary variable aim message scd deliver function return message description algorithm invokes inform scd broadcast invokes internal procedure exit background task ensures message scd deliver task invokes repeatedly internal procedure locally application underlie task invoke access local variable variable local mutual exclusion algorithm operation procedure invokes internal procedure aim scd deliver message scd broadcast locally scd deliver obtains snapshot  seq allows message scd deliver enters loop scd deliver message accord scd deliver scd deliver message message scd deliver predicate message scd deliver locally scd delivers local scd delivery update accordingly local update global update return strives scd deliver message scd deliver obtains snapshot message scd deliver computation predicate scd delivers update accordingly proof algorithm lemma scd delivers message invoked proof proof directly text algorithm message  seq without message lemma scd delivers message twice proof due message scd deliver proof directly observation due local mutual exclusion update consistently message already scd deliver message belonging cannot lemma invocation non faulty terminates proof proof consists internal procedure terminates mutex algorithm assume cannot forever hence invokes internal procedure issue snapshot invocation  seq obtains consequently finite message hence execute finite invocation non faulty terminates replace  seq cannot forever executes procedure lemma non faulty scd broadcast message scd delivers message proof non faulty scd broadcast message non faulty invokes eventually scd deliver scd deliver concludes proof lemma lemma non faulty scd delivers message non faulty scd delivers message proof assume scd delivers message message invoked otherwise scd deliver invokes infinitely hence execution contains scd deliver scd deliver message lemma scd delivers message later scd delivers message scd delivers later proof message due operation snapshot operation without loss generality assume scd delivers scd delivers message scd delivers message hence obtain snapshot conclude contains scd deliver scd delivers scd delivers message due predicate message scd deliver previously scd deliver message moreover message occurs correspond cannot previous item scd deliver message previous message predicate cannot scd deliver summarize scd delivery message procedure cannot violate MS establish theorem algorithm implement scd broadcast classical model proof proof lemma validity lemma integrity lemma lemma termination lemma termination lemma MS conclusion introduce communication abstraction asynchronous message passing compute entity crash denote scd broadcast allows broadcast message deliver message instead deliver message precisely delivers message message later delivers message message deliver message message moreover local constraint impose processing message belonging message scd broadcast noteworthy feature implement asynchronous message passing minority crash upper bound twice network latency message computability atomic register anything implement asynchronous implement scd broadcast promotes communication implement concurrent define sequential specification distribute task interested implementation concurrent weaken scd broadcast atomic implementation scd broadcast implementation satisfy sequential consistency moreover sequentially consistent implementation efficient atomic program distribute compute differently sequential compute plenty idiosyncrasy specific distribute compute instead address distribute setting enrichment sequential compute communication abstraction asynchronous crash failure broadcast scd broadcast candidate implement solvable distribute task remark worth stabilize version scd algorithm article described extension commit byzantine failure described scd algorithm cop byzantine