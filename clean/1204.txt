focus uniform bipartition population protocol model aim population context arbitrary communication graph investigate solvability uniform bipartition arbitrary communication graph agent population designate initial various assumption existence symmetry protocol fairness execution solvable protocol uniform bipartition global fairness assume complexity tight keywords population protocol uniform bipartition distribute protocol introduction background population protocol model introduce population protocol model abstract model performance device population protocol model device anonymous agent population agent agent passively cannot movement agent approach communicate update pairwise communication interaction computation consists infinite sequence interaction application domain population protocol sensor network monitor sensor attach monitor unpredictably hence sensor handle passive mobility another application domain molecular robot network molecular robot collectively inside achieve goal transport medicine robot movement uncontrollable robot maintain extremely memory population protocol model researcher various fundamental leader election protocol population protocol solves leader election uniform population agent eventually agent output leader others output non leader counting counting consists counting agent participate protocol agent memory typically constant output agent maintain logarithmic memory majority majority aim initial population majority partition partition consists population etc focus uniform bipartition goal population stable difference population odd guarantee stability agent eventually belongs application uniform bipartition battery sensor network switch execute task simultaneously assign task moreover uniform bipartition apply computation population protocol uniform bipartition population agent implies uniform bipartition regard calculation contrary previous communication graph uniform bipartition arbitrary graph population protocol model exist communication graph model pairwise interaction feasible however realistic network command incomplete communication graph subset pairwise interaction remains feasible performance device unpredictable movement yield interaction moreover assume designate initial agent initial various assumption existence symmetry protocol fairness execution although protocol arbitrary initial tolerate transient fault protocol designate initial usually exhibit faster convergence actually arbitrary initial constant protocol cannot construct assume graph related population protocol model propose recently award  dijkstra prize distribute compute core initial dedicate computability model subsequent various leader election counting majority uniform partition assumption existence fairness symmetry protocol initial agent leader election perspective efficiency   parallel leader election probability agent constant relax polylogarithmic   propose leader election protocol polylogarithmic stabilization  protocol furthermore protocol  optimal polylogarithmic leader election protocol protocol optimal finally propose optimal protocol solves leader election arbitrary communication graph stabilize leader election impossible protocol stabilize correctness initial global impossibility avoid oracle available stabilization requirement relaxed propose loosely stabilize protocol leader election loose stabilization relates correctness guaranteed amount counting introduce popularize concept complexity reduce finally propose optimal protocol initialization agent counting protocol without propose counting approximate counting propose protocol computes integer probability protocol output probability moreover propose counting protocol computes probability majority address assumption without failure deterministic probabilistic arbitrary communication graph etc minimize complexity offs knowledge uniform partition variant communication graph decomposition aim population designate propose uniform partition protocol extend generalize partition aim population ratio  propose partition protocol relaxed uniformity constraint population agent exist agent related uniform bipartition communication graph uniform bipartition graph designate initial complexity various assumption initialize non initialize initialize designate initial non initialize arbitrary initial asymmetric symmetric protocol asymmetric protocol interaction agent symmetric protocol behavior global weak fairness weak fairness guarantee individual pairwise interaction occurs infinitely global fairness guarantee recurrently reachable configuration eventually furthermore solvability uniform bipartition arbitrary initial minimum uniform bipartition designate initial communication graph minimum uniform bipartition designate initial graph   bound initialize non initialize  symmetric  symmetric  symmetric   exist protocol transformer transform protocol assumption assumption propose transformer protocol communication graph protocol arbitrary communication graph transformer quadruple global fairness transformer agent exchange convergence uniform bipartition agent convergence cannot exchange transformer cannot directly apply uniform bipartition propose transformer transforms asymmetric protocol symmetric protocol assume additional approach protocol communication graph transformer global fairness construct symmetric uniform bipartition protocol global fairness without contribution solvability uniform bipartition designate initial arbitrary graph summary communication graph arbitrary communication graph impossibility remain valid initialize non initialize global fairness extend protocol communication graph arbitrary communication graph non initialize weak fairness propose symmetric protocol assumption upper bound agent agent yield identical upper bound easy asymmetric protocol initialize addition communication graph protocol reduce constant concretely protocol reduce assume communication graph cycle multiple positive integer global fairness sufficient uniform bipartition asymmetric symmetric protocol respectively graph sufficient additional enables solvability arbitrary communication graph weak fairness cannot argument impossibility leader election fischer jiang overall solvability uniform bipartition variety setting population agent designate initial assume arbitrary communication graph remains feasible upper bound respect agent maintains global fairness assume bound tight minimum uniform bipartition designate initial arbitrary graph upper bound agent positive integer   bound initialize non initialize           contribution deduce definition population protocol model population communication graph arbitrary undirected graph agent possibility interaction agent agent interact protocol consists agent transition transition denote interaction agent agent occurs become respectively moreover initiator responder interact initiator responder respectively simply interacts transition null omit null transition description protocol protocol deterministic exactly transition exists deterministic protocol protocol symmetric transition exists protocol symmetric transition exists protocol symmetric protocol asymmetric global population configuration define vector local agent agent configuration denote moreover context simply denote agent transition configuration described configuration obtain interaction agent configuration exists sequence configuration reachable denote infinite sequence configuration execution protocol execution weakly agent resp interacts resp infinitely execution globally configuration occurs infinitely occurs infinitely intuitively global fairness guarantee configuration occurs infinitely interaction occurs infinitely occurs infinitely satisfy occurs infinitely deduce satisfy occurs infinitely overall global fairness configuration occurs infinitely configuration reachable occurs infinitely possibility initialize non initialize model assume agent exists partition singleton agent distinguish agent although agent cannot distinguish partition agent unlimited resource respect contrast resource limited agent limited evaluate complexity protocol focus agent allocate sequel protocol assume initialize designate initial assume non initialize arbitrary initial although agent designate initial assume exists simplicity agent refer agent refer agent initial configuration agent aware agent however protocol bound assume upper bound agent uniform bipartition function agent define agent agent resp resp agent resp agent resp agent population agent resp agent denote resp context simply configuration stable respect uniform bipartition exists partition satisfies configuration agent resp remains resp execution solves uniform bipartition configuration stable uniform bipartition finally protocol solves uniform bipartition execution protocol solves uniform bipartition upper bound non initialize upper bound uniform bipartition arbitrary graph designate initial non initialize concretely global fairness propose symmetric deterministic protocol extend protocol communication graph arbitrary communication graph weak fairness symmetric protocol upper bound agent recall deterministic protocol upper bound symmetric protocol global fairness agent protocol assume designate initial agent protocol assigns agent alternately cannot agent communication graph arbitrary throughout communication graph transition agent exists somewhere network infinitely interact agent implies repeatedly assign agent unless agent anywhere network assigns alternately uniform bipartition agent alternately decides interaction agent communication graph agent agent interact exchange implies eventually agent adjacent agent interact global fairness guarantee interaction eventually happens transition protocol transition transition exists omit description transition eventually agent transition hence exist resp agent resp agent resp initial agent protocol converges indeed interaction define agent therefore protocol solves uniform bipartition correctness protocol theorem population protocol model non initialize exists symmetric protocol per agent solves uniform bipartition designate initial assume global fairness arbitrary communication graph proof recall resp denotes agent resp eventually agent afterwards transition resp agent interact agent becomes resp becomes resp transition agent assign alternately agent decrease implies eventually alternate transition transition enable simultaneously execute disables enable transition agent agent interact exchange global fairness hypothesis transition exists agent agent eventually interact transition repeatedly unless agent agent agent recall agent assign alternately assignment moreover argument initial propose protocol symmetric therefore theorem weak fairness protocol uniform bipartition construct weakly execution protocol agent infinitely agent construct execution agent interacts agent interaction occurs agent upper bound symmetric protocol weak fairness protocol arbitrary graph protocol agent variable variable agent agent protocol protocol protocol image KB image protocol uniform bipartition protocol strategy protocol span concretely agent assigns depth variable variable initialize variable obtains depth span agent interact becomes agent agent interact becomes behavior agent eventually variable depth span initial ini assign agent concretely agent interact exchange ini hence ini eventually agent obtains ini agent interact assigns assigns resp assigns resp agent eventually hence exist resp agent resp agent variable RB resp initial therefore protocol solves uniform bipartition demonstrate correctness protocol pseudocode interaction agent lemma weakly execution protocol unless interaction occurs agent variable lemma pseudocode agent lemma agent configuration afterwards remain variable lemma agent configuration weakly execution protocol proof weak fairness assumption agent adjacent eventually interact pseudocode interaction lemma agent  graph agent adjacent agent hence eventually agent interact weak fairness assumption interaction occurs argument agent eventually lemma agent neither adjacent agent adjacent proof focus interaction agent assigns lemma lemma interaction agent exactly becomes interaction protocol become interact hence adjacent becomes neither interaction protocol interaction happens agent becomes interaction lemma afterward lemma lemma eventually weakly execution protocol lemma weakly execution protocol finite proof purpose contradiction assume configuration decrease configuration agent lemma exists agent lemma adjacent agent lemma adjacent agent hence protocol ini unless interact eventually interact decrease adjacent agent protocol ini unless interaction happens agent weak fairness eventually interact becomes ini depth agent ini decrease behavior similarly eventually agent obtains ini interact decrease contradiction weakly execution protocol lemma configuration weakly execution protocol proof execution protocol lemma induction index configuration alternative lemma immediately induction assume exists integer lemma interaction agent interact lemma interact moreover protocol RB interaction alternative lemma agent interact interaction increase RB becomes induction assumption hence alternative lemma interaction increase RB becomes induction assumption hence alternative lemma lemma lemma lemma protocol solves uniform bipartition theorem protocol solves uniform bipartition exists protocol designate initial solves uniform bipartition weak fairness assume arbitrary communication graph non initialize proof lemma lemma weakly execution protocol eventually execution moreover protocol exists agent agent protocol solves additionally protocol ini therefore theorem protocol constant restrict graph subsection complexity protocol reduce constant communication graph cycle multiple positive integer modify protocol agent maintains distance compute modulo plus protocol respectively agent define relation instead easily modification essence protocol agent agent eventually assigns depth minus modulo plus exists addition exists cycle definition relation cycle multiple assume underlie communication graph cycle agent multiple hence similarly protocol initial ini assign agent corollary exists protocol designate initial solves uniform bipartition weak fairness assume arbitrary communication graph non initialize cycle communication graph multiple positive integer upper bound upper bound uniform bipartition designate initial arbitrary communication graph concretely global fairness minimum asymmetric deterministic protocol minimum symmetric protocol weak fairness uniform bipartition cannot without proof technique fischer jiang impossibility leader election recall deterministic protocol upper bound asymmetric protocol global fairness subsection arbitrary graph designate initial global fairness asymmetric protocol define agent function agent token agent agent token transition protocol transition transition transition exists omit description protocol image KB image protocol uniform bipartition protocol strategy protocol agent token interact agent transition token delete transition token exist token decrease interaction agent agent remain token token odd disappear interaction protocol token agent without token interact transition global fairness guarantee token exist interaction transition happens eventually therefore uniform bipartition achieve protocol correctness protocol define agent respectively agent respectively agent token lemma globally execution protocol configuration proof execution protocol equation induction index configuration equation agent induction assume equation interaction transition transition transition occurs increase transition transition occurs decrease increase transition transition occurs transition transition occurs decrease increase transition transition occurs increase decrease therefore lemma lemma globally execution protocol finite proof transition increase implies configuration thereafter hence purpose contradiction assume exists globally execution protocol continuously configuration configuration occurs infinitely stable satisfies agent exists initial configuration agent interaction agent occurs transition transition decrease agent exists agent addition lemma agent exists agent adjacent token graph without swap transition configuration token reachable interact global fairness assumption occurs infinitely occurs infinitely continuously configuration contradiction lemma protocol solves assumption theorem protocol solves uniform bipartition exists protocol designate initial solves uniform bipartition global fairness arbitrary communication graph proof reduce transition reduce interaction implies lemma resp odd resp configuration lemma hence moreover agent hence stable configuration uniform bipartition odd agent exists lemma agent exists lemma hence agent hence stable configuration uniform bipartition upper bound symmetric protocol global fairness subsection arbitrary communication graph designate initial global fairness symmetric protocol obtain symmetric protocol apply transformer propose protocol subsection transformer simulates asymmetric protocol symmetric protocol transformer additional moreover transformer communication graph additional sufficient transform asymmetric uniform bipartition protocol symmetric assume arbitrary graph designate initial clearly symmetric protocol agent agent initial symmetry broken uniform bipartition cannot assume define agent function agent token agent agent token transition protocol protocol image KB image protocol uniform bipartition protocol protocol protocol agent token interact agent transition token delete eventually agent agent remain token token odd disappear however agent transition agent protocol transition agent transition implies protocol symmetric hence borrowing technique propose improve protocol protocol protocol agent transition agent without transition token delete concretely realize protocol token agent interact transition vice versa transition global fairness eventually agent interacts agent transition token delete transition transition affect essence protocol agent agent token transition agent transition token delete transition correctness protocol along proof subsection define agent respectively agent respectively agent token recall mechanism symmetry transition affect essence protocol protocol protocol equation lemma configuration execution protocol related equation corollary corollary globally execution protocol configuration agent occurs agent agent exist afterwards protocol similarly protocol transition decrease agent protocol agent exist corollary simply eventually agent occurs execution transition hence global fairness assumption configuration adjacent agent occurs infinitely eventually interact interaction transition happens agent occurs agent agent exist configuration clearly obtain lemma argument lemma lemma globally execution protocol configuration finally similarly theorem protocol solves uniform bipartition theorem protocol solves uniform bipartition exists symmetric protocol designate initial solves uniform bipartition global fairness arbitrary communication graph proof reduce transition reduce interaction implies lemma resp odd resp configuration protocol substantially protocol transition remain theorem corollary instead lemma bound asymmetric protocol global fairness arbitrary graph designate initial global fairness exists asymmetric protocol agent odd agent another infinitely globally execution uniform bipartition protocol upper bound agent proposition regardless protocol impossibility asymmetric protocol proposition globally execution uniform bipartition protocol agent infinitely implies agent stable configuration protocol uniform bipartition globally execution protocol alg uniform bipartition arbitrary communication graph agent odd agent transition another infinitely lemma assume exists uniform bipartition protocol alg designate initial arbitrary communication graph assume global fairness graph agent odd globally execution alg agent infinitely proof assume purpose contradiction exists stable configuration globally execution finite exists stable configuration infinitely without loss generality agent adjacent communication graph satisfies construct execution agent behave similarly agent converge interaction satisfies global fairness concretely globally execution interacts interacts interacts agent interaction satisfies global fairness outline remain proof globally agent converge hence agent cannot existence agent vice versa assume without loss generality stable configuration stable configuration detail proof configuration configuration resp equivalent resp definition equivalent induction index configuration proposition configuration occurs configuration resp resp equivalent resp resp infinitely infinitely equivalent induction assume configuration satisfy interaction considers interaction considers interaction interact assumption hence interacts transition implies interact equivalent additionally similarly interacts configuration immediately interact equivalent occurs infinitely globally occurs infinitely proposition agent interaction definition connects hence interact former configuration immediately interact equivalent equivalent latter configuration immediately interact equivalent equivalent infinitely globally infinitely proposition recall assume hence globally contradiction lemma theorem theorem exists uniform bipartition protocol designate initial arbitrary communication graph assume global fairness upper bound agent proof purpose contradiction assume protocol alg exists agent without loss generality globally execution alg graph agent odd lemma stable configuration agent infinitely implies agent transition agent transition stable contradiction furthermore lemma obtain corollary corollary assume exists uniform bipartition protocol designate initial arbitrary communication graph assume global fairness upper bound agent graph agent odd globally execution protocol agent infinitely corollary theorem argument theorem theorem exists uniform bipartition protocol designate initial arbitrary communication graph assume global fairness upper bound agent bound symmetric protocol global fairness arbitrary communication graph designate initial assume global fairness exists symmetric protocol recall designate initial clearly symmetric protocol solves agent assume upper bound agent symmetric protocol propose subsection solves subsection newly define exists sequence transition exists moreover agent homonym intuitively agent transition sequence interaction homonym theorem exists symmetric protocol uniform bipartition designate initial arbitrary graph assume global fairness fourteen purpose contradiction suppose exists protocol alg roadmap proof proof symmetry fist lemma existence satisfies initial agent transition transition increase agent graph graph agent converges agent agent agent interact graph graph agent exists stable configuration exists exactly agent agent graph graph subgraphs interaction subgraph configuration agent subgraph agent neither agent transition initial interaction agent converge configuration agent moreover agent agent neither agent agent agent agent whereas agent twelve therefore uniform bipartition cannot image KB image image graph detail proof resp resp resp lemma lemma lemma proof assume purpose contradiction without loss generality assume clearly combination valid belonging graph agent odd agent stabilizes globally execution alg lemma agent afterwards contradiction resp belonging resp addition without loss generality assume initial agent symmetry lemma lemma symmetric transition sequence proof purpose contradiction suppose communication graph agent globally execution resp interacts resp interaction satisfies global fairness initial agent agent interaction assumption agent hence cannot stable configuration globally contradiction additionally extend lemma detail proof later lemma exists without loss generality assume exist population denote agent resp belonging resp moreover sum context simply denote respectively theorem lemma corollary detail intermediate proof later lemma fourteen lemma exist transition increase transition lemma globally execution alg communication graph configuration corollary transition exists globally execution alg communication graph agent stable configuration odd lemma agent exchange hence exists stable configuration exists exactly agent without loss generality assume agent communication graph detail define partition image execution alg interacts interacts interacts interacts interacts interaction agent agent converge configuration interaction satisfies global fairness agent behave similarly agent implies agent lemma initial agent interaction agent agent converge moreover agent agent hence corollary agent lemma agent addition hence agent globally contradiction however focus instead assume agent resp interact resp lemma transition agent construct execution agent interact eventually contradiction proof lemma corollary lemma lemma lemma corollary proof lemma lemma exists proof globally execution alg communication graph agent agent stable configuration equation contradicts definition stable configuration contradicts agent cannot stable configuration lemma lemma symmetric transition sequence distinct exists transition sequence distinct exists transition sequence distinct exists transition sequence assume purpose contradiction transition sequence assumption stable configuration implies exist agent exist agent transition sequence interaction homonym hence definition stable configuration exists agent exist agent transition sequence transition sequence interaction homonym definition stable configuration cannot transition sequence transition sequence interaction homonym definition stable configuration cannot transition sequence assume purpose contradiction transition sequence transition sequence assume purpose contradiction transition sequence interaction homonym exists agent hence exists agent transition sequence resp transition resp sequence interaction homonym contradicts definition stable configuration purpose contradiction assume transition sequence interaction homonym addition stable configuration exist agent contradict definition stable configuration finally transition sequence communication graph agent moreover globally execution interact respectively interaction satisfies global fairness item agent hence exists transition transition exist stable configuration exist additionally exists agent stable contradiction transition sequence obtain lemma assume purpose contradiction globally execution alg communication graph agent transition exist exists transition transition exist agent stable configuration stable configuration exist addition exists agent stable contradiction therefore lemma lemma lemma lemma lemma globally execution alg communication graph stable configuration agent agent proof purpose contradiction assume exists stable configuration agent agent communication graph agent agent interact lemma resp transition resp stable contradiction lemma globally execution alg communication graph agent odd exists stable configuration resp exists exactly agent resp resp occurs infinitely proof globally execution alg communication graph agent odd lemma agent resp stable configuration exists exactly agent resp configuration lemma agent resp agent exchange resp stable configuration resp exists exactly agent resp resp occurs infinitely lemma exist transition proof globally execution alg communication graph agent stable configuration resp exists exactly agent resp resp occurs infinitely lemma exist assume lemma odd agent exist agent agent hence graph stable exists exists exists addition lemma therefore lemma lemma lemma lemma exist transition increase transition proof purpose contradiction assume transition exists lemma transition exist transition increase hence exists ini globally execution alg graph agent moreover stable configuration resp exists exactly agent resp resp occurs infinitely lemma exist odd lemma agent exists agent agent implies agent resp interact agent resp similarly agent resp interact agent resp moreover graph globally interaction infinitely interaction agent agent agent cannot stable configuration agent transition interaction however lemma agent cannot stable configuration contradiction interaction agent agent configuration obtain interaction agent cannot stable configuration interaction lemma exist exactly exactly implies stable exists agent agent interact agent hence obtain interaction agent agent clearly exist agent contradicts lemma hence transition exist consequently lemma existence lemma lemma exists transition proof purpose contradiction assume globally execution alg communication graph agent lemma exists agent agent stable configuration however assumption existence agent permanently contradiction lemma lemma lemma proof lemma lemma globally execution alg communication graph configuration proof occurs infinitely lemma configuration exists moreover lemma lemma lemma immediately lemma exists agent resp resp lemma interacts global fairness occurs infinitely lemma lemma lemma lemma obtain lemma lemma exists proof assume purpose contradiction exists globally execution alg communication graph agent odd lemma hence lemma lemma exists stable configuration resp resp agent resp resp assumption resp interacts resp resp stable contradiction lemma lemma obtain corollary corollary transition exists impossibility weak fairness subsection assume arbitrary communication graph designate initial protocol solves weak fairness fischer jiang impossibility leader election communication graph borrow proof technique apply impossibility proof uniform bipartition theorem exists protocol solves uniform bipartition designate initial weak fairness assume arbitrary communication graph proof purpose contradiction assume exists protocol alg graph agent furthermore execution alg stable configuration without loss generality assume agent combine agent image KB image graph construct execution interacts interacts interacts interacts interacts interacts similarly interacts interacts interacts configuration satisfy configuration induction index configuration equivalent clearly equivalent immediately induction assume equivalent interaction interacts interacts interacts induction assumption agent similarly agent similarly hence equivalent interact interacts interacts interacts interacts interacts interacts induction assumption agent similarly agent similarly hence equivalent equivalent implies moreover weakly clearly weakly contradiction conclude remark discussion uniform bipartition designate initial assume arbitrary communication graph investigate solvability tight bound respect per agent global fairness concretely global fairness minimum per agent enable asymmetric protocol minimum per agent enable symmetric protocol minimum per agent hence clarify uniform bipartition global fairness difference protocol without existence additional advantage termination detection assume agent initialize protocol initialize assigns agent assigns hence detect termination uniform bipartition counting assigns weak fairness impossibility obtain asymmetric protocol propose symmetric protocol weak fairness protocol weak fairness wider execution globally execution actually protocol global fairness configuration multiple implies configuration occurs interaction non null transition convergence cannot bound protocol weak fairness configuration cannot multiple null transition occurs interaction non null transition convergence bound future relation uniform bipartition classical counting leader election majority reuse proof argument existence systematic approach intrigue complexity uniform bipartition important clarify complexity probabilistic scheduler complexity complexity uniform bipartition arbitrary communication graph arbitrary initial feasible complexity