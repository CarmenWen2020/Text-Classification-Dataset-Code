satisfiability asks satisfy assignment clause exactly literal clause assign assign generalise define clause iff exactly literal clause others introduce generalise satisfiability GiXSAT instance consist clause clause satisfy assignment faster polynomial algorithm nonstandard GiXSAT respectively polynomial variable improves polynomial algorithm GXSAT zhou jiang yin GXSAT  GXSAT  addition faster algorithm GXSAT GXSAT GXSAT respectively expense exponential keywords conquer  exponential algorithm introduction satisfiability important computational complexity theory commonly framework combinatorial NP addition application AI planning software model variant exponential exponential algorithm developed explore importance variant explore variant satisfiability  asks satisfy assignment exactly literal clause assign assign false  widely  algorithm prior algorithm    recent hoi improve bound generalise  constant bound arbitrary collection clause instance clause exactly literal satisfied satisfiability distinguish individual GiXSAT satisfiability bound described  GiXSAT cardinality constraint propositional logic model GiXSAT sits  knapsack implication  GiXSAT immediate definition standard reduction  knapsack easily modify reduction  knapsack variable increase restriction clause therefore  equivalent GXSAT GiXSAT NP focus GiXSAT  polynomial algorithm GXSAT improve bound addition algorithm GXSAT GXSAT respectively recently zhou jiang yin algorithm GXSAT improve upon  GXSAT algorithm algorithm polynomial  algorithm GXSAT expense application split technique schroeppel shamir propose algorithm GXSAT GXSAT GXSAT respectively clause complex clause satisfy complexity GXSAT GiXSAT publish algorithm reflect improve bound obtain comprehensive distinction GXSAT nonstandard variant furthermore GXSAT nonstandard timing addition propose faster algorithm GXSAT GXSAT GXSAT respectively exponential achieve modify technique schroeppel shamir asymmetric split variable union clause exploit clause literal literal apply brings overall assignment however cannot cannot guarantee fully clause variable preliminary branching factor vector introduce definition repeatedly technique understand analysis algorithm algorithm davis     style algorithm bound reduce algorithm  algorithm recursive associate simplification branching simplification simplify instance terminate algorithm branching instance recursively instance understand execution  algorithm notion commonly assign node subsequent node assign instance whenever invoke branching information refer textbook fomin  analyse  algorithm bound leaf generate choice denote maximum leaf branching therefore complexity algorithm analyse branching separately runtime branching upper bound algorithm branching instance generate instance branching linear recurrence employ technique leaf generate branching therefore unique positive denote branching factor branching branching vector branching entire  algorithm branching factor entire algorithm introduce branching factor positive branching factor eliminates branching factor multiple branching entry branching factor suppose balance branching factor finally suppose branching vector branching suppose immediately branching branching vector apply branching vector addition combine branching vector technique sometimes overall complexity algorithm finally correctness  algorithm usually definition onto actual algorithm definition definition clause disjunction literal alternatively clause multiset literal literal clause clause finally  literal clause addition  greek  definition clause neighbour clause variable denote variable clause neighbour clause overlap variable clause definition clause exactly literal assign likewise clause satisfiable assign literal clause simplicity clause satisfiable instead satisfiable midst branching clause clause therefore introduce definition distinguish clause formula definition variable link deduce happens proceed remove link variable clause deduce replace occurrence definition denote variable literal formula variable definition mainly GXSAT polynomial algorithm variable clause definition formula denote formula obtain assign likewise denote formula obtain replace occurrence  clause denote formula obtain additional clause denote formula obtain assign literal branching technique deploy branching suppose clause clause literal assign resolution resolution technique allows remove variable negate  preserve overall satisfiability formula variable occurs positive negative clause  replace clause clause clause clause clause GXSAT polynomial polynomial algorithm GXSAT introduce nonstandard debt technique algorithm analysis nonstandard GXSAT algorithm variable strongly clause iff truth depends properly strongly clause clause clause truth cancel therefore remove clause whenever situation algorithm GXSAT apply clause variable iff strongly hence handle beyond notion equivalent variable define optimal chosen linear computer program overall runtime algorithm addition therefore clause clause variable variable clause clause assign remark algorithm clause dissolve therefore survive variable clause increase variable receives literal remain clause variable link resolution description happens dissolve clause variable variable clause variable conclude simplify accordingly clause remove longer clause define variable strongly clause clause satisfy actual choice strongly clause literal literal clause literal gain remain literal literal remain literal assigns variable gain literal link item elimination variable clause unsatisfiable clause link concludes variable become therefore clause simplifies accordingly link variable variable verification assigns variable replace variable address gain variable however avoid gain explicitly verification resolution GXSAT algorithm prior remove overlap formula remove multiple occurrence variable clause remove multiple overlap clause subcases clause  literal literal due distinction link variable clause overlap link survive clause downgrade clause longer strongly variable affected resolution gain however none variable occurs twice neither variable strongly clause hence variable application resolution inside algorithm GXSAT increase variable detail verification branching debt borrow constant branching splitting consistency however immediate operation debt restore debt debt outgo therefore affect however operation restore debt debt simultaneously subsequent action immediately repay debt technique define debt branching borrows constant define transition likewise transition minus debt technique repay debt immediately borrow simplifies information refer  doctoral thesis  algorithm overview algorithm GXSAT formula cnf formula satisfiable output denotes satisfiable denotes unsatisfiable neither variable multiple overlap clause multiple occurrence variable formula instance polynomial algorithm  therefore remove variable multiple overlap clause multiple occurrence variable GXSAT instance polynomial algorithm decrease priority priority algorithm assume earlier algorithm longer apply recursive bound algorithm GXSAT algorithm GXSAT input output satisfiable unsatisfiable clause satisfiable return clause return GXSAT clause clause update return GXSAT clause update update return GXSAT clause literal return GXSAT clause literal exactly twice clause literal exactly update return GXSAT clause literal return GXSAT literal clause replace clause literal clause update return GXSAT clause return GXSAT GXSAT literal clause simplify simplify update formula simplify return GXSAT branching return GXSAT GXSAT clause literal twice simplify simplify formula update return GXSAT return GXSAT GXSAT clause exactly literal twice simplify simplify formula update return GXSAT literal return GXSAT GXSAT clause clause update simplify return GXSAT literal clause variable return GXSAT GXSAT GXSAT detail branching variable clause clause variable return GXSAT GXSAT clause simplify simplify formula return GXSAT branching variable return GXSAT GXSAT GXSAT variable formula specific subcases detail later return GXSAT GXSAT brute remain variable formula formula polynomial return satisfiable return algorithm algorithm clause unsatisfiable return algorithm constant clause clause definition literal assign clause becomes clause algorithm constant clause remove clause safely constant clause algorithm literal clause satisfy definition literal clause algorithm clause literal twice equivalent clause literal exactly algorithm literal clause literal clause literal algorithm literal clause clause valid originally clause exactly literal assign literal assign negate literal exactly literal assign literal assign clause literal clause algorithm simplification polynomial algorithm onwards contribute exponential growth algorithm hence  analysis complexity detail algorithm literal clause literal clause formula clause delay handle literal clause directly handle increase bottleneck entire algorithm algorithm literal clause variable literal clause clause algorithm clause literal twice algorithm clause contains literal twice clause literal clause algorithm clause clause algorithm clause clause variable algorithm literal clause clause literal clause algorithm clause clause longer literal clause algorithm clause clause variable formula algorithm variable formula brute remain variable remain formula polynomial return satisfiable otherwise therefore correctness bound algorithm analysis algorithm whenever perform link clause survive variable increase scenario due variable clause hence account increase remove survive variable clause increase decrease remove therefore net whenever perform link clause analysis algorithm algorithm onwards simplification polynomial onwards branching contribute exponential growth algorithm finally polynomial variable exist formula therefore analyse algorithm onwards notion strongly coincide clause branching factor literal remove link branching factor literal literal remove variable remove variable therefore branching factor algorithm execute clause literal clause factor increase due link variable branching branching factor literal clause remove link variable symmetric branching factor remove remove link variable branching factor link satisfiable algorithm literal clause clause increase due link factor branching factor clause literal twice simplify algorithm handle therefore suffices subcases variable variable clause link apply analysis literal remove variable remove variable therefore branching factor algorithm clause literal twice increase due link variable factor branching factor clause exactly literal twice simplify previous algorithm clause literal twice variable remove variable remove variable variable variable literal clause literal clause enumerate literal treat variable upper bound branching factor remove variable remove literal branching factor remain assume literal literal cannot clause satisfiable therefore variable sum clause simplify clause afterwards conclude simplify variable clause allows link simplification therefore satisfiable therefore therefore therefore literal remove branching factor remain literal literal clause factor additional via link therefore branching factor finally literal clause literal literal clause literal clause neighbour variable remove variable literal clause variable literal clause happens branching factor analyse critical distinction analysis situation clause treat variable upper bound branching factor remove variable remove link variable branching factor remove therefore branching factor increase due link respective branching already factor branching factor clause clause onwards literal clause clause literal clause overlap previous clause clause clause remove redundant replace handle clause algorithm literal satisfied contradiction simplify accordingly literal assign therefore clause clause decrease overall replace handle earlier algorithm literal twice replace clause handle earlier algorithm literal clause clause therefore mainly simplify hence increase variable literal clause specific variable scenario previous algorithm clause clause overlap variable remove variable remove variable branching factor exactly variable literal clause exactly previous variable eliminate replace variable via link branching factor variable literal clause variable clause  treat variable upper bound branching factor literal assign remove variable finally link variable branching factor clause symmetric situation branching factor clause mixed situation eliminates variable link eliminates variable link likewise increase due link variable factor respective branching factor clause clause previous algorithm clause literal clause neighbour  clause literal positive literal negative literal without loss generality literal alternatively literal assign link literal debt branching factor symmetric debt branching factor debt debt subsequent node debt literal assign clause apply resolution remove link literal branching factor literal assign clause apply resolution remove link literal branching factor literal assign remove variable clause apply resolution remove remove literal branching factor literal clause neighbour suppose clause remove literal variable remove link variable debt branching factor symmetrically branching branching debt branching factor clause another literal clause remove literal remove link literal earlier debt symmetrically exactly literal clause neighbour suppose clause analyse suppose remove literal variable remove link literal branching factor therefore variable clause remove link literal variable literal assign branching factor literal assign variable remove link literal debt branching factor clause variable branching factor link increase factor branching factor link resolution increase variable resolution due apply literal clause resolution increase clause clause due define nonstandard clause onwards variable clause clause default unless specifically mention literal combine clause conclude satisfied simplify accord derive clause clause replaces handle algorithm sum clause literal replace clause derive therefore therefore clause reduce overall formula remove variable remove variable impossible otherwise therefore literal assign contradiction therefore remove variable literal assign remove variable addition therefore remove variable branching remove variable remove variable finally remove clause remove variable downgrade literal clause algorithm remove variable remove variable debt debt repaid clause repay remove variable earlier apply literal remove variable literal remove variable clause remove variable clause remove variable debt clearing debt literal clause variable survives link variable link clause branching factor debt debt clearance literal clause completes overlap variable variable contains distinguish subcases cannot clause satisfiable remove variable clause remove debt clause remove variable link literal remove variable remove variable link variable remove variable branching factor variable remove become clause literal assign remove variable link literal remove variable literal assign remove variable link literal literal assign variable remove variable factor remove variable variable remove variable factor remove variable variable remove variable factor remove variable variable completes clause onwards worry increase variable already maximum variable formula subcases earlier algorithm clause addition clause split clause remove clause clause addition becomes literal clause debt remove clause subsequently debt branching literal clause clause remove remove debt debt clearance literal clause debt debt literal clause debt debt clearance remove debt debt repaid clause literal variable clause earlier apply literal clause literal clause fourth remove variable variable altogether cannot exclude variable therefore variable account avoid counting remove clause symmetric fourth debt fourth debt literal clause debt branching disjoint literal clause literal literal clause disjoint earlier longer apply brute remain variable bound variable variable variable literal clause neighbour variable previous algorithm cannot neighbour variable neighbour variable neighbour contribute ratio non variable variable therefore variable ratio variable variable therefore branching variable algorithm variable dealt therefore safely polynomial happens algorithm correctness algorithm handle previous branching factor compute earlier theorem GXSAT algorithm GXSAT polynomial algorithm GXSAT unlike GXSAT algorithm GXSAT algorithm simpler directly clause branching remove advantage clause clause nonstandard GXSAT algorithm variable clause without loss generality variable clause variable ignore define clause GXSAT algorithm chosen optimal linear computer program overall runtime algorithm variable variable finally variable variable clause assign therefore algorithm GXSAT algorithm algorithm analysis per priority etc bound algorithm GXSAT input formula output satisfiable unsatisfiable clause satisfiable return clause literal return GXSAT clause literal clause update formula return GXSAT remove clause return GXSAT clause update clause update formula return GXSAT clause literal clause exactly clause clause literal exactly formula return GXSAT clause literal return GXSAT GXSAT clause literal simplify simplify bet update formula return GXSAT return GXSAT GXSAT clause clause branching variable literal return GXSAT GXSAT GXSAT clause literal therefore literal  simplify variable simplify update formula return GXSAT return GXSAT GXSAT clause variable variable return GXSAT GXSAT GXSAT algorithm clause satisfiable remove literal clause remove constant clause remove satisfied downgrade clause remove constant clause constant exist formula literal clause downgrade clause simplification onwards branching remove clause branching clause exist formula clause literal remain clause clause literal clause literal finally remain clause clause literal completes algorithm algorithm GXSAT therefore correctness algorithm analysis algorithm link variable clause survive variable increase therefore fix link clause link clause link clause previous algorithm simplification therefore analyse algorithm  onwards branching clause literal clause clause literal therefore remove therefore remove therefore branching factor remove variable via link remove variable branching factor completes clause increase due link variable factor branching factor clause literal simplify clause formula hence variable literal branching algorithm apply anymore remove therefore branching factor clause simplify therefore apply variable branching remove variable remove completes clause literal twice simplify branching link increase variable clause clause branching variable literal clause handle negate literal becomes literal clause overall branching factor becomes literal clause becomes literal clause initial branching factor apply vector addition remove literal clause remove literal clause branching factor literal remove variable remove remain clause literal clause remove initial branching factor apply vector addition literal clause branching factor apply branching vector addition branching factor literal remove variable clause literal clause remove branching factor completes clause perform link variable increase survive variable factor branching factor clause literal therefore literal  simplify variable onwards variable formula algorithm apply anymore variable therefore branching remove variable remove branching factor literal variable satisfiable branching involve remove clause clause remove variable literal assign branching factor cannot variable satisfiable therefore variable branching variable remove literal clause initial branching factor becomes literal clause branching factor branching factor hence branching involve clause branching factor branching factor satisfiable satisfiable branching finally branching factor completes clause literal onwards worry increase variable due link variable clause literal becomes literal clause overall becomes clause overall literal  becomes clause literal clause downgrade literal clause negate literal branching factor clause remove clause becomes literal clause downgrade literal clause branching factor clause remove clause remove initial branching factor apply vector addition literal clause branching factor literal clause branching factor clause remove clause remove branching factor branching factor analysis theorem algorithm solves GXSAT GXSAT polynomial algorithm GXSAT algorithm GXSAT algorithm GXSAT extends however assign GXSAT algorithm variable correspond GXSAT algorithm nonstandard GXSAT algorithm variable clause without loss generality variable clause variable ignore define dependence GXSAT algorithm chosen optimal linear computer program overall runtime algorithm variable variable variable finally variable algorithm earlier algorithm priority etc recursive algorithm GXSAT algorithm GXSAT input cnf formula output satisfiable unsatisfiable clause satisfiable return clause return clause literal return GXSAT clause literal clause update formula return GXSAT remove clause return GXSAT clause clause update return GXSAT clause literal clause exactly clause clause literal exactly clause literal clause literal formula return GXSAT clause literal return GXSAT GXSAT clause return GXSAT GXSAT clause literal return GXSAT GXSAT GXSAT clause literal literal  simplify variable simplify update formula return GXSAT return GXSAT GXSAT clause simplify apply branching simplify update formula return GXSAT branching literal return GXSAT GXSAT GXSAT clause literal simplify simplify update formula return GXSAT return GXSAT GXSAT clause simplify apply branching simplify update formula return GXSAT branching literal return GXSAT GXSAT GXSAT algorithm clause satisfiable return literal clause satisfy algorithm constant formula downgrade clause remove clause clause satisfied algorithm remove constant formula constant exist formula literal clause clause downgrade clause simplification onwards branching contribute exponential growth algorithm algorithm clause algorithm clause literal twice algorithm remove remain clause branching clause literal clause exist formula algorithm clause literal remove remain clause literal clause clause literal finally remove clause literal clause therefore hence algorithm GXSAT algorithm extension GXSAT algorithm handle clause analysis algorithm analyse complexity GXSAT algorithm previous algorithm whenever link variable clause factor increase survive variable clause factor increase link clause link clause link clause simplification polynomial hence analyse onwards branching clause literal remove branching factor therefore branching factor remove variable branching factor completes clause increase due link variable factor branching factor clause variable simplify branching involve already handle algorithm literal remove variable branching factor algorithm apply anymore branching branching factor concludes clause literal twice simplify branching increase variable clause literal twice handle clause obtain negate literal becomes literal clause overall decrease branching branching factor remove initial branching factor becomes literal clause branching factor becomes literal clause branching factor apply branching vector addition respectively remove variable remove clause literal finally remove variable branching factor completes clause increase variable due link variable factor branching factor clause literal therefore literal  simplify variable onwards variable formula literal split branching involve anymore contains variable therefore branching remove variable branching factor literal twice literal assign satisfiable literal clause branching factor satisfiable branching involve simplify finally clause literal branching factor completes literal clause simplify branching increase variable clause literal clause assign literal becomes literal clause overall becomes clause overall remove literal clause remove becomes literal clause literal clause negate literal remove become literal clause remove via link clause literal clause literal clause clause remove via link clause remove becomes literal clause branching factor apply vector addition sum vector branching factor remove literal clause remove via link literal clause finally remove variable branching factor completes clause increase due link variable factor branching factor clause literal twice variable formula remove another variable remove variable branching factor suppose literal literal assign literal literal satisfiable cannot remove clause remove branching factor variable satisfiable therefore variable therefore branching branching factor completes literal literal twice literal twice downgrade clause literal exactly handle earlier algorithm assign literal downgrade clause branching remove clause literal clause clause literal clause literal assign branching factor clause therefore literal clause negate literal hence literal clause therefore downgrade clause former latter remain clause clause finally branching factor finally clause branching factor completes literal clause onwards variable hence increase variable clause literal assign literal negate literal becomes clause overall negate literal becomes clause overall negate literal becomes clause overall clause becomes literal clause downgrade clause therefore branching factor remove literal clause remove literal clause finally becomes literal clause literal clause therefore branching factor remove literal clause remove literal clause remove literal clause literal clause branching factor branching factor apply vector addition branching factor literal clause remove literal clause finally initial branching factor literal clause branching factor apply vector addition branching factor literal clause remove literal clause finally branching factor therefore algorithm prof correctness algorithm branching factor obtain theorem algorithm solves GXSAT exponential algorithm denote clause formula faster algorithm GiXSAT modification schroeppel shamir complexity generalise  knapsack algorithm exponential roughly clause satisfy literal calculate assignment variable literal clause satisfied vector database standard database technique reading vector database database logarithmic database polynomial purpose variable assignment computes vector literal variable vector database exists achievement schroeppel shamir usage roughly instead sketch algorithm intend optimise therefore conceptually easy algorithm outline  verify schroeppel shamir indeed applicable GiXSAT modify schroeppel shamir derive faster algorithm GiXSAT exponential asymmetric splitting exploit splitting variable variable vector GiXSAT consists clause fully union clause therefore enumerate variable saving allows handle variable instead variable tuples generate actually within computes choice remain variable correspond vector checked data instance GiXSAT satisfiable explain algorithm verification formally algorithm GiXSAT input output satisfiable unsatisfiable algorithm strictly split variable variable variable belong clause clause partially variable split literal literal clause literal clause imposes constant additional factor runtime algorithm clause clause clause clause substitute fix variable clause clause clause reduce clause literal clause already negative correspond unsatisfiable choice variable clause literal clause discard satisfy literal correspond vector database update checked polynomial choice remain variable compute vector literal clause satisfied splitting combine vector database possibility correspond vector database output output occurrence investigate variable occurs clause restriction assumption easy mathematically obtain occurrence multi occurrence variable GiXSAT branching clause clause combination variable clause allows improve GXSAT GXSAT GXSAT branching factor clause distinct variable independent negate clause negate variable clause obtain equivalent clause furthermore variable repetition clause variable clause variable clause variable branching clause possibility literal branching factor repetition literal clause possibility variable normalise average variable branching factor per variable allows compute overall branching factor brute clause clause variable variable repetition GiXSAT clause variable clause within correspond entry void entry ignore splitting variable variable clause clause variable brute per variable optimal chosen calculation refers GXSAT   factor  denote branching factor clause denotes branching factor branching clause denotes branching factor branching clause clause denote clause verification euler constant approximately logarithm equivalent derivative approximately derivative negative negative already approximately justifies conclusion maximal similarly derive bound max branching factor branching literal clause overall timing split therefore GXSAT algorithm GXSAT GXSAT expand previous   factor  expand previous interpret manner previous GXSAT max branching factor branching literal clause therefore GXSAT algorithm GXSAT max branching factor literal clause therefore hence GXSAT algorithm multi occurrence previous GiXSAT algorithm assumption literal clause however literal clause assume clause simplify clause therefore assume literal occurs positive negative notation treat clause clause assume clause investigate variable positive satisfy clause satisfied bound previous therefore implies branching factor hence literal exactly clause clause denote satisfy clause define maximum satisfy clause clause variable define maximum satisfy clause variable variable clause therefore investigate occurrence definition recall occurrence goal computer program display induction literal exactly therefore option satisfy similarly therefore denote variable twice literal denote variable denotes combination satisfy clause variable variable variable twice define maximum choice satisfy clause variable hence recursion formula variable clause unsatisfiable variable variable unsatisfiable variable twice clause satisfy clause assign literal define recursion formula variable twice clause satisfied satisfy clause hence formula choice satisfy variable formula satisfy clause choice satisfy denote variable denote variable twice denote variable denotes combination satisfy clause variable variable variable twice variable define maximum choice satisfy clause variable hence define recursion formula variable clause satisfiable variable clause satisfiable variable twice clause satisfiable variable satisfy clause assign literal define recursion formula variable clause satisfied satisfy clause hence formula choice satisfy variable twice formula suppose variable twice clause becomes clause variable explains portion choice finally satisfy clause choice explains recursion formula denote variable denote variable variable twice finally variable denotes combination satisfy clause variable variable variable twice variable finally variable define maximum choice satisfy clause variable hence define recursion formula clause variable satisfiable variable cannot satisfy clause variable twice cannot satisfy clause variable cannot satisfy clause variable literal assign satisfy clause define recursion formula variable clause satisfied satisfy clause hence formula choice satisfy variable clause suppose variable clause becomes clause variable explains portion choice clause contains variable twice variable twice clause clause becomes clause remain variable twice variable therefore choice finally satisfy clause choice explains recursion formula remain induction suppose induction hypothesis therefore variable clause variable possibility satisfy clause clause satisfied clause therefore satisfy clause therefore therefore completes inductive proof therefore multi occurrence clause scenario algorithm clause variable clause summary future polynomial algorithm GXSAT GXSAT GXSAT algorithm nonstandard optimize bound GXSAT algorithm GXSAT GXSAT algorithm goal introduce algorithm remove clause nonstandard improve algorithm without explosion however effort algorithm GXSAT algorithm improve bound exponential algorithm GXSAT GXSAT GXSAT split variable asymmetrically clause clause obtain branching factor brute variable balance load  allows improve EXPSPACE algorithm schroeppel shamir complexity bound GXSAT GXSAT GXSAT GiXSAT sequence correspond complexity converges furthermore polynomial algorithm complex future investigation improve algorithm timing without explosion improvement timing attempt however