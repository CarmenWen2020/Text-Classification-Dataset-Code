scorpion puzzle category solitaire configuration solitaire generalize arbitrary configuration perspective computational complexity popular solitaire namely klondike spider hardness proof scorpion unique twist aforementioned narrow worthwhile issue investigate NP klondike spider scorpion initial configuration scorpion allows sequence NP remains initial configuration contains lock constant ratio constraint deck tableau succeed negatively NP configuration klondike solitaire allows sequence keywords solitaire computational complexity introduction solitaire player puzzle employ deck tableau goal achieve configuration tableau apply legitimate initial configuration deck tableau initial configuration solitaire intend accord solitaire existence fortune gain popularity  variation solitaire exist remind klondike spider scorpion scorpion solitaire introduce traditionally played version deck compose partition rank ace consists tableau stock tableau consist stack stock reserve initial layout stock stack dealt tableau stack stack consist goal stack tableau descend rank ace rank stack goal pursue perform sequence stack stack hence non perform within choice perform preserve relative empty slot tableau stack becomes stack player stock stack leftmost slot tableau image KB image initial scorpion layout image KB image non computational complexity initial layout sequence exists achieve goal needle generalize layout layout deck tableau compose arbitrary initial arrangement stock initial arrangement differently information instead lock lock cannot unlocked stock lock choice information literature topic solitaire computational complexity perspective novel topic remark whenever complexity solitaire implicitly refer generalize version employ deck arbitrarily computational complexity solitaire automate planning domain AI planning competition prof planning strategy precisely author reduction NP strategy exists NP completeness proof spider reduction hardness proof scorpion solitaire reduction however substantially approach model non deterministic choice truth assignment variable boolean formula indeed non deterministic behavior intrinsic spider instance scorpion non ace exactly klondike popular solitaire partly presence microsoft pre instal thoroughly analyze computational complexity perspective classical version NP reduction klondike multiple covering feature analyze complexity restrict version klondike achieve membership hardness proof variety complexity version NP NL presence weakens intrinsic non deterministic behavior solitaire author puzzle strongly suspect possibly NL actually exploit similarity scorpion forbid multiple covering feature version klondike NP strengthen negatively therein formal definition NP completeness strategy scorpion exists initial empty stock strengthen remains NP initial lock exploit NP completeness version klondike scorpion solitaire definition solitaire relies parameter stock lock deck per tableau however throughout parameter role hardness deck tableau besides needle arrangement tableau towards understand ultimate characteristic scorpion solitaire indeed remains NP contains constant specifically contains hence tableau parameter really hardness content discussion introduce related conclusion preliminary deck scorpion layout deck arrangement stock stock sequence consists possibly empty stack lock stack unlocked stack non empty unlocked stack sequence subcolumn subcolumn uppermost subcolumn scorpion sequence scorpion layout transition occurs accord mutually exclusive described non empty stock derive stock hth stock becomes unlocked stock empty unlocked derive uppermost subcolumn empty empty unlocked derive uppermost subcolumn similarly previous scorpion layout scorpion layout exactly non empty scorpion scorpion scorpion layout deck scorpion layout scorpion SWG consists exists scorpion proof reduction shortly recall instance boolean variable clause exactly literal literal variable negation ith literal slight abuse notation respectively literal computational complexity classical scorpion solitaire computational complexity SWG proof membership NP aim scorpion layout exists scorpion exists scorpion indeed longer scorpion consists transition accord transition accord transition accord transition accord another meaningful compose possibly shift another appropriate stock hence certificate instance SWG sequence scorpion layout verify actually scorpion polynomial prof SWG NP NP completeness SWG explicitly theorem weaker version theorem proof firstly version proof reader intricate proof theorem theorem SWG NP restrict instance deck stock initial layout empty proof assertion reduction instance without loss generality assume description instance SWG correspond instance intricate reader refer intuition gadget structure image KB image instance SWG correspond formula deck consists proof closer player denote instead define define variable define clause club clause partition variable gadget clause gadget consist critical variable gadget variable associate denote contains unlocked contains unlocked clause gadget clause associate unlocked respective contains contains contains finally contains stack unlocked model variable negation clause lock lock lock lock lock lock critical critical consists unlocked critical stack lock namely spade diamond club unlocked define consists stack remain structure description needle derive polynomial remains exists scorpion exists truth assignment satisfy clause assume truth assignment satisfy derive scorpion sake readability sequence yield scorpion layout compose subcolumn lock stack unlocked become clause gadget become unlocked respectively another lock stack unlocked subcolumn previous lock stack unlocked become clause gadget satisfies clause respectively therefore become become derive scorpion layout actually critical unlock critical procedure unlocked become critical onto pile critical hence unlocked diamond subcolumn critical proceed diamond similarly spade club derive scorpion conversely assume exists scorpion exists critical critical contains unlocked unlock directly beneath subcolumn former cannot lock critical become unlocked hence beneath lock variable gadget become unlocked subcolumn subcolumn summarize mutually exclusive occurrence forbids occurrence hence construction occurs occurs truth assignment variable satisfies clause hence clause hence clause prof built truth assignment satisfies clause reduce SWG NP instance satisfy restriction theorem played deck initial layout empty stock lock intermediate express lemma theorem lemma rely reduction lemma SWG remains NP restrict instance deck initial layout stock empty lock proof transform instance scorpion layout deck consist lock stock empty refer image KB image correspond formula define occurrence literal occurrence literal variable spade variable finally define diamond clause finally club clause layout construction theorem variable gadget variable associate clause gadget clause associate respectively consists stack model variable negation clause hth literal stack inductively hth literal stack correspond occurrence negate variable rth clause hth literal stack correspond occurrence critical critical stack remain stack underneath critical stack underneath finally underneath description proceed formally actually yield reduction briefly discus difference proof theorem proof theorem lock stack played characteristic goal clause gadget related literal trigger choice variable gadget hide critical configuration met recreate scenario structure replace somehow automatic mechanism unfortunately lock gadget instead detect bind behavior chain bound involve unable chain mechanism depict image KB image chain dependency clause gadget variable exists scorpion exists truth assignment satisfy clause assume exists truth assignment satisfy derive scorpion subcolumn becomes clause subcolumn previous becomes uncovered clause satisfies clause respectively therefore become become derive scorpion layout actually excess diamond critical onto stack onto stack onto stack onto onto onto onto finally onto sequence configuration critical sequentially onto critical variable truth assignment phase similarly finally derive scorpion conversely assume exists scorpion exists critical critical prevent therefore reduction theorem onto become uncovered without club become uncovered completes circular sequence dependency alternative impossible conclusion trigger gadget clause uncovered prevent lock argument trigger gadget clause already described situation occurs chain dependency requirement trigger clause chain trigger dependency depict image KB image chain dependency critical summarize argue become uncovered clause gadget trigger club acceptor belong consists acceptor clause assume hence uncovered acceptor hence sequence trigger clause clause variable correspond literal become uncovered almost remains argue satisfy truth assignment formula similarly proof theorem acceptor belongs acceptor belongs chain dependency critical consequence uncovered configuration mutually exclusive variable gadget clause gadget trigger construction corresponds satisfy assignment hence proof theorem SWG NP restrict instance deck initial layout contains empty stock lock explicitly generalization theorem SWG NP fix proof reduction instance however reduction proof lemma derive scorpion layout deck layout correspond described proof lemma respectively deck per scorpion layout correspond construct lemma derive contains denote simply derive sequence replacement replace club  counterpart replace replace replace replace diamond replace replace replace spade replace replace finally replace image KB image correspond formula arrow highlight critical correspond proof lemma crucial role proof remains exists scorpion exists truth assignment satisfy suppose exists truth assignment satisfy hence lemma exists scorpion deck critical non empty critical denote deck scorpion layout derive replacement described derive scorpion indeed scorpion maximum rank empty legal scorpion deck derive stack critical becomes critical derive stack critical becomes critical finally derive stack critical becomes critical hence scorpion suppose exists scorpion belong without loss generality assume uncovered hence hence denotes scorpion layout obtain apply reverse replacement outline scorpion proof lemma prof satisfiable constant towards understand role played parameter concur definition SWG hardness previous SWG NP independently stock lock deck hardness SWG relies parameter deck layout theorem SWG remains NP bound linear function specifically theorem SWG NP restrict instance deck initial layout contains empty stock lock contains proof theorem consists basically simulation scorpion layout hence scorpion layout defer appendix klondike foundation empty progress foundation built tableau consists stack stack goal klondike foundation foundation empty ace stack tableau remove tableau become foundation foundation stack tableau remove tableau become foundation hence foundation tableau organize becomes foundation stack tableau alternate stack tableau stack similarly similarly scorpion solitaire whenever source stack destination stack tableau source stack destination stack onto empty stack stack becomes klondike allows foundation stack correspond foundation stack stock stack player click stock dealt waste waste playable played immediately becomes playable precisely stack tableau decrease alternate information thoughtful solitaire although lock till remove needle deck arbitrary amount tableau arbitrary amount stack furthermore  mention assume configuration allows stack tableau possibly prof NL exists klondike layout deck restrict initial layout empty stock waste generalize namely maximum rank empty stack tableau restrict version klondike related decision  proceed remark similarity SWG restrict deck empty stock  indeed maximum rank exists unique tableau conversely ace exists unique tableau however noticeable difference accord klondike foundation decrease structure exists scorpion solitaire easy directly reduction SWG  anyway building reduction described proof lemma theorem strengthen theorem theorem  NP proof reduction already reduction proof lemma theorem recall scorpion layout associate instance proof theorem deck contains transform klondike layout replace deck contains odd ace needle denotes layout obtain replace accord hence insert ace critical proof lemma respectively otherwise lock ace beneath critical klondike odd detail klondike construction klondike layout correspond empty stock waste tableau consist plus klondike finally empty foundation image KB image correspond formula remains truth assignment satisfy klondike proceed worthwhile klondike perform stack tableau foundation tableau hence due structure klondike contains foundation ace lock critical otherwise suppose exists truth assignment satisfy hence theorem exists scorpion recall derive definition indeed hence moreover denote klondike layout obtain obtain klondike generalize klondike ace foundation layout execute correspond remain scorpion klondike tableau empty critical odd alternate klondike odd alternate hence foundation derive klondike conversely suppose exists klondike similarly reduction ace become uncovered foundation happens ace uncovered otherwise ace beneath critical lock remain behave scorpion counterpart already cannot foundation ace argument lemma theorem sequence perform variable gadget clause gadget trigger unlocked portion critical already proof lemma theorem exists truth assignment satisfy conclusion computational complexity strategy exists scorpion solitaire NP lock negatively NP configuration klondike solitaire allows sequence scorpion depends parameter per lock stock theorem complexity influence lock stock instead role played complexity relation intrigue actually theorem constant per sufficient remain parameter accountable hardness however related remain theorem prof remains NP trivially tableau contains issue understand happens constant constant unclear remain actually trivially contains issue longer easy per increase remark relation another perspective instead amount complexity SWG respect ratio respect transform layout described proof theorem appendix layout besides shift arbitrary constitute shift replace ith easy exists scorpion exists scorpion chosen arbitrarily function instance SWG remains NP ratio appendix proof theorem sake lighten notation denote simply parenthesis scorpion scorpion layout ith obtain scorpion layout deck empty stock lock throughout denote without loss generality assume define contains transform scorpion layout contains scorpion exists scorpion exists define intermediate layout deck empty stock lock consists odd already hence consequence scorpion correspondence scorpion scorpion derive layout deck consist perform shift replace constitute belong sake readability recall whenever split unused namely transform aim define finally transformation scorpion layout arbitrary scorpion layout remark meaningful goal reduction layout layout image KB image transformation scorpion layout arbitrary scorpion layout respectively  interpretation reader refer web version article denote sequence iterate incrementing iteration immediately sequence occurrence occurrence content sequence content sequence image KB image occurrence finally placement subcolumn depict grey image KB image occurrence sequence scorpion exists scorpion exists lemma exists scorpion exists scorpion proof scorpion accordingly scorpion sequence partition phase phase simulation increase perform precisely sequence sequence denote concatenation sequence sequence furthermore denote layout sequence phase furthermore finally phase cleaning phase consists sequence sequence description layout phase phase modify phase phase scorpion layout phase phase simulation correspond perform interleave empty precisely index afterwards sequence empty derive sequence easy task detailed index alternate sequence simulation empty sort decrease phase empty uppermost subcolumn shift additive already empty hence hypothesis simulated empty hence earlier correspondingly simulation empty implies phase sort decrease remain finally sort eventually empty phase scorpion scorpion layout scorpion necessarily sequence however forbid sequence eventually interleave finally argument role regard conclude sequence eventually interleave iterate sequence sequence eventually interleave role regard sequence contains shift subcolumn denote index contains shift contains subcolumn explicitly likewise odd somehow arbitrary within layout remark occurs sequence placement subcolumn depict grey lemma exists empty layout proof layout cannot previously hence forbid implies layout layout cannot iterate easily verify layout layout cannot consequence cannot cannot layout layout remain finally cannot hence cannot similarly subcolumn maximal subcolumn layout lemma maximal subcolumn maximal subcolumn exists proof maximal subcolumn exists assume maximal subcolumn exists layout derive maximal subcolumn hence assertion consequence belongs maximal subcolumn  eventually empty subcolumn subcolumn trivially empty maximal subcolumn maximal subcolumn inductive hypothesis transform maximal subcolumn prof assertion empty hence maximal subcolumn finally empty lemma exists implies maximal subcolumn exists byproduct lemma uniquely associate integer maximal subcolumn specifically lemma distinct maximal  proof distinct maximal  hence consequence exist instead lemma layout belonging scorpion homologous maximal subcolumn ith empty exists maximal subcolumn lemma homologous correspondence maximal  define correspond sub shift similarly scorpion homologous scorpion lemma exists scorpion exists scorpion proof scorpion layout belonging scorpion homologous occurrence yield layout homologous denote maximal subcolumn maximal subcolumn homologous hence finally trivial verify homologous concerned remark empty empty lemma implies maximal  maximal  minus contains maximal  precisely maximal subcolumn hence homologous empty implies deck verify homologous trivial task assertion homologous scorpion exists exactly maximal  contains theorem lemma lemma