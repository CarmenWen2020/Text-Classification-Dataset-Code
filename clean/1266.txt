research secure multi computation deck cryptography introduction trick protocol compute logical function den  protocol compute various function developed propose protocol securely compute variable equality function input protocol generalize compute doubly symmetric function symmetric function protocol generalize compute candidate variable equality function keywords cryptography secure multi computation equality function symmetric function doubly symmetric function introduction presidential election candidate candidate politics however reveal preference others unless everyone candidate preference coincide without leak information preference individual probabilistic information theoretically situation equivalent candidate prefers define equality function otherwise goal develop protocol announces without leak information situation secure multi computation multiple jointly private information without reveal actively cryptography previous focus secure multi computation physical everyday coin combination lock transparency deck hence research cryptography protocol advantage computer didactic easy understand verify correctness security non expert cryptography related trick protocol research cryptography date den  developed protocol trick compute logical function player trick protocol identical image identical image indistinguishable player image image another image throughout encode commitment image image commitment image image player commitment image player commitment finally publicly swap commitment sequence image KB image sequence cyclic rotation sequence image image image image image image image image image image latter apply random shift sequence uniformly random cyclic shift permutation uniformly chosen random hide initial without leak information subsequent protocol introduction trick protocol function protocol subsequently developed protocol reduce improve protocol involve output format shuffle etc apart function protocol protocol compute function developed xor function protocol protocol duplicate commitment voting protocol sum binary representation rank protocol rank integer without reveal variable majority function protocol input variable equality function protocol variable boolean function compute function symmetric compute trick protocol equality function trivial simply negation xor function compute   developed protocol trick compute function player image image trick protocol player image image player commitment rearrange sequence permutation sequence image KB image sequence cyclic rotation sequence image image image image image image image image image image image image latter trick protocol apply random sequence hide initial therefore without leak information trick protocol random shuffle however technique protocol heavily relies symmetric equivalent protocol author program protocol random exist trick trick protocol useful drawback commit format protocol commit format output encode format input image image image image commit format protocol benefit reveal output computation instead input another function contribution propose protocol securely compute variable equality function protocol commit format generalize compute doubly symmetric function definition symmetric function protocol commit format generalize compute candidate variable equality function candidate election instead comparison developed protocol  format shuffle trick equality function symmetric function  function  function protocol equality function  doubly symmetric function  symmetric function non protocol equality function  equality function difference conference version addition protocol generalization preliminary notation sequence notation denote operation perm denotes rearrange deck permutation leftmost perm shuffle denotes uniformly random shuffle unknown permutation shuffle apply perm probability shift denotes shift cyclic manner apply perm shift denotes shift cyclic manner apply perm random sequence random random cyclic shift applies shift uniformly random integer unknown implementation implement random repeatedly apply  deck ideally observer verify  cyclic shift permutation cannot therefore player player deck moreover deck define markov chain rapidly converges almost uniform distribution therefore treat random oracle shift deck uniformly random cyclic shift unknown sufficient assumption implementation protocol correctly randomness protocol generate random random sequence random applies shift uniformly random integer unknown equivalent pile shift shuffle developed generalization random bisection developed   implementation intuitive implementation random consist consecutive envelope apply random sequence envelope without alternatively instead rubber clip image KB image recently koch  propose alternative implement random without extra additional instead random xor protocol sequence encode commitment securely xor input uniformly random unknown sequence theoretically equivalent apply shuffle sequence implementation directly apply shuffle trust random apply shuffle instead implementation employ random achieve equivalent without trust implementation protocol developed   apply random finally commitment output image KB image apply random become probability former commitment output encodes latter commitment output encodes verifies correctness protocol addition protocol integer introduce encode scheme integer scheme scheme scheme integer encode sequence consecutive image image sequence image image image encodes conversely scheme integer encode sequence consecutive image image sequence image image image image encodes integer encode scheme sequence encode scheme sequence securely compute sum mod output encode scheme without additional protocol apply shift shift respectively uniformly random unknown transform reveal finally apply shift encode technique context regular gon encode integer implementation random xor protocol directly apply shift shift trust random integer apply shift instead implementation employ random achieve equivalent without trust leftmost rightmost leftmost rightmost sequence image KB image apply random transform sequence uniformly random index modulo image KB image leftmost rightmost leftmost rightmost sequence encode mod mod respectively image KB image reveal revelation leak information probability integer appendix formal proof finally apply shift transform image KB image therefore sequence encode mod scheme desire protocol compute equality function sum depends therefore instead develop protocol compute protocol inductively compute actual summation additional image image compute swap commitment additional image sequence image KB image additional image commitment sequence image KB image apply addition protocol compute sum output image image available later protocol image KB image inductively compute sequence image image append image sequence become image commitment sequence image KB image apply addition protocol compute sum output desire image KB image therefore additional image additional image compute sum encode encode apply addition protocol encode append encode encode apply addition protocol encode desire protocol protocol additional compute however compute equality function without additional protocol apply random xor protocol transform input sequence uniformly random encode reveal revelation leak information probability appendix formal proof equivalent image image encode additional apply protocol compute sum desire equivalent therefore swap encode becomes apply protocol compute sum sum encode scheme zero image leftmost however reveal information zero therefore apply random sequence rightmost leftmost zero indistinguishable appendix formal proof finally image leftmost otherwise throughout protocol random random xor protocol random compute sum random therefore protocol shuffle generalization protocol compute symmetric function function symmetric permutation symmetric function doubly symmetric equality function doubly symmetric majority function symmetric doubly symmetric doubly symmetric function function define difference input symmetric function tuples input yield output rearrange tuple become another hence depends sum sum function doubly symmetric technique protocol apply compute doubly symmetric function doubly symmetric function function protocol apply random xor protocol transform input sequence uniformly random encode reveal leak information probability appendix formal proof doubly symmetric therefore apply protocol compute sum desire therefore swap encode becomes apply protocol compute sum protocol sum encode scheme recall scheme encode image leftmost therefore leftmost apply random perform sum indistinguishable leftmost apply random sequence leftmost probability separately apply random random ensure reveal information appendix formal proof finally suppose sequence integer throughout protocol random random xor protocol random compute sum random therefore protocol shuffle function symmetric doubly symmetric directly apply protocol compute sum apply random additional image image therefore protocol shuffle comparison protocol voting protocol developed compute sum input however protocol restricts submission input reuse encode input protocol input submit simultaneously encode input hence protocol optimal compute doubly symmetric function improve previous protocol compute symmetric function doubly symmetric protocol compute symmetric function shuffle due construction shannon expansion protocol advantage commit format however protocol shuffle advantage output restrict binary function output function majority function output protocol introduce protocol compute equality function function protocol explain protocol developed   compute function additional image image suppose commitment respectively additional image image commitment encodes sequence apply perm apply random apply perm theoretically equivalent apply shuffle image KB image operation becomes probability former encodes latter encodes leftmost reveal leak information probability output function output function protocol commit format output input another function therefore compute compute moreover additional reuse computation additional sufficient protocol compute equality function protocol apply random xor protocol transform input sequence uniformly random encode reveal equivalent therefore compute apply function protocol encode equivalent therefore compute swap encode apply protocol throughout protocol random random xor protocol random compute function therefore protocol shuffle shuffle protocol advantage commit format generalization protocol technique protocol relies unique equality function cannot apply compute symmetric function however technique compute candidate variable equality function candidate election instead compute candidate variable equality function analogously boolean equality function define otherwise player image image player integer candidate prefers binary representation player commitment therefore protocol compute desire shuffle compute shuffle compute function therefore protocol shuffle commit format comparison protocol integer candidate variable equality function boolean variable function hence directly apply protocol compute function symmetric shuffle therefore protocol shuffle protocol future compute boolean equality function protocol already optimal trivial bound commit format compute doubly symmetric function protocol optimal commit format leaf commit format protocol compute doubly symmetric function compute symmetric function doubly symmetric gap trivial bound leaf protocol bound commit format protocol protocol