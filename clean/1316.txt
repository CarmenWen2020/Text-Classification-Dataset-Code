dynamic load balance underlie graph node random chosen load endpoint assume load arbitrarily divisible node balance load average interested gap minimum maximum load node progress dependence graph structure random struct algorithm variant load load endpoint chosen average perform dynamic load balance cycle upper bound gap 𝑛log𝑛  argument due leverage average improve upper bound log𝑛 introduce potential analysis technique enables bound difference load hop cycle complement gap argument bound maximum gap bound across subset structure recursively bound gap within subset analysis extend specific instance harary graph gap bound additionally experimental evidence upper bound gap tight logarithmic factor introduction considers bin sequence bin via randomize procedure goal minimize load imbalance load load bin randomize model practical allocation load balance hash relaxed data structure classic formulation choice generate load randomly chosen bin uniform random choice scheme understood bin load bin log𝑛 loglog𝑛 load whereas 𝑛log𝑛 maximum load  seminal bin choice surprisingly maximum load reduce loglog𝑛  technical tour     extend heavily load maximum load loglog𝑛  failure probability  elegant alternative proof slightly weaker version later   recently graphical version bin vertex graph chosen load endpoint arbitrarily reader classic choice corresponds graph clique author focus evolution gap load bin graph expansion gap log𝑛 probability  another closely related considers static load balance node graph arbitrary initial load endpoint average load load balance scheme commonly usually involve simply average load endpoint randomly chosen node analysis applicable static version analyze markov chain analyse convergence derive upper bound potential function capture discrepancy load gap load bin characterize spectral gap graph contrast previous graphical load balance dynamic statically allocate balance via continuous average balance average sum node prior balance average powerful relative choice static average apply challenge dynamic scenario focus gap dynamic graph expansion specifically cycle without average gap 𝑛log𝑛 expectation probability technique imply average load worsen gap expectation aim actually reduce directly apply static dynamic upper bound 𝑛log𝑛 upper bound gap cycle graph challenge cycle approach structure load balance graph account contribution address average perform cycle graph gap difference load node upper bound gap dynamic heavily load via potential argument formally cycle graph vertex  technique upper bound gap harary graph complement bound  experimental evidence gap upper bound accurate log𝑛 factor extend load generate node accord distribution bound formally input distribution technical overview upper bound introduces parametrized hop potential function difference load hop graph fix hop parameter input graph throughout assume node node load node define hop potential technical proof understand steady hop potential expectation hop potential recursive structure hop potential cannot compute precisely isolate upper bound cycle hop potential cycle bound technical shift gear aim bound maximum gap node leverage understand hop potential achieve via gap technique characterizes maximum gap across subset precisely cycle node hop define  node cycle    maximal gap inside intuitively allows recursively characterize gap various resolution across graph finally gap node carefully unwind recursion inequality subset chosen structure recursively bound gap within subset particularly delicate sect obtain  claimed logarithmic slack technique extends insert item distribution bound bound upper bound tight examine revisit recursive structure hop potential obtain upper bound leverage structure obtain bound hop potential bound upper bound argument inside obtain linear bound gap  conjecture upper bound gap constant examine empirically sect extension discussion analysis template described extend graph regular  focus obtain tight bound gap cycle technically non trivial extension graph future substantiate generality exhibit application analysis technique specific instance harary graph sect precisely upper bound gap graph vertex vertex vertex discus relation bound graphical cycle sect related already background mainly focus technical difference previous specifically dynamic continuous average cycle static continuous average discrete average however technique apply bound introduce dynamically execution knowledge non trivial upper bound gap previous 𝑛log𝑛 potential analysis choice load balance potential analysis continuous average load balance yield bound specifically definition potential reference obtain upper bound pairwise load balance slightly guarantee however bound analysis loose cycle graph yield gap bound yield technique technically consequence  technique link dynamic average cycle weak average clique reference performance difference various load balance technique specifically continuous average cannot improve bound gap relative choice clique unfortunately extend arbitrary graph potential analysis substantially sum exponential potential across entire graph contrast analysis load difference hop establish recurrence potential potential analyze average load balance usually global oppose pairwise potential difference approach classic analysis perform probabilistic induction bin load assume clique generally technique perform induction bound gap bin load previous topology graph approach obtain tight topology specific bound propose analyze successfully average cycle upper bound gap preliminary cycle graph node recall node node stochastic generate distribution associate load node node chosen uniformly random endpoint node update assume distribution bound simplicity assume normalize vector bin define potential function analyze function expectation additional thrown load vector hence bound remain linear cancel equation rewrite             equation proceed calculate  remain rewrite       hence  remove conditioning express equation recall equation lemma proof vector potential vector desire upper bound potential easily checkable vector vector goal coordinate hence equation recall induction trivially induction assume  additionally assumption finally observation completes proof lemma upper bound gap upper bound gap expectation technical necessarily sect definition  max𝑖  min𝑖   proof vertex  characterise gap merge gap    upper bound  plus maximum load difference vertex hop distance hop distance potential upper bound maximum load difference vertex hop distance sum derive inequality upper bound   definition  contains vertex    contains vertex hence upper bound hop distance potential derive previous useful lemma lemma  max𝑗    proof fix vertex recall       membership node bound gap       max𝑗   belong  max𝑗       max𝑗    max𝑗   hence  max𝑗     upper bound quantity max𝑗  lemma   proof   hence max𝑗  max𝑗         inequality disjoint finally lemma upper bound gap theorem  proof lemma         inequality apply lemma   sum inequality    recall    hence   apply jensen inequality lemma       log𝑛 proof theorem gap bound theorem bound gap expectation theorem limit lim𝑡  proof vector positive coordinate expectation converges approach upper bound expectation exist node distance difference load recall inequality hence inequality combination inequality inequality plug inequality inequality lim𝑡   max   hence lim𝑡  unfortunately obtain bound gap approach upper bound hop potential tight potential quadratic derive bound gap intuitively issue argument convex potential upper bound gap theorem redefine  define dimensional vector  log𝑛 otherwise lemma lemma log𝑛   proof lemma induction trivially induction assume aim    integer hence  integer hence  integer additionally hence  integer additionally hence  log𝑛   easy log𝑛           lemma lemma lemma log𝑛  max𝑗     proof statement identical lemma exception instead proof almost identical simply replace difference proof lemma max𝑗   instead  max𝑗   upper bound max𝑗  lemma analogue lemma lemma    proof  disjoint  distance consecutive vertex  cauchy schwarz inequality max𝑗  max𝑗   inequality    lemma theorem lemma          inequality apply lemma     hence sum inequality log𝑛  log𝑛 log𝑛   log𝑛 consecutive vertex log𝑛 apart hence log𝑛 log𝑛   log𝑛 max𝑖  log𝑛 max𝑖  log𝑛 combine inequality   log𝑛  log𝑛 log𝑛  apply jensen inequality lemma looser upper bound  log𝑛  log𝑛  log𝑛  log𝑛 completes proof experimental validation practical implement load balance algorithm increment cycle confirm hypothesis gap evolution gap perform increment operation calculate average gap axis thrown increment axis average gap thrown gap evolution average gap bin image harary graph upper bound gap recall harary graph graph vertex approach extend harary graph unless specify assume harary graph vertex vertex cycle extra operation consists increment average simplicity assume increment extend random fashion cycle careful calculation mimic calculation cycle extra harary graph account derive equation hop potential hop distance cycle recall cycle potential depends potential harary graph depends potential perform load balance operation hop neighbour similarly graph vertex vertex hop distance harary graph stationary hop potential apply equation lemma upper bound potential extra omit instead concentrate upper bound harary graph contains cycle define hop potential hop cycle upper bound gap   log𝑛 upper bound upper bound cycle lemma hence slightly improve constant hidden notation upper bound conjecture parameter gap harary graph gap harary graph unfortunately dependence gap harary graph parameter discussion future dynamic average cycle gap load bin upper bound log𝑛 expectation additionally gap bound future tighten experimental analysis conjecture bound gap already extend graph grid graph comparison choice average load balance finally extend gap bound classic choice load balance gap average expectation gap choice intuitively load balance operation average random incrementing load load endpoint average extra average gap indeed exponential potential analyse gap upper bound gap average exponential function convex average increase jensen inequality unfortunately average actually decrease exponential potential additionally argument average gap apply technique upper bound gap gap actually average choice conjecture exists  argument performs average precisely increment choice perform average probability gap decrease expectation increase bound gap choice cycle straightforward log𝑛 bound clique bound observation 𝑛log𝑛 bin accord choice average load log𝑛 constant probability exists bin empty existence  argument bound derive gap perform average cycle automatically bound gap choice cycle investigate connection future