INDSUB counting induced subgraphs graph satisfy graph distinguishes independent bicliques INDSUB parameterized counting equivalent  additional suitable density satisfied non trivial monotone bipartite graph strengthen hardness establish INDSUB cannot computable function unless exponential hypothesis fails finally remain input graph restrict bipartite counting modulo fix prime introduction computational complexity counting initiate valiant seminal complexity compute permanent contrast decision verify existence counting asks compute counting complexity theory particularly decision version solvable efficiently counting version intractable counting perfect matchings decision version solvable polynomial counting version polynomial hierarchy  respect polynomial turing reduction introduce jerrum  fix graph graph positive integer compute induced subgraphs vertex satisfy denote INDSUB remark strictly INDSUB unlabeled version  define isomorphism graph label vertex parameterized complexity INDSUB underlie framework parameterized counting complexity theory introduce independently    constitutes hybrid classical computational counting parameterized complexity theory parameterization allows perform multivariate analysis complexity INDSUB instead distinction polynomial solvable  solvable vertex graph computable function fix parameter tractable unfortunately INDSUB fix parameter tractable trivial finitely neither false graph vertex contrary easy INDSUB likely fix parameter tractable encodes decision version already latter graph INDSUB identical counting clique decision version clique graph vertex cannot unless exponential hypothesis fails non trivial hardness INDSUB jerrum  decision version efficiently input exists component initiate research jerrum  fix parameter tractability INDSUB unlikely odd induce density addition minimal treewidth precisely establish hardness parameterized complexity parameterized counting equivalent  recent breakthrough  dell marx graph INDSUB fix parameter tractable intermediate difficulty downside explicit criterion hardness allows pin complexity INDSUB concrete however combine framework topological approach  kahn   author establish hardness non trivial removal false odd cycle conjecture conjecture computable graph satisfy infinitely positive integer neither false graph vertex INDSUB unfortunately proof conjecture however building introduce algebraic approach allows resolve conjecture non trivial monotone bipartite graph obtain bound exponential hypothesis technique graph monotone removal vertex monotone removal furthermore  graph consist isolated vertex bipartite graph vertex theorem theorem computable graph prime  infinite INDSUB additionally dense cannot computable function unless eth fails input graph INDSUB restrict bipartite previous theorem dense exists constant exists hypothesis theorem technical theorem applies situation applicable neither monotone complement thereof eulerian graph contains eulerian cycle hence apply theorem infinite dense corollary eulerian INDSUB cannot computable function unless eth fails input graph INDSUB restrict bipartite monotone removal vertex argument implies theorem infinite infinitely bipartite graph criterion hardness concisely theorem computable monotone graph infinitely bipartite graph INDSUB cannot computable function unless exponential hypothesis fails input graph INDSUB restrict bipartite illustrate consequence previous theorem respect monotone prior hardness restrict bipartite graph corollary INDSUB restrict bipartite input graph cannot computable function unless eth fails disconnect planar non hamiltonian monotone complexity INDSUB unknown graph corollary theorem corollary fix bipartite graph define subgraph isomorphic INDSUB cannot computable function unless eth fails input graph INDSUB restrict bipartite induced subgraphs satisfy minus induced subgraphs satisfy previous remain complementary previous theorem approach graph positive integer induced subgraphs graph satisfy equivalently express sum isomorphism graph   function graph integer finite furthermore  graph homomorphism compute linear combination homomorphism expression precisely compute hardest non zero coefficient implicitly refer complexity monotonicity author topological approach analyze coefficient graph vertex coefficient non zero complexity monotonicity implies compute induced subgraphs graph satisfy compute  equivalent compute clique canonical approach hardness proof resolve conjecture restrict monotone significant without  analysis complicate graph vertex prime hence focus coefficient graph prime compute  graph biclique prime biclique bipartite graph vertex contains vertex vertex hence prime analyze coefficient bipartite graph invoke rivest  transitive boolean function domain prime cardinality resolve asymptotic version karp  conjecture recommend miller survey excellent overview graph alternate enumerator define graph vertex roughly closely related furthermore removal alternate enumerator reduce euler characteristic simplicial complex associate sect alternate enumerator transitive graph graph automorphism transitively proof implicitly lemma graph transitive graph prime  lemma motivation transitive graph prime aforementioned strategy counting induced subgraphs graph satisfy counting homomorphism transitive graph vertex prime satisfies ultimately obtain intractability INDSUB rely complexity classification counting homomorphism due   sect fully classify graph subgraphs bipartite graph vertex transitive subgraphs  graph consult sect formal definition proof theorem independent relies non trivial application sylow theorem theorem transitive graph prime positive integer bipartite vertex transitive obtain  graph  remove analysis transitive graph reduction counting homomorphism sect precisely transitive graph prime graph construct parameterized turing reduction hom INDSUB hom define input graph graph compute homomorphism technical cannot immediately transform induced subgraphs satisfy linear combination homomorphism technical issue introduce prescribed variant intermediate context graph recall graph homomorphism homomorphism prescribed vertex vertex satisfy demonstrate graph oracle access INDSUB linear combination compute     denotes prescribed homomorphism function finite factor finally establish complexity monotonicity linear combination prescribed homomorphism combination lemma yield desire reduction combine previous invoke reduction graph non trivial bipartite graph theorem sect furthermore illustrate sect algebraic approach readily extends modular counting theorem remain counting modulo fix prime preliminary positive integer subset furthermore assume finite cardinality function function graph theory graph undirected without loop precisely graph finite vertex symmetric  relation graph obtain delete vertex incident subgraph subset graph vertex graph induced subgraph subgraph graph graph obtain delete subgraph homomorphism embeddings homomorphism graph graph mapping preserve adjacency  homomorphism homomorphism induce bijection vertex satisfy isomorphism graph isomorphic exists isomorphism   subgraphs induced subgraphs respectively isomorphic isomorphism graph automorphism automorphisms graph operation functional composition constitutes automorphism graph slightly abuse notation  automorphisms graph automorphism embed injective homomorphism  embeddings embed additionally satisfies implies embed  embeddings image embeddings embeddings precisely subgraphs induced subgraphs isomorphic variant graph homomorphism subgraph identity function assume whenever subgraphs subgraph homomorphism graph prescribed   prescribed homomorphism   define similarly prescribed embeddings definition  obsolete prescribed homomorphism injective definition hence embed furthermore     image prescribed embeddings embeddings respectively     refer prescribed subgraphs induced subgraphs footnote graph alternate enumerator graph define function graph isomorphic graph adapt notation rivest  define alternate enumerator graph function graph monotone removal monotone removal vertex footnote graph positive integer graph  induced subgraphs satisfy furthermore graph graph   prescribed induced subgraphs satisfy   express disjoint union subgraphs satisfy     parameterized counting complexity parameterized counting introduce independently    constitutes hybrid classical computational counting parameterized complexity theory parameterized counting function computable parameterization fix parameter tractable fpt exists computable function deterministic algorithm computes parameterized turing reduction deterministic fpt algorithm respect oracle access input computes additional restriction exists computable function oracle query  parameterized turing reduction exists graph positive integer parameterized counting clique asks compute subgraphs parameterized parameterized counting equivalent  evidence fix parameter intractability exponential hypothesis eth asserts cannot   clause input formula assume eth clique cannot function hence fix parameter tractable recursively enumerable graph hom asks input graph arbitrary graph compute  parameterization CP hom CP INDSUB define similarly define CP INDSUB graph graph compute   parameterize input hence define finally INDSUB asks graph positive integer compute  parameterization alternate enumerator transitive graph rough exposition rivest  transitive boolean function resolve asymptotic version karp  conjecture apply graph transitive prime enable conclude alternate enumerator modulo whenever introduce notion algebraic graph theory automorphism graph induces action action transitive exists orbit graph transitive automorphism action transitive exists automorphism  additionally transitive graph prime graph transitive lemma graph transitive graph prime  lemma implicitly proven theorem completeness proof demonstrate application machinery sylow subgroup later proof recall theory prime finite central theory finite theorem sylow theorem finite  prime integer coprime contains subgroup moreover subgroup conjugate exists isomorphic via conjugation finally subgroup actually conjugate subgroup sylow subgroup important application sylow theorem proof completeness lemma finite transitively induced action sylow subgroup transitive proof orbit Stab𝛤 stabilizer action orbit stabilizer theorem Stab𝛤 Stab𝛤 sylow theorem unique nonnegative integer  divisible sylow subgroup stabilizer induced action subgroup Stab𝛤 Stab𝛤 clearly subgroup lagrange theorem Stab𝛤 Stab𝛤 Stab𝛤 subgroup Stab𝛤 insert obtain  Stab𝛤 Stab𝛤 factor lagrange theorem subgroup Stab𝛤 Stab𝛤 finally orbit stabilizer theorem apply action Stab𝛤 obtain obtain hence equality action transitive proof allows proof lemma proof lemma  automorphism graph assumption transitive action transitive lemma sylow subgroup transitively sum action induces action subset indeed define action disjoint union orbit representative recall action orbit disjoint allows sum  reorder summands combine summands orbit  graph automorphisms graph isomorphic apply formula orbit stabilizer theorem orbit unless invariant orbit positive congruent mod however invariant indeed assume invariant nonempty contains invariant contains entire orbit transitively summarize compute modulo summands sum congruent hence simplify  odd prime modulo exactly  transitive graph bipartite graph  graph  automorphism clearly transitively graph  graph  graph  vertex decompose disjoint vertex understood  graph  lexicographical cycle graph consist disjoint vertex exactly obtain cycle  transitive fix apply arbitrary permutation graph invariant exists rotational action leaf graph invariant automorphisms visualization transitive graph transitive graph bipartite graph   graph  image graph vertex transitive automorphism  transitively vertex   maximal transitive graph bipartite graph subgraph graph  theorem transitive graph prime positive integer bipartite vertex transitive obtain  graph  remove proof theorem relation vertex transitivity proposition lemma graph  subgroup transitively transitively vertex vertex transitive bipartite proof verbatim previous lemma replace  subgroup finally proof theorem recall  homomorphism   define underlie naturally contains subgroup moreover action define action proof theorem transitive non bipartite graph lemma sylow subgroup  transitively lemma bipartite transitively vertex vertex transitive orbit stabilizer theorem subgraph  reformulate situation slightly identify vertex  identify  subgroup  symmetric graph automorphism uniquely action vertex graph inside  subgroup sylow theorem exists sylow subgroup  footnote action transitive obtain orbit instead orbit  maybe denote graph vertex  explicitly identify sylow subgroup  recall sylow theorem unique conjugation reorder  inductively inductively construct subgroup  sylow subgroup description sylow subgroup sylow subgroup generate cyclic permutation isomorphic cyclic assume construct factor permutation    action commute subgroup  however action modulo action cyclically permutes factor action commute indeed induce action  automorphism permute factor desire sylow subgroup  indeed underlie  simply underlie   indeed subgroup  recall vertex graph graph isomorphic  graph  relabeling vertex perform conjugation  assume furthermore translation transitively assume vertex factor operates easy graph factor varGamma within cyclic permutation factor mathbb mathbb disjoint union graph graph subgraph assume assume align text ldots align argue reorder invariant action varGamma respect indeed mathbb mathbb multiplicative inverse mod permutation cdot mod translate permute inside indeed permutation respect  varGamma multiplication induces isomorphism mathbb mathbb rightarrow mathbb mathbb factor mathbb mathbb varGamma summarize assume without loss generality vertex easy graph obtain orbit varGamma indeed  graph indeed varGamma transitively within vertex factor varGamma transitively orbit finally cyclic permutation action mathbb mathbb sends exactly  graph proof reduction homomorphism induced subgraphs construct sequence reduction textsc hom mathcal textsc IndSub varphi mathcal recursively enumerable transitive graph varphi graph graph mathcal varphi emptyset varphi precisely align textsc hom mathcal mathop mathrm fpt mathrm limit text lemma textsc hom mathcal mathop mathrm fpt mathrm limit text lemma textsc IndSub varphi mathop mathrm fpt mathrm limit text lemma textsc IndSub varphi align reduction tight conditional bound grain complexity textsc hom mathcal immediately transfer textsc IndSub varphi hardness rely   textsc hom mathcal mathsf whenever mathcal recursively enumerable unbounded treewidth footnote graph unbounded treewidth mathbb exists graph treewidth reduce homomorphism prescribed homomorphism reduction graph goal compute mathsf hom rightarrow oracle mathsf mathsf text mathsf hom rightarrow precisely vertex vertex vertex adjacent vertex vertex correspond adjacent construction tensor construction formalize proof lemma graph lemma graph exists algorithm mathbb graph input oracle access function mathsf mathsf text mathsf hom rightarrow computes mathsf hom rightarrow cdot computable function oracle query satisfies cdot proof convenient assume graph construct graph vertex define align bigcup align identify vertex easily verify function rightarrow furthermore easy align mathsf mathsf text mathsf hom rightarrow mathsf hom rightarrow align concludes proof reduce prescribed homomorphism prescribed induced subgraphs reduction prescribed homomorphism prescribed induced subgraphs introduction variant framework graph motif parameter explicitly introduce implicitly precisely graph varphi express mathsf mathsf text mathsf IndSub varphi rightarrow linear combination prescribed homomorphism mathsf mathsf text mathsf hom rightarrow complexity monotonicity linear combination prescribed homomorphism allows proof coefficient mathsf mathsf text mathsf hom rightarrow thorough understand alternate enumerator varphi transitive graph latter lemma introduce variant tensor graph chapter graph coloring define prescribed tensor graph vertex lemma mathsf mathsf text mathsf hom linear respect lemma graph subgraph align mathsf mathsf text mathsf hom rightarrow mathsf mathsf text mathsf hom rightarrow cdot mathsf mathsf text mathsf hom rightarrow align proof easily verify function assigns mathsf mathsf text mathsf hom rightarrow mathsf mathsf text mathsf hom rightarrow mathsf mathsf text mathsf hom rightarrow define bijection proof complexity monotonicity prescribed homomorphism lemma linear equation lemma prof correspond matrix non singular lemma graph colour identity mapping matrix identify subset furthermore assume entry align mathsf mathsf text mathsf hom rightarrow align non singular matrix mathbb latter entry modulo proof fix linear extension subset inclusion relation accordingly triangular identity homomorphism prescribed exists setminus linearly extends subset inclusion assume exists prescribed homomorphism  contradict homomorphism notin hence consequently upper triangular prepared prescribed variant complexity monotonicity lemma complexity monotonicity graph computable function subgraphs rational exists algorithm mathbb graph input oracle access function align sum subseteq cdot mathsf mathsf text mathsf hom rightarrow align computes mathsf mathsf text mathsf hom rightarrow cdot computable function furthermore oracle query satisfies cdot proof lemma graph align sum subseteq cdot mathsf mathsf text mathsf hom rightarrow HF align align quad sum subseteq cdot mathsf mathsf text mathsf hom rightarrow cdot mathsf mathsf text mathsf hom rightarrow align evaluate emptyset dot induces linear equation aforementioned obtain equation align sum subseteq cdot align sum subseteq cdot mathsf mathsf text mathsf hom rightarrow HF mathsf mathsf text mathsf hom rightarrow cdot mathsf mathsf text mathsf hom rightarrow compute oracle compute subgraph subseteq furthermore choice correspond matrix non singular lemma consequently cdot mathsf mathsf text mathsf hom rightarrow uniquely compute gaussian elimination finally obtain mathsf mathsf text mathsf hom rightarrow whenever remains express prescribed induced subgraphs satisfy varphi linear combination prescribed homomorphism lemma graph varphi graph graph align mathsf mathsf text mathsf IndSub varphi rightarrow sum varphi sum subseteq setminus cdot mathsf mathsf text mathsf hom cup rightarrow align moreover absolute coefficient mathsf mathsf text mathsf hom rightarrow chi varphi proof establish graph subseteq graph align mathsf mathsf text mathsf IndSub rightarrow sum subseteq setminus cdot mathsf mathsf text mathsf sub cup rightarrow align proof align mathsf mathsf text mathsf IndSub rightarrow nonumber quad mathsf mathsf text mathsf sub rightarrow setminus bigcup setminus mathsf mathsf text mathsf sub cup rightarrow qquad align hence inclusion exclusion mathsf mathsf text mathsf IndSub rightarrow align mathsf mathsf text mathsf sub rightarrow sum emptyset  subseteq setminus cdot mathsf mathsf text mathsf sub cup rightarrow align align quad sum subseteq setminus cdot mathsf mathsf text mathsf sub cup rightarrow align concludes proof align mathsf mathsf text mathsf IndSub varphi rightarrow align align quad sum varphi cdot mathsf mathsf text mathsf IndSub rightarrow align align quad sum varphi sum subseteq setminus cdot mathsf mathsf text mathsf sub cup rightarrow align align quad sum varphi sum subseteq setminus cdot mathsf mathsf text mathsf hom cup rightarrow align definition mathsf mathsf text mathsf IndSub varphi rightarrow prescribed homomorphism injective prescribed embed uniquely identify image coefficient mathsf mathsf text mathsf hom rightarrow yield align sum varphi cdot cdot chi varphi align application complexity monotonicity prescribed homomorphism lemma non zero coefficient however guaranteed coefficient transitive graph sect formally reduction construct lemma varphi computable graph transitive graph varphi emptyset varphi exists algorithm mathbb graph input oracle access function align mathsf mathsf text mathsf IndSub varphi rightarrow align computes mathsf mathsf text mathsf hom rightarrow cdot computable function furthermore oracle query satisfies cdot proof lemma express mathsf mathsf text mathsf IndSub varphi rightarrow linear combination prescribed homomorphism coefficient mathsf mathsf text mathsf hom rightarrow cdot chi varphi lemma non zero whenever transitive varphi emptyset varphi hence algorithm lemma compute mathsf mathsf text mathsf hom rightarrow desire reduce prescribed induced subgraphs uncolored induced subgraphs reduction sequence allows rid precisely reduce counting prescribed induced subgraphs graph counting uncolored induced subgraphs graph respect varphi proof straightforward application inclusion exclusion principle standard reduce uncolored version parameterized counting instance proof completeness lemma varphi graph graph vertex exists algorithm mathbb graph input oracle access function mathsf IndSub varphi rightarrow computes mathsf mathsf text mathsf IndSub varphi rightarrow cdot computable function furthermore oracle query satisfies allows proof convenient assume surjective exists vertex notin mathsf mathsf hence prescribed induced subgraph mathbb output otherwise induces partition non empty pairwise disjoint subset associate allows equivalently express mathsf mathsf text mathsf IndSub varphi rightarrow vertex colorful induced subgraphs align mathsf mathsf text mathsf IndSub varphi rightarrow subseteq array array bigg wedge varphi align principle inclusion exclusion obtain align mathsf mathsf text mathsf IndSub varphi rightarrow sum subseteq cdot mathsf IndSub varphi rightarrow align graph obtain delete vertex hence compute mathsf mathsf text mathsf IndSub varphi rightarrow oracle finally graph removal vertex therefore oracle query allows non trivial monotone bipartite graph apply algebraic approach laid precede bipartite graph mathcal subseteq mathbb dense exists constant mathbb exists mathcal furthermore mathsf mathsf graph isolated vertex theorem obtain invoke reduction sequence bipartite graph prime transitive sect extension modular counting theorem varphi computable graph mathcal prime varphi mathsf mathsf varphi mathcal infinite textsc IndSub varphi mathsf additionally mathcal dense cannot cdot computable function unless eth fails input graph textsc IndSub varphi restrict bipartite mathsf hardness classification   hardness eth tight reduction counting clique trick inspire lemma reduction parsimonious extension modular counting subsequent lemma exists algorithm positive integer ell graph vertex computes ell ell ell graph ell vertex clique ell mathsf mathsf text mathsf hom ell ell rightarrow ell ell proof vertex mid ell ell mid ell construct graph vertex mid ell ell ell vertex adjacent vertex adjacent ldots ell ell clique assume ldots ell ell ldots ell ell colorful biclique prescribed homomorphism mathsf mathsf text mathsf hom ell ell rightarrow ell ell mathsf mathsf text mathsf hom ell ell rightarrow ell ell prescribed homomorphism colorful biclique align alpha ldots ell alpha ell beta ldots ell beta ell align alpha beta alpha beta directly imply alpha ldots alpha ell clique ell furthermore enforce alpha beta alpha alpha sort increase correspondence homomorphism mathsf mathsf text mathsf hom ell ell rightarrow ell ell ell clique proof theorem varphi mathcal theorem define graph mathcal align mathcal mathcal align reduction sequence lemma obtain textsc hom mathcal mathrm fpt mathrm textsc IndSub varphi varphi computable mathcal recursively enumerable furthermore mathcal infinite arbitrary bicliques mathcal treewidth mathcal unbounded therefore textsc hom mathcal hence textsc IndSub varphi mathsf classification counting homomorphism due   tight bound eth reduce decision textsc clique asks contains clique cannot cdot computable function unless eth fails assume mathcal dense instance textsc clique density mathcal exists ell mathcal ell overall constant independent construct graph ell vertex vertex vertex easily verify contains clique contains clique ell apply lemma ell obtain ell ell graph satisfy ell clique align mathsf mathsf text mathsf hom ell ell rightarrow ell ell align invoke lemma conclude reduction reduction tight oracle textsc IndSub varphi reduction tilde ell vertex tilde bound ell cdot ell conclude algorithm solves textsc IndSub varphi cdot textsc clique cdot output zero finally mathsf eth hardness reduction lemma query graph colorable hence bipartite varphi complement monotone infinitely prime varphi neither false subgraphs non trivial rely vertex footnote varphi complement monotone removal removal vertex artificial exist clearly theorem varphi computable monotone graph varphi lnot varphi infinitely bipartite graph textsc IndSub varphi mathsf cannot cdot computable function unless exponential hypothesis fails input graph textsc IndSub varphi restrict bipartite proof varphi infinitely bipartite graph positive integer exists graph vertex varphi varphi monotone removal vertex mathsf mathsf subgraph varphi mathsf mathsf varphi finitely assume contradiction latter false exists varphi however implies bipartite graph varphi supergraph varphi monotone conclude varphi contradict lnot varphi infinitely bipartite graph consequently varphi mathsf mathsf positive integer varphi finitely hence apply theorem mathcal finitely prime therefore dense extension modular counting theorem easily extend counting modulo fix prime theorem prime varphi computable graph mathcal prime varphi mathsf mathsf varphi mathcal infinite mathsf mod textsc IndSub varphi mathsf mod mathsf additionally mathcal dense cannot cdot computable function unless eth fails input graph mathsf mod textsc IndSub varphi restrict bipartite mathsf mod textsc IndSub varphi asks compute induced subgraphs vertex satisfy varphi modulo parameterized complexity mathsf mod mathsf define clique modulo chapter modular counting version theorem corollary theorem theorem theorem proof theorem rely reduction sect counting modular prime fix prime lemma remain counting modulo graph restrict prime non trivial observation verify chi varphi mod whenever varphi emptyset varphi lemma complexity monotonicity lemma computation modulo non singularity matrix proof lemma entry mathbb ingredient proof theorem hardness eth isolate clique parameterized lemma lemma integer undirected graph random induced subgraph vertex probability independently induced induced multiple probability proof theorem proof proof tight bound eth theorem reduction clique mathcal dense aim establish eth hardness perform initial reduction construct graph contains clique contains clique ell ell overall constant detail construction proof theorem lemma isolate ell clique assume probability reduction apply reduction counting clique counting prescribed homomorphism biclique lemma reduction parsimonious finally proceed precisely proof theorem correctness conclude randomize construction lemma perform probability amplification algorithm constant probability conclusion establish hardness textsc IndSub varphi monotone varphi non trivial bipartite graph modulo prime restrict input graph bipartite hence significantly extend graph varphi parameterized complexity textsc IndSub varphi understood generalize prior bipartite input graph modular counting towards proof conjecture define forbidden induced subgraphs complexity textsc IndSub varphi partially resolve