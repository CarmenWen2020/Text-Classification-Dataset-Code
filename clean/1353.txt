positive integer optimization subset dominates subset maximum dominates satisfies efficient algorithm implies algorithm bound related disjoint union clique interval graph equivalently interval representative skyline introduction optimization positive integer subset dominates dominates satisfies efficient algorithm respectively algorithm easily implement variant possibly negative dominate subset maximum unweighted generalizes context schedule optimization graph database algorithm directly improves bound algorithm context formally explain review connection statement denote coordinate coordinate respectively dominates dominates dominates dominate subset define dominate image function assign negative extend function sum refer positive integer subset dominate maximize refer maxDominance formally compute obtain optimal subset satisfy algorithm important ensure contributes exactly multiple dominance previous aware previous maxDominance generality related maximum volume subset selection anchor axis parallel positive quadrant origin maximize volume union volume union hypervolume indicator NP already interpret continuous version maxDominance arrangement define anchor volume reduce maximum volume subset selection maxDominance however reduction introduces useful related disjoint union clique interval graph interval representative skyline previous introduce subsection contribution henceforth bound asymptotic algorithm algorithm maxDominance algorithm employ dynamic program approach data structure computation strength technique algorithm implies bound optimization concern interval connection improve simultaneously handle negative interval previous related negative usually per item easily extend positive presence negative formulation dynamic program non trivial efficiently formulation dynamic program formulation related dynamic program positive dynamic program skyline candidate technique related specifically technique maxDominance handle antichain define sect overview technique sweep algorithm considers dynamic program formulation input horizontal formulate dynamic program equation compute efficiently construct data structure query operation dynamic program equation parametrized horizontal sweep equation maximum dominance quadrant II respect dynamic program equation parameterized sweep rightmost equation maximum dominance sweep rightmost extension previous negative necessarily skyline compute intermediary dynamic program equation nevertheless formulation exploit define optimal staircase optimal dominate obtain efficient algorithm update equation rightmost sweep downwards update addition correspond coordinate rightmost instead compute dynamic program explicitly data structure maximum query addition query compute explain detail data structure advanced data structure link reduce complexity algorithm standard technique construct optimal construct optimal optimal subproblems quadrant II quadrant IV recursively algorithm computes optimal representative skyline skyline dominate influential introduce representative skyline maximize dominate optimal consist skyline algorithm skyline additional data structure reduce bound additional data structure skyline representative skyline algorithm previous algorithm NP dimensional NP dimension alternative introduce representative skyline variety sample survey beyond scope article constrain version max dominance mention sect technique maxDominance handle additional constraint chosen antichain maxDominance antichain algorithm sect easily extend variant maxDominance negative variant maxDominance positively disjoint clique interval graph interval disjoint union clique duc graph positive integer disjoint clique maximize vertex clique clique disjoint node belongs clique graph duc NP clique attention application analyze data recent obvious encounter application schedule algorithmically research focus graph duc remains split chordal graph maximum clique solvable polynomial positive    jansen  woeginger polynomial algorithm interval graph comparability graph comparability graph graph cographs partial constant interested duc interval graph discus detail sect duc interval graph equivalent HittingIntervals interval interval maximize interval sometimes maximum pierce jansen  woeginger algorithm duc interval graph sometimes trace previous footnote algorithm motivate schedule  improves interval graph relevant graph dense version duc interval graph HittingIntervals equivalent positive however negative equivalent anymore indeed duc vertex negative optimal remove increase contrast HittingIntervals flexibility interval duc interval graph reduce HittingIntervals remove vertex negative HittingIntervals remain interval reduction direction HittingIntervals duc interval graph reduction maxDominance algorithm maxDominance solves version HittingIntervals implies version duc interval graph graph complexity improves previous organization organize sect introduce data structure maintains update query operation per operation sect efficient algorithm solves maxDominance data structure introduce sect positive maxDominance representative skyline efficiently sect additional constraint feasible sect HittingIntervals duc interval graph reduce maxDominance efficient algorithm conclude sect data structure arbitrary data structure operation return query adaptation interpret augment binary footnote lemma data structure maintain operation per operation initialization data structure proof balance binary leaf node denote leaf node internal node denote respectively node denote denote node node contiguous sequence integer integer precisely leaf node internal node representation contiguous sequence integer node disjoint union exactly node furthermore integer node ancestor proof lemma image node node denote sum along vertex vertex ancestor descendant relation maintain invariant leaf node internal node leaf node node maximum leaf node subtree alternative useful recursive formulation node index leaf node determines therefore node constant amount information per node leaf node internal node compute equation establish invariant operation initialization operation node disjoint union maximum compute node altogether ancestor index maximum attain compute similarly index operation node invariant ancestor node traverse manner update equation node altogether ancestor operation grey node node node thicker boundary update ancestor image operation compute leaf update node equation max dominance possibly negative additional simplification positive subset maximize convenient assume coordinate enforce symbolically replace infinitesimal explicitly sort coordinate apply binary coordinate sort compute difference coordinate similarly compute difference coordinate finally displace guarantee coordinate dominance remain displace description dominate input corresponds empty instance sort decrease coordinate clearly artificially notation dot correspond image denote sum important coordinate index bound index encode therefore index candidate restrict interested candidate obviously nonempty candidate restrict candidate equation dynamic program compute maximum candidate maximum candidate image lemma recursive formula computation intuition lemma proof index determines optimal define therefore candidate definition illustration proof lemma dot contribute contribute image optimal subset define rightmost coordinate conclude equality equality optimal define finally optimal define therefore candidate definition dot contribute image straightforward computation formula lemma already available data structure lemma algorithm interpret sweep algorithm chapter sweep horizontal maintain data structure lemma fix index assume available compute proof iterative algorithm loop maintain data structure analyze relation lemma sum illustration algorithm exploit contributes index lemma implies iteration iteration handle image explain maintain algorithm illustrate description sort coordinate permutation sort index non decrease coordinate coordinate artificial compute inverse maintain convenient interpret associate tth algorithm maintain invariant ith iteration define interpret undefined loop data structure lemma integer vertical compute sort coordinate perform binary coordinate per procedure coordinate construct belongs none computation reuse computationally ith iteration maintain invariant equation operation apply obtain equation apply recall operation apply algorithm invariant operation invariant indeed finite transform equation recall lemma implies ith iteration query indeed denote return iteration perform operation representation operation lemma repeatedly maxDominance linear theorem maxDominance negative proof notation denote compute compute lemma application lemma reuse compute compute linear optimal maxDominance optimal access anymore standard technique construct optimal without affect asymptotic unroll relation lemma computation maintain pointer index maximum achieve pointer recover optimal procedure index optimal index optimal achieve adaptation compute index index dimensional shade compute recursion geometric interpretation recursion image recall optimal exists optimal moreover optimal contains index split recursive recursively denote construct optimal recursive approach compute solves compute recursion decrease geometrically recursive argument recursion additional index define optimal reuse positive positive simplify lemma lemma assume positive skyline preprocessing assume dominate another dominate proof dominate another candidate candidate skyline dominate compute skyline kirkpatrick seidel technique chan compute convex hull optimally obtain algorithm guarantee preprocessing assume consists skyline dominate remove candidate remove dominate sort skyline coordinate align staircase apply binary dominance staircase additional apply lemma data interested skyline consequence theorem lemma obtain depends complexity skyline theorem maxDominance positively skyline skyline align staircase depict along coordinate algorithm arbitrary slightly simplify conceptual however improve bound obtain remain cleaning input positive image mention introduction consequence theorem lemma improve corollary representative skyline skyline constrain version max dominance technique maxDominance handle additional constraint chosen recall antichain skyline antichain equivalent request consecutive skyline geometric antichain image maxDominance antichain algorithm explain sect easily extend define notation additional introduce sect introduce index define cannot restriction analogue lemma proof skip essentially lemma analogue lemma lemma fix index assume available compute proof proof lemma applies nearly verbatim difference compute ith iteration instead query query rightmost guarantee index obtain theorem assume antichain variant maxDominance negative positive assume exactly exactly modify definition exactly index scenario suffices compute etc compute namely construct compute entry suffices compute portion linear compute subset coordinate belongs obtain theorem assume antichain variant maxDominance positively interval disjoint clique interval graph intersection graph interval interval node graph node correspond interval intersect geometric representation geometric model interval graph geometric representation direction interval construct interval graph sort endpoint interval becomes input sort sort difference assume input interval graph geometric model interval intersect pairwise interval graph subset interval defines clique pierce interval tight connection disjoint union clique interval pierce precisely node disjoint clique interval graph interval pierce correspond clique interval assign arbitrarily clique equivalence variant positive negative equivalence interval negative clique assume interval HittingIntervals integer subset sum interval intersect maximize simplicity assume interval interval interval mapped diagonal coordinate usually denote something interval quadrant define denote counterclockwise rotation around origin becomes exactly dominance namely interval interval image mapping interval quadrant define marked along diagonal image diagonal bijection candidate restrict HittingIntervals candidate maxDominance rotation theorem conclude theorem HittingIntervals interval prescribed interval interval negative HittingIntervals anywhere indeed endpoint interval immediately obtain corollary HittingIntervals interval interval negative duc interval graph mention introduction remove interval negative optimal duc duc positively interval graph equivalent HittingIntervals corollary obtain corollary duc interval graph clique constrain version interval sect constrain version HittingIntervals precisely assume interval integer collection location subset assume finite indeed interval replace endpoint interval endpoint optimal replacement obtain geometric transformation proof theorem applies obtain instance sect theorem conclude constrain version interval positive assume theorem implies conclusion maxDominance algorithm employ dynamic program approach data structure computation algorithm bound representative skyline disjoint union clique interval graph equivalently interval handle constrain version additionally structure input bound maxDominance sort insight obtain bound compute essentially sequence operation data structure lemma independently operation sequence update query data structure advance another potentially relevant insight operation exactly unclear exploit feature improve improve