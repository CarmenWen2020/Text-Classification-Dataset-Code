finite confluent implies component assume oracle available subset return maximal component return maximal component item function confluent component item  maximal component exists algorithm enumerate polynomial delay polynomial propose algorithm yield polynomial delay polynomial algorithm enumerate connector attribute graph graph vertex assign item enumerate subgraphs various connectivity vertex induced subgraphs vertex span subgraphs undirected graph fix introduction enumeration confluent confluent item attribute algorithm enumerates subset inclusion wise maximal respect item subset finite define component subset component maximal component satisfies max denote maximal component subset max denote component max confluent tuple component implies confluent sperner subset intersect ideal downsets partially graph positive integer vertex subset induce vertex subgraphs confluent sect definition vertex connectivity discus computational complexity confluent assume confluent implicitly oracle non empty subset return component max exists non empty subset return max denote upper bound max assume non decrease function subset define instance tuple item function instance item subset define instance define component component satisfies denote instance aim efficient algorithm enumerate confluent instance enumeration algorithm output polynomial polynomial overall computation polynomial respect input output incremental polynomial computation ith output output bound polynomial respect input polynomial delay delay consecutive output preprocessing postprocessing bound polynomial respect input incremental polynomial algorithm output polynomial polynomial delay algorithm incremental polynomial output polynomial enumerate instance flexible introduce notion function volume function subset subset positive propose algorithm enumerates positive introduce volume function model numerical monotone respect inclusion cardinality linear sum profit vertex volume function enables enumerate threshold whereas enumerate moreover volume function derive theorem theorem volume function assume algorithm enumerates traverse conventional technique enumeration structure relationship admits enumerate traverse theorem summarizes theorem instance confluent volume function positive instance enumerate delay  theorem indicates bound polynomial enumerable polynomial delay similarly bound polynomial enumeration polynomial respect input algorithm theorem framework apply enumeration graph sect organize sect research background sect terminology notation sect algorithm enumerates instance along computational complexity analysis algorithm enumerate component confluent instance propose algorithm apply enumerate subgraphs satisfy connectivity graph sect construct confluent unweighted mixed graph component corresponds subgraph sect mention significant application algorithm connector enumeration algorithm yield polynomial delay algorithm connectivity vertex connectivity sect obtain polynomial delay algorithm enumerate resp vertex induced subgraphs enumerate resp vertex span subgraphs undirected graph resp fix apply component enumeration algorithm finally sect conclude remark background mention motivation sect focus confluent various treat literature enumeration representative definition sect explain related difference sect difficulty confluent sect finally sect application propose algorithm motivation connector enumeration assume tuple undirected graph item function subset denote subgraph induced denote item subset connector vertex superset enumerate connector connector enumeration literature illustrates brief instance connector enumeration instance connector enumeration connector item integer image tuple graph item attribute graph useful exist network social network biological network literature report application connector enumeration biology   biological network vertex corresponds gene protein protein interaction gene gene  phenomenon gene expression gene expression occurs vertex item biologist particularly interested connector item gene expression simultaneously possibly complex recently propose algorithm enumerate induced subgraphs  non attribute graph apply algorithm maximal cohesive  protein protein interaction network maximal cohesive define connector maximal satisfy threshold related connector enumeration generalization frequent item mining data mining clique vertex corresponds transaction attribute graph community detection frequent subgraph mining significant graph mining latter asks enumerate subgraphs attribute graph frequently graph isomorphism define account item  successful algorithm algorithm enumerates frequent subgraphs node depth corresponds subgraph consists vertex node node subgraph obtain vertex subgraph connector enumeration propose  algorithm   parallelization  polynomial delay algorithm introduce propose alternative output polynomial algorithm  dynamic program generalization connector enumeration propose applicable connector enumeration graph mixed connectivity impose connector hereditary subgraph enumeration context subgraph enumeration graph graph enumerate subset induce subgraph satisfies denote vertex subset induce subgraph satisfies induced graph hereditary implies graph hereditary whenever review accessible non empty component contains strongly accessible component admits independent subset component component weakly confluent component imply readily mention relationship independent strongly accessible strongly accessible accessible confluent weakly confluent induced graph hereditary independent induced graph hereditary strongly accessible lemma moreover confluent accessible strongly accessible lemma lemma confluent union implies proof arbitrary component component  accessible equivalently accessible component lemma confluent accessible strongly accessible proof suffices accessible component ordering surely exist accessibility belong lemma confluent accessibility sequence distinct subset indicates accessible illustrates relationship venn diagram along concrete venn diagram relationship representative literature concrete image enumeration proposes polynomial delay polynomial algorithm enumerate instance confluent review related function closure operator extensibility monotonicity implies idempotence component fix respect strongly accessible resp accessible closure operator resp  uno developed polynomial delay algorithm enumerate component algorithm assume membership oracle identifies subset member suppose instance instance non redundant satisfies component sol minimal lemma weakly confluent sol unique function closure operator sol existence trivial algorithm enumerate apply enumeration non redundant instance weakly confluent strongly accessible essence application summarize exists closure operator instance weakly confluent theorem compute sol manner lemma strongly accessible similarly  uno algorithm enumerate apply enumeration weakly confluent accessible lemma strongly accessible complexity enumerate weakly confluent strongly accessible resp weakly confluent accessible summarize resp denote complexity membership oracle respectively  denotes component complexity propose algorithm complexity enumerate various  difficulty confluent mention algorithm accessibility accessible strongly accessible component component component proceed component identify subset component membership oracle confluent accessibility induced graph graph induced subgraph connectivity elementary notion graph theory sect definition component accessible component graph vertex subset induce subgraphs image due lack accessibility assume oracle membership oracle realize return although propose algorithm membership oracle explicitly redundant realize nevertheless oracle analysis clearer assumption oracle unrealistic enumeration maximal subset respect usually non trivial significant research issue graph related connectivity however implement oracle complexity polynomially bound sect extension  nagamochi recently algorithm enumerate instance oracle arbitrary complexity algorithm discus complexity algorithm applicable comparable another algorithm applicable superset venn diagram former faster latter former possibly peculiar achieves bound achieves bound trivial oracle assumption  complexity     respectively achieve bound define closure operator item propose algorithm item explicitly extend define closure operator enumerate subset confluent future application connector graph sect framework apply connector enumeration overview scenario instance connector enumeration graph item function item assign vertex define component nonempty vertex subset induces subgraph denote component confluent instance connector complexity enumerate connector  denote oracle realize conventional graph algorithm dfs bfs substitute obtain algorithm connector enumeration complexity respectively alternatively define component vertex subset induces subgraph regard empty subset strongly accessible weakly confluent similarly membership oracle implement complexity complexity bound substitute respectively corollary bound respectively complexity obtain immediately theorem propose algorithm achieves bound others achieves bound whereas bound respectively component instance component item maximal component proven sect algorithm enumerate instance conversely enumerate component complexity algorithm complexity confluent obtain substitute complexity respectively bound complexity strongly accessible resp accessible corollary theorem resp theorem complexity enumerate component various  achieves bound similarly comparison sect assumption  achieve bound bound complexity analysis loose algorithm somewhat develop algorithm  extent enumeration component future preliminary resp denote resp non negative function finite subset subset denote integer denote integer define subset subset denote minimum belongs denote whenever  denote maximum sequence  lexicographically sequence  hence important component confluent lemma confluent component superset exactly component max proof max contains maximal component component transitivity imply maximality hence maximal component max unique component superset denote unique component max suppose instance facilitate aim introduce item integer subset min𝐼𝜎 denote minimum item min𝐼𝜎 define min𝐼𝜎 disjoint union sect algorithm enumerates specify integer enumerate confluent define generate efficiently introduce relationship defines traverse generate recursively task establish enumeration algorithm define non algorithm return algorithm generates component contains component construct algorithm recursively generate complexity delay entire algorithm depends complexity algorithm bound complexity algorithm define instance confluent define subset item non empty subset define subset  define integer define component max min𝐼𝜎 component lemma instance confluent non empty max proof component max superset component derive contradiction assume superset however contradicts maximality prof min𝐼𝜎 definition max resp min𝐼𝜎 min𝐼𝜎 prof therefore max implies max min𝐼𝜎 min𝐼𝜎 implies min𝐼𝜎 min𝐼𝜎 min𝐼𝜎 min𝐼𝜎 hence contradict therefore lemma oracle generate item notational convenience item denote component subset denote component lemma instance confluent satisfy proof max uniqueness maximal component lemma indicates derive contradiction assume lemma max imply contradiction therefore define subsection defines non superset item superset minimal subset superset non item minimal superset lex min minimal superset lemma instance confluent non item denote lex min denote ldots cdots integer sigma cup   item sigma cap ldots algorithm correctly delivers lex min theta mathrm theta mathrm proof lemma min sigma  cup mathcal integer cup  subseteq ldots component cup cup cannot minimal superset implies sigma cup   cup lemma cup subseteq sigma subseteq sigma min sigma  imply mathcal superset contains minimal superset mathcal sigma cap sigma cap ldots supseteq sigma cap ldots sigma cap sigma sigma cap   sigma sigma prec sigma contradict lex min hence sigma cap sigma cap sigma obtain item sigma apply integer construct subset subseteq subseteq cdots subseteq subseteq sigma align array cup quad text cup  quad text otherwise array align otherwise subset  obtain subset cup   cup computable oracle mathrm sigma cap dot sigma compute component oracle mathrm langle rangle lemma algorithm described algorithm algorithm mention critical complexity analysis compute sigma loop oracle mathrm langle cup rangle obtain component cup  theta mathrm overall theta mathrm sigma additional theta mathrm oracle mathrm item define non mathcal setminus mathcal lex min define mathcal non mathcal setminus mathcal generate subsection construct mathcal component mathcal contains lemma mathcal sigma instance confluent mathcal item satisfies cap sigma setminus sigma emptyset component mathcal mathrm max cap langle rangle max item cap sigma setminus sigma disjoint collection mathcal mathcal mathrm max cap langle rangle mid min sigma min mid cap sigma setminus sigma max min𝐼𝜎 min item setminus sigma construct theta mathrm theta mathrm delta theta mathrm theta mathrm proof cap sigma cap sigma mathcal subseteq  sigma  sigma hence cap sigma setminus sigma emptyset arbitrary item cap sigma setminus sigma subseteq cap langle rangle mathcal mathrm max cap langle rangle emptyset max cap langle rangle maximal component mathcal mathrm max cap langle rangle max suffices  subseteq subseteq  sigma supseteq sigma supseteq sigma min sigma min sigma min𝐼𝜎 min𝐼𝜎 implies min sigma  mathcal implies mathcal sigma setminus sigma   assume mathcal  sigma sigma sigma sigma subseteq langle rangle hence setminus emptyset cap langle rangle maximality mathcal subseteq cap  cup mathcal transitivity sigma cup sigma cap sigma sigma cap sigma sigma however contradicts mathcal      mathcal contradict minimal superset therefore  mathcal  cap langle rangle maximal component item cap sigma hence align mathcal cup cap sigma mathcal mathrm max cap langle rangle mid textsc align max subset subseteq  min sigma min𝐼𝜎 mathcal mathrm max cap langle rangle max item cap sigma setminus sigma hence mathcal  disjoint collection mathcal mathcal mathrm max cap langle rangle mid min sigma min mid cap sigma setminus sigma max min𝐼𝜎 min item setminus sigma obtain algorithm described algorithm analyze complexity algorithm outer loop compute mathcal cap langle rangle theta mathrm oracle inner loop delta cap langle rangle consume inner loop algorithm theta mathrm lemma recall delta non decrease function algorithm evaluate align theta mathrm theta mathrm sum setminus sigma delta cap langle rangle theta mathrm theta mathrm delta align complexity iteration outer loop iteration oracle algorithm complexity theta mathrm lemma algorithm theta mathrm theta mathrm traverse entire algorithm enumerate mathcal integer compute component mathcal mathrm max langle rangle max compute mathcal subseteq mathcal mathrm max langle rangle max min sigma min𝐼𝜎 mathcal subseteq mathcal mathcal mathcal lemma suppose mathcal algorithm apply algorithm newly recursively mathcal mathcal ancestor traverse recursive generate delay alpha alpha denotes complexity improve delay alpha employ alternative output output resp generate descendant depth recursive resp odd integer assume volume function rho rightarrow mathbb algorithm enumerates rho positive mathcal described algorithm lemma mathcal sigma instance confluent rho positive mathcal enumerate theta mathrm theta mathrm theta rho mathrm delta langle rangle delay theta mathrm theta mathrm theta rho mathrm proof mathcal rho rho rho descendant subseteq  recursive analyze delay alpha denote complexity lemma delta delta langle rangle alpha theta mathrm theta mathrm delta langle rangle algorithm descendant compute rho candidate complexity delta langle rangle theta rho mathrm rho delta langle rangle hence complexity algorithm descendant without recursive alpha delta langle rangle theta rho mathrm algorithm descendant odd descendant output immediately descendant execute descendant output immediately descendant execute denote descendant execution algorithm ldots denote sequence depth descendant satisfies odd whereas satisfies therefore easily consecutive depth  output implies delay output alpha delta langle rangle theta rho mathrm analyze complexity descendant execution execution algorithm depth descendant algorithm descendant nonempty subset   hence descendant algorithm implement beta theta rho mathrm beta denotes beta theta mathrm theta mathrm lemma overall complexity theta mathrm theta mathrm theta rho mathrm volume function introduce impose output rho constant mathcal output mathcal output theta rho mathrm theta rho mathrm delay theta mathrm theta mathrm delta langle rangle theta mathrm theta mathrm theorem immediate lemma delta langle rangle delta assumption delta delta subset subseteq subseteq  enumerate component algorithm previous enumerate component confluent mathcal construct instance mathcal mathcal varphi denote dot define function varphi rightarrow varphi triangleq setminus  subset subseteq  mathsf ind  denote index  mathsf ind mid  varphi subseteq denote item varphi varphi  varphi varphi setminus mathsf ind  lemma dot mathcal confluent mathcal component mathcal instance mathcal varphi proof mathcal component mathcal supseteq mathcal mathcal subseteq mathcal mathcal superset   varphi setminus mathsf ind  setminus mathsf ind varphi   component mathcal varphi superset item mathcal component mathcal instance mathcal mathcal varphi lemma enumerate component mathcal algorithm instance mathcal corollary theorem corollary mathcal confluent volume function rho rho positive component mathcal enumerate theta mathrm theta mathrm theta rho mathrm delta delay theta mathrm theta mathrm theta rho mathrm confluent mixed graph meta function enumeration algorithm confluent apply enumerate subgraphs satisfy connectivity requirement graph treat application universally subsection construct confluent mixed graph function graph meta function mixed graph mixed graph define graph undirected multiple loop mathbf overline denote vertex undirected respectively triangleq mathbf cup overline vertex subset subseteq  denote subgraph induced subset subseteq cup denote vertex cap vertex cap vertex mathbf denote overline denote undirected triangleq mathbf cup overline non empty subset subseteq mathbf triangleq bigcup mathbf  overline triangleq bigcup overline  triangleq bigcup  vertex define disjoint subset subseteq varepsilon varepsilon define union cup  subset vertex subset setminus cup emptyset define meta function omega cup cup rightarrow mathbb subset cup define function omega cup rightarrow mathbb induced omega omega omega cup omega monotone subset subseteq subseteq satisfy align omega omega text text text cup text align vertex subset subseteq cup define align triangleq min omega varepsilon mid text text align min subset subseteq cup vertex notion connectivity generalization standard vertex connectivity graph detail explain sect lemma omega mixed graph monotone meta function subset subseteq cup omega cap cap  subset cup  proof derive contradiction assume cup  cup vertex cup admit omega cup varepsilon  monotonicity omega omega cup omega omega cup hence omega cup varepsilon  implies omega varepsilon  omega varepsilon  neither occurs without loss generality assume setminus setminus vertex cap belongs resp resp contradict connectivity resp hence setminus cup cap subseteq  assumption cap  non negativity monotonicity omega omega cap cap omega cap omega cup omega cup varepsilon however contradicts omega cup varepsilon  mixed graph omega meta function mathcal omega subseteq cup denote subset subseteq cup omega  lemma mixed graph omega monotone meta function mathcal mathcal omega mathcal confluent proof mathcal subseteq cap  omega cup cup omega cup omega  omega  lemma cup  omega cup cup  cup mathcal therefore mathcal confluent construction monotone meta function concrete construct monotone meta function mixed graph standard function vertex construct oracle apply enumeration algorithm sect correspond confluent mixed graph cup rightarrow mathbb function define coefficient function gamma alpha overline alpha alpha alpha beta consists function alpha rightarrow mathbb overline alpha overline rightarrow mathbb alpha alpha mathbf rightarrow mathbb beta cup rightarrow mathbb gamma monotone alpha overline alpha beta undirected overline alpha alpha beta mathbf alpha alpha beta mathbf beta vertex tuple gamma define meta function align omega cup cup rightarrow mathbb align subset subseteq cup omega cup rightarrow mathbb align omega array quad text beta quad text setminus array omega array quad text cap alpha quad text setminus overline alpha quad text overline setminus alpha quad text mathbf setminus alpha quad text mathbf setminus beta quad text setminus setminus array align gamma monotone gamma monotone lemma monotone gamma correspond meta function omega cup cup rightarrow mathbb monotone proof subseteq subseteq cup subseteq suffices omega omega cup vertex omega omega cap setminus beta omega vertex omega omega alpha cap setminus omega omega omega delta cap setminus omega otherwise delta overline alpha alpha alpha alpha overline alpha alpha alpha alpha alpha alpha beta overline alpha beta alpha beta alpha beta beta gamma mixed graph vertex mathrm mathrm respectively denote complexity vertex subset subseteq cup lemma monotone gamma omega correspond monotone meta function mathrm  mathrm subseteq subseteq cup non empty subset omega  vertex vertex setminus vertex mathrm mathrm proof compute formulate maximum graph omega capacity omega vertex capacity omega compute maximum algorithm hence mathrm mathrm setminus vertex augment graph omega another graph omega vertex omega vertex omega omega omega graph omega omega varepsilon setminus cup setminus cup subseteq cup otherwise cap omega varepsilon omega contradict omega varepsilon cap emptyset otherwise subseteq omega varepsilon omega omega contradict omega varepsilon cap setminus omega omega varepsilon omega varepsilon omega vertex derive contradiction assume vertex graph omega omega varepsilon cap emptyset otherwise cap contradict assumption vertex cup omega satisfies omega varepsilon omega varepsilon cap emptyset however contradicts omega suffices mathrm mathrm construction oracle denote mathcal gamma omega gamma lemma mathcal gamma confluent lambda subseteq cup subset mathcal gamma lambda denote component mathcal gamma subseteq lambda mathcal gamma lambda confluent construct oracle mathrm mathrm confluent non empty subset subseteq subseteq lambda mathcal mathrm max denote maximal subset mathcal gamma lambda subseteq denote maximal mathcal mathrm max subseteq triangleq emptyset exists lemma monotone gamma lambda omega denote correspond monotone meta function subseteq subseteq lambda non empty subset omega uniquely vertex assume vertex setminus vertex emptyset otherwise mathrm mathrm proof derive contradiction assume maximal mathcal mathrm max subseteq cap monotonicity omega omega cup cup omega cap cap omega lemma cup cup mathcal mathrm max contradict maximality therefore unique emptyset trivial assume mathcal mathrm max monotonicity omega subseteq hence contradict connectivity obviously vertex subset subseteq emptyset assume vertex monotonicity omega subseteq omega omega suffices vertex assumption vertex derive contradiction assume vertex setminus omega varepsilon setminus cup subseteq cap resp cap imply resp contradict vertex setminus monotonicity omega subseteq omega omega omega varepsilon contradiction remove vertex cap setminus vertex cap setminus vertex setminus cup fix vertex cap setminus cap setminus vertex mathrm mathrm lemma hence cup setminus mathrm mathrm cup procedure vertex setminus execute setminus repetition setminus mathrm mathrm setminus finally conclude emptyset vertex resp otherwise mathrm mathrm lemma entire algorithm described algorithm complexity mathrm mathrm respectively lemma oracle mathrm monotone gamma theta mathrm mathrm theta mathrm mathrm gamma lambda define core subset subseteq lambda subset omega subset satisfies omega lemma gamma lambda monotone subset lambda mathcal core mathcal mathrm max bigcup mathcal mathcal mathrm max mathcal mathcal mathcal mathrm max obtain mathcal mathrm mathcal mathrm mathcal cdot proof clearly mathcal mathrm max satisfies omega contains core mathcal emptyset uniqueness lemma therefore mathcal mathrm max bigcup mathcal mathcal mathrm max mathcal mathcal compute mathcal mathrm mathrm lemma mathcal mathrm max generate mathcal mathcal cdot therefore mathcal construct mathcal mathrm mathcal mathrm mathcal cdot lemma oracle mathrm monotone gamma lambda theta mathrm mathcal mathrm mathcal theta mathrm mathrm mathcal cdot assume mathcal core input connector enumeration recall connector enumeration introduce sect treat undirected graph mathcal vertex subset induce subgraphs formulation confluent formulate connector enumeration confluent instance sigma connector enumeration mathcal denote vertex subset induced subgraph regard resp emptyset resp disconnect mathcal confluent mathcal cup whenever subset subseteq cap mathcal implement oracle theta mathrm theta mathrm realize conventional graph dfs bfs upper bound delta exactly satisfies assumption delta delta subset subseteq subseteq subseteq following equivalent connector sigma instance mathcal sigma  diagram confluent mathcal instance sigma along mathcal sigma  diagram confluent mathcal instance mathcal sigma item integer shade image theorem instance sigma connector enumeration graph connector enumerate delay proof connector enumeration sigma enumerate instance mathcal sigma confluent mathcal theta mathrm theta mathrm delta theorem enumerate mathcal delay enumerate connector various connectivity addition mathcal obtain alternative confluent notion connectivity vertex connectivity digraph undirected graph confluent graph connectivity sect vertex connectivity mixed graph mixed graph vertex define vertex vertex subgraph ldots ldots overline mathbf vertex lambda denote minimum subset subseteq graph obtain remove kappa denote minimum subset subseteq cup setminus remove graph obtain remove vertex minimum subset chosen setminus subseteq menger theorem lambda resp kappa maximum disjoint resp internally disjoint lambda resp kappa min resp min graph lambda vertex graph vertex kappa vertex confluent graph connectivity vertex subset highly entire graph mixed graph define connectivity entire graph subset subseteq vertex lambda mathcal mathrm denote subset subseteq vertex vertex kappa mathcal mathrm vertex denote vertex lemma mixed graph integer mathcal mathcal mathrm confluent non empty subset subseteq subseteq mathcal mathrm max oracle mathrm mathrm implement min preprocessing mathcal mathcal mathrm vertex confluent non empty subset subseteq subseteq mathcal mathrm max  oracle mathrm implement oracle mathrm implement min preprocessing proof gamma lambda mixed graph lambda function coefficient function gamma alpha overline alpha alpha alpha beta alpha overline alpha alpha alpha beta cup gamma monotone mathcal gamma lambda confluent sect vertex mathcal mathrm mathcal gamma lambda latter non empty subset subseteq lambda omega vertex omega non empty subseteq lambda subseteq belongs mathcal mathrm mathcal gamma lambda subset definition coefficient function gamma lambda vertex mathcal mathrm mathcal gamma lambda define auxiliary graph mathrm undirected graph mathrm mathrm mid text lambda lambda construct mathrm min non empty subset subseteq belongs mathcal mathrm clique mathrm connectivity easily lambda lambda lambda lambda imply lambda lambda hence mathrm disjoint union clique mathcal mathcal mathrm mathcal mathrm max disjoint union clique induced subgraph mathrm mathcal mathrm max mathcal mathrm max component mathrm mathcal mathcal mathrm mathrm mathrm min preprocessing vertex mathcal mathrm vertex mathcal gamma lambda omega non empty subseteq lambda subset vertex gamma lambda subset definition coefficient function gamma kappa vertex mathcal mathrm vertex mathcal gamma lambda define auxiliary graph mathrm vertex undirected graph mathrm vertex mathrm vertex mid text kappa kappa construct mathrm vertex min non empty subset subseteq belongs mathcal mathrm vertex clique mathrm vertex mathcal mathcal mathrm vertex subset subseteq subseteq maximal mathcal mathrm max subseteq unique lemma hence construct unique maximal clique induced subgraph mathrm vertex mathcal core subset exactly vertex construct lemma mathcal mathrm max mathcal  construct mathcal mathrm max compute mathcal theorem lemma theorem delay complexity enumeration connector vertex theorem sigma instance mixed graph integer connector enumerate delay min preprocessing vertex connector enumerate delay min preprocessing proof recall subseteq delta denotes upper bound mathcal max theta rho mathrm theta rho mathrm regard volume function anywhere context lemma theta mathrm theta mathrm theta mathrm theta mathrm delta subseteq theorem delay theta mathrm theta mathrm theta rho mathrm delta complexity theta mathrm theta mathrm theta rho mathrm lemma theta mathrm theta mathrm theta mathrm theta mathrm delta subseteq theorem delay theta mathrm theta mathrm theta rho mathrm delta complexity theta mathrm theta mathrm theta rho mathrm preprocessing complexity immediate lemma highly induced subgraphs mixed graph define connectivity induced graph define mathcal mathrm mathrm resp mathcal mathrm vertex mathrm subset subseteq induced graph resp vertex lemma mixed graph integer mathcal mathcal mathrm mathrm confluent non empty subset subseteq subseteq mathcal mathrm max oracle mathrm implement min mathrm implement min mathcal mathcal mathrm vertex mathrm confluent non empty subset subseteq subseteq mathcal mathrm max  oracle mathrm implement min oracle mathrm implement min proof gamma lambda mixed graph lambda function coefficient function gamma alpha overline alpha alpha alpha beta alpha overline alpha alpha alpha beta cup gamma monotone mathcal gamma lambda confluent lemma vertex mathcal mathrm mathrm mathcal gamma lambda latter non empty subset subseteq lambda omega vertex omega non empty subseteq lambda subseteq belongs mathcal mathrm mathrm mathcal gamma lambda subset definition coefficient function gamma lambda vertex hence graph lambda vertex mathcal mathrm mathrm mathcal gamma lambda lambda lambda subset subseteq min lemma mathrm min mathcal core subseteq mid lemma mathcal mathrm max mathcal mathrm min vertex mathcal mathrm vertex mathrm mathcal gamma lambda omega non empty subseteq lambda definition coefficient function gamma kappa vertex kappa subset vertex graph gamma lambda subset vertex graph kappa vertex mathcal mathrm vertex mathrm mathcal gamma lambda kappa kappa subset subseteq min lemma mathrm min mathcal core subseteq  lemma mathcal mathrm max mathcal  mathrm min theorem lemma theorem delay complexity enumeration connector induced subgraphs vertex theorem sigma instance mixed graph integer connector induce subgraphs enumerate min delay connector induce vertex subgraphs enumerate min delay proof theta rho mathrm theta rho mathrm regard volume function anywhere context lemma theta mathrm min theta mathrm min theta mathrm theta mathrm delta subseteq theorem delay theta mathrm theta mathrm theta rho mathrm delta min complexity theta mathrm theta mathrm theta rho mathrm lemma theta mathrm min theta mathrm min theta mathrm theta mathrm delta subseteq theorem delay theta mathrm theta mathrm theta rho mathrm delta min complexity theta mathrm theta mathrm theta rho mathrm enumerate subgraphs sect enumerate component confluent mathcal approach apply enumeration vertex subset induce subgraphs various connectivity induced subgraphs  undirected graph enumeration  seminal reverse    enumerable output polynomial polynomial immediate algorithm achieves delay uno  enumerable analysis technique amortization propose linear delay algorithm empirical efficiency experimental comparison algorithm mention previous algorithm specialized task enumerate  algorithm applicable task confluent mathcal recall mathcal implement oracle theta mathrm theta mathrm theta rho mathrm theta rho mathrm corollary implies component mathcal enumerate delay vertex induced subgraphs mixed graph subgraph subseteq subseteq span literature enumeration span subgraphs vertex undirected minimal vertex span subgraphs enumerable incremental polynomial extend minimal vertex span subgraphs enumerate incremental polynomial constant  undirected minimal undirected steiner network minimal vertex  span subgraphs enumerable incremental polynomial recently propose reverse algorithm enumerates span subgraphs undirected graph polynomial delay polynomial delay algorithm enumerates induced subgraphs undirected graph corollary lemma enumerate vertex subset induce vertex subgraphs mixed graph constitute component confluent mathcal mathrm mathrm mathcal mathrm vertex mathrm respectively theorem mixed graph integer vertex subset induce subgraphs enumerate min delay vertex subset induce vertex subgraphs enumerate min delay subgraphs induced mixed graph subset subseteq denote subgraph induced define mathcal mathrm mathrm resp mathcal mathrm vertex mathrm subset induced graph resp vertex analogously lemma obtain lemma mixed graph vertex integer mathcal mathcal mathrm mathrm confluent non empty subset subseteq subseteq mathcal mathrm max mathrm subset subseteq implement min mathrm implement min mathcal mathcal mathrm vertex mathrm confluent non empty subset subseteq subseteq mathcal mathrm max  oracle mathrm implement min oracle mathrm implement min proof gamma lambda mixed graph lambda function coefficient function gamma alpha overline alpha alpha alpha beta alpha overline alpha alpha alpha beta cup gamma monotone mathcal gamma lambda confluent lemma vertex mathcal mathrm mathrm mathcal gamma lambda latter non empty subset subseteq lambda omega vertex omega non empty subseteq lambda non empty subset omega definition coefficient function gamma lambda vertex hence graph lambda vertex mathcal mathrm mathrm mathcal gamma lambda lambda lambda subset subseteq min lemma mathrm min mathcal core subseteq mid lemma mathcal mathrm max mathcal mathrm min vertex mathcal mathrm vertex mathrm mathcal gamma lambda omega non empty subseteq lambda definition coefficient function gamma kappa vertex kappa subset vertex graph gamma lambda subset vertex graph kappa vertex mathcal mathrm vertex mathrm mathcal gamma lambda kappa kappa subset subseteq min lemma mathrm min mathcal core subseteq  lemma mathcal mathrm max mathcal  mathrm min corollary lemma enumerate subset induce vertex subgraphs mixed graph constitute component confluent mathcal mathrm mathrm mathcal mathrm vertex mathrm respectively theorem mixed graph integer subset induce subgraphs enumerate min delay subset induce vertex subgraphs enumerate min delay define volume function rho cup rightarrow mathbb rho subset subseteq cup subset subseteq graph span subgraph rho theta rho mathrm theta rho mathrm similarly theorem enumerate subset induce vertex span subgraphs mixed graph constitute rho positive component confluent mathcal mathrm mathrm mathcal mathrm vertex mathrm respectively theorem mixed graph integer subset induce span subgraphs enumerate min delay subset induce vertex span subgraphs enumerate min delay conclude remark contribution theorem theorem enumeration algorithm achieves complexity sect define confluent mathcal delta delta subseteq subseteq oracle enumerate instance mathcal sigma arbitrary sigma computational complexity resp complexity oracle polynomially bound algorithm achieves polynomial delay resp polynomial application sect sect obtain polynomial delay algorithm connector enumeration connectivity impose connector connectivity vertex connectivity fix sect resp fix enumerate polynomial delay vertex subset induce resp vertex subgraphs subset induce resp vertex span subgraphs summarize computational complexity improve complexity bound respective future complexity enumerate connector satisfy connectivity requirement conn abbreviation complexity enumerate vertex subset subset satisfy connectivity requirement conn abbreviation emphasize sect input graph undirected mixed vertex manipulate meta function detail sect issue effectiveness algorithm instance enumeration concern confluent connector enumeration application biology mention sect pursuit application chemistry already developed implementation algorithm efficiency comparison previous algorithm  