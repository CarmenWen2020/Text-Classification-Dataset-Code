parameterized complexity compute nontrivial automorphisms hypergraph fix parameter permutation building earlier schweitzer proceeding ESA springer berlin http doi org ezproxy auckland compute nontrivial automorphisms hypergraphs bound remains fix parameter tractable treat fix parameter likewise isomorphism hypergraphs define vertex remains fix parameter tractable version introduce algorithmic  permutation generate fix parameter nontrivial exactly shrink orbit obtain subgroup maintain existence application yield fpt algorithm nontrivial automorphisms hypergraphs fix parameter hypergraphs unbounded compute hypergraph isomorphism exactly fix parameter tractable complicate orbit shrink technique introduction linear equation minimum nonzero minimum codeword fundamental algorithmic constant factor approximation NP parameterized complexity decision version formally linear equation define linear code parameter nonzero codeword recently randomize reduction codeword codeword exactly hardness generalization permutation permutation define denote generalization  parameter permutation readily  encode permutation encode transposition identity vector encode transposition domain encode transposition encode identity permutation vector encode permutation define disjoint transposition instance linear equation compute polynomial instance nonzero vector subspace span permutation subgroup generate contains permutation explain graph isomorphism graph automorphism topic suppose vertex graph hypergraph permutation automorphism analogue undirected graph parameter nontrivial automorphism vertex likewise graph hypergraphs undirected graph parameter nontrivial automorphism exactly vertex analogous version hypergraph parameter nontrivial automorphism vertex hypergraph parameter nontrivial automorphism exactly vertex fix parameter tractable schweitzer fpt algorithm vertex graph define input graph vertex fix parameter isomorphism vertex schweitzer algorithm easily adapt extend schweitzer hypergraphs bound treat fix parameter fix parameter tractable generalization technique hypergraph isomorphism polynomial reducible graph isomorphism however knowledge parameterized reduction achieve isomorphism treat parameter sect automorphism difficulty significantly schweitzer orbit shrink  arbitrary permutation reduce polynomial  subgroup orbit bound parameter reduce vertex hypergraphs graph preserve automorphisms exactly fpt described sect orbit shrink technique another application hypergraphs unbounded oracle compute automorphism orbit shrink technique apply obtain orbit interpret orbit vertex apply algorithm sect fpt compute hypergraph isomorphism exactly fix parameter tractable previous orbit shrink technique additional permutation theory yield fpt algorithm described sect preliminary notation upper bound algorithm notation suppresses factor polynomial input factor quadratic input hypergraph recall permutation theory detail   comprehensive text permutation subgroup permutation finite domain subgroup permutation denote domain implicit  denote respectively subgroup denote image permutation denote identity permutation apply permutation subset denotes coset generate subgroup orbit refer orbit permutation stabilizer subgroup stabilizer subgroup singleton subset stabilizer abuse notation denote intersection stabilizer cayley ham permutation metric derive useful ham cayley metric permutation permutation define subset fix definition ham metric ham distance permutation define generalization standard ham metric binary vector encode symmetric easy metric ham permutation define permutation transposition definition complexity permutation denote minimum transposition precisely positive integer transposition nontrivial permutation express disjoint nontrivial cycle cycle minimal expression transposition hence proposition nontrivial disjoint cycle definition cayley metric cayley distance permutation define definition permutation permutation minimal coset permutation minimal complexity coset cannot decompose notion apply automorphism graph coset isomorphism graph proposition coset permutation suppose minimal complexity proof disjoint cycle index assume contrary clearly without loss generality suppose reorder cycle therefore implies contradicts proposition hypothesis remark minimality notion definition incomparable automorphism graph definition automorphism minimal complexity minimal minimal complexity witness decomposition subgroup minimal implies minimal complexity corollary permutation minimal minimal complexity proof suppose proposition minimal maximum cycle minimum equality impossible proof automorphism graph minimality notion definition incomparable text detail image proposition decompose permutation minimal complexity proposition coset permutation decompose minimal complexity minimal complexity moreover inclusion become equality minimal proof proof induction application proposition minimal complexity otherwise proposition implies inclusion become equality minimal subset contradict assumption minimal complexity apply induction hypothesis yield decomposition minimal complexity minimal complexity combine obtain completes induction proof hypergraphs bound hyperedge hypergraph consists vertex hyperedge hypergraph maximum graph hypergraphs vertex isomorphism hypergraph hypergraph bijection vertex partition hypergraph bound isomorphism hypergraph hypergraph preserve isomorphism automorphisms isomorphism subgroup denote suppose isomorphic isomorphism isomorphism coset hypergraphs additional fix parameter fpt algorithm precisely hypergraphs nontrivial exists generalizes schweitzer algorithm graph hypergraphs graph schweitzer algorithm isomorphism iteratively apply transposition graph closer candidate partial isomorphism algorithm branching choice transposition apply transposition suitable sequence transposition algorithm explores depth computes candidate vertex transposition candidate crucial isomorphism contains vertex orbit vertex important role compute candidate schweitzer algorithm extend algorithm hypergraphs generalization vertex definition hypergraph hyperedge hyperedge clearly vertex definition hypergraphs vertex hypergraph vertex union sequel non identical hypergraphs vertex isomorphism lemma suppose distinct orbit hyperedges proof suppose suppose positive integer implies distinct orbit hence implies symmetric difference isomorphism implies hence application implication yield implies isomorphism contradicts assumption lemma distinct belong orbit proof lemma hyperedges hence additional vertex hyperedge lemma hyperedge contains distinct orbit proof contains distinct orbit lemma implies contradicts lemma algorithm compute candidate plug schweitzer isomorphism algorithm algorithm construction algorithm return candidate lemma desire lemma fpt bound procedure lemma hypergraphs vertex hyperedge bound isomorphism return contains vertex orbit moreover procedure proof definition lemma guarantee loop fails contains vertex orbit lemma loop terminates contains vertex orbit remains bound discus extend amount hypergraph latter fix parameter tractable classical bound technique theorem version schweitzer algorithm adapt hypergraphs isomorphism fpt graph however lemma algorithm meaningful subset precisely isomorphic hypergraphs vertex coset isomorphism output algorithm complexity minimal isomorphism lemma hypergraphs vertex return subset complexity minimal isomorphism proof algorithm description return contains isomorphism remains complexity minimal isomorphism lemma candidate contains vertex orbit minimal complexity indeed imply contradict minimal complexity suffices loop permutation return induction complexity bound suffices depth recursion recursive compute lemma computation linear recursion remark lemma minimal complexity isomorphism hypergraphs bound isomorphism return minimal complexity checked polynomial hence efficiently compute minimal complexity isomorphism theorem input hypergraphs algorithm isomorphism proof algorithm accepts return empty isomorphism trivially satisfies decompose proposition obtain minimal complexity isomorphism lemma return conclude algorithm hypergraphs theorem input hypergraph vertex algorithm enumerates complexity minimal automorphisms plus possibly minimal complexity proof clearly return contains automorphisms complexity minimal automorphism lemma decomposition argument bound lemma remark fpt algorithm enumerate graph automorphisms graph automorphisms however proposition minimal complexity automorphisms automorphisms return automorphism subgroup automorphisms generate hypergraphs bound bound hypergraphs vertex hypergraphs hyperedges unbounded maximum additional fix parameter fpt algorithm bound hypergraphs preserve isomorphism isomorphism automorphisms preserve refer simply isomorphism automorphisms unless explicit hypergraphs partition algorithm compute preserve isomorphism exists permutation subset intersect suppose target isomorphism hence cod technique alon yuster zwick FKS perfect hash function defines partition bag perfect hash hash distinct label hash function correspond define hypergraphs hash function target isomorphism restriction isomorphism vertex exactly unique hyperedge isomorphism vertex denote bound hyperedge proof contradiction suppose correspond isomorphism fix distinct automorphisms subset denote increase finally distinct isomorphism furthermore image hyperedge distinct distinct choice subset determines precisely hence distinct generate image impossible proceed fpt algorithm bound hypergraphs introduce definition important definition bound hypergraphs subset define permutation isomorphism minimal permutation minimal automorphisms analogously define isomorphism minimal minimal immediate consequence definition proposition hypergraph nontrivial automorphism nontrivial minimal automorphisms pairwise disjoint partition subroutine compute isomorphism hypergraphs building partition permutation bag contains exactly lemma subroutine algorithm compute minimal isomorphism lemma bound hypergraphs return algorithm contains minimal isomorphism furthermore algorithm proof algorithm recursive subroutine isomorphism subroutine return exit otherwise extension candidate minimal isomorphism isomorphism subset intersect induction ensures otherwise minimality implies hyperedge hyperedge bag inductive hypothesis iteration inner loop bound recursion bound depth bound overall recursive implement compute minimal isomorphism bound hypergraphs exactly augment algorithm initial branching FKS hash function defines partition partition FKS partition incurs extra factor yield algorithm compute minimal isomorphism exactly compute nontrivial minimal automorphisms graph exactly lemma algorithm directly applicable already automorphism return however minor modification suffices nontrivial minimal automorphisms permutation union automorphisms return minimal automorphisms incurs extra factor minimal automorphisms initial branching FKS hash function defines partition partition yield algorithm compute nontrivial minimal automorphisms exactly theorem input bound hypergraphs vertex parameter minimal isomorphism exactly compute isomorphism minimum minimal obtain corollary corollary input bound hypergraphs vertex parameter algorithm isomorphism computes isomorphism exists automorphisms compute automorphisms exactly solvable hypergraphs hyperedges bound focus hypergraphs hyperedges bound graph fpt reducible bound hypergraphs stress schweitzer algorithm ordinary graph cannot guarantee isomorphism exactly isomorphism automorphisms unless minimal complexity enumerate schweitzer algorithm generalization sect bound hyperedge hypergraphs however automorphism expressible automorphisms enumerate corollary proposition theorem corollary hypergraph return algorithm subgroup contains automorphisms automorphisms exactly subgroup automorphisms corollary goal exactly explain theoretic procedure shrink subgroup orbit moreover treat orbit hypergraph obtain bound hypergraph automorphism building algorithm bound hypergraphs sect overview proceed detail shrink orbit preserve permutation subset permutation parameter recall permutation generate aim reduce instance instance permutation subgroup orbit contains lemma polynomial algorithm input instance output instance orbit bound moreover proof reduction application theoretic observation orbit otherwise nonempty immediately permutation belongs claimed reduction algorithm stabilizes orbit orbit exist correctness reduction consequence reduction polynomial   algorithm polynomial loop iteration algorithm automorphisms lemma hypergraph hyperedges bound fpt reduce automorphism automorphism vertex bound proof hypergraph hyperedges bound apply theorem enumerate complexity minimal automorphisms clearly automorphism subgroup apply lemma permutation replace subgroup orbit automorphism automorphism designate orbit obtain bound hypergraph assign vertex orbit preserve automorphisms clearly automorphisms survive preserve automorphisms bound version hypergraph bound hypergraphs automorphism algorithm theorem directly automorphisms minimal however theorem adapt algorithm theorem algorithm bound hypergraphs decides automorphism computes automorphism exists proof apply algorithm theorem enumerate minimal automorphisms proposition preserve automorphism expressible minimal automorphism partition candidate enumerate vertex cod FKS perfect hash function define bag FKS bag contains exactly namely combinatorial partition bound cycle partition partition partition assume partition denote minimal automorphisms enumerate apply algorithm theorem partition subset define partition partition exactly clearly theorem exists preserve automorphism partition succeed extra factor completes proof corollary algorithm hypergraphs decides automorphism computes automorphism exists proof lemma transform hypergraph bound automorphism preserve automorphism hence apply algorithm theorem bound obtain theorem bound finally hypergraphs unbounded algorithm understood partial evidence neither fpt algorithm corollary algorithm hypergraphs proof hypergraph input compute generate polynomial polynomially GI oracle lemma reduce instance bound hypergraph algorithm corollary theorem apply respectively isomorphism bound hypergraphs fix parameter tractable sect orbit shrink technique reduce preserve automorphisms hypergraphs bound sophisticated orbit shrink technique brief overview algorithm explain orbit shrink involve hypergraphs suppose isomorphism return algorithm theorem exactly already otherwise isomorphism exactly intersect intersection agrees fix disagrees remain fix seek overview formulate constrain automorphism hypergraph parameter constraint treat additional fix parameter exactly automorphism satisfies equality inequality constraint namely compute automorphism cycle choice subset described subset instance broadly algorithm polynomial reduction transforms orbit shrink hypergraph bound instance function parameter orbit shrink ensure automorphism satisfy constraint iff preserve automorphism satisfy constraint algorithm bound instance bound hypergraphs input instance vertex hypergraphs vertex partition along constraint equality inequality constraint preserve automorphism satisfy constraint adapt algorithm automorphisms bound hypergraphs sect definition vertex hypergraph constraint define instance subset preserve automorphism satisfies constraint constraint sequel recall notation definition definition lemma analogous proposition decomposition preserve automorphism minimal automorphisms correspond partition constraint lemma hypergraph constraint instance non trivial preserve automorphism satisfy partition subset constraint partition subset minimal automorphism satisfies constraint satisfied moreover chosen proof direction satisfy constraint satisfied constraint hence satisfied induction satisfies partition constraint minimal automorphism satisfies minimal happens otherwise non empty implies partition constraint subset constraint satisfied otherwise former constraint satisfied latter clause satisfied consequently satisfied satisfied hence apply induction hypothesis yield partition combine obtain desire partition direction partition partition preserve automorphisms satisfied satisfied automorphism definition equivalent define moreover constraint unique constraint satisfied remains constraint satisfied theorem bound hypergraphs compute minimal automorphisms exactly algorithm theorem building algorithm automorphism essentially brute facilitate cod already explain sect theorem vertex bound hypergraph input constraint algorithm computes preserve automorphism satisfies exists proof algorithm return disjoint lemma implies satisfies algorithm return automorphism satisfies lemma partition permutation minimal automorphism satisfies iteration loop hash function injective exist FKS hash function exists injective loop iteration partition algorithm return implement algorithm theorem bound FKS hash inner loop iteration respectively yield runtime orbit shrink instance algorithm additional permutation theory recall definition   text permutation partition orbit orbit transitively subset clearly singleton trivial nontrivial nontrivial primitive primitive partition maximal nontrivial  maximal action permutation generate orbit maximal orbit compute theorem useful information structure primitive permutation recall alternate subgroup permutation index subgroup permutation theorem theorem suppose primitive subgroup contains contains contains theorem theorem 3D primitive contains lemma implies alternate orbit survives fix vertex orbit lemma permutation orbit denote restrict suppose subgroup contains pointwise stabilizer contains subgroup proof express denote surjective projection homomorphism normal subgroup normal subgroup nontrivial normal subgroup suppose trivial isomorphism imply contradicts assumption suppose surjective projection homomorphism normal subgroup contains claimed lemma definition subgroup remark lemma suppose orbit imply assumption consequence lemma fix vertex orbit orbit depends relates orbit definition orbit permutation link isomorphism happens isomorphic proposition orbit permutation link isomorphic proof suppose link orbit definition isomorphism mapping isomorphism conversely suppose isomorphic isomorphism onto restriction onto homomorphism hence isomorphism cardinality mapping apply isomorphism hence orbit link orbit action alternate nearly independent unless link lemma suppose orbit suppose link contains proof without loss generality assume denote surjective projection homomorphism easily checked normal subgroup nontrivial normal subgroup similarly normal subgroup hence trivial isomorphism imply isomorphism theorem hence isomorphic assumption hence normal subgroup isomorphic isomorphic isomorphic normal subgroup implies contradiction implies link assumption therefore imply finally possibility contains ingredient algorithm observation link orbit action alternate fix vertex orbit equivalent fix vertex orbit lemma theorem suppose automorphism permutation corollary link orbit permutation proof isomorphism witness link essentially restrict remain fix bijection yield isomorphism define conjugation hence automorphism lemma permutation bijection fix prof lemma lemma tailor correctness algorithm permutation orbit maximal lemma permutation orbit orbit suppose contains furthermore orbit suppose orbit maximum cardinality suppose suppose stabilizer subgroup contains proof nontrivial orbit nonempty subset stabilizer subgroup contains proof therefore lemma apply stabilizer contains contains apply lemma orbit link therefore lemma contains contains hence stabilizer contains transitive therefore orbit orbit therefore hence nontrivial orbit otherwise nontrivial orbit action union equation apply lemma union orbit stabilizer subgroup contains contains orbit contains orbit link orbit remains orbit link satisfies lemma statement hence nontrivial orbit apply obtain nonempty subset contains apply argument repeatedly contains lemma permutation orbit maximal suppose subgroup suppose  stabilizer subgroup remain orbit alternate proof transitive maximal primitive stabilizer  stabilizes  stabilizes denote subgroup pointwise stabilizes subgroup pointwise stabilizes subgroup chain contains subgroup pointwise stabilizes stabilizer subgroup fix hence orbit contains apply lemma assumption therefore inequality inequality contains lemma stabilizer contains orbit moreover parameterized algorithm input instance hypergraph constraint algorithm computes permutation generate complexity minimal automorphisms invoke automorphism satisfy constraint mention sect algorithm shrink orbit shrink orbit treat orbit instance bound theoretic machinery specifically theorem lemma ensures algorithm orbit shrink preserve automorphism satisfy constraint survives theorem algorithm correctly solves proof suppose satisfies theorem algorithm return automorphisms minimal complexity automorphisms proposition automorphism decompose minimal complexity automorphisms implies whenever algorithm shrink shrink orbit automorphism satisfies survives shrink orbit none indeed implies contradict assumption alternate theorem imply primitive non trivial  stabilizes survives shrink shrink occurs algorithm exit loop implies stabilizer orbit contains immediate consequence lemma stabilizer nontrivial orbit proof intersect apply lemma union remain orbit subset pointwise stabilize lemma hence clearly therefore lemma stabilizer contains alternate remain orbit claimed automorphism satisfy constraint stabilizer automorphism satisfy constraint automorphism satisfy orbit automorphism automorphism claimed conjugate conjugation preserve permutation pointwise stabilizes therefore constraint constraint constraint satisfied therefore orbit loop algorithm execute shrink orbit preserve existence exactly satisfy constraint therefore loop exit within orbit bound interpret orbit vertex invoke  theorem theoretic computation involve compute stabilizer subgroup permutation polynomial bound   algorithm analysis operation loop implement claimed bound obtain fpt algorithm hypergraphs corollary corollary hypergraphs proof explain subroutine fpt algorithm constraint apply theorem instance obtain algorithm hence algorithm completes proof conclude remark complexity parameterized instance  related graph automorphism isomorphism hypergraphs additional parameter fpt extend schweitzer hypergraphs obtain faster algorithm hypergraphs unbounded fix parameter tractable fpt