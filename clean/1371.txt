agile software development ASD widespread professional  traditional approach development project failure rate important speedy responsive delivery software internet business practitioner embrace ASD commentator  faster cheaper development approach however recent profile failure ASD project discontinue ASD software drawn attention ASD risk manage risk identify understand arise researcher conduct interview organization ASD contractor consultant interview reveal ASD risk careful management achieve desire project outcome popularity agile software development ASD organization increasingly seek quickly develop software cope business environment ASD encompasses approach extreme program scrum dynamic development crystal agile project management feature driven development lean software development approach terminology core agile manifesto http  org generally aim development responsive customer developer orientation boxed iterative development cycle frequent communication customer constant adaptation accommodation ASD development organization relationship business generate benefit resolve development risk however innovation business reengineering ASD undesirable addition typical critical factor ASD approach strength suggests ASD project risk factor traditional development environment research software development risk sidebar identify manage risk important research software development risk identification analysis reduce project failure difference traditional approach ASD identification ASD risk rely overly knowledge traditional development risk perform organization involve ASD statistical ASD theory organization aim insight participant ASD risk future research finding empirical sample research software development risk decade research risk adopter ASD risk arise consequence organization related software development risk susan  steven alter risk factor apply information operation apply project risk examine operational project risk highlight risk typically related user communication user stakeholder lack user involvement failure manage user expectation misunderstand user requirement failure accommodate requirement scope agile software development ASD effectively issue iteration cycle accommodate clarify user requirement interaction constant communication user business stakeholder improve communication develop understand requirement however recent failure project adopt ASD report challenge associate drawn attention risk importance identify assess mitigate UK department  cease agile software development universal credit program escalate nearly billion estimate project fail deliver universal credit ASD project UK dismiss unacceptable outcome exception suspect ASD  project management nevertheless project attention ASD risk software development recent  scrum another highlight risk manage reference  alter information risk risk factor mostly information comm assoc information vol    cycle development information vol  XP qualitative extreme program agile software engineering LNCS springer rosenberg stephen extreme program refactored XP   agile development fail universal credit computer weekly july  com news agile development fail universal credit   scrum abandonment distribute  proc pacific asia conf information  http   org ezproxy auckland  conduct adopt qualitative interpretive approach particularly useful researcher seek understand gain insight approach simulation model survey data primarily interview interview strength depth holistic coverage opportunity discover weakness bias owe selection interviewee faulty recall social desirability response respondent political agenda establish guideline minimize limitation investigation adoption ASD organization examine longitudinally overview organization interviewed organization development member project manager director business manager user thirty interviewee conversation transcribe interviewee refuse interview instead feasible interview summary conversation interviewee validation clarification analyze data cycle cycle identify risk participant experienced cycle grouped risk origin finally refine comparison risk report prominent report risk owe article constraint overview organization overview organization besides organization stakeholder interviewed freelance developer ASD consultant triangulate interview ass finding reliability enhance validity attend business orient conference workshop focus ASD meeting finding participant conversation feedback participant involve organization ensure finding validity external validity finding ASD risk identify organization risk organization dealt development deployment risk development deployment risk category technical debt technical debt visible invisible decision compromise software complexity negatively affect software future concept originally refer cod architectural documentation debt although technical debt context traditional software development ASD intensify technical debt concern ASD debt quickly accumulate owe significantly reduce development adhere strict boxing constantly deliver functional requirement business accumulation unexpected project delay software quality software becomes complex understandable maintain ward cunningham coin metaphor technical debt assert debt development paid promptly rewrite occurs debt repaid spent code debt technical debt security debt increase risk security breach data corruption security debt accumulates developer  attend critical vulnerability ignore postpone consideration medium vulnerability accumulation generally impossible zero security debt objective identify formulate repayment agile software development ASD risk organization technical understood accumulate technical debt however explain pressure deliver boxed iteration cycle shortcut delivery correlate mike cohn statement technical debt rush implementation furthermore highlight difficulty nonfunctional requirement user iteration cycle business orient stakeholder  requirement correlate  stray colleague finding organization daily scrum meeting justify continued investment fail action project setback due business participant lack comfort technical jargon focus implement functional requirement summary respondent although business stakeholder involvement ASD mitigate traditional development risk communication user stakeholder lack user involvement failure manage user expectation significantly contribute technical debt nevertheless inability appreciate understand something importance source staff communicate receiver business staff separation development operation ASD business ASD environment ASD becomes tightly couple business requirement timeline however development becomes increasingly operation administrator network engineer infrastructure specialist ensure software stability reliability operational environment separation amplify ASD owe pace separation consequence tension relationship ASD operation tension typically ASD operation respond slowly whereas operation ASD continuous delivery stressful operation cope provision application infrastructure task conflict occurs ASD pace challenge operation rhythm priority ASD deliver iteration cycle demand parallelism role inconsistent operation function linearly basis request queue respond systematically ASD operation request typically met iteration cycle devops community recognize development operation silo technique consistently address researcher mention tension ASD organizational function quality assurance strategic alignment consequence ASD fully aware operation environment operation lack communication involvement ASD environment development environment operating production environment development organization version database technology developer discover later production environment version implement developed application schedule operating environment version involve considerable rework ASD environment lack mechanism deployment operability issue ASD inability involve operation delay production deployment organization dedicate sprint operation issue user project backlog project another organization ASD involve operation member throughout project consequence lack knowledge deployment operability technology advance developer necessarily operational knowledge increase shelf component particularly web development specialist web development component  application container networking database integrate software nevertheless component configure maintain considerable effort task beyond developer capability ASD management carefully oversee although risk occurs development environment ASD environment  narrow ASD focus deliver software desire business functionality driven delivery user acceptance gear ensure software functional requirement performance fourth consequence increase  operation ASD perform necessitate  stabilize available ASD struggle balance develop feature handle project backlog rework request defect report enhancement request participant report ASD usually focus develop feature instead handle rework request emergency patch significantly downstream ASD operation consequence business feature resolve infrastructure networking operational issue environment however developer focus business important technical issue server network upgrade insufficient priority iteration cycle ASD phase unanticipated delay overall project member express disappointment development actually waste operation increase defect ASD organization adoption project defect beyond organizational average however defect rate approach acceptable ASD mature participant developer quality important ASD environment traditional environment accord organization quality largely developer quality ASD environment developer lack ASD tend perform poorly ASD project reflect ASD developer recall frustration agile spending actually development another developer project scrum reflect project defect management around  project management risk project management risk category unstandardized project management ASD advocate organize considerable freedom autonomy motivate member develop routine ASD tend project management prefer unstandardized toolset across enterprise negative consequence technology advance developer necessarily operational knowledge organization ASD away traditional whiteboard sticky developer inconvenient tend lose others cumbersome sticky across whiteboard away concern sticky  agile project management software choice software largely knowledge preference organization lack standardize software confusion manager report merge manage workload become challenge another involve version user acceptance organization ASD version user acceptance protocol autonomous ASD comfortable whatever unstandardized toolset loss negotiation vendor potential economy licensing impaired knowledge across project  operation member difficulty related data lack knowledge retention ASD privilege communication documentation implicitly assumes member throughout project member develop application remain organization oversee development later version application assumption necessarily  environment shuffle reassignment member reveal velocity quality tend noticeably member addition turnover personnel unlikely development involve subsequent version application develop version longer unravel logic code understand development decision iteration risk described evident consciously assess carefully manage throughout ASD project highlight risk article caution highlight issue organization embrace agile approach