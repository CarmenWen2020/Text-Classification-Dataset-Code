software service implement distribute complex behavior failure mode tech organization experimentation verify reliability netflix engineer approach chaos engineering principle underlie article theme issue devops thirty jim improve availability install proven hardware software alone service internet alone option service provider continually increase service feature improve performance netflix engineer code production modify runtime configuration parameter netflix architecture sidebar availability important customer video service outage customer achieve availability apply approach advocate netflix chaos monkey internal service randomly selects virtual machine instance host production service terminates chaos monkey aim encourage netflix engineer software service withstand failure individual instance active normal engineer respond quickly service fails owe instance termination chaos monkey proven successful netflix engineer service handle instance failure encourage extend approach inject failure production improve reliability perform chaos kong simulate failure entire amazon EC elastic compute failure injection request netflix service fail verify degrades gracefully realize activity underlie theme  simply production organization amazon google microsoft facebook apply technique resilience activity discipline emerge discipline chaos engineering specifically chaos engineering involves distribute confidence capability withstand turbulent production anything hardware failure unexpected surge client request malformed runtime configuration parameter principle chaos engineering overview http  org elaborate shift perspective chaos engineering premise engineer collection service production understand behavior inject input transient network failure happens boundary netflix architecture netflix customer access movie TV deliver internet device smart TVs smartphones tablet desktop computer netflix UI display content tailor specific user movie screen customize basis data user previously UI feature recommendation rating user profile bookmark resume previously video netflix infrastructure component netflix content delivery network geographically distribute cache video data server storage capacity site around netflix user button server video data user distribute service implement UI functionality video service inside virtual machine amazon web service replicate across geographic reduce latency improve availability chaos engineering article refer service traditional software engineering approach functional specification describes software behave comprises multiple program functional specification defines program behavior functional perspective software specification defines input output distribute functional specification incomplete fully characterize behavior input distribute functional specification incomplete fully characterize behavior input exacerbate complexity user behavior underlie infrastructure fully enumerate input impractical compose specification constituent service behavior perspective engineer focus dynamic software production perspective assumes organization deployed software production active user engineer entity observes behavior capture metric boundary engineer typical behavior metric steady behavior behavior user interaction rate request engineer initiate runtime configuration code transient failure service depends perspective everything properly user complain implementation specification principle chaos engineering chaos engineering experimental discipline specify hypothesis independent variable dependent variable context principle embody chaos engineering approach hypothesis around steady behavior production automate continuously hypothesis around steady behavior netflix chaos engineering ensure properly variety however properly vague basis context quality attribute focus availability netflix feature sidebar implement service multiple service fail internal service fails failure necessarily affect overall availability netflix service fallback ensure graceful degradation failure  service minimal impact user service request cache service sits service cache service failure request directly behavior desirable increase request latency load user affected netflix service personalize content fallback reasonable default bookmark service fails netflix UI default video resume previous location option ultimately user content successfully operationalize concept user video metric SPS per SPS primary indicator overall health although chaos evokes unpredictability fundamental assumption chaos engineering complex exhibit behavior regular predict similarly SPS metric varies slowly predictably throughout netflix engineer SPS developed intuition fluctuation within standard variation concern unexpected SPS graph SPS per metric varies slowly predictably throughout orange trend prior axis label data proprietary graph SPS per metric varies slowly predictably throughout orange trend prior axis label data proprietary SPS metric characterizes steady behavior another metric netflix account  per obvious link exists metric availability available user video service domain metric characterize steady behavior commerce site purchase per whereas service per chaos engineering hypothesis around treatment affect steady netflix software deployment multiple geographic northern virginia oregon ireland outage occurs fail another redirect incoming client request unhealthy healthy scenario hypothesize fail another minimal impact SPS formulate hypothesis chaos engineering hypothesis metric metric SPS characterizes overall steady finer grain metric cpu load database query chaos engineering focus former steady characterization visible boundary directly capture interaction user finer grain metric chaos engineering directly availability however finer grain metric chaos engineering function properly metric impact service user increase request latency cpu utilization symptom service operating degrade mode user viewpoint properly individual service owner netflix alert internal metric service conclude finer grain metric function correctly SPS impact software development refers execution trace program input error engineer code temptation focus code unfortunately error client service malformed request service consume malformed response server disk memory exhaust network latency temporarily spike magnitude traffic client spike unexpectedly recent report percent catastrophic failure incorrect handle  error brings chaos principle chaos stimulus sample input obvious choice historical data input involve previous outage ensure previously access historical data another  outage however input potentially disrupt steady behavior candidate netflix input terminate virtual machine instance inject latency request service fail request service fail internal service entire amazon unavailable although focus hardware software failure input input valuable input rate request service runtime parameter metadata propagates simulate instead inject netflix actually entire amazon offline capability instead action assume offline redirect client request amazon ultimately engineer chaos judgment tradeoff realism risk harm illustration kyle  david  perform production financial trading selectively apply subset user internal netflix service behave unavailable viewpoint user whereas others function properly reduce scope mitigate risk production compute server increase dramatically decade despite increase deploy entire netflix server individual server compute memory storage network bandwidth reliability host subscriber implement internet service deploy software across multiple server coordinate network distribute microservices architecture popularity software engineer likely implement internet service distribute ala traditional software approach insufficient identify distribute potential failure failure mode failure netflix client server refer internal service typically client server server overload increasingly longer respond request client outbound request unbounded local queue queue consumes memory client fail client request service cache service return transient error incorrectly cached client request error response cache failure mode integration involve interaction service context integration production netflix fully reproduce entire architecture simply however reproduce entire context production fully reproduce aspect context difference exist synthetic client behave client dns configuration issue automate continuously principle leverage automation maintain confidence netflix continuously engineer modify exist service behavior service runtime configuration parameter addition metadata continually netflix video catalog contribute service interruption confidence decrease manually however useful automate ensure repeatedly evolves rate depends context netflix chaos monkey continuously weekday chaos kong monthly automate chaos intimidate introduce stimulus failure however netflix chaos monkey suggests automation feasible ensures production service withstand failure chaos basis principle define define steady measurable output indicates normal behavior hypothesize steady experimental introduce variable reflect server crash malfunction network connection sever disprove hypothesis difference steady experimental netflix service user critical video bookmark service verify service failure significantly affect SPS measurable output failure bookmark service minor impact SPS identify percentage netflix user involve experimental introduce failure experimental simulate service failure selectively fail request service associate experimental user selectively fail request specific user service hypothesize SPS approximately SPS confidence ability maintain behavior presence variable uncovered weakness suggests improvement future chaos engineering although concept article application improve software infancy article aim explicitly define underlie concept advance software increase complexity empirical approach achieve availability practitioner research community recognize chaos engineering discipline particularly following domain informal discussion internet organization apply approach organization document apply chaos engineering demonstrate technique unique netflix adoption approach successful organization chaos engineering organization engineering adopt netflix built infrastructure built chaos specific organization infrastructure reusable reusable across organization injection model inject potentially combination research failure trigger combination discus chaos engineering contact chaos netflix com