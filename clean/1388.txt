continuous delivery CD emerge  alternative traditional release engineering promising capability release valuable software continuously customer  implement CD article explains  adopt CD describes CD capability report benefit challenge involve fellow practitioner insight adoption CD identify challenge researcher valuable input develop research agenda continuous delivery CD software engineering approach valuable software cycle ensure software reliably release CD attract increase attention recognition CD advocate organization rapidly efficiently reliably service improvement eventually ahead competition however implement CD challenge context enterprise exist development release environment explain adopt CD   CD capability report benefit challenge involve fellow practitioner insight adoption CD identify challenge researcher valuable input develop research agenda context  rapidly turnover approximately billion employee service regulate bet phone internet relies heavily increasingly custom software application application website mobile apps trading pricing bet data distribution software bet develop application technology stack java ruby php net application infrastructure consist server location application developed maintain technology department employ software development depends application complexity release cycle application varies previously application typically release release cycle requirement cycle engineer development extensive bug fix cycle developer software operation engineer deploy production deployment involve manual activity release model artificially delayed feature release cycle feature generate lose feedback available release scary release error prone manual activity priority incident manual configuration mistake uncommon addition release activity efficient environment improve situation  initiative implement CD establish dedicate CD pipeline diverse application built platform CD pipeline application operates maintains platform application development CD pipeline application application pipeline slightly another application pipeline stage application pipeline continuous delivery CD pipeline promotion advance pipeline execution stage another automatic manual confidence production readiness increase pipeline stage continuous delivery CD pipeline promotion advance pipeline execution stage another automatic manual confidence production readiness increase pipeline stage code commit code commit stage immediate initial feedback developer code developer code software configuration management repository stage trigger automatically compiles source code executes stage encounter error pipeline notifies developer developer fix code peer review code trigger code commit stage execution pipeline everything pipeline automatically stage stage executes generate code coverage report integration various static code analysis artifact release uploads artifact repository manages deployment distribution later pipeline stage artifact CD binary release production binary built software multiple stage built software risk introduce difference bug difference fix frustrate software developer tester production CD pipeline eliminate bug anything pipeline notifies developer otherwise automatically stage acceptance acceptance stage mainly ensures software specify user requirement pipeline creates acceptance environment production environment software deployed involves provision server configure network security deploy software configure software pipeline acceptance suite environment previously environment manual activity complex application setup developer application project setup longer developer request machine infrastructure request unix engineering configure machine request network engineer connection machine CD pipeline developer perform activity pipeline automatically environment stage error arise pipeline notifies developer otherwise stage performance performance stage gauge code affect software performance pipeline performance environment suite performance environment centrally manages software quality previously owe   effort performance environment performance development perform release pipeline performance occurs code commit previous stage developer immediate feedback code degrade software performance diagnose fix cheaper release manual although automate comprehensive manual sometimes tester perform exploratory business user perform user acceptance previously tester manual environment headache manual error prone CD longer worry pipeline automatically environment notifies tester email information access deployed application satisfactorily artifact promote potential release candidate release candidate software quality deploy production production deployment production click button previously deployment sometimes fail error deployment script CD manual deployment deployment script previous stage benefit application CD developed software development user business development adopt agile approach kanban application CD application CD benefit CD benefit motivate benefit increase investment CD CD benefit motivate benefit increase investment CD accelerate release frequency increase dramatically previously application release application release average application release multiple cycle user conception production decrease CD deliver business inherent software release customer quickly capability ahead competition competitive economic environment building frequent release application development obtain user feedback quickly useful feature feature useful effort previously feature useful discover release already spent effort feature improve productivity efficiency productivity efficiency improve significantly developer percent fix environment CD pipeline automatically environment similarly tester considerable effort environment operation engineer effort release application production click button pipeline automatically release application production furthermore developer operation engineer effort troubleshoot fix issue release CD pipeline eliminate issue effort otherwise spent fix issue valuable activity reliable release risk associate release significantly decrease release become reliable mention CD deployment script repeatedly deployment production error deployment script already discover frequent release code release decrease fix easy reduce impact moreover CD pipeline automatically release fails reduces risk release failure engineer comment stress release previously becomes another normal improve quality quality improve significantly bug application decrease percent CD immediately code commit code undergoes series developer fix another task eliminates bug otherwise bug release previously bug bug approximately percent workforce fix bug usually nobody customer bug bug rare longer bug rare occasion bug discover production kanban fix release customer release bug fix frame usually addition priority incident production decrease significantly apart CD pipeline eliminate error manual configuration error prone improve customer satisfaction CD distrust tension exist user department software development owe quality release issue manager comment relationship improve enormously trust establish challenge motivate benefit increase investment CD expand adoption CD across improve CD platform priority nevertheless implement CD involves considerable challenge organizational challenge challenge organizational release activity involve perceive territory tension exist due compete goal access server another permission involve consultation negotiation frequent release application development obtain user feedback quickly address organizational challenge leadership restructure organization barrier promote collaborative culture situation improve although literature organizational exists research focus introduce CD organization research topic understand challenge depth develop strategy tackle effectively significantly organization smooth adoption CD focus release engineering  clap colleague technical social challenge adopt continuous delivery CD  olsson colleague explore barrier transition agile development CD however none challenge CD development challenge article   colleague perform  literature review rapid release CD conclude evidence claimed advantage rapid release scarce article comprehensive evidence description CD benefit research literature reference clap  svensson  journey continuous deployment technical social challenge along information software technology vol olsson  bosch   multiple explore barrier transition agile development towards continuous deployment software proc euromicro conf software eng advanced application seaa  rapid release software semi systematic literature review empirical software eng oct challenge traditional hinder CD feature release normally advisory delay release feature conception release account feature cycle research identify business software development operation develop verify alternative CD technical challenge robust comprehensive highly customizable CD exist developed costly gap considerable resource building CD platform technology building avoid vendor lock challenge develop widely accepted standard define apis building active plugin ecosystem alleviate challenge application amenable CD monolithic application challenge application exist research understand characteristic identify develop strategy tackle challenge described collaboration researcher organization easily avail CD benefit brief research related CD sidebar