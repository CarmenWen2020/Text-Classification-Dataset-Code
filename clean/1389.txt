domain driven model driven methodology capture relevant domain knowledge software isolate domain concept identify concept relationship particularly appropriate microservice architecture functional microservices focus realize distinct business capability article explores challenge domain driven microservice cope model driven development article explores challenge domain driven microservice cope model driven development article overview supportive practically address challenge domain driven popular model driven methodology capture domain knowledge relevant software foster domain understand correctness emerge emphasizes agile collaborative model domain expert software engineer currently microservice architecture msa mature architectural style distribute software requirement scalability adaptability gain additional relevance decompose domain context cluster coherent domain concept context correspond functional microservices distinct business capability however apply msa challenge concern service deduction domain model model infrastructure component domain model autonomous article discus challenge model driven perspective cope model driven development mdd cargo domain model illustrate challenge domain driven microservice cargo related domain model depict uml diagram sidebar domain driven model diagram apply domain driven microservice architecture msa cargo domain model depict uml diagram specific stereotype intermediate model specification microservice interface deduce domain model model  service orient architecture model uml profile msa specific stereotype intermediate model deduce domain model specification microservice deployment uml deployment diagram msa specific stereotype apply domain driven microservice architecture msa cargo domain model depict uml diagram specific stereotype intermediate model specification microservice interface deduce domain model model  service orient architecture model uml profile msa specific stereotype intermediate model deduce domain model specification microservice deployment uml deployment diagram msa specific stereotype domain model comprises bound context uml package denote correspond microservices around cargo concept  context cargo various customer distinguish role  receiver distinction model qualify uml association role cargo delivery cargo handle possibly involve carrier movement source location target location cargo goal delivery specification destination location challenge domain driven microservice elaborates challenge domain driven microservice impact deduction microservices underspecified domain model model msa infrastructure component domain model domain model across distribute autonomous microservice deduce microservices domain model foster focus relevant concept efficient model domain model typically omit information mandatory deduce microservices microservice characteristic interface operation operation parameter return endpoint protocol message format specific information characteristic mandatory service implementation model contains customer context without service interface endpoint however characteristic implement correspond microservice domain model association concept context define exchange relationship concept instance context implement microservice relationship correspond service interaction realize instance exchange cargo associate customer customer microservice cargo microservice customer instance however model specify operation service interface contains invoked instance retrieval indeed customer repository operation expose cargo microservice neither operation specify return concrete interface operation cannot unambiguously deduce model domain driven model domain driven abstract domain concept model software domain model typically sketch uml diagram attribute domain concept association express concept relationship domain model usually underspecified attribute possibly lack return underspecification foster notation model sketch focus relevant domain information model driven perspective however challenge factor domain driven microservice introduces model informality additional occurs context association domain concept binary without explicit  specification delivery specification location without explicit  instance permit access instance uml association hence microservice responsible request concept instance establish association cargo location cannot unambiguously infrastructure component domain model domain model intentionally comprise msa infrastructure component model component infrastructure provision service discovery api gateway stable interface external request service deployment container additionally domain expert requirement affect technical aspect document separately domain model requirement customer microservice externally accessible invoice purpose requirement technically impact service externally  accessible probably api gateway deployed container external request autonomous domain model due service cohesion couple microservice ownership typically assign exactly responsible service implementation operation maintenance correspond bound context challenge arise regard domain model access management domain driven domain driven microservice uml notation domain driven domain driven microservice uml notation domain model visible approach domain model completely accessible alternatively insight bound context associate concept approach organizational effort model permit bound context account resolve merge service dependency likely model driven development cope challenge distinct mdd address challenge domain driven microservice described challenge domain driven microservice intermediate model intermediate model technical microservice characteristic relevant viewpoint domain model transfer intermediate model specify microservice interface deployment interface model cargo deduce domain model interface service orient architecture model  concisely model service interface microservice stereotype identifies microservices specializes  participant stereotype generic service component context domain model interface model contains  microservice  express service interface outgo uml  solid  exhibit service stereotype interface microservice interface underlie bound context domain concept associate navigable another context customer microservice  interface customer entity associate navigable cargo entity cargo context service interface model request request stereotype interface  microservice interface context concept reference concept context navigable cargo microservice request  consume  interface customer microservice enables cargo service associate cargo entity instance customer model intermediate uml deployment diagram deduce cargo domain model  specializes uml artifact stereotype  allows explicit model deployable microservice artifact uri attribute specifies deployed service location bound context domain model transfer  deployment model artifact deployed container identify container stereotype container execution environment specify employ container technology image docker container communication association exists concept deployed microservices bound context communication specify protocol message format container communication correspond service interaction interface model differentiates service provider requester role communication model cargo customer container cargo customer entity associate deployed microservices communicate via representational transfer json javascript notation message communication model specify protocol AMQP advanced message queue protocol communication additionally deployment model contains infrastructure component service discovery api gateway intermediate model introduce technical characteristic intentionally domain model substantiate msa implementation interface model deduce microservices interface operation service dependency deployment model comprises technical information regard service endpoint protocol message format deployment technology infrastructure component model enables deduction container configuration deployment descriptor reduce domain model informality domain model informality significantly reduce model convention convention  binary association delivery specification location convention encourages modeler clarify microservice responsible request concept instance another microservice leverage  specification deduce microservices domain model convention strict modeler label binary association model decision cargo request location microservice delivery specification location association addition modeler microservice interface advance model convention repository service interface maintain entity reference external context reference concept maintain repository service another convention establish deduce default interface operation furthermore return explicitly model cannot deduce domain model repository service return typically maintain entity unambiguous return deduction impossible additional convention domain model public uml visibility interface operation model informality additionally reduce define model convention structure model correspond directly customer location entity however situation sensible model model reduce structure network traffic transmit attribute model model reference request context dependent concept context directly interface model operation policy autonomous domain model model policy regulate domain model access permissible employ distribute autonomous service insight domain model access file physically model via storage increase domain concept affected restrictive policy coherent model accessible insight service bound context access associate concept context implement cargo microservice structure customer location entity contrast customer access bound context reference context concept navigable intermediate model partial model access foster service couple insight context minimum context external concept however additional effort split model file file relevant context concept independent apply model access approach explicit model management central instance distribute incorporate unified domain model policy regard permissible bound context domain concept employ sensible situation domain model incomplete enable collaborative completion sensible addition cargo latitude longitude location entity extend carrier movement geolocation information however context careful consideration resolve involve model responsible affected context microservice realize dependent service introduce service dependency associate concept context cargo associate customer location entity  context address information customer customer microservice newly information location microservice hence customer location affected introduce cargo practical domain driven microservice crucial practical mdd currently mdd exist domain driven microservice domain model uml profile exists comprises stereotype modeler uml diagram domain model apply stereotype exist profile constraint stereotype application semantics aid reduce domain model informality reduce domain model informality profile developed eclipse papyrus model environment apply exist papyrus uml diagram domain model file distribute across microservice described policy autonomous domain model profile concrete usage instruction github com   uml profile  eclipse graphical msa model feature diagram editor model rudimentary domain model functional infrastructure microservices interface  facilitates intermediate model service interface intermediate model  code generator microservice implementation  model generate java code boot directly runnable comprises interface implementation stub implement service business logic configuration file infrastructure component however  currently engineering available github com   profile  actively related research project development effort focus integrate aim automate deduction intermediate model domain model therefore profile domain model automatically transform  model subsequent technology related refinement code generation domain driven model software decompose domain bound context thereby context cluster coherent domain concept denotes candidate microservice however domain model typically underspecified challenge apply msa article challenge deduce microservices related infrastructure component domain model domain model microservice mdd cope challenge