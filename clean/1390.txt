software decision quality decision influence quality software article describes decision principle software designer systematic approach decision decision particularly decision complex  decision lifetime mistake suboptimal decision article propose systematic approach software decision DM DM principle taught principle address DM aspect focus specific information evaluate decision editor decision perfectly rational article advice teammate lucky hurt glance rational george  DM action judgment  intuition conscious something DM evidence technical debt failure software achieve challenge software greatly environment difference requirement organization stakeholder technology quality requirement context budget pressure plethora information unknown unknown unknown designer decision knowledge obvious DM therefore  designer decision solely intuition gut requirement developer likely identical almost certainly possibly decision developer variation important ramification quality developer likely choice champion judgment cognitive bias limitation bound rationality brain processing logical influence anchor bias attention bias sunk fallacy  confirmation bias   bias affect quality decision negative logically systematically decision counter bias software DM principle decision directly approach examine decision consideration outline DM principle designer principle reflective rqs evidence rqs designer improve dialogue evidence foundation logical decision incorrect information unknown incomplete truth invalid conclusion  requirement gathering technology business analyst instead verify user requirement designer praise technology instead colleague chose nosql database portion reservation prototyping analysis decision  gut feeling choice evidence nosql satisfy lifecycle generic rqs evidence information information source trustworthy cannot assumption assumption absence assumption instance technology perform adequately prototype software assumption judge probability precision assumption explicit assumption  explicit assumption sometimes checked validate improve certainty establish prototyping pilot sensitivity analysis implicit assumption unconsciously application microservices node exist tier client server architecture contains monolithic database tier without compatibility implicit assumption checked risk rqs assumption assumption assumption assumption explore context context influence software decision contextual factor development resource financial pressure legal obligation norm user expectation decision implement scalable highly reliable database budget limited budget requirement affect decision database license procurement context constraint context decision implicitly diverse external factor necessarily technology related explore contextual factor broaden consideration context context influence context implement anticipate risk risk possibility undesirable outcome document risk contains estimate probability loss risk designer estimate extreme spike demand security attack anticipate quantify risk explore unknown estimate possibility risk impact challenge designer technique spiral model risk driven architecture acceptable risk mitigate rqs designer identify risk potential undesirable outcome requirement developer likely identical almost certainly assign priority priority quantify relative importance choice requirement implement afford implement requirement important prioritization desire compete limited resource developer cpu memory network bandwidth contextual factor constraint sort priority requirement important without resource define horizon horizon defines relevant decision risk benefit impact anticipate evolve estimate processing load capacity define horizon allows designer explicitly evaluate pro con action  impact without explicitly horizon implication undermined ignore rqs horizon affected horizon generate multiple option designer accept without option architect experienced understood risk ideal however challenge context risky necessarily designer inexperienced unfamiliar situation behavior due anchor bias refusal generate multiple option designer broaden choice stimulate creativity rqs broaden around constraint constraint limitation boundary cannot requirement context technology exist instance cpu compute instruction per budget project concurrent user software license platform protocol developer technology forth software development constraint component component apparent designer around constraint introduce novel relax parameter manipulate context designer constraint affect constraint impede weigh pro con pro con argument choice selection weigh pro con tradeoff evaluation choice evaluation pro con quantitatively qualitatively allows designer quantitative evaluation measurable benefit priority immediacy horizon risk however pro con cannot easily quantify navigation menu mobile app quantify pro con  menu versus tab qualitative argument access effort implement marshal weigh pro con designer relative benefit drawback affect tradeoff rqs relative benefit tradeoff evaluation reasonable DM principle equipment manufacturer model sensor sensor software fully accord standard rush due competition designer choice redesign delay delivery compromise safety option DM consideration revolve around evaluation probability negative impact software fail contractual obligation delivery creates tradeoff meeting deadline hop chosen versus deadline perform thorough increase confidence quality apply equipment manufacturer aircraft safety critical coffee machine maker develop sensor coffee risk priority horizon option constraint consideration sensor software totally DM consideration responsibility software vastly outcome apply DM principle application incorporate everyday software development scrum meeting architecture evaluation instance scrum retrospective architecture evaluation designer focus relevant principle rqs assumption factual realistic context requirement constraint impose context rqs tease aspect decision designer fixate without symptom anchor bias DM principle rqs clarify rectify bias DM principle perspective logical swift code compiles iOS android portability platform swift deductive avoid bias fallacy appeal authority appeal emotional argument accident fallacy apply specific designer inductive analogy decision someone familiar apply another analogical problematic context significantly trap fallacy weak induction  generalization designer DM principle  karate  repeatedly stance mastery achieve become similarly DM principle DM technique  however confuse reality reaction response fluid designer quickly appropriate principle context dependent prescribed optimal DM principle principle software development everyday decision DM become intuitive yoda context assumption priority constraint risk tradeoff introduce designer predictable decision cognitive bias limitation overcome training developer DM principle habit DM principle panacea complement cannot replace important attribute software developer posse domain technical knowledge creativity foresight future logical openness information willingness mistake quality mindset achieve outcome