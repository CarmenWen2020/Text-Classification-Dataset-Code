code structure source code possibility refactorings consequently developer identify refactoring opportunity detect code however manual identification code challenge tedious approach propose identify code automatically semi automatically approach rely manually heuristic manually source code metric prediction however challenge manually feature manually construct optimal heuristic propose novel approach detect code insight neural network advanced technique automatically feature source code code detection automatically complex mapping feature prediction challenge detection label training data tune parameter within employ neural network whereas exist datasets code detection propose automatic approach generate label training data neural network classifier intervention initial apply propose approach code feature envy misplace evaluation source application propose approach significantly improves introduction software refactoring effective improve software quality  internal structure software application preserve external behavior software refactoring IDEs eclipse visual studio  eclipse menu specially software refactoring menu entry popular software refactorings investigate research community software refactoring identify refactorings apply facilitate identification beck fowler propose concept code structure code sometimes  possibility refactoring introduce code feature envy analyze feature impact potential refactorings developer identify refactor detect code software application notably besides code motivation software refactorings prevalent code conduct suggests software refactorings driven requirement source code however tedious consume manually identify code consequently automatic semi automatic approach propose detect code approach introduce comprehensive literature review analysis code detection  recently sharma spinellis exist code detection approach rely manually heuristic manually define code metric binary prediction smelly non smelly however challenge manually feature manually construct optimal heuristic analysis approach metric heuristic code agreement detector avoid manually heuristic statistical machine technique svm naive bayes lda employ complex mapping code metric lexical similarity prediction however empirical statistical machine detection approach critical limitation deserve research propose approach detect code insight neural network advanced technique automatically useful feature source code code detection complex mapping feature label smelly neural network advanced technique useful feature building complex mapping input output automatically significant advance technique successfully domain processing nlp video processing recognition software engineering employ technique neural network classifier classifies software entity application smelly non smelly training data challenge code detection neural network classifier label training data tune parameter neural network however exist datasets code detection label training data detection exist approach rely heavily manual initial detection detector however manual consume significantly limit label training data prevents machine technique technique maximal potential propose automatic approach generate label training data automatically without intervention generate negative sample non smelly software entity extract software entity context directly quality source application assume entity generate positive sample smelly software entity code automatically apply refactorings source code feature envy randomly refactoring movement context smelly feature envy refactorings employ code traditional introduce refactorings traditional refactorings apply smelly software entity improve software quality whereas introduce refactorings apply entity code however introduce refactorings traditional refactorings preserve external behavior software application conduct automatically IDEs propose approach generate label training data detection generation fully automatic intervention data basis detection propose approach evaluate code feature envy misplace feature envy refers interested actually refer lengthy decompose multiple shorter improve software readability reusability notably loc lengthy cohesive rarely deserve decomposition refer lengthy cohesion decompose multiple misplace improperly distribute package belongs evaluation compose evaluate propose approach source application automatically inject code evaluation propose approach significantly outperforms exist approach improves percent feature envy detection percent detection percent detection percent misplace detection evaluate propose approach source application independent developer manually validate detect instance classify false positive evaluation propose approach significantly improves expand version conference publish recently conference version expansion generalizes approach propose conference version conference version confine specific category code feature envy cannot apply directly code propose generic approach successfully apply multiple category code feature envy misplace improves neural network classification algorithm bootstrap aggregate generate bootstrap sample simultaneously training dataset multiple binary classifier classification voting evaluation algorithm improves classification performance structure introduces related research proposes generic approach code detection applies generic approach feature envy detection whereas applies detection apply propose approach detection misplace respectively evaluation propose approach discus related issue conclusion related machine detection advance machine technique machine detection approach propose  proposes decision approach identify code apply bayesian belief network detect god blob exploit vector machine svm detection blob technology employ detect blob parameter feature envy machine technique    bayes SMO libsvm predict severity code god data feature envy machine approach effective efficient although experimental evaluation reveals significant limitation propose approach differs approach aspect propose approach exploit whereas exploit traditional statistical machine technique propose approach generates training data automatically whereas training data manually detection detection feature envy beck fowler propose concept feature envy interested actually improve software quality easy software maintenance misplace refactoring really interested approach propose identify feature envy opportunity propose define distance closely entity related distance sourcewhere software entity possess directly invoked attribute directly access attribute directly access distance metric entity graph geometric distance entity correspond distance calculate formula closer entity another enclose associate feature envy propose approach identify opportunity define fitness function fitness nwi    sourcewhere application refactored vector compose metric response information couple tight cohesion information cohesion lack cohesion stability  initial metric  maximal obtain calibration optimize metric alone beforehand employ algorithm optimal structure sequence refactorings optimal approach approach identify refactoring opportunity   propose metric approach identify feature envy opportunity entity attribute entity access access attribute define distance belong distance compute distance  SC   distance compute distance   SC SourceRight click MathML additional feature distance metric   shortest distance movement satisfies precondition ensure movement external behavior involve application distance define latter distance attribute whereas former distance approach implement JDeodorant powerful source code detection JDeodorant commonly benchmark code detection research community propose dependency approach  identify feature envy define metric similarity dependency establish source dependency establish target metric similarity average similarity similarity evaluation  highly accurate outperforms JDeodorant identify feature envy exploit textual information feature envy detection recommend opportunity via relational topic model RTM statistical mode model employ compute relationship accord structural similarity textual information identifier comment extract source code knowledge identify opportunity textual information besides source code structure exploit textual information detect code feature envy lexically another enclose associate feature envy propose approach identify feature envy assume affected feature envy envy define consequently involve commits another  significantly enclose  identify feature envy mining version source code propose novel approach recommend opportunity conduct refactorings  another  approach within  suggests similarity relationship rational closely related identify opportunity refactoring notably approach JDeodorant  recommend refactorings instead detect code behavior preserve refactoring opportunity examine precondition consequently suffer feature envy report behavior preserve refactoring apply propose approach differs approach exploit technique generates training data automatically propose approach detect feature envy technique identification code metric widely employ detect code marinescu analyzes distribution complexity McCabe cyclomatic complexity report complex percent evaluation approach precision varies percent lanza marinescu detect code metric code loc McCabe cyclomatic complexity  maximal nest  access variable  metric predefined threshold formula report decompose loc alpha    SourceRight click MathML additional feature decor propose identifies loc loc source propose cohesion approach identify evaluation approach accurate empirically investigate ability cohesion metric identification evaluation metric loc cohesion metric capable detect rank empirical report confirms code metric employ identify another detect identify code fragment slice extract enclose enclose fragment slice report refactored extract refactoring typical JDeodorant widely refactoring automatically detects code program dependence graph slice technique JDeodorant identify source code slice extract code slice extractable adheres principle code slice computation variable declare behavior program preserve application extract refactoring code slice excessively duplicate whenever JDeodorant identifies extractable code slice report suggests developer extract code slice JDeodorant  propose  identifies extractable fragment generate candidate fragment  relies hierarchical model structure source code within  generates automatically fragment subsequence continuous statement within generate fragment extractable satisfy syntactical behavior preservation quality precondition  suggests restructure enclose extract extractable fragment semi propose identifies extract refactoring opportunity conformance responsibility principle SRP recognizes fragment within collaborate functionality extract fragment reduce diverse functionality enclose semi refactoring candidate semi rank candidate recommends benefit  propose recommends extract refactoring opportunity employ structural functional feature candidate refactorings recommendation probabilistic model advance knowledge approach recommend extract refactoring opportunity leverage decision gradient boost compute probability candidate refactorings training data  generates positive training data apply inline refactorings generates negative data randomly candidate code fragment extract refactorings propose approach  generate training data automatically propose approach differs  aspect propose approach identifies code whereas  identifies extract extract refactoring opportunity challenge impossible quantitatively performance propose approach employ technique whereas  leverage decision approach greatly advanced detection extract refactoring propose approach differs approach employ technique identification refer code violate responsibility principle decompose cohesive refactoring extract employ purpose identify approach propose  propose accord formula ATFD WMC TCC sourcewhere ATFD access foreign data WMC TCC tight capsule cohesion expression formula  predicts decor propose identifies metric  NAD sourcewhere  NAD attribute identification misplace package frequently employ organize closely related however developer improperly package whereas another package identify package facilitate detection misplace propose textual approach insight approach software entity highly vocabulary extract identifier comment enclose entity package consequently investigate enclose package another package approach computes similarity similarity misplace package approach propose approach identify code overview propose approach detail overview overview propose approach corpus software application generates label training sample smelly non smelly software entity training sample employ neural network classifier output indicates input entity smelly detail propose approach overview propose approach generation training data neural network generate code introduce refactoring define introduce refactoring unwanted refactoring reduces software quality apply refactoring application internal structure refactoring sub optimal code code resolve another software refactoring ideally refactoring undo introduce refactoring introduce refactoring another refactoring feature envy resolve another refactoring corpus quality source application generate positive training data smelly software entity introduce refactoring application refactoring opportunity  feature envy refactoring invocation inlined inline refactoring merge misplace refactoring refactoring opportunity  randomly  apply correspond refactoring assume application apply refactoring distorts unwanted refactoring introduce refactoring consequently likely apply introduce refactoring creates code unwanted refactoring creates associate feature envy positive training item unwanted inline merge misplace respectively undo apply refactoring remove refactoring opportunity   creation positive training data positive item positive item generate  empty corpus application negative training data application software entity lse granularity entity depends target negative feature envy negative however randomly entity lse within application consequently negative training item remove lse creation negative data negative item lse empty generation assumption application software entity involve generation however assumption involve software entity smelly training data generate entity noisy label incorrectly impact noisy data reduce quality application data generation within quality application likely involve software entity training item label correctly advanced neural network training data mislabeled item detection amount label training data complex neural network classifier identify category code however feature detect category code challenge generic classifier detect category code classifier code introduce framework classifier framework training phase whereas prediction phase positive negative training data refer generate data randomly sample subset training dataset dataset neural network classifier dataset classifier classifier sample training classifier framework detection software entity detect classifier classifier  generates binary classification smelly non smelly finally classifier decision voting multiple classifier decision voting improve stability accuracy propose detection algorithm approach training multiple classifier decision voting bootstrap aggregate machine ensemble meta algorithm helpful improve stability accuracy machine algorithm evaluation confirm improve performance propose approach  feature envy detection initial application generic approach propose apply detection feature envy feature envy refers misplace refactorings code feature selection enclose another exploit structural information code metric textual information concern structural information reuse distance metric formula propose   reuse metric effective feature envy detection source implementation JDeodorant easy extract metric besides metric exploit textual information investigate enclose potential target essence feature envy misplace ideally declare within role behavior identify declare within investigate semantical relationship identifier meaningful identifier reveal role behavior related entity conclusion input approach quintuple input dist dist sourcewhere identifier software entity investigation enclose potential target dist distance compute accord formula however challenge recover automatically semantical relationship embed lexical similarity alone insufficient semantical relationship software entity lexically dissimilar software entity   closely related semantics consequently fully exploit semantics embed employ advanced technology extract useful feature textual input besides challenge quantitatively relate textual feature numerical feature code metric handcraft heuristic propose approach handle challenge issue representation identifier identifier described neural network convert identifier fix numerical vector conversion accomplish wordvector continuous skip gram propose wordvector efficient quality distribute vector representation capture precise syntactic semantic relationship wordvector essentially neural network predicts nearby network exploit hidden layer byproduct training convert numerical vector model wordvector identifier partition sequence accord underscore convert fix numerical vector source   software entity sequence convert fix dimension numerical vector wordvector facilitate neural network limit sequence identifier analysis source application introduce involve identifier identifier contains extract contrast contains append vector compose zero sequence application training data feature envy detection apply technique code detection generate training data quality source application exclude application generate label training sample refactoring accomplish apis eclipse jdt considers parameter access potential reference target potential target   empty otherwise within  suppose  tck  empty discard otherwise generate label training item randomly fifty fifty generate positive training item feature envy negative item without feature envy generate negative item randomly potential target tci  compute distance dist dist tci enclose negative item  training data  input output source input tci dist dist tci source output source generate positive item randomly potential target tci  enclose tci eclipse apis positive item input tci dist tci dist output notably distance compute classifier feature envy detection structure neural network classifier feature envy detection source code available online input textual input numerical input textual input sequence concatenate enclose potential target fed embed layer convert text description numerical vector introduce numerical vector fed convolutional neural network cnn cnn layer filter  activation tanh exploit cnn significant advance cnn achieve recently cnn effective increase capacity flexibility machine powerful cnn layer semantical relationship identifier reveal cnn parallel computation powerful gpu significantly reduce training output cnn flatten layer input dimensional vector classifier feature envy detection numerical input dist dist fed directly another cnn output flatten layer cnn previous cnn introduce precede notably experimentally replace cnn neural network layer dense layer fail improve performance replacement textual input numerical input finally merge merge layer simply concatenates input aforementioned textual numerical input dense layer neuron output layer neuron textual input numerical input output prediction indicates target model employ binary  loss function feature envy detection binary classification investigate predict smelly non smelly potential target  tck eclipse jdt  empty smelly otherwise generate item formula potential tci  tci dist dist tci enclose item neural network item predict negative non smelly associate feature envy otherwise smelly associate feature envy recommendation refactoring predict smelly feature envy via refactorings  item generate predict positive target  associate positive item  item predict positive  output tci associate  although neural network propose binary classifier aim minimize likelihood misclassification instead error output neural network zero neural network interprets prediction positive output input input tci dist dist tci output likely target tci  detection another application generic approach propose apply detection refers complex lack cohesion maintain reuse consequently decompose cohesive metric detection associate transform metric code loc lack cohesion lcom lcom lcom cohesion coh cohesion CC evaluation metric promising detect consequently reuse metric detection besides employ access variable  McCabe cyclomatic mcn couple dispersion CD  mcn complexity whereas CD couple involves external detect generate item input neural network classifier feature loc lcom lcom lcom coh CC  CD mcn SourceRight click MathML additional feature training data detection generate training data detection quality source application application generate label training sample validate inline refactoring conduct invocation within invocation unsuitable inline various recursive override constructor inline refactoring opportunity within inline refactoring opportunity within accord implement preference implement within enclose multiple priority accord prefer multiple priority accord randomly randomly fifty fifty generate positive training item negative item generate negative item intact negative item  training data  feature flag source feature loc lcom lcom lcom coh CC  CD mcn source flag source generate positive item apply inline refactoring opportunity precede positive item refactored notably metric loc lcom lcom lcom coh CC  mcn CD compute inline refactoring classifier detection structure neural network classifier detection source code available online compose dense layer besides input layer output layer feature extract hidden layer fed output layer feature output prediction associate classifier detection notably experimentally replace dense layer neural network layer recently advanced structure cnn rnn propose proven superior dense layer task image processing processing consequently replace dense layer hidden layer advanced structure improve performance propose approach however initial fail improve performance replacement replace dense layer cnn slight reduction propose approach input classifier code metric obvious receptive concept cnn temporal relationship concept rnn another input parameter within neural network relatively employ dense layer consequently network efficiently effectively dense layer classifier promising investigate predict smelly non smelly compute metric loc lcom lcom lcom coh CC  CD mcn generate item formula loc lcom lcom lcom coh CC  CD mcn item classifier item predict negative non smelly otherwise decompose  detection application generic approach propose apply detection code consequently decompose cohesive extract refactoring feature selection detection feature compose textual information code metric textual information identifier declare within code metric code metric access foreign data ATFD couple dcc depth inheritance dit tight cohesion TCC lack cohesion lcom cohesion cam WMC code loc public attribute  accessor  attribute noa  consequently feature     source  attribute source attribute    source    source  ATFD dcc dit TCC lcom cam WMC loc  noa  sourcewhere  textual information  code metric  ith attribute define  ith define attribute numerical vector wordvector introduce training data detection generate training data detection quality source application application merge  succeed positive decompose  fails various multiple inheritance undo  notably application involve data consequently  succeed employ training data generation positive application finally generate negative randomly application assume deserve decomposition negative positive precede classifier detection classifier feature envy classifier neural network structure source code classifier available online input compose textual input numerical input code metric textual input sequence concatenate attribute declare within textual input convert numerical vector introduce embed layer vector handle memory lstm layer contrast code metric fed dense layer directly output merge output lstm fed another dense layer output dense layer indicates decompose classifier detection  detection misplace fourth application generic approach propose apply detection misplace misplace refer package package feature misplace detection enclose package another package leverage category feature code metric textual feature employ code metric couple cbo message passing couple mpc cbo package refers mpc define feature misplace detection tfs source tfs source cbo   sumMPC cbo   sumMPC source    source sumMPC  source   sourcewhere package package respectively define within package notably package numerical vector wordvector introduce training data misplace detection generate training data misplace detection quality source application github application validate generate positive negative item fifty fifty positive item randomly target package movement becomes misplace fourth negative item untouched negative item assume classifier misplace detection structure neural network classifier misplace source code available online structure classifier highly feature envy detection rationale similarity feature envy misplace misplace software entity respectively consequently identify classifier classifier misplace detection textual input sequence concatenate enclose package potential target package convert numerical vector embed layer detail conversion vector handle cnn layer flatten layer output cnn dimensional vector employ another cnn layer handle numerical input cbo   sumMPC cbo   sumMPC output flatten layer output flatten layer merge merge layer layer dense layer output layer generate output prediction misplace detection classifier identify misplace detection recommend refactoring  misplace misplace package ptp tpk ptp empty smelly enclose package detection terminates otherwise generate item  tpj define formula potential package tpj ptp enclose package item classifier misplace item predict positive although neural network binary classifier actual output zero item  tpj output network  tpj likely package tpj consequently identify misplace recommend package tpi ptp target package  tpi  ptp  tpj sourceif exist multiple target package network output randomly recommend target package evaluation evaluate propose approach source application inject code research evaluation investigates research RQ propose approach outperform approach identify feature envy RQ propose approach accurate recommend destination target associate feature envy RQ propose approach outperform approach identify RQ propose approach outperform approach identify RQ propose approach outperform approach identify misplace RQ propose approach accurate recommend target package misplace RQ efficient propose approach neural network classifier prediction RQ bootstrap aggregate influence performance propose approach research RQ investigates performance precision recall propose approach identify feature envy approach propose approach version JDeodorant notably JDeodorant refactoring recommends refactoring opportunity instead simply reporting code identify code refactoring pre fails report related code comparison evaluation disable pre JDeodorant JDeodorant comparison widely employ benchmark publicly available although related approach report recently implementation available propose approach approach research RQ concern accurate propose approach recommend feature envy ultimate goal code detection code remove software refactorings improve software quality consequently critical propose approach correctly misplace research RQ investigates performance propose approach identify approach propose approach decor propose research RQ investigates performance propose approach identify approach decor research RQ investigates accurate propose approach identify misplace neither decor JDeodorant identify misplace propose approach another code detection taco propose identification misplace release recently highly accurate research RQ investigate accurate propose approach recommend refactoring target package misplace research RQ concern complexity propose approach approach neural network however usually response instantly input neural network advance reveal quantitatively training predict propose approach research RQ concern influence bootstrap aggregate widely employ generate classifier weak reveal quantitatively improves performance propose approach application evaluate propose approach source application introduce although propose approach generic orient program prototype implementation confine java consequently java application application domain version num noc  source code loc respectively junit widely framework release version pmd extensible static code analyzer widely program flaw evolve extensively release version  source java api facilitates developer modify excel spreadsheet dynamically evolution version release  source application file backup incremental backup local ftp server evolution version release  mapping knowledge management software release version jedit text editor release version weka machine algorithm developed machine  evolution version release android backup extractor  utility extract  android backup version release illusion source 3D model render studio evolution developer release version  source java load framework  release version application source application source code publicly available source application facilitates researcher evaluation popular quality introduce generation training data assumption software entity application application involve successfully usually depends quality maintain project manually checked candidate project project quality notably straightforward ass quality project manual informal author sample file code reviewer informally ass quality project besides employ sonarqube quality gate metric ass quality application quality rating concern code application developed developer reduce bias introduce specific developer evaluation feature envy detection validation application application  others training  application employ validation propose approach advance offline data generate exist application training exploit data application otherwise model prediction prevent propose approach prediction evaluation feature envy detection generate training data   specify propose approach   identify via jdt api fourth randomly sample percent fifth randomly potential target inject  sixth movement apply propose approach JDeodorant independently predict positive positive report  overridden override syntax error another another related enclose link invocation member enclose  opportunity detection exclude static analysis simply exist jdt apis consequently evaluation generate item instead generate item movable although analysis application introduce suggests experimental conduct around percent associate feature envy resolve refactorings consequently movable randomly percent construct positive item smelly account around  consistent report evaluation detection notably evaluation propose approach feature envy detection detection conduct independently evaluation feature envy detection conduct validation application evaluate propose approach detection fold evaluation generate training data   specify propose approach  inject  although mention ratio associate feature envy explicitly mention ratio code misplace ratio project developer manually application    involve manual pilot pilot reveals around percent consequently injection guarantee smelly account around percent application finally injection apply propose approach decor independently predict positive positive report inject code inline refactoring evaluation detection evaluation detection identical detection aspect training data construct specify injection guarantee inject smelly account around percent application ratio application pilot introduce evaluation misplace detection validation misplace detection feature envy detection compose detection refactoring recommendation misplace training data construct specify notably injection guarantee inject smelly misplace account around percent application ratio application pilot introduce recommendation destination suggests misplace package injection notably misplace regardless prediction evaluate detection approach employ evaluate accuracy recommend misplace false positive precede exclude evaluation evaluation bootstrap aggregate research RQ remove bootstrap aggregate propose approach evaluation specify without bootstrap aggregate classifier category code generate data notably evaluate propose approach none baseline approach apply employ bootstrap aggregate performance metric evaluation calculate precision recall propose approach involve baseline approach identify code precision   source recall   source precision recallprecision recall source besides metric employ curve auc matthew correlation coefficient mcc performance comparison auc compute machine scikit publicly available http scikit org dev index html mcc compute mcc TP TN FP FN TP FP TP FN TN FP TN FN sourcewhere TP TN FP FN positive negative false positive false negative respectively accuracy approach recommend destination smelly compute  sourcethe recommend destination misplace suggests enclose package notably recommend destination false positive compute accuracy developer confirm detect positive destination RQ detection feature envy research RQ propose approach JDeodorant detect feature envy evaluation application precision recall mcc auc propose approach respectively performance JDeodorant average performance involve approach evaluation feature envy detection observation propose approach significantly outperforms synthetic metric mcc auc concerned average percent whereas average JDeodorant percent JDeodorant propose approach improves notably JDeodorant dose threshold tune auc fail reveal potential propose approach identify feature envy average recall percent JDeodorant improves recall dramatically JDeodorant precision percent propose approach percent significant reduction recall conclude precede propose approach outperforms approach significantly detect feature envy RQ recommendation target associate feature envy relocate however relocate target destination accuracy involve approach recommend target accuracy application average accuracy application accuracy recommend target observation propose approach accurate recommend destination smelly accuracy varies percent average accuracy percent around positive propose approach predict correctly propose approach accurate JDeodorant recommend destination smelly JDeodorant improves accuracy conclude propose approach accurate recommend destination feature envy improves significantly RQ detection research RQ propose approach decor detect evaluation observation propose approach significantly outperforms synthetic metric concerned average mcc percent respectively contrast average mcc decor percent respectively decor propose approach improves mcc respectively evaluation detection propose approach identify average recall percent decor propose approach improves recall decor improves precision percent significant reduction percent average recall conclude precede propose approach outperforms approach significantly detect RQ detection research RQ propose approach decor evaluation observation propose approach outperforms decor concern synthetic measurement mcc auc improvement respectively evaluation detection propose approach improves recall significantly reduce precision improves recall percent identify propose approach however precision percent conclude precede analysis propose approach improves detection RQ detection misplace research RQ propose approach taco identification misplace evaluation observation propose approach outperforms taco concern synthetic metric mcc auc application improvement mcc significant evaluation misplace detection propose approach improves precision recall significantly improvement precision whereas improvement recall conclude precede analysis propose approach outperforms baseline misplace detection RQ recommendation target package research RQ propose approach taco recommendation target package misplace accuracy recommendation critical misplace remain misplace evaluation application fourth accepted target package recommend propose approach taco respectively fifth accuracy propose approach taco respectively observation propose approach accepted recommendation recommendation accepted whereas reduce taco accuracy recommend target package taco accurate propose approach recommend target package improves average accuracy percent however code propose approach taco recommendation accuracy recommend target package percent taco percent propose approach precede analysis conclude propose approach outperforms baseline identify misplace comparable baseline recommend target package RQ efficiency propose approach investigate efficiency complexity neural network classifier spent training evaluation improve efficiency training conduct training workstation gpu GB ram intel xeon cpu ghz nvidia quadro contrast conduct personal computer without gpu GB ram intel core cpu ghz conduct personal computer instead powerful workstation detection feature envy conduct personal computer developer evaluation propose approach efficient average training within detection detection feature envy detection misplace detection classifier average detect application detection feature envy detection misplace classifier average application efficiency propose approach employ neural network widely employ image processing google translator network employ feature envy detection layer maximal layer contains neuron training network quickly complex neural network compose neuron another efficiency training data involve code generate item training neural network analysis suggests percent detection percent detection percent feature envy detection percent misplace detection spent information extraction extract metric textual information contrast neural network prediction instantly consumes percent RQ bootstrap aggregate investigate bootstrap aggregate influence performance propose approach evaluate propose approach without bootstrap aggregate respectively evaluation observation bootstrap aggregate improves overall performance propose approach increase percent detection percent feature envy detection percent detection percent misplace detection bootstrap aggregate detection bootstrap aggregate detection bootstrap aggregate feature envy detection bootstrap aggregate detection bootstrap aggregate misplace detection bootstrap aggregate significant positive impact precision improves precision percent detection percent feature envy detection percent detection percent misplace detection bootstrap aggregate propose approach suggests multiple classifier suggestion consequently risky suggestion improves precision bootstrap aggregate minor inconsistent impact recall slightly improves recall percent detection percent feature envy detection although improvement detection significant percent reduction recall misplace detection percent precede analysis conclude bootstrap aggregate improve performance precision propose approach threat validity threat validity code feature envy misplace involve evaluation generate automatically likely automatically generate manually introduce developer development consequently conclusion drawn generate data application reduce threat feature envy misplace randomly randomly target package rigidly ratio smelly ratio application finally automatically generate involve confirm conclusion propose approach improves threat validity evaluation assumption involve software entity application however assumption calculation performance precision recall assumption inaccurate reduce threat quality application evaluation threat validity application involve evaluation application bias conclusion conclusion application reduce threat application domain developer validation application reduce bias introduce specific application facilitate evaluation publish source code implementation evaluation data fourth threat validity evaluation implement baseline approach taco modify another baseline approach JDeodorant taco publicly available implement evaluation although JDeodorant source modify version disable pre however implementation modification incorrect significantly influence evaluation reduce threat recruit experienced code reviewer implementation modification performance implementation taco report author comparison suggests comparable finally publicly available researcher validate future finally propose approach structural technique misplace detection metric propose technique structural comparison approach insight validity learner however information textual historical analysis actually complement identification structural propose approach code detector independent variable baseline random ratio smelly software entity sample application random predict software entity project positive smelly however feature envy random extremely recall average recall evaluate propose approach application automatically inject evaluate application without injection research investigates research CS RQ propose approach outperform approach project CS RQ generate training data exclude quality data pre define quality metric exclusion influence performance propose approach research CS RQ investigates performance propose approach identify code baseline approach introduce automatically generate data employ evaluation code consequently evaluate propose approach project research CS RQ investigates quality generate training data potential preprocessing data generate feature envy access attribute target enclose exclude feature envy dose application application sourceforge java application sort application popularity ascend assume popular application code exclude application loc source code fifty application manually potential code report involve approach contrast application code reduce statistical significance evaluation consequently limit application fourth exclude application cannot compile successfully syntactical error prevent propose approach baseline approach extract information correctly finally remain application information application application application  xtreme manager manager video website resume broken downloads schedule downloads  java executable wrapper creates native launcher java application  lightweight neural network framework java neural network library gui facilitate training neural network  exchange gateway user mail calendar client exchange server allows user interact exchange server firewall  text editor modular architecture comparison exist approach application evaluation feature envy detection propose feature envy detection classifier data generate application introduce apply propose approach classifier JDeodorant application independently merge detection detection developer manual fourth manual compute performance evaluate approach manual accomplish postgraduate beijing institute technology computer java development detection independently discus remove  notably evaluation conduct anonymous manner cannot identify perform recommendation evaluation detection code misplace feature envy detection report potential code manually checked participant feature envy checked difference replace evaluate feature envy detection approach correspond detection approach quality generate data influence employ generate positive negative feature envy item specify compute attribute enclose access maximal attribute outside enclose access frequently employ identify feature envy assumption  access attribute enclose potential target consequently distribution involve reveal generate feature envy conform assumption  exclude generate data conform assumption  odd data evaluation evaluation exclusion reveal data preprocess exclude odd training data influence performance propose approach evaluate quality generate misplace positive inlining another compute coh coh coh coh cohesion inlined exclude odd positive item evaluation merge compute TCC average TCC TCC TCC tight cohesion generate employ generate positive negative misplace item compute sumMPC sumMPC sumMPC message passing couple enclose sumMPC maximal message passing couple outside package enclose package CS RQ improve feature envy detection metric precision accuracy propose approach application seventh average performance application performance JDeodorant potential feature envy report approach accepted feature envy fourth recommendation destination accepted feature envy precision detect feature envy accuracy recommend destination respectively observation propose approach identify feature envy application target smelly successfully detect feature envy application manually confirm successfully recommends destination percent confirm smelly feature envy detection propose approach significantly outperforms JDeodorant detect feature envy improves precision percent significantly percent identifies positive JDeodorant VS suggests propose approach achieves recall JDeodorant propose approach accurate JDeodorant recommend destination feature envy JDeodorant improves accuracy conduct analysis variance anova performance anova accepted feature envy involve approach significantly although propose approach identifies feature envy JDeodorant application varies dramatically project project approach propose approach cliff delta propose approach significantly improves accepted feature envy anova analysis accepted feature envy evaluation detection misplace structure highly observation propose approach successfully identifies project identifies manually confirm  whereas taco identifies misplace detection propose approach accepted target package taco propose approach precision misplace detection taco improvement finally precision taco recommend target package misplace slightly propose approach improves accuracy percent detection detection respectively observation propose approach identifies positive decor application propose approach identifies manually confirm successfully identifies contrast decor identity identification propose approach identifies manually confirm whereas decor identifies detection detection detection detection precision propose approach decor identification decor tends suggestion precision reduce recall decor propose approach achieves significant improvement recall detection detection relatively reduction precision detection detection notably positive approach recall constant independent detection approach accepted respectively suggests decor propose approach significantly improve accepted conclude precede analysis propose approach significantly outperform detect consistent evaluation CS RQ quality generate data influence filter feature envy employ positive negative feature envy item distribution observation around percent training data generate conform assumption  access attribute enclose potential target whereas feature envy access attribute enclose potential target distribution feature envy percent training data generate conform assumption  significant percent training data generate  assumption  exclude evaluation evaluation accepted feature envy decrease significantly default whereas precision decrease slightly percent reduction performance filter generate data accord predefined assumption assumption  overfitting assumption however assumption overfitting reduce generalizability classifier illustrate source project  although  access attribute  enclose  functionality building entry archive recovery beyond scope target  essentially data structure raw file contrast functionality scope enclose  file consequently although conform assumption  qualify data generation exclude training data generation odd qualify data generation probability distribution coh coh employ positive item percent become cohesive inline refactorings distribution coh coh positive item exclude become cohesive inline refactorings evaluation evaluation accepted decrease slightly default whereas precision stable percent minor reduction percent exclude misplace probability distribution sumMPC sumMPC employ positive negative misplace item percentage percent message exchange enclose package potential target package percent couple intensively target sumMPC sumMPC however sumMPC sumMPC percent equivalence message exchange related package sumMPC sumMPC distribution sumMPC sumMPC misplace exclude odd sumMPC sumMPC training data generation evaluation evaluation accepted misplace decrease slightly default whereas precision decrease slightly percent probability distribution TCC average TCC TCC generate percent merge cohesive distribution TCC average TCC TCC generate exclude generate TCC average TCC TCC evaluation evaluation accepted decrease significantly default whereas precision increase percent conclusion precede analysis conclude filter odd training data reduce successfully identify code reduce generalizability classifier performance reduction filter algorithm straightforward code metric employ deserve significant improvement advanced filter algorithm improve quality generate training data whereas generalizability classifier data significantly reduce future effective filter algorithm generate training data threat validity threat validity application involve application bias conclusion conclusion application reduce threat application domain developer although additional application significantly increase manual future evaluate approach application threat validity manual report potential code inaccurate participant developer application fully understand consequently incorrect judgement potential reduce threat participant software refactoring java development besides discus agreement finally conduct evaluation manual  evaluation developer recruit external developer manually potential code report detection external developer familiar application mistake manual developer application recruit significantly improve accuracy manual understand application however challenge recruit developer manual consume tedious another resolve code priority alternative recruit developer evaluation integrate implementation propose approach IDEs feedback report item confirm reject automatically IDEs approach propose manual feedback detection automatically feedback optimize detection feedback employ estimate performance precision detection generality generate data propose approach generates label training data automatically randomly introduce refactorings generate data basis code detection however code introduce developer classifier generate data distinguish randomly refactored entity instead associate manually introduce reduce threat evaluate propose approach detect code manually confirm evaluation propose approach identify code accurately generate data future investigate improve approach code generate training data besides multiple refactoring future data generation improve generality difference generate data data evaluation difference evaluation generate data evaluation manually validate data precision propose approach identify misplace decrease significantly percent generate data percent manually validate data baseline approach suffer precision decor identify decrease percent generate data percent manually validate data however data comparable precision propose approach feature envy detection slightly percent precision decor detection stable percent generate data validate data difference evaluation generate data significantly code generate positive feature envy instance however developer instance obviously belongs generate instance essentially challenge identify difference evaluation code detection approach rely manually validate data reliable generate data generate data valuable training data data advanced technique training data another difference performance involve approach varies significantly regardless data generate manually validate precision detection varies significantly project project although involve data generate automatically varies percent propose approach percent decor data manually validate precision detection varies significantly percent propose approach percent decor misplace narrow definition feature envy propose approach detect misplace definition however feature envy misplace narrow definition recognize exist code detection definition however extend propose approach future detect misplace misplace detection code although propose approach generic apply feature envy  rationale technique useful feature detection training data generate automatically applicable code future apply propose approach detect category code data  lazy conclusion future propose approach detect code insight approach advanced technique capable useful feature code detection mapping feature binary prediction smelly non smelly maximal potential code detection propose automatic approach generate label training data detection traditional datasets manually generate dataset practical detect code technique initial application propose approach apply category code feature envy misplace evaluation compose evaluate source application inject evaluate source code source application without revision evaluation propose approach significantly improves detection feature envy misplace future apply propose approach detect additional category code valuable future integrate implementation propose approach mainstream IDEs source integration benefit developer refactoring opportunity reveal propose approach useful