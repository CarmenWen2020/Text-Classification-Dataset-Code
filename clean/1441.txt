ability inherently uncertainty popularity incorporate machine addition alters software development perform mixture qualitative quantitative interviewee survey respondent across elicit significant difference development machine development non machine uncovers significant difference various aspect software engineering requirement characteristic variety task identity finding highlight future research direction recommendation practitioner introduction machine ML progress dramatically decade laboratory curiosity practical technology widespread commercial within artificial intelligence machine emerge choice develop useful software computer vision recognition processing robot application machine capability software ML component ML framework library ML functionality trend emerge develop deploy ML relatively cheap maintain expensive due technical debt ML non ML software plus additional ML specific issue instance probabilistic model framework machine data infer model prediction uncertainty fundamental role probabilistic model data consistent various model model appropriate data uncertain prediction future data future consequence action uncertain tackle ML specific issue recent effort building debug machine code framework environment development ML despite effort software practitioner struggle operationalize standardize software development ML operationalization standardization software development essential effective development quality reliable ML machine software development systematically explore impact perform mixture qualitative quantitative investigate difference software development arise machine interview software practitioner ML non ML average software professional interview qualitatively investigate difference perceive interviewee derive candidate statement difference improve candidate statement via focus discussion perform survey software practitioner across quantitatively validate difference uncovered interview survey respondent various role development percent percent project management percent investigate research RQ incorporation ML impact software development develop ML develop non ML develop ML indeed non ML software development software engineering research expand address unique challenge develop ML previous become inapplicable development ML software engineering educator development ML statistically significant difference software engineering ML non ML development requirement requirement development ML involves preliminary creates predictable degradation performance detailed ML consume tends conduct intensively iterative quality dataset effort ML development performance cannot guarantee performance ML production management availability data limit capability ML data processing important RQ characteristic apply psychology variety complexity incorporate ML context software development variety complexity practitioner involve ML software development identify statistically significant difference characteristic ML non ML development variety ML development intensively knowledge math information theory statistic complexity ML practitioner roadmap building task identity harder accurate task ML development interaction ML practitioner tend communicate frequently client finding identify difference interviewee uncertainty requirement algorithm vital role data practical lesson role preliminary reproducibility performance reporting highlight research avenue continuous performance measurement debug contribution perform mixture qualitative quantitative investigate difference software practitioner due impact machine practical implication researcher outline future avenue research remainder structure briefly describes concept regard ML development methodology detail discus implication threat validity finding briefly review related conclusion outline avenue future background development machine multi faceted complex task various ML development propose essential context understand data curation data model production monitoring context understand ML practitioner identify business benefit machine available data ML practitioner communicate stakeholder machine capable capable manage expectation importantly ML practitioner frame scope development task conduct preliminary application context data curation data collection source data preprocessing training validation dataset creation data source ML practitioner stitch data corrupt data data preprocessing appropriate dataset supervise technique data label assign truth label data model feature engineering model training model evaluation feature engineering refers activity transform data easy interpret feature extraction selection machine model model training ML practitioner tune machine model chosen feature model tune adjust parameter identify potential issue model previous model evaluation practitioner evaluate output model dataset pre define evaluation production monitoring ML practitioner export model pre define format usually api web application model endpoint ML practitioner retrain model update data model performance continuously monitor error unexpected consequence input data monitor identify invalidate model ML development related terminology vocabulary discussion methodology research methodology mixed qualitative quantitative approach depict data source interviewed software practitioner ML development non ML development derive candidate statement interview conduct focus discussion reduce statement survey survey respondent preserve anonymity participant anonymized item constitute personally identifiable information pii analyze data alias pii throughout refer interviewee research methodology interview protocol author conduct series interview software practitioner ML development non ML development interview accord conduct interview homogeneous adequate saturation saturation interview interview semi structure interview contains grouping topic pre specific interview comprise demographic interviewee ML development non ML development various aspect program project management difference interviewee ML development versus non ML development purpose interviewee freely difference without interviewer biasing response fourth interviewee topic discus topic explicitly mention software engineering knowledge SWEBOK consists knowledge software software characteristic apply psychology consists characteristic variety chose SWEBOK ensure software engineering topic comprehensively characteristic ensure breadth potential difference interviewee topic discus fourth interviewer topic previous interview ensure coverage topic interview thanked interviewee briefly inform interview interviewee median topic perceive difference ML development non ML software development min max topic mention interviewee SWEBOK requirement interviewee SWEBOK interviewee SWEBOK construction interviewee SWEBOK interviewee SWEBOK interviewee SWEBOK quality interviewee SWEBOK maintenance interviewee SWEBOK interviewee SWEBOK configuration management interviewee variety interviewee complexity interviewee interviewee task identify interviewee autonomy interviewee interdependence interviewee interaction outside organization interviewee participant selection recruit employee ML non ML  china namely alibaba    technology provider employee develops risk financial sector anti fraud  outsource employee focus outsource project european corporation cisco reuters interviewee recruit email contact responsible disseminate news colleague volunteer inform willing participate compensation approach volunteer contact varied remainder denote interviewee interviewee average professional min max median ML development min max median non ML software development min max median summarizes interviewee perceive extensive comparison none role interviewee extensive role data analysis conduct thematic analysis interview transcribe cod interview transcribed recording interview developed thorough understand review transcript author transcript cod interview nvivo qualitative analysis software ensure quality code author verify initial code author suggestion improvement incorporate suggestion generate code cod interview merge code meaning unique code interview code interview transcript saturation code anymore code stable sort author separately analyze code sort generate potential theme thematic similarity theme emerge sort chosen beforehand cohen kappa examine agreement labelers overall kappa labelers indicates substantial agreement labelers label labelers disagreement decision reduce bias author sort initial theme review theme finally derive candidate statement difference focus focus survey manageable hone statement likely ML incorporate software candidate statement characteristic author conduct focus session focus session involve participant participant professional ML non ML development various china baidu alibaba huawei inform purpose consent focus research purpose focus session author candidate statement statement ML development comparison non ML development feedback remove statement participant understand difference difference ML versus non ML development addition remove statement focus participant perceive obvious difference ML non ML development identify statement survey protocol survey aim quantify difference ML non ML software development express interviewee software practitioner kitchenham  guideline personal opinion survey anonymous survey increase response rate respondent option specify prefers understand description option reduce possibility respondent arbitrary recruitment respondent participant survey inform purpose consent survey research purpose recruit respondent ML non ML population survey broadly various location around sufficient respondent diverse background multi  strategy recruit respondent contact professional various disseminate survey within organization email contact amazon alibaba baidu google  ibm intel IGS kodak lenovo microsoft morgan  various location around encourage survey disseminate colleague strategy aim recruit respondent diverse organization email link survey practitioner contribute rat machine repository host github tensorflow pytorch solicit participation github contributor machine repository aim recruit respondent source practitioner addition professional chose potential respondent response ML practitioner contrast ML respondent significantly response non ML respondent quantitative evidence establish difference ML non ML development moreover rat machine repository contributor potentially practitioner ML framework library ML FTL practitioner ML application ML app unsure variance software difference overwhelm ML versus non ML difference email email automatic notify absence receiver identify information respondent survey capture information survey questionnaire available online supplemental demographic demographic information respondent filter respondent understand survey respondent relevant role breakdown developer tester ML practitioner non ML practitioner specifically describes primary currently option ML framework library ML application non ML framework library non ML application respondent item option primary selection survey respondent response exclude response respondent role neither development project management respondent role researcher network infrastructure specialist professor exclude response respondent specify ecology physic combination multiple orient production commercially relevant software valid response respondent reside across respondent reside china united professional respondent varied average survey respondent distribute across demographic role practitioner perception statement practitioner respond statement likert strongly disagree disagree neutral strongly disagree focus respondent attention survey explicitly rate statement respect specify survey respondent reside darker respondent reside legend respondent survey respondent demographic indicates demographic pilot preliminary survey practitioner interviewee focus participant survey taker obtain feedback survey appropriate clarity understandability minor modification preliminary survey feedback version response pilot survey exclude respondent china translate survey chinese publishing survey chose survey available chinese english chinese spoken english international   survey recipient fluent carefully translate survey exists ambiguity english chinese survey polished translation improve clarity understandability accord feedback pilot survey data analysis examine distribution likert response participant distribution participant wilcoxon rank sum ML versus non ML ML framework library versus ML application report along link interviewee comment survey response refer survey statement statement survey annotate statistically significant significant difference ML development non ML development confirms interviewee response significant difference development ML framework library development ML software application significant difference ML development non ML development significant difference development ML framework library development ML software application significant difference significant difference ML development non ML development interviewee response significant difference ML development non ML development interviewee response significant difference development ML framework library development ML software application significant difference ML development non ML development significant difference development ML framework library development ML software application outcome theoretically survey report grouped interview topic combine topic interviewee topic anonymized quote maintain interviewee privacy RQ difference software engineering software requirement nearly interviewee statement difference requirement ML versus requirement non ML essence requirement ML generally data driven closely couple exist data application context interviewee requirement uncertain ML non ML machine usually aim improve accelerate decision executive organization detailed functional description requirement usually conceptual description goal apply machine requirement machine data driven data requirement data understand data application context requirement nevertheless prior knowledge data application context determinism extent specific prior knowledge understand data application context exists prior knowledge scenario prior knowledge instance data imbalance occurs application fraud detection guy account amount guy online advertising conversion rate usually exists limit instead functional requirement non ML software quantitative comprise majority requirement ML distinct quantitative leveraged define requirement accuracy precision recall normalize discount cumulative gain nDCG quantitative measurement business stakeholder project manager user target quantitative application another safety critical domain accuracy ML importance consequence quantitative safety consideration echoed online shopping recommendation quantitative relatively restrict tolerable contrast non ML requirement ML usually involve preliminary business stakeholder leverage emerge machine algorithm business consequence requirement specialist technical background machine consequence requirement validation involves amount preliminary preliminary conduct software engineer intend validate machine algorithm various candidate explain algorithm suitable application context performance closely depends actual data requirement cannot validate preliminary conduct requirement predictable degradation performance ML ML performance degradation production fraud detection application adversary evade detection strategy inherent requirement ML ML degradation sensitive capable perceive performance degradation performance degradation occurs ML considerable capability adapt degradation data algorithm training brand model data discus subsequent data driven characteristic ML consequence developed non ML software interviewee repeatedly mention ML non ML software differently emphasis architectural ML relatively fix summarize architecture ML typically consists data collection data cleaning feature engineering data model execution deployment contrast architectural non ML software creative implement various structural partition software component generates behavioral description activity diagram data diagram due volume data distribute architectural style widely prefer ML distribute architectural style usually complexity architectural detailed ML emphasis couple component non ML software although component ML functionality highly couple instance performance data model dependent data processing garbage garbage percent data processing data processing fail potential effective machine model data processing multiple exist library detailed flexible ML non ML software data model candidate machine algorithm indicates ample echoed machine algorithm various application context introduce difference dimension data machine model consequence detailed ML consume conduct iterative effective model software engineer tend conduct software construction interviewee report difference ML non ML software cod cod workload ML non ML software instead cod implement functionality non ML software cod ML generally data processing transformation cleanse encode feature analysis visualization statistical data model hyperparameters selection model training availability useful framework library data processing data model framework library developer accelerate cod achieve performance developer extend framework library adapt code reuse within ML non ML software ML frequently significant emphasis performance however performance ML highly depends data data across application context project specific performance tune debug non ML software aim fix bug code unlike non ML software debug ML aim improve performance performance ML generally cannot aware evaluate data model finalize efficiently finalize data model important role construction ML however data model involves multiple iterative training volume data training data infeasible data model interviewee practical data model training datasets dataset model till achieve acceptable finally satisfactory model although improves training efficiency incomplete training data risk introduce inaccuracy intermediate bias model interviewee mention ML non ML software debug debug non ML software typically program execution breakpoints ML software debug aim straightforward translate developer code specific dynamic computational graph previously developer prefer pytorch mainly dynamic computational graph dynamic computation model execute building neural network layer layer tradeoff instance operator layer implement normalization debug dynamic computational graph cannot evaluate addition neural network compile model data dynamic computational graph allows debug sample data immediately verify quickly nevertheless debug dynamic computational graph drawback data volume extremely computation layer delay construction layer addition interviewee mention creativity important debug ML ML extensive model tune interview difference bug ML non ML software ML bug reside code non ML software instead bug sometimes hidden data recent misuse training data data intensive overlap incredibly performance bug generalization data model ML specific bug data account mismatch data dimension framework bug integrate framework contrast non ML software fail hardly diagnose bug ML explain sometimes developer ML bug code bug software quality although software quality important ML non ML significantly significant difference exists reproducibility contrast non ML software ML reproduce source randomness explain randomness ML complicates random data random observation random initialization random batch fed network random optimization version framework library initialization fix batch performance parallel batch generation framework approach freeze iteration solves initialization randomness another difference exists output ML usually involves algorithm multiple population performance measurement explain machine software mainly aim verify quantitative performance however machine algorithm stochastic usually fold validation echoed output interviewee generation ML challenge non ML automate frequently non ML dataset essential quality datasets labor intensive application user label task outsource non technical outside organization detail automate however bias introduce dataset consequently affect performance generalizability sometimes developer generate algorithm model construct  introduce bias define acceptance criterion code moreover generate reliable oracle sometimes infeasible ML specific anomaly detection application context client dataset dataset contains label anomaly however anomaly exactly dataset anomaly recognize label dataset cannot guarantee performance ML production performance production extent depends training dataset incoming data ML performance bug recent junior developer obtain percent data model carefully dataset extensive overlap discover training dataset interviewee report specific tactic ML algorithm baseline random algorithm baseline performs dataset exist bug dataset algorithm performs baseline bug code software maintenance configuration management interviewee effort maintenance ML traditional software non ML software ML predictable degradation performance constantly robust ML automatic maintenance performance degradation occurs ML perceive degradation data model online offline emerge data sometimes define health factor quantitative indicator status machine associate specific application context indicator machine perceives performance specific application context interviewee report configuration management ML involves amount content non ML software machine model code data hyperparameters parameter develop ML involves rapid experimentation iteration performance model accordingly optimal combination achieve performance configuration management model associate tradeoff algorithm choice architecture data hyperparameters explain usually currently model performs badly previous model investigate data model model degrade due evolve data data previous data degradation happens configuration management ML becomes complex non ML software besides code dependency data model file model dependency hyperparameters configuration management model checkpoint data amount machine framework numeric determinism performance dependent framework sometimes radically reproduce snapshot software engineering management ML non ML development context understand important communicate stakeholder machine capable mention stakeholder misunderstand machine capable usually overestimate machine technology machine bullet highly depends data mention data processing important garbage garbage worth spending data visualization crucial role understand feature distribution correlation identify trend data domain knowledge pivotal understand data feature however sometimes domain expert reluctant knowledge replace automate software accurate intuition hardly develop model pas aim balance trial error machine practitioner  model sometimes practitioner data analyze error mention practitioner api web application machine model endpoint production practitioner frequently model retrain update data monitoring performance model tracked data invalidates model software prepared respond mistake unexpected consequence interviewee significant difference management ML versus non ML development management ML development lack specific practical guidance contrast development non ML software development ML iterative optimization task quantitative expectation sometimes available data sufficient application context impossible achieve quantitative model explain quantitative metric achievable training model interviewee mention development ML flexible non ML software progress model training usually linear RQ difference characteristic discus difference ML non ML development characteristic theme emerge feature topic interview focus schedule autonomy task variety significance feedback information processing specialization feedback others social ergonomics experienced meaningfulness experienced responsibility knowledge discus variety interviewee identify difference ML non ML development variety interviewee develop machine framework application distinct technical challenge addition program ML development tends specialized knowledge math information theory statistic explain difference development non ML software developer code business requirement program development ML math statistic specialized knowledge crucial prerequisite effective model business requirement nevertheless proficient program important model implementation interviewee wider variety ML development ML development challenge developer lack addition program data analysis ML development summarize data analysis consists ability acquire explore model data volume data ML development brings challenge data analysis context data perform statistical data analysis developer handle data analysis volume data developer distribute program data analysis distribute compute framework complexity interview ML development non ML development complexity aspect complexity non ML development resides architecture module partition contrast complexity ML development resides data model explain architecture distinct machine application relatively fix usually consist module data collection data pre processing data model difference complexity difference interviewee mention non ML development roadmap usually exists architecture module partition developer approach implement module however ML development roadmap exists effective data model ML development uncertainty non ML development data extent data model improve whatever becomes workload explode accordingly sometimes workload performance task identity interviewee report difference task identity difference report harder accurate task ML development summarize non ML software development project distinct task accord function developer easily implementation function however machine development data model indivisible task achieve acceptable performance usually accurate task besides interviewee ML developer task progress towards target performance data model ML development consistently satisfy interaction outside organization interviewee report ML developer challenge communicate customer explain harder communicate project progress machine development due non linear data model machine development straightforward interpret explain neural network image processing survey summarize survey statement statement respondent indicates label identify statement throughout likert distribution  distribution agreement respondent ML practitioner ML non ML practitioner non ML practitioner ML framework library ML FTL practitioner ML application ML app likert distribution leftmost indicates disagreement indicates neutrality rightmost indicates agreement machine practitioner strongly survey indicates difference agreement statement statistically significant ML non ML sub ML FTL ML app subcolumn sort benjamini hochberg correction subcolumn statistically significant difference percent confidence benjamini hochberg highlight indicates difference ML non ML sub difference ML FTL ML app subcolumn cliff delta magnitude difference cliff delta report robust reliable cohen delta cliff delta overlap sample distribution extreme occurs intersection empty tend overlap cliff delta approach zero additionally gradient orange magnitude difference refer interpretation cliff delta former likely statement orange latter likely statement interpretation cliff delta overall survey confirm difference interviewee statistically significant difference ML non ML development certainty requirement requirement development ML involves preliminary creates predictable degradation performance detailed ML consume tends conduct intensively iterative quality dataset effort ML development performance cannot guarantee performance ML production management availability data usually limit capability ML data processing tends important variety ML development intensively knowledge math information theory statistic complexity ML practitioner roadmap building task identity harder accurate task ML development interaction ML practitioner tend communicate frequently client survey cannot confirm interviewee difference ML non ML requirement deterministic across ML development non ML software development explanation although uncertainty aspect model ML developer requirement deterministic 5Discussion implication embrace uncertainty mention interviewee uncertainty various aspect development ML uncertainty data requirement although development ML target attain building recognition software absolute precision bunch preliminary goal achievable available data suffice target understand application context data visualization experimental data model dataset helpful accelerate progress preliminary requirement gathering analysis phase instead  machine practitioner focus exploratory preliminary ML development scientific program benefit lesson scientific program uncertainty originates inherent randomness machine algorithm machine practitioner shift mindset embrace uncertainty instance machine algorithm initialize random random effectively optimize gradient descent stochastic gradient descent reduce uncertainty machine practitioner achieve reproducibility extent code data initial random version toolchains code data parameter essential achieve reproducibility however introduce significant overhead development effectiveness toolchains future investigation addition evaluate performance machine algorithm practitioner usually randomly split data training fold validation performance machine algorithm report distribution emphasize participant handle data interviewee data vital role development ML quantity training data tremendous impact performance ML confirm participant data collection becomes critical challenge development ML data collection literature focus research data acquisition technique discover augment generate datasets data label technique label individual data transfer technique improve exist datasets future integrate exist data collection technique ML development addition exist data collection technique tend application data specific effort generalize propose technique various application ML practitioner distribute platform quantity data parallel debug parallel computation data model consume error prone illustrate future effort facilitate interactive debug ML along data quantity quality critical powerful robust ML garbage garbage practitioner obtain machine software representation software data comprise imbalanced data outlier etc becomes imperative machine practitioner data building model future research develop data visualization overview data irregularity enable practitioner focus data actually cleanse however quality datasets development cannot ensure performance machine  within rapidly evolve environment machine degrades accuracy software production practitioner recognize version machine update improve continuously data retrain model online feedback performance measurement ML fertile future research threat validity internal validity survey respondent understand statement rating response introduce data reduce impact issue option survey ignore response marked response submit role none software development project management author translate survey chinese ensure respondent china understand survey reduce bias survey  carefully translate survey ambiguity english chinese polished translation improve clarity understandability accord feedback pilot survey statistically significant difference ML non ML development report negligible medium negligible indicates difference machine non machine development trivial statistically significant mitigate threat emphasize difference survey respondent invitation variety potential respondent involve ML ecosystem ML framework library software application ML component mixed response ML respondent difference ML non ML development difference exist perception overwhelm ML versus non ML difference prevent threat difference distribution likert response recruit respondent ML non ML population survey broadly various location around survey articulate purpose understand machine software engineering description attract attention non ML population ML ML daily addition description generate tacit presumption machine software engineering presumption mislead respondent exaggerate difference perceive external validity improve generalizability finding interviewed interviewee survey respondent across various amazon alibaba baidu google  ibm intel IGS kodak lenovo microsoft morgan  contribute source machine project host github various role highlight employee chinese interview improve response interview focus discussion involve survey population considerably improve response interview bootstrap statement rate survey survey permit respondent additional comment whenever appropriate via response statement addition report interviewee validate survey premature related prior prescriptive development machine discus realistic challenge machine model management amazon machine engineering google investigate machine related stack overflow author largely contextualize machine development software engineering contrast finding empirical observation explicitly focus difference ML non ML development researcher conduct empirical software engineering data focus data scientist inside via interview identify pain perspective explore challenge barrier adopt visual analytic focus characterize professional role regard data survey data practitioner categorize data practitioner identify interviewed sixteen data scientist microsoft identify style supplement survey usage challenge spent activity contrast prior difference ML non ML development empirical investigation integrate AI capability software service microsoft propose ML workflow identify challenge data availability collection cleaning management education training hardware resource pipeline collaboration culture specification integrate AI guidance mentor AI model evolution evaluation deployment identify challenge emerge across software development finding maintain modularization ML development summarize extensibility ML model non obvious interaction ML model contrast ML development comparable emphasis couple component non ML development rapid iteration exist detailed ML construction code reuse ML development challenge due application context input data despite challenge code reuse ML development code reuse happens ML development frequently non ML development management management ML development challenge due involvement data availability data usually limit capability ML configuration management data versioning ML development despite necessity data versioning configuration management activity ML development focus code versioning addition data versioning earlier data confirms finding report SWEBOK characteristic apply psychology domain interview recognize difference ML non ML development aspect requirement gathering complexity task identity moreover perception broader population involve source practitioner professional various software conclusion identify significant difference ML non ML development difference variety aspect software engineering exploratory requirement elicitation iterative ML development context software development complexity demand unique ML development difference originate inherent feature machine uncertainty data tackle uncertainty ML practitioner shift mindset embrace uncertainty preliminary randomness ML algorithm lesson scientific program involves exploratory development addition version toolchains code data parameter vital role ML practitioner achieve reproducibility ML practitioner devote sufficient effort handle data future effort interactive debug facilitate efficient development ML rapid evolution data online feedback performance measurement ML fertile future research towards understand software development homogeneous bulk  involve diverse background across various domain precise difference reside ML architecture future