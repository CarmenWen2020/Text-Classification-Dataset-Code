context software ups emerge supplier innovation software intensive however traditional software engineering evaluate context adopt goal challenge ups insufficient software engineering context objective aim data related engineering goal challenge ascertain trend characterize engineering ups data allows researcher understand goal challenge related understand inform future aim address goal challenge besides trend useful practitioner inform decision engineering survey depth sample software ups cod analysis identify corroborate finding statistical analysis analyze identify goal challenge engineering ups mapped goal challenge cycle stage inception stabilization growth maturity progression model software engineering effort ups conclusion conclude ups extent challenge establish however primary software engineering challenge ups evolve multiple margin serious error introduction software ups software intensive ups characterize rapid evolution uncertainty customer failure rate however leverage technology risk ups launch software aim objective challenge engineering quickly evolves engineering understand evolve context  engineering engineering contribute waste resource opportunity accord report billion EUR venture invest european billion USD ups alone building version substantial engineering challenge precedes business related difficulty shortcoming apply engineering waste investment hinder subsequent attempt sustainable business around failure attribute engineering failure opportunity specific engineering relevant research increase attempt explore engineering context requirement engineering technical debt user  attempt explore conceptual model engineering ups however none detailed engineering ups concern engineering evolution stage understand engineering ups relevant practitioner highlight aim understand ups engineering utilized evolve cycle analysis progression model engineering aspect goal challenge relevant ups evolution stage model aim practitioner decision pinpoint specific engineering challenge investigation adapt survey analyze primary data engineering geographical location development stage outcome operation factor relatively diverse sample explore goal challenge propose cycle model analyze within development stage outcome apply qualitative identify data explanatory explanatory verify complement statistical analysis firm basis conclusion novel contribution cycle model aim illustrate dynamically evolve ups cycle model goal challenge relevant ups cycle stage progression model aim practitioner illustrate relevant exploration remainder structure define software ups summarize exist research methodology report analyze interpret discus finding concludes background related software ups  report building marketing innovative software ups prioritize quality motivate engineering informal later report characterization ups failure rate percent fail achieve meaningful failure rate explain challenge issue difficulty secure funding however capability software efficiently limited understand stakeholder limited resource foremost challenge software ups precedes business related challenge software ups broader software ups software engineering perspective launch publication systematic review exist literature review publish software review author potential software ups vehicle innovation lack relevant research review contextual challenge software engineering ups establish subsequent literature review publish aim ups SWEBOK knowledge conclude gap opportunity develop specific engineering however attempt analyze ups SWEBOK specific lack relevant knowledge driven requirement engineering driven software engineering proposes greenfield model identify engineering category relationship model identifies severe lack resource teamwork rapid development focus quality evolutionary approach technical debt category relationship reveal development achieve capable focus quality assurance internal quality however approach accumulation technical debt hinder performance software engineering ups earlier ups engineering opt hoc approach engineering approach engineering partly due immaturity ups rapidly environment lack engineering expertise however limited academia pinpoint engineering context difficulty software engineering ups lack knowledge transfer ups knowledge domain individual lose reinvent research establish knowledge engineering ups attempt explore engineering ups explore requirement engineering ups requirement engineering engineering ups explore opportunity devise feasible framework user context argue successful fulfill minimal functional user requirement framework identifies prioritizes various user user focus earlier explore technical debt ups excessive technical debt opportunity contribute failure furthermore identify strategy expose unwanted technical debt earlier suggests engineering rapidly evolve accommodate engineering context individual requirement engineering user lack coherent engineering evolve understand analyze specific apply potential misalignment engineering cycle model illustrate objective attempt define cycle model blank identifies stage viable opportunity building viable business around opportunity stage consists objective outline explore validate potential customer propose validate potential finally operation model however generic guidance software engineer inspire  combine evolution stage relevant organization stage basis explain evolution define inception stage ideation release release customer primary goal stage scope minimum viable balance customer available resource cycle model  bubble desire shade bubble undesirable arrow denote transition transition however denote dash bracket stabilization stage release readiness stage aim ensure  without extra effort development easy maintain surround infrastructure operation customer growth stage focus attain desire growth rate although effort shift towards marketing sale engineering cope customer requirement variation maturity stage transition establish organization aim preserve establish optimize operation engineering install routine operating maintain stage shift objective stage focus relevant devise feasible later focus shift marketing improve efficiency operation decides radically fundamental aspect pivot likely earlier phase cycle model discard exist feature develop implies abandon marketing stabilization effort related abandon feature develop entirely feature inception stage scoping validation pilot stage strives remain active operation fail advance stage acquire another profit shareholder alternatively stage pause define organization active actively pause however intention resume future pause temporary shift founder priority temporary lack funding development marketing scenario acquire another acquires profit shareholder  merges  something combine model cycle model input capture research methodology survey analyze primary data aim balance depth traditional multi quantitatively detail internal validity closely examine multiple data source survey attempt data achieve generalizability advantage survey ability richer information conventional survey  data survey limited scope questionnaire validity threat survey description suggests cod statistical analyze data however extend theory building propose  compatible  detail induce theory data progression model mapping combine research research define research RQ RQ pertain software engineering ascertain rationale software engineering ups motivation avoid specific earlier report hoc emphasis requirement engineering however earlier report secondary data explore limited understand engineering context ups research identify commonality engineering goal challenge software engineering ups respect cycle stage understand goal challenge engineering essential judge suitability commonly devise engineering navigate specific challenge achieve goal blueprint software intensive engineering context formulate sub explore goal challenge specifically RQ goal relevant software engineering ascertain rationale aim explore goal software engineering ups concern cycle stage grain understand goal driver engineering activity understand context engineering avoid RQ challenge relevant software engineering ascertain rationale engineering challenge another context factor alongside goal engineering ups aim explore specific challenge associate cycle stage ascertain ups RQ software engineering ups rationale aim explore engineering ups apply response cycle stage specific goal challenge data collection analysis questionnaire data extraction questionnaire elicit practitioner specific scope survey inspire earlier context requirement engineering quality assurance architecture project management aspect ups questionnaire conduct multiple internal external review ensure relevant easy understand meaningful internal review conduct author scope external review invite member software research network input questionnaire engineer organize joint workshop discus participant reflection potential improvement questionnaire response remove dataset finally pilot questionnaire practitioner ups pilot respondent questionnaire potential issue author review improve formulation remove irrelevant finalize questionnaire contains sub sub text others ordinal nominal questionnaire multiple sub sub capture likert another text motivation software engineering topic analysis topic merge mapping questionnaire topic questionnaire sub focus capture respondent agreement statement address engineering engineering context capture respondent agreement statement likert somewhat agreement statement statement formulate consistently agreement however agreement specifically avoid neutral neither disagree option respondent opinion however option respondent explicitly skip option available supplemental computer society digital library http doi org ezproxy auckland tse distribution survey data collection distribute survey software research network researcher network connection author actively promote survey account personal contact author promote theme data collection december data collection description aim promotional video encourage ups questionnaire public freely available everyone screen response gauge suitability questionnaire contains multitude demographical respondent respondent relationship role contact practitioner questionnaire however response incomplete remove response percent remove duplicate response non software ups response rate questionnaire percent cod scheme analysis perform analysis qualitative quantitative response already structure multiple choice response already categorize code response gain finer understand topic implement ups establish knowledge software engineering ups vivo cod gain insight respondent perceive software engineering apply cod identify described stakeholder artifact motivation decision address topic developed individual cod scheme questionnaire formulate capture practitioner respondent reflection capture formulate along hindsight differently report apply respondent separately however progression model contains report cycle model cycle analyze ups within recur engineering challenge goal contextual factor response document finding memo memo describes basis category pertains goal context factor challenge cycle model pertains developed code memo cod memo available supplemental available online initial cod perform author memo refine author jointly memo limited data remove merge memo analysis marked additional analysis iterative formulation finding analysis descriptive statistic contingency identify confirm already identify illustrate frequency analysis histogram statistical significance finding chi statistical association association examine variable due prevent error specifically monte carlo statistical significance sample assume examine strength association cramer interpret cohen threshold weak moderate association explore specific association responsible association perform hoc adjust residual adjust residual significant absolute adj residual  adjust residual analysis relationship demographic report engineering however due exploratory hypothesis upfront analysis research document statistically significant finding memo analysis development develop revise memo previous formulate broader finding aim building evidence  apply analyze outlying extreme otherwise surprising finding finding multiple variable topic seek triangulate finding multiple variable contradictory evidence proposition proposition negative evidence finding constitute salient combination criterion multiple variable respondent reflection statistical analysis identify pertain software engineering ups memo describes specific challenge context factor goal along information basis formulate information context grouped engineering categorize illustrate goal challenge goal desirable outcome effort desirable identify explicitly formulation primary quality goal practitioner reflection occasion goal overlap usage metric gauge performance overlap indicates association attainment goal engineering activity ups advance cycle stage establish document feature knowledge quality challenge difficulty software engineering progress cycle stage identify challenge respondent reflection apply differently challenge overlap establish feedback loop customer overlap indicates association challenge ups attempt specific however challenge identify pertain software engineering ups memo describes specific challenge context factor goal along information basis formulate information context grouped engineering progression model threat validity  identifies validity concern survey research descriptive validity factual accuracy compromise response ups lack important information incorrect interpretation address threat iterate questionnaire researcher ups assure important aspect software engineering ups understandable practitioner furthermore explicit option capture differently capture practitioner reflection important lesson respondent bias stem participant inability unwillingness accurate response respondent estimate quality response greatly respondent memory ability reconstruct respondent response majority percent currently involve ups involve majority response concern relatively respondent percent specify expertise software engineering concern reliable software engineering earlier suggests closely knit member perform multiple role effort focus launch respondent primary expertise software engineering closely involve distribution respondent background prior explore potential difference due contact respondent expertise statistical analysis respondent association contact expertise amount expertise amount ups response significant analysis respective possibility respondent unwilling honest response twist response researcher startup respondent fail admit fail perceive software development participation voluntary advertised questionnaire ups ups minimize bias stem participant participate dishonest questionnaire contains multiple choice likert text multiple capture mitigate extreme response differently capture respondent lesson interpretive validity objectivity researcher concerned potential bias stem researcher misinterpret data address threat author frequently met intermediate finding analysis finding weak data identify remove generalizability diversity explore diverse geographical location domain cycle stage extent expertise outcome operational overrepresented sample bias conclusion towards active extent successful ups compensate potential bias analyze operational separately apply statistical significance conclusion gantt illustrate operation outcome respondent sample mostly contains ups europe america ups america asia underrepresented ups access broader homogeneous european counterpart adapt diversity europe difference software engineering goal challenge repeatability survey increase objectivity finding strengthen repeatability data extraction demographical information raw data supplemental available online analysis remove incomplete irrelevant response analyze response ups building software intensive questionnaire demographical information response sample consists ups establish majority percent ups actively survey pause acquire response sample contains ups cycle stage inception percent stabilization percent growth percent maturity percent however specify ups america percent europe percent asia america underrepresentation america asia explain origin author author europe america actively promote network questionnaire respondent demographical information expertise relationship recent involve response respondent percent founder others employ ups percent otherwise associate respondent evenly distribute regard expertise software engineering prior expertise however ups detail characterize sample engineering context ups along respective remainder respondent demographical information available supplemental available online structure requirement engineering quality assurance architecture project management within goal challenge engineering aspect legend progression model outline software engineering goal challenge ups analyze relation evolution stage inception stabilization growth maturity overview progression model maintain traceability description enumerate finding goal challenge denote basis formulate purpose progression model overview critical stage development concern relevant researcher model summarizes engineering concern investigation structure practitioner model identify stage objective attain engineering attain objective discus goal challenge respondent estimate likert illustrate distribution histogram extent service feature discover denote distribution respondent agreement statement likert somewhat respondent somewhat statement histogram distribution response skewed towards statement concern respect formation individual attitude capability coordination individual goal establish sufficient expertise goal earlier catalyst development ups characteristic cohesion coordination leadership recognize essential software project across sample median primarily software engineering tendency median cycle inception stage stabilization growth stage maturity stage response ups address communication issue shortage domain engineering expertise commitment issue accountability statistical analysis accountability association cramer lack accountability relevant complementary expertise efficiently overhead essential goal ups response ups cycle stage establish concern stage ups inception stabilization stage reflect issue associate however ups maturity stage reflect challenge related manage challenge respondent reflection formation majority percent report related challenge challenge concern formation management expertise leadership coordination ups cycle stage report shortage engineering domain expertise severe shortage report ups inception stage percent respondent estimate engineering percent rate domain knowledge sufficient however tendency estimate improve cycle stage potential explanation survivor bias ups manage acquire competency advance tendency skilled inception stage fail release altogether reflect lesson formation developer deliver rely corporate expert deliver anything software statistical analysis association domain knowledge engineering cramer domain knowledge lack engineering knowledge adequate domain knowledge likely sufficient engineering expertise associate cramer operational ups estimate knowledge significantly pause report factor software project business creation causal relationship outcome ups growth maturity stage percent reflect specialist challenge acquire employee domain specific engineer specific technical ups reflect beneficial acquire expert earlier however response reveal difficulty shortage expert domain specific explain expert narrow potentially explanation highlight importance education training ups however alternative explanation expert ups due uncertain future analyze response attitude towards engineering engineering skilled  towards engineering avoid code cramer thorough cramer analysis reveals attitude towards engineering associate outcome operational ups recognize benefit engineering maintain software architecture cramer avoid code cramer pause ups report benefit engineering suggests association outcome attitude towards utilize engineering interestingly respondent individual estimate attitude towards engineering quality engineering significantly experienced respondent cramer interpret inexperienced engineer overestimate quality experienced engineer underestimate   cognitive bias estimate ability finding ability engineer cannot objectively evaluate actual competence incompetence likely overestimate ability ups implement objective metric ass performance therefore implementation evaluation improvement engineering competence gut engineer individual competency teamwork capability recognize essential factor software engineering project earlier ups rely implicit knowledge organizational establish efficient essential compensate lack organization issue stall engineering collapse launch another challenge report percent engage coordinate difficulty stem member priority outside combination bloat poorly organize distribute report issue communication lack responsibility unbalanced productivity degrade motivation execution multiple parallel activity engineering marketing challenge related concern distill challenge challenge pertains building comprises lack expertise engagement coordination inception stabilization stage challenge manage potentially distribute maturity phase respondent mention difficulty coordinate maintain efficient teamwork across multiple zone finding suggests principal recognize adapt teamwork challenge challenge initiate teamwork absence leadership establish engineering engineering founder occupation professor usa business owner turkey lack communication developer hire primary occupation maybe hire manager leadership explicitly technical leadership technical leader CTO engineering engineering respondent employ CTO hire CTO technically startup prominent CTO technically otherwise motivate development potential pitfall technical leader executive professional competence competent founder refuse away CTO role employee association teamwork software project quality context establish capability regard technical domain knowledge strongly associate discover defect software maintenance moreover commitment goal internal communication mechanism essential project finding relevant context respondent relationship affect response founder ups significantly optimistic quality planning cramer quality engineering cramer hire engineer external contractor suggests potential fault founder employee perceive engineering context chow joint decision knowledge critical project efficient communication however fault splitting sub impaired communication adverse stem communication issue fault context globally distribute  earlier ups empower empowerment individual suppose reduce  improve flexibility however exists communication gap founder employee explanation principal decision founder ill communicate perceive employee  degrade motivation trust practitioner response identify formation challenge address ups recognize scenario scenario without previous joint scenario originates former organization already teamwork opportunity reuse exist strategy variation establish response newly founder additional resource organization establish teamwork acquire domain knowledge vet engineering capability prone teamwork issue shortage expertise originate earlier project slightly diverse competency concern establish role responsibility already initial formation issue relationship member respondent mention earlier project project scenario consultancy offering customize service identifies opportunity develop consultancy business endeavor eventually aim become organization exist alleviate initial formation challenge minimize risk apart moreover exist likely relevant engineering technology domain therefore advantage recently background founder earlier attitude cope uncertainty report  however expertise important role ups report tactic address lack engineering competence alternative establish engineering ups mention outsource development another motivation outsource quickly version without effort however outsource engineering challenge negotiate requirement communicate efficiently respondent development offshore external development triple productivity ups cycle stage mention external consultant specialist task addition engineering ups mention external user interface specialist mention external developer mobile application development security optimization related task lesson earlier finding catalyst engineering issue hinder potential advance cycle stage ups finding implication formation essential activity attain highly perform building program implement focus establish respect everyone organization identify communicate individual performance standard develop efficient communication identify individual goal reward teamwork building effort encourage loyalty reading critical concept influence performance building establish highly perform engineering domain expertise important efficient teamwork engineering expertise essential however domain understand identify interpret software requirement inexperienced domain knowledge mutual essential reading factor enable knowledge management   explore role individual competence agile performance requirement engineering requirement engineering concern elicitation analysis validation documentation scoping software requirement identification validation relevant requirement identification validation scoping important activity ups goal software project identify constraint software respondent ups inception stage feature extent founder understand domain extent service feature discover consequence requirement objective software requirement validate requirement optimally input target customer practitioner purpose requirement elicitation invalidate requirement quickly without unnecessary effort meta documentation implementation response launch ups emphasis customer requirement source requirement invention becomes response extent requirement shift towards disagreement ups mature extent service feature discover goal quickly invalidate relevant inception stage ups establish feedback loop customer input feature requirement validation mainly functionality quality however essential differentiate validation requirement differentiation significant poorly regard establish driven mature alike ups discover requirement indirectly analysis observation establish challenge validate requirement launch compensate internal requirement analysis frequent release achieve goal inception stage release version ups scope minimum viable MVP MVP feature quality gauge establish customer justify investment MVP scoped quality attribute majority respondent percent priority maximize customer functionality usability user engineering effort minimal scoping MVP related goal balance customer minimal development effort respondent reflect MVP scoped  requirement essential validate growth hypothesis priority anything business user user priority scoping prioritize feature MVP response release scoping goal ups stabilization growth maturity stage shift scoping goal inception stage release scoping goal inception stabilization stage maximize customer validate however later goal shift business goal monetization growth related focus quality goal challenge response active ups stabilization growth stage internal source brainstorming invention requirement popular requirement source percent active percent ups requirement source percent active percent ups trend percent active percent ups however percent ups input potential exist customer percent active ups difference statistically significant cramer text response explanation ups percent active ups difficulty establish contact potential customer involve shortcoming involve customer release sample potential customer requirement elicitation validation respondent reflect informally exist brainstorm information feature formal elicit requirement informally feature importance stakeholder involvement development factor nearly requirement engineering chow  hoyer blank however sample customer convincing invest collaboration challenge establish relationship potential customer goal sale activity recent development sale perspective highlight overlap requirement engineering sale customer essential technical commercial outcome project involve engineering sale role establish customer contact ensure continuity requirement engineering commercial relationship percent ups stabilization stage reflect feature improve constitutes feature creep stem difficulty elicit useful feedback customer generalize customer specific requirement ups report feature creep drain financial resource extra complexity reflect lesson usability customer prototype iterate faster user feedback actual usage customer feature creep report challenge develop software requirement development without appropriate analysis requirement stem external stakeholder appeal release discover approve development analyze impact assure business goal compromise response ups requirement source across internal source requirement invention brainstorming report percent ups potential exist customer percent analysis percent trend business goal utilized standard regulation ups regulate domain medicine respondent previous domain professional identify obvious requirement requirement source however customer valuable source requirement respondent important source exist potential customer continuous dialog somewhat evident understand competition business model regulation secondary elicitation validation ups report observation percent interview percent elicit requirement customer site customer survey percent respectively prototype mock ups percent respondent brainstorming elicit feedback customer interview response elicitation trigger internal elaborate iterate input customer reflect elicitation cyclical info customer analyze brainstorming prototype mock ups project later concentrate development specific feature detailed manner requirement elicitation overlap requirement validation respondent elicitation technique validate requirement feature frequently report validation technique internal review percent ups prototype demonstration customer report percent ups customer reaction feature percent ups increase cycle percent inception stage percent maturity stage potentially data driven significant customer interact available stage association difficulty requirement elicitation demographical information respondent report difficulty prioritize requirement respondent cramer explanation associate broader network personal contact extensive domain identification relevant feature report business  broader social network access financial resource founder likely succeed commercially ups cycle stage report requirement informal manage source input customer response ups aim iteration frequently prioritize backlog requirement significant adverse respondent described management requirement happily abandon obsolete requirement remove code requirement prioritize goal validate growth hypothesis sample percent ups explicitly document requirement specification format informal drawing report percent respondent others report formal technique template formal specification document requirement commonly ups document requirement feature percent function action percent requirement later elaborate respondent reflect  feature implement organize development  requirement implement document requirement per informally implement forget statistical analysis understandability requirement associate cramer significantly active report requirement understand insufficient domain knowledge likely document requirement however adequate domain knowledge likely template document requirement cramer finding rigorous requirement documentation acquire document distribute critical domain knowledge alternatively domain knowledge upside document requirement association understandability requirement improve domain knowledge progression requirement documentation enables outline feature implement develop response ups percent ups inception stabilization growth stage percent ups report however nearly percent mature ups active ups percent operational however percent ups respondent reflection planning document internally sync primary stakeholder concern future detailed however described milestone cycle model significant milestone ups release minimum viable response strategy scoping MVP domain knowledge input potential customer partner launch release customer boxing gut MVP ups aim deliver essential feature shortest practitioner described MVP scoping carefully remove feature function essential growth hypothesis hypothesis prioritize specify primary prioritization goal percent respondent implementation secondary goal report percent requirement prioritization consult customer stakeholder inception stabilization stage ups customer growth maturity stage business requirement revenue growth practitioner described prioritization prioritize customer implement feature reflection nearly respondent active ups spent customer understand analyze respondent describes lesson innovation goal customer detailed customer exactly dedicate contact customer detail setup program interaction customer transparent actionable requirement engineering ups establish driven similarity context requirement primarily informal focus around release elicit customer feedback however difference prioritization establish rely effort estimate prioritize requirement ups primary prioritization target discrepancy prioritization goal explain lack unified quantifiable establish opt scalable straightforward prioritization criterion moreover establish likely within budget schedule constraint motivate adhere effort estimate however ups customer centric flexible feature prioritization target lesson earlier finding requirement engineering engineering activity ups moreover association requirement engineering implication practitioner input potential customer identify relevant requirement involve customer engineering achieve efficiency ensure customer achieve customer engagement satisfaction moreover customer relationship basis sale activity launch reading compiles earlier marketing innovation literature practical guideline involve customer knowledge develop innovative framework creation development comprise motivator outcome potential impediment feature creep manage requirement analysis focus customer feature useful feature concern majority customer roadmap reading  proposes pareto principle feature core customer specific argues percent feature percent customer avoid scope creep pinpoint percent strategy handle feature creep requirement source rationale acquire maintain distribute domain knowledge requirement specification establish vocabulary avoid delay consume interaction confusion misunderstanding stakeholder reading explore role domain knowledge requirement elicitation analyze positive negative prior domain knowledge elicitation interview domain knowledge focus release scoping scoping minimum viable carefully optimally goal input stakeholder ups establish uncertainty likely  release reading reading analysis release  software project focus software concept characterizes broader aim aligns activity organization towards define goal respondent response mention criterion prioritize requirement scoping release however vague stakeholder explore ups interpret definition software aspect taxonomy summarize engineering goal goal across sample dominant customer perspective report percent ups respondent define customer perceive benefit regard functionality user  derive potential capitalize respondent understand benefit customer strengthens competitor increase price report interpretation stem internal business perspective estimate internal perspective percent ups respondent define perspective potential customer benefit feature differentiation feature respondent something distinguish competition financial concern revenue report interpretation percent respondent however financial define combination perspective customer internal respondent described multi faceted revenue easy user motivate purchase transaction definition ups cycle stage tendency customer pertain perceive benefit dominant perspective cycle stage report percent respondent internal capture potential ability customer efficiently access broader report percent respondent inception growth stage percent growth stage report ups maturity stage financial report inception stage however grows cycle peak maturity stage percent ups report internal differentiation report ups inception maturity stage relevant stabilization growth stage analysis conduct establish somewhat rank customer important internal financial aspect difference definition establish interpret customer delivery perceive quality however none ups sample mention quality definition internal establish understood internal quality technical debt ups focus potential differentiation difference sample explain discrepancy focus establish consistently deliver quality feature exist customer technical debt however ups aim identify unmet customer potential lesson shift definition ups cycle stage however shortage comparison deeper analysis nevertheless implication practitioner gap investigation understand focus practitioner scope align engineering business activity maximize specific alignment activity ensure technology actually specific business goal deliver intend stakeholder perspective relevant cycle stage focus shift customer internal inception stage financial differentiation maturity stage understand multi faceted facilitate communication stakeholder reading taxonomy software aspect establish vocabulary understand aspect carlson  practical identify develop understand align organizational effort building innovative quality goal concern quality goal attain goal quality functionality non functional attribute broader constraint commercial development versus return marketing aim explore aspect software quality significant practitioner attain aim goal respondent functionality quality goal across cycle stage report percent respondent objective percent ups quality goal intrinsically profound influence decision frequency quality goal varies across cycle stage maintainability frequently report quality goal stabilization growth maturity stage portability report ups maturity stage reliability mention stabilization maturity stage shift quality goal priority cycle model quality ups reflect quality goal goal related scoping MVP focus non functional feature wrongly estimate quality reception due acceptable quality waste excessive quality ups report strategy expertise user feedback iterative development quality target strategy specific quality target iteratively identify improve relevant quality aspect continuous iterative refinement approach fix goal periodically ass improvement evaluate prioritize option alternative inception stage report aim simplest improve simplest regard complexity couple user improve user quality requirement roadmapping model quality proposes identify relevant quality metric defines useless useful competitive excessive quality competition opportunity improvement model essential quality minimum quality useful opportunity differentiate align focus internal ups typically respondent informal manual acceptable quality cycle stage report percent ups however response informal gradually replace organize QA maturity stage alternative parallel exploratory scenario report percent ups respectively respondent estimate documentation varies informal systematic without tendency extent systematically document estimate coverage bias towards coverage extent fully functionality difference ups cycle stage however ups growth maturity stage reflect automation regard software systematic helpful explanation consequence informal gain user ups maturity stage reflect dedicate tester role responsible perform task respondent structure manager coordinate effort responsible none responsible automate percent ups attempt implement automate ups percent explicitly automation response regression increase concern cycle ups inception maturity stage report substantial effort manually entire extent manual entire service release defect respondent report defect report customer extent customer report defect capture earlier respondent ups maturity stage explicitly improve automate ups benefit rigorous efficient software enables faster release reduce iterate feature faster rapid release cycle contribute faster requirement validation improve customer satisfaction automate boarding developer automate safety net inexperienced developer discover code quickly automate definition documentation component therefore automation benefit beyond defect software lesson ups primarily focus deliver relevant functionality quality aspect advance cycle software defect concern however internal quality important sustainable evolution identify implication practitioner external quality concern ups potentially due relatively adopter tolerant towards defect quality becomes concern growth maturity stage commercial depends quality service maintainability increase concern cycle maintainability remain launch feature foundation enable portability reading propose lightweight quality requirement roadmapping establish frame reference assess quality opportunity improvement respondent lack automation superficial however earlier technical debt ups significant association debt quality performance issue nevertheless faster release boarding developer reading report automation agile development context lesson implement automation automation benefit architecture architecture concern internal structure selection component construction technology interface aspect construction earlier ups leverage source component service technology construct aim explore ups component architecture visual appearance graphical user interface influence usability affect stakeholder perception user interface impact project explore ups user interface goal inquire respondent technology ups aim minimize risk immature technology stable technology development however percent respondent report component reflect unstable component service without evaluate thoroughly pilot project sample choice technology platform hinder quality delayed release discontinue therefore technology stack important goal cycle earlier ups leverage technology develop innovative gain competitive advantage however dataset organization technology decision context performance regard resource efficiency maintainability reliability criterion software component selection establish report criterion opt stable component development resource furthermore ups leverage establish technology innovative challenge respondent estimate technical debt prevalent ups cycle nearly ups report technical debt shortcoming knowledge distribution code suboptimal architecture decision lack automate debt associate lack automate regression manually entire release technical debt documentation architecture debt code concern albeit lesser extent earlier dataset documentation architecture debt code associate impaired productivity quality however significant association debt productivity quality statistical significant association technical debt skilled likely suffer consequence technical debt cramer report technical debt ups cycle stage architecture debt peak growth stage respondent reflection ups growth maturity stage challenge stem earlier architecture decision respondent inexperienced developer decision incorrect fix easy however user core become increasingly architecture mistake trivial fix earlier finding technical debt ups develop inadequate however respondent external pressure competition instead development primarily internal consideration validate quickly minimal waste ups report leverage establish framework software architecture avoid effort complex nearly ups report source component report commercial shelf component strategy reduces effort software engineering potential lock specific vendor reinvent already exist functionality respondent standard MVC architecture web standard architecture IOS android web implement ruby architecture convention ups maturity stage percent report developed innovative technology highly customize deployment configuration audio video processing custom graph database development innovation technology cycle evolution already establish graphical user interface interrelate user user interface primary user largely contribute user perception explore user interface without infer connection broader user respondent response user interface UI ups mock ups utilize framework borrow develop UI ups report outsource UI reflect user interface ongoing continuous improvement user interface significant concern stage inception stabilization stage UI internal review user interact UI later stage cycle customer interact ups analytical monitor customer interact UI identify opportunity improvement report goal UI usability percent usefulness percent reflect user interface development respondent invest customer instead UI internally user interface guideline helpful user interface align investigate user context ups iterate prototype feedback continuously improve user interface quality criterion user interface user message visual attractiveness intuitiveness credibility lesson analysis contradicts earlier ups extensively technology ups opt stable technology platform standard architecture alleviate technology risk formulate implication practitioner ups mitigate technology risk stable technology associate technology stable technology improve performance rigid platform innovative feature reading explore decision source COTS component although perform establish strategy factor influence decision overview explore reactive engineering argue software engineering ups mainly focus integration interoperability component developed elsewhere finding user interface significant activity however continuously monitoring tweak reading  framework minimum viable user pinpoint essential quality develop user interface project management project management concern planning engineering activity planning important optimize resource usage attainment specific goal aim explore ups activity goal cycle model outline milestone release minimum viable stabilize growth attain transition establish organization inquire ups progress towards response ups primarily external metric revenue customer customer satisfaction however ups growth maturity stage internal metric performance adherence deadline budget performance difference ups cycle stage ups inception stage launch report metric progress however aim external metric user launch stabilization stage launch primary metric external aim monitor adoption rate ups progress cycle metric become specific attach business milestone internal external aspect jointly internal performance metric monitor gauge performance addition external adoption metric challenge ups aim internal external metric gauge progression however external metric available inception stage launch ups inception stage report specific metric progress potentially due unclear immature project management ups inception stage lack benchmark gauge progression practitioner towards goal improve platform priority schedule sometimes task longer reflection practitioner mention tighter engineering deadline budget practitioner reflect lesson foremost define goal align resource activity statistical analysis advantage hindsight practitioner estimate performance critically significant margin finding challenge ass performance within objectively objective performance indicator useful objective performance indicator helpful establish perform goal metric progress towards goal project management however practitioner response ups inception stage progression lack measurement pitfall realization resource overrun scope creep literature model aim ups model propose define validate customer validate validate feasibility prototype somewhat approach focus continuous experimentation propose  however extent ups remains explore respondent estimate goal rarely null extent goal unclear source uncertainty respondent report specific requirement customer demand partner commercial factor ups uncertainty adjustment inquire extent respondent financial resource shortage response somewhat availability financial resource concern however extreme extent null extent constant pressure null extent constant resource pressure statistical analysis linear correlation resource shortage struggle finance struggle however text mention specific difficulty stem financial resource shortage response consistent across sample identify cohort resource shortage thereof challenge contradict earlier extreme lack resource characteristic ups project scope budget project management report concern nearly explore software project factor junk   budget constraint associate offs specific ups exclusively moreover majority software project resource estimate therefore resource shortage alone differentiate factor ups establish ups establish organization thinner margin resource overrun rigorous resource utilization difficulty access additional resource finnish ups reveals external funding association outcome ups resource survival ups limited resource moreover ups without external funding likely generate revenue finding highlight importance scoping planning optimize utilization amount resource lack goal response ups inception stage elementary schedule budget ups constrain fix budget deadline however utilization budget gut respondent inception stage reflect planning something budget informal solely project revenue user retention acquisition hindsight schedule scoping earlier discussion resource utilization lack financial resource potential pitfall ups ups stabilization stage report improve project management boundary expense assign budget specific goal attempt estimate cash ups maturity stage report resource planning resource utilization respondent reflect planning mature budget understand business viable apply loan nowadays budget estimate planning lesson analysis goal resource schedule essential progress cycle however challenge objectively ass performance launch lack planning contribute budget schedule overrun waste opportunity lack resource substantial engineering ups prospect advance cycle however lack planning resource utilization stage pitfall ups goal metric ass performance objectively reading  overview agile project management practical tip organize project management uncertain environment 5Discussion reflection research primary research explores engineering goal challenge contextual factor ascertain identify cycle model model cluster cycle stage outcome engineering focus cycle enable discussion contribute desirable transition furthermore model aim blueprint ups dynamic multi faceted entity blueprint enable compatibility contribute towards coherent software engineering ups evolve rudimentary stage mature latter stage evolution regard maturity earlier however empirical specific goal challenge cycle stage discus context related context actionable software engineering ups domain knowledge technical expertise teamwork component stage shortage component compensate specific scarcity domain knowledge compensate rigorous requirement engineering identify acquire distribute information organization similarly lack technical expertise core compensate outsource engineering another later stage technical debt lack quality assurance project management manage distribute hinder engineering however challenge anticipate address appropriate evolution software engineering ups identify concern cycle stage inception stage important concern assemble individual sufficient domain knowledge technical expertise adequate financial resource release compensate shortcoming domain knowledge actively involve stakeholder rigorously document requirement lack technical expertise external engineering limited budget adjust scope release release version depends efficiently understand domain engineering expertise software excessively communication drain resource motivation closure launch stabilization stage concern related building establish efficient define responsibility trust coordination release version customer balance develop feature quality service exist customer aforementioned diverse handle broader responsibility stringent internal structure concern related establish feedback loop customer association customer feedback technical commercial identify customer involve engineering essential task growth stage concern related business monetization marketing become relevant influence engineering goal monetization expansion account addition customer potentially diverse customer flexible scalable reliable quality expert engineer complexity creates robust deployment alleviate manual release furthermore increase complexity organization expose technical debt address growth maturity stage ups concerned manage potentially distribute rigorous project management organize engineering thorough engineering introduce transition establish organization conclusion investigate software ups utilize software engineering innovative software intensive frame propose cycle model requirement engineering focus quality architecture software project management frame highlight stage specific goal challenge finding context related formulate practical lesson aim practitioner conclude explore relevant ups essence establish potentially difference difficulty software engineering ups manage evolution error ups experimental error inevitable distinction calculate risk neglect engineering understand software engineering ups aim conduct series structure workshop conduct assessment software engineering ups obtain workshop aim refine methodology improve engineering ups