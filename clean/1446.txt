mutation fault software technique widely decade literature mutation contribute approach development empirical comprehensive analysis survey mutation development trend analysis analysis evidence mutation technique maturity applicability topic mutation increase introduction mutation fault technique criterion mutation adequacy mutation adequacy effectiveness ability detect fault principle underlie mutation fault mutation mistake programmer carefully location mutant simulate adequacy criterion fault deliberately program syntactic faulty program mutant syntactic ass quality mutant execute input mutant program input fault denote mutant detect outcome mutation mutation indicates quality input mutation ratio detect fault fault mutation trace lipton birth identify publish  mutation software integration specification apply program technique fortran program ada program program java program program sql code aspectj program mutation integration besides mutation software implementation apply specification model program mutation apply finite machine statecharts  specification petri net network protocol security policy web service mutation increasingly widely propose research various technique seek mutation practical approach however survey literature mutation survey conduct demillo summarize background research achievement mutation stage development survey review specific subarea weak firm mutation technique  introductory chapter mutation mathur  offutt recent survey conduct offutt  summarize mutation overview exist optimization technique mutation however publication mutation survey publication related mutation construct mutation publication repository PhD thesis significant contribution development mutation repository online repository technical publisher xplore acm portal springer online library wiley interscience elsevier online library mutation mutation analysis mutant mutation operator fault injection fault keywords title abstract reference repository keyword perform transitive closure literature mutation concerned software hardware remove filter english finally draft cite author citation repository publicly available http   repository overall growth trend mutation PhD mutation mutation publication indicates mutation workshop organize introduces fundamental theory mutation hypothesis mutation explains technique reduction computational introduces technique detect equivalent mutant application mutation introduce summarizes empirical research mutation describes development mutation discus evidence increase importance mutation discus unresolved barrier mutation concludes theory mutation introduce fundamental hypothesis mutation discus mutation suffers fundamental hypothesis mutation promise effective identify adequate data fault however potential fault program enormous impossible generate mutant therefore traditional mutation target subset fault version program sufficient simulate fault theory hypothesis competent programmer hypothesis cph couple cph introduce programmer competent implies tend develop program version although fault program deliver competent programmer assume fault merely fault syntactical therefore mutation fault construct syntactical apply fault competent programmer cph theoretical discussion concept program neighborhood couple propose unlike cph concern programmer behavior couple concern fault mutation analysis data distinguishes program error sensitive implicitly distinguishes complex error offutt extend couple hypothesis mutation couple hypothesis precise definition complex fault error definition fault mutant syntactical complex fault complex mutant accord offutt couple hypothesis complex fault couple fault data detects fault program detect percentage complex fault mutation couple hypothesis becomes complex mutant couple mutant data detects mutant program detect percentage complex mutant mutant traditional mutation limited mutant research validation couple hypothesis lipton  conduct empirical program sample fourth mutant investigate adequate generate mutant adequate sample kth mutant offutt extend mutant program mid  data developed mutant percent mutant imply mutation couple hypothesis indeed manifest empirical  validity mutation couple theoretical    theoretical model function model propose considers program finite function  apply model empirical average survival ratio mutant mutant respectively domain estimate empirical mention formal proof couple boolean logic fault  mutation analysis traditional mutation analysis illustrate mutation analysis program faulty program mutant generate syntactic program illustration mutant generate operator program operator thereby mutant generic mutation analysis mutation operation transformation generates mutant program mutation operator contains mutation operator others typical mutation operator modify variable expression replacement insertion deletion operator formalize mutation operator fortran program typical mutation operator implement mothra mutation mutation operator mothra fortran mutation operator adapt increase flexibility mutation practical application jia harman introduce script mutation operator constraint script   constraint substitution constraint environmental constraint substitution constraint allows user specific transformation performs environmental constraint specify domain apply mutation operator propose transformation  specify description mutation operator besides modify program source mutation operator define modify grammar capture syntax software artifact detailed account grammar mutation operator mutation analysis successfully execute program correctness incorrect fix mutant otherwise mutant mutant otherwise survive execute survive mutant improve program tester additional input survive mutant however mutant output program mutant equivalent mutant syntactically functionally equivalent program automatically detect equivalent mutant impossible program equivalence undecidable equivalent mutant barrier prevents mutation widely propose equivalent mutant mutation concludes adequacy mutation indicates quality input mutation MS ratio mutant  mutant goal mutation analysis mutation sufficient detect fault denote mutant mutation analysis although mutation effectively ass quality suffers prevents mutation become practical technique computational execute enormous mutant related amount effort involve mutation oracle equivalent mutant oracle refers program output strictly unique mutation input remains output however mutate effective precisely demand increase thereby increase oracle oracle expensive overall activity undecidability mutant equivalence detection equivalent mutant typically involves additional effort although impossible completely exist advance mutation mutation automate runtime reasonable scalability survey previous focus technique reduce computational topic reduction technique mutation widely computationally expensive technique however belief partly outdated assumption mutant traditional mothra mutation practical technique reduction technique propose survey offutt  reduction technique faster smarter technique classify reduction generate mutant corresponds reduction execution combine faster smarter overview chronological development publish reduction overview chronological development mutant reduction technique closer reduction research publication technique selective mutation weak mutation widely reduction technique technique date introduce reduction technique detail mutant reduction technique execution reduction technique percentage publication mutant reduction technique mutant reduction technique source computational mutation inherent execute mutant reduce generate mutant without significant loss effectiveness become popular research mutant data mst denotes mutation apply mutant mutant reduction define subset mutant mst mst introduce technique reduce mutant mutant sample mutant cluster selective mutation mutation mutant sample mutant sample approach randomly chooses subset mutant entire propose   approach mutant generate traditional mutation percent mutant randomly mutation analysis remain mutant discard empirical approach primary focus choice random selection rate wong mathur author conduct random selection rate percent percent percent random selection percent mutant percent effective mutant mutation imply mutant sample valid percent percent empirical offutt instead fix sample rate   propose alternative sample approach bayesian sequential probability ratio  approach mutant randomly statistically appropriate sample model sensitive random selection adjust available mutant cluster mutant cluster propose hussain thesis instead mutant randomly mutant cluster chooses subset mutant cluster algorithm mutation cluster generate mutant cluster algorithm apply classify mutant cluster  mutant cluster guaranteed mutant cluster mutation remain mutant discard hussain cluster algorithm agglomerative cluster apply random greedy selection strategy empirical mutant cluster mutant maintain mutation development mutant cluster approach domain reduction technique avoid execute mutant selective mutation reduction mutant achieve reduce mutation operator apply underpin selective mutation seek mutation operator generate subset mutant without significant loss effectiveness constrain mutation mathur subsequently extend selective mutation mutation operator generate mutant mutation operator generate mutant others redundant mutation operator mothra operator asr SVR report generate approximately percent mutant effectively reduce generate mutant mathur omit mutation operator asr SVR generate mutant implement selective mutation extend mathur wong omit mutation operator selective mutation omit mutation operator selective mutation report selective mutation achieve mutation percent percent reduction mutant reduce selective mutation achieve mutation percent percent reduction mutant selective mutation achieve mutation percent percent reduction mutant wong mathur adopt another selection strategy selection effectiveness constraint mutation wong mathur mutation operator ABS  motivation ABS operator mutant generate ABS input domain motivation ror operator mutant generate ror examine mutate predicate empirical mutation operator achieve percent reduction mutant percent reduction mutation extend selective mutation selection strategy mothra mutation operator category statement operand expression omit operator discover operator operand expression become operator operator ABS   aor ror operator achieve percent mutation   propose selective mutation instead achieve loss effectiveness detect equivalent mutant consideration mutation operator assign compute reduce equivalent mutant maintain effectiveness previous define guideline sufficient mutation operator mutation operator apply guideline  mutation operator obtain mutation operator achieve mutation percent percent reduction mutant operator wong operator achieve mutation recent research selective mutation conduct  andrew formulate selective mutation statistical variable selection reduction apply linear statistical approach identify subset mutation operator mutation operator operator sufficient predict effectiveness suite reduce percent generate mutant accord approach achieve rate reduction approach mutation mutation comparatively mutation introduce jia harman underlie motivation rare valuable mutant denote subtle fault traditional mutation mutant classify mutant  mutant   apply mutation operator  generate apply mutation operator jia harman introduce concept subsume  subsume hom harder  construct preferable replace  hom reduce mutant introduce concept strongly subsume hom  subset intersection  construct partly focus specific  mutant propose algorithm combine mutant generate empirical apply mutant reduce effort approximately percent without loss effectiveness recently apply multi genetic program generation mutant realistic mutant harder mutant execution reduction technique addition reduce generate mutant computational reduce optimize mutant execution introduce technique optimize execution literature weak firm mutation analyze mutant execution mutation technique classify mutation weak mutation firm mutation mutation refer traditional mutation formulation originally propose mutation program mutant program mutant output program optimize execution mutation  propose weak mutation weak mutation program assume construct component suppose mutant component mutant execution component mutant weak mutation instead mutant execution entire program mutant checked immediately execution mutant mutate component  component refer variable reference variable assignment arithmetic expression relational expression boolean expression definition component later refine offutt lee offutt lee define execution evaluation execution expression weak execution statement weak execution BB weak iteration loop BB weak advantage weak mutation mutant execution mutate component execute survival moreover generate mutant constraint data sometimes advance however component program output execution weak mutation effective mutation weak mutation sacrifice effectiveness improvement effort achieve empirical weak mutation   implement weak mutation fortran program analytical weak mutation mutant examine program internal  program component weak mutation computationally expensive mutation  drew conclusion theoretical proof weak mutation  mathur generate weak mutation effective mutation offutt lee comprehensive empirical weak mutation  mothra mutation operator fault model instead  component weak mutation alternative mutation probabilistic  mathur experimental    firm mutation propose   firm mutation overcome disadvantage weak mutation continuum intermediate possibility firm mutation intermediate execution weak mutation output mutation jackson  propose parallel firm mutation approach java program unfortunately date publicly available firm mutation runtime optimization technique interpreter technique optimization technique generation mutation traditional interpreter technique mutant interpret source code directly technique interpretation optimize traditional interpreter approach offutt translate program intermediate mutation interpretation perform intermediate code interpreter additional flexibility sufficiently efficient mutate program however due interpretation becomes program increase compiler technique approach achieve program mutation compiler technique mutant compile executable program compile mutant execute source code interpretation technique approach faster execution compile binary code interpretation however limitation compilation bottleneck due compilation program runtime longer compilation link propose compiler integrate technique optimize performance traditional compiler technique minor syntactic difference mutant program compile mutant separately compiler technique redundant compilation compiler integrate technique compiler generate compile mutant compiler generates output program executable code program patch mutant patch contains instruction apply convert executable code image directly executable code mutant technique effectively reduce redundant individual compilation detailed account  PhD thesis mutant schema generation approach reduce overhead traditional interpreter technique instead compile mutant separately mutant schema technique generates    mutant therefore mutant  compile technique compose compilation overall runtime  compile program faster interpreter technique mutant schema prototype  significantly faster mothra interpreter technique extensive report detail  PhD dissertation mutant schema technique mutant container propose mathur independently detail software engineering handout mathur recent reduction compilation bytecode translation technique technique propose bytecode translation mutant generate compile code program instead source code generate bytecode mutant execute directly without compilation compilation bytecode translation handle shelf program available source code technique adopt java program however program easy manipulate intermediate code limitation application bytecode translation java mutation operator bytecode   introduce alternative approach reduce compilation aspect orient mutation approach aspect patch generate capture output aspect patch program twice execution obtains context program mutant generate execute execution compile mutant empirical evaluation prototype jester   advanced platform mutation mutation apply advanced computer architecture distribute overall computational processor mathur  perform mutation vector processor propose approach concurrent execution mutant simd machine  wei propose algorithm significantly improve technique parallel mutation choi mathur distribute execution mutation  machine  extend network environment mutant execute independently equivalent mutant detection technique detect program mutant program equivalent undecidable   detection equivalent mutant alternatively source theoretical program denotes mutant program recall equivalent mutant syntactically behavior equivalent mutant generate operator program operator statement within loop program mutant identical output equivalent mutation equivalent mutant mutation observable behavior mutant syntactically semantically identical program  manually investigate equivalent mutant generate  xpath query program equivalent mutant situation mutant generate code mutant improves mutant alters internal mutant cannot trigger input data program behavior mutation worth situation equivalent mutant none applies mutation  mutant without detection equivalent mutant mutant percent programmer confidence adequacy potentially perfectly adequate empirical percent mutant equivalent fortunately research detection equivalent mutant   propose approach compiler optimization technique detect equivalent mutant approach optimization procedure source code equivalent program mutant detect equivalent mutant optimization    propose compiler optimization detection equivalent mutant implement empirically offutt craft empirical generally percent mutant equivalent mutant program constraint data generation offutt pan introduce equivalent mutant detection approach constraint approach equivalent mutant formulate constraint satisfaction analyze mutant mutant equivalent input constraint unsatisfiable empirical evaluation prototype technique detect significant percentage equivalent mutant percent program program constraint satisfaction formulation powerful compiler optimization technique program slice technique propose assist detection equivalent mutant   application program slice mutation demonstrate approach slice assist analysis equivalent mutant achieve generation slice program denotes equivalent mutant later extend dependence analysis propose evolutionary approach detect equivalent mutant fitness function fitness equivalent mutant fitness function equivalent mutant wipe  mutant detect mutant report mutant syntactic difference output semantically profile mutant output program execution memory usage resource aware potential mutant recent equivalent mutant conduct  investigate impact mutant impact mutant define program behavior program mutant code coverage empirical correlation mutant  impact execution indicates mutant impact likely equivalent application mutation mutation propose apply program source code program mutation program specification specification mutation program mutation belongs category fault source code specification mutation belongs fault program specification source code unavailable chronological development research program mutation specification mutation percentage publication address mutation apply program mutation specification mutation notably percent apply java fortran fortran feature highly earlier mutation fortran program application program mutation specification mutation summarize program target publication application mutation percentage publication address mutation apply program mutation program mutation apply integration program mutation mutant generate fault programmer within software integration program mutation mutant integration fault connection interaction software apply program mutation integration interface mutation introduce interface mutation apply program  maldonado  program   mathur empirical evaluation interface mutation mutation fortran mutation mutation target fortran mutation operator fortran IV mutation  developed fortran IV program however formal definition mutation operator fortran offutt summarize previous propose mutation operator fortran mutation operator become formalize mutation operator consequently influence later definition mutation operator apply mutation program mutation operator statement analysis predicate analysis coincidental correctness mutation ada ada mutation operator propose  previous  ada mutation operator mutation operator fortran mutation operator mothra redesign mutation operator ada program propose ada mutation operator accord semantics ada ada mutation operator operand replacement operator statement operator expression operator coverage operator task operator mutation propose comprehensive mutation operator ANSI program mutation operator define specification operator classify variable mutation operator mutation constant mutation statement mutation  maldonado investigate application mutation integration mutation operator mutation operator interface program mutation operator focus inject fault signature public function recently mutation apply program jia harman mutation operator target specific program defect vulnerability   propose mutation operator generate mutant format bug  propose mutation operator fault associate static dynamic memory allocation detect buffer overflow  subsequently extend   propose comprehensive mutation operator bof vulnerability target vulnerable library function program statement buffer apply mutation adaptive vulnerability analysis ava detect  mutation java traditional mutation operator sufficient orient OO program java mainly fault traditional mutation operator OO environment due OO program structure moreover fault introduce OO specific feature inheritance polymorphism java mutation operator strongly influence previous mutation operator java program propose mutation operator java hazard operability HAZOP HAZOP safety technique investigates deviation HAZOP apply java syntax definition identify plausible fault java program plausible fault java mutation operator variable interface declaration expression others previous java mutation operator introduce mutation applies mutation OO java program target fault related OO specific feature mutation mutation operator java OO feature java mutation operator another mutation operator mutation finally mutation operator extend mutation operator classify polymorphic overload information hiding exception handle approach adopt    mutation operator approach mutation operator obtain empirical effectiveness mutation operator therefore instead propose comprehensive java mutation operator previous OO fault model classify information hiding inheritance polymorphism overload java specific feature program mistake conduct evaluate usefulness propose mutation operator mutation model fault detect traditional mutation however mutant generate EOA mutation reference assignment content assignment replacement  mutation reference comparison content comparison replacement cannot traditional mutation adequate alternative approach definition mutation operator java instead apply mutation operator program source mutation operator inject fault java utility library java container library iterator library traditional mutation operator introduce extension concurrent java environment mutation previous propose java mutation operator  introduce extension specialized mutation operator implement mutation cream empirical mutation operator cream report  mutation sql mutation apply sql code detect fault database application attempt mutation operator sql propose sql mutation operator enhance entity relationship model propose another mutant operator sql query statement mutation operator organize category mutation sql clause mutation operator expression mutation handle null mutation identifier developed  implement sql mutation operator empirical evaluation concern  development target java database application zhou    propose mutation operator handle sql statement connection manipulation database introduce mutation operator implement sql mutation mutation aspect orient program aspect orient program AOP program paradigm aid programmer separation crosscut concern propose mutation operator generalization fault aspect orient program mutation operator  expression aspect declaration advice definition implementation empirical evaluation application recent introduce approach detect equivalent mutant AOP program static analysis aspect code aspectj widely aspect orient extension java construct aspect advice   alexander summarize previous research fault model associate aspectj  propose aspectj fault model incorrect  mutation operator aspectj program  xie propose framework generate mutant  detect equivalent mutant reduce mutant classification rank approach strength  introduce framework program mutation application besides program mutation apply lustre program php program  program matlab simulink spreadsheet research investigate mutation operator concurrent program specification mutation although mutation originally propose technique implementation apply software mutation refer specification mutation introduce   specification mutation fault typically machine logic expression generate specification mutant specification mutant output falsify specification mutation fault related function implementation specification misinterpretation mutation formal specification formal specification calculus expression finite machine FSMs petri net statecharts earlier research specification mutation specification logical expression   specification predicate calculus target predicate structure program apply refinement calculus specification   investigate mutation operator algebraic specification apply optimization approach compile specification mutant executable code evaluate approach empirical recently formal technique propose specify dynamic aspect software FSMs petri net statecharts apply specification mutation validate specification FSMs propose mutation operator fault related output FSM mutation operator later implement extension mutation  empirical evaluation mutation operator report   investigate application mutation probabilistic finite machine  define mutation operator approach avoid equivalent mutant  mutation statecharts widely formal specification complex reactive statecharts extension FSMs mutation operator statecharts propose previous FSM mutation operator statecharts mutation operator introduce criterion mutation criterion   author propose mutation ass quality statecharts implementation model statechart mutation fraser  besides FSMs statecharts specification mutation apply variety specification investigate application mutation  specification propose mutation operator petri net perform empirical specification mutation csp specification olsson runeson propose mutation operator SDL definition mutation operator formal specification  mutation environment implement specification bug introduce programmer due insufficient knowledge target environment bug environment bug detect bug memory limitation numeric limitation initialization constant interpretation exception handle error mutation apply detection bug  environment mutant generate detect integer arithmetic environmental bug environment bug extend mathur empirical environment significant role trigger security flaw security violation mutation apply validation security vulnerability mathur define eai fault mode software vulnerability model apply generate environmental mutant empirical evaluation report mutation web service lee offutt apply mutation web service introduce interaction specification model formalize interaction web component specification model generic mutation operator propose mutate xml data model later extend offutt target mutation xml data rename xml perturbation instead mutate xml data directly perturbed xml schema invalid xml data xml schema mutation operator constraint generation approach propose empirical report another xml schema mutation operator propose miller web service mutation target specific xml feature owl specification WS  specification unlike traditional xml specification owl introduces semantics workflow specification ontology specification author propose mutation operator detection semantic error misuse ontology mutation network protocol robustness important aspect network  leung investigate fault coverage network protocol probert guo propose mutation operator network protocol apply mutation network intrusion detection signature identify malicious traffic built  model protocol message apply mutation model  specification application mutation protocol mutation security policy mutation apply security policy research sought mutation operator inject flaw security policy martin xie apply mutation analysis  oasis standard xml syntax define security policy approach apply introduce mutation operator organization access  policy propose generic metamodel security policy formalism formalism mutation operator introduce apply formalism propose approach applies mutation firewall policy application addition assess quality mutation activity data generation regression data prioritization data minimization summarize mutation activity data generation mutation data generation generate data effectively mutant constraint data generation cbt automatic data generation technique mutation propose offutt PhD offutt mutant reachability necessity sufficiency cbt mutant constraint data guarantee mutant generate input satisfy constraint  data generator cbt technique implement demillo offutt mothra  apply analysis symbolic evaluation constraint satisfaction technique generate constraint mutant empirical percent mutant cbt technique program however cbt technique suffers drawback associate symbolic evaluation address propose dynamic domain reduction technique propose approach automatically generate data component implement contract research trust methodology introduce consistency component artifact specification implementation data apply genetic algorithm generate data generate datum predator validate program contract experimental percent mutant data generation technique besides generate data directly mutation apply improve quality data propose approach improve quality data mutation  algorithm smith williams apply mutation guidance data augmentation mutation analysis improve component contract apply mutation assist programmer parameterized regression prioritization technique assist regression mutation apply prioritization technique   quickly suite detects mutant sequence reschedule rate mutant empirical automate prioritization effectively improve rate fault detection suite mutation assist minimization minimization technique aim reduce without lose effectiveness propose approach ping pong generate mutant target criterion subset data mutation empirical ping pong reduce mutation adequacy percent without loss effectiveness addition previously mention application mutation analysis apply application domain propose approach evaluate improve functional validation quality rtl hardware environment mutation analysis assist evaluation software clone detection empirical evaluation empirical important aspect evaluation dissemination technique program empirical summarize empirical evaluation mutation report detail program investigate empirical mutation program empirical repository description program apply overall research report program entry description program report occurs information unavailable literature sort program program program literature mutation wildly program laboratory program loc program nontrivial program overview trend empirical mutation attack challenge program calculate program horizontal axis data program mutation clearly definition program problematic merely intend rough indicator evidence program handle mutation increase however caution although empirical report handle program apply mutation operator newly introduce program dash cumulative newly program gradually increase suggests growth practical program apply program apply empirical indicative program laboratory program understand relationship laboratory program program mutation program source program cumulative program increase laboratory program already increase laboratory program introduce clearly indicates correctly laboratory program overall program laboratory program introduce evidence development mutation mature laboratory program versus program research mutation program benchmark summarize benchmark program chose active research couple selective mutation weak firm mutation equivalent mutant detection mutation analysis minimize prioritize generate data program application empirical researcher conduct evaluate effectiveness mutation mutation criterion data criterion mutant fault summarizes evaluation program empirical evaluation mutation mathur wong conduct criterion mutation criterion mathur wong manually generate satisfy criterion program empirical mutation adequate easily satisfy criterion satisfy mutation criterion indicates mutation criterion  criterion  program evidence mathur wong  relationship addition criterion criterion fault detection rate percent fault detect mutation adequate mutation criterion  data conclusion addition mutation analysis criterion empirical fault mutant    author conduct software error mutant safety critical program civil nuclear program fault generate mutant empirical percent error mutant fault thereby evidence mutation couple hypothesis demillo mathur demillo mathur extensive error tex report knuth demonstrate mutant detect complex error tex conduct manually fault generate experienced developer mutant automatically generate carefully mutation operator siemens suite printtokens printtokens replace schedule schedule tcas totinfo program empirical filter equivalent mutant remain  mutant generate mutation operator indication fault detection ability suite generate fault mutant  fault detection fault  fault machine generate mutant fault detection ability prioritization data prioritization  prioritization technique improve fault detection rate analysis  prioritization mutation improve fault detection rate however affected mutation fault apply fault detection ability  experimental procedure program reveal data minimization mutation despite evaluate mutation approach mutation analysis evaluate approach conduct data generation data  apply mutation analysis random deterministic input generation technique mutation analysis evaluate traditional model approach concurrent program mutation development mutation important enabler transformation mutation laboratory practical widely technique without fully automate mutation mutation unlikely accepted summarize development mutation mutation propose mutation built automate mutation analysis information concern implement mutation academic report repository source industrial domain summarizes application publication notable characteristic detailed description reference cite summary publish mutation growth introduce development classify stage stage stage mutation propose prototype experimental mutation built establishment fundamental theory mutation analysis competent programmer hypothesis couple hypothesis stage built academic mothra fortran   insure engineering effort mothra  handle program laboratory program academic widely advanced mutation technique weak mutation selective mutation mutant sample interface mutation stage mutation development  mutation workshop implement dash cumulative development development trend rapidly increase research mutation remains active increasingly practical introduce introduce explore impact mutation within source industrial domain classify academic source industrial source industrial implement recently mutation gradually become practical technique embrace source industrial community classification mutation evidence increase importance mutation understand trend mutation research analyze publication apparent outlier mutation workshop however evidence explain spike anomalous productive mutation reader unique publication explanation offutt maximally devote program mothra perform regression analysis data positive correlation publication predict trend publication future trend data regression model linear logarithmic polynomial exponential average dash quadratic model achieves coefficient determination mutation growth trend wider context plot publication data dblp computer accord dblp growth computer exponential analysis mutation remains healthy computer closer trend research mutation classify theoretical practical theoretical category publication concern hypothesis mutation optimization technique technique reduce computational technique detection equivalent mutant survey practical category publication application mutation development mutation related empirical goal separation theoretical practical analyze temporal relationship development theoretical practical research effort community overall cumulative theoretical practical increase practical publication surpasses theoretical publication closer relationship publication per practical publication theoretical research shift application evidence foundational theory practical application possibly increase maturity theoretical publication versus practical publication cumulative theoretical publication versus practical publication theoretical publication versus practical publication  riddle maturation model trend indicates technology maturity industrial uptake suppose cast attention mid approximately percent volume output publish literature mutation literature implement practical commercial mutation observation suggests development mutation  riddle finding furthermore mutation developed laboratory program paradigm evidence maturity mature  riddle model future coverage popular program paradigm mutation finally increase maturity development empirical report mutation noticeable trend empirical involve program involve realistic program chronological data empirical however program empirical evidence regard toy program increase  replication report  unresolved barrier discus finding conclusion drawn survey literature concern mutation naturally account extent influence author mutation however attempt summarize unresolved barrier objective manner available literature trend within unresolved barrier wider application mutation associate equivalent mutant survey sustain technique reduce impact equivalent mutant remains unresolved development along concentrate technique detect equivalent mutant future mutation approach seek avoid initial creation reduce likelihood mutation apply equivalent mutant equivalent mutant possibility focus operator analyze code likelihood reduce careful  seek retain highly valuable stubborn mutant filter equivalent however behaviorally mutant highly mutation concerned generation mutant comparatively concentrate generation mutant exist mutant generation mature commercial application currently generation mutant maturity therefore mutation ass quality suite comparatively improve suite associate mutation analysis future seek quality mutant basis generate quality data however practical software data generation mutation adequacy remains unresolved barrier overcome remains perception misplace nonetheless widely mutation costly impractical remains barrier wider academic wider uptake within survey address remain doubt academic plenty evidence survey mutation cusp trend maturity transition academic industrial application barrier industrial uptake significant longer fully overcome primary barrier apply emergent software technology transition laboratory wider practical application reliable compelling evidence motivate investment survey increasingly practical trend empirical empirical increasingly focus nontrivial industrial laboratory program compelling evidence sufficient overcome remain practitioner doubt trend evidence mutation emerge practical commercial however ensure widespread industrial uptake furthermore address currently unresolved generation automate practical generation compelling facilitator industrial uptake mutation currently exists data generation recent development dynamic symbolic execution data generation indicates cannot mutation community ensure lag trend mutation rapid rate technique maturity previously witness extend mutation paradigm domain application exist future application shortly widely program mutation apply program empirical program empirical aspect balance effort fault ability classic tension effort effectiveness traditionally mutation expensive technique however recently author develop technique reduce without  quality successful technique reduce mutation effort without significant reduction effectiveness described conclusion future detailed survey analysis trend mutation theory optimization technique equivalent mutant detection application empirical mutation optimization reduce mutation data mutation literature analysis reveals increasingly practical trend evidence increase application realistic program handle mutation recent trend provision source industrial finding evidence mutation mature recent tend focus elaborate mutation relatively fault previously semantic mutation syntactic achievement mutation migration syntactic achievement mutation desire semantic mutation generate subtle fault mutation denote fault future generation realistic mutant provision practical