software technique available fuzzing remain highly popular due conceptual simplicity barrier deployment vast amount empirical evidence discover software vulnerability fuzzing refers repeatedly program generate input syntactically semantically malformed researcher practitioner alike invest diverse effort towards improve fuzzing recent surge gain comprehensive coherent fuzzing preserve coherence vast literature fuzzing unified purpose model fuzzing taxonomy fuzzing literature methodically explore decision stage model fuzzer survey related literature innovation engineering fuzzers effective introduction introduction fuzzing remain widely deployed technique software correctness reliability fuzzing refers repeatedly program generate input syntactically semantically malformed malicious attacker routinely deploy fuzzing scenario exploit generation penetration darpa cyber challenge CGC employ fuzzing cyber fuel activity defender fuzzing attempt discover vulnerability attacker prominent vendor adobe cisco google microsoft employ fuzzing secure development recently security auditor source developer fuzzing gauge security commodity software package suitable assurance user fuzzing community extremely vibrant github alone host public repository related fuzzing demonstrate literature contains fuzzers increase fuzzing security conference addition  fuzzing gem warrant permanent literature  trace significant fuzzers lineage seminal node fuzzers solid arrow indicates cite reference otherwise technique denotes publish unfortunately surge fuzzing researcher practitioner alike warn impede progress description fuzzers beyond source code manual easy lose decision potentially important tweak fuzzers furthermore observable fragmentation terminology various fuzzers whereas afl minimization refer technique reduces crash input technique reduction   technique crash minimization technique seek minimize crash input file related reduce input fragmentation discover disseminate fuzzing knowledge severely hinder progress fuzzing research due prime consolidate distill amount progress fuzzing publish attempt unify fuzzing terminology unified model fuzzing purpose terminology chosen closely reflect predominant usage model fuzzer algorithm fuzzing task classify taxonomy fuzzing literature setup explore stage model fuzzer detailed overview fuzzers stage survey relevant literature explain choice discus important offs highlight  engineering effort fuzzers effective task overview fuzzers sort instrumentation granularity grey respectively  taxonomy program fuzz originally coin refer program generates random consume target program concept fuzz action fuzzing variety context dynamic symbolic execution grammar generation permission behavioral complexity kernel representation dependence function detection robustness evaluation exploit development gui signature generation penetration embed device neural network systematize knowledge vast literature fuzzing terminology fuzzing extract fuzzing fuzz intuitively fuzzing action program fuzz input honor fuzz input input input incorrectly trigger behavior unintended developer capture define fuzzing definition fuzzing fuzzing execution input sample input fuzz input  input remark although fuzz input input suffices former input latter fuzzing almost surely iteration execution largely accurate sample necessarily randomize fuzz software technique utilizes fuzzing historically fuzz primarily security related bug however nowadays widely non security application addition define fuzzer fuzz campaign fuzz definition fuzz fuzz fuzzing violates correctness policy definition fuzzer fuzzer program performs fuzz definition fuzz campaign fuzz campaign specific execution fuzzer specific correctness policy goal fuzz campaign bug violate specify correctness policy correctness policy employ fuzzers generate input crashed however fuzz actually policy observable execution EM enforceable specific mechanism decides execution violates policy bug oracle definition bug oracle bug oracle program fuzzer determines execution violates specific correctness policy although fuzz focus policy violation technique divert towards usage indeed fuzzing inspire approach employ application instance  input reveal performance refer algorithm implement fuzzer simply fuzz algorithm almost fuzz algorithm parameter beyond concrete parameter fuzz configuration definition fuzz configuration fuzz configuration fuzz algorithm comprises parameter fuzz algorithm definition fuzz configuration intend fuzz configuration fuzz algorithm fuzz algorithm sends random byte configuration sophisticated fuzzers algorithm accept configuration evolve remove configuration cert  varies mutation ratio campaign configuration commonly structure input generate modify fuzzers typically maintain collection pool fuzzers evolve pool fuzz campaign progress finally fuzzer data within configuration instance coverage fuzzers attain coverage configuration selection criterion achieve define scope chosen publication fuzzing recent proceeding security conference software engineering conference january february  former acm conference computer communication security CCS symposium security privacy network distribute security symposium   security symposium  latter acm international symposium foundation software engineering FSE acm international conference automate software engineering ase international conference software engineering ICSE  venue medium judgment relevance mention fuzz mainly focus security related bug theory focus security bug imply difference beyond selection bug oracle technique however access source code knowledge assume assumption development characteristic fuzzers likely employ developer nevertheless closely related another therefore unsure classify publication relate fuzz survey thumb publication fuzz algorithm fuzz input  output finite bug preprocess   conf schedule    conf  embed fuzzer   conf  CONFUPDATE conf  return fuzz algorithm algorithm generic algorithm fuzz implement model fuzzer accommodate exist fuzzing technique grey fuzzing define algorithm fuzz configuration timeout  input output discover bug consists preprocess function execute fuzz campaign series function inside loop schedule   CONFUPDATE execution loop fuzz iteration  executes fuzz fuzzers implement function model  update fuzz configuration CONFUPDATE return configuration unchanged preprocess user preprocess fuzz configuration input return potentially modify fuzz configuration fuzz algorithm preprocess perform variety action insert instrumentation code  execution file schedule   conf schedule fuzz configuration  timeout  input selects fuzz configuration fuzz iteration  conf  fuzz configuration input return concrete output generate  specific parameter conf fuzzers conf generate others model grammar parameter  conf    fuzz configuration conf bug oracle  input executes execution violate correctness policy bug oracle  output bug information fuzz  update fuzz configuration assume  embed model fuzzer CONFUPDATE conf  CONFUPDATE fuzz configuration configuration conf information fuzz  input update fuzz configuration grey fuzzers reduce fuzz configuration  false fuzz configuration input output boolean fuzz iteration function useful model fuzzers terminate discover taxonomy fuzzers categorize fuzzers granularity semantics fuzzer observes fuzz grey fuzzers define classification traditional software discus grey fuzzing variant fuzzing obtain partial information fuzz fuzzer commonly software fuzzing denote technique internals technique input output behavior treat software IO driven data driven traditional fuzzers category fuzzers  peach structural information input account generate meaningful maintain characteristic inspect intuition adaptive random fuzzer extreme spectrum fuzzing generates analyze internals information execute fuzzers explore systematically fuzzing introduce godefroid refers dynamic symbolic execution DSE variant symbolic execution DSE symbolic concrete execution concurrently concrete program simplify symbolic constraint concretize DSE refer concolic  concrete symbolic addition fuzzing fuzzers employ taint analysis overhead fuzzing typically fuzzing partly DSE implementation employ dynamic instrumentation smt DSE active research DSE generally fuzzing comprehensive survey DSE refer reader recent survey information topic grey fuzzer fuzzers approach dubbed grey fuzzing grey fuzzers obtain information internal execution unlike fuzzers grey fuzzers semantics instead perform lightweight static analysis dynamic information execution code coverage grey fuzzers rely approximate imperfect information gain input although usually consensus security expert distinction grey fuzzing fuzzers information fuzz fuzzers approximation classify fuzzers survey particularly rely judgement grey fuzzer  code coverage fuzz generate evolutionary algorithm  approach specifically vulnerability fuzzers afl vuzzer exemplar category fuzzer  overview categorization exist fuzzers chronological seminal manually popular fuzzers conference obtain github relationship graph fuzzers grey fuzzers furthermore fuzzers subdivide input file network UI web kernel thread concurrency fuzzers detailed summary technique notable fuzzers omit fuzzers due constraint fuzzer summarize implementation function model fuzzer miscellaneous detail fuzzer explain described indicates fuzzer grey fuzzer phase feedback gathering  analysis preprocessing optimize performance subsequent campaign whereas hybrid fuzzers driller alternate grey fuzzing source code fuzzer publicly available denotes fuzzer source code indicates fuzzer memory fuzzing fuzzer infer model fuzzer performs static dynamic analysis preprocess indicates fuzzer handle multiple perform schedule specifies fuzzer performs input mutation generate fuzzers input mutation execution feedback fuzzer generates model fuzzer performs symbolic analysis generate identifies fuzzers leverage taint analysis generation fuzzer performs crash triage stack hash code coverage indicates fuzzer evolves pool CONFUPDATE pool fuzzer learns input model online fashion finally fuzzers remove pool preprocess fuzzers loop algorithm modify initial fuzz configuration fuzz iteration preprocessing commonly weed potentially redundant configuration selection trim generate driver application detailed preprocess model future input generation  instrumentation unlike fuzzers grey fuzzers execution feedback  performs fuzz fuzz memory content runtime amount information defines fuzzer grey although acquire information internals processor trace usage instrumentation valuable feedback program instrumentation static dynamic former happens preprocess whereas latter happens  convenience reader static dynamic instrumentation static instrumentation perform compile source code intermediate code occurs runtime generally imposes runtime overhead dynamic instrumentation relies library separately commonly recompiling instrumentation beyond source instrumentation researcher developed binary static instrumentation binary rewrite despite overhead static instrumentation dynamic instrumentation advantage easily dynamically link library perform runtime dynamic instrumentation   pin valgrind qemu fuzzer instrumentation afl static instrumentation source code modify compiler dynamic instrumentation binary qemu dynamic instrumentation afl executable code default executable code external library afl inst libs option option encounter code report coverage information code external library coverage however afl fuzz additional external library function user prefer avoid option execution feedback grey fuzzers typically execution feedback input evolve libfuzzer afl descendant compute coverage instruction however coverage information compact vector become inaccurate due collision collafl recently address shortcoming introduce sensitive hash function meanwhile syzkaller node coverage execution feedback whereas honggfuzz allows user execution feedback thread schedule bug trigger rely non deterministic behavior infrequently however instrumentation trigger non deterministic program behavior explicitly thread schedule exist randomly schedule thread effective bug memory fuzzing program sometimes desirable fuzz portion without spawn fuzz iteration minimize execution overhead complex gui application processing accept input approach fuzzing program snapshot gui initialize fuzz restore memory snapshot directly memory execute intuition applies fuzzing network application involve interaction client server technique memory fuzzing  creates snapshot load input byte skip unnecessary startup code afl employ fork server avoid startup although motivation memory fuzzing fork server involves fork fuzz iteration fuzzers perform memory fuzzing function without restore iteration technique memory api fuzzing afl option persistent mode repeatedly performs memory api fuzzing loop without restart afl ignores potential function multiple execution although efficient memory api fuzzing suffers unsound fuzzing bug crash memory fuzzing reproducible feasible construct valid context target function capture across multiple function soundness memory api fuzzing mainly depends entry function function challenge task selection recall fuzzers fuzz configuration behavior fuzzing algorithm however parameter fuzz configuration mutation fuzzers infinite domain suppose analyst fuzz MP player accepts MP file input unbounded valid MP file fuzzing reduce initial pool selection approach exist address approach  minimal maximizes coverage metric node coverage suppose configuration consists address executes roughly argue fuzz instead code execution intuition miller report percent increase code coverage increase percentage bug percent CONFUPDATE useful fuzzers introduce pool throughout campaign fuzzers variety coverage metric afl  coverage logarithmic counter rationale magnitude honggfuzz computes coverage execute instruction execute unique metric allows fuzzer longer execution  discover denial service vulnerability performance trim likely consume memory entail throughput therefore fuzzers attempt reduce prior fuzzing trim trim prior fuzzing loop preprocess CONFUPDATE notable fuzzer trim afl code coverage instrumentation iteratively remove portion modify achieves coverage meanwhile report  algorithm selects priority unique bug random selection specific fuzzing linux handler  extends syzkaller reduce preserve dependency detect static analysis driver application directly fuzz driver fuzzing largely manual although fuzz campaign target library driver program function library similarly kernel fuzzers fuzz  application kernel  target iot device driver communicate correspond smartphone application schedule fuzzing schedule fuzz configuration fuzz iteration explain content fuzz configuration depends fuzzer fuzzers schedule straightforward  default mode allows configuration simply decision advanced fuzzers  aflfast factor innovative schedule algorithm discus schedule algorithm grey fuzzing schedule fuzzing complex setup unique symbolic executor refer reader another source fuzz configuration schedule FCS goal schedule analyze currently available information configuration likely favorable outcome unique bug maximize coverage attain generate input fundamentally schedule algorithm confronts exploration versus exploitation conflict spent gathering accurate information configuration inform future decision explore fuzzing configuration currently favorable outcome exploit dubbed inherent conflict fuzz configuration schedule FCS model fuzzer algorithm function schedule selects configuration fuzz configuration  budget  configuration fuzz iteration schedule decision information decision acquire preprocess CONFUPDATE augment knowledge FCS algorithm information FCS algorithm fuzz outcome configuration crash bug amount spent householder  information leveraged cert   fuzzer model  fuzzing sequence bernoulli trial configuration probability unique crash demonstrate increase unique crash  fix amount improve multiple refine model become coupon collector unknown  UW learns decay upper bound probability trial apply multi bandit mab algorithm fuzzing cop strategy exploration versus exploitation conflict normalize probability configuration already spent thereby prefer faster configuration fourth redefine fuzz iteration fix fuzz fix amount  configuration grey FCS algorithm grey FCS algorithm richer information configuration coverage attain fuzzing configuration afl  category evolutionary algorithm EA intuitively EA maintains population configuration fitness EA selects configuration applies genetic transformation mutation recombination offspring later become configuration hypothesis configuration likely understand FCS context EA define configuration configuration configuration approximation configuration afl considers contains input favorite afl parlance afl maintains queue configuration selects configuration essentially queue circular afl allocates configuration coverage perspective FCS preference configuration aflfast  improve upon afl aspect modifies configuration fitness selection prioritize exploration rare moreover aflfast fuzz configuration variable schedule schedule ensure initial exploration configuration increase exponentially limit quickly ensure sufficient exploitation finally normalizes generate input promote exploration frequently fuzzed configuration innovation aflfast partially integrate afl FidgetyAFL  improvement aflfast quickly newly afl related aflgo extends aflfast modify priority attribution target specific program location hawkeye improves fuzzing leverage static analysis schedule input generation  campaign rare employ mutation mask rare  static analysis infer binary faulty prioritizes configuration input generation content directly bug trigger technique input generation naturally influential decision fuzzer traditionally fuzzers categorize generation mutation fuzzers generation fuzzers model describes input fuzzers model fuzzers mutation fuzzers mutate input mutation fuzzers generally model merely input completely input explain classify various input generation technique fuzzers underlie generation  mechanism input function configuration conf algorithm information preprocess CONFUPDATE model generation fuzzers model fuzzers generate model describes input execution accept grammar precisely characterize input format precise constraint magic identify file predefined model fuzzers model configure user peach   specification user   spike  libfuzzer expose apis analyst input model  input specification extend    generates conform correspond grammar similarly network protocol fuzzers    fuzz protocol specification user kernel api fuzzers define input model template template commonly specify argument input model kernel fuzzing originate seminal robustness OSes finite manually chosen nautilus employ grammar input generation purpose fuzzing grammar trim model fuzzers target specific grammar model built fuzzer fuzz  generate random document model dom likewise  random syntactically javascript code grammar model  utilizes exist haskell library file format generate network protocol fuzzers  TLS attacker   model specific network protocol TLS NFC propose generate grammatically semantically diverse leverage constraint logic program  code fragment parse input randomly combine fragment mutates fragment generate grammar syntactically code whereas  apply javascript php  target xml regular expression parser  infer model infer model rely predefined user model recently gain traction although abundance publish research topic automate input format protocol reverse engineering fuzzers leverage technique instrumentation model inference preprocess CONFUPDATE model inference preprocess fuzzers infer model preprocessing  data available literal predict suitable input grammar  data driven approach infer probabilistic context sensitive grammar generate unlike previous focus generate semantically valid input IMF learns kernel api model analyze api code invokes sequence api infer model  javascript code code brick computes assembly constraint distinct brick assemble merge semantically valid constraint compute static dynamic analysis neural fuzz neural network machine technique model file generate infer model propose approach specific text input model inference CONFUPDATE fuzzers potentially update model fuzz iteration  automatically infers network protocol model capture network packet generate program network protocol fuzz program  internally machine message token correlate information later generate machine  propose infer machine web service behavior infer model scan web vulnerability target TLS implementation   synthesizes context grammar sample fuzz infer grammar fuzz grey fuzzer model pool model generate input limitation symbolic execution neural network encoder model fuzzing decoder program parse file format file format correspond encoder program implicit model file format  leverage implicit model encoder program generate unlike mutation fuzzers mutate exist generate  mutates encoder program specifically  computes dynamic program slice encoder program underlie program slice slightly behavior encoder program slightly malformed model mutation fuzzers classic random efficient generate satisfy specific suppose statement input input integer probability randomly input situation structure input MP file indeed extremely unlikely random generate valid MP file reasonable amount MP player likely reject generate random parse stage deeper program motivates input generation input generation model fuzzers input generate modify typically structure input file network packet sequence UI mutate valid file generate mostly valid contains abnormal trigger crash variety mutate flip flip technique model fuzzers fuzzers simply flip fix others flip random randomly mutate fuzzers employ user configurable parameter mutation ratio determines flip execution  flip random mutation ratio  fuzzing performance sensitive mutation ratio ratio suitable  fortunately mutation ratio   exponentially mutation ratio allocate iteration ratio statistically effective  leverage program analysis infer mutation ratio arithmetic mutation afl honggfuzz another mutation operation byte sequence integer perform arithmetic compute replace byte sequence intuition bound mutation afl byte treat integer replaces randomly generate integer depends fuzzer user configurable afl default mutation mutation methodology sequence byte insert randomly generate random delete randomly replace randomly random randomly permute sequence resize append random random insert replace random another mutation fuzzers predefined potentially significant semantic meaning mutation afl honggfuzz libfuzzer mutate integer  employ unicode  format mutate fuzzers fuzzers categorize model model fuzzers traditional dynamic symbolic execution model mutation fuzzers symbolic executor leverage input model grammar symbolic executor although fuzzers seminal dynamic symbolic execution generate fuzzers dynamic symbolic executor fuzzers leverage program analysis information input accepts grey fuzzing subsection briefly summarize exist fuzzing technique underlie generation algorithm mention intentionally omit dynamic symbolic executor author explicitly fuzzer dynamic symbolic execution classic symbolic execution program symbolic input executes symbolic expression instead evaluate concrete whenever conditional instruction conceptually fork symbolic interpreter another false symbolic interpreter formula predicate instruction encounter execution formula satisfiable concrete input executes desire generate concrete input query smt solver formula dynamic symbolic execution variant traditional symbolic execution symbolic execution concrete execution refer dynamic symbolic execution concolic concrete symbolic concrete execution reduce complexity symbolic constraint extensive review academic literature dynamic symbolic execution beyond application fuzzing scope broader treatment dynamic symbolic execution source dynamic symbolic execution grey approach involves analyze instruction cope strategy narrow usage instance user specify uninteresting code alternate concolic grey fuzzing driller  usefulness technique darpa cyber challenge qsym seek improve integration grey fuzzing implement concolic execution  optimizes switch grey fuzzing estimate probability grey fuzzing allows fuzzer focus challenge grey fuzzing fuzzing fuzzers leverage static dynamic program analysis technique enhance effectiveness fuzzing technique usually involve fuzzing phase costly program analysis obtain useful information generation guidance previous analysis denote  grain taint analysis byte input byte critical api security researcher  performs static analysis compilation loop likely bug heuristic specifically loop pointer dereferences computes relationship input byte candidate loop taint analysis finally  dynamic symbolic execution critical byte symbolic hence improve performance vuzzer  leverage static dynamic analysis technique extract data feature input generation   decrease analysis costly instrumentation information generate input lighter instrumentation  improves upon byte taint analysis associate constraint correspond byte performs inspire gradient descent algorithm mutation towards constraint  detect input comparison correspondence operand input constraint mutation practical challenge fuzzing bypassing checksum validation computes checksum input parse reject handle challenge  propose checksum aware fuzzing technique identifies checksum instruction taint analysis patch bypass checksum validation program crash generate checksum input generate crash unmodified technique stitch dynamic symbolic execution generate presence checksum fuzz extends efficiently penetrate conditional transform without modify program logic dubbed non critical  fuzz campaign discover NCC transforms restarts fuzz campaign modify finally crash fuzzing modify fuzz reconstruct symbolic execution input evaluation input generate fuzzer executes input decides execution input evaluation although simplicity execute fuzzing attractive optimization decision related input evaluation performance effectiveness fuzzer explore consideration bug oracle canonical security policy fuzz considers program execution terminate fatal signal segmentation fault violation policy detects memory vulnerability memory vulnerability overwrites data code pointer invalid usually segmentation fault abort dereferenced moreover policy efficient operating exceptional situation trap fuzzer without instrumentation however traditional policy detect crash detect memory vulnerability trigger stack buffer overflow overwrites pointer stack valid memory address program completion invalid crash fuzzer detect mitigation researcher propose variety efficient program transformation detect unsafe unwanted program behavior abort program sanitizers memory safety memory safety error spatial temporal spatial memory error pointer dereferenced outside intend buffer overflow underflows canonical spatial memory error temporal memory error pointer access longer valid vulnerability pointer memory deallocated typical temporal memory error address sanitizer ASan memory error detector program compile ASan detect spatial temporal memory error average slowdown percent attractive alternative crash harness ASan employ shadow memory allows memory address quickly checked validity dereferenced allows detect unsafe memory access crash program  improves ASan leverage memory available platform chunk inaccessible memory zone allocate zone likely corrupt pointer invalid memory crash softbound  another memory error detector program compilation valid memory address ASan softbound  associate bound temporal information pointer detect spatial temporal memory error theory however completeness average overhead percent    program compilation detect cast cast cast occurs cast incompatible cast derive another memory safety protection integrity CFI detects transition runtime program CFI detect illegally modify program recent project focus subset CFI violation mainstream gcc clang compiler undefined behavior behavior undefined specification compiler handle construct variety programmer intentionally otherwise code compiler implementation although overly dangerous factor impact compiler implement undefined behavior optimization setting architecture compiler compiler version vulnerability bug arise compiler implementation undefined behavior programmer expectation memory sanitizer  program compilation detect undefined behavior uninitialized memory ASan  shadow memory addressable initialize memory sanitizer approximately percent overhead undefined behavior sanitizer  modifies program compile detect undefined behavior unlike sanitizers focus source undefined behavior  detect variety undefined behavior misalign pointer zero dereferencing null pointer integer overflow thread sanitizer TSan compile modification detects data data occurs thread concurrently access memory location access bug data corruption extremely reproduce due non determinism input validation input validation vulnerability XSS site script sql injection vulnerability challenge understand behavior complicate parser web browser database  detects successful XSS attack parse input web browser extract document model manually specify successful attack  trick detect sql injection reliably detect sql injection web application response  database proxy intercept communication target web application database detect input trigger harmful behavior semantic difference semantic bug discover technique differential behavior identical program fuzzers differential identify discrepancy program likely bug introduce differential fuzz differential multiple input program mutation input output mapping identify information leak execution optimization model considers individual fuzz iteration execute sequentially straightforward implementation approach simply load fuzz iteration repetitive load significantly reduce fuzzers functionality skip repetitive load afl fork server allows fuzz iteration fork already initialize similarly memory fuzzing another optimize execution regardless mechanism overhead load initialize reduce iteration iteration replaces fork triage triage analyze reporting policy violation triage deduplication prioritization minimization deduplication deduplication prune output trigger bug another ideally deduplication return trigger unique bug deduplication important component fuzzers practical implementation manner avoids waste disk resource duplicate usability consideration deduplication easy user understand roughly bug analyze bug useful variety fuzzer user attacker vulnerability meaning likely reliable exploitation currently deduplication implementation stack backtrace hash coverage deduplication semantics aware deduplication stack backtrace hash stack backtrace hash widely  crash automate stack backtrace crash assigns stack hash content backtrace program crashed execute code function foo stack foo stack backtrace hash implementation crash execution backtrace foo stack backtrace hash stack hash implementation widely stack frame hash implementation limit implementation amount information stack frame implementation hash function address implementation hash offset neither option implementation hash minor hash hash likely dissimilar crash hash function whereas minor hash precise function unlimited stack frame although stack backtrace hash widely without shortcoming underlie hypothesis stack backtrace hash crash bug vice versa however knowledge hypothesis directly doubt veracity crash code crash vulnerability heap corruption crash unrelated code attempt allocate memory heap overflow coverage deduplication afl popular grey fuzzer employ efficient source code instrumentation coverage execution coarse grey fuzzer afl primarily coverage information file however fairly unique deduplication scheme described documentation afl considers crash unique crash previously unseen crash earlier crash semantics aware deduplication  performs crash triage semantics recover reverse data analysis crash specifically  pointer crash analyze crash dump core dump recursively identifies instruction assign eventually function maximum frame blame function blame function cluster crash van leverage automate program repair technique crash bug function program semantics approximates fix bug prioritization exploitability prioritization fuzzer tame rank violate accord severity uniqueness fuzzing traditionally discover memory vulnerability context prioritization exploitability crash informally describes likelihood practical exploit developed vulnerability expose defender attacker interested exploitable bug defender generally fix exploitable bug non exploitable attacker interested exploitable bug obvious exploitability rank microsoft exploitable exploitable  command exploitable employ heuristic simplify taint analysis classifies crash severity exploitable probably exploitable unknown likely exploitable severe although classification formally define exploitable informally intend conservative err reporting something exploitable exploitable concludes crash exploitable illegal instruction execute assumption attacker coerce zero crash likely exploitable exploitable introduce heuristic propose exploitable plugin gdb  however correctness systematically evaluate minimization another important triage minimization minimization identify portion violate trigger violation optionally simpler violation although minimization trim conceptually aim reduce input distinct minimizer leverage bug oracle exist minimizers inspire delta debug fuzzers implementation algorithm minimization  minimization algorithm tailor fuzzing attempt minimize file afl minimizer attempt simplify opportunistically byte zero shorten lithium purpose minimization minimizes file attempt remove chunk adjacent byte exponentially descend lithium motivate complicate javascript fuzzers  variety reducer specifically fuzzing nevertheless identify fuzzing format agnostic technique delta debug specialized technique specific format reduce file although specialized technique obviously limited file reduce advantage significantly efficient generic technique understand grammar simplify configuration update CONFUPDATE function critical role distinguish behavior fuzzers grey fuzzers algorithm CONFUPDATE function modify configuration configuration execution information fuzzing simplest CONFUPDATE return parameter unmodified fuzzers perform program introspection beyond evaluate bug oracle  typically unmodified information modify however aware fuzzers violate  feature crash recycle contrast grey fuzzers distinguish sophisticated implementation CONFUPDATE function allows incorporate fuzz configuration remove supersede CONFUPDATE enables information fuzzing iteration future iteration fuzzers typically fuzz configuration relatively grey fuzzers evolutionary pool update evolutionary algorithm EA heuristic approach involves bio inspire evolution mechanism mutation recombination selection context fuzzing EA maintains pool promising individual evolves fuzz campaign individual discover although concept eas relatively basis grey fuzzers mutate mutation detailed respectively arguably important EA configuration configuration occurs CONFUPDATE fuzzing EA fuzzers node coverage fitness function node discover pool reachable magnitude pool intend diverse sub selection reachable exploration pool coverage mention strategy EA fuzzers refine fitness function detect subtle granular indicator improvement afl refines fitness function definition  statistical framework inspire ecology estimate configuration discover fuzz campaign another strategy met complex evaluate laf intel simply multi byte comparison allows detect intermediate byte comparison libfuzzer honggfuzz fuzz steelix comparison progress comparison pool release alone instrumentation module clang additionally steelix input offset influence comparison instruction  improves fitness criterion afl context DeepXplore adapts fuzzing neural network neuron coverage fitness function vuzzer EA fuzzer fitness function relies custom program analysis determines specifically vuzzer built program analysis classify normal error handle EH normal inversely proportional probability random cfg accord transition probability define vuzzer configuration normal deem rare aforementioned random EH negative discourages execution error handle EH assumes traverse EH signal vulnerability bug coincide unhandled error maintain  ability fuzz configuration risk configuration strategy mitigate risk maintain  minimal maximizes coverage metric  preprocess described detail fuzzers variant maintain  specialized configuration update completely remove configuration   afl cull procedure  configuration favorable favorable configuration significantly schedule function author afl reasonable balance queue cycling diversity related literature fuzzing bloom publish within practical approach technique available usage variety target already distinguish grey fuzzers although formal definition recently revise decade edition update afl  conclude remark forth goal distill comprehensive coherent fuzzing literature purpose model fuzzer facilitate effort explain fuzzing illustrate taxonomy fuzzers explore stage model fuzzer decision involve showcasing achievement community uniformity future particularly terminology presentation fuzzing algorithm