smart contract originally coin refer automation legal contract recently due advent blockchain technology recently popularly refer code script blockchain platform focus exclusively subset smart contract smart contract increasingly gain numerous important application crowdfunding despite increase popularity smart contract development remains somewhat mystery developer largely due application difference smart contract development traditional software development challenge developer smart contract development important explore researcher perform exploratory understand potential challenge developer develop smart contract blockchains focus ethereum popular public blockchain platform smart contract conduct phase phase conduct semi structure interview developer github professional smart contract phase perform survey practitioner validate finding interview interview survey reveal challenge developer smart contract development effective guarantee security smart contract code exist development program virtual machine limitation performance handle resource constrain environment online resource advanced update document community limited suggests direction researcher practitioner improve developer develop quality smart contract introduction release bitcoin decentralize cryptocurrencies gain considerable attention adoption instance till february coin token host  respectively cryptocurrency administrate central authority automate consensus networked user user cryptocurrency network consensus protocol maintain secure public append ledger transaction blockchain recent potential blockchain technology exploit beyond cryptocurrencies promising blockchain smart contract smart contract originally coin refer automation legal contract refer legal contract capable express implement software advent blockchain technology recently smart contract popularly refer code script synchronously multiple node distribute ledger blockchain mainly focus latter specific definition smart contract code script blockchains program blockchain smart contract correctly execute network mutually distrust node without external trust authority execute smart contract tremendous opportunity rely data transaction percent advertised guru freelancer site related smart contract blockchains currently developer devote develop smart contract various domain finance notary smart contract deployed ethereum popular public blockchain smart contract capitalization exceed billion sharply increase march emergence smart contract brings widespread research community researcher smart contract target publish acm international workshop emerge trend software engineering blockchain  international workshop blockchain orient software engineering  conference acm conference computer communication security CCS international symposium leverage application formal verification validation  etc despite increase popularity smart contract potential challenge developer develop smart contract clearly explore without understand challenge practitioner researcher effort develop technique appreciate developer  advance research smart contract development conduct empirical explore potential challenge developer smart contract development blockchains focus ethereum mixed approach combination interview qualitative survey quantitative specifically interviewed developer background expertise interview participant normal relevant challenge stage cod debug smart contract development sort analyze interview category sort grouped security debug program ethereum virtual machine online resource community perform validation survey developer confirm various insight interview challenge desire improvement interview survey developer code security effective correctness reliability security code meanwhile lack powerful interactive debugger painful program smart contract furthermore mention developer program virtual machine specifically smart contract limitation lack purpose library limited debug limitation adversely affected project development complex project another challenge developer performance issue interested resource efficient smart contract consume resource blockchain besides lack advanced update document delay response online community impact smart contract development contribution knowledge depth explores practitioner perception smart contract development challenge ahead interview survey perform analysis qualitative quantitative data highlight actionable insight implication developer builder researcher improve developer smart contract development remain structure background smart contract empirical methodology detail finding potential research direction finding discus threat validity related summarize background blockchain blockchain chain link secure cryptography characterize transaction data stamp hash previous blockchain public ledger contains transaction blockchain location network node network node blockchain public easily verifiable network node expensive node modify data blockchain append blockchain extremely modify transaction without achieve consensus node feature peer peer consensus protocol blockchain technology allows untrusted transaction securely without participation trust blockchain suitable task storage ownership musical financial transaction etc cryptocurrencies blockchain attract considerable attention lately emerge blockchain technology smart contract smart contract smart contract coin nick  mid translate clause contract code embed software hardware execute minimise contract transact avoid accidental exception malicious action contract performance currently discipline smart contract refer smart contract legal contract software others smart contract code script execute task pre define met script typically although necessarily distribute ledger blockchains propose definition smart contract breath mention definition define smart contract  enforceable agreement  computer although input enforceable legal enforcement obligation via tamper proof execution computer code mainly focus code script blockchains program blockchain smart contract facilitate contract without rely trust technically smart contract program contains data account balance executable code smart contract blockchain automatically execute pre met execution smart contract update blockchain smart contract corda corda source permissioned blockchain platform explicitly account highly regulate environment financial service within corda node certificate network identity legal identity communication corda node transaction fully encrypt private smart contract corda consist code legal prose associate legal prose refer traditional legal legal dispute smart contract performance smart contract corda namely executable code command executable code mainly validates transaction data existence content agreement input output transaction command additional data within transaction mainly executable code verify transaction smart contract programmed kotlin java compile java virtual machine jvm bytecode chain chain smart contract due blockchain technology smart contract deployed blockchains chain smart contract generally execute validate node relevant transaction visible entire blockchain network reduces privacy smart contract smart contract complex computation transaction user fee transaction ethereum validation relevant transaction due replicate execution smart contract node alternative towards chain smart contract propose chain smart contract execute outside blockchain unlike chain smart contract chain smart contract execute interested participant propose chain smart contract generally encapsulate function involve computation private information participant chain smart contract conduct non sensitive task preserve benefit blockchain chain smart contract chain disagreement execution chain smart contract chain smart contract fork chain smart contract execute blockchain dispute blockchain platform smart contract blockchains public non public category public blockchain platform user network non public blockchain platform permit user public blockchains ethereum neo non public blockchains fabric quorum blockchain platform smart contract bitcoin user script develop smart contract logic platform ethereum advanced program smart contract ethereum release july ethereum grown become popular blockchain platform smart contract ethereum decentralise turing machine namely ethereum virtual machine EVM execute script international network public compute node ethereum program solidity vyper develop complex smart contract application smart contract compile format ethereum bytecode execute EVM ethereum  namely ether ether transfer account compensate participant computation perform ethereum adopts internal pricing mechanism transaction compute resource transaction fee ether transaction transaction fail user transaction miner faster increase price mechanism ethereum allocate resource mitigate spam network trust execution environment tee preserve confidentiality privacy smart contract effort integrate trust execution environment TEEs blockchains tee secure processor ensures sensitive data isolated environment enclave data inside enclave access code reside enclave within enclave code data hardware enforce access policy operating application tamper eavesdrop application inside enclave unless hardware breach realization tee intel sgx prominent tee technology trustzone etc tee trust host blockchain code enclave methodology overview methodology series interview expert developer insight smart contract development survey validate finding interview detail conduct interview survey overview methodology interview protocol conduct semi structure interview specifically interview introduction explanation research demographic interviewee discussion interview excerpt http github com   blob interview pdf probed interviewee difference smart contract development traditional software development impact challenge involve perform various smart contract development activity etc interview semi structure dig deeper interview participant viewpoint appropriate interview interviewee important information interview totally interviewee candidate detail participant recruitment interview methodology employ interview interview saturation finding saturation widely methodological principle qualitative research data collection analysis unnecessary data analyze hitherto specifically data already sufficient data collection generate information sample continued account finding behavior brain substantial variability experimental across population interview participant background saturation interview author conduct interview upon interview previous interview insight finally interview achieve saturation finding interviewed information interviewee interview perform remotely via skype wechat google  audio permission participant average standard deviation interview respectively demographic interviewee accord interviewee average software development smart contract development interview besides various role developer tester project manager architect designer ceo CTO research assistant smart contract trainer extent guarantee heterogeneity participant recruitment contact potential participant multiple email smart contract developer github contact developer smart contract development   expand initial snowball additional participant recommend participant finally participate interview data analysis interview audio transcribed text author transcript convert coherent meaning perform sort identify category sort commonly technique derive category data sort namely sort predefined category data sort predefined category category sort totally derive data hybrid sort combine previous exploratory category challenge smart contract development unknown advance adopt sort analyze interview data specifically sort textual cluster meaningful topic theme subcategories evolve category sort obtain hierarchical structure category researcher non author involve sort analyze verify researcher sort identify category security debug program ethereum virtual machine online resource community category subcategories detail survey survey demographic smart contract demographic mainly understand background respondent specifically demographic respondent role development etc software engineering smart contract development educational qualification project blockchains mainly smart contract validate insight analyze interviewee comment category security debug program ethereum virtual machine online resource community identify analyze interview response survey respondent rate statement likert strongly disagree strongly others respondent option survey http github com   survey respondent recruitment statistic potential survey respondent developer contribute smart contract related project github identify project refer topic github chose topic related smart contract ethereum solidity truffle repository topic ensure popular smart contract project github api project description readme keyword smart contract manually checked smart contract related repository repository obtain email account analyze commit distinct email address developer involve multiple repository randomly smart contract developer survey invitation email response response rate percent response rate report prior besides github developer broadcast survey colleague interested participate survey another response response respondent respondent percent respondent role development percent respondent advanced respondent expertise software development smart contract development percent respondent software development percent percent respondent smart contract development percent percent respondent mainly developed smart contract public blockchains ratio developer mostly spent source project source project percent respectively data analysis response respondent adopt analysis specifically vote option option calculate vote ratio vote option respondent comment respondent remove comment meaningful related research topic research remain comment correspond category obtain interview analysis comment involve category belonging debug security split comment assign category whenever survey comment refer refers fifth survey respondent understand participant perspective smart contract development survey respondent demographic voting towards various challenge desire improvement mention interviewee prior demographic respondent developer dev respondent tester respondent project manager PM respondent software development  respondent software development  respondent medium software development remain respondent  respondent smart contract development  respondent smart contract development  respondent medium smart contract development remain respondent  respondent advanced adv respondent without advanced  respondent mainly develop public blockchains  respondent mainly develop non public blockchains  respondent develop public non public blockchains  demographic calculate respondent strongly respondent strongly disagree individual challenge desire improvement mention interviewee respectively adopt fisher bonferroni correction tend vote differently fisher statistical significance analysis contingency display frequency distribution variable strongly strongly disagree vote ass difference proportion ratio strongly vote statistically significant bonferroni correction wise error rate conduct multiple comparison detailed analysis finding report finding category identify sort interview content category subcategories subcategory meaningful comment highlight statistic derive survey response highlight generalizability finding voting demographic towards challenge desire improvement mention interviewee relevant significance brief summary interview survey security requirement code security interview survey emphasis ensure code security smart contract security concern bypass factor highlight survey respondent contract security concern operational security concern manage deployed contract management contract artifact management permeate decision survey percent respondent assertion smart contract development requirement code security traditional software development highlight interviewee theme increase focus security smart contract development sensitive information handle smart contract manage sensitive digital asset virtual currency token digital file etc naturally concern security traditional software developer code requirement code security asset irreversible transaction unlike traditional software development user cannot recover loss transaction blockchain financial smart contract smart contract blockchain transaction cannot revert lose lose forever developer mention smart contract development  lose impossible cannot revert transaction blockchain code  deployment code smart contract cannot deployed blockchain unlike traditional software developer cannot patch fix bug smart contract fundamentally regular program due blockchain deployed smart contract guarantee security percent survey respondent guarantee security smart contact development interview uncover aspect difficulty public code access highlight interviewee code smart contract ethereum publicly accessible anyone exploit code attack execute smart contract focus attacker willing exploit loophole burden smart contract developer secure code potential attack developer mention blockchain environment unique environment code ecosystem deployed publicly accessible anyone anyone exploit conduct attack security vulnerability within code hacker defend code easy anyone flaw compiler another factor guarantee code security compiler compiler traditional program compiler smart contract mature security bug within smart contract compiler compiler continually evolve bug uncovered future developer aware discover security bug within compiler version bug encounter within compiler evolves risk solidity code unseen flaw within future version compiler besides survey respondent comment compiler constantly backward compatibility ensure correctness code project due constant compiler backward compatibility usually solidity rapidly complains code identifies compiler version deprecate feature version project update contract version correspond deployed code ignore screen warning lack code interviewee highlight harder cod security smart contract development traditional software development mention interviewee effort organization  constantly develop organize developer code mention  smart contact update tend adopt however developer effort meeting requirement smart contract application development interviewee mention  smart contract independent developer develop something cannot gonna whatever lack technique verify code correctness traditional software development developer various ensure quality code whereas smart contract development interviewee complain mature verify correctness smart contact specifically mention desire guarantee code security code audit formal verification technique percent survey respondent desire respectively code audit developer discover bug security breach violation program convention reliable code audit comprehensive analysis smart contract code analyze code potential bug security convention violation formal verification technique ensure security code mathematical proof interviewee survey respondent hop research survey respondent mature robust formal verification  code coverage correctness formal verification security secure code focus develop smart contract application developer ensure security challenge interviewee mention code review ensure correctness smart contract detail ensure quality smart contract mostly understand situation smart contract interviewee conduct code coverage potential challenge smart contract verify survey survey percent developer conduct percent developer perform integration percent developer perform performance code coverage function coverage percent vote statement coverage prefer percent developer mention respectively despite medium smart contract program percent survey respondent smart contract traditional software project challenge smart contract rat survey respondent challenge developer scenario exist potential unseen flaw compiler virtual machine mature framework java challenge smart contract code review percent survey respondent code review essential ensure correctness smart contact survey statistic reflect review perform reality percent respondent perform peer code review within percent respondent request github code review percent developer hire agency audit code meanwhile traditional software development interviewee mention costly perform code review smart contract mention challenge code review verify survey challenge consume conduct code review percent respondent developer comment within member participate code review sometimes discus code indeed improve code quality consume challenge qualify developer security flaw smart contract percent respondent survey respondent comment cannot unless another developer smart contract without spending extra fund developer involve source debug debug painful interview participant complain painful debug smart contract code traditional software development survey developer percent survey respondent debug smart contract application semi structure interview category debug challenge option developer survey category briefly described lack powerful interactive debugger smart contract development recent technology lack powerful debugger domain interviewee explain debugger remix bytecode debug developer interaction cannot visualize memory code variable percent survey respondent lack powerful interactive debugger debug painful challenge smart contract development non informative error message interviewee highlight apart lack debug solidity smart contract development EVM environment smart contract display informative error message interviewee explain solidity cannot error message code instead exception transaction EVM display error message failure transaction fails highlight interviewee sometimes transaction fail EVM cannot exception developer totally debug highlight previous lack debug smart contract development curious explore smart contract developer debug code interview survey summarize debug smart contract developer survey percent respondent exist debug remix truffle debugger debug buggy code however another percent respondent mention manually comment code narrow buggy code percent respondent mention additional variable transaction attribute exist variable transaction percent respondent survey mention request github community developer forum stack overflow encounter bug aforementioned debug interviewee mention primitive inefficient future community develop powerful debug developer easy quickly visualize smart contract execution graph smart contract solidity dependency graph format highlight debug execution enormous difference program limitation solidity unlike traditional software developed mature purpose program java python smart contract developed specifically program solidity survey program barrier smart contract development percent survey respondent concern specific program solidity vyper  smart contract development however solidity production developer others solidity issue mention interviewee emerge mature limitation survey interview limitation solidity lack purpose library survey statistic percent survey respondent reuse exist library development however percent respondent exist library smart contract development interviewee respondent implement various library manipulation library ideally verify standard library smart contract development reinvent manipulation lack error reporting unlike traditional program solidity printing error developer challenge develop debug smart contract developer opine feature error reporting available difference development future lack standard interviewee mention scarcity standard erc token standard interface development community mention standard interface erc token important purpose library lack standard currently lack safety data interviewee mention solidity safety data solidity safety data compiler cannot rely compiler bug inconvenient external function interviewee mention passing parameter external function odd developer cannot directly pas define structure function instead split pas solidity struct recognize within smart contract solidity packaging struct  sort data structure useful lack memory management interviewee mention solidity allocates memory invisible cannot developer develop smart contract resource constrain environment solidity disguise underlie operation prefer personally sometimes solidity actually conflict underlie allocate memory  resource constrain environment sometimes ideal constrain local variable interviewee solidity limited local variable developer variable affect efficiency code function local variable cannot compile variable storage stack memory lose program efficiency refactor code desire solidity improvement community limitation developer concerned survey respondent improvement solidity limitation interview text option allows respondent relevant improvement interview besides solidity option completeness vote percent survey respondent solidity developer concern mainly focus availability library purpose library percent vote standard interface percent vote error reporting function percent vote data percent vote external function percent vote improvement developer solidity improvement developer solidity ethereum virtual machine EVM limitation EVM unlike traditional software mature virtual machine jvm clr smart contract ethereum blockchains execute relatively virtual machine namely ethereum virtual machine traditional VM jvm EVM limitation survey percent respondent vote limitation EVM challenge prevent effectively develop smart contract limitation EVM mention interviewee limited debug failure developer code fails unfortunately debug feature information limited EVM although EVM exception informative error message developer clue comment developer exception code actually transaction fail EVM sometimes exception cannot thrown totally lack traditional popular program rust python EVM EVM instead solidity vyper newly smart contract community developer familiarity popular program applicable EVM incur considerable amount familiar python really EVM python inefficiency bytecode execution execution bytecode EVM speedy due thread accord interviewee mitigate developer execute bytecode efficiently EVM thread machine cannot transaction parallel inefficient execute bytecode requirement timely reaction verification transaction developer harder limited stack EVM stack machine computation perform stack stack maximum item item limited stack painful developer code smart contract interviewee slightly complex smart contract easily limit stack considerable amount redesign code developed relatively complex application application compile additional temporary argument code split function function code ugly desire improvement EVM identify desirable improvement EVM community focus survey EVM desirable improvement derive initial interview survey respondent improvement desire addition predefined choice respondent option survey respondent propose complementary improvement improvement developer EVM depicts EVM improvement option respondent popularity respondent choice debug desire percent survey respondent improvement improvement execution bytecode percent ability program desire percent respondent interestingly although interviewee EVM  stack limit desire percent respondent survey respondent satisfied feature EVM percent vote interviewee mention significant difference smart contract development traditional software development mechanism mechanism unique smart contract development execution smart contract user fee developer attention consumption smart contract development interviewee mention difficulty encounter handle attention consumption mention platform ethereum mechanism execution smart contract majority interviewee mention consumption deserves attention later validate survey percent survey respondent declare paid attention consumption develop smart contract accord interviewee consumption specially important interviewee explain public blockchain platform ethereum resource smart contract translate actual paid user user developer conscious resource consumption contract ethereum blockchain execute tight constraint resource translate actual transaction failure due insufficient amount interviewee mention EVM transaction smart contract sufficient amount transaction fail indeed survey percent respondent encounter transaction failure specify transaction transaction fail met transaction failure due insufficient application difficulty handle survey percent respondent optimization painful complex application accord interviewee aspect contribute difficulty perform optimization estimation source code developer desire optimize source code bytecode intuitive source code unfortunately currently exists estimation source code optimize source code respect consumption developer alternatively resort available estimation bytecode remix fully reflect source code approach hence intuitive error prone render developer perform source code optimization bytecode dynamic estimation optimize code modify code modify program consumption previous program modify consume actually demand effective source code estimation mention majority interviewee directly identify source code costly tremendous accord interviewee estimation ideally compile code source code tradeoff optimization code readability accord interviewee optimize without hurt code readability tricky code efficient shorter basically instruction instruction tends code readable dilemma online resource community interviewee traditional software development online encounter smart contract development resource mentor scarce smart contract blockchain percent survey respondent vote lack online resource supportive community challenge prevent effectively develop smart contract online resource analyze interview survey developer mainly mention online resource reference code standardize knowledge date documentation lack reference code interviewee online reference code reuse smart contract application scratch programmed python javascript framework code solidity code something internet scratch lack standardize knowledge survey respondent comment strict standardize knowledge developer code easy chaotic non standardize knowledge strict standard recommendation erc community intentionally scam unintentionally bug later exploit basically mature approach interviewee highlight importance cod convention python code code standard anything solidity code interviewee developer smart contract percent survey respondent lack guidance challenge guidance lack date documentation interviewee mention documentation date due evolution relevant outdated documentation developer  documentation truffle solidity web  evolve update developer documentation really inconsistent date interviewee enrich documentation important truffle code medium complicate application truffle code truffle smart contract smart token building truffle really truffle really community interviewee although community smart contract development increase limited encounter review code cannot easily relevant developer mention technique community development sometimes cannot timely community stuck another interviewee comment code review javascript python feedback solidity feedback hobby developer rely community feedback code review gonna whatever survey challenge desire improvement mention interviewee challenge smart contract development challenge developer stage cod debug smart contract development desire improvement solidity EVM respectively ratio respondent vote correspond challenge desire improvement challenge improvement respondent rat challenge desire improvement percent respondent rat challenge smart contract development challenge desire improvement mention interviewee survey voting challenge desire improvement mention interviewee survey voting overall voting individual challenge desire improvement mention mainly focus analyze voting demographic towards challenge desire improvement description methodology detailed voting voting demographic towards challenge desire improvement mention interviewee voting varied demographic ratio   percent ratio percent  another ratio dev PM percent respectively ratio difference statistically significant challenge desire improvement apply fisher bonferroni correction demographic role dev versus versus PM software development  versus  versus  smart contract development  versus  versus  education adv versus  blockchains  versus  versus  conduct challenge improvement fisher bonferroni correction relevant difference statistically significant  versus  bonferroni correction  versus  bonferroni correction adv versus  bonferroni correction certainty developer smart contract development  significantly likely rate limited online resource community challenge smart contract development median  percent versus percent developer mainly non public blockchains desire  limited global local variable solidity mainly public blockchains  percent versus percent developer without advanced  desire EVM traditional program advanced  percent versus percent summary analysis interview survey data smart contract requirement code security however developer currently effective assure code security code audit formal verification technique highly desire currently developer mainly code review ensure code correctness debug primitive inefficient debug painful powerful interactive debugger informative error message badly undesirable characteristic solidity difficulty passing data external function limitation variable compiler backward compatibility reliability issue due rapidly compiler unseen flaw EVM non informative error message limited stack inefficient execution due thread EVM challenge program smart contract effectively efficiently source code estimation optimization code readability lack code community library standard smart contract development future direction security reliability smart contract developer perceive security critical smart contract report highlight vulnerability affect security smart contract reentrancy bug etc developer smart contract development aware vulnerability code duplication smart contract paste development paste vulnerable code easily infect code developer detect repair vulnerability prevent relatively mature bug automate code inspection exist conventional software findbugs facebook infer etc however statically identify smart contract vulnerability exist detect smart contact bug oyente relatively demonstrate efficacy false positive false negative rate findbugs conventional software smart contract fuzzing concolic augment exist static analysis improve efficacy besides formal verification demand reduce adverse impact smart contract vulnerability researcher formal verification correctness smart contract however approach mature demonstrate smart contract program repair recently become mature industrial adoption facebook automate program repair fix apps smart contract specific repair automatically patch vulnerability smart contract generic repair patch specific vulnerability novel program transformation extend exist java   potentially solidity transformation specify semantic patch apply patch exist smart contract suffer vulnerability developer mention bug solidity compiler serious issue bug translate vulnerability unreliable execution smart contract mature compiler gcc buggy compiler bug demonstrate extent exist compiler identify bug solidity compiler adapt effective solidity developer code prevent introduce vulnerability systematic literature review catalog vulnerability repository vulnerability specific smart contact fashion cve another operationalizing cve another factor affect smart contract development aside security factor affect smart contract development highlight aspect smart contract development research advance program virtual machine solidity ethereum VM infancy developer encounter difficulty develop smart contract due limitation memory management multi thread etc highlight opportunity research additional feature solidity ethereum VM additional consideration feature specific constraint smart contract unique deployed distribute manner multi thread ethereum VM non trivial miner cannot simply execute contract parallel perform conflict access data arbitrary interleave inconsistent recent propose feature technical novelty feature popular program java solidity popular VM java VM ethereum VM non trivial exist propose research introduce additional complexity prevent adoption research develop additional offs ethereum VM solidity designer maintainer promising approach direction community decision carefully implication another direction enable developer code choice restrict subset code translate solidity recent research explore transform java developed transform code javascript developer solidity solidity code resource management smart contract developer optimize efficiency constrain stack local variable etc harder developer focus feature manual optimization consideration issue readability developer optimize various constraint estimate bytecode developer source code developer recommendation optimize code automatically safely transform code readable developer satisfy constraint another code satisfy constraint readable seamlessly demand non trivial research direction exist research program transformation library construction developer serious library code redundancy deployed smart contract highlight developer reinvent surprising software built library library comprise percent web application identify reusable component smart contract organize easy easy library clone detection code categorization potentially employ construct library security consideration construction library ensure vulnerability library dependency evolution maintenance deployment smart contract developer mention smart contract deployed modify workarounds address evolution contract difficulty impact user  data logic smart contract contract data contract logic contract delegatecall registry contract version contract etc however systematic advantage disadvantage maintenance option explore possibly develop maintenance evolution deployment prevent smart contract evolution adversely affect developer user solidity api frequently backward compatible developer evolve solidity code api evolution explore exist research solidity api novel developer express desire date documentation valuable approach automatically update generate documentation link documentation source internet exit recommend adaptive documentation evolution detect api documentation error direction user smart contract technology potential financial domain development nascent facilitate widespread adoption smart contract finance investment european reconstruction development  international swap derivative association  firm  researcher develop standard construction execution validation smart contract legal technical perspective related construction smart contract noticeable developer smart contract finance domain expert enable financial expert smart contract directly without intermediary intermediary introduce  bug simplify domain specific ABB simplify enable user directly program robot smart contract development involve specialized domain specific text code program synthesis bot clarify requirement financial expert etc prior technology feasible specialized domain effort invest threat validity internal validity survey interview however conclusion interviewee comment alleviate threat interview transcription sort interview comment perform verify researcher besides potential survey respondent conduct pilot developer survey feedback option refinement subsequently developer comment survey respondent dishonest due various reduce bias effort survey invitation explicitly mention personal information disseminate survey respondent anonymous untraceable email address anonymous email address accord confidentiality anonymity obtain bias survey respondent besides advice medium intend respondent translate survey chinese ensure respondent china understand survey survey english chinese english   chinese spoken analysis similarly conclusion survey respondent perception comment alleviate threat survey comment external validity strategy previous interview saturation finding interview prior admit notion saturation finding introduce interviewer subjectivity risk information avoid interviewer interview interviewee interviewer schedule interview conduct interviewer memo interview interviewer capture relevant information interview information interviewer reduce unfair subjective bias discussion saturation finding comprehensive comparison previous interview multiple interviewer collectively recall detail exist population insight acknowledge opinion interviewee representative agreeable community reduce threat ensure interviewee various role expertise developer trainer  develop smart contract application etc comment uncovered various insight challenge smart contract development validate interview finding conduct survey developer respondent mainly recruit github risk ignore developer proprietary smart contract development unlikely permit respond survey cannot guarantee finding generalize relevant smart contract practitioner however respondent educational qualification contribute various project source source project blockchain platform public non public blockchains diversity background extent survey project valuable insight challenge smart contract development improve generalizability finding encourage researcher replicate developer future related highlight related smart contract empirical smart contract developed smart contract challenge opportunity domain outside smart contract empirical smart contract rapid growth smart contract development motivate series empirical mainly aim explore characteristic potential impact smart contract summarize development lesson evaluate exist program technique propose feasible strategy smart contract program alter undo etc application domain verify smart contract bitcoin ethereum  investigate immutability smart contact ethereum analyze smart contract implement ponzi scheme ethereum mention feasibility perform criminal activity ethereum leak secret document summarize mistake smart contract program avoid mistake apply theory smart contract data summarize security correspond lesson implementation privacy preserve smart contract domain evaluation usability security smart contract program assessment exist smart contract technique ethereum overview various static analysis apply smart contract formal semantics security definition verification overview exist smart contract analyze smart contract research challenge formal verification program analysis apply smart contract utility logic smart contract explore blockchains   exist formal concurrency smart contract   developed standard alter undo smart contact attention paid traditional developer lawyer contract argue formal handle counter financial smart contract derivative combine temporal  operational aspect formalism definition blockchain software engineering avoid smart contract issue unlike mainly focus perform empirical analysis specific aspect smart contract specific application domain security explore challenge developer smart contract development interview survey identify barrier prevent developer effectively develop smart contract smart contract various propose resolve smart contract related detect bug guard data privacy quality smart contract creation manual analysis due smart contract bug tend costly substantial effort detect vulnerability smart contract correctness smart contract developed oyente identify pre define security bug transaction dependency developed maian identify greedy  suicidal smart contract developed  detect reentrancy bug fuzz attempt identify related propose approach inspire model technique compute consumption smart contract propose detect potential ponzi scheme ethereum developed securify detect security bug inspect smart contract behavior violate semantic derive data dependency within smart contract detect vulnerability reachability analysis effective callback detection developed contractfuzzer detect security vulnerability generate fuzzing input EVM attempt predict potential vulnerability identify irregular token sequence developed  detect potential xpath developed  automatically generate exploit smart contract binary code propose random NSGA II multi objective approach generate effective suite smart contract explore potential apply mutation smart contract correctness smart contract researcher propose formal verification perform analysis smart contract interactive theorem provers  hol etc recently formalize semantics EVM bytecode proof assistant developed  formal semantics EVM framework evaluate effectiveness verify EVM smart contract propose verification framework  intermediate representation specifically verification apply formal verification temporal smart contract alt built smt formal verification module inside solidity compiler compilation user automatic warning counterexample potential unreachable code assertion failure etc  kripke model modal logic atomicity protocol atomic chain swap express hash  smart contract besides formal verification researcher propose abstract smart contact conduct relevant verification task guard quality confidentiality data involve smart contract execution data  trust input data smart contract data request secret others sánchez  propose  securely execute smart contract guarantee privacy correctness verifiability propose framework desc automatically access domain secure data exchange data owner smart contract creation   propose semi automatically smart contract translate textual contract smart contract propose framework  developer smart contract finite machine program  introduce caller capability atomic operation explore  domain specific target financial contract blockchains described meadow allows user interact simulate operation  contract combine simplicity program smart contract formal semantic categorical model facilitate addition local definition function bound loop domain specific computationally compiler namely  bitcoin smart contract  creates smart contract symbolic expression compiles expression bitcoin script understand analyze smart contract propose framework vandal decompiled EVM bytecode developer analyze bytecode via logic specification developed  generate pseudocode binary code smart contract developed  user understand contract without  smart contract additionally propose smart contract execute parallel adapt technique software transactional memory developed  recover smart contract violation dynamically unlike aim develop specific technique smart contract focus identify challenge developer smart contract development identify developer desire advanced debugger source code estimation advanced formal verification technique etc builder develop developer challenge opportunity challenge correspond opportunity specific domain software mostly related challenge direction blockchain orient software engineering define professional role enhance security reliability develop novel software architecture model ensure effective activity etc mainly challenge direction develop blockchain orient software blockchain platform blockchain application unlike specifically challenge smart contract blockchain application development practitioner concrete actionable direction researcher practitioner facilitate development smart contract briefly summarize issue challenge concern embrace blockchain technology regulation blockchain etc unlike adoption blockchain instead focus explore challenge opportunity develop smart contract blockchain platform survey compute technology challenge compute similarly challenge compute adoption perspective interoperability issue deserve substantial attention  outline scientific engineering challenge autonomic compute   controversy myth surround data summarize challenge opportunity data  challenge opportunity software development core compute knight summarize challenge direction develop safety critical  challenge automotive software engineering explore relevant challenge software software development mobile application respectively investigate barrier unmet developer adoption continuous integration challenge development contributor integrator perspective empirical understand refactoring challenge benefit microsoft unlike explore challenge opportunity topic development smart contract summarize category challenge identify potential research direction specific smart contract domain conclusion future smart contract originally refers automation legal contract recently due blockchain technology popularly refer code script blockchains investigate challenge developer develop smart contract focus ethereum platform interview survey smart contract development infancy generally accepted secure smart contract code exist development toolchain powerful development runtime platform program virtual machine limitation online resource community limited finding summarize concrete actionable direction researcher practitioner future automate smart contract patch solidity compiler source code optimization automate solidity library construction etc progress direction facilitate smart contract development