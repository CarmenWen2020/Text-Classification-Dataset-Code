static analysis  findbugs propose software development community detect security vulnerability program however adoption hinder false positive rate false positive rate developer  violation report concrete severe bug overlook fortunately violation actually address resolve developer violation recurrently fix likely positive automate approach repair unseen violation however lack systematic investigate distribution exist violation fix insight prioritize violation developer effective code fix developer easily understand violation fix fix unfixed violation across revision software empirical analysis reveal discrepancy distribution violation detect fix occurrence category insight prioritize violation automatically identify violation fix propose approach utilizes convolutional neural network feature cluster regroup instance evaluate usefulness identify fix apply unfixed violation developer accept merge majority fix generate infer fix noteworthy yield applicable bug defectsj benchmark software automate repair introduction software project widely static code analysis ass software quality identify potential defect commercial source integrate software project operating development project java project adopt findbugs pmd project   clang static analyzer linux driver code systematically assess battery static analyzer sparse  toolkit developer benefit program environment guarantee identify defect bug static analysis detect defect security vulnerability performance issue program code recent denote defect static analysis violation alert remainder simply refer violation violation instance detect findbugs violation tag BC   comply program implementation obj assumption obj argument detect violation  java file revision  project  maven plugin later address developer via patch return false obj obj argument   lang  thrown fix violation commit  project  maven plugin despite adoption popularity static analysis findbugs downloads accept guaranteed violation identify static analysis ignore developer static analysis yield rate false positive actually false positive violation serious concern fix likely runtime environment incorrectly identify due limitation context developer simply static analysis prioritize violation criterion nevertheless regard violation positive recurrently remove developer source code otherwise violation ignore remove revision disappear file program entity remove project instead fix investigate research regard RQ extent violation recur project RQ violation actually fix developer positive RQ violation code fix unfixed developer identify code violation understand static analysis RQ violation resolve developer violation derive fix summarize violation bug resolution apply fix unfixed violation RQ fix systematize resolution violation shed effectiveness fix apply potential defect investigate violation violation fix source java project although approach generic static bug detection focus namely findbugs apply revision project identify violation revision enumerate consecutive revision involve resolution violation source code violation revision absent code mapped violation location refer violation fix conduct empirical analysis identify violation fix violation investigate recurrence code etc violation fix project ast differencing developer fix static analysis violation approach encodes fix vector wordvec extract discriminate feature convolutional neural network cnns  cluster cluster algorithm evaluate suitability fix apply subset unfixed violation subset fault defectsj subset violation source java project overall contribution dataset static analysis violation carefully systematically tracked static analysis violation across revision project dataset substantial effort available community label format violation fix information release dataset unique sample findbugs violation across revision java project along code address violation empirical management findbugs violation explores violation widespread across project contrast recurrence developer non fix specific category insight prioritization research limit  due overwhelm false positive contribute towards improve adoption analysis reveal violation systematically ignore developer violation category recurrently address mining violation code insight violation prioritize towards enable static bug detection adopt violation fix mining propose approach infer fix violation leverage cnns cluster algorithm leveraged subsequent research direction automate refactoring comply project  linux kernel development automate program repair fix ingredient exist par fix leveraged developer rapidly systematically address priority static violation percent sample unfixed violation immediately address infer fix violation patch apply fix unfixed violation actual bug program demonstrate potential approach infer effective potential automate patch generation fix developer accept fix generate fix indeed generate patch merge source project noteworthy static analysis uncover important bug leveraged automate repair bug defectsj benchmark detect findbugs fix immediately applicable fix bug remainder organize propose violation approach mining code cnns response research limitation outline survey related conclude discussion future intermediary notably statistic violation detailed appendix computer society digital library http doi org ezproxy auckland tse methodology aim uncover code related static analysis violation developer fix unfolds apply static analysis violation program violation across program revision identify fix unfixed violation mining code violation mining fix fix violation detail technique employ overview violation violation program apply static analysis revision associate project source code resource intensive focus findbugs although applicable static analysis facebook infer google  etc sensitive option detect violation define findbugs violation description individual violation instance tuple information violation enclose program entity project commit file location violation detect violation dataset violation NP null  java file within commit  project findbugs java bytecode source code violation tracked across revision project automate compilation accept project apache maven automation management apply maven command  package install compile revision project eventually successfully automatically violation violation consists identify identical violation instance consecutive revision apply static analysis specific revision project obtain violation version another violation revision violation introduce exist disappear however code violation non trivial task static analysis report violation source code file commit modifies source file location violation unable identical violation consecutive revision precise identification fix violation suffer false positive negative identify unfixed fix vice versa potential identical violation revision propose violation heuristic file violation heuristic location potential violation code diffs offset correspond violation code diffs difference offset regard identical violation code snapshot snippet text code snapshot correspond violation revision identical violation previous heuristic successful applies hash useful file violation rename heuristic computes hash adjacent token violation hash revision refer reader detail heuristic technique developed task propose fuzzy matcher violation source location revision source code file package rename violation heuristic software however precise automatically apply violation revision identify fix violation violation resolution individual violation violation resolution outcome violation disappear due delete file enclose violation violation exists revision code indicates violation fix violation resolve specific code deletion source code literature refer outcome unactionable violation false positive actionable violation positive inspect violation focus outcome yield unfixed violation outcome yield fix violation revision violation subsequent revision later revision violation violation resolve removal file code violation location source code diff classify fix violation otherwise unfixed violation mining code goal understand violation induced achieve goal code fragment violation localize identify fix violation unfixed violation approach mining code formalize definition code justification technique approach namely cnns cluster algorithm preliminary definition code code refers generic representation source code fragment definition related definition source code entity code context definition source code entity sce source code entity hereafter entity identifier denotes node abstract syntax ast representation sce identifier sourcewhere ast node identifier textual representation raw token ast node respectively definition code context ctx code context tuple extract fin grain ast subtree associate code ctx sce   sourcewhere sce entity  entity sce  sce entity  code context ctx sce leaf node entity  definition code CP code tuple CP    sourcewhere  abstract entity identifier abstract concrete representation specific identifier affect semantic characteristic code  concrete entity identifier concrete semantic characteristic code abstract entity entity code specify actual instance concrete entity characteristic code cannot abstract otherwise code  code context definition explain relationship entity code code extract source code  contains array entity  variable entity variable var literal entity  abstract identifier  var abstract identifier variable identifier abstract literal identifier entity abstract related entity attribute  consists  return entity invocation entity  identifier entity cannot abstract otherwise attribute extract code code violate source code expression code var   return node entity abstract null entity node entity affect code representation code  contains code context explains relationship entity code  code context source code entity  consists sce contains identifier  sce null sce entity code context others source code entity leaf node entity null others suitability convolutional neural network code discriminate code feature compute reliable metric similarity majority feature extraction strategy perform fix sample code fragment consist multiple code entity variable code entity embody local feature code fragment feature combine reflect overall feature code fragment adopt technique enable extraction local feature synthesis global feature characterize code fragment code fragment  classical cluster algorithm objective classifier output classification label code fragment code patch instead adopt unsupervised lazy extract discriminate feature code fragment patch code recently empirical evidence naturalness software recent preliminary variant convolutional neural network effective capture code semantics accurate classification code implementation across program inspire naturalness hypothesis treat source code violation document apply cnns address objective feature cnns biologically inspire variant multi layer artificial neural network leveraged lenet model involves upper layer layer compose alternate convolutional subsampling layer local capture local feature input data upper layer fully correspond traditional multi layer perceptrons hidden layer logistic regression classifier synthesize local feature capture previous layer choice cluster algorithm classical algorithm widely challenge err protocol specify cluster lack prior knowledge approximate cluster infer rely extend version effectively automatically estimate bayesian information criterion refining abstract syntax code infer token extract ast code fragment node identifier preliminary observation reveal token generically tag  leaf node interfere feature code fragment variable node  node    leaf node generic ast challenge distinguish node hence refining generic ast reduce confusion algorithm illustrates algorithm refining generic ast refine ast construct generic ast label node specify  leaf node generic ast node simplify node construct combine discriminate grammar label identifier label related remove refine ast algorithm refining generic ast input generic ast output refine ast trf function   trf  label  node label specify  leaf node remove  related update label identifier trf foreach   trf   return trf model respectively generic ast refine ast code fragment return statement refine simplify architecture becomes easy distinguish node refine ast generic ast node node array simplify  variable  simplify variable invocation  simplify  although node  identify node  obtain information refine ast node variable  respectively consequently becomes easy distinguish node refine ast generic ast node understand implementation induce static analysis violation approach mining code detect violation summarize ingredient code violate static analysis approach involves phase data preprocessing violation mining illustrate overview code mining data preprocessing findbugs report violation specify code hunk relevant report violation location violation challenge code code hunk directly textual expression violation code therefore parse refine ast convert token vector token vector embed wordvec convert numeric vector fed cnns discriminate feature violation code violation tokenization violation numeric vector violation tokenized textual vector code hunk violation parse refine ast tokenized textual vector traverse refine ast depth algorithm obtain token ast node another identifier raw token node code int tokenized vector token  int variable violation vector token noisy information node meaningless variable etc interfere identify violation variable rename combination data var variable int rename  token embed wordvec widely adopt technique numeric vector format input data token embed perform wordvec yield numeric vector unique token eventually violation embed dimensional numeric vector vector vector embed token token vector throughout violation correspond numeric vector pad comply algorithm requirement workaround append vector vector consistent vector wordvec layer neural network purpose embed convert numeric vector numerical representation token fed neural network simply query identify relationship relationship compute cosine similarity vector wordvec strives regroup vector lack similarity express angle similarity express angle false boolean literal java cosine similarity false similarity token violation vectorized dimensional numeric vector embed vectorized violation denotes token vector violation numeric vector embed token denotes dimensional numeric vector embed token append numeric vector consistent generic refine ast code fragment cnn architecture extract cluster feature convolutional layer subsampling layer output dense layer extract feature code fragment cluster cnn architecture extract cluster feature convolutional layer subsampling layer output dense layer extract feature code fragment cluster overview fix mining overview fix mining operation patch code mining although violation parse convert dimensional numeric vector challenge code noisy information specific meaningless identifier interfere identify violation recently promising various software engineering task advantage prior knowledge effort feature machine application consequently deeply discriminate feature mining code violation leverage cnns perform violation feature embed violation cluster algorithm cluster violation feature feature cnns cnns architecture violation feature input dimensional numeric vector preprocessed violation alternate local convolutional subsampling layer capture local feature violation dense layer compress local feature capture former layer output dense layer violation feature cluster violation approach cnns extract feature violation code fragment contrast normal supervise application classify label training clearly violation cluster label feature violation cluster violation cluster algorithm weka implementation cluster violation finally manually label cluster identify code violation cluster code fragment violation clearly mining automate mining fix goal summarize violation resolve developer achieve goal violation fix proceed identify fix approach mining fix mining code difference data collection tokenization approach mining fix formalize definition patch fix preliminary patch modification program source code repair program erroneous runtime patch capture knowledge modification behavior patch associate behavioral definition patch patch source code fragment buggy version another update bug fix version traditional gnu diff representation patch buggy version fix version patch formalize   sourcewhere   fragment buggy fix code respectively text empty cannot empty simultaneously  patch purely fix bug patch remove  otherwise empty patch replaces patch fix bug convert array   patch  java file within commit acb project analyze difference buggy code fix code patch patch manually summarize abstract representation address bug abstract representation indicates specific identifier abstract concrete representation abstract patch representation formally define fix  semantic patch  fix leveraged systematically apply patch address collateral evolution due api manually summarize fix patch however consume investigate automate approach mining fix formal definition fix definition fix FP fix code context extract buggy code operation apply buggy code generate fix code formalize FP ctx CO sourcewhere ctx code context abstract representation buggy code CO operation definition apply modify buggy code definition operation operation tuple contains action source code entity sub operation formalize action sce CO sourcewhere action action  del INS mov entity sce  update action update target entity del delete action denotes delete target entity INS insert action insert entity mov action indicates target entity CO sub operation sub entity action entity operation leaf node entity CO operation patch operation entity   action  return entity sub operation sub entity  entity others operation leaf node entity sub operation null fix fix bug fix define bug fix appendix available online interested reader mining concrete patch fix related specific bug limit syntax semantic structure buggy code statement limited return statement parameterized array limited additionally variable interfere patch bug however abstract patch abstract aforementioned  various mutation bug convert array hence patch massive various patch specific bug conjecture fix expose bug indeed generally fix immediate appropriate address automatically  buggy mobile software andy chou designer coverity bug report bug actually understood development community buffer overflow defect decade vein approach fix static analysis violation extract developer manual correction illustrates mining fix data preprocessing define definition fix contains operation infer buggy fix version source code file code patch described operation abstract syntax difference ast diffs contrast gnu diffs code pure text edit script ast diffs hierarchical representation apply code entity statement expression leverage source gumtree extract operation implement patch gumtree associate source code publicly available replication improvement built eclipse java model patch tokenized textual vector traverse ast diff algorithm extract action  entity  entity identifier return token action   return patch token embed vectorized numeric vector described fix mining patch text programmer leverage daily request communicate community currently available patch perform directly specify operation remove gnu diff without interpretation although patch parse convert dimensional numeric vector challenge fix noisy information specific interfere identify patch effectively discriminate feature patch mining fix similarly violation code mining leverage cnns perform patch feature preprocessed patch cluster algorithm automatically cluster patch feature finally manually label cluster fix violation abstract cluster patch fix clearly empirical datasets project curated database github com  project satisfy constrain criterion project commits java unique fork another project project filter project automatically built apache maven subsequently project execute findbugs compile code revision commit version project revision findbugs successfully identify violation apply procedure described data project violation project commits violation detect violation associate define findbugs apply violation violation distinct violation identify statistic detect violation quickly investigate RQ extent violation recur project focus aspect violation occurrence project category distribution statistic merely confirm distribution phenomenon defect detail appendix available online supplemental interested reader directly refer replication package code data http github com  findbugs violation overall around percent violation related percent violation occurrence however violation project percent violation widespread actually occurrence lesser widespread finally although violation define findbugs related correctness majority percent violation occurrence associate  code security related violation account percent violation occurrence although widespread across percent project violation fix although overall statistic violation detection variety recurrence violation investigate violation fix developer RQ appendix available online supplemental detail sub thoroughly RQ violation developer concerned RQ fix violation per proportional detect violation RQ distribution fix violation per category refer interested reader statistic detailed insight overall identify violation instance fix developer code identify fix percent violation percent project significantly proportion violation eventually fix postulate violation program issue neglect majority developer another plausible explanation limited violation checker findbugs percent project associate findbugs commit refer findbugs percent associate commit message refer findbugs violation fix developer suggests violation related potentially false positive ratio static analysis lack developer due minor severity necessity implement practical prioritization violation respect RQ violation percent fix violation associate percent fix violation percent fix violation percent project developer concerned violation fix violation sic inner static anon DLS local respectively performance  code issue respect RQ compute fluctuation ratio metric violation ass difference rank detection fix indeed violation account percent violation detection account percent vice versa metric allows perceive violation prioritize identify violation NM  convention fluctuation ratio although occurrence rate fix rate developer violation NP  return violation  fluctuation ratio although occurrence detection priority fix developer detailed difference detection fix ratio data insight detection report fix prioritization strategy violation finally respect RQ investigation reveal fix violation largely dominate  code performance category although correctness overall  percent fix violation fix occurrence interestingly  fix category fix instance across percent project DM convert DM default encoding violation widespread throughout project overall  code performance issue address developer correctness issue however although majority fix developer fail address portion  straightforward resolve uniformly statistic developer accept fix correctness issue comparison empirical findbugs violation literature related findbugs violation substantially comprehensive representative data project violation category overall project data project lab project representative development investigate correctness related violation  violation category limited violation category violation ignore violation category comparison empirical findbugs violation additionally investigates detect violation distribution aspect occurrence category metric prioritize violation nevertheless false positive findbugs threaten reliability violation prioritization statistic detect violation previous discus aspect reduce threat investigate distribution fix violation violation attract developer attention resolution probability positive reliable prioritization metric violation reporting focus objective focus evaluate importance static analysis warning production software  author findbugs program issue aim assess percentage issue findbugs actual defect research apply research eventual goal fix findbugs violation code mining empirical finding violation across project violation fix developer overall distribution unfixed violation detection violation investigate research unfixed fix violation respectively RQ focus sub RQ code unfixed violation fix respectively RQ relationship difference source code unfixed violation fix RQ violation remain unfixed avoid dataset due distribution focus instance instance violation violation developer concerned fix apply approach mining code identify code unfixed violation fix respectively  findbugs false positive location detect violation incorrectly report findbugs detect violation correctly developer treat false positive warn serious concern fix false positive threaten mining reduce threat validity due false positive related incorrect localization focus mining recurrent fix violation location likely developer manually checked address issue setup findbugs report violation specify code hunk relevant violation challenge error prone code code hunk limit hunk illustrates distribution code hunk code hunk associate violation percent violation relevant code hunk limited code manually calculation hunk reliable due presence comment annotation unnecessary blank violation token distribution code token violation discard outlier focus violation code token extract refine ast abstract representation patch hunk distribution violation hunk distribution violation distribution violation token vector distribution violation token vector methodology described violation numeric vector wordvec parameter vector min frequency feature extraction implement cnns parameter literature consistently report effective model wordvec application tune parameter parameter model tune visualize network training UI deeplearningj detect MS violation project  RI redundant INTERFACES violation commit project math fix RI redundant INTERFACES violation commit eab  core project parameter cnns parameter cnns finally weka implementation cluster algorithm extract feature code violation parameter setting cluster enumerate parameter parameter code violation code fragment generic ast automatically simply recur fragment cluster yield approach manually ass assign label investigate code fix violation unfixed respectively overall unfixed violation yield fix violation unfixed fix identify code violation code violation manually checked yield violation assess respect findbugs documentation DM ctor violation refers constructor inefficient instance integer guaranteed integer whereas integer  allows cache compiler library jvm cached avoid allocation code faster creation constructor DM FP  violation code approach consistent static analysis documentation carefully checked violation percent adequate respect documentation appendix available online supplemental detail violation code mining approach yield consistent violation description documentation static analysis focus investigation yield unfixed violation code inconsistency bug description findbugs discover violation exceeds enumerate findbugs documentation MS violation analyzer encounter static public malicious code accidentally another package besides public static declaration identify violation code static declaration inconsistent description findbugs inconsistent detection findbugs project  developer confront findbugs warn message code address undocumented bug inconsistent documentation violation RI redundant INTERFACES warn implement interface already implement super code associate super constructor invocation however violation location declaration manually RI redundant INTERFACES java RI redundant INTERFACES violation indeed redundant interface declaration code however detect RI redundant INTERFACES violation super constructor invocation declaration code confuse developer increase perception false positive rate RI redundant INTERFACES violation  findbugs however report highlight background precise confuse developer code violation resolve violation remain unfixed imprecise detection false positive findbugs improve address issue accurate reporting violation location update documentation finally challenge identify code violation cluster violation instance despite abstraction ast specific DLS local violation variable assignment specific operator source code challenge identify code variable assignment statement identify ast node information alone practically impossible code fragment related DLS local violation potential DLS local violation remain unfixed findbugs cannot violation accurately enumerate scenario detect violation code NM  convention violation violate convention however source code violation tracked findbugs source code cluster cluster identify cannot explain violation induced interpret behavior actually abstract description inefficient identify violation convention without behavior source code violation irrelevant source code instance   constructor indicates initialize within constructor load reference without null accord instance violation source code violation statement violate java irrelevant violation source code cluster obtain cannot explain violation therefore inconsistent bug description violation locates declaration SE  violate java implement serializable interface define  violation findbugs impossible identify code violation interpret source code violation inaccurate localize violation mislead confuse developer developer prefer fix violation violation  RI redundant INTERFACES declaration combine source code related fix violation easy source code fragment violation fix RI redundant INTERFACES violation interface java util implement super  fix remove  java util interface violation associate code infer relevant immediately understand violation induced violation code however partly due limitation findbugs code fragment specific fix mining investigate ultimate research violation resolve fix RQ dissect violation fix propose cluster relevant fix infer fix cnn approach described curate dataset violation fix filter related violation localize file indeed focus mining related developer actual program code violation fix involve modification violation location file constraint excludes data fix file dictate automation strategy compute ast edit script simplify focus violation location file violation associate fix local violation violation fix apply relatively away violation location correspond ast edit script action perform within violation location constraint conservatively remove false positive violation actually fix identify fix violation due limitation violation violation code fix code token previous source code hunk generally address feature addition refactoring etc bug fix bug fix hunk meaningful bug fix bug fix hunk percent ignore hunk minimal impact analysis consequently threshold token fix violation overall fix mining approach apply violation fix associate violation parameter wordvec cnns identical code mining cluster violation automatically ast diffs although approach computation subsequence repair action fix semantically meaningful naive empirically effective approach infer fix recur ast edit script cluster code occurs identically finally label assign manually careful assessment relevance focus fix violation mining fix summarizes violation detail fix fix fix violation infer ast edit script violation  redundant   described ast representation violation refer reader replication package overall ast edit script format translate fix delete null expression code context concretize var null expression null conditional expression  concrete patch delete violate expression similarly exp null expression expression  patch remove null expression exp null exp null expression expression  patch delete violate expression complexity automatically generate patch abstract fix entire research direction future generate patch manually fix fix  redundant null  violation infer violation fix instance commit  project apache  propose fix mining approach effectively cluster fix violation fix mining protocol applicable derive meaningful listing violation fail identify fix   constructor SF switch default   inconsistent sync VA format USES  sql prepared statement   obl unsatisfied obligation obl unsatisfied obligation exception OS OS exception  database resource NP parameter  marked  listing enumerates violation mining approach yield sample per cluster within cluster strictly redundant action sequence observation reveal failure fix mining violation fix completely node fix RV return  violation replace violate expression invocation encapsulates detailed source code violation specific source code fragment fix violation generally commonality violation fix apply violation code location mining systematically violation listing violation associate literal fix VA format USES  violation replace within unfortunately ast node focus compilable code token literal ignore guarantee sufficient abstraction concrete patch usage effectiveness fix finally investigate fix actually resolve violation RQ sub RQ fix apply automate management unfixed violation RQ fix leveraged ingredient automate repair buggy program RQ fix effective systematize resolution findbugs violation recall automates generation fix patch generation scope perform manually fix account code context resolve unfixed violation apply fix subset unfixed violation illustrate  violation suitable fix generate patch cosine similarity violation code feature vector built cnns feature vector centroid fix violation cluster associate fix fix regard positive fix unfixed violation patch candidate derive address violation ensure program apply patch candidate compilation findbugs longer warn location manual author reveal inappropriate semantics program behaviour data subset unfixed violation fix violation described data evaluate effectiveness fix violation unfixed violation instance centroid correspond fix violation cluster evaluation summary statistic unfixed violation resolve fix overall unfixed violation data percent fix fix percent fix percent fix within positive fix mainly cluster fix candidate suggests enlarge fix candidate cannot effectively positive fix target violation unfixed violation resolve fix fix unfixed violation fix fix across violation DM ctor DM FP ctor fix fix DM FP ctor fix candidate DM ctor violation fix DM FP ctor fix DM ctor violation vice versa almost unfixed violation sample dataset systematically resolve fix violation fix developer unfixed violation immediately successfully fix fix fix violation effective resolve related unfixed violation various situation notably related specificity violation code imprecision findbugs violation report lack detailed appendix available online supplemental fix bug attempt apply fix relevant fault document defectsj collection defect java program dataset largely program repair data findbugs buggy version java project establish defectsj bug detect static analysis violation detectable findbugs reasonable bug defectsj functional bug fail specific program violation relevant bug fix associate violation manually generate patch generate patch candidate pas fail correspond bug findbugs cannot identify violation fix regard positive fix bug bug fix fix generate patch fix semantically equivalent patch developer bug violation bug indeed eliminate fix generate patch bug suite pas bug fix context information fix bug lang identify EQ  override  violation fix override obj generate patch bug fix without remain bug specific code challenge plausible fix without context fix bug defectsj fix fix bug defectsj fix static analysis violation bug program fail functional fix contribute automate fix bug defectsj dataset systematically fix findbugs violation conduct evaluate effectiveness fix systematize resolution violation source project source java project github com september findbugs compile version associate program localize static analysis violation source java project data focus violation instance fix violation randomly evaluate data violation patch generate manually previous patch program compiles previous violation location flag findbugs anymore patch request submit patch project developer overall manage patch developer project patch ignore reject nevertheless patch improve developer immediately merge request json project merge identical patch apply later developer fix violation finally patch apply attach issue probably later replacement distribution delay acceptance accepted merge improve patch percent patch accepted within percent percent accepted within patch longer accepted acceptance delay shorter median distribution patch submit linux kernel delay acceptance summarize accepted patch verify developer although accepted patch verify developer argue bias source code accepted fix violation consistent description document findbugs fix likely acceptable developer fix violation revision project verification accepted patch fix effective fix violation furthermore generate patch eventually quickly accepted developer yield insight related static analysis violation insight maintain project prone violate commonly address violation violation listing revision project RI redundant INTERFACES occurs json project suggests violation recurrence variant issue violation recurrence revision software project prioritize violation future listing violation project sic inner static NM  convention sic inner static anon NP parameter  marked  NP  return violation   private  database resource SE  insight developer positive patch fix bug exist project fix infer developer lang project fix bug report DM convert violation findbugs improve patch propose cannot generate patch fix related locale dataset limitation exist patch revision insight developer accept plausible patch unnecessary likely useful reject patch  implementation obj developer accept patch glimpse reject source code reading context violation implementation obj belongs inner static generic insight violation fix fix backward compatibility application developer reject patch violation reject patch MS violation java file ant project backward compatibility   eclipse project insight violation impact  prefer zero  refers findbugs array return return zero array null fix replace null reference correspond zero array developer ignore reject patch violation null prevent violation null violation invocation identify NP null violation  prefer zero  useful insight fix program fail compile fix RV return  violation statement return boolean violate source code return violate source code violation boolean copying behavior fix directly violation compilation error insight fix program fail checkstyle patch generate MS violation  java file camel project project fail checkstyle insight fix violation controversial fix DM ctor violation replace constructor static  integer integer  integer  integer revert repeatedly developer integer outperforms integer  developer integer  outperforms integer additionally developer report  efficient  infer DM ctor DM FP ctor violation identify revise specific function otherwise developer prone ignore violation overview fix violation fix improve patch project reject patch project reject patch backward compatibility reject patch backward compatibility patch program fail checkstyle patch program fail checkstyle  threat validity threat external validity focus findbugs static analysis specific violation fortunately code described findbugs violation violation described static analysis NP null violation findbugs null dereference violation facebook infer  violation google  issue null pointer dereferenced  code execute fix NP null findbugs fix distinct project null dereference violation detect facebook infer  violation detect google  respectively potential generalizability infer fix acknowledge however difference findbugs violation static analysis violation another threat external validity fix violation source project finding applicable project specific policy related code quality threat internal validity limitation underlie findbugs gumtree gumtree unfeasible edit script reduce threat extra label gumtree findbugs violation inaccurate reduce threat violate source code bug description violation findbugs findbugs yield false positive reduce threat focus fix violation fix violation really concerned developer fix violation address fix fix violation highly positive fix highly effective resolution threat reduce develop advanced threat internal validity involve limitation violation false positive fix violation combine commit  diffs parse gumtree reduce threat irrelevant code context interfere mining statement contains complex expression irrelevant token violation filter increase interference reduce validity replicate future extract analyze violate source code relevant code context identify dependency graph violation replace invocation encapsulate detailed source code fix correspond violation propose extract source code source code violation challenge extract source code fix violation reduce validity planning integrate static analysis technique detailed source code insight unfixed violation proportion violation remain unfixed software project investigate potential situation code unfixed violation fix commonly mainly due violation code characteristic instead enumerate implicit observation statistical data comment fix violation source project actually developer findbugs development chain percent project commit mention findbugs interestingly project percent fix findbugs violation explicitly refer findbugs commit message static analysis findbugs yield significant false positive violation developer violation indeed highlight code detect violation inconsistent description findbugs interaction developer confirm developer findbugs violation severe deserve attention development violation identify findbugs controversial fix violation controversial insight finally developer willing fix violation fix unfortunately findbugs report violation hint towards gap systematically harvest knowledge developer fix related static analysis classification actionable unactionable violation static analysis violation investigate aspect attempt classify actionable likely positive unactionable false positive violation machine technique classify recur alarm prune identical alarm subsequent release hash code cod analysis identify recur violation model technique constraint solver verify violation prune false positive trivial violation report findbugs treat false positive developer cannot identify previous negligible issue trivial address developer investigate violation recurrently address developer reduce threat identify positive violation violation prioritization violation prioritization ranked developer focus important rank prioritizes violation observation error trend leveraged bayesian statistic rank violation prioritization utilizes program prioritize violation addition attempt leverage user feedback rank violation however investigate violation violation multiple aspect reliable insight violation rank mining empirical useful various purpose explore bug fix java program understand developer program fix bug fix however schema related addition  insight par leveraged pre define fix automate program repair fix fix bug martinez  investigate repair model utilized program fix zhong conduct bug fix source project analyze anti interfere automate program repair however code statement grain extract grain code extend version gumtree mining code   generate code code snippet extract edit script application  focus refactoring code clone  edit script  extract applies access template sensitive operation objective address issue faulty code program static analysis bug  implement algorithm syntactic program transformation program defect submission however mostly useless across assignment really defect violation genesis heuristically infers application independent code transform multiple application fix bug code transform tightly couple syntax bug null pointer bound cast defect generalize approach  mining fix bug dataset fix static analysis violation application independent closely related concurrent fix mining code fix pmd violation approach aim code template systematically apply refactor code approach scenario variety violation bug datasets datasets bug propose literature evaluate approach software software repair defect prediction approach contribute technique experimentation platform associate dataset sir database widely debug suite optimization respectively propose   benchmark bug detection similarly propose  benchmark bug localization similarly benchmark obtain extract historical bug data bug data promise repository variety datasets software engineering research GenProg benchmark bug propose defectsj evaluate software repair approach dataset recent widely java bug associate suite ensure reliability identify violation correspond patch project exist bug datasets focus bug program fail pas data static analysis violation fail pas program repair recent program repair achievement mainly research fully automate repair patch hint suggestion former focus automatically generate patch integrate program without intervention patch generation patch verification patch functionality apply program verification achieve suite automatize violation repair future latter technique code fragment patch generate patch integrate developer suggestion patch verify manually patch generation fully automate repair automate program repair pioneer GenProg approach leverage genetic program patch buggy program acceptability systematic evaluation regard acceptability issue advocate GenProg generate nonsensical patch propose par issue par leverage patch define fix template generate acceptable patch  leverage bug fix project patch candidate random recently  proposes approach ingredient automate repair code technique GenProg relies randomness utilize program synthesis technique directly generate patch limited subset bug notable approach contract fix program repair behavior model conditional statement repair focus fully automate program repair automate fix mining violation patch hint suggestion patch suggestion explore diverse dimension  generates repair hint statistical analysis investigate automatically generate patch debug aid  suggests patch bug report patch  focus potential performance defect suggests specific patch fix defect closely related patch hint suggestion fix target violation difference fix developer patch submission static analysis violation empirical program repair explore program repair  criticize issue patch generation patch plastic surgery hypothesis theoretically illustrates  bug program  analyze issue population patch generation argument overfitting issue program repair technique impact patch generation technique linux kernel development benchmark program repair propose program benchmark replication conduct recently investigate distribution code entity impact bug fix grain granularity static analysis findbugs pmd involve bug fix conclusion investigate recurrence violation fix source java project yield finding insight prioritization violation developer researcher improve violation reporting propose approach code fix static analysis violation leverage cnns identify fix evaluate apply fix unfixed violation manage generate patch accepted developer community eventually merge source java project interestingly fix effective address bug defectsj benchmark combine fix mining automate program repair technique generate violation fix automatically violation version project postulate violation recurrence future variant issue violation recurrence historic fix violation trend violation direction violation prioritization