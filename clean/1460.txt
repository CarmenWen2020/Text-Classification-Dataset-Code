app analysis information application obtain app app wealth information derive user exist application distribute via previous software deployment app analysis combine non technical information technical information trend behaviour within software repository finding app analysis actionable impact software develop software app technique requirement engineering release planning software security survey describes research explore aspect trend direction future research address challenge introduction app recent phenomenon app google launch accumulate excess downloadable  apps google announce billion activate android device september mobile app extremely lucrative online mobile app project worth combine billion USD app coincide consumer adoption smartphone device smartphones exist prior launch user truly exploit extra compute versatility downloadable apps commercial application available launch app app difference availability compatibility variety user submit content user submit content fundamentally distinguishes app hoc commercially available application exist beforehand software engineering researcher access software application customer feedback commercial performance data unavailable previous software deployment mechanism furthermore readily available downloadable toolkits user application smart device hardware subsequently publish software central app user possibly publication review certification policy apps app update available quickly typically within survey literature performs app analysis software engineering november contribution formal definition apps technical non technical attribute app analysis research growth app analysis literature overall emergent subcategory analyse app sample discus likely progress future identify publish app analysis addition aspect trend future direction reader understand progression overall definition definition clarify component app analysis literature relevant literature app item software anyone suitable platform install without technical expertise app collection apps app non technical attribute technical attribute attribute obtain solely software non technical attribute attribute cannot obtain solely software attribute data previous diagram attribute distinctly technical non technical boolean others grey precise interpretation obtain software alone grey cannot technical strictest definition guaranteed obtainable solely software attribute non technical technical obtain attribute developer app whilst attribute strictly non technical app author attribute android software author obtain solely distribute apk file however compile binary program author cannot obtain directly binary file author attribute therefore belongs grey obtain binary attribute technical cannot obtain price file non technical attribute attribute attribute strictly technical non technical attribute category centre definition app simplistic however app collection apps enable developer distribute content enable communication channel user developer via review therefore definition aim inclusivity launch app already devote apps rapid development concept apps app likely evolve aim encompass evolution definition future survey upon app analysis literature overview survey structure describes literature growth trend non technical research technical research growth apps subfield app analysis identify define app analysis subfields literature explain api analysis feature analysis release engineering review analysis security ecosystem effort prediction closely related guideline recommendation future app analysis author outline identify potential future direction conclude finding literature literature scope repository lesson future app analysis surveyor scope app analysis literature encompasses perform analysis collection apps app particularly interested combine technical non technical attribute pioneer research opportunity app however app software repository validate apps specific malware verification apps publish app survey systematic literature review slr app analysis develop maturity research chosen define literature aim define curate disparate literature argue demonstrate indeed exist coherent research app analysis software engineering enable future SLRs apply inclusion criterion related software engineering actionable consequence software user developer maintainer related mobile app concern collection apps non technical data app apply exclusion criterion focus mobile app development extend collection apps app arbitrary collection apps app extend app methodology relevant literature date scope define perform systematic define repository define unique decision inclusion criterion stage title remove publication clearly irrelevant title abstract inspect abstract remove publication clearly irrelevant accord scope define fully judgement requirement define app analysis scope relevant expand literature literature context requirement survey summary accepted stage validation reference survey available online repository query query generates available inspect title subsequent abstract accepted valid repository perform repository google scholar scopus  acm arxiv encompass sub app analysis identify app mining api feature release requirement review security ecosystem perform specific query quote verbatim app analysis app analysis mining app analysis mining api app analysis mining feature perform ensure relevant literature survey app analysis api app analysis api app analysis feature app analysis mining requirement app analysis mining release app analysis mining review app analysis mining security app analysis mining ecosystem mitigate threat conduct app analysis mining subfields app analysis literature definition app analysis research collection apps encompass perform snowball mitigate threat potentially however threat threat validity survey snowball addition repository specify perform snowball inspect cite publication subsequently cite google scholar acm perform addition repository keyword reduce risk relevant literature omit survey report likely app propel mobile app usage become widely adopt launch incorporate technical non technical app information emerge later november overlap query perform discover query sum discover snowball summary literature histogram depict growth publication app analysis software engineering split technical technical non technical research split subfields identify subsection survey split apps respectively breakdown sub identify histogram research incorporate non technical information technical research november histogram sub trend november histogram research grouped app quantity november histogram depicts apps apps pie overall sub distribution november lesson query upon inspection title abstract perform google scholar app  mention app app analysis narrow relevant mining keyword encompass app analysis research due focus collection apps app definition however snowball technique crucial literature discovery repository upon relevant reference fully stabilize therefore encourage future surveyor app analysis repository assist discovery app analysis literature non technical research software engineering primarily code confine strictly technical source information combine data multiple technical non technical source app wealth information percent incorporate non technical information app infer technical attribute feature extract useful information bug report feature request user histogram incorporate non technical information boom technical research growth linear regression growth trend accuracy indicates predict percent accuracy publication discus apps research define assign app quantity ascend accord apps assign research research app quantity november median apps literature apps quantity apps magnitude reflect almost app usage literature histogram apps growth reflect histogram apps important data apps uncertain frequency future likely apps anticipate future growth app analysis literature increase quantity apps app timeline timeline depict highlight launch app subsection timeline advanced app analysis introduce influential respective timeline app analysis literature primary  parenthesis api analysis extract api usage app apks source code combine information non technical data summarise api analysis literature apps android platform due availability  apps extract api freely available apply app binary surprising analysis perform platform iOS launch iOS binary available intend platform cannot desktop computer without developer account account app binary source code neither freely available due copyright binary iOS apps paid apps due difficulty uncertain future extract api information iOS apps become harder iOS developer submit llvm IR intermediate representation binary compile specific platform chronological summary api related app analysis literature author publication publication venue apps api analysis literature decompose api usage reuse inheritance fault permission security overlap latter nevertheless literature directly analysis api usage relate usage although research relates indirectly app reader recent  api analysis literature hitherto apps android platform apps apps api usage   association mining infer api usage dataset source android apps author extend  usage api document extract usage report android documentation publicly available approximately extract api usage regard user interface UI layout statistic category google exist explore hotspot apps transform uis ranked UI component consumption author approach apps google  apps google droid inspect api usage apis stackoverflow discussion similarity apps identify apps source code source project detect license violation extract api information evaluate apps code complexity api dependency api quality factor feature distinguish rat apps api usage extract android apk file analysis android platform relatively straightforward extract information analyse usage detect malware analyse graphical detect license violation reuse inheritance reuse inheritance android apps category google apps exactly another app category later extend apps evidence substantial code reuse author conclude app developer benefit increase productivity risk dependence quality code reuse  lanza visual analytics web repository apps analysis snapshot apps throughout version interactive graphical user interface subsequent source android apps author api code incorrectly commit along app code instead correspond jar file exclude code apps comparatively code additionally author inheritance android apps duplication introduce  google crawler daily data apps  apps author native library heavily popular apps approximately quarter apps duplicate apps paid apps account percent downloads percent popular apps account percent downloads june linares vásquez decompiled analyse apks google percent detect clone replicate library propose  app plagiarism detection transition graph  capture app behaviour detect clone presence code obfuscation apps google false negative related scan api invocation identify  application sophisticated approach similarity detector scan code handle code obfuscation propose  phase android clone detection filter library increase detection author android apps zero false positive code reuse google inheritance comparatively rare apps code replicate code instead compile jar file clone plagiarism detection widely topic reuse inheritance literature fault linares vásquez analyse fault prone core google apis app rating important combine technical api information non technical information average user review ass impact api usage fault prone apis frequently poorly rat apps conversely popular apps apis susceptible fault analysis randomly apps review fault api bug fix respectively associate core library building linares vásquez linares vásquez approach recommendation android app developer platform update avoid introduce bug author extend api analysis identify apis usage combine non technical app information investigate fault apis affected apps rating inverse correlation popularity apps fault apis rat apps apis fault prone highly rat apps survey android developer confirm relationship anecdotal combine technical api usage non technical user rating information highlight api usage android development platform independence source code quality defect prone source file heavily platform author therefore prioritise platform dependent source file quality assurance strategy perform static analysis google apps category findbugs warning frequently rat apps category  performance warning rat apps developer focus achieve rating performance fault prone apis frequently poorly rat apps fault prone apps heavily platform non fault prone apps permission security   api permission data malware classifier validate malware sample benign sample validation insertion UI handler app code publish puma UI automation programmable enables researcher analyse correctness apps apps google   app binary apps google analyse library permission usage correlation library permission request apps conclusion library tend specific additional permission user security concern library suppose permission conjunction suggests library usage significant security concern library exist permission privilege increase permission request advertisement library app rating combine non technical rating information extract technical information advertisement library usage perform advertisement library query host server regular interval fetch advertisement display interval determines advertisement rate multiple library obtain rate increase revenue sample apps author evidence correlation rating advertisement library however apis median rating apps author due intrusive behaviour password vector machine api usage information identify outlier cluster security purpose shelf static analysis insufficient permission api investigate alternative apps android analyse description api usage android apps disparity description request permission due combination factor unnecessary permission request app building framework developer manifest multiple app project secondary functionality mention description library related android apps propose  focus decompilation program slice identify apps leak developer user password program execute normally decompiled apps google feature decompiled code variable machine classifier label instance apps location contact information identify sensitive information paid android apps paid apps personal information apps percent paid apps personal information percent apps author subsequently percent android apps tracker correlation library permission request advertisement library sometimes intrusive behaviour password treatment personal data topic permission security api analysis future available avenue future api analysis literature alternative platform extract api usage android apps remains intermediate representation potential api analysis app hinder effort phone platform relatively recent api analysis utilise platform google launch android app analysis literature api usage api analysis future seek usage varies literature api usage differs apps popularity rating potential difference category feature analysis extract feature information technical non technical source information summarise research platform android iOS nokia  blackberry phone addition publication investigate apps minimum maximum chronological summary feature related app analysis literature author publication signifies google android signifies app signifies nokia  platform signifies blackberry signifies samsung android signifies phone publication venue apps chronological summary feature related app analysis literature author publication signifies google android signifies app signifies nokia  platform signifies blackberry signifies samsung android signifies phone publication venue apps feature extract app description api usage manifest file decompiled source category permission extract feature information source source code requirement additionally extraction categorisation feature processing topic model cluster analysis app collection augment meaningful technically orient information freely available app feature analysis literature broken classification cluster lifecycles recommendation verification overlap feature detect anomaly verify app functionality classification extract feature information manifest xml file api google apps classifier feature differentiate category proof concept malware detector machine classifier predict app category extract feature feature prediction extract decompiled app code request permission rating rating app approach apps peak auc roc curve bayesian tan classifier mobile app classification nokia author apps classify apps data web device user apps approach outperform classification technique enable automatically classify app onto predefined category app taxonomy built construct classifier feature app description category rating file classifier vector machine BM scheme feature user manually classify apps app google training validation classifier feature app installs review category rating conjunction feature information machine classifier rating app security risk extract feature decompiled java code collection apps google extract feature classifier predict location contact information percent percent accuracy respectively feature extract classifier differentiate category rate app security predict sensitive information cluster apps google perform cluster app description request permission activation malware detection approach later extend propose malware detection link description security permission identify suspicious outlier perform cluster apps google apply topic model app description resultant cluster apps assign category apps category dissimilar description topic distribution perform correlation analysis user apps frequently downloads correlate rating app   perform cluster apps google description category cluster description cluster feature basis app recommendation author later built extract feature app description enrich information web app enrich feature instal app recall interface functionality categorisation interface validate perform user participant apps faster categorisation intuitive reference smart launcher interface apps app extract feature keywords description processing cluster apps extract feature categorise cluster apps google blackberry app author cluster apps similarity feature extract description quality cluster quality exist categorisation apps author conduct assessment app similarity within cluster granularity correlation similarity technique assessment description cluster apps functionality cluster assign category identify outlier cluster assign category tend assign category outperform feature classification quality lifecycles propose theoretical characterisation feature lifecycles app app developer identify trend undiscovered requirement investigate app feature  non  behaviour app feature app description technique earlier propose theory empirically analyse  non  behaviour non feature samsung blackberry reveal feature generally migrate category characteristic however feature migrate apparently non related category identification feature developer undiscovered requirement author approximately feature  neither migrate feature exhibit significantly behaviour regard important price aware  feature category developer identify crucial requirement apps feature migrate apps category  feature migrate exhibit significantly  feature recommendation propose actual tempt model perform app recommendation user model incorporates latent tempt parameter apps model incorporates user app subsequently app model feature overlap information perform topic model app description compute topic overlap author approach outperform collaborative filter initial topic model twitter message user app twitter generate latent related app recommendation remove app recommendation metadata apps app author outperform recommendation app description topic model app description recommendation model semi supervise incorporate app version information correspond update newer app version recommend feature description resultant topic category app recommendation model apps app daily paid apps app february september information apps popularity information construct popularity hidden markov model  encode trend latent factor author variety app recommendation review spam detection demonstrate usefulness rank fraud detection built app recommendation combination technical information device permission request non technical information app popularity apps google scalability however evaluation recommendation perform topic model app description app resultant topic category improve augment exist categorisation approach app target user advertising dataset app install data per user basis consist apps huawei app author report click rate target approach exist   extract feature information google apps source assign user feature author approach service portfolio planning variety model app feature data incorporate hidden latent factor subsequently recommend apps user target user advertising category   conduct  platform earlier app nokia phone non smartphones finding transferable app gain active user popular feature chat increase popularity proportion active user chen liu apps app correlation rank rating sample popular apps introduce app mining msr mining software repository app information perform correlation analysis price downloads rating correlation analysis perform app feature feature extract processing technique app description correlation rating downloads popularity propose approach apply app modify data extraction parse phase accommodate app structure data representation author later extend apps rating non apps medium developer survey extract feature meaningful successfully detect extract feature randomly generate feature empirical source android apps multiple category aim define metric bug report quality developer involvement author bug fix affected difference bug lifecycles security bug report quality associate bug fix slowly apps rating downloads bug report author bug report quality correlate description app rating conduct popular apps google analyse correlation app downloads external metric author positive correlation downloads register user app respective website correlation downloads app website inverse rank conduct user survey app description identify attribute important quality description vector machine resultant attribute sample description accuracy finding overview effective app description contains heuristic description style longitudinal paid iOS apps  rating review impact sale rank stable rating user associate app quality app sale increase rat apps google identify feature accurately differentiate apps rating rating author technical feature code complexity api usage non technical information category image displayed app important feature differentiate rat apps app image target sdk version influential feature suggests rat apps update frequently feature android operating rating review correlate sale rank feature app description basis correlation analysis meaningful developer survey verification introduce  framework extract theme tag android description permission file lda partially label dirichlet allocation PLDA purpose identify mislead app description app permission file establish description consistent functionality resides appropriate category apps google manually evaluate subset apps author achieve average percent category accuracy percent permission accuracy apps secondary functionality mention description apps machine classifier app feature detect spam apps feature classifier numeric statistic app description author label apps remove establish potential removal apps likely remove due spam majority remove boost classifier identify potential spam propose app generative model agm topic model extract semantically coherent app feature description occurrence statistic agm model perplexity topic model fitness function likelihood generate commonly model lda however model precision evaluate TF idf lda topic model topic model nevertheless importance accurate feature discovery representation future extract feature feature classifier spam detection validate app functionality future potential future feature migration alternative app literature apps blackberry samsung additionally future seek investigate migration feature app platform feature classify cluster apps recommend apps category however future apply recommendation direction useful developer recommendation feature implement apps highly desirable  feature release engineering discus focus app release release strategy summarise publish tackle issue recent influx prior november release typically series data apps release relatively surprising difficulty mining longitudinal data data chronological summary release engineering related app analysis literature author publication signifies google android signifies app signifies phone literature apps release engineering literature feature google platform blackberry samsung likely due difficulty obtain series data release engineering literature broken content strategy subsection content investigate update update advertisement library almost apps multiple update advertisement library update approximately percent advertisement update app code effort involve advertisement library update apps google frequent release percent release related finding code churn release correlate rating  yeh tracked android apps  sometimes adopt  adoption rate app description app developer sometimes update app description reflect apply author description communication channel developer user author report apps future research direction migration feature app feature migration terminology app update advertisement library update percent code churn correlate rating installation behaviour user recently update apps security related lee  factor affect app likelihood popular app apps likely survive frequent feature update important factor ensure survival along release category author volume positive review improve app likelihood survival   conduct longitudinal google apps daily percent apps update category issue stale apps affect aggregate statistic population author developer dominate productive developer popular apps correlation price downloads conduct longitudinal apps google phone author causal inference identify release impact rating downloads release text feature bug fix significant release release improve rating later extend sample apps google  paid apps significant positive expensive author contact developer significant release percent causal assessment percent release strategy finding positive review frequent feature update apps popular causal inference identify release impact rating downloads strategy publish definition app analysis incorporate technical non technical information analysis apps author app information iOS apps category paid mining apps analyse developer diversification publishing apps multiple category paid positive relationship rank app portfolio diversification incorporate technical rank non technical information category price identify actionable finding app developer   analyse release user activity app conclude sunday deploy version update effective strategy app rank datta  review app apps review deploy update thursday incorporate version information app recommendation ensure apps recommend feature update version apps app google  increase app release likely app perform badly release boost downloads neither google however update frequency google mining data mobile apps percent apps update per percent update author rating affected update frequency   combine app feature gain source approach app service portfolio planning app update likely app perform badly release boost downloads app multiple release factor immediate app release future due spike release engineering trend contribute app analysis literature split almost equally google potential future involve release blackberry phone developer strategy release behaviour associate positive potential future individualise recommendation strategy particularly useful app developer app rank review analysis literature concern app review summary literature majority focus google minority focus app blackberry review centre literature publish subsequently gain significant increase activity requirement review literature hypothesise due tenure progression chronological summary review related app analysis literature author publication signifies google android signifies app signifies blackberry literature apps review analysis literature mostly google invite future comparison review literature broken classification content requirement engineering sentiment summarisation survey methodological aspect app analysis focus content review advance sentiment requirement summarisation classification  review apps app manually label subset review spam spam author supervise decision unsupervised latent analysis identify spam review unsupervised achieve accuracy account factor average rating user apps rat maturity rating equivalent apps app google rating accurate rating author percent android apps underrated percent  author sample review google apps classifier app description user review iOS maturity rating automatically verify app maturity rating manually examine review google apps classify topic sub topic content information review concerned quality app security privacy concern devise approach identify comment security privacy issue  google app review author later built upon review rank security risk apps detect security label source approach  truth author outperform metric rank app security risk incorporate user review rely declare permission unsupervised machine approach identify apps error review apps author error information addition permission apps construct ranked recommender analyse app permission app moderator developed ensemble machine classifier classify user review review apps google app achieve precision recall manually label review review classify spam maturity rating privacy security risk research review detect erroneous apps content dataset review app analyse review vocabulary analyse review app majority mobile app review rating category influence review majority apps review apps analyse decrease user assessment quality denote rating author user expectation rapidly towards apps developer demand remain competitive price rating app influence amount user feedback receives review author review identify feedback positive negative comparative price related request requirement issue reporting usability customer versioning apps roughly split positive review feature issue review negative price related device submit app review optimal device google review source android apps link review code percent review request implement release apps directly implement content user review improve rating release bridge gap software attribute user review developed ontology software quality attribute app review response review google apps developer respond review however response percent user subsequently rating median increase individual user rating percent summary mobile app user feedback classification review content literature investigate vocabulary ontology review factor affect feedback device review submission requirement engineering developed review digest review google apps automatically categorise review bug report functional request non functional request digest feature informative review category  harrison automate  extract analyse app review identify feature request particularly useful intuitive approach identify request sixty apps review manually training linguistic review evaluation percent review feature request extension  previously introduce introduce linguistic identify feature request bug report facilitate app development   analyse textual content review apps japanese app review style apps category  rating review popular paid apps review mostly positive significant difference distribution category paid apps review rating standard deviation due review apps app credibility author argue app purchasing revenue model developer  paid version developed  topic model app description user review discard review topic enables developer inspect review discus feature app description author review apps automatically classify user review predetermine taxonomy software maintenance requirement evolution verify manually label truth extract review achieve precision recall training structure content sentiment feature maalej  classification identify bug report feature request user review author upwards percent precision percent recall obtain multiple binary classifier alternative multiclass classifier commonly nlp technique  removal  negatively affect performance classification task propose fusion performs static dynamic analysis android apps user bug report focus reproduce bug dynamic analysis android argue app review crowdsourcing argue user inadvertently perform crowdsourcing review apps request potential feature suggestion developer action recommendation user issue reporting requirement engineering review literature review extract bug report feature request addition prioritise critical review sentiment incorporate sentiment review sentiment describes user opinion typically positive negative content extract review positive sentiment negative sentiment hate terrible publish online app review author perform sentiment analysis app review facilitate requirement engineering    extract user requirement comment asum model sentiment aware topic model initial aid requirement summarisation significantly effort manual identification return requirement review health fitness apps app analyse review mostly sentiment rating review closely  manually categorise negative review sample iOS apps report frequent complaint apps review combine therefore review statistically representative sample percent confidence author manual analysis review percent sample concerned complaint recent update user dissatisfied issue relate invasion privacy unethical behaviour hidden negatively perceive complaint  maalej sample review app empirical summary user review behaviour feedback release positive feedback associate highly apps negative feedback associate apps user contextual information extract informative review negative sentiment review  maalej user sentiment towards app feature multi sample difference user sentiment google app developed diverse extract review specific query feature diverse review sentiment feature condense information author dataset earlier perform  sentiment analysis  user review apps app report opinion quality portion review opinion service quality sale sentiment analysis identify frequent user complaint prioritise informative review summarisation sample author analyse google review summarisation  enables summarisation review per review per app per useful overview competitor apps gathering information weakness sample review associate mining difficulty however  enables summarisation complaint praise review accurate sample fix inherent sample bias account author difference paid apps paid apps associate complaint price apps review google app developed automate label scheme identify multiple review beneficial stakeholder review feature request bug report label apply propose AR tracker AR miner automatically user review apps rank optimise representation review frequency importance pérez label user review google apps review categorisation identifies feature request bug report evaluate label review achieve accuracy analyse review google apps summary user perception hybrid apps native apps author hybrid mobile apps rating native apps native apps review average replicate multiple platform apps perception across platform developed identifies keywords review assist summarisation summarisation approach apply review kim propose  miner review summarisation categorisation evaluate review google apps intend developer visualisation review author survey developer apps useful review summarisation developer information review infeasible individually  AR tracker  miner survey methodological aspect app analysis identify app sample majority partial subset bias data app review analysis author assess bias identify technique ameliorate define classification scheme apply app review analysis dataset completeness review recent literature app review analysis suggestion improve app review user developer improve assign category review sort filter functionality assign category helpfulness rating author user feature assist developer quality review recent methodological analytical survey review analysis literature suggestion improve review highlight prevalent methodological issue app sample future aid summarisation requirement extraction review widely adopt developer future seek bridge gap available developer avenue research attempt review phone launch achieve widespread google app competitive comparison review taxonomy culture platform phone potential future security relate app security summarise remain stable proportion combine technical non technical attribute instead validation highly rat apps highly rat user security related literature popular apps generally assume non malware scan prior host user chronological summary security related app analysis literature author publication signifies google android android platform signifies app literature apps mobile app security app mention additionally literature identify potential risk associate permission beyond security threat collection apps benign apps distinguish benign malicious behaviour apps happens survey security literature broken fault malware permission plagiarism privacy vulnerability fault sample apps phone greybox fault detection sample apps failure DECAF detect advertisement placement layout violation advertisement fraud apps tablet phone extend detect violation DECAF microsoft advertising prompt developer comply layout  detects advertisement fraud request application background simulate user click advertisement apps google security percent apps advertisement request background apps simulated user click advertisement introduce iris performs static analysis iOS apps detect suspicious apps violate service author detect apps sample access sensitive user information private apis fault mobile application potential security risk fault analysis detect layout violation service violation advertisement library issue malware  google apps static dynamic apk analyser apps malware app outlier establish approach potential malware detection propose app risk rating metadata category permission malware apps evaluate almost apps google propose approach malware detection permission description information detect abnormal permission evaluate apps google permission validity malware successfully detect app malware triaging mast malware apps google assume benign   malware classifier sample malware sample assume benign apps google classifier information permission request api apps cosine similarity feature declare android manifest file detect anomaly presence malware benign later machine classifier distinguish malware benign apps google similarly propose  app malware assume benign software google  rate security risk apps prevent user instal malware unknowingly apps google assume benign google google  detect malware remove detect potentially malicious apps perform topic model app description apply cluster distinct cluster utilise api information app manifest author vector machine svm cluster detect outlier api usage apps exhibit sufficiently behaviour norm presence malware approach later extend malware  model report improvement resultant precision recall extract information data apps benign malware classifier classifier popular google apps assume benign rank category author combine non technical information rank extract technical information information detect malware report precision malware genome project  database machine classifier malware benign apps google identify malicious apps ham lee apps google category benign generate feature classification malware  runtime datasets malware apps benign apps feature achieve positive rate percent random classifier app date  apps google android  detects malware zero malware without prior knowledge malware comparison apps corpus sample apps achieve false positive rate false negative rate entire dataset  detect instance malware likely instance zero malware malware detection static dynamic analysis alternative source information description api usage data permission     apps google analyse permission significant correlation rho technical permission non technical price rank rating respectively highlight permission request apps percent apps request phone status identity source sensitive information apps android google apply permission analysis  detect declare permission author percent apps sample unnecessary permission compute spearman correlation coefficient popularity permission stackoverflow misuse library permission apps google library bundle apps version increasingly advertisement library advantage app permission potential security risk author argue app privacy legislation  automatically extract permission description evaluate apps google manually label author author permission address calendar audio achieve average precision percent recall percent related introduce AutoCog fidelity app description request permission author google apps achieve precision percent recall percent detect permission finding   library usage security risk due permission usage detail library usage security risk advantage request app permission   AutoCog permission usage permission request plagiarism conduct android apps identify apps likely  malware author percent apps permissive likely malware non technical information category downloads publishing increase initial malware introduce  identify clone apps google apps author introduce   apps detect clone detect clone apps approach apps dataset investigate application plagiarism developer rank rating review data apps app detect outlier hypothesis potentially fraudulent apps unique approach issue app rank apps google phone app rank app rank consecutive session author api information detect  apps detail app plagiarism approach malware author detect clone apps google potentially fraudulent apps detect app privacy google apps static apk analyser detect apps access private identifier thereby security risk apps information reading apps spyware extend static analysis  evaluate rating apps facebook chrome google warn privacy risk correlation popularity rating apps correlation permission sought privacy risk rating rating effective indicator privacy apps suspicious apps likely rating warn future user mapped android api privacy information perform static analysis identify apps private data leak  analyse apps google apps privacy leak introduce  static analysis identify potential privacy risk associate advertisement library apps google author apps advertisement library percent author remark majority advertisement library personal information apps google perform dynamic execution network usage focus network activity URLs claimed privacy security risk associate spyware malware network activity within category overall apps  activity author proportion apps rating rank advertisement  detects privacy information entry potential privacy security risk static analysis evaluate apps google obtain precision recall false positive rate national ID username password credit health data rating correlate permission privacy risk suspicious apps rating advertisement library personal information potent privacy risk vulnerability update behaviour user recent update approximately user update app update author argue user vulnerable software fix available argue description apps insufficient security information author  generates security centric description static analysis perform user amazon mechanical turk apps generate description readable reduce rate user malware generate description achieve percent readability rating description decrease malware rate percent apps google benign distinguish malicious benign apps intent security access related app malicious security sensitive resource access  dynamic analysis  google apps apps suffer logic bomb vulnerability selectively execute code vulnerable apis snapshot google apps apps webview api apps embed webview author vulnerability percent apps vulnerability author propose api mitigate threat related apps google static analysis partial app rewrite security issue component apps facebook sdk vulnerable attack apps potentially information violation online privacy protection reading app description vulnerability machine generate description readable thereby service potential warning author identify prevalent vulnerability logic bomb embed WebViews future potential future app security analysis augment approach non technical information available app additionally literature app security warrant standalone survey scope app analysis majority datasets google datasets potential future therefore seek security collection blackberry extend security analysis comparison ecosystem discus literature focus ecosystem difference literature summarise chronological summary ecosystem related app analysis literature author publication signifies google android signifies app signifies blackberry signifies phone publication venue apps ecosystem apps simulation apps ecosystem literature broken inter intra recommendation simulation inter code app feature equivalent apps android blackberry author analyse source code code dependency code churn apps android apps generally rely heavily platform conversely blackberry apps rely heavily apis customer developer cater platform author remark therefore easy develop blackberry android vice versa later development android apps traditional desktop server application mobile apps unix utility code development however report mobile apps suffer defect fix traditional application apps blackberry google app apps regular interval perform comparison growth author blackberry rate growth google percent blackberry expensive displayed curve price cheap apps apps multiple average MB analyse downloads apps android app percent apps account percent downloads user downloads cluster behaviour subsequent app downloads usually category author popularity distribution app price paid apps safety android apps google chinese android app apks official release ranked severity difference author conclude app trust proportion apps official release correspond difference severity conduct longitudinal rating apps argue amazon style rating rating accumulate lifespan app adapt apps performance release google rating app increase rating release app rating introduce  inconsistency android iOS version app author source apps apps validate user source apps apps inter analysis literature code growth user behaviour consistency app google blackberry android app host apps identical significant difference official version malware source non technical information replicate information app accessible data information downloads  replication installs bracket google installs  combine information social networking apps google register user respective website correlation metric intra assess difference paid apps korean app customer rating critical survival apps benefit  apps source code github android platform evolve average api update per due percent android reference date median lag update api apis update frequently interestingly api update defect prone client code apps google accessible information downloads zhong  analyse distribution bucket rating apps google popular  apps account majority app downloads rating customer satisfaction paid apps achieve cheaper expensive professional apps  downloads author conclude developer rank fulfil niche garg  paid app demand app rank ranked paid app ranked app  sale promotion app apps rival apps benefit promotion promote price cheaper competition author sale apps become easily  digital discount successful sale mixed rating apps  propose app feature automatically patch defective apps demonstrate automatically fix defective app google xie zhu investigate promote apps buying positive review via illicit underground service author register app promotion site expose approximately promote apps  information randomly iOS apps review author report difference datasets promote random apps   source apps available google perform correlation regression analysis source code quality metric performance metric downloads reviewer average rating author correlation regression coefficient reject initial hypothesis source code quality role app source code quality correlation app source apps however factor price sale promotion catering niche factor app recommendation   information downloads review apps review participate user data recommendation interoperability enrich recommendation  enables recommend apps user phone data google app amazon app apps app recommendation incorporate privacy app user evaluate approach apps google recommender perform treat app function privacy allowance rating distribution dataset motivation model user preference poisson distribution interoperability enrich recommendation  data app recommendation privacy allowance enhance app recommendation google simulation lim  simulated app ecosystem agent evolutionary model publicity strategy model apps infectious user app epidemic likely app apps author model explore rank algorithm simulated user alternate update apps historical performance factor apps apps perform overall downloads incorporate apps incorporate historical performance data later simulated ecosystem user perspective usage information participant model developer strategy innovator apps random feature  app optimiser improves innovator apps  overall fitness proportion overall model developer population agent evolutionary model multiple author simulate app author factor rank algorithm optimal interaction simulated developer extend model lim  investigate additional rank algorithm user behaviour explore rank algorithm percent app downloads browse ratio future potential research opportunity phone blackberry google future simulation extend analysis evolution widely blackberry effort prediction predict effort functionality app summarise apps google resultant predict actual report loc code apps chronological summary app analysis literature related effort prediction author publication publication venue apps effort prediction relatively witness growth likely future  application function analysis fpa android application traditional desktop application mobile apps limited functionality functionality merely wrapper functionality  fpa estimation mobile app approach android application van  van   generation functional measurement functional mobile apps  estimate apps intermediate representation asset functionality Unity3D apply  approach google apps apply linear regression functional estimate code apply validation author approach accurately estimate code functionality alone linear regression estimate development effort gui component requirement alone author android application estimate accurate source code metric file loc apply  approach android application functional strongly correlate app accurately estimate bytecode app later related approach van  van  dataset android apps functional correlate multiple app approach accurate function analysis  functional apps predict effort apps future effort prediction relatively app analysis future extend blackberry seek incorporate feature api information increase prediction accuracy predictive model estimate mobile apps fault crash closely related literature important app analysis fully definition app analysis nevertheless recognise restrictive apply definition rigorously stage app analysis furthermore aspect definition regard closely related comprehensively survey literature context app analysis literature survey user survey app analysis survey user behaviour feedback information specific apps therefore combine technical information  android user app usage statistic  application monitor usage apps android device average application usage session smartphones almost application news application exception communication apps throughout survey android user habit app behaviour conduct survey android user expectation app purpose sensitive data handle apps meeting expectation utilise sensitive data unexpectedly prevalent outline potential interface rectify issue developed mobile app recommendation user preference similarly context aware user preference information   user involve mock purchasing app feature priority ideal pricing feature survey app user user likely passive approach delete apps review contact developer active approach review popular approach survey user developer app regard iOS permission request explanation feature feature infrequently survey user significantly likely accept permission request explanation survey app user understand usage apps app behaviour significantly regard eastern china india proportion user participate recommendation rating apps almost proportion western user additionally survey app abandonment average brazil UK average japan france difference influence global related security app security perform app analysis influence described introduce  android app certification flag potential malware introduce  sensitive information within android app  static analysis android built extensively subsequent another information extraction flowdroid statically analysis information introduce  android author apply google apps reveal previously undetected crash author google benign app malware liu liu popular apps category benign upon framework kit exploit containment author app datasets von report initial evaluate growth apps butler conduct android highlight mobile development enable prior development release app  publish report app education category previous percent apps category target significantly increase percent additionally average price app risen USD majority education developer report vision mobile app monetary growth percent developer dedicate android iOS android developer earn average developer platform iOS priority platform iOS android blackberry platform despite blackberry decline launch prospect phone vision mobile release yearly report aspect developer revenue growth organisation information survey developer worldwide mining due plethora analysis research opportunity app data indeed due difficulty involve mining app mining publish publish  html google built facilitate app permission introduce  google crawler facilitate api android malware genome project popular source malware application security available dataset source application  project collection android apks  future app analysis author survey report content apps previous overview review analysis synthesise review review dataset future survey synthesise information future literature richer analysis facilitate richer data reporting insight direction app analysis therefore guideline data suggestion future app analysis facilitate future SLRs app collection apps apps breakdown paid apps information regard app purchase category breakdown app category indication api usage extract apps facilitate indication code apps facilitate indication source apps exclusively review breakdown sample dataset applicable particularly review description rating user feedback category trend response detail  analysis technique future discus potential future avenue research app analysis discussion   expectation app sample increase app increase google app exceed apps already feature apps longitudinal sub prediction release engineering lend particularly longitudinal data app clone replication app app indefinitely shrink consolidation unique apps possibly technique survey meantime app app discovery crucial newer apps developer effort improve discovery tiered category opportunity avenue future research concern extraction non technical information app extract sample apps  app sample avenue future research multiple app potential difference dominant lesser  app unique opportunity leverage customer business technical aspect application future app analysis seek combine aspect insight socio technical business develop app restrict data availability app issue researcher encourage app owner impose restriction limit ranked apps limit review recent restriction reduce scope accuracy future app analysis addition detailed breakdown price attach apps utilise app purchase valuable research finding app developer concept extremely valuable researcher centralise repository app data freely access consist apps source however legal copyright issue potent barrier construction repository remains conclusion survey publish literature app analysis software engineering identify sub app analysis date api analysis feature analysis release engineering review analysis security analysis ecosystem comparison effort prediction newer sub release engineering effort prediction growth eventually overtake sub ecosystem app sample increase apps approximately emergence app analysis progression conceptual practical empirical apply refine overall surprisingly diverse technique application app analysis highlight health future potential app analysis vista software engineering research deeply understand relationship social technical business aspect software development deployment uptake previously impossible due paucity data