javascript specify  ES native feature streamline encapsulation modularity developer community gap proliferation module format impact code reusability portability complexity configuration automate refactoring legacy ES code ES module grain reuse module content import export construct focus reduce couple refactored module destructuring export module grain module feature enhance module dependency leverage ES syntax employ static analysis construct model javascript project module dependence graph MDG module dependency basis MDG specify refactoring procedure module migration ES prototype implementation empirically evaluate source project highlight relevance refactoring developer intent grain reuse analysis refactored code increase reusable per project reduction couple refactored module soundness refactoring empirically validate code inspection execution project suite keywords refactoring code migration module destructuring ES module amd CommonJS introduction javascript decade web platform purpose program mobile server platform despite scope javascript application specification recently native feature streamline encapsulation modularity syntactic construct module along feature complex application promise arrow function introduce  ES release ES syntactic function constructor prototype inheritance implement browser ES release native ES module popular browser introduce quarter experimental feature release node runtime ES module development complex application encapsulation variable function declaration javascript file scope module scope differs global scope declaration pollute global scope prevent collision enable variable incompatibility execution model ES code file respect ES earlier version non trivial extension javascript release native modularity lag respect developer community gap proliferation module format encapsulation behavior avoidance global scope pollution handle code immediately invoked function expression  module format mainly amd CommonJS introduce interface declare module dependency browser server respectively ES module currently javascript runtimes developer confront migrate legacy codebases standard module format besides simplification code configuration migration performance improvement module load dependency management ES natively runtime external library moreover feature ES module improve code maintainability import export enforce consistency within codebase facilitate refactoring operation optimization application shake deployment export immutable binding enhance safety prevent error relevant cyclic dependency eager resolution reachable dependency module application  fail program behavior propose fully automate migration ES codebase ES module applies code non modular amd CommonJS module format operates module dependence graph MDG global model codebase MDG representation code module export module feature module dependency infer optimize propose migration complex refactoring affect entire code transformation individual source file analysis incoming outgo dependency besides handle mapping module format focus reduce couple refactored module selective destructuring exist amd CommonJS module grain module feature establishment minimum dependency module leverage import export ES construct encapsulation global function cohesive module feature explore relevance propose refactoring evaluate impact modularity code correctness empirical research prevalent presence ES code modular application developer intent independently reusable feature within module propose refactoring modularity propose source code transformation preserve external behavior analyze finding empirical legacy module format source project frequent presence code legacy code reveal individually reusable module feature within module concern modularity contributes grain reuse module reduction module couple finally successful execution benchmark project suite refactored code empirical evidence soundness propose source code transformation organize related brief review modularity ES feature ES specify refactoring towards ES grain modularity detail empirical evaluation discus threat validity finally discussion conclude related refactoring involves reorganize source code preserve external behavior fowler introduce series refactorings handle code orient code specialized javascript edition recent systematic literature review focus relationship code refactoring refactoring towards mitigate architectural impact software quality ongoing research expands application refactoring technique address diverse requirement beyond improvement code software artifact uml diagram specifically focus technique improve security maintainability metric improve performance remove unused feature refactoring activity improve software accessibility achieve business orient goal belongs research refactoring technique target javascript relevant automation refactorings handle concern improvement code runtime performance improvement software quality characteristic generic refactorings replacement insecure feature migration legacy code newer version outline  miller leverage static analysis technique refactoring  application shift xml json data format improve runtime performance furthermore static dynamic analysis technique propose towards automate code elimination javascript application   improve modularity framework specify generic refactorings pointer analysis propose static analysis technique replace eval feature enable program behavior approach focus refactoring javascript legacy code towards feature recent version  prevalence callback javascript application equivalence ES promise identification dependency legacy javascript extension migration refactoring towards ES propose static analysis technique refactoring non modular ES web application towards ES module propose automate refactoring code implement ES earlier version towards grain modularity ES import export handle concern related code migration newer version improvement internal quality attribute earlier refactoring legacy ES code ES syntax complementary requirement application migration ES modularity prerequisite application migration incorporate feature code concern previous contributes extension scope refactoring additionally handle amd CommonJS code refactoring module structure enables effective usage ES modularity construct evaluation methodology highlight effectiveness practicality approach modularity javascript review evolution modularity ES ES briefly CommonJS amd module format widely ES mostly adopt implementation  module esm feature standardize ES detail project fragment focus disparity concern encapsulation module global granularity export definition evaluation module dependency moreover refer impose limitation respect scope applicability feature overview feature ES ES format ES highlight incompatibility complicate automate migration ES code ES modularity ES unlike static program javascript prior ES formal mechanism preserve modularity encapsulation community address adopt singleton inject data functionality belonging global namespace global variable although javascript file bundle coherent functionality conceptual module variable function declare file scope bound global file load global variable introduce non declare variable imply globals non strict mode code attach global depicts fragment ES file  project load  html upon load content defines global variable  available hint image KB image declaration access global variable ES arise load file non modular ES code complicates program management due global variable presence global variable program hamper origin notably file furthermore undermines maintainability variable load file increase likelihood conflict runtime error unexpected behavior finally lack module load mechanism increase application complexity module load manually specify developer community handle challenge CommonJS amd module format declaration module server browser respectively CommonJS CommonJS cjs proposal specifies interface define load module server cjs module comprises reusable javascript code available module code fragment express session node package variable function cjs module bound module scope cjs restricts visibility declaration similarly non modular ES global variable introduce imply globals non strict mode code global cjs module synchronously load function return module variable function visible beyond scope declare module behave singleton instance cached load variable function define module scope becomes available module binding module export alias export CommonJS limitation regard scope applicability export feature module inner scope nest conditional statement image KB image module definition load cjs format depict memory import function export function define export due variable function declaration hoist reference bound scope define cjs partially enhances encapsulation prevent introduction imply global variable global namespace pollution due imply globals mitigate strict mode directive prohibits feature finally software portability cannot guaranteed format target define module server task load cjs module browser overhead memory resolve execution environment load module asynchronous module definition amd amd proposal specifies interface declare load module browser similarly non modular ES amd global variable declaration variable definition imply globals non strict mode code binding global amd module load eagerly upon request feature format script loader  respectively eager load upon request load amd module dependency load execution request module code instantiate function define format return module however amd feature actual load module upon request script loader module load dependency management similarly cjs format feature amd format respective script loader module inner scope moreover amd module load asynchronous manner module load execution cannot precisely assume introduction runtime error finally encounter define amd module correspond encounter define cjs module image KB image module definition load amd format amd module fragment  application load  loader  module depends reference entry app dependency array define resolution import module function scope module definition function ES module code modularity amd cjs format currently replace native feature standardize  feature enable define platform independent module load without adopt variable function define scope ES module restrict module scope global variable introduce global ES module enforce strict mode prohibits introduction imply global variable  declarative syntax export import declaration export import statement unlike amd cjs module export module compound module export declaration ES module apply multiple strategy manage dependency specifically export export multiple module feature independent variable function declaration client module moreover ES module selectively import individual module feature another module static import import module feature compound namespace import furthermore module declare specific feature default export import client module default import statement finally ES enables module load module execution dynamic import equivalent ES module module declares function export export import session session static import although ES standardize feature platform independent module semantics restriction specifically import declaration introduce immutable binding respective export declaration module scope moreover ES export static import permit scope module establishment statement module inner scope introduces evaluation error image KB image module definition ES ES module format ES module effective elimination unused code export simplify identification unused module feature moreover ES module dependency eagerly evaluate actual execution module code specifically module feature import ES module resolve module evaluation stage contrast ES format resolve module execution enables identification software defect relevant non declare import feature module load stage instead execution stage fail behavior finally ES module format platform independent enable module reuse across platform enhances testability mitigate simulate module execution environment refactoring towards ES module propose fully automate migration legacy ES code ES module applies ES project non modular employ amd cjs format implement  node respectively focus reduce couple refactored module destructuring exist module grain module feature optimization module dependency basis minimum module feature moreover restricts scope global declaration confines module scope appropriate module feature illustrates motivate showcase application merit propose refactoring code planck 2D physic development specifically code fragment solver module dependency solver core module planck declaration module project configuration setting module utility function vector calculation vec module code cjs module format reusable declaration module export module instance setting module export configuration setting vec export utility function bound vec constructor function math export function constant module CommonJS client module solver module import reusable feature respective module module client complex coarse grain instead elementary feature actually solver import module setting vec math former depends entire public api although export feature respectively image MB image motivate project planck ES version code fragment solver dependency application propose refactoring independently reusable feature module configuration setting utility function vec refactored standalone declaration export client module ES export statement module structure simplify empty module eliminate setting moreover declaration module module introduce scope static import statement solver module import minimum declaration dependency grain module multiple independently reusable module feature accompany grain module dependency import boost refactorings code optimization error trace specifically streamlines rename module feature relocation module module bundling effective shake identification elimination unused code deployment artifact moreover enforces static module structure pave static variable inference enable error detection import enable fail program behavior import resolve module evaluation stage probably application startup later execution stage besides import export propose ES default import statement migration module dependency external library backwards compatibility ES module format concern ES namespace import import module feature compound introduce implicit dependency module specifically namespace import client module explicitly specify module feature depends upon instead depends feature import module currently unused feature feature subsequent revision addition benefit grain modularity propose refactoring improves code portability testability due migration amd cjs module platform independent module global variable encapsulation automation propose refactoring challenge task due incompatibility ES module format ES format binding import module feature declaration static import hoist eager load static module dependency oppose demand load CommonJS etc specify automate migration ES module distinct processing stage identification refactoring candidate code fragment refactored application source code transformation specification defines refactoring precondition preclude transformation erroneous code influence analyze program external behavior refactoring candidate identification procedure identification refactoring candidate involves resolution structure module module feature individually export reuse module resolution grain module dependency basis minimum module feature import module refactoring outcome procedure graph module dependence graph MDG model desire module structure refactoring source code transformation procedure MDG concept introduce previous redefine unified representation module structure modular non modular javascript code specifically comprises graph node MDG node correspond ES module introduce refactoring node javascript file analyze project graph model dependency module refactored resolution module structure involves identification module feature module module module amd cjs module non modular ES define module feature module feature comprise module amd cjs extract module scope individually export module per strip content global declaration assign module restrict scope module destructuring identification extract standalone module feature subsequent extraction amd cjs module module destructuring identification procedure involves recovery module structure ast representation analysis statement apply binding module binding statement comprise assignment expression access dot bracket notation instance define bracket notation exclude analysis explain bound module henceforth refer binding module dot notation module instantiate literal notation append module export module construct within import another module instantiation declarative function declaration literal notation involve evaluation expression function invocation module instantiate empty function attach runtime literal notation characterize namespace container data function export amd cjs module namespace strip refactoring eliminate module feature module  project namespace module export mathematical constant function version depict sub sub syntactic variant empty literal notation evaluate module destructuring precondition precondition fails return module cannot  identify bound namespace return otherwise return module available module feature destructuring resolution global declaration global declaration involve explicitly declare imply global variable bound platform specific global global declaration non modular ES source file identify global variable module ast traversal var statement non modular ES amd global definition imply globals identify analysis ast node assignment expression specifically variable assignment sought variable function define within scope hierarchy assignment scope surround scope variable comprises imply global declare hierarchy finally declaration non modular ES identify function variable declaration node function declaration ancestor module refer respectively global variable global declaration identify ast resolution module feature global declaration involves evaluate global declaration precondition violation return identify global presence feature module define module allocate module import normalize couple module return global declaration resolution return module refactoring abandon resolution grain module dependency resolution grain module dependency involves identification module feature module import module project moreover identifies dependency external library module treat differently compatibility module dependency module project module module dependency import module module feature export module module dependency characterize within respectively define module dependency define tuple import module corresponds external library dependency CommonJS identify import module ast traversal invocation typical invocation module equivalent ES namespace import module export return assign variable access entire feature specific import module directly assign variable access cod idiom emulates ES import CommonJS variable access feature finally module import assign variable amd identify import module analyze parameter define module declaration function specifically optional parameter define invocation relative identifier import module module resolve module parameter module definition function parameter define invocation amd import namespace import parameter module definition function access import module entire feature identification module dependency module algorithm import module amd cjs identify subset module feature module dependency import library module amd cjs module dependency access global declaration identify module encapsulates global declaration module dependency MDG construction algorithm basis aforementioned definition algorithm construction MDG data structure ES project summarize initialize source file evaluate module format precondition violation refactoring abandon resolve module structure refactoring abandon module resolve module dependency module return fragment MDG construct stage project planck fragment focus module math outgo dependency subset incoming dependency module module outgo dependency correspond module feature import module incoming dependency correspond module feature export client module instance math import feature module export feature  client module fixture refactoring precondition refactoring precondition evaluate refactoring identification algorithm module analyze prevent evaluation error refactored code ensure external behavior preserve identify precondition scope application grouped category global declaration precondition module destructuring precondition module format precondition global declaration precondition involve define global variable function module global variable introduce location conflict declaration across file potential source error non modular ES amd function unique across javascript file function multiple module function override binding module namespace corresponds recently load function module destructuring precondition involve extract module independently export preserve program external behavior define dot notation define bracket notation inaccurate conclusion regard declaration module indexed variable module fully reference function invocation detach error originate aliasing module modify detach error related violation ES specification module format precondition involve restriction impose specification involve restriction impose ES format introduce ES specification violation restriction introduce defect refactored code affect program external behavior function definition reference declare file enforce strict mode function neither constructor module code mode non strict mode reference global strict mode undefined update function invocation ES module enforce strict mode transformation ES source file non strict mode ES module runtime error originate invocation cjs module module scope ES introduction static import export module scope transformation ES static import evaluation error nest statement applies replacement return statement export statement amd source code transformation procedure source code transformation migration ES module employ MDG construct refactoring candidate identification stage MDG node correspond module individually refactored amd module dependency amd api replace invocation define function statement module definition function replace return statement statement variable assignment image KB image expression return replace statement application amd module illustrate affected statement enclose dash frame marked inside parenthesis refer similarly marked cjs module dependency CommonJS api declare empty placeholder variable module scheme image KB image replace reference module export alias export variable eliminate statement apply module destructuring processing identify feature module feature declare initialize ES literal notation assignment statement bind module extract module introduce variable declaration image KB image corresponds conflict feature prefixed module corresponds expression initialization declaration replace reference module feature remove binding assignment statement originally declaration declaration module feature ES version math binding assignment math alias module binding extract accordingly variable declaration exception  introduces collision global javascript function declare export module feature evaluation incoming MDG dependency initialize export feature incoming MDG originate client module export feature client module modifies declare mutator function export feature code listing template mutator function declaration image KB image declare export statement listing export feature consistency alias restore feature prefixed handle conflict amd module export module  cjs module export feature statement rename feature restore version adapt analyze project standalone application implement reusable library library public api without incoming MDG dependency codebase accidentally encapsulate become unavailable client export feature module however public api invoked code apply without modification code incoming dependency establish module dependency evaluation outgo MDG dependency outgo MDG module feature module introduce appropriate import maintain conflict prefixed module identifier identifier corresponds file conflict persists prefixed folder module declaration import feature define correspond mutator function import introduce import image KB image import feature replace reference feature assignment statement define replace invocation feature mutator function outgo MDG external library module introduce default import image KB image corresponds variable reference library module ES code import library module default import statement statement replace import introduce minimum module feature namespace math empirical evaluation perform experimental propose automate refactoring ES software project towards ES grain modularity goal analyze propose purpose evaluation respect effectiveness practicality perspective developer considers implication refactoring potential automation context source project research experimental aim research RQ prevalent presence ES code modular application investigate extent ES code non modular amd cjs module format prevalent web application empirical evidence scope practicality propose RQ developer intent independently reusable feature within module purpose explore extent propose refactoring ES grain modularity align semantics analyze module developer intent independently reusable feature within module practicality propose refactoring effective usage ES construct migration legacy code RQ propose refactoring modularity aim granularity individually export module feature introduce project module potential encapsulation module feature within declare module research evaluates potential reduction module couple due grain dependency introduce ES import research highlight effectiveness propose increase granularity reusable module feature reduce internal couple module RQ propose source code transformation preserve external behavior analyze research seek empirically investigate soundness propose refactoring application refactoring introduce syntax error alter external behavior refactored code practicality propose context selection context experimental comprises javascript project selection project criterion source replication implement ES non modular amd cjs module format implement  node respectively suite available successfully execute extent benchmark earlier project evaluation along relevant implementation detail module format project project non modular sloc javascript production code compute cloc codebase project external library library code exclude analysis library dynamic feature creation deletion dynamic code generation feature undermine static analysis refactoring introduce error influence program external behavior coverage project statement suite coverage report project without suite specifies tag commit project revision project github repository javascript project experimental     repository                          backbone   backbone        express session  session underscore  underscore messy  messy virtual dom   virtual dom recipe parser  recipe parser planck  planck    propose implement source node employ  abstract syntax ast traversal transformation  resolution imply globals  dataflow analysis module dependency identification javascript code embed html file analyze web application extract jsoup html parser implement prototype limited user interaction user specify application refactored format implementation evaluation prototype perform workstation equip intel core cpu ghz 6GB ram evaluation RQ prevalent presence ES code modular application research explores relevant propose web application ES specification fully implement javascript runtimes naturally arises extent web application legacy module format migrate ES knowledge publish explores amd cjs format adoption ES module RQ analyze code github repository javascript minimum developer engagement recent acquire access source code public activity timeline github repository github activity data  public  datasets approximately repository javascript code narrow analysis repository basis criterion primary repository byte code javascript html exclude repository java objective code avoid analyze platform mobile application migration ES constrain application development framework repository commits purpose exclude abandon project bias legacy module format stage javascript file aforementioned repository classify amd cjs ES module classification regular expression syntax module format source code file regular expression appropriately formulate file categorize module format execute  JS file content exclude analysis configuration file webpack rollup source file installation folder package dependency node module JS content classification module format available JS file repository declare amd CommonJS ES module standard module format estimate file category classification JS content non modular standard module format moreover JS file standard ES module format amd cjs finally adoption ES module format characterizes another file classification JS file module format module  amd CommonJS ES AQ legacy module format non modular ES code widely actively maintain source project stress automate migration ES module reap benefit feature RQ developer intent independently reusable feature within module research related practicality propose refactoring purpose investigate extract grain module feature correspond semantics module belong module scope reuse independently construct ES import export automatically apply refactoring employ programmer ES RQ conduct exploratory frequently module context comprise subset benchmark project amd cjs format non modular ES project exclude source file declare module involve identification code inspection sample module benchmark project estimate frequency across module static analysis implement purpose besides namespace already described code inspection reveal module grouped category factory utility categorization focus purpose module abstract variation factory function implement template creation initialization function usually function constructor factory generic configuration function purpose initialize attribute statement function binding assignment reference instance attach binding factory prototype moreover module code usually statement apply binding directly factory binding extract independent module feature propose refactoring static member declaration emulate within module reuse independently instance factory factory declare vec module planck project module function constructor factory invoked operator instance vec declare binding vec zero neo static utility extract export individual module feature utility module non empty function serf domain specific functionality binding reference furthermore prototype extend within module scope bound module extract export module feature refactoring however due generic structure utility cannot generalize role extract module feature module assume individual reuse module feature express intent developer image KB image factory vec module planck project static analysis classification module amd cjs project module category specifically project module respectively factory namespace utility category majority module classify factory moreover significant module classify namespace utility correspond module module declaration namespace factory module scope emulates container feature declaration module bound feature reside semantically module scope individually reuse ES export bound module declaration utility reusable individual feature relevance inspect basis module frequency       backbone    express session underscore messy virtual dom recipe parser planck  AQ bound module declaration correspond namespace static feature emulate reveal developer intent individual reuse module RQ propose refactoring modularity RQ evaluate module structure refactoring module  replace individually reusable module feature investigate reusability module feature across module impact grain dependency module couple propose refactoring granularity independently reusable within project infer module module declare within project module feature sum module feature bound extract module global declaration allocate access module refactoring reuse coarse grain module declare source file propose reuse granularity module feature multiple feature declaration export per source file shift granularity increase reusable per project factor average increase grain reusable reduces module couple demonstrate hereafter application bundling effective shake identification elimination unused code deployment artifact export encapsulate module feature refactoring  feature          backbone    express session underscore messy virtual dom recipe parser planck  module feature actually reusable within project export module feature module feature module besides declare module refactoring declare export reuse client module correspond import statement moreover inside parenthesis respective reusable module feature module feature project accord module feature reusable export project module feature exceed however significant module feature non CommonJS project export encapsulate declare module cjs project implement node library package encapsulate feature estimate integrate static analysis client code public api sufficient coverage public api encapsulation module feature disabled reveal module feature non modular ES amd project reuse outside declare module evidence module encapsulation ES propose refactoring omits ES export statement feature restrict scope narrow public api module improves modularity encapsulation concern refactoring module couple investigate average module couple project application refactoring module couple estimation incoming dependency fan outgo dependency fan module moreover estimate module instability analogy establish instability metric component package analogy ES module java package estimate module fan fan java package package accessible package public modifier outgo dependency comprise package import incoming dependency comprise package import vein ES module module feature declare source file become accessible module export statement ES module outgo dependency module feature import individually bulk default import module incoming dependency module comprise module feature module import feature module module feature outgo dependency MDG accord notation introduce moreover module feature depends import source file external library module exclude equation formal specification module feature module contains module feature declaration reference module feature module outgo dependency MDG import feature moreover module feature access import feature module compute union module import feature formal specification estimate metric fan fan module instability module basis module couple instability project refactoring compute average metric module production code respective project standard deviation inside parenthesis average fan module project ES refactoring ES significant decrease module fan project marginal decrease project improvement module fan due grain reuse module feature refactoring module import minimum feature dependency ES version module usually import entire module feature bound respective module average fan module project fan affected refactoring incoming dependency module remain unchanged despite import client module individual module feature coarse grain module module couple instability metric refactoring  fan module instability          backbone    session underscore messy virtual dom recipe parser planck  refactoring module instability analyze average instability module across project refactoring average improvement decrease module fan instability module improves project project however project  backbone  module instability remains despite improvement fan project module client module define module feature export feature define module feature import feature module calculation refactoring AQ propose increase reusable per refactored project factor average enables grain reuse declaration multiple reusable per module enforces module encapsulation restrict scope module feature module reduces module couple decrease module fan module instability RQ propose source code transformation preserve external behavior analyze evaluate effectively propose preserve external behavior analyze project execute project suite propose refactoring successful execution indicator reliability apply refactoring project without suite empirically evaluate correctness refactored code manual code inspection usage evaluation empirical evidence soundness code transformation suite manual inspection reveal external behavior refactored code attention attribute  project transformation apply despite violation precondition specifically  module module dependency establish inner scope inside conditional statement therefore code violates module format precondition respect nest module dependency nevertheless dependency exhibit modification global scope establishment dependency module scope refactoring alter external behavior AQ propose transformation preserve analyze external behavior violates precondition relevant module dependency establish inner scope threat validity discus threat validity empirical evaluation categorize prioritize threat validity accord internal external construct conclusion validity internal validity threat refer factor affect ignore cannot potential threat relates quality benchmark project suite affect conclusion RQ statement coverage suite cjs project exceeds capable reveal majority flaw propose external validity threat affect generalization empirical evaluation potential threat concern extent sample project representative population legacy ES project deem sample adequate diversity mitigate threat standalone application library project various domain applicability propose affected limitation handle specific feature javascript specifically analyze code dynamic code generation aliasing resolve module variant file generate filename  define programmatically  static analysis introduces significant challenge undermine safety propose refactoring finally analyzes limited extent feature forbidden strict mode prevent introduction defect due incompatibility ES ES specification benchmark project      limited feature manually replace equivalent feature permit strict mode threat construct validity concern correspondence theoretical construct observation empirical evaluation potential threat relates RQ regex classifier employ categorize JS file module format mitigate threat built suite regular expression publicly available github another threat relates estimation metric conclusion RQ RQ threat perform manual validation metric calculation project conclusion validity concern statistical significance relation conduct exploratory experimental observation finding confirm validity hypothesis evaluate reliability counterpart conclusion validity threat reliability concern reproducibility mitigate publishing source code artifact replication discussion propose automates refactoring migrates ES codebase  refactoring focus application effective ES construct modularity migration important milestone evolution legacy javascript project ES module requirement adoption feature syntax promise api introduce ES beyond boost developer productivity improve code maintainability scope propose refactoring limited syntax transformation extent module  additionally alters refactored module enable grain reuse module content destructuring module multiple individually reusable module feature module dependency redefine establish basis module feature improves maintainability couple refactored module reduce refactored module import module feature feature instead entire module enables encapsulation unused module feature restrict scope declaration module achieves grain reuse module content effective import export construct instead default namespace equivalent establish dependency basis coarse grain module although latter backwards compatibility ES module format import export significant benefit specifically enforce consistency across module improves code understandability allows effective shake code deployment moreover facilitate refactoring operation rename refactorings feature extract module refactorings  finally evaluation contributes ongoing debate default import export highlight former positive module couple reusability conclusion future propose automate refactoring legacy ES code non modular amd cjs format ES modularity extensive import export construct besides migration ES module format ES module propose improves internal quality attribute refactored code specifically enforces grain reuse module content destructuring module individually reusable module feature basis feature optimizes module dependency leverage ES syntax core static analysis technique construct global model analyze project module dependence graph MDG MDG mirror infer explicitly declare module dependency basis MDG specify source code transformation migration ES propose implement node platform purpose evaluate effectiveness practicality collection source project evaluation reveal developer intent grain reuse extract feature semantics correspond reusable module scope namespace static feature emulate analysis refactored code increase reusable per project factor improvement couple refactored module decrease module fan module instability finally execution project suite refactored code evidence soundness source code transformation future investigate potential improvement modularity ES codebase automate refactorings specifically intend extend research across direction improvement module cohesion redistribution grain module feature module extraction module feature module consolidation content module modernization internal structure module introduction ES syntax credit authorship contribution statement   conceptualization methodology software validation   conceptualization methodology validation  supervision conceptualization  supervision project administration