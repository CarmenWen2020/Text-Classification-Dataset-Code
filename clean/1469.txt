orient online objective service schedule pleasingly parallel variable resource environment perspective SaaS software service provider execution service schedule SaaS service SaaS provider purchase instance IaaS provider schedule user user accordingly feature orient user pleasingly parallel deadline constraint online setting variable resource maximize revenue user satisfaction rate online algorithm SaaS provider optimally purchase IaaS instance schedule pleasingly parallel propose algorithm achieve competitive objective polynomial theoretical analysis simulation google trace synthetic datasets validate effectiveness efficiency algorithm previous keywords service schedule compute online algorithm multi objective optimization pleasingly parallel introduction application scope compute wider wider resource rent user service per infrastructure service IaaS software service SaaS etc IaaS provider amazon EC amazon web service aws microsoft azure virtual machine vms configuration vcpu memory storage etc price multiple instance IaaS platform demand instance per instance per SaaS provider professional service user execution web host email access reduce establish data improve flexibility service SaaS provider tend elastically purchase demand instance IaaS provider deploy service purchase instance IaaS provider dynamic accord demand resource SaaS provider variable trading SaaS service user service without building data configure software SaaS provider revenue user IaaS resource feature orient environment SaaS provider execution service focus pleasingly parallel embarrassingly parallel flexible parallelism  task instance parallel without overhead percentage pleasingly parallel typical image processing 3D render scientific compute blast monte carlo simulation parametric massive besides data processing analytics pleasingly parallel smith waterman algorithm classic reduce synchronization communication task service schedule user submit pleasingly parallel SaaS provider purchase instance IaaS provider schedule submit selectively purchase instance return execution user accordingly SaaS provider decision instance purchasing schedule scheme scenario user dynamically SaaS provider decision information future generally unknown precisely predict meanwhile decision implication future therefore important issue instance purchasing schedule decision online mode without future information practical environment brings difficulty besides user generally feature orient attention execution ignore concrete execution feature pleasingly parallel orient user schedule besides execute DOP instance choice flexible execution completion correspond deadline constraint image KB image SaaS provider service SaaS provider dynamically purchase IaaS instance execute user accordingly along schedule various environment widely traditional environment machine supercomputer cluster resource goal schedule optimize objective minimize average makespan maximize throughput etc conversely orient environment commercial model monetary diverse quality service related objective revenue become consideration SaaS provider revenue income earn user minus paid IaaS provider significant concern meanwhile guarantee profit user satisfaction rate rate user deadline important goal reject user departure therefore objective schedule objective mention consideration focus orient online objective service schedule pleasingly parallel variable resource environment online algorithm SaaS provider decision detail contribution summarize formally define orient online objective service schedule focus pleasingly parallel various resource NP theorem propose online algorithm efficiently instance purchasing schedule objective maximize SaaS provider revenue maximize user satisfaction rate utilize strict theoretical analysis propose online algorithm achieves competitive objective polynomial meanwhile construct extensive simulation synthetic google data verify effectiveness efficiency organize introduces related fundamental notation formulates orient online objective service schedule pleasingly parallel various resource integer program online algorithm strict theoretical analysis construct extensive evaluation concludes proposes future research direction related recently traditional schedule focus objective utilize correlate technique schedule algorithm restrict related machine aim minimize makespan node location aware schedule algorithm improve throughput hpc stochastic processing schedule parallel identical machine maximize probability specify deadline yuan investigate schedule identical machine semi online hierarchical algorithm minimize load machine orient environment service provider concerned profit focus utility maximization parallel sensitive application spatial temporal interference schedule algorithm approximate sahni  focus workflow schedule deadline constraint effective heuristic algorithm perspective application minimize  lee completion driven hyper heuristic algorithm service provider schedule scientific objective optimize execute unfortunately algorithm offline setting cannot decision without future information address online mode environment researcher focus online algorithm schedule algorithm perspective broker resource request customer utilize volume discount algorithm stack centric randomize online focus scientific workflow schedule schedule approach goal efficiency address online schedule server minimize consumption propose online strategy schedule distribute machine cluster objective maximize utility execute depends respective completion user assumption resource fix prerequisite adjust resource dynamically accord demand efficient rare algorithm perspective SaaS provider schedule resource acquire consideration simultaneous consideration increase difficulty significantly policy purchase demand instance aim minimize purchasing instance another workflow schedule hybrid resource scalable fix quantity iterate heuristic algorithm reduce rent vms offline setting propose online algorithm schedule service request hybrid minimize rent resource public however research objective instead complex objective revenue user satisfaction rate conforms development consideration multiple objective schedule address task assignment develop algorithm multi objective schedule basis particle swarm optimization aim minimize consumption makespan kaur  propose novel multi objective schedule strategy grid environment  makespan resource task schedule mobile environment schedule algorithm basis dynamic voltage technique whale optimization strategy jointly optimize completion consumption algorithm offline algorithm unsuitable online setting propose online task schedule strategy optimize completion geographically distribute data framework multi objective online schedule IaaS compute objective minimize SLA violation maximize provider income nevertheless online multi objective algorithm dynamic purchasing resource particularly focus pleasingly parallel propose pleasingly parallel biomedical application analyze performance model mention focus parallel sensitive application pleasingly parallel focus schedule multitasking workload data analytics introduce ordinal optimization rough model simulation suboptimal   concentrate data analytics SaaS data aware schedule policy address schedule data analytics goal minimize completion achieve max min fairness algorithm offline algorithm schedule pleasingly parallel online algorithm minimize completion focus parallel compute deadline constraint utilize technique primal dual online algorithm algorithm mention online algorithm variable resource policy allocate demand instance pleasingly parallel cap bioinformatics goal optimization resource variable policy offline summary none schedule algorithm considers pleasingly parallel online setting variable resource complex objective summarize exist contribution online service schedule algorithm pleasingly parallel various resource orient environment algorithm SaaS provider revenue user satisfaction rate consideration SaaS provider efficiently schedule model introduce fundamental notation notation formulate orient online objective service schedule pleasingly parallel fundamental notation SaaS provider periodically sum income accounting axis accounting consists discrete slot user arrival instance purchasing schedule slot demand IaaS instance usage duration slot assume SaaS provider purchase demand instance public IaaS heterogeneous instance physical configuration cpu memory etc correspond purchase price price instance SaaS provider purchase instance instance correspond instance slot denotes instance newly purchase slot capacity public IaaS theory infinite denote instance available slot denote user accounting user arrives slot submits pleasingly parallel SaaS provider simplicity without ambiguity denote user arrives information SaaS provider described tuple arrival deadline slot demand instance instance demand instance related instance performance execute multiple instance demand satisfied estimate demand understood execution classic attracts extensive beyond scope threshold limit parallelism  independent task instance parallel without overhead function user related execution function denotes user willingness generally decrease execution increase function valuation SaaS provider obtain execute SaaS provider correspond amount payment function arbitrary nonincreasing function instance function linear decrease function stage constant deadline linear decrease function deadline besides penalty SaaS provider function execution slot SaaS provider execute feature user schedule scheme execution arrival deadline execution correspond completion correspond valuation express discrete axis convenient correspond valuation user execution binary variable execution multiple execution execution actual execution execution execution accepted payment user SaaS provider actual valuation assume SaaS provider reject service request without penalty reference summarizes fundamental notation service SaaS provider decision instance newly purchase IaaS slot accept user execution instance allocate user slot execution feature pleasingly parallel schedule  multiple instance diverse execution valuation user understand brief arrives slot deadline execution schedule scheme execute instance slot DOP completion correspond valuation execute instance slot DOP completion correspond valuation execute instance slot instance slot DOP completion correspond valuation completion correspond valuation summary fundamental notation  slot  user arrival user deadline user payment user instance instance  duration instance newly purchase instance slot price purchasing instance slot execution demand instance threshold parallelism  valuation execution execution otherwise instance allocate execution slot available instance slot user execution estimate offline user execution formulation assume information advance fundamental notation mention formulate orient online service schedule various resource environment attraction schedule SaaS provider objective maximize SaaS provider revenue revenue SaaS provider payment user valuation completion minus purchasing instance SaaS provider pursue revenue maximize user satisfaction rate user deadline user service request satisfied user satisfied define user satisfaction rate rate satisfied user maximize user satisfaction rate maximize rate user deadline accord definition guarantee user satisfaction rate prevent user beneficial profit optimize objective simultaneously belongs multi objective optimization classic address transform objective aggregate objective sum calculates linear combination objective revenue user satisfaction rate consideration sum linearly combine objective factor aggregate objective factor indicates relative importance objective SaaS provider normalize objective min max normalization objective within specify generate comparable influence aggregate objective optimal revenue obtain accounting formulate orient online service schedule pleasingly parallel various resource environment integer program IP constraint implies instance distribute partial completion meaningless constraint practical threshold exist limit  constraint constraint resource capacity constraint constraint integer constraint instance allocate purchase IaaS slot integer theorem orient objective online service schedule pleasingly parallel various resource environment formulate IP NP proof theorem reduce schedule knapsack typical optimization proven NP reduction item resource knapsack focus objective service schedule modification objective SaaS provider revenue maximization modify slot omit correspondingly omit instance omit combine schedule scheme violate DOP threshold constraint remove dynamic instance purchasing resource capacity SaaS provider fix omit constraint remove schedule reduce reduction orient online service schedule regard complicate expansion knapsack consequently NP offline optimal obtain IP however accord theorem NP moreover online setting decision SaaS provider information already challenge propose online algorithm approximate decision online service schedule algorithm propose online algorithm effectiveness theoretical analysis online algorithm algorithm image KB image schedule strategy user arrives submits service request SaaS provider decision immediately temporarily assume accepted respective actual execution propose schedule strategy straightforward efficient instance purchasing schedule scheme algorithm description instance execution averagely allocate demand execution interval instance slot interval slot instance already purchase previous slot correspond demand allocate instance otherwise purchase instance instance sufficient correspond instance purchase instance maximum performance price ratio DOP threshold instance cannot guarantee threshold instance execute straightforward schedule strategy efficiently feasible scheme understand schedule strategy arrival deadline demand execution execution execution execution calculate strategy obtain schedule instance purchasing scheme propose calculate strategy calculate execute execution algorithm execute execution instance multiple purchasing instance distribute proportional distribute accepted user proportional effective distribution approach distributes jointly resource user average pricing  wang zhu proportion individual revenue demand user proportion revenue demand revenue demand theoretically user function revenue however function personally define cannot adequately reflect user valuation demand vice versa hence distribute fairly demand calculate however execute related demand execution distribution synthesize demand execution combine demand execution sum min max normalization mention aggregate define calculate execution maximum execution coefficient importance demand execution chosen SaaS provider requirement proportion accepted user contribution execute function execute user optimal execution appoint execution nevertheless calculate accurately practical online impossible calculate user accurate timely estimate user accounting instance purchasing schedule scheme calculate execution calculation suppose accepted apportion later apportion later estimate execution accounting user obtain historical data estimation suppose probability arrival demand slot estimation approach conclude acceptance strategy acceptance strategy acceptance rejection user algorithm execution maximizes gain increment optimal execution gain increment accepted execution accepted payment user valuation correspond execution finally schedule strategy accepted execution calculate actual scheme accord actually execute gain increment aggregate objective execution obtain accord historical data previous accounting gain increment considers SaaS provider revenue user satisfaction rate accord user valuation online algorithm accepts user valuation decrease SaaS provider revenue increase user satisfaction rate reflect importance provider revenue user satisfaction rate SaaS provider accord requirement goal algorithm revenue maximization algorithm considers user satisfaction rate theoretical analysis online algorithm achieve performance optimal objective competitive ratio performance online algorithm whatever input ratio offline optimal objective objective achieve online algorithm specific online algorithm achieve competitive ratio prof online algorithm achieves competitive revenue aggregate objective theorem propose online algorithm achieve competitive ratio SaaS provider revenue related user valuation proof subscript optimal obtain online algorithm respectively instance obtain optimal algorithm online algorithm respectively suppose fictional situation upper bound slot arrival instance purchase apparently situation revenue user satisfaction rate fictional situation optimal user maximum valuation function nonincreasing user maximum valuation generally valuation slot fictional situation upper bound situation online algorithm denote accepted reject user respectively user respectively actual accord algorithm apparently actual user  revenue obtain online algorithm valuation minus actual user accepted user reject user besides accord acceptance strategy user reject reject user user user minimum valuation deduce parameter bound user valuation parameter calculate competitive ratio simply  software manage fee SaaS provider willing service user valuation purchasing instance hence user minimum valuation respective sum user minimum valuation instance meanwhile maximum valuation user willing finite sum user maximum valuation instance obtain historical data finally calculate competitive ratio revenue deduce conclusion theorem theorem propose online algorithm achieve competitive ratio aggregate objective related user valuation proof fictional situation mention accord calculate optimal deduce  aggregate objective algorithm proof competitive ratio aggregate objective conclusion theorem theorem propose online algorithm polynomial complexity proof execution user complexity calculate instance purchasing schedule scheme execution complexity algorithm compute increase complexity experimental evaluation effectiveness efficiency online algorithm synthetic google data SaaS provider revenue user satisfaction rate equation aggregate objective algorithm achieves performance various scenario simulation setup simulate environment SaaS provider rent instance pleasingly parallel execution service user user submit SaaS provider web SaaS provider schedule propose online algorithm comparison algorithm IaaS platform program simulator focus simulation mathematical model simulator simulated IaaS platform configures heterogeneous instance allows demand access concrete configuration price instance accord instance amazon EC workload simulation synthesize accord experimental requirement observation actual pleasingly parallel google cluster data emulate however constraint experimental simplify detail bandwidth constraint network performance interference inter vms slot experimental scenario slot consists min usage duration demand instance slot user function decrease increase execution default randomly demand threshold specific demand instance related instance performance performance demand google data demand DOP threshold google datasets information submit google cluster concrete experimental parameter obtain optimal comparison relax integer constraint IP linear program generates upper bound optimal reduce randomness generate average summary parameter   uniform google dataset uniform google dataset exp performance user per slot performance online algorithm user per slot increase algorithm adapt multiple scenario assume user arrival normal uniform uni constant con distribution respectively aspect comparison optimal actual theoretical actual competitive ratio user increase aggregate objective almost unchanged reveals algorithm stable user contrast SaaS provider revenue increase almost linearly user revenue perspective guarantee user satisfaction rate attract user important SaaS provider meanwhile algorithm actual optimal reflect performance image MB image performance user per slot image KB image competitive ratio user per slot accord theoretical competitive ratio respectively actual competitive ratio evidence algorithm obtain performance user user per slot increase actual competitive ratio slight decrease due user request service instance purchasing schedule scheme influence entire decision addition distribution implies algorithm apply scenario exp performance execution performance online algorithm execution increase illustrate perspective competitive ratio execution increase competitive ratio gradually increase execution increase algorithm difficulty optimal decision however competitive ratio reflect performance algorithm image KB image performance execution exp performance SaaS provider revenue user satisfaction rate varies decrease provider revenue gradually decrease user satisfaction rate gradually increase algorithm revenue decrease algorithm gradually focus user satisfaction rate shift decision become slight image KB image performance exp runtime efficiently online algorithm polynomial execution optimal online algorithm user per slot increase accord obvious achieve optimal user increase runtime increase rapidly contrast algorithm polynomial complexity faster combine former experimental conclude algorithm achieves performance thereby algorithm widely image KB image runtime exp comparison algorithm finally online algorithm online schedule algorithm google data slot increase currently rare pleasingly parallel variable resource online setting complex objective comparison classic recently publish algorithm adaptation comparable propose algorithm online algorithm schedule algorithm evaluate aggregate objective SaaS provider revenue user satisfaction rate primal dual online primal dual schedule algorithm focus pleasingly parallel aim revenue maximization algorithm utilizes dual program marginal price function resource accord valuation price algorithm decides accept user service request nevertheless resource purchasing algorithm hence assume purchase instance PD PD demand respectively deadline classic schedule algorithm deadline schedule resource purchasing algorithm fix instance user demand EDF algorithm opportunity algorithm purchase instance accepts user schedule opportunity opp algorithm  online algorithm pleasingly parallel considers consumption algorithm accord shortest policy task instance efficiency constraint violate completion reduce meanwhile instance purchasing assume instance fix user demand consumption modify algorithm apply comparison  algorithm considers demand instance execute aim optimization algorithm distribute workload equally entire deadline minimize integer instance demand instance algorithm resource instance demand instance online algorithm demand instance schedule shortest policy algorithm online algorithm achieves performance comparison algorithm apply online algorithm achieve significantly comparison algorithm mainly variable resource algorithm PD EDF  assume fix resource schedule actually predict advance insufficient instance limit service capability SaaS provider PD excessive instance  PD thereby SaaS provider purchase instance dynamically accord service request purchase fix advance schedule objective objective acceptance schedule policy algorithm algorithm PD considers objective revenue maximization ignores user satisfaction rate goal algorithm  minimize completion algorithm opp  purchase resource dynamically however ignore economic factor valuation instance user accept schedule accord loss online setting practical environment decision future information user arrival demand unknown decision implication future algorithm uncertainty fully carefully comparison algorithm PD  online setting comparison algorithm cannot image KB image comparison algorithm algorithm PD EDF   obtain user satisfaction rate due abundant instance user purchasing instance schedule selectively accord objective online algorithm summary online algorithm achieves performance comparison algorithm effectively orient online objective schedule pleasingly parallel variable resource environment conclusion future focus orient online objective schedule pleasingly parallel variable resource environment unique feature variable resource online setting etc schedule focus objective maximize SaaS provider revenue maximize user satisfaction rate address propose algorithm SaaS provider purchase instance schedule online propose online algorithm computationally efficient achieve competitive ratio efficiency verify theoretical analysis extensive simulation nowadays IaaS platform instance reserve instance suitable situation future instance consideration efficient algorithm schedule complicate environment