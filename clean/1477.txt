context frequently invest effort remove technical issue impact software quality remove anti cod style violation objective aim analyze diffuseness sonarqube issue software ass impact code fault proneness severity conduct java project apache software foundation repository analyze commits fault java file project violate sonarqube generate sonarqube issue affected sonarqube issue prone affected difference non affected slightly prone affected sonarqube issue code security vulnerability fault proneness difference non affected affected moreover  severity assign sonarqube conclusion useful practitioner understand sonarqube issue refactored researcher bridge gap moreover vendor identify sonarqube issue accurately previous keywords proneness fault proneness sonarqube empirical introduction technical debt TD metaphor economic domain refers software maintenance activity postpone development feature payoff financial debt additional paid later growth TD commonly slows development therefore software manage factor evolution unpredictable internal external affect business environment factor technical issue information derive source code software usage specific compliance cod documentation convention architectural issue issue fix generate TD TD exist requirement debt code debt architectural debt debt debt debt documentation debt infrastructure debt versioning debt defect debt TD code TD static analysis adopt code TD analysis sonarqube cast coverity scan sonarqube frequently source code TD analysis adopt user public source project sonarqube allows code TD management monitoring evolution TD alert developer issue increase beyond specify threshold TD monitoring prioritization repayment action issue resolve refactoring sonarqube monitor TD analyze code compliance code violates sonarqube refactor violate technical debt thereby issue sonarqube classifies issue category code issue increase proneness related maintenance effort bug issue fault security vulnerability sonarqube assigns severity blocker critical minor info severity impact sonar issue label severity blocker bug highlight code probability application crash corrupt data footnote important code adopt sonarqube refer commonly code define fowler beck avoid misunderstand remainder refer issue code issue moreover refer issue detect sonarqube sonar issue sonarqube issue classify code code avoid misunderstand code propose refer fowler code research community impact quality issue inject code focus fowler code aspect issue equivalence similarity diffuseness fowler code sonarqube issue investigate moreover researcher investigate fowler code relevant developer evolve impact software quality proneness fault proneness maintenance effort aforementioned report significant fowler code proneness fault proneness empirical evidence impact sonar issue code proneness fault proneness limited previous sonarqube issue lack analysis magnitude phenomenon lack within artifact analysis lack temporal relation analysis presence introduction fault sonarqube user footnote impact bug fault proneness code proneness investigate proneness fault proneness moreover conduct data therefore directly obtain limited previous analyze proneness industrial project preliminary conduct focus fault proneness source project without proneness sonar issue fowler code harmful others analysis account magnitude phenomenon analyze sonar issue investigate aspect depth impact occurrence issue impact sonar issue harmful affected occurrence code addition affected issue fowler code likely exhibit defect undergo however investigate extent phenomenon affected fowler code non affected respect average exhibit defect researcher investigate within artifact proneness fault proneness due implementation complex feature fundamental proneness fault proneness evolution understand presence issue proneness fault proneness issue easily introduce throughout lifetime refactoring occurs issue remove another aspect overlook research temporal relationship presence introduction fault correlation presence issue mainly fowler code fault proneness proneness unknown previous investigate diffuseness sonar issue data adopt frequency sonar issue commit project validates expansion investigation impact sonar issue proneness fault proneness magnitude phenomenon sonar issue poorly diffuse investigation impact proneness fault proneness worthwhile therefore aim corroborate previous empirical research investigate proneness fault proneness software project already conduct investigate fowler code respect proneness fault proneness code commonly adopt data collection data analysis technique already publish conduct differentiate external replication investigate goal research sonar issue instead fowler code conduct source commit commits issue detect sonarqube default model specifically aim investigate impact sonar issue classify code maintenance focus specifically code fault proneness intend investigate extent previous finding report obtain confirm project knowledge date investigate relationship presence issue detect sonarqube proneness fault proneness data addition adoption exist cope limitation mention analyze fault proneness magnitude instance sonarqube violation SZZ algorithm artifact already smelly fault induced moreover enable replication data script adopt analysis publicly available replication package structure describes replicate sonarqube static analysis adopt related researcher recent define research metric hypothesis context data collection data analysis protocol achieve identify threat validity conclusion outlook future replicate summarize replicate conduct replication perform replication guideline propose carver investigate presence fowler code affect proneness fault proneness analyze release source project instance investigate code investigate diffuseness code code affect proneness fault proneness removal code affect proneness fault proneness therefore addition fault proneness investigate actual diffuseness code characteristic presence code correlate spearman correlation fault proneness non normalize version definition adopt calculate proneness commits extract versioning identify modify commit fault proneness fix fault obtain fault SZZ algorithm identify fault fix fault induce commits proneness fault proneness affected non affected visually plot distribution similarity distribution confirm mann whitney statistical cliff delta conclude diffuse related complexity report affected code generally prone fault prone non affected affected multiple code discover remove code reduces proneness motivation previous frequency sonar issue source project available technical debt data therefore diffuseness sonar issue enable investigate impact sonar issue proneness fault proneness preliminary investigation fault proneness sonar issue conduct project highlight discordant classification assign sonarqube fault proneness however conduct non traditional statistical approach apply machine model predict sonar issue likely generate fault future previous aim analyze proneness fault proneness project instead sonar issue classify bug code vulnerability detectable sonarqube moreover aim investigate issue traditional statistical approach publish already investigate proneness fault proneness issue fowler code therefore goal available data adopt approach increase validity differentiate external replication focus sonar issue instead fowler code previous investigate diffuseness sonar issue data frequency sonar issue commits java project therefore diffuseness sonar issue enables investigate impact sonar issue proneness fault proneness magnitude phenomenon sonar issue poorly diffuse investigation impact proneness fault proneness worthwhile fowler code sonarqube issue code TD therefore fowler code sonar issue adopt approach investigate fault proneness proneness identify fault fix fault induce commits SZZ algorithm mann whitney statistical cliff delta sonarqube nowadays popular automate static analysis  source developer findbugs checkstyle sonarqube sonarqube TD index service  platform execute private server moreover sonarqube widely adopt apache software foundation september sonarqube calculates metric code code complexity verifies code compliance specific cod define development moreover defines threshold quality gate metric sonarqube generates issue analyze source code violates cod metric outside predefined threshold gate remove issue remediation effort calculate remediation technical debt sonarqube reliability maintainability security vulnerability moreover sonarqube zero false positive reliability maintainability reliability bug issue something code reflect bug code maintainability related issue code decrease code readability code modifiability important code adopt sonarqube refer commonly code define fowler beck sonarqube classifies severity blocker bug probability impact behavior application production memory leak  jdbc connection sonarqube recommends immediately review issue critical bug probability impact behavior application production issue security flaw empty sql injection sonarqube recommends immediately review issue quality flaw highly impact developer productivity uncovered code duplicate unused parameter minor quality flaw slightly impact developer productivity switch statement info neither bug quality flaw violation online raw data replication package footnote related report relevant diffuseness proneness fault proneness issue inject code diffuseness technical debt issue knowledge vast majority publication investigate distribution evolution fowler code anti investigate sonarqube violation distribution fowler code investigate angle affect software refactored another conclude overtime distribution fowler code specific trend god shotgun surgery evolve constantly overtime increase decrease others without correlate project feature envy increase constantly overtime rank diffuseness fowler code feature envy message chain poorly diffuse speculative generality data private inappropriate intimacy god mostly diffuse average fowler code remove code code remove eliminate remove smelly artifact refactoring activity knowledge code TD calculate sonarqube investigate evolution TD weekly snapshot context source software project apache ecosystem moreover characterize constituent component TD significant increase issue complexity metric analyze project however discover normalize TD decrease aforementioned project metric evolve furthermore subsequent investigate accumulation TD software maintenance activity context source java software project apache software foundation analyze temporal granularity weekly snapshot focus issue fix conclude percentage TD repayment subset issue investigate accumulation TD php application focus relationship debt amount paid corrective maintenance activity analyze source php project perspective corrective maintenance frequency corrective maintenance effort related amount positive correlation amount accumulate TD  investigate diffuseness sonar issue data adopt java project reporting frequently introduce sonar issue related cod issue proneness fault proneness technical debt issue research conduct proneness fault proneness code recent investigate code architectural fowler code impact fowler code feature fault maintainability comprehensibility frequency maintenance effort previous confirm affected fowler code fault prone prone non affected another investigate aspect refactoring proneness fault proneness monitor fix non refactored refactoring decrease proneness fault proneness worth highlight valid generic perspective related limited context fowler code issue detect sonarqube however research conduct fowler code confirm fowler code god brain strongly correlate error defect others feature envy shotgun surgery affect fault proneness proneness investigate stability instability factor evaluate probability affected functionality exist functionality modify approach conduct proneness proxy frequency source code structure affect probability propagate code apply approach source project investigate fault proneness fowler code MVC android metric local variable confuse propose approach evaluate fault proneness structure structure investigate proneness fault proneness issue detect sonarqube distribution metric sonarqube issue industrial project apply approach goal investigate specific sonarqube issue introduce code faulty decrease sonar issue introduce machine ML technique bagging  logistic regression project apply technique modify version code manually remove sonar issue fault avoid sonar issue remove ML predict proneness sonarqube violation evolution investigate sonarqube violation increase code churn subsequent commits apply industrial project javascript author prediction accuracy decision random naive bayes report affected sonarqube violation proneness however prioritize classify prone violation previous conduct preliminary investigation fault proneness sonarqube bug data label fault induce commits SZZ algorithm investigate fault proneness machine model bug sonarqube generally fault prone consequently fault prediction model propose sonarqube extremely previous confirm investigation fault proneness proneness sonarqube apply sonarqube calculate TD thoroughly investigate  confirm therefore investigate fault proneness proneness software quality data project previous knowledge investigate sonarqube proneness fault proneness project empirical differentiate external replication propose goal research context data collection data analysis procedure replicate publish raw data script adopt analysis replication package footnote goal research goal analyze diffuseness sonar issue software ass impact proneness fault proneness code technical debt issue severity accordingly expectation extend goal propose investigate sonar issue instead fowler code therefore formulate goal goal metric GQM template   debt issue  respect fault proneness proneness  developer  context java project aforementioned goal extend research rqs target fault proneness proneness sonar issue instead code therefore derive rqs RQ affected sonar issue proneness fault proneness respect non affected RQ aim understand affected sonar issue prone fault prone non affected magnitude proneness fault proneness bug fix therefore formulate sub rqs RQ investigate proneness RQ investigate fault proneness presence sonarqube issue suppose decrease quality code proneness fault proneness affected issue RQ affected sonar issue proneness respect non affected affected sonar issue independently severity prone non affected difference proneness affected sonar issue non affected statistically significant RQ affected sonar issue fault proneness respect non affected affected sonar issue independently severity fault prone non affected difference fault proneness affected sonar issue non affected statistically significant RQ affected sonar issue proneness fault proneness respect non affected RQ aim understand presence sonar issue prone RQ fault prone RQ sonar issue classify code increase maintenance complexity maintenance effort sonar issue classify bug increase fault likelihood code prone affected bug fault prone therefore formulate sub rqs related hypothesis RQ affected sonar issue proneness respect non affected affected sonar issue prone non affected difference proneness affected sonar issue non affected statistically significant RQ affected sonar issue fault proneness respect non affected affected sonar issue fault prone non affected difference fault proneness affected sonar issue non affected statistically significant RQ affected sonar issue severity proneness fault proneness respect non affected RQ aim understand severity assign increase actual proneness RQ fault proneness RQ independently bug code hypothesize affected sonar issue severity prone fault prone severity highly severe code fault due apply code contains bug frequently modify therefore formulate sub rqs related hypothesis RQ affected sonar issue severity proneness respect non affected affected sonar issue severity prone non affected difference proneness affected sonar issue severity non affected statistically significant RQ affected sonar issue severity fault proneness respect non affected affected sonar issue severity fault prone non affected difference fault proneness affected sonar issue severity non affected statistically significant RQ affected sonar issue severity proneness fault proneness respect non affected RQ aim combine RQ RQ understand eventual disagreement classification sonar issue severity sonarqube classifies issue code prone issue bug fault prone moreover severity implies likelihood impact underlined issue code severity blocker probability impact proneness similarly issue bug severity probability severe fault therefore formulate sub rqs investigate proneness RQ fault proneness RQ affected sonarqube issue severity aforementioned assumption fault proneness affected bug severity fault prone affected severity addition affected code severity prone affected severity item assumption formulate sub research RQ affected sonar issue code severity proneness respect severity affected sonar issue code severity prone affected code severity non affected difference proneness affected code severity statistically significant RQ affected sonar issue bug severity fault proneness respect non affected affected sonar issue bug severity prone affected bug severity non affected difference proneness affected bug severity statistically significant context adopt project technical debt dataset data contains java project apache software foundation  repository project data criterion sample fulfill criterion developed java commits usage issue issue report project maximize diversity representativeness comparable project respect project domain moreover project mature due strict review inclusion  moreover project regularly review code strict quality report project analyze commits project loc analyze commits artifact commits detail data description project project   commit  commit fault timeframe   atlas aurora  beam    cli codec collection configuration daemon DBCP   exec  IO    net  validator    client  core mina   java zookeeper sum data collection previous data technical debt dataset data contains analysis sonarqube project sonar issue data data obtain analyze commits project  default sonar export relevant data data csv file actual analysis extract data available replication package footnote calculate proneness commits obtain data git repository git command define commits sum addition deletion replicate data file extract project repository analysis calculate fault proneness identify fault induce bug fix commits technical debt dataset data export data data fault induce fault fix commits SZZ algorithm algorithm summarize identification bug fix commits algorithm commits bug report label fix regular expression identify bug keywords commit message identification bug introduce commit algorithm employ diff functionality implement version fix bug fix commit version previous version SZZ locates commit modify delete previous apply annotate blame functionality difference commit  predecessor resource java file fix bug data structure therefore SZZ identifies introduce bug  source configuration management github SZZ label commit adc potential bug introduce commit proneness fault proneness normalize effective code java file data grep command command java file commit project pickle file file script extract data replication package image KB image SZZ approach data contains analyze data commits project however commits definition proneness fault proneness adopt definition fault consequent commits difference zero however generally commit vast majority addition frequency commits significantly project commits active project detect proneness practically zero almost project commits actually prone logic applicable fault proneness fix amount commits analysis commit project average release analyze project sufficient amount prefer release instead fix commits release information available data commits commits analysis commits java file data analysis rqs investigate difference affected sonar issue non affected affected sonar issue affected proneness fault proneness calculate normalize proneness fault proneness adopt approach proneness commit commit precedes commit sum addition deletion developer evolution commits effective code commit define effective code non empty  bracket fault proneness commit define commits commits fix fault program alter define similarly definition proneness boxplots distribution data visualize data plot consists drawn quartile whisker minimum maximum data inside median minimum maximum drawn iqr inter quartile data outside distribution statistical distribution non parametric mann whitney null hypothesis random sample probability sample drawn null hypothesis reject distribution statistically mann whitney convey information magnitude difference cliff delta non parametric ordinal data interpret guideline  kim negligible medium RQ non affected affected RQ grouped affected identify sonar issue RQ severity severity affected sonar issue severity non affected sonar issue hence belong subgroup RQ RQ data RQ severity violate RQ sonarqube classification issue sonar issue code prone bug fault prone analysis sonar issue calculate fault proneness proneness sonar issue visualize boxplots RQ RQ sonar issue hence belong inspect potential sonar issue combination investigate RQ grouped data severity affected sonar issue severity previous rqs visualize distribution boxplots distribution mann whitney cliff delta RQ affected sonar issue proneness fault proneness respect non affected issue detect sonarqube detect analyze project analyze commits affected sonar issue non affected affected sonar issue addition affected almost logarithmically sonar issue detect instead separately detect issue grouped logarithmic function amount data distribution proneness majority per code suggests difference distribution minor non affected affected identify significance perceive difference non affected affected apply mann whitney cliff delta statistical proneness mann whitney zero suggests statistically significant difference cliff delta indicates difference distribution RQ reject null hypothesis fault proneness visualize fault project therefore maximum boxplot zero fault outlier however statistical data mann whitney zero suggests statistically significant difference however negligible RQ conclude evidence reject null hypothesis moreover investigate distribution proneness fault proneness affected sonar issue issue greatly impact proneness slightly issue slightly affected statistical confirm sonar issue affect proneness fault proneness proneness mann whitney distribution however cliff delta difference negligible item difference differentiate affected subgroup previously RQ fault proneness visualize non zero outlier addition statistical reveal sonar issue non affected negligible RQ RQ affected sonar issue proneness fault proneness respect non affected diffuseness detect TD grouped report data regard affected severity sonar issue affected moreover violate TD recurrence violate introduction proneness affected fault proneness visualize plot consists zero proneness distribution distinguishable diffuse vulnerability code approximately maximum diffuse bug non affected maximum moreover mann whitney regardless distribution affected distribution non affected however negligible RQ conclude accept null hypothesis image KB image proneness affected sonar issue RQ image KB image proneness affected sonar issue severity RQ RQ regard evaluation fault proneness distribution fault per code consists zero outlier inspect visualize moreover significant difference affected non affected mann whitney suggests bug statistically significant difference distribution however cliff delta suggests negligible RQ evidence reject null hypothesis image KB image diffuseness detect sonar issue RQ RQ   affected  introduction  info minor critical blocker code  info minor critical blocker  info minor critical blocker mann whitney MW cliff delta non affected affected sonar issue severity RQ RQ    proneness      minor critical blocker  code vulnerability RQ affected sonar issue severity proneness fault proneness respect non affected report diffuseness detect TD grouped severity proneness affected regard diffuse severe info blocker median zero meaning data consist zero median info blocker maximum per code around diffuse critical minor mann whitney cliff delta severity distribution proneness non affected however negligible severity minor critical info blocker statistical confirm visual boxplots namely significant difference non affected severity RQ therefore accept null hypothesis fault proneness severity fault proneness mann whitney suggests distribution negligible RQ evidence reject null hypothesis image KB image RQ affected sonar issue severity proneness fault proneness respect non affected fault proneness proneness severity combination sonarqube vulnerability severity info minor blocker bug severity info minor code proneness severity instead surprisingly prone severity info blocker prone critical RQ inspect proneness vulnerability bug however proneness severity fault proneness zero regardless severity item affect fault proneness bug affected severity RQ image KB image discussion discus obtain accord rqs practical implication research research analysis evolution java project sonar issue remarkably affect proneness fault proneness non affected affected sonar issue prone affected difference moreover inspect fault proneness code generally fault difference affected non affected issue detect sonarqube retrieve analyze project bug code vulnerability account sonar issue classify bug suppose increase fault proneness increase fault proneness unexpectedly remain bug slightly increase proneness instead sonar issue classify code affect proneness impact proneness moreover sonar issue classify vulnerability proneness however proneness fault proneness vast majority sonar issue increase severity assign sonarqube implication sonarqube recommends manual customization instead ruleset however report  query sonarqube public instance apis public project default ruleset sonar probably developer customize understand prone fault prone sonar issue proneness increase proneness affected sonar issue industrial project javascript however adopt javascript java difference regard proneness due project source java project define java however conduct industrial project code raw data accessible dept confirm trend obtain preliminary investigation fault proneness sonarqube implication practitioner carefully sonarqube invest effort reduce proneness fault proneness recommend practitioner apply approach adopt perform historical analysis project classify actual proneness fault proneness code instead rely perception fault prone prone threat validity introduce threat validity structure runeson höst construct validity threat concern relationship theory observation adopt detect sonarqube goal analyze diffuseness sonar issue software ass impact proneness fault proneness code sonar issue severity unfortunately project data tag release therefore evaluate proneness fault proneness bug fix aware release accurate fault however highlight usage release threat release commits directly comparable unfortunately git explicit tag project data rely SZZ algorithm classify fault induce commits aware SZZ rough approximation commits induce fix git limitation git fault fix modify induce moreover cannot exclude misclassification jira issue feature classify bug data analysis normalize proneness fault proneness per effective loc alternative complexity project sonarqube analysis frame vast majority fowler code replicate developer adopt reflect exactly developer obtain sonarqube project without customize project recently adopt sonarqube corroborate finding project sonarqube default internal validity threat concern internal factor affected aware static analysis detect non negligible amount false positive sonarqube detection accuracy perfect however goal replicate adopt practitioner sonarqube analyze proneness fault proneness sonar issue detect default therefore modify remove false positive accurately reflect developer obtain sonarqube project issue detect sonarqube duplicate reporting issue violate resolution aware remove issue analysis report without modify output sonarqube aware cannot relationship presence sonar issue fault proneness proneness influence factor investigation aware role business logic frequently modify others external validity threat concern generalizability project apache software foundation  specific strict quality project maximize diversity representativeness comparable project respect domain project stem application domain external library framework web utility computational infrastructure application domain important criterion selection project analyze balance selection context application domain project indication non generality prediction model application domain chosen source project cannot speculate industrial project moreover java project due limitation sonarqube sonar issue project developed ion directly comparable conclusion impact sonar issue proneness fault proneness severity java apache software foundation analyze nearly commits fault project infect sonarqube issue violate analyze reveal dirty prone affected sonar issue however difference dirty regardless severity fault proneness significant difference dirty sonarqube classification sonar issue sonar issue bug code vulnerability statistically significant proneness sonar issue classify bug suppose increase fault proneness limited fault proneness sonarqube useful sonar issue monitor developer related maintainability aspect proneness despite impact proneness sonar issue monitoring project sonarqube cleaner code slightly reduce proneness recommend sonarqube recommend invest refactoring sonar issue goal reduce proneness fault proneness instead recommend code sonar issue useful practitioner understand prioritize sonar issue refactor researcher bridge gap vendor identify TD accurately regard future investigate  sonarqube issue technical debt architectural documentation debt planning replicate adopt analysis technique machine moreover conduct practitioner understand perceive  sonar issue code accurately identify relevant TD issue finally planning investigate automate approach identify fault proneness sonarqube issue enable integrate approach CI CD pipeline