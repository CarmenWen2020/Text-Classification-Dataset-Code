vulnerability classification important activity software development software quality maintenance typical vulnerability classification model usually involves stage selection relevant identify via feature selection involves stage document compute stage classifier generally frequency inverse document frequency TF idf model widely metric vulnerability classification however issue hinder effectiveness TF idf model document classification address propose evaluate framework vulnerability severity classification frequency inverse gravity TF igm specifically extensively frequency inverse gravity frequency inverse document frequency information gain feature selection machine algorithm vulnerable software application security vulnerability experimental TF igm model promising metric vulnerability classification classical metric effectiveness feature selection vulnerability classification varies significantly across datasets feature selection improves vulnerability classification previous keywords software vulnerability classification feature selection machine algorithm severity introduction empirical research regard management vulnerability software recently focus severity assessment software vulnerability increase attention exploit effectiveness machine algorithm partly due continuous disclosure critical severe vulnerability increase financial loss vulnerability healthcare defense critical infrastructure microsoft security response disclose overall increase severe vulnerability across account software vulnerability additionally report  sullivan increase critical severity vulnerability google project zero reporting critical severity vulnerability importantly august intel report warn severe vulnerability software identifies specification intel processor accord report bug significant impact software denial service attack information disclosure although firm release update address bug attacker exploit vulnerability gain escalation privilege previously infect machine ameliorate vulnerability organization symantec corporation atlassian security advisory  security forum incident response security propose varied technique improve qualitative quantitative analysis vulnerability instance national institute standard technology  report  technical approach namely formal security addictive software analysis domain specific technique target defense automatic software diversity reduce security vulnerability software furthermore exist aim empirically characterize ass severity security vulnerability   propose multi target approach estimate vulnerability characteristic severity model estimate vulnerability characteristic subsequently calculates vulnerability severity predict characteristic furthermore machine algorithm namely random boost decision propose vulnerability classification model experimental improve classification accuracy another propose automate framework predict severity vulnerability textual description vulnerability extract vulnerability report vulnerability exposure cve vulnerability CVSS source vulnerability database  construct feature vector extract textual description vulnerability report additionally apply principal component analysis pca linear discriminant analysis lda reduce dimensional feature finally machine algorithm predict severity software vulnerability aforementioned literature evident witness significant research relate vulnerability assessment accordingly vital building vulnerability classification model classifies severity software vulnerability text representation phase aim transform text information vector document recognize classify machine algorithm phase involves feature selection selects subset feature improve performance classification model importantly involves stage document compute   define concept assign appropriate improve classification accuracy   described concept quantify importance literature concept formulate frequency inverse document frequency TF idf widely metric vulnerability classification TF idf model stage text mining binary classification model classify vulnerability hidden impact neutral experimental propose model capable classify vulnerability however classification accuracy classifier hence important recommendation researcher improve feature extraction consequently recent research automatic text categorization ATC via TF idf model heavily compromise TF idf model vulnerable bias important typically refer similarly reiterate TF idf model effective metric text classification ignores label training document efficient within context vulnerability classification proposes evaluates framework software vulnerability severity classification frequency inverse gravity TF igm model theoretical extension concept validate demonstrates TF igm model incorporate propose framework improve vulnerability classification approach TF igm model compute frequency textual description vulnerability report furthermore performance introduce metric TF idf information gain IG feature selection objective bridge gap metric apply automatic text categorization vulnerability classification aim evidence global upsurge software engineering specifically broader scope vulnerability analysis frequency inverse gravity frequency inverse document frequency information gain feature selection demonstrate effectiveness model publicly available vulnerability datasets vulnerability exposure cve national vulnerability database nvd  security additionally classification model assess standard classification evaluation metric contribution vulnerability classification framework within frequency inverse gravity validate propose comparative frequency inverse gravity frequency inverse document frequency information gain feature selection vulnerable software application evaluates performance machine algorithm introduce metric contribute knowledge security expert improve vulnerability prioritization research outcome explores research RQ effective introduce scheme RQ feature selection technique introduce metric RQ machine algorithm performs context software vulnerability classification originality extension outline difference guideline experimental replication propose carver researcher practitioner software engineering domain propose approach leverage automatic text categorization concept frequency inverse gravity improve vulnerability classification extract historical vulnerability report source application metric preprocessed datasets machine algorithm namely decision random intention appropriate model vulnerability classification preliminary obtain model achieve precision across application classification model precision frequency inverse gravity model model precision mac OS linux kernel chrome OS respectively recall model application namely mac OS linux kernel internet explorer mozilla firefox monkey frequency inverse gravity model instance recall application recall microsoft chrome OS analysis suggests statistical significant difference metric namely frequency inverse gravity frequency inverse document frequency model summary preliminary demonstrates effectiveness practicality introduce metric vulnerability classification recommend frequency inverse gravity efficient metric vulnerability classification conduct extensive validate approach difference previous publication datasets cve nvd category web browser operating validates propose approach vulnerable application cve nvd  security furthermore application unique confirm vulnerability benchmark frequency inverse gravity model frequency inverse document frequency cohen advice technique simplest alternative partly due metric vulnerability classification performs comparative information gain feature selection chose information gain benchmark technique frequency inverse gravity model leverage label feature selection yuen statistical significant difference metric utilizes yuen cliff validate machine algorithm parameter setting machine technique validate previous organization organize background definition vital understand empirical research framework methodology experimental detail research empirical summary related relate software vulnerability classification severity assessment software vulnerability threat validity summarizes future research direction preliminary definition terminology notation vulnerability flaw weakness error software implicit explicit failure confidentiality integrity availability vulnerability assessment explicit attempt discover software vulnerability exploit adversary vulnerability assessment model aim pragmatic countermeasure mitigate software vulnerability severity impact defect development software application risk technique capture characteristic software vulnerability numerical severity numerical translate qualitative scheme medium critical vulnerability prioritization critical severity vulnerability classify critical allows remote code execution without user interaction severity vulnerability categorize exploit normally compromise integrity confidentiality availability data medium severity vulnerability categorize medium attacker gain access local network device severity vulnerability categorize significant impact software software vulnerability classification researcher technique classify software vulnerability typical vulnerability classification model categorize binary classification multi classification binary classification extract vulnerability classify severe non severe severity essential non essential multi framework document classify label characteristic security vulnerability access vector access complexity authentication confidentiality impact integrity impact availability impact generally stage building model feature extraction index feature selection classification feature extraction extract numerical information raw text document widely feature extraction technique bag approach feature extraction usually generates feature increase degrade classification accuracy effectiveness refer curse dimensionality text classification address challenge technique pre processing feature selection propose improve quality text representation develop quality classification model feature selection involves subset feature feature improve classification accuracy crucial role vulnerability analysis directly affect classification accuracy assign document feature importance document introduce technique popular metric TF idf model information retrieval technique document query vector associate relevance keywords document furthermore relevance occurrence document although frequency inverse document frequency model easy implement previous issue regard effectiveness model solely rely TF idf model tends estimate classification accuracy vulnerability classification model substantial improvement achieve investigate frequency inverse gravity vulnerability severity classification reiterate appropriate important tune vector machine svm text classification derives insight building vulnerability classification model frequency inverse gravity frequency inverse document frequency information gain feature selection improve performance vulnerability classification classical metric fundamental concept data mining text analysis task convert document vector vital role automatic text categorization recent performance classification model affected via inappropriate metric aim propose successfully apply diverse domain stock volatility analysis biomedical information retrieval text classification generally categorize supervise unsupervised supervise information membership training document calculate supervise technique metric available feature selection TF chi TF IG TF GR unsupervised usually formulate frequency inverse document frequency frequency inverse document frequency model frequency TF inverse document frequency idf TF occurs document idf importance TF define nij occurrence document denominator sum occurrence document inverse document frequency importance obtain document document logarithm document corpus denotes document furthermore TF frequency idf inverse document frequency instance TF express TF TF TF idf express denotes document ith depicts widely frequency factor binary normal frequency logarithm frequency inverse frequency normalize   define although frequency inverse document frequency easy implement deficiency pertain effectiveness ignores available label training document hence compute cannot fully denote importance text classification document entire ignores feature role document category synonym lastly assumes independent evidence similarity practical perspective apply TF idf model stage automate bug report classification bug description summary however performance TF idf model sub optimal hence frequency token occurs description resolve aforementioned challenge previous propose varied extend standard TF idf tfidf formula frequency TF inverse frequency frequency inverse gravity mutual information improve gini index balance scheme odds ratio gini index investigates proven reliable context text classification frequency metric frequency   vector  occurs document  logarithm frequency  frequency usually concept frequency inverse gravity knowledge frequency inverse gravity metric context text classification aim develop characterize inter distribution distinguish corpus distinguish assign others text representation capture grain inter distribution across text calculate reflect importance text classification adjustable parameter achieve optimal performance focus develop model reasonable improve text classification hence author argue mainly distinguish embody primarily uneven distribution across necessarily intra distribution additionally document importance document contribution text classification correspond respectively local global factor aforementioned assertion theoretical foundation proven  establish inter distribution important intra distribution distinguish aim propose frequency model incorporates statistical model inverse gravity effectively characterize inter distribution alternatively inverse gravity model non uniformity concentration inter distribution distinguish inverse gravity model define igm inverse gravity  distribution  frequency sort descend rank similarly frequency  refers specific document frequency document denote  maximum  descend inverse gravity formula inverse gravity calculate normalize frequency occurrence individual feature selection technique feature selection important preprocessing activity machine data mining widely apply plethora bug prediction software effort estimation vulnerability prediction define concept subset feature subset model training feature selection technique namely filter wrapper embed filter commonly refer relevance index relevance metric statistical technique assign feature independently machine algorithm filter feature accord feature selection metric feature involves counting occurrence feature training positive negative training separately compute function document frequency information gain gini index mutual information odds ratio chi approach feature selection technique category wrapper employ strategy relevant feature evaluate obtain subset mechanism finally embed perform variable selection training generally specific algorithm central premise feature selection technique data contains feature redundant irrelevant remove without significant machine model benchmark feature selection information gain IG decrease entropy obtain category prediction presence absence document metric classification information ass importance lexical item classification task formula metric express lei denotes document collection feature approach information gain feature compute feature information gain classification propose approach describes propose framework characterize classify severity software vulnerability metric information gain feature selection graphical overview overall framework propose model phase source application utilized ensure optimal performance propose framework standard preprocessing technique apply textual description description vulnerability software vulnerability stage detail feature extraction feature selection phase detail classification involve machine algorithm image KB image overall framework experimental procedure dataset collection describes vulnerable software application experimental analysis specifically vulnerability report cve nvd describes datasets vulnerability report contains metadata feature unique ID summary description usually keyword description description severity vendor publish date update date etc vulnerability description  research vulnerability database  security organization database source nvd security vulnerability vulnerable software application namely adobe flash player enterprise linux linux kernel  reader safari microsoft oracle business suite chrome  vulnerable application unique confirm vulnerability dataset description    vul  microsoft operating manage microsoft NT operating  multimedia development storage playback oracle business  integrate business application ERP crm scm adobe flash  software multimedia content internet application audio video  source graphical web browser manage webkit enterprise  source operating execute program emerge technology linux  source monolithic unix operating execute program   software efficient versatile software edit pdf file microsoft  suite desktop productivity application manage microsoft excel access google  source internet browser developed google image KB image vulnerability report chose validate propose approach datasets described furthermore cve nvd widely vulnerability database empirical research data preprocessing data extraction phase perform preprocessing address data quality issue vulnerability data punctuation frequently dataset significant text mining remove text data ensures optimal performance text mining algorithm activity preprocessing phase tokenization involves text syllabus meaning token tokenization reduces textual data remove unnecessary improve performance model removal frequently datasets remove extract corpus stem utilized porter stem algorithm convert derive procedure sharma WV  procedure WV java library statistical model vector representation text document function tokenization filter snowball stemmer frequency furthermore  chinese lexical analysis tokenization keyword extraction identification entity recognition tag compatible operating linux android IOS invoked program java python summary preprocessing phase security vulnerability index extraction  extraction important activity information retrieval text mining processing application technique identification   extraction  assignment index assignment  extraction identifies document intrinsic frequency assignment approach document classify accord content correspond vocabulary preprocessing stage involves segmentation coherent vulnerability description transforms entire textual report semantic stem tokenization removal procedure outline extract candidate textual description software vulnerability computation stage text mining involves assign document metric adopt alternatively frequency inverse gravity frequency inverse document frequency model compute frequency textual description vulnerability report feature selection generally feature selection technique rank feature accord specific metric useful indicator improve classification accuracy apply information gain IG feature selection ass propose classification framework experimental describes experimental procedure propose classification model specifically overview dependent independent variable machine technique evaluation metric apply respectively experimental conduct series performance metric information gain feature selection intel core 8GB ram desktop utilized stratify fold validation approach procedure approach split data fold training purpose validation purpose obtain iteration average compute stratify fold validation standard evaluation widely apply software engineering dependent independent variable dependent variable severity vulnerability specifically utilized CVSS metric characterize severity software vulnerability independent variable vulnerability report description cve nvd approach assumption numerical severity vulnerability potentially distinguish severe non severe vulnerability textual description vulnerability report explicitly allows user assist remote attacker execute arbitrary code allows attacker leverage renderer access denial service application crash hypothesis severe vulnerability description unspecified function javascript implementation google chrome creates expose temporary footprint login web site perceive non severe vulnerability focus researcher seek predict severity vulnerability machine algorithm effectiveness weigh metric information gain feature selection performance classification model classification algorithm experimental analysis model effectiveness mechanism capability classify highly multi dimensional datasets classifier widely classification algorithm prior implementation classifier  environment knowledge analysis weka toolkit random RF ensemble algorithm prediction majority vote weak decision stable decision model prediction accuracy predictor specify knn non parametric algorithm classification regression identifies training sample instance predicts instance training sample similarity metric euclidean distance metric similarity training instance instance chose classifier easy implement capable classify unknown instance parameter varied decision DT decision model widely apply document classification algorithm generates classification decision dataset recursively available data algorithm recursively split data subset maximize information gain benefit decision categorical data utilized parameter setting naïve bayes NB bayes theorem formula calculates probability counting frequency combination historical data default parameter setting apply vector machine svm statistical machine algorithm performs usually apply classification regression however mostly classification svm algorithm performs naïve bayes classifier appropriate radial basis function rbf multilayer perceptron mlp feedforward artificial neural network model generates output input parameter setting logistic regression LR binary classification model regression analysis model model dependent variable dichotomy conduct preliminary evaluate performance machine algorithm datasets however preliminary obtain RF knn DT NB svm vulnerable software application hence focus effort classifier approach instance shin williams significant difference machine algorithm vulnerability prediction fault prediction model hence report logistic regression similarly significant difference LR DT RF svm evaluation metric performance classification algorithm precision recall accuracy compute overall performance classifier metric widely classification evaluation metric construct confusion matrix compute precision recall evidence positive TP false negative FN negative TN false positive FP confusion matrix comprise aforementioned taxonomy compute precision recall define precision denotes correctly classify positive instance instance label classifier positive alternatively ratio correctly classify severe vulnerability severe vulnerability precision false positive precision false positive recall correctly classify positive instance positive instance data ratio correctly classify severe vulnerability actual severe vulnerability recall false negative recall false negative harmonic precision recall accord vulnerability classification model precision security expert false positive model recall predict vulnerability accurately impossible achieve recall precision aim focus judgment confusion matrix sample  outcome  severe actual  positive TP false negative FN non  positive FP negative TN accuracy denotes overall effectiveness classifier research severe non severe security vulnerability correctly classify extract vulnerability formula precision recall accuracy respectively additionally compute curve auc   advocate auc predictive performance operating prediction task statistical interpretation auc perfect algorithm auc random classifier auc interpretation auc excellent classification classification classification classification failure compute matthew correlation coefficient mcc define regression coefficient evaluates quadrant confusion matrix chose metric relatively easy interpret indicates perfect prediction whereas indicates data wrongly predict finally perform comparison yuen cliff recommend cliff estimate magnitude non parametric assumption distribution cliff model actual severe vulnerability empirical experimental focus performance introduce metric research inspect performance frequency inverse gravity frequency inverse document frequency information gain feature selection RQ effective introduce scheme motivation validate effectiveness frequency inverse gravity model benchmark technique namely TF idf information gain approach machine algorithm namely decision random application category web browser operating additionally conduct validate effectiveness practicality propose approach vulnerable software application performance classifier assess classification evaluation metric define earlier metric commonly apply evaluation metric finally robust convincing approach fold validation approach report average performance TF igm TF idf model algorithm conclude curve classification model knn RF DT source application approach curve metric probability classifier rank randomly chosen severe vulnerability randomly chosen non severe vulnerability analyze performance classifier curve TF igm model TF idf model knn RF DT model auc respectively microsoft discussion internet explorer mozilla firefox auc however web application classification scheme regard auc computation confirm average approach yield classification accuracy auc TF idf approach characteristic various datasets data richness account varied performance achieve various classification model instance auc internet explorer mozilla firefox linux kernel microsoft various application meta feature precision classifier precision TF igm model mac OS linux chrome OS classifier precision respectively application TF idf approach precision mac OS linux chrome OS respectively regard category application web browser operating classification model precision across entire web application TF igm model TF idf model relation operating application model precision TF igm model TF idf model hence conclusion derive TF igm model useful effective classical metric classification performance machine model TF igm  tech precisionrecallf  mac  RF DT linux  RF DT chrome  RF DT knn RF DT knn RF DT  RF DT  RF DT  RF DT  RF DT  RF DT classification performance machine model TF idf  tech precisionrecallf  mac  RF DT linux  RF DT chrome  RF DT knn RF DT knn RF DT  RF DT  RF DT  RF DT  RF DT  RF DT bold performance precision recall auc accuracy across learner ML machine image MB image curve mac OS linux kernel datasets image MB image curve chrome OS explorer datasets image KB image curve firefox  datasets recall machine algorithm application namely mac OS linux kernel internet explorer firefox  TF igm model instance recall application recall microsoft chrome OS recall TF idf model consistent across datasets although achieve recall application technique really performance model harmonic precision recall significant improvement application TF igm model similarly classifier handful application TF idf model addition decision model nearly accurate random model TF igm model contrast obtain explain TF idf model random classifier accurate model mcc TF igm approach average mcc TF idf approach conclusion preliminary finding frequency inverse gravity model reliable effectively apply improve software vulnerability classification furthermore yuen recommend investigate statistical significant difference frequency inverse gravity frequency inverse document frequency model across datasets perform statistical asymptotic significance report depict finding demonstrate exist statistically significant difference frequency inverse gravity frequency inverse document frequency across application existence statistically significant difference confirms finding TF igm model outperforms TF idf model experimental average frequency inverse gravity model classify software vulnerability report accuracy classical model application preliminary finding validate effectiveness frequency inverse gravity model within broader scope software vulnerability severity classification yuen statistical significant difference TF igm TF idf   mac  RF DT linux  RF DT chrome  RF DT knn RF DT knn RF DT google  RF DT microsoft  RF DT internet  RF DT mozilla  RF DT  RF DT establish frequency inverse gravity model perform classical metric conduct empirical datasets evaluate effectiveness model within context software vulnerability classification security vulnerability vulnerable software namely adobe flash player enterprise linux linux kernel  reader safari microsoft oracle business suite chrome  summary precision recall curve accuracy propose technique apply datasets specifically feature selection approach TF igm approach application classification performance machine model IG  tech precisionrecallf  RF knn DT svm  knn DT svm oracle business  knn DT svm adobe flash  knn DT svm  knn DT svm  knn DT svm linux  knn DT svm   knn DT svm microsoft  knn DT svm google  knn DT svm classification performance machine model TF igm  tech precisionrecallf  RF knn DT svm  knn DT svm oracle business  knn DT svm adobe flash  knn DT svm  knn DT svm  knn DT svm linux  knn DT svm   knn DT svm microsoft  knn DT svm google  knn DT svm convenience reader empirical comparison harmonic precision recall fifth classifier RF knn DT svm NB application evaluation classification bold implies correspond machine algorithm classification performance evaluation metric IG machine technique frequency inverse gravity model furthermore dot plot feature selection approach consistently perform regard feature selection technique outperform frequency inverse gravity model application adobe flash player enterprise linux linux kernel oracle business suite   application chrome microsoft frequency inverse gravity model feature selection approach alternatively frequency inverse gravity model outperform feature selection approach machine algorithm almost application instance model feature IG respectively RF knn DT svm NB microsoft application image KB image performance plot feature selection approach across datasets image KB image performance plot TF igm approach across datasets summary across classification model datasets achieve model feature IG implies model perform IG apply datasets relation propose framework negative datasets namely chrome microsoft characteristic various application role relation classifier microsoft frequency inverse gravity information gain feature selection respectively average obtain model adobe flash player enterprise linux linux kernel oracle business suite  safari  reader machine algorithm svm DT model accurate classifier approach however NB RF stable classifier application furthermore model linux kernel feature selection approach instance linux kernel vii lastly finding achieve frequency inverse gravity improves software vulnerability classification effectively apply future research RQ average achieve classification model feature information gain nevertheless web browser operating datasets performance frequency inverse gravity model consistent across vulnerable software conclude TF igm model effective metric vulnerability classification investigate datasets classifier predicts variation classify severity software vulnerability positive predict probability vulnerability classify severe actually severe earlier precision false positive precision false positive feature selection approach precision across application frequency inverse gravity approach precision consistent across application achieve precision application conclusion precision classify severe actually severe vulnerability discussion recall recall application information gain frequency inverse gravity microsoft google chrome trend classification task practically impossible achieve recall precision focus judgment image KB image performance plot precision IG approach across datasets image KB image performance plot precision TF igm approach across datasets accuracy widely evaluation metric classification task indicates classification rate severe non severe security vulnerability correctly classify extract vulnerability intuitive evaluation metric performance classifier however generally appropriate metric highly imbalanced datasets accuracy stress accuracy appropriate metric highly imbalanced vulnerability dataset instance classification model accuracy across application accuracy classifier application adobe flash player oracle business suite safari svm NB exhibit accuracy RF knn svm regard oracle business suite similarly knn NB DT classifier accuracy  frequency inverse gravity approach discussion evaluate performance model regard feature selection approach evident machine algorithm exhibit strength weakness apply blindly datasets chose judge performance model accuracy stage objective investigate superiority technique perform robust statistical yuen cliff pairwise difference technique cliff estimate magnitude difference approach non parametric assumption distribution depicts magnitude apply analysis conduct statistical asymptotic significance yuen cliff delta investigate existence statistical practical difference technique across datasets datasets exists significant difference information gain frequency inverse gravity practical significant difference cliff delta statistical significant difference information gain igm     oracle adobe flash player safari linux kernel  reader chrome statistical significance practical significance magnitude threshold cliff delta magnitude  negligible  medium  RQ feature selection technique introduce metric motivation prior defect classification misclassification rate classification accuracy defect model feature utilized prior training classification phase similarly software vulnerability prediction reiterate performance vulnerability prediction model heavily depends feature construct statistical machine algorithm important mindful irrelevant redundant feature vulnerability datasets feature curse dimensionality address issue recent apply varied feature selection technique prior training machine model improve classification accuracy approach motivate theory investigates information gain feature selection propose vulnerability classification model aim performance introduce metric information gain feature IG yield improve classification performance frequency inverse gravity model however difference application reinforces finding previous finding conclude effectiveness feature selection technique vulnerability classification varies significantly across datasets feature selection procedure improve vulnerability classification RQ conclude observation impact feature selection software vulnerability classification model varies across datasets across machine algorithm suggests feature selection improves software vulnerability classification RQ machine algorithm performs context software vulnerability classification motivation machine technique recently stride domain widely apply enterprise  com  com amazon machine google prediction api identify classify severity security vulnerability evaluate effectiveness machine algorithm  environment knowledge analysis weka toolkit objective investigate appropriate model vulnerability classification approach inspire author perform comparative classifier publicly available defect prediction datasets nasa metric data repository machine algorithm evaluation phase classification knn RF DT accurate classifier metric performance IG TF igm svm DT accurate classifier approach RQ experimental analysis naïve bayes random stable classifier application however decision model accurate classifier approach related previous research relation software vulnerability analysis importantly survey related focus category software vulnerability assessment software vulnerability classification severity assessment software vulnerability software vulnerability classification publish journal vulnerability classification model  model automatically generates summary daily security vulnerability categorizes accord taxonomy pre label cve perform evaluation  summary fifteen cybersecurity professional security expert experimental model automatically classify vulnerability accuracy propose automate software vulnerability classification model neural network dnn model frequency inverse document frequency information gain neural network model TF idf model compute frequency textual description software vulnerability information gain apply optimal feature finally neural network model automatically classify extract vulnerability report improve classification accuracy benchmark technique theoretical vulnerability classification approach technical parameter frequency susceptibility exploit threat model seek resolve challenge exist vulnerability classification scheme examine security vulnerability domain specific application propose model developed comprehensive review vulnerability domain propose vulnerability classification framework vulnerability characteristic accumulation error strict timing requirement complex interaction environment software examine attack mapping vulnerability attack model analyze security vulnerability correspond attack report google project zero author  security vulnerability non related  vulnerability account classify vulnerability furthermore complex strategy detect fix non related  security vulnerability   machine technique analyze source code repository automatically identify commits security relevant likely fix vulnerability achieve goal apply processing technique preprocessing source code document classify standard classification model experimental improve classification accuracy precision recall respectively propose automatic vulnerability classification framework activate vulnerability goal security expert software developer appropriate corrective countermeasure demonstrates decision model identify category unseen security vulnerability lastly propose hidden impact vulnerability classification approach text mining technique bag representation stage extract unique keyword vulnerability report machine algorithm namely naïve bayes naïve bayes multinomial decision classify bug report experimental model accurately classify hidden impact vulnerability software vulnerability severity assessment symantec security response defines severity software vulnerability impact defect software vulnerability exploit risk associate software vulnerability exploit technically severity prediction software vulnerability important concept vulnerability assessment mainly communicate impact vulnerability software quantify economic impact monetary reputation loss security vulnerability quickly vulnerability resolve discover prioritize effort towards severe security vulnerability understand software vulnerability historical context aim witness significant research specifically detail seminal regard severity assessment security vulnerability   replicate prior aim predict severity software vulnerability textual description convolutional neural network cnns author feature extraction embeddings addition cnn model author memory lstm extreme gradient boost xgboost predict severity software vulnerability evaluate approach security vulnerability nvd conduct task namely classification predict severity security vulnerability regression model predict severity vulnerability cnn lstm model yield regard predict severity relation regression model MAPE lstm cnn xgboost respectively propose automatic vulnerability severity assessment model automatic vulnerability  attack propose approach leverage characteristic vulnerability model CVSS metric vulnerability severity obtain analysis  model effective automatically accordance assess manually security expert propose vulnerability severity prediction model text mining technique apply preprocessing technique textual description vulnerability report apply principal component analysis pca spare feature finally xgboost model predict severity software vulnerability indicates propose model achieve improve prediction accuracy traditional machine algorithm another related argue severity assessment software vulnerability essential vulnerability damage access scope attack approach aim vulnerability severity model probability severity vulnerability occurrence logistic function binomial distribution respectively investigate extent vulnerability severity infer directly vulnerability description apply data mining technique removal stem removal punctuation textual description vulnerability report model predicts vulnerability severity similarly singh  risk evaluation model nvd CVSS metric focus CVSS duration exploitation temporal vector security organization environmental vector author examine impact temporal vector environmental vector CVSS model estimate security risk vulnerability information combination exploitation frequency occurrence ass impact derive CVSS metric   approach ass security risk vulnerability lifecycle CVSS metric stochastic model vulnerability lifecycle CVSS metric additionally incorporate vulnerability discovery potential zero attack model evaluate potential risk software perform empirical analysis vulnerability metric data obtain international cyber defense involve participant data analyze network traffic attacker observer network vulnerability statistical analysis security estimation metric CVSS metric correlate comprise successful attacker security model CVSS data alone accurately depict compromise metric employ CVSS data correlate compromise perform empirical investigate extent independent vulnerability reward program  correlate CVSS mozilla firefox google chrome evaluate propose approach CVSS useful metric prioritize vulnerability conduct examine characteristic reward program google chrome mozilla firefox program program economically efficient hire security researcher firefox critical severe vulnerability google chrome examine CVSS metric proof concept exploit developed nvd exploit database CVSS metric useful insight exploit delay rapid decline median vulnerability exploit median lag associate CVSS metric increase prior novel framework resolve challenge associate aggregate CVSS loss useful semantics handle dependency relationship loss semantics aspect instead input model drill metric dependency relationship define semantics model interprets aggregate metric aspect preserve correspond semantics individual boston representative internet topology generator  generate simulated network topology vulnerability data fed generate network topology obtain network configuration finally attack graph generate configuration aforementioned procedure summarize difference propose framework previous previous propose variety data mining machine algorithm important paradigm vulnerability classification apply data estimate CVSS metric nvd cve datasets characterize classify vulnerability feature selection technique information gain IG principal component analysis pca apply improve vulnerability classification lastly various stochastic model propose evaluate lifecycle vulnerability CVSS metric nevertheless limitation address approach beyond modify scheme improve vulnerability classification instance classical metric TF idf model compute frequency bug report information gain feature selection apply optimal feature however extensively performance machine algorithm frequency inverse gravity model frequency inverse document frequency information gain feature selection objective improve knowledge relate vulnerability classification TF igm TF idf IG feature selection furthermore ass performance machine algorithm validate appropriate statistical exist statistical significant difference various approach finally completely generalizable vulnerability classification framework repeatable experimental threat validity empirical potential constraint therefore discus internal external threat validity threat internal validity examines factor impact obtain vulnerability report cve nvd publicly available vulnerability database vulnerability severity limitation vulnerability within cannot research improve accuracy vulnerability collection repository additionally utilized standard vulnerability metric CVSS characterize severity software vulnerability nevertheless recently propose severity metric vulnerability rating  impact vulnerability  suggests research improve severity assessment threat external validity concern generalization empirical publicly available vulnerability datasets classification model source bias obtain however datasets enable conduct thorough additionally datasets ass severity software vulnerability cannot generalize datasets proprietary application source application nevertheless outline detailed description experimental setup useful replicate commercial software application acknowledge availability diverse software vulnerability classification model argue model widely model vulnerability classification algorithm representative algorithm exist literature lastly precision recall auc performance model previous however essential metric representation demonstrate classifier performs research analyze performance evaluation metric conclusion future research propose automatic vulnerability classification approach frequency inverse gravity framework involves evaluation classification evaluation phase machine algorithm evaluate vulnerable software application classification phase machine algorithm namely RF knn DT NB svm propose classification extract historical vulnerability report finally classification model assess standard evaluation metric perform comparative classical metric frequency inverse document frequency widely feature selection technique information gain experimental frequency inverse gravity model promising metric vulnerability report classification classical metric regard effectiveness frequency inverse gravity feature selection technique finding feature selection procedure greatly improve vulnerability classification addition effectiveness feature selection procedure vulnerability classification model varies significantly across datasets finding research researcher security expert prioritize software vulnerability demand urgent attention bug fix software future integrate approach vulnerability severity assessment scheme source vulnerability database easy security expert software developer adopt finding furthermore investigate impact wrapper embed feature selection technique software vulnerability classification model