architecture driven modernization adm model driven reengineering instance knowledge discovery metamodel KDM KDM standard adm context due capture extensive information software besides platform independent technique processing advantage recurrent activity modernization project conformance architecture CA architecture PA identify architectural drift canonical phase activity specification PA communication constraint traction CA relationship architectural abstraction comparison architecture identify drift knowledge acc approach address acc adm context KDM therefore acc approach adm context KDM acc modernize PA CA evaluate arch KDM LabSys kloc medium freemind kloc accuracy identification acceptable previous keywords architecture driven modernization knowledge discovery metamodel architecture description architectural conformance architecture architecture introduction architectural erosion recurrent affect architecture legacy gradual degradation architecture decrease reuse modularity maintenance generation undesired along evolution technique detect indication architectural erosion architecture conformance acc goal architectural drift architecture architecture architecture drift detect software architect precise decision adjust architecture towards conduct acc phase specification architecture representation intend architecture recover architecture representation implementation generate comparison architecture representation identify drift architecture architectural specification specify architectural abstraction layer component etc access communication guaranteed architecture driven modernization adm propose management omg conduct software reengineering employ model along central adm define deliver standard metamodels increase modernization project knowledge discovery metamodel KDM metamodel adm goal modernize KDM nowadays facto standard context software modernization KDM distinguishable iso international standard organization standard iso IEC spectrum software detail source code action abstraction architectural business platform independent algorithm technique manipulate advantage consequence  aspect software KDM organize package abstraction package metamodel responsible specific structure package crucial package context contains metaclasses logical architecture software layer component module exist relationship architectural abstraction implementation relationship architectural abstraction concrete source code although acc approach literature none investigates conduct acc adm project differentiates approach mainly proprietary metamodels hinders reusability algorithm handle metamodels  evidence applicability KDM standard representation acc arch KDM approach conduction acc adm context arch KDM KDM architecture modernize architecture arch KDM involves phase software architect DSL domain specific dcl KDM specify architecture architecture serialize KDM instance retain architectural abstraction layer subsystem etc prohibit access phase software architect wizard recover architecture legacy serialize KDM instance phase relationship architectural abstraction concrete source code recover mapping abstraction concrete phase comparison architecture architecture difference phase difference architectural drift evaluation focus evaluate arch KDM analyze precision recall drift identification goal evaluate precision recall approach contribution approach conduct acc KDM instance therefore approach iso independent evidence KDM metamodel acc KDM modernize architecture contribution approach platform independent conformance implement structure introduces concept foundation arch KDM formalization specification dcl KDM acc evaluation threat validity related conclusion background architectural conformance architectural conformance acc activity software quality acc goal reveal difference architecture implementation reveals relation constraint foreseen PA violate implementation acc information relationship specify architecture implement relationship convergence implementation compatible architecture relationship specify architecture relationship divergence architectural drift reveal implementation compatible architecture relationship specify architecture relationship absence relation implementation architecture conduct acc static verification source code architecture dynamic verification characteristic architecture conduct acc static technique perform acc reflection model compliance relation reflection model technique model eyeglass source code model usually technique apply none information architecture compliance relation specify constraint architectural constraint prohibit impose relation approach technique reflection model architectural definition apply compliance relation verify architectural definition respect relationship usually compose relationship compliance source target source target define regular expression compliance determines relationship component prohibit define impose finally relationship defines dependency exists attribute declaration architecture driven modernization knowledge discovery metamodel adm omg initiative promote consensus modernization exist software combine reengineering concept model driven architecture mda principle standard metamodels adm introduces modernization standard KDM abstract syntax metamodel  structure metric metamodel SMM adm modernization reverse engineering KDM instance analyze refactorings optimization perform obtain refactored improve KDM instance generation modernize accord perez adm modernization scenario platform migration conversion application improvement architectural  KDM metamodel adm characteristic software unique metamodel schematic representation KDM layer package package internal metamodel concentrate specific aspect software package spectrum abstraction detail source code package action package detail user interface package business package architectural package important mention although KDM layer package communicate inter package communication KDM allows mapping abstraction communication package schematically arrow package package important package context research image KB image KDM layer package p√©rez code package contains metaclasses model source code static structure  metaclass  metaclass interface code package metaclasses abstract source code action package defines metaclasses behavioral behavior declaration creates etc operator writes address etc  etc generate KDM instance assume action package corresponds behavior program structure package important logical architecture software structure package metaclasses important related metaclasses schematic representation structure package instance structure package metaclasses architectural subsystem component   layer besides relationship  hierarchy instance architecture software subsystem layer layer component package important specify mapping concept abstract concrete mapping attribute implementation relationship   metaclasses  metaclass belongs core package central KDM package metaclasses package  important metaclasses KDM metaclasses indirect subclass KDM metaclasses KDM entity  another important metaclass herein role capture relationship architectural abstraction relationship primitive relationship within association  metaclass  metaclass KDM relationship metaclass primitive relationship metaclass instantiation creates metaclass implement relationship implement metaclass  involves KDM entity source target image KB image structure package diagram omg schematic structure package instance architectural KDM entity due inheritance relationship architectural employ  schematically relationship layer controller model cylinder layer instance  metaclass controller layer source relationship model layer target relationship aggregate relationship incorporates primitive relationship inside primitive relationship action structural dependency KDM metaclasses arrow connects layer  instance  density primitive relationship inside density involves relationship instance extends creates import  important regard relationship KDM canonical easy understand really source code extends import etc however additional explanation  relationship occurs source code another source code  relationship occurs code data conversion architectural conformance arch KDM approach arch KDM approach phase phase denominate architecture specification DSL denominate dcl KDM DSL software engineer generate file extension dcl file serialize  KDM generate architecture KDM format artifact phase architecture extraction software architect interact wizard recover architecture artifact source code properly output another KDM instance architecture artifact automatic phase architecture comparison primary approach artifact generate previous artifact artifact perform algorithm accomplishes acc discover KDM instance violation phase denominate architectural drift visualization violation artifact grouped  KDM violation architectural drift important highlight approach generic elaborate implement conventional acc approach developed algorithm rely exclusively KDM metamodel therefore theory approach efficiently conformance implement orient detail phase image KB image arch KDM approach architecture specification phase goal architecture principle adm achieve goal specification architectural restriction dcl KDM compose domain specific DSL specify architecture adm context  KDM serialize architecture KDM instance dcl KDM extension DSL propose   dcl dcl KDM perform extension dcl grammar keywords KDM metaclasses automate generation constraint perform serialization architecture KDM instance information regard syntax detail extension dcl KDM previous specification serialization architecture architecture driven modernization context basis specification dcl KDM modularized  restriction listing depicts dcl KDM specification architecture engineer specify architectural architecture specification hierarchy composition relationship specify keywords  instance declaration layer inform inside subsystem core important mention layer hierarchy engineer specify constraint architectural specify constraint instance realize constraint controller repository constraint controller communicate repository vice versa important mention communicate primitive relationship explain image KB image architectural specification listing serialize architecture KDM  KDM serialization KDM materialize xml file architectural relationship instance KDM serialization architectural representation KDM KDM constraint architectural therefore regard constraint metaclass  metaclass container primitive relationship illustrate  instance communication architectural presence  indicates communication absence indicates none communication advantage KDM deepen decision primitive relationship KDM relationship aggregate presence absence primitive relationship inside  instance relationship exist architectural instance absence  architectural none primitive relationship presence  architectural specific primitive relationship relationship metaclass inside architecture extraction important PA artifact maintenance organization culture demand internal external factor trigger update PA therefore software architect aware establish systematic procedure monitoring PA meeting desire goal therefore goal obtain representation architecture architecture obtain previous phase strategy materialize architecture KDM instance easily automatic architecture materialize KDM instance approach architecture artifact item concrete source code relationship source code package attribute parameter relationship implementation inheritance parameter passing source code code action package KDM architectural abstraction architectural abstraction layer module subsystem component structure package KDM architectural abstraction relationship architectural abstraction relationship layer communicates layer relationship KDM  resembles uml association concrete abstract mapping mapping architectural source code link abstraction concrete source code mapping layer source code package KDM implement relationship extract architecture perform extract source code reverse engineering  reconstruct architectural semi automatically  generates viewpoint related source code relationship code action package KDM  unable reconstruct architectural viewpoint responsible complement lack generate KDM structure package reconstruction architectural perform sub mapping abstraction reconstruct relationship abstraction manual automatic conduct software architect architectural abstraction declare architecture concrete source code perform activity architect architecture access architecture documentation layer package previously package source code representation layer therefore approach identification grain drift mostly internal relationship package architect mapping conformance cannot conduct screenshot  wizard software architect mapping architectural abstraction source code abstraction declare architecture existence subsystem internal layer layer code mapping architectural abstraction source code already software architect formally relation abstraction subset code abstraction mapped instance mapping image KB image mapping abstraction code wizard allows mapping architectural abstraction container package interface layer mapped package conventional mapping however layer mapped layer source code software architect mapping automatic sub reconstruct relationship abstraction aim identify reconstruct relationship architectural abstraction involves execution algorithm generate instance  metaclass primitive internal relationship discover relationship architectural abstraction firstly identify relationship source code instance suppose  relationship  belong package package package suppose package concrete  architectural abstraction  package mapped  package  therefore relationship package package mapped layer relationship layer layer relationship architectural abstraction  KDM instance  layer layer none insert instance primitive relationship inside primitive relationship discover package insert already exist  link layer explain algorithm involve reconstruction relationship architectural abstraction algorithm algorithm algorithm initiate architecture architecture unique KDM instance  loop responsible analyze concrete abstract mapping software architect generate relationship implement KDM link abstraction concrete source code  retrieve information   code information mapping initiate discovery  image KB image algorithm core discover  architectural abstraction algorithm receives input KDM instance information architecture architecture initial mapping iteration architectural abstraction already mapped implementation architectural abstraction iteration algorithm code architectural abstraction initiate another iteration iteration code implementation architectural recover  exist relationship KDM relationship existence relationship code belong abstraction algorithm creates update  instance  KDM metaclass explicit relationship architectural abstraction image KB image  primitive relationship architectural abstraction primitive relationship parameter sdk KDM manager responsible perform KDM instance retrieve information sdk recover relationship inside code instance relationship target architectural simplify future algorithm algorithm  logic instance  KDM metaclass update perform iteration target architectural exist aggregate architectural architectural option relationship  negative aggregate exists instance update relationship update density  image KB image    relationship KDM architectural abstraction software architecture phase KDM instance structure code package link fully mapped KDM instance enables perform conformance explain architecture comparison detect violation phase goal automatically artifact architecture architecture identify violation architectural representation achieve goal algorithm analyzes KDM specification identify grain violation algorithm depicts developed algorithm architecture relationship architecture evaluate relationship exist relationship violation algorithm contains iteration relationship architecture relationship exist architecture processing instance verify violation image KB image image KB image algorithm core acc algorithm algorithm initiate recover instance  input perform iteration  instance therefore data instance iteration recover architecture instance parallel processing instance architecture instance architecture initiate another iteration  instance validate relationship inside violation  algorithm  responsible remove relationship violation receives input relationship architecture  instance architecture perform iteration relationship iteration perform another iteration relationship inside  instance validate relationship inside  relationship positive relationship inside  remove negative relationship remove algorithm relationship inside  instance architecture violation architectural drift visualization phase goal software architect violation architectural drift phase KDM instance violation architectural perform identification similarity obtain architectural drift important phase approach although violation grouped relationship metaclass instance  violation specific criterion cannot architectural drift punctual grain grain violation architectural drift easily source code elaborate algorithm correlate violation alternative software architect proximity matrix xml hierarchy screenshot eclipse plugin approach screenshot uml diagram approach approach combination proximity matrix algorithm cluster DBSCAN algorithm implement approach resource weka matrix hierarchy architectural source target item drift architectural drift combination algorithm algorithm generate architectural drift violation architecture comparison stage image KB image approach visualize architectural drift approach  uml architectural drift graphically uml diagram package drift grouped algorithm xml hierarchy KDM instance important mention context uml diagram instead diagram illustrate architectural drift strategy visible uml relationship architectural drift uml package architectural related drift evaluation evaluation approach involve LabSys loc freemind loc goal acc approach KDM accuracy identify architectural violation regardless KDM instance factor influence accuracy specification architecture mapping extraction architecture implementation algorithm performs evaluation conduct concentrate focus accuracy identify exist drift evaluation DSL elsewhere evaluation metric precision recall formalize metric brief description metric evaluation definition calculate evaluation metric  truth GT architectural drift identify manually domain expert oracle positive TP architectural drift identify arch KDM GT false negative FN architectural drift identify arch KDM identify GT false positive FP architectural drift identify arch KDM identify GT metric evaluation  precision ratio truly identify architectural drift quantity relevant architectural drift sum truth false positive recall ratio truly identify architectural drift quantity successfully architectural drift retrieve sum truth false negative harmonic average precision recall perfect precision recall evaluation evaluate arch KDM LabSys evaluation LabSys laboratory loc developed federal   brazil purpose manage laboratory evaluation structure accord wohlin guideline item summarize evaluation research arch KDM precision recall identify architectural drift II algorithm arch KDM perform goal purpose precision recall arch KDM performance identify drift IV perspective software architect architectural violation quality focus accuracy arch KDM approach VI context academic context methodology LabSys evaluation methodology evaluation involves manual identification architectural drift analysis oracle apply arch KDM architectural drift analyze LabSys developed architecture style without explicit document architecture documentation therefore aid developer analyze source code architecture explicit LabSys metric complexity statement program define code indicates medium package oracle architectural drift LabSys LabSys metric source  goal manually analyze entire source code architectural drift analysis execute activity twice activity analyze reference item belongs verify caller permit architecture annotate architectural drift perform activity architecture LabSys architecture conform subsystem core layer controller model component util matrix architectural drift identify manually oracle architectural architecture obtain elaborate remove manual identification architectural drift explain drift model layer util component converter layer validator layer util component generic layer util component depict oracle oracle access link http goo  manual identification architectural drift LabSys   creates extends implement import sum oracle architectural drift amount occurs validator layer util component drift amount occurs generic layer util component architectural LabSys oracle LabSys source      campus       return apply arch KDM LabSys architectural drift identify approach previous recognize source code define architectural drift association architectural drift approach KDM generate KDM instance LabSys specification PA LabSys dcl KDM listing PA reflect diagram specifies core subsystem specify layer controller model hierarchical access inside core subsystem specifies repository component inside model layer specifies util component inside core subsystem specify layer validator converter generic hierarchical inside util component PA specifies access image KB image validation apply jury evaluate interpretation domain expert perform oracle comparison architectural drift manually generate previous consists jury compose judge individually analyze propose domain expert analysis judge verify percentage absolute agreement  calculation perform judge quantity evaluate item author minimum acceptable perform jury activity activity chose volunteer compose jury volunteer perform evaluation volunteer disagree judge volunteer domain expert compute software development disclose privacy issue profile comprises software developer MSC software engineering database worldwide aviation enterprise software developer MSC computer software modernization privacy expert professor  catholic mina  brazil software developer computer software modernization activity deliver consent inform judge acceptance purpose declare role participant activity deliver documentation judge participation analyze source code oracle developed domain expert obtain arch KDM fourth activity request jury analysis source code architecture classify architectural drift domain expert arch KDM evaluation domain expert task evaluation item category approves evaluation perform jury approve evaluation perform jury define item architectural drift manually identification architectural drift manually architectural drift automatically evaluation acc LabSys matrix contains LabSys evaluation amount deviation automatically detect architectural specific drift  detect architectural drift analyze data drift cluster algorithm cluster drift already identify due proximity coefficient nevertheless divergence opt maintain fourth evaluation  numbered validate execution evaluation evaluation automatic identification architectural deviation LabSys   creates extends implement import mention metric precision recall calculation metric therefore substitute metric obtain architectural deviation recover TP precision precision stipulate propose perez affirm technique computational developed confidence precision accord author recall calculation ratio deviation deviation false negative recall architectural deviation recover finally metric evaluate accuracy perform precision recall metric indication performance closer performance analysis judge evaluation rat  judge judge manual  architectural drift manual auto   evaluation metric  truth GT positive TP false negative FN false positive FP metric precision recall recall precision information retrieval  precision precision precision average precision  analyze obtain metric affirm approach computational developed positive promising analyze depth architectural deviation computational algorithm contains fault regard code KDM code package specific evaluation deviation automatically composition  metaclass evolve algorithm  accuracy another mention contact developer LabSys relevant existence drift cannot guarantee maintenance suffer consequence drift hence recognize drift related util package evaluation evaluate  freemind evaluation conduct medium freemind kloc java mapping acc approach version freemind evaluation available metric freemind mention perform comparison acc approach freemind however unlikely LabSys evaluation architecture oracle exist drift violate prescribed PA available therefore apply arch KDM oracle author obviously although PA available specify DSL specification enable  freemind metric source  evaluation structure accord wohlin guideline item summarize evaluation algorithm arch KDM perform II goal purpose ass performance arch KDM identify architectural drift LabSys perspective academic practitioner KDM context modernization IV quality focus focus precision recall context academic context methodology freemind evaluation methodology evaluation specify architecture DSL apply arch KDM freemind architectural drift analyze subsection detail methodology specify architecture architecture freemind plugins script ScriptingEngine package freemind dependence ScriptingEngine within package freemind drift architecture freemind dependency pollute diagram dependency concrete dependency although dependency ScriptingEngine  package omit visualization therefore concentrate dependency ScriptingEngine package freemind important PA layer architecture package script freemind inside script layer ScriptingEngine belongs prescribed PA seventeen dependency ScriptingEngine others package freemind controller  freemind FreeMindMain           resource  therefore architectural violation drift acc approach image KB image structure freemind dependency relation LabSys specification PA freemind generate KDM instance listing PA specify freemind image KB image specifies  sub specify layer freemind plugins inside  specifies component script inside layer plugins specify component inside  specifies layer inside  specifies component inside mode layer specifies unique restriction granularity architectural violation  abstraction violation drift access interface ScriptingEngine dependency another violation cardinality dependency important dependency violation therefore comparison evaluation adopt counting strategy  architectural freemind likewise LabSys apply arch KDM identify drift freemind detailed already earlier wizard mapping abstraction declare PA source code trigger acc freemind previously evaluation conduct exist author acc approach freemind recall acc approach therefore opportunity approach arch KDM evaluate evaluate technique identify violation instance   sonar architecture sonar text another   rely dependency structure matrix dsm  architecture analysis  reflexion model technique lastly  structure diagram adapt plus obtain arch KDM opt arch KDM others seventeen interface ScriptingEngine depends within freemind package accord PA author identify violation drift dep indicates exist dependency ScriptingEngine respective instance  identify dependency ScriptingEngine FreeMindMain conversely  identify dependency assess   text dependency structure matrix dsm reflexion model diagram acc approach indicates identify violation indicates recall approach arch KDM obtain approach     sonar structure approach     identify dependency arch KDM account indirect transitive dependency indirect dependency dependency cannot without analysis code another dependency relation indirect dependency exists transitively intermediate module dependency  java interface indirect dependency ScriptingEngine  analyze dependency ScriptingEngine   dependency  declaration therefore indirect dependency ScriptingEngine  dependency  inner belongs  ScriptingEngine  instantiate operator manner   therefore arch KDM identifies  dependency regard precision recall calculate metric account dependency ScriptingEngine report package freemind arch KDM report dependency drift arch KDM report dependency another package freemind false positive FP likewise arch KDM report dependency false negative FN positive TP occurs arch KDM report dependency false positive FP evaluation accord ScriptingEngine depends report architectural violation identification freemind detect detect report  dep arch   controller  freemind FreeMindMain           inner resource  inner interface identify recall adapt precision recall recall dependency ScriptingEngine package freemind approach identity approach performs identify positive instance architecture drift regard precision achieve however occurs oracle false positive lastly arch KDM performs closer drift arch KDM report dependency drift instance ScriptingEngine depends   import accuracy arch KDM freemind evaluation precisionrecallf arch KDM identify drift extends identify LabSys evaluation goal approach identify architecture drift arch KDM identify instance drift detect instance drift identify arch KDM per ScriptingEngine depends  controller  freemind FreeMindMain           inner resource  inner grain analysis drift freemind subsection perform grain analysis drift identify arch KDM freemind analyze specific dependency ScriptingEngine interface particularly accord relationship dependency analyze ScriptingEngine corroborate verify arch KDM identify dependency granular dependency ScriptingEngine FreeMindMain depict dependency identify arch KDM code ScriptingEngine responsible existence relationship code FreeMindMain receives relationship fourth relationship fifth depicts occurs relationship source code analysis indicates arch KDM identify drift due lack representation KDM instance listing code corresponds ScriptingEngine assignment statement involves operator instantiate  constructor parameter frame  image KB image dependency ScriptingEngine FreeMindMain   script    script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain   script ScriptingEngine   plugins script ScriptingEngine  FreeMindMain  plugins script ScriptingEngine  FreeMindMain  plugins script ScriptingEngine  FreeMindMain  plugins script ScriptingEngine  FreeMindMain  plugins script ScriptingEngine  FreeMindMain  plugins script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain   script ScriptingEngine  FreeMindMain  listing correspond code listing KDM instance generate  code relation  indicates relationship invocation KDM instance implement assignment image KB image finally recall percentage arch KDM account grain dependency although heavily influence completeness KDM instance therefore KDM instance truly source code accuracy arch KDM incremented notoriously however another possibility KDM threat validity threat regard PA freemind evaluation someone argue package freemind mapped unique script cannot freemind affect evaluation package ScriptingEngine depends define PA arch KDM report violation granularity freemind evaluation someone argue arch KDM cannot granularity author grain dependency dependency however comparison indeed others approach author analyze grain dependency author approach identify drift approach exist dependency therefore complexity someone argue ideal conduct evaluation however affect evaluation happens conformance checked KDM instance standard representation arch KDM identify specific drift detect drift KDM therefore concentrate drift LabSys freemind regard building oracle LabSys evaluation someone argue oracle built benefit identification minimize threat described reliance software engineer evaluate although LabSys evaluate application judging evaluation affected subjectivity construction validity related related dcl KDM currently strategy specify serialize architecture acc approach nevertheless majority employ architectural description ADL specification proprietary metamodels serialization unfortunately proprietary metamodels hinders interoperability besides exist ADLs module connector none focus automatic generation strict layer composition KDM knowledge research another project dedicate effort specify architecture KDM pre define architectural related specify pas graphical textual acc approach identifies convergent divergent absent relationship architecture employ proprietary metamodels model specify PA source code model implementation  relies dependency structure matrix  perform acc dsm matrix denote orient reference  wolf propose dependency analysis technique ADLs focus representation component input output architectural style architectural component  defines traceability uml component model code AOP expression   express architectural formula ontology model mapped instance ontology knowledge representation architectural satisfied model   rely ast underlie model perform acc  extends java architectural model construct seamlessly unify software architecture implementation ensure implementation accord architectural constraint  data mining approach acc identifies architectural violation combination static historical source code analysis san   DSL specify pas context adaptive adaptive specific abstraction engineer precise architecture related acc researcher propose architectural conformance approach underlie model ast approach graph acc approach MDE approach approach ast acc approach dcl   rely ast abstract syntax underlie model perform acc dcl employ static analysis identify structural dependency respect specify PA  extends java architectural model construct seamlessly unify software architecture implementation ensure implementation accord architectural constraint  data mining approach acc identifies architectural violation combination static historical source code analysis architect specify architectural constraint weakness although achieve acc multiple architectural style explicitly hierarchy architectural approach graph acc approach    rely graph underlie model perform acc  identifies divergence absence comparison machine readable specification intend architecture knowledge dependency extract automatically source code pure reflexion model concept highlight convergent divergent absent relationship model source code model automatically extract source code   visualize understand static structure software model intend architecture detect architectural violation although accurate rely proprietary model intend architecture approach relies iso metamodel KDM PA CA researcher familiar KDM develop improve approach implement sophisticated CA extraction algorithm perform refactorings identify violation MDE acc approach     approach rely MDE model perform acc  generates conformance computes metric component connector various metamodel relevant source artifact desire detail  defines traceability uml component model code AOP expression   express architectural formula ontology model mapped instance ontology knowledge representation architectural satisfied model although MDE approach promote reuse accurately implementation detail approach however relies KDM metaclasses architectural allows source code precision acc approach  relies dependency structure matrix dsm perform acc dsm matrix denote orient reference contains although dsm important documentation purpose communication stakeholder architecture specification independent implementation dynamic analysis research  dynamically monitor derive software architecture architect develop mapping exploit regularity implementation architectural style similarly  verification approach detect inconsistency dynamic behavior document architecture actual behavior however mapping observation architectural usually hence straightforward implementation target architecture conclusion arch KDM approach architectural conformance approach context architecture driven modernization adm approach rely KDM platform independent metamodel omg developed compose domain specific DSL dcl KDM allows specification architecture layer component module DSL allows specify communication restriction architectural abstraction important characteristic PA serialize KDM instance wizard allows extraction architecture CA legacy user deliver wizard KDM manner CA serialize KDM instance architecture representation PA CA detect drift PA CA KDM instance algorithm taxonomy clearer metamodel important clarify approach exclusively identification grain drift implementation inheritance relationship creation cast conversion package import drift detect approach instance absence architectural abstraction approach conformance implement wizard recovery CA KDM independent specific platform algorithm KDM representation besides algorithm iso potential reuse algorithm developed proprietary dependent model meaningful discussion regard suitability KDM software architecture code package detail however quality structure package harder evaluate although structure package conventional metaclasses architectural detail lack important filter connector interface worth extend KDM architectural detail exist KDM abstraction approach KDM representation PA CA architectural violation obtain representation instance metamodel algorithm algorithm becomes clearer easy understand consequence easy maintain reuse evolve usage KDM impact quality mainly code metamodel abstraction source code detail perform architectural dynamic code action instantiation etc available although relationship unique acc deviation existent software deviation approach significant portion architectural deviation occurs reality aware efficacy acc propose depends completeness PA specification mapping source code besides currently automatically trigger software architect cycle amend establish systematic procedure specification mapping update perform although burden software architect frequency easily implement automatic trigger commit clearly alternative proposal reasonable adopt pressure shorter delivery intense besides approach another theoretical contribution formalization architectural drift architectural violation herein architectural drift software engineer fix source code formalization consequence KDM source code detail code package source code abstraction source code metaclass instance instance representative useful architect violation metaclass instance involve architectural drift therefore architectural drift architectural violation essential approach demonstration acc approach conduct KDM metamodel differs approach literature related however architecture KDM access architectural KDM aggregate relationship absence specific relationship inside aggregate deny access KDM relationship useful context research community publishes evidence KDM adm genuinely become facto standard conduct software modernization regard scalability approach depends capacity generate KDM currently  KDM instance however instance conformance consume another related regard complexity PA depends detail employ although arch KDM architecture conformance adm architecture driven modernization context restrict arch KDM situation engineer identify drift however KDM introduce omg standard adm context context arch KDM happens architecture conformance activity modernization adm phase employ KDM therefore easy interoperability modernization practical usage motivate adopt KDM currently organization already adopt KDM modernization  ada software however envisage benefit standard become interoperable future mention investigate reusability KDM developed KDM platform independent developed mining algorithm profile refactorings researcher publish context adm goal omg interoperability modernization important future development KDM modernization development reverse engineering lack parser discovery generate KDM java hinders widespread adoption KDM adm  java lack parser adoption extension arch KDM indirect dependency implement algorithm identify transitive dependency involve interface inner abstract straightforward implement  KDM contains attribute attribute attribute sought