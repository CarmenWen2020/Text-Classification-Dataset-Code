modernize legacy software service orient architecture soa depends service identification approach SIAs identify reusable functionality become service literature describes SIAs however selection identification approach suitable practitioner depends factor goal modernization available legacy artifact organization development desire output usability approach accordingly suitable service identification approach practitioner comprehensive exist technique report systematic literature review slr SIAs software analysis slr taxonomy SIAs multi layer classification exist identification approach classification input apply output usability SIAs category grain taxonomy practitioner suitable approach identify service legacy software slr legacy software modernization discussion industrial partner analysis exist SIAs validate correctness coverage review industrial expert modernize legacy software soa classification conforms industrial expert SIAs infancy finally identify challenge SIAs address improve quality previous keywords service identification microservices taxonomy legacy migration introduction maintenance migration legacy software central activity organization mission critical embed hidden knowledge significant cannot remove replace execute effectively accurately critical complex business logic legacy software suffer drawback maintenance scalability portability forth migrate flexible architecture retain business decrease maintenance migration legacy software service orient architecture soa avenue modernization soa allows develop complex inter organizational integrate compose service reusable distribute relatively independent heterogeneous increase effort migrate legacy microservices soa architecture service responsibility communicate lightweight mechanism service granularity service microservices migration legacy software soa depends factor choice migration service identification approach desire quality characteristic generate service implementation integration service etc discus detail later modernization legacy affect claimed benefit migration legacy decrease performance user resistance technology unexpected modernization increase migration etc organization adopt strategy migrate legacy software soa migrate legacy engineering strategy perform decomposition domain artifact model service target soa implement service implement orchestrates service organization strategy engineer legacy software service orient style extract dependency legacy mining exist application reusable functionality qualify service packaging function service enable reuse delete dependency legacy infrastructure rewrite exist application newly identify service organization adopt hybrid strategy reuse legacy artifact function application coarse functional mapping functional available service delete dependency legacy infrastructure implement orchestrate service service identification central aforementioned migration strategy recognize practitioner challenge overall migration service identify service identification approach SIAs expectation regard capability quality service efficiency etc discus detail later knowledge hybrid SIAs focus solely identify service legacy software ensure identify client immediately indeed service become available multiple client simultaneously service related database account multiple client tenant challenge legacy code autonomous service multi tenancy data consistency  legacy code violate service principle challenge identify service migration legacy software due importance SIAs impact legacy migration soa literature propose approach identify service legacy selection sia suitable practitioner SIAs however depends factor available legacy artifact analyze legacy artifact available input desire output usability approach practitioner comprehensive exist SIAs identification approach fulfil propose systematic literature review slr publish SIAs focus hybrid approach exist software artifact chose focus hybrid approach previous preliminary source code date source information legacy software slr taxonomy SIAs multi layer classification SIAs classification practitioner suitable service identification approach corresponds migration perform slr legacy software modernization discussion industrial partner analysis retain validate correctness coverage slr survey interview industrial expert legacy software modernization taxonomy conforms industrial expert precision recall research slr SIAs dimension input apply output usability approach research RQ input SIAs aim identify input SIAs software analysis aim classify target SIAs artifact identification RQ SIAs aim underlie service identification approach report literature entail gathering information technique identify candidate service desire quality metric direction identification automation analysis RQ output SIAs aim report information generate output service identification approach target service RQ usability SIAs aim usability service identification approach literature validate accuracy identification report quality report identification conclude SIAs infancy due lack validation enterprise lack lack automation SIAs lack assessment quality identify service propose SIAs generally ignore economic aspect identification phase implementation maintenance factor issue automate SIAs enterprise validate propose approach regardless sought quality attribute SIAs ass quality identify service economic aspect identification outline remainder structure describes slr methodology describes input SIAs describes underlie SIAs survey output SIAs describes usability SIAs detail validation taxonomy synthesizes comparison SIAs describes related finally concludes methodology methodology systematic literature review mechanism data analyze research procedure propose kitchenham perform systematic review depicts methodology research query identify relevant query research context service identification soa migration keyword identify related synonym online synonym finder define query service identification service mining service packaging migration modernization transformation engineering legacy exist orient execute query scientific google scholar acm digital library xplore digital library engineering etc input service identification approach SC source code DB database logt trace  user application interaction bpm business model UC AD activity diagram DFD data diagram smd machine diagram  ontology exp expertise doc documentation  rep non rep domain artifact runtime  artifact   service identification quality metric span approach identify web service generate service layer legacy service identification framework legacy migration soa reuse exist orient code web service soa mining candidate web service legacy code service stepwise migration approach java application migrate interactive legacy web service  identify service reverse engineering relational database identify specify web service respect service orient compute identify service procedural program migrate legacy service orient architecture service orient analysis approach data diagram service discovery semantic algorithm soa modernization legacy web application  service legacy architectural migration migrate web service research framework service identification packaging service orient engineering wrap approach migrate legacy component web service extract reusable orient legacy code combine formal concept analysis slice technique service integration dynamic analysis cluster implement service reuse legacy code service mining legacy database application approach mining service database orient application user interface enhance service identification identify service data artifact centric model approach multifaceted service identification requirement data service model refactoring extract reusable service legacy orient service legacy software information retrieval technique ontology FCA approach microservices identification interface analysis functionality orient microservice extraction execution trace cluster  migration web service extraction microservices monolithic software architecture service cutter systematic approach service decomposition approach align business perspective soa service identification discover microservices enterprise business containment heuristic heuristic approach candidate web service legacy software identify microservices functional decomposition understand evolution monolithic application microservices monolithic microservices decomposition framework mining function splitting heuristic discovery microservices enterprise monolith microservices architecture approach transactional context architecting OO software microservices quality approach query return unique reference filter reference title abstract finally content author manually independently analyze reconcile difference discussion exclude review meeting criterion english related service identification SIAs propose technique methodology service identification publish exclusion criterion reduce reference retain focus SIAs analyze software artifact query related service identification microservices decomposition restructuring etc risk important minimize threat important keywords related service identification apply backward snowball minimize risk important snowball refers bibliography identify reference backward snowball refers identification cite iterate backward snowball apply candidate exclusion criterion iteration candidate perform iteration obtain SIAs RQ input SIAs suitable input service identification crucial quality identify service migration legacy software related artifact business model activity diagram etc available consequently depict SIAs literature rely input hybrid approach source code related model input classify input category executable model non executable model domain artifact discus executable model executable model source code database schema source code terrain disagree trust terrain swiss army  legacy documentation date source code terrain becomes reliable source information source code commonly software artifact exist SIAs due availability SIAs source code input identify business capability exist legacy expose reusable service SIAs rely reverse engineering processing extract dependency program variable function module etc recover information data diagram business model machine diagram etc source code artifact business model database schema usually apply cluster technique extract reusable service legacy orient SIAs rely relationship analyze structure identify highly cohesive loosely couple reusable expose service rely analysis dependency legacy orient software propose fitness function account relationship assigns relationship apply agglomerative cluster technique candidate service candidate service analysis legacy source code apply reverse engineering technique extract uml diagram analyze signature related identify candidate service SIAs identify service analyze source code non orient software report analysis legacy argentinian government agency  ibm mainframe analyze legacy source code identify transaction migrate service transaction translate java code easy expose web service although identification candidate service source code analysis reusable grain service combination input artifact business database etc identify service business database architecturally database layer important manage persistence data database content schema transaction artifact database related SIAs approach identify data entity service access management persistent data  identify entity service extract sql statement factor statement specification candidate service CRUD operation update delete saha rely identify instance database access database related operation identify reusable service specific quality metric refine database related operation wrap data entity service interaction application migrate database del identify functionality export service perform identification cluster technique formal concept analysis although identification candidate service database query schema reusable grain service entity service engineering coarse grain service combine finer grain service business service define specification input execution procedure output execute achieve objective verify compliance specific requirement SIAs input identify reusable service intermediate input service identification analyze legacy source code manually identify candidate correspond potential reusable service derive execution legacy software dynamic analysis technique analyze execution trace generate coarse grain code candidate corresponds identify service execute generate correspond trace analyze file invocation apply cluster algorithm cohesive loosely couple mapped service rarely SIAs intermediate artifact service identification probably seldom available portion non executable model distinguish category non executable model runtime artifact extract execution non executable model architecture discus runtime artifact runtime artifact extract execution trace user application interaction user interface trace execution trace legacy software depict dynamic behavior SIAs rely trace extract sequence related specific execution scenario approach identify legacy code execute business usually identify manually business analyst code potential implementation service apply mapping technique legacy code business trace analysis cluster technique cluster identify trace accord usage business SIAs rely solely trace identify service usually combine input business model expertise user interaction user interface input capture relationship user functionality user interface usually embody data requirement workflow workflow model available knowledge extract user interface useful recover underlie business logic SIAs analyze user interaction user interface identify service propose xml representation unified user interface specification  user interface data binding navigation representation automate analysis user interface retrieve useful information candidate service requirement analysis user interaction retrieve navigational information operation perform user identify reusable task business become service however SIAs user interaction hardly automate model task input readily available model artifact model artifact abstract structure execution behavior business model activity diagram machine diagram business model BPMS activity task accomplish organizational goal BPMS extensively SIAs ability business logic legacy software abstraction business model business model notation bpmn execute correspond business execution  decomposition business strategy identify service business driven SIAs usually decompose business task task cluster expose service identify service analyze business model business model derive questionnaire interview available documentation atomic business entity activity diagram primitive functionality activity diagram manually identify uml diagram extract legacy code ibm rational service granularity distinguish pertain atomic business entity related atomic entity grouped within service candidate maximize cohesion candidate service minimize couple rely business model correlate legacy orient activity business model execute execution task related identification service cluster technique similarity measurement activity execution context service identification BPMS understand capture functional domain legacy interact furthermore business driven approach identify candidate service task activity however rely BPMS identify service model available legacy software identify abstraction interaction user achieve goal depicts functional requirement sequence action service identification SIAs artifact analyze relationship identify reusable service independent orient candidate service extends candidate service whereas specializes inherits candidate service whereas SIAs rely systematic intuitive capture functional requirement focus user however knowledge SIAs automate extent rely expertise activity diagram interaction involve execute task SIAs activity diagram identify service extract activity diagram useful information transform bpmn mapping analyze business model extract reusable service activity diagram legacy input concretely rely analyze  identify reusable service none identify SIAs rely activity diagram input usually source code BPMS complement identification candidate service data diagram data diagram DFD graphical representation functional dependency analysis data business function entity DFD data data later external entity source destination data manipulate data data SIAs DFDs identify reusable service rely DFDs identify service elaborate DFDs source code analysis recommend DFDs coarse grain delete diagram grain elaborate DFDs service finally recommend composite service capture operation identify service operation invoked define workflow structure DFDs business logic software however available straightforward generate legacy SIAs DFDs ill structure guarantee identification relevant service DFDs cannot dynamic dependency source code software machine diagram machine diagram smd dynamic describes entity lifetime SIAs machine diagram input diagram model interaction user model cycle data define information role operation business although machine diagram ideal behavior limited suitable SIAs due explosion seldom available easy obtain source code documentation domain artifact domain artifact knowledge application domain software documentation expertise ontology documentation software documentation describes document abstraction software documentation textual description diagram model software documentation SIAs reduce candidate service functionality SIAs rely software documentation understand identify reusable service propose sia analyzes javadoc documentation calculate lexical similarity similarity identify cluster functionality service described industrial documentation  understand identify business code input business model trace etc software documentation available outdated sync source code legacy expertise expertise SIAs tune parameter various service identification algorithm define business logic translate business analyze identify candidate service finally expertise define data diagram identify candidate service expertise SIAs limit automation service identification approach SIAs identification ontology ontology structure semantics domain metadata knowledge domain SIAs ontology identify service  propose wordnet technique identify service built query analyze user interface wordnet expand query identify code participate service information retrieval technique vector model latent semantic analysis query relevant code analyze source code ontology domain concept ontology functionality ontology software component ontology formal relational concept analysis source code legacy ontology specify identify candidate service challenge ontology SIAs define ontology develop ontology effort resource remain bottleneck ontology development finally ontology SIAs complex expertise RQ SIAs service identification applies identification technique wrap cluster formal concept analysis etc target quality metric couple cohesion granularity etc predefined identification direction hybrid expertise defines automation specific analysis static dynamic lexical etc technique SIAs classify technique SIAs wrap identification technique encapsulates legacy service layer without implementation wrapper access legacy service encapsulation layer expose functionality desire software architect genetic algorithm meta heuristic optimization selection relies calculation fitness function optimal optimal definition optimal feasible fitness function maximum minimum formal concept analysis FCA data analysis derive implicit relationship formal principled FCA specify context denote triple finite finite binary relation formal concept define partial define formal concept concept lattice structure visualization concept hierarchy cluster consists classify partition data cluster category partition cluster built internal homogeneity external separation cluster cluster custom heuristic author propose  algorithm instead predefined algorithm decompose legacy software soa guideline refer approach propose lesson recommendation service identification discus technique identify service legacy wrap wrap SIAs technique encapsulate legacy subset thereof service layer export functionality without implementation SIAs propose wrap technique propose wrap methodology expose interactive functionality service wrapper interpreter finite automaton fsa describes interaction model interface user propose automatic wrap technique analysis public interface orient code transform public interface relational generate  interface functionality web service finally generate definition  service interface correspond  script manage service correspond script service wrap technique understand fully architecture implementation legacy software avoids decomposition reusable service however underlie maintain legacy expertise genetic algorithm SIAs rely genetic algorithm identify service legacy software genetic algorithm identify service legacy source code propose identification technique span representation developer identification multi objective genetic algorithm refine initial service decomposition multi objective genetic algorithm rely fitness function consideration managerial goal effectiveness assembly customization reusability maintainability optimal service identification propose genetic algorithm sia however consideration functional cohesion legacy module although genetic algorithm SIAs yield optimal reusable service SIAs guarantee obtain systematically optimal service maximize minimize fitness function architecturally relevant identification relevance identify service highly choice objective managerial goal identification formal concept analysis SIAs formal concept analysis basically rely ontology concept lattice identify service SIAs usually rely concept lattice identify formal concept visualize concept specify ontology formal concept analysis program slice identify service orient mapping program entity documentation expertise apply  algorithm concept lattice finally visualize interpret analyze concept meaningful useful reusable service del identify database related feature export service database query dynamic execution database orient perform analysis query clause constraint clause built formal context concept lattice technique FCA related query concept candidate service challenge FCA service identification consists identify concept related entity legacy formal context entity ensure identification reusable service lack automation formal context hinder FCA algorithm identify service enterprise cluster SIAs cluster functionality legacy candidate service combine cluster technique custom heuristic SIAs cluster belong category cluster functionality cluster technique cluster technique literature hierarchical agglomerative cluster zhang yang propose agglomerative hierarchical cluster technique extract reusable service orient legacy code analyze legacy source code calculate similarity source code entity similarity metric relationship inheritance association etc semantic similarity accord finally express dendrogram  decomposition service cluster technique identify service accord similarity measurement target activity execution cluster technique indeed straightforward apply however context service identification average performance SIAs hierarchical cluster technique specify advance cluster service however subjective choice generate dendrogram service problematic enterprise possibility important choice hierarchical cluster depends application context option practitioner already service identify hierarchical cluster  service identify hierarchical cluster partition service inter intra cluster custom heuristic SIAs dedicate heuristic identify service legacy heuristic technique usually cluster technique genetic algorithm rely quality metric identify candidate service propose fitness function characteristic service composability containment functionality grouped orient legacy software hierarchical agglomerative cluster algorithm fitness function propose heuristic dynamic static relationship orient heuristic multi objective optimization algorithm service although heuristic SIAs challenge consists establish reliable heuristic identify reusable service guideline literature propose guideline service identification propose extract uml activity diagram legacy perform model model transformation obtain bpmn diagram argue define soa migration meta model important migration effective recommend hoc metric assist derive optimal service suitable granularity  propose guideline discover potential service evaluate service extract code legacy recommend highly customizable decision mechanism identify portion legacy code potential service recommend DFDs analyze data identify portion code business SIAs guideline propose extract service legacy software indeed validate automate target technique SIAs   wrap rodríguez   saha genetic algorithm formal concept analysis del  cluster zhang yang saha custom heuristic rodríguez    zhang yang kim doh    quality identify service achieve desire quality critical service architecture SIAs target quality metric requirement obtain quality candidate service quality requirement quality requirement target SIAs reuse ability service participate multiple service assembly composition reusability return investment roi shorter development maintainability service effort modify implementation identify failure verify etc interoperability ability service communicate invoked service implement program containment service completely deployed without service composability service composable another reuse integrate service service functionality service SIAs quality requirement identification technique however service reuse requirement approach composability containment maintainability interoperability identify service quality requirement characterize hardly useful insight identify service target quality requirement SIAs quality   reuse   zhang yang  kim doh maintainability  containment zhang yang composability quality metric quality metric target SIAs couple dependency service minimize functionality encapsulate limit impact service service cohesion cohesion strength relationship program entity function etc implement service functionality service granularity adequate granularity primary concern SIAs adjust scope functionality service service SIAs service service SIAs highly rely specific quality metric loose couple cohesion granularity however SIAs fail comprehensive quality model ass evaluate quality identify service target quality metric SIAs quality   couple zhang yang   cohesion granularity   zhang yang kim doh service   direction SIAs SIAs direction hybrid artifact domain analysis requirement characterization define functionality artifact identify service hence SIAs artifact maximize code reuse minimize extract abstract artifact architecture identify candidate service identify service implementation gap requirement hybrid combine requirement implementation artifact identify candidate service focus slr SIAs hybrid direction report distribution SIAs direction almost hybrid SIAs literature finally SIAs successful deliver service usually identify grain service limited reuse moreover hybrid SIAs tend complement reduce limitation approach requirement identification direction service identification literature   rodríguez    saha del  hybrid   sosa sánchez zhang yang kim doh   analysis SIAs perform static dynamic lexical analysis combination thereof identify service static analysis perform without execute software dependency potential relationship access attribute dependency analyze identify strongly identify service rodríguez   zhang yang  identification static analysis advantage static analysis depends source code address polymorphism dynamic binding dynamic analysis perform examine software dependency software instantiation access function relationship database etc program execution execution perform functionality execution scenario lexical analysis technique suppose similarity account service identification analysis role approach feature location textual similarity technique SIAs rely static analysis dynamic analysis lexical analysis finally rely combination analysis reduce limitation individual analysis analysis SIAs analysis   static analysis rodríguez    sosa sánchez zhang yang kim doh saha del  dynamic analysis     lexical analysis sosa sánchez zhang yang del  automation SIAs automation sia expert distinguish automation manual semi automatic fully automatic manual SIAs entirely expert guideline expert identify service without automate service identification semi automatic SIAs expert perform task propose sia expert objective function specify automatic sia intervention identification approach literature fully automates identification service exist lack automation SIAs SIAs semi automatic manual automation SIAs analysis    saha semi automatic sosa sánchez zhang yang  del        kim doh RQ output SIAs discus output SIAs target service architecture service microservice discus service approach service architecture service identification approach aim identify service integrate soa SIAs interested identify microservices variant service orient architecture style migrate legacy microservice propose microservice identification approach migrate monolithic java enterprise edition  application microservices perform static analysis cluster session entity bean microservices associate cluster session bean grouped cluster accord cluster threshold focus structural couple cohesion distance cluster calculate entity bean propose microservices identification approach relies analysis data version repository monolithic application apply cluster custom heuristic extract loosely couple cohesive mapped microservices semantic logical couple metric cluster algorithm combine metric identify microservices semantic couple identify belong domain responsibility principle analyze commits contributor couple identify access development metric combine cluster algorithm identify belong domain microservice microservices identification approach rely cluster custom heuristic decompose service although granularity important characteristic qualify microservices none approach comprehensive model evaluate microservices identify granularity granularity difference service microservices neither define clearly microservices identification approach service identify SIAs identify specific service exist propose service taxonomy classify service hierarchical layer schema communication stakeholder implementation  exist taxonomy service classification criterion service previous identify service generic exist service validate taxonomy industrial survey practitioner detail business service business service correspond business service user service compose enterprise task application task entity service described business service flight service hotel service sale service enterprise task service finer granularity business service implement generic business functionality reuse across application  task service online payment tax calculation application task service task activity composite service functionality specific application exist reuse within application enable business service application task service quote request invoice sale business typical ERP entity service information data service access management persistent data legacy software action data CRUD modify data entity service management service client account utility service directly business service functionality domain specific service typical utility service notification authentication infrastructure service user deploy soa service communication rout protocol conversion message processing transformation sometimes enterprise service bus  reuse service utility service infrastructure service publish subscribe message queue  SIAs identify service soa without specify service approach identification specific service exist identify service analyze business model business model derive questionnaire interview available documentation atomic business entity activity diagram primitive functionality activity diagram manually identify uml diagram extract legacy code ibm rational service granularity distinguish relation atomic business entity dependent atomic related entity grouped service maximize cohesion minimize couple detail identify service identify service business entity utility service service identify legacy code dynamic analysis technique author rely business model identify correlation activity business model execute execution related identification service cluster technique similarity measurement activity execution identify cluster manually interpret mapped service implementation activity grouped business service correspond activity entity service compose cluster contribute implement multiple activity cluster activity implementation utility service assumption regard approach business model available identify execution scenario lack SIAs centric SIAs focus identification specific service legacy approach focus identify business entity utility service none SIAs identify enterprise task infrastructure service analysis legacy centric SIAs distinguish service identification enterprise application task service scope reuse identify service specify RQ usability SIAs estimate usability SIAs validation accuracy quality introduce usability SIAs sia validation validation refers legacy software sia apply industrial industrial experimental experimental none evaluate usability sia validation perform industrial experimental medium SIAs validate industrial SIAs validate experimental validate lack industrial validation threat applicability SIAs accuracy precision assign medium accuracy precision SIAs assign medium sia although accuracy precision SIAs important SIAs report accuracy precision depict refers implement sia maturity sia source medium prototype quality quality estimation quality identify candidate service author detailed propose sia medium usability precede estimate usability SIAs assign sia usability UD usability SIAs     service identification quality metric  span approach identify web service   generate service layer legacy  service identification framework legacy migration soa  reuse exist orient code web service soa  mining candidate web service legacy code  service stepwise migration approach java application  migrate interactive legacy web service    identify service  reverse engineering relational database identify specify web service respect service orient compute  identify service procedural program migrate legacy service orient architecture  service orient analysis approach data diagram  service discovery semantic algorithm soa modernization legacy web application   service legacy architectural migration  migrate web service research framework nano  service identification packaging service orient reengineering   wrap approach migrate legacy component web service   extract reusable orient legacy code combine formal concept analysis slice technique service integration  dynamic analysis cluster implement service reuse legacy code   service mining legacy database application  approach mining service database orient application  user interface enhance service identification  identify service data artifact centric model approach  multifaceted service identification requirement data  service model refactoring   extract reusable service legacy orient  service legacy software information retrieval technique ontology FCA approach   microservices identification interface analysis   extraction microservices monolithic software architecture  service cutter systematic approach service decomposition   migration web service  functionality orient microservice extraction execution trace cluster  approach align business perspective soa service identification  discover microservices enterprise business containment heuristic  heuristic approach candidate web service legacy software  identify microservices functional decomposition  understand evolution monolithic application microservices  monolithic microservices decomposition framework mining  function splitting heuristic discovery microservices enterprise  monolith microservices architecture approach transactional context  architecting OO software microservices quality approach  refers validation accuracy usability respectively important usability criterion rational estimation usability SIAs calculate usability sia rodríguez  relative validation identification accuracy quality approach  validate experimental validation mention accuracy precision approach associate calculate usability approach finally judgment approach estimate sia quality quality obtain usability qualify usability SIAs usability medium usability usability SIAs infancy mainly due lack validation industrial lack estimation accuracy precision lack lack automation taxonomy validation validation taxonomy researcher practitioner ass strength limitation taxonomy cannot exist objective consequently validate taxonomy perform survey industrial expert methodology conduct survey industrial expert validate taxonomy obtain inform opinion legacy soa migration service identification conduct survey october march preparation survey web survey google built survey taxonomy individual correspond composite node taxonomy correspond node release survey perform pilot participant academia validate relevance coverage etc participant minor survey participant professional demographic data migrate migration information SIAs perception importance strategy input automation technical information SIAs technique quality metric sought service participant information identify service identification technique apply migrate service etc participant mention possibility selection participant target developer industrial soa migration identify solicit developer challenge rely information modernization service online presentation webinars legacy soa migration expert query linkedin profile legacy migration legacy modernization soa architect soa migration migration service migration service mining attempt neither exhaustive participant stratum developer soa migration sample random sample convenience identify potential participant invitation via mail linkedin facebook twitter chose solicit participant diversity avoid overburden administer survey invite participant recommend min survey potential participant invitation colleague soa migration social professional network survey participant participate soa migration remove validation survey assess reliability survey spurious  contradictory etc perform interview participant interview mail address interviewed participant pas analyze transcript individual interview perform thematic cod identify issue related legacy soa migration SIAs perform axial cod identify relationship identify issue identify issue related taxonomy meta code code manually data interviewee validation taxonomy precision accuracy taxonomy input output SIAs TP positive corresponds leaf identify participant taxonomy FP false positive corresponds leaf identify taxonomy mention participant FN false negative corresponds participant identify taxonomy ass usability SIAs overburden participant assessment subjective metric deserves independent future participant participant involve legacy soa migration project capacity software architect director technology software engineer remain migration specialist project manager  participant technology telecommunication banking insurance health education reflect distribution validation validation taxonomy precision recall taxonomy conform expert precision recall validation service identification taxonomy  input technique quality metric direction automation analysis service input precision recall none participant mention scenario identify service however input taxonomy SIAs technique recall acceptable participant mention manual identification quality metric recall acceptable participant mention economic quality metric SIAs identification adaptation effort discussion discus observation SIAs node taxonomy input output usability input SIAs rely diverse input identify service input source code business model BPMS combine multiple input combination input source code BPMS SIAs rely input source code database SIAs rely cluster custom heuristic identify service challenge approach adequate heuristic identify service soa depends quality service service quality attribute affect reuse negatively compromise business agility reduce return investment quality attribute therefore important identify service however service quality requirement SIAs moreover regardless adopt quality requirement SIAs ass quality candidate service economic factor SIAs account aspect implementation maintenance factor economic aspect identify widely ignore SIAs effort SIAs economic aspect important role appropriate sia organization output microservices architecture gain consideration focus identification microservices legacy apply identification technique identify service SIAs focus identification specific service SIAs focus identify business entity utility service enterprise application task infrastructure service sensitive SIAs distinguish enterprise application task service scope reuse identify service specify identification service accord challenge taxonomy service define detection signature service target metric detection appropriate service distinct signature service indistinguishable signature code taxonomy service representative exist service mitigate threat validate taxonomy industrial survey practitioner involve migration project legacy soa none mention identification service usability report SIAs medium usability due lack validation industrial lack lack automation SIAs validation confirm participant survey participant report exists knowledge transfer academia lack consideration enterprise validate propose SIAs academia finally usability sia propose metric partially usability sia usability related aspect however important usability criterion quality sia validation accuracy precision sia future aim empirically validate propose metric usability academia feasibility quantify estimate usability sia related systematic literature review survey SIAs propose literature survey service identification identify although survey goal neither fully address research contains summary comparison relevant survey focus service identification literature    driven SIAs technique focus strategic economic aspect stress consideration economic aspect identify service approach   propose classification SIAs slr indeed fully address research recent SIAs propose another survey identify frequent activity SIAs comparison SIAs recommendation suitable SI technique accord stakeholder service orient engineering context ban   ban   propose survey service identification evaluation framework SIAs survey identify challenge service identification approach limitation fully address research slr systematic literature review service identification literature address PA partially address NA address       business driven SI technique comparison strategic economic aspect  classification service identification technique   SI practitioner suitable identify frequent activity SI research  comparison SI recommendation suitable SI technique accord stakeholder service orient engineering context   suitable input identification SI medium enterprise  classification SI  ban   explore exist evaluation framework SIAs  ban   identify service identification challenge service orient architecture  classification refactoring approach monolithic application microservices   hybrid SIAs input apply generate output usability approach review SI researcher practitioner finally classification refactoring approach monolithic application microservices microservices identification approach decomposition approach microservices identification requirement although SLRs service identification literature none survey fully address research focus deeply detail service identification approach artifact SIAs approach output usability approach propose taxonomy SIAs validate correctness coverage industrial expert legacy soa migration survey interview conclusion future systematic literature review slr service identification approach SIAs artifact legacy software input SIAs input output usability built taxonomy legacy software modernization discussion industrial partner analysis exist SIAs validate correctness coverage taxonomy industrial expert legacy soa migration survey interview validation taxonomy conform industrial expert precision recall slr SIAs infancy mainly due lack validation enterprise lack lack automation SIAs propose SIAs generally ignore economic aspect identification phase identification service indeed despite importance migration SIAs economic aspect service identification implementation maintenance factor exist SIAs service functional cohesion couple application regardless service furthermore trend SIAs identification microservices exist however apply identification technique identify service granularity border service microservices define clearly approach finally SIAs usually improve quality attribute identify candidate service regardless sought quality attribute SIAs ass quality identify service automate SIAs enterprise validate propose approach future generalize survey service identification approach detail SIAs architecture centric architecture tradeoff analysis ATAM attribute driven benefit analysis CBAM assist service identification approach evaluate architectural description migrate empirically gap SIAs academia identify issue research community address knowledge transfer academia context legacy soa migration finally identification service accord challenge future aim propose centric service identification approach promote reuse application enterprise business