dynamic software DSPLs accepted approach adaptation runtime context DSPLs plenty reactive approach apply countermeasure context happens propose proactive approach ProDSPL exploit automatically learnt model  future variation generates DSPL configuration lessen negative impact future quality requirement predict future foster adaptation longer therefore reduces reconfigurations stable ProDSPL formulates generation dynamic reconfigurations proactive controller prediction horizon mapping valid configuration DSPL linear constraint approach evaluate reactive approach DAGAME DSPL genetic algorithm generate quasi optimal feature model configuration runtime ProDSPL evaluate strategy mobile randomly generate feature model evaluation ProDSPL regard quality configuration generate anticipate future moreover ProDSPL enforces reconfigurations previous keywords dynamic software proactive adaptation optimization linear constraint introduction demand adapt software risen sharply specially motivate importance cyber physical cps operating complex environment increase ubiquity possibility information communication technology ict adaptive complex task specially mobile compute robotics ubiquitous compute runtime adaptation mechanism sometimes problematic tend unstable inefficient unreliable therefore overcome approach define dynamic software DSPL widely DSPL systematic engineering approach software SPLs artefact model dynamic variability DSPLs model adaptation context internal external variation context variation trigger adaptation continuous variation resource availability battery memory occurrence environment failure fluctuation user adopt DSPL approach specify dynamic variation variability model reconfiguration service performs adaptation popular variability model feature model FM context DSPLs specify variability model runtime without enumerate configuration reconfiguration service determines adapt satisfy quality requirement execution context reconfiguration service DSPL artefact continuously monitoring context configuration context runtime configuration optimal respect objective criterion minimize battery consumption maintain prescribed quality service technique suitable variant configuration context DSPL artefact independently approach configuration DSPLs approach implement decision strategy purely reactive execution context continuously monitor context occurs reconfiguration service react analyse another configuration optimal quasi optimal context cyber physical strategy generate optimal quasi optimal configuration implement runtime unexpected context impossible pre load reconfiguration dynamic strategy generation valid configuration runtime adapt accordingly resource consume task memory computation etc negatively affect performance battery therefore analyse DSPL alternative adaptation resource involve reconfiguration consumption analyse perform adaptation indeed scenario adaptation consume significant amount execution wireless sensor network device usually limited computational resource reconfiguration usually contributes faster degradation device battery medical application simply acceptable delay normal function reconfiguration specially serious fix urgently scenario prefer technique lessen reconfigurations maintain quality service perform continuous adaptation unstable reconfiguration service configuration another reduce user quality situation preferable adopt proactive strategy reduce adaptation stable proactive strategy context evolution adaptation tend valid longer price apply proactive strategy sometimes calculate application configuration utility quality optimal reactive approach therefore challenge proactive strategy adaptation increase lifespan reduce reconfigurations decrease runtime reconfigurations overall adaptation reduce stable propose ProDSPL optimize approach combine DSPL proactive decision strategy dynamically generate optimal configuration proactive optimize proactive controller explore context software adaptation successful explore behaves conjunction DSPL artefact ProDSPL formulates dynamic reconfiguration proactive controller PC generates valid configuration DSPL runtime theory adaptation model predictive mpc relies dynamic model learnt observation developed theory myriad successful application contribution formulation DSPL reconfiguration service objective optimization prediction horizon linear constraint DSPL feature model proactive approach formulation mapping extend feature model linear constraint combine proactive DSPL although previous propose mapping feature model feature model numerical feature constraint exclude cannot apply generate configuration quality crucial aspect DSPL driven reconfiguration runtime performance quality obtain proactive controller ProDSPL DAGAME reactive approach DSPL approach genetic algorithm generation feature model configuration runtime account concept optimality ratio utility obtain algorithm utility optimal obtain DAGAME obtain optimality execution ProDSPL performance evaluate simulator mobile app developed java reproducible comparison purely reactive approach regard performance quality configuration generate obtain initial hypothesis proactive approach sustainable contributes reduce overall reconfiguration stable maintain satisfactory quality adaptation remainder organize background DSPLs decision model predictive overview activity approach ProDSPL illustrates apply proposal mobile experimental analyse DAGAME threat validity discus related finally conclusion background dynamic software DSPL approach adaptation concept domain SPL management variability model DSPLs redefine exist SPL engineering runtime goal adapt environment perform reconfiguration autonomously SPLs generate DSPL adapt behaviour runtime variability SPLs specify model feature model popular conception notation extension define feature model feature model contains explicit representation configuration feature FM organizes feature correspond constraint dependency feature DSPL reconfigured model dynamic variation feature context dynamic configuration DSPLs optional feature runtime context affect application execution aim DSPL definition engineer identify potential adaptation architectural component delete replace runtime software component parameter quality requirement define explicit representation valid configuration identify context trigger adaptation identify reaction context define decision DMP fulfils optimization goal DSPL configuration context however issue implement greatly proposal difference dynamic valid configuration compute approach compute reconfiguration upload subset runtime approach generate configuration runtime advantage latter configuration subset DMP capable generate reconfiguration efficiently acceptable computation runtime decision DSPLs issue DSPLs approach decision strategy objective optimization technique apply generate optimal dynamic configuration author overview DSPL approach adaptation decision accord DMP dynamic reconfiguration approach classify optimization category randomize stochastic approach approach approach feature DSPLs approach adaptation reactive strategy execution context occurs reconfiguration service analysis replace configuration context reactive approach adapt context detect hence reconfiguration service mechanism generate optimal configuration runtime challenge task usually input DMP input configuration trigger adaptation DSPL artefact optimization goal accord user requirement information available runtime model predictive  adaptation software explore approach hidden markov chain dynamic aim forecast future behaviour environment model predictive mpc important advanced technique  explicit reasonably accurate dynamic model predict output future prediction horizon model controller capture dynamic calculate prediction model predictive important advantage decision strategy DSPLs model capture dynamic static interaction input output disturbance variable constraint input output systematic manner calculation coordinate calculation optimum accurate model prediction warning potential strategy mobile illustrative strategy video mobile phone strategy player multiple delay tolerant action latency requirement web browsing strategy mobile device characteristic configure runtime delete correspond software component tune parameter adapt context user preference device resource availability battery memory etc player configure graphic quality accord preference user 2D 3D graphic internally graphic quality detail medium frame rate frame per fps video graphic quality 3D graphic detail frame rate resource cpu battery memory audio setting user mute vibration instead quality configure rate kbps rate resource reproduction consume mobile device online local multiplayer mode challenge player offline local personal network player activity organize regard connectivity application network interface technology mobile device wifi WLAN lte 4G  3G bluetooth interaction player local multiplayer mode multiplayer response strategy delay without ruin gameplay anyway latency wifi connection shortest response transfer gamer consumption availability limited location user coverage WLAN lte multiplayer wifi available coverage lte battery consumption wifi involve additional isp ProDSPL approach propose ProDSPL decision strategy DSPL ProDSPL proactive approach formulates adaptation optimization prediction horizon linear constraint DSPL propose approach exploit automatically learnt model capture reacts feature model alternative predict impact chosen dynamic configuration requirement available resource battery distinctive characteristic approach ProDSPL account predicts future impact reconfiguration behaviour specific ahead horizon adapt reconfigure DSPL optimization valid configuration maximizes objective function finite ahead horizon schematic overview ProDSPL ProDSPL iterative periodically recomputes finite horizon optimization iteration define DSPL feature model constraint optimization constraint feature compute feasible feature configuration model selection feature relevant performance indicator kpis model automatically learnt data possibly feature kpis objective DSPL performance ProDSPL maximize execution runtime decision strategy component determines configuration context periodically optimization occurs whenever reconfiguration service detects variation performance indicator periodically maximizes accumulate performance fulfils constraint sought ProDSPL replaces configuration describes extend feature model learnt model calculate mathematical model feature model transform linear constraint describes approach apply illustrative variability model phase variability model DSPL extend feature model specify dynamic variability extend feature model feature model variable cardinality arithmetic logical constraint generate dynamic configuration feature feature model resolve account specific choice variable extend feature model constraint defines feasible reconfiguration feature model specify dynamic variation ensure adaptation valid restrict runtime valid configuration extend feature model artefact ProDSPL extend feature model illustrative strategy mobile model comprises feature activation deactivation tune affect battery consumption user connectivity wifi lte bluetooth mode graphic quality etc addition constraint express quality gamer local multiplayer mode connection wifi bluetooth update global network connectivity model ProDSPL model approach exploit mathematical model performance capture reacts choice feature definition accurate model trivial however aim model optimization accurate mapping feature kpis feature sufficient capture trend decision strategy sufficient capture enable lte consume battery wifi connectivity application ProDSPL phase model optimization compute experimental data model non iterative subspace identification approach widely adopt community successfully software implement matlab  function anticipate adaptation ProDSPL learns model mpc model capture dynamic model dynamic variation extend feature model model capture feature affect relevant performance indicator model manually prior knowledge automatically generate data obtain execution software simulator model compute technique technique identify model specific vector parameter feature performance indicator highlight perform matrix learnt data model predict future behaviour unroll prediction horizon dynamic model unrolled generic unrolled dynamic express compute future output function feature model compute computation perform feature DSPL binary numerical identify learnt model adapt runtime behaviour accuracy initial model necessarily model serf understand complex relationship feature performance indicator sensible decision feature runtime configuration transformation variability model linear constraint compute feature enable prediction horizon description extend feature model transform constraint numerical solver extend feature model constraint reformulate linear constraint procedure carefully introduce linear constraint usually simpler handle linear constraint limit applicability propose approach transform complex generic structure extend feature model linear constraint transformation feature model linear constraint approach previous contribution however transformation extend feature model feature model without numerical attribute propositional constraint customize cardinality transformation perform mapping feature model linear constraint  relation equivalent constraint mandatory mandatory relation equivalent constraint feature relation allows feature equivalent constraint mapping cannot apply feature printer numerical associate feature numerical feature bound variable resolution printer ppi feature positive inequality expression incorporate numerical feature decision strategy firstly normalize numerical feature normalize associate decision feature resolution model printer feature therefore variable normalize secondly binary associate introduce enable introduce constraint feature mapping variable normalize  relation equivalent constraint upper bound mandatory mandatory relation equivalent constraint upper bound feature relation allows equivalent constraint auxiliary binary variable introduce formulation linear constraint constant ideally additionally express propositional logic constraint arithmetic constraint integer linear program constraint propose mapping propositional logic integer linear constraint summarizes mapping extend feature model quantifier definition constraint however apply cardinality feature model DSPL explore intend investigate future variable transformation  exactly formulation decision strategy decision strategy runtime formulate optimization constraint initializes optimization performance objective function maximize prediction horizon function instantaneous utility function associate feature numerical feature classical program solver output optimization prediction horizon ProDSPL applies  horizon principle action apply generate optimization initialize output reconfiguration action runtime application configuration numerical feature context behaviour ProDSPL proactive reactive proactive thanks exploitation model creation future ProDSPL reactive optimization assess periodically factor environmental distance router etc affect kpis without accurately capture model periodic assessment allows alignment model reactive propose approach compensates potential model inaccuracy quality decision strategy directly link selection parameter ProDSPL choice tighter quality however frequent action drawback overhead computation choice therefore dependent function available computational capacity accuracy application linear model linear constraint introduce variability model constraint optimization linear therefore chosen linear respect decision variable formulate integer linear program thanks linearity approach ProDSPL converge quantity resource critical battery propose approach continuously configuration optimizes user battery threshold selection feature become critical focus optimization minimization battery drainage satisfactory user behaviour ProDSPL obtain thanks periodic assessment kpis subsequent recomputation possibly ProDSPL action illustrate proposal apply adaptation runtime strategy mobile derivation feature model developer apply approach derive extend feature model adapt extend feature model strategy mobile feature decompose feature model dynamic variation affect consumption user derive description model feature decomposition feature bound solid dash feature assign feature secondly dash evaluate mandatory feature feature mandatory generate configuration feature optional instance connectivity bluetooth feature meaning simultaneously feature feature feature xor exactly configuration model feature choice variable choice depict rectangle evaluate false correspond feature variable depict oval evaluate numerical variable feature evaluate positive integer feature model specification constraint delimit variability constraint define relationship feature model grey constraint instance global network connection resolution model mandatory feature specify constraint involve variable feature instance constraint feature feature comply  feature  lte wifi feature  wifi bluetooth feature account constraint extend feature model configuration valid configuration runtime sufficiently representative image KB image extend feature model strategy mobile linear constraint derivation extend feature model derive reformulate linear constraint optimization transformation procedure guideline introduce constraint variable feature additionally mapping variable feature therefore  constraint mandatory constraint constraint finally constraint constraint refer upper bound variable feature graphic define domain transformation bound described finally application constraint therefore prediction horizon formulation decision strategy model derive learnt model initial model learnt data feature described previous performance indicator utility estimate battery battery consumption objective function utility compute function increase utility quality increase enable quantitative feature relevance feature enable finally introduce additional constraint related battery become negative assess periodically factor environmental distance router etc affect performance indicator accurately capture model reconfiguration action runtime application configuration numerical feature context behaviour runtime compute periodically operating selection depends application feature model available computation capacity consideration aforementioned issue challenge apply DSPL approach environment obtain model capture relationship feature kpis configuration model model ProDSPL issue scope DSPL approach model obtain technique machine model analytical model simulation model information expert chosen technique strongly depends specific application capture relationship challenge impossible sometimes relationship feature kpis clearly define trace operation model operational environment dynamic mention ProDSPL trace previous execution behaviour model however model accurate adapt runtime strategy mobile initial trace generate random configuration utility battery consumption simulated environment feature simulation initial model learnt data runtime decision strategy driven adapter adapter mobile application simulator described simulation runtime adaptation perform input utility battery consumption generate simulator therefore apply approach fundamental environment trace experimental data scenario model adapt runtime something approach fusion however limit application approach mission critical application experimental aim experimentation characterize estimate generate configuration reconfigurations quality proactive ProDSPL comparison reactive approach DSPL DAGAME genetic algorithm generation feature model configuration runtime chosen DAGAME proven quasi optimal minimum DSPL approach ProDSPL code comparison objective research methodology define accord goal metric approach analyze feasibility proactive DSPL ass weakness strength achieve goal research RQ RQ utility configuration generate utility configuration generate proactive controller consideration prediction horizon static configuration configuration generate reactive approach genetic algorithm RQ execution proactive DSPL explores feasibility apply approach runtime execution context response requirement execution around acceptable interactive apps user interaction unfeasible apps context requirement additionally explore influence prediction horizon execution RQ proactive strategy reactive strategy analyse evolution proactive strategy reactive approach attention reconfigurations strategy prediction horizon proactive strategy strategy reconfigurations maintain quality focus reduce reconfigurations involve consumption resource negative impact stability data collection research propose previous aspect ProDSPL related reconfiguration execution utility decision strategy strategy mobile DSPLs variability model randomly generate reactive proactive scenario ProDSPL reconfiguration action enable disable specific functionality tune parameter regard strategy information rqs implement specific interface ProDSPL reconfigure mobile application enable disable service tune graphic parameter utility consumption however execution context hamper possibility reproduce execution context mobile phone battery device degrades device another additionally service interfere drain battery ProDSPL implies perform device battery consumption execution focus contribution analyse quality proactive strategy reactive perform environment developed simulator mobile application mobile device implement java easily translate java android management computational resource mobile device allows adoption adaptation mechanism reconfigure app parameter mobile application simulator consists service service mobile app reconfigured due adaptation adapter simulator performs adaptation input utility battery consumption utility easy satisfy application user utility battery consumption model increase battery consumption milli  introduce feature utility battery consumption randomly generate previously accord continuous uniform distribution respectively service configure adaptation enable disabled runtime simulation utility battery consumption simulated mobile application register simulator strategy maximize utility application minimize battery consumption static strategy reactive strategy proactive strategy adopt static strategy application optimal configuration utility user regardless battery consumption configuration minimum battery consumption regardless utility reactive strategy DAGAME genetic algorithm ProDSPL proactive strategy regard option prediction horizon perform utility battery consumption strategy feature model feature model randomly generate  feature feature model proportion mandatory feature optional feature alternative feature exclusive xor feature regard branching factor minimum maximum maximum model consistent constraint cnf formula feature clause density simulator maximum battery deplete service enable simulation battery simulator register execution conduct realize model report model configuration battery capacity mAh configuration battery capacity mAh configuration battery capacity mAh impossible compute configuration battery capacity mAh model device battery capacity configuration runtime account dynamic variation global variability model SPLs usually DSPLs runtime variability variability analyse sufficiently proof concept proactive strategy implement matlab simulator matlab api java implementation proactive strategy matlab optimization toolbox exploit  function generation configuration implement optimization constraint derive feature model although reactive strategy implement genetic algorithm chosen option appropriate DSPLs feature feasible evaluate frame genetic algorithm heuristic optimization algorithm nearly optimal optimization without explore execution genetic algorithm distinguishes phase generation population random combination mutation population initial selection return objective function normally phase execute periodically generate configuration apply reactive strategy implement simulator genetic algorithm DAGAME selection DAGAME facilitates comparison reactive proactive strategy ProDSPL DAGAME generates runtime configuration DSPL implement variability model account utility contextual information battery DAGAME extend feature model function objective function configuration unusual characteristic finally generate DAGAME optimality optimal policy implement reactive strategy considers situation reconfiguring battery mobile phone capacity DAGAME configuration maximize utility battery battery capacity minimize battery consumption extend lifetime proactive reactive strategy model behaviour ProDSPL model learnt trace aforementioned model explain whereas DAGAME model compute function relationship feature utility battery consumption random generate simulation behaviour implies DAGAME perfect information generate successive dynamic configuration runtime quality configuration generate ProDSPL depends accuracy learnt model research RQ utility configuration generate quality ProDSPL accumulate utility ProDSPL DAGAME pure reactive approach quasi optimal optimal explain proactive strategy generates prediction horizon constraint derive DSPL hypothesis wider prediction horizon accumulate utility accumulate utility overall therefore prediction horizon proactive strategy analysis maximum prediction horizon allows strategy reasonable average iteration hence corresponds feature model feature model feature model maximum prediction horizon additionally DAGAME randomize stochastic approach execute average execution regard accumulate utility summarize evolution utility accumulate utility mobile adaptation strategy simulator static maximum utility max utility static minimum battery consumption min DAGAME genetic avg genetic genetic proactive strategy prediction horizon accord plot proactive strategy accumulate utility min indeed utility min  lifetime strategy reactive strategy maximizes utility configuration phase simulation sub optimal genetic genetic avg battery reactive strategy adapts minimize battery consumption however strategy accumulate utility proactive strategy genetic average improve accumulate utility max utility behaviour proactive strategy nearly reactive utility genetic accumulate utility genetic avg image KB image comparison utility accumulate utility ProDSPL prediction horizon solid DAGAME dot static strategy dash summary ProDSPL       dev utility FM feature prediction horizon lifetime summary DAGAME       dev utility average average average average FM feature lifetime obtain random feature model ProDSPL highlight bold accumulate utility horizon additionally percentage difference ProDSPL accumulate utility feature model bold average DAGAME accumulate utility lifetime remarkably ProDSPL DAGAME nearly feature model feature difference model feature DAGAME model feature slightly ProDSPL almost however worth proactive strategy longer scenario refers simulation model feature ProDSPL DAGAME percentage difference around another important difference stable lifetime approach reconfigurations achieve accumulate utility obtain accumulate utility comment ProDSPL reconfigurations reconfigurations proactive approach reconfigurations reactive reconfigurations percentage difference ProDSPL DAGAME regard descriptive statistic analyse utility configuration generate strategy configuration generate ProDSPL minimum utility DAGAME min utility however configuration utility configuration generate DAGAME max utility regard average utility average utility DAGAME obtains ProDSPL ProDSPL accumulate utility finally standard deviation utility std dev utility ProDSPL illustrates proactive strategy stable utility lifetime variation stability repercussion user stressful positive DAGAME generate configuration optimality utility obtain ProDSPL ProDSPL generate configuration approximately optimal configuration obtain algorithm finally regard influence prediction horizon similarity accumulate utility obtain prediction horizon almost reactive interpretation model strategy prediction horizon maximize utility simulation explain similarity ProDSPL DAGAME account RQ accumulate utility proactive strategy comparable accumulate utility reactive strategy maximize utility proactive approach longer reconfigurations quality execution stable user utility strategy depends attribute specific feature model future explore feature model strategy percentage difference ProDSPL DAGAME       dev utility RQ execution proactive DSPL execution ProDSPL prediction horizon response algorithm becomes unacceptable reconfiguration application user interaction limit prediction horizon others address adaptation application ProDSPL adjust reduce execution related community explore option exploit interior algorithm execute propose proactive strategy instead compute reduce complexity explore issue future execution proactive strategy millisecond average however around explore strategy reduce approach suitable user interaction prediction horizon RQ proactive strategy reactive strategy accordance ProDSPL generate configuration accumulate utility DAGAME longer additionally experimental ProDSPL stable configuration reconfigurations maintain regular quality service reconfiguring internal architecture although introduces important overhead resource consumption cpu interrupt user reconfiguration statistic ProDSPL millisecond  std dev reconfiguration strategy minimize quantity adaptation advantageous already comment reconfigurations perform reconfigurations adapt DAGAME reconfigurations ProDSPL reconfiguring prediction horizon reconfigurations perform genetic algorithm algorithm improves quality configuration pseudo random approach therefore likely execution DAGAME  ProDSPL generates configuration account learnt model model behaviour future performance ProDSPL usually maintains configuration unless context happens boundary immediate reconfiguration input utility battery consumption contextual information minimize consumption adaptation specially important battery device mobile phone   although benefit apply reconfiguration service worthy maintain quality health introduces consumption overhead adaptation strategy indeed author mechanism execute reconfiguration android phone monitoring execute decision simplest clause suggests execute reconfiguration reactive strategy introduce substantial consumption overhead ProDSPL consumption mobile phone important battery lifetime sustainability decrease consumption app significantly mitigate greenhouse ict technology execute mobile phone however consumption software mobile phone accurately perform achieve  conclusion beyond scope important issue response DAGAME millisecond average ProDSPL acceptable affect user interaction feature proactive strategy guarantee behave due stability configuration deterministic genetic algorithm execution instance model feature average accumulate utility additionally feature model difference simulation proactive strategy behaviour execution conclusion ProDSPL advantageous scenario without constraint accuracy optimal reconfiguration computational resource memory computation reconfiguration noticeably user dissatisfaction threat validity discus briefly internal validity construct validity external validity internal validity intend explore obtain influence factor threat construct validity concern completeness potential bias finally external validity analysis obtain generalize important threat internal validity accuracy specially important device usually focus entire device specific application introduce additional error avoid focus simulated scenario additionally experimental facilitates reproduction construct validity identify related algorithm ProDSPL algorithm DSPL discard accord literature feature model around feature stochastic approach relevant avoid introduction additional bias focus algorithm extend feature model source code available author fulfil  DAGAME finally DAGAME objective account battery consumption feature generate dynamic configuration feature model generate configuration battery consumption remain battery device threat construct validity related stochastic genetic algorithm influence measurement address threat repetition additionally summarize average important threat external validity selection feature model address threat feature model evaluation DAGAME randomly generate feature model however aware issue combination FM variability constraint therefore obtain feature feature model threat external validity feature increase configuration feature model increase algorithm generate regard consideration scenario feature challenge algorithm accord literature limit around feature upper bound feature mobile apps upper bound around feature application upper bound feature however opinion application feature runtime unrealistic bound feature feature model variety related adaptation mobile application adaptive specially mobile compute robotics ubiquitous compute however approach explore adaptation mobile application scarce critical scenario emergency medical emerge recent systematic literature identifies classifies evaluates characteristic exist approach adaptation mobile apps researcher practitioner reveal approach aligns exist approach important characteristic accord frequent goal adaptation mobile related technical quality performance consumption non technical goal promote user behavioural lifestyle improvement frequent adaptation perform autonomously optimize dimension reduce battery consumption resource cpu usage user etc similarly approach ProDSPL adapts autonomously optimize user consumption important difference regard adaptation majority approach survey  approach reactive adapt occurs although adaptive foresee normal operation adaptation anticipate occurrence approach difference regard execute adaptation mechanism apply adaptation approach guarantee upper bound execution adaptation application domain apps respect upper bound execution adaptation mandatory approach guarantee upper limit duration adaptation suitable scenario constraint reconfiguration computational resource memory computation decision DSPLs rely randomize stochastic approach mainly genetic algorithm successively generate configuration feature model advantage approach quasi optimal generate execution reasonable quality obtain evaluate fitness function however genetic algorithm feature model tackle important challenge avoid exploration valid feature model configuration homogeneous exploration manage numerical feature approach considers combination DSPL genetic algorithm  generates configuration account resource constraint configure approach considers feature model without numerical feature selection configuration operator  fix invalid configuration DAGAME  approach adaptation mobile device application genetic algorithm decision strategy combination fitness function ECA fitness threshold DSPL request configuration algorithm approach fix operator repair non valid configuration generate genetic algorithm valid author explore apply multi objective evolutionary algorithm MOEA hyper volume metric conclusion model MOEA algorithm exhibit significantly behaviour algorithm  feature model feature feature model feature remarkable numerical feature model xor member numerical feature complicates definition constraint involve numerical feature  framework explores synergy feature model MOEA optimize runtime avoid exploration incorrect FM configuration encode feature model chromosome encode considers core feature feature model distinct elitist feature dependency operator exploration avoid incorrect FM configuration regard numerical feature  considers DAGAME define numeric dependency   previous dependency operator generation chromosome algorithm demonstrates response however proposal numerical feature completeness explore evaluate DSPL approach due computational complexity however specific domain FM configuration decision strategy adopt adaptation strategy heal service composition model heal pseudo boolean optimization resolve solver feature model configuration adaptation around bound algorithm dynamic adaptation multi application algorithm generate optimal configuration application feature model configuration context mobile application proposes extension framework adapt mobile application account utility consumption goal dynamically reconfigure component application runtime react context maintain application utility dynamic environment approach artificial intelligence technique influence configuration feature model goal DSPL maintain fusion approach influence activation feature non functional goal information capture analytical model definition goal fusion threshold establishes accomplishment goal acceptable user accomplishment goal unacceptable adaptation launch affect feature influence goal feature link feature contribution proposal update analytical model runtime discordance utility utility induction launch update analytical model approach approach context feature model adapt DSPL pursue goal context manner fusion approach analytical model influence feature goal trace performance influence model performance influence model encode relationship context feature optimization goal DMP strategy proposal incorporates consistency non functional influence model generate optimal consistent configuration runtime MILP solver ProDSPL classify approach approach mention ProDSPL formalization feature model mixed integer linear program however extend feature model limit applicability proposal properly variable member xor complex constraint numerical feature difference ProDSPL approach latter reactive react specific situation violation goal optimal nearly optimal configuration context specific goal proactive adaptation option scenario already worth difference approach approach reconfiguration proactive characterize reactive scenario trigger decision execution context although proactive DSPL decision strategy relatively recent proactive adaptation mechanism apply apply theory mpc approach implement predictive domain compute guarantee non functional denial service dos attack scenario meeting schedule approach inspire mpc benchmark conclusion improvement obtain proactive approach scenario dependent conclusion ProDSPL combination proactive DSPL adaptation software usually decision strategy DSPL reactive approach optimize configuration situation however scenario reactive strategy faster depletion resource unstable behaviour configuration adapt implies computational resource approach adoption proactive strategy instead reactive reduce adaptation adaptation involves propose configuration context evolution maintains valid stable configuration longer experimentation feasibility ProDSPL survey analysis utility configuration obtain reconfigurations useful response ProDSPL DAGAME genetic algorithm generates nearly optimal configuration DSPL comparison response approach slightly reasonable DAGAME contrast ProDSPL accumulate utility generate configuration optimal additionally ProDSPL generates stable configuration minimizes reconfigurations ongoing goal optimize ProDSPL reduce response resource cpu memory consume improve quality another future explore proactive strategy multi objective DSPL