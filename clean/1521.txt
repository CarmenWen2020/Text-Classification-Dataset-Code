competitive crowdsourcing software development online software development paradigm promise innovative effective quality however paradigm infancy address challenge rate submission risk project failure significant software project fail satisfactory waste effort stakeholder therefore prediction software project stakeholder project crowdsourcing decision effort proposes novel approach machine predict software project crowdsourcing platform project completion otherwise textual description important attribute software project topcoder extract description preprocessed processing technology keywords identify modify keyword rank algorithm software project award rank software project model vector extract attribute identify keywords rank vector associate status vector machine classifier predict software project machine classifier apply vector machine yield performance dataset finally propose approach evaluate data software project validation average precision recall respectively keywords competitive crowdsourcing classification machine risk prediction introduction competitive crowdsource software development CCSD gain tremendous attention software engineering community explores possibility replace software development obtain effective innovative quality CCSD depends format client crowdsource software development project project CCSD platform online competition developer participate competition innovative monetary reward CCSD platform topcoder utest   online software development competition however topcoder widely trust CCSD platform CCSD paradigm stage challenge remain resolve challenge compromise rate project  project fail satisfactory instance topcoder task quit rate project  submit jan jan however submit project whereas project fail due fail screen fail review challenge ecosystem CCSD mainly depends unknown geographically distribute uncontrolled consequently CCSD paradigm limited visibility progress project due limited access client CCSD platform cannot predict project occurrence dissatisfaction client damage popularity CCSD platform therefore automatic prediction project CCSD platform avoid screen review potentially reject submission approach identify address challenge instance award project developer explore developer grant project identify influence factor detailed description project contemplate mostly described text focus facet indicates relevant concern detailed description explains functional requirement concern functional requirement typical concern reliability security performance regard crosscut concern aspect concern scatter detailed description traditional software development analyst perform inspection identify keywords denote spurious concern instance keywords integration service compatibility refer extensibility constraint deeply explore detailed description project propose machine novel approach prediction CCSD project insight extractive summarization extract technical information keywords rank textual description project notably propose approach classifies CCSD project failure project approve submission label otherwise failure extract project CCSD platform topcoder preprocess description processing technology exploit modify keyword rank algorithm identify keywords compute rank extract attribute project identify keywords rank project vector fourth multiple machine classifier prediction project finally evaluate classifier data crowdsourced project validation vector machine classifier outperforms machine classifier average precision recall respectively contribution propose approach twofold automate machine approach propose prediction project knowledge approach predict successful completion project crowdsourcing platform evaluation propose approach propose approach accurate precision recall respectively organize discus research background propose approach describes evaluation propose approach related threat validity finally concludes along future direction background brief background knowledge CCSD explains CCSD competitive crowdsourced software development CCSD CCSD derive crowdsourcing jointly coin howe robinson CCSD emerge trend outsource development software project online community suitably skilled geographically distribute CCSD facilitates various software development activity requirement specification phase gain significant popularity notable online portal topcoder  utest software developer collaborate compete develop innovative software however topcoder become popular CCSD platform billion global register member CCSD overview CCSD CCSD format crowdsource project request crowdsourcing platform online competition obtain effective innovative software crowdsourcing platform project description announce online competition developer around register competition expertise compete innovative software monetary reward developer submit crowdsourcing platform conduct peer review evaluate quality satisfactory evaluate finally winner reward monetary reward project zero submission satisfactory unsuccessful approach overview overview propose approach input propose approach CCSD project output successful prediction CCSD project project otherwise propose approach CCSD project topcoder preprocesses requirement document project processing technology exploit text rank algorithm modification extract keywords rank preprocessed requirement document performs feature model extract attribute project feature extract keywords project vector fourth machine classifier prediction project finally predicts project machine classifier propose approach detailed illustrate illustrate propose approach performs prediction topcoder software development project project  website dynamic module date jun date competition project submission date jun date submission software detailed requirement snippet requirement  seek redesign exist website goal refresh modernize focus usability focus site technical publication maintain focus properly recreate  website  framework technology net asp net sql server technology specify develop project platform html platform project status status project indicates project successfully propose approach illustrate definition project project formalize technology platform develop requirement document detailed requirement document illustrate compute date submission date technology platform  seek redesign exist website goal refresh modernize focus usability focus site technical publication maintain focus properly recreate  website  framework goal competition clearly identify issue  website snippet requirement project propose approach classifies project satisfy fails satisfactory prediction function classification categorize function preprocessing processing technology apply preprocessing requirement document extract topcoder html tag remove python package  preprocessing technique tokenization removal POS tag negation handle correction modifier recognition inflection lemmatization preprocessing layer employ requirement document project tokenization splitting text token remove punctuation decompose text convert lowercase correction textual document mistake therefore correction perform remove mistake document removal layer remove meaning related structure POS tag POS tag assign tokenized requirement document inflection lemmatization inflection convert singular instance issue convert issue lemmatization convert mainly adjective lemmatization convert perform preprocessing python toolkit nltk preprocessing project token requirement document preprocessing illustrate preprocessed keywords extraction submission software evaluation implementation feature requirement document recent machine technique extract rank keywords accord semantic representation text various technique available extractive summarization rank keywords  rake ibm   YAKE however YAKE yield accurate automatic keyword extraction document text software project domain dependent YAKE domain independent therefore modification YAKE model devise mechanism identify rank keywords capture characteristic modify version YAKE considers acronym therefore acronym another selection important feature requirement document calculate frequency uppercase frequency define acronym frequency define frequency define frequency unlike YAKE extra assign dependent feature requirement document modify YAKE calculate occurs occurs frequency frequency compute assumption frequency important YAKE frequency compute frequency frequency standard deviation relatedness unlike YAKE compute relatedness context remove preprocessing propose approach therefore quantify extent resembles frequency frequency within calculate frequency frequency rank extract keywords characteristic relatedness ignore clarify rank assign illustrate YAKE return keywords rank feature model finally dimension matrix wherein project matrix matrix technology platform requirement document extract keywords project feature vector project define rank extract keywords extract keywords project rank feature feature vector keyword project otherwise assign rank keyword illustrate feature vector assign existence keyword feature training prediction propose approach utilizes vector machine svm capture relationship feature status project svm handle dimensional feature remove irrelevant feature svm classification depends principle structural risk minimization SRM principle computational theory SRM hypothesis guarantee error seek decision svm binary training dimensional hyperplane svm significant impact classification document feature project tag feature model model predict status project training construct classification model assigns unlabeled project define project project contains classification category feature mention svm failure project seek decision prediction decision hyperplane training propose approach project label specify binary category vector discriminant function category formalize discriminant function computes decision training data vector normal decision bias prediction vector define training project dataset succeed failure otherwise evaluation evaluate propose approach crowdsourcing project topcoder research evaluation investigates research RQ accurate propose approach prediction project RQ sample influence performance propose approach extent RQ svm outperform machine algorithm predict project RQ preprocessing influence performance propose approach extent RQ influential input propose approach RQ contest prize significantly influence contest research RQ computes accuracy propose approach propose approach baseline prediction algorithm random prediction algorithm zero algorithm algorithm commonly researcher baseline approach comparison uncommon rare random prediction algorithm distinct actual outcome training data predicts random outcome data whereas zero algorithm predicts frequently classification data research RQ investigate sample dataset skewed accepted successful project accepted project reject project perform sample sample sample classifier threshold data reduce imbalanced dataset sample sample respectively similarly dataset balance threshold classifier assigns balance dataset sample sample investigate sample research RQ performance machine algorithm comparison reveal svm outperforms machine algorithm predict project fourth research RQ investigate impact preprocessing input input preprocessed text requirement document keywords extract apply model explain machine model prediction fifth research RQ compute performance propose approach eliminate textual non textual feature feature vector influential input factor propose approach sixth research RQ compute performance propose approach exclude contest prize feature influence contest prize propose approach description dataset project project failure project duration  july dataset data software development project extract topcoder topcoder api extract attribute project date date technology platform requirement status publicly available project till july database overview dataset attribute project return topcoder api specifies project instance reduce multi classification binary classification classify label project accepted submission whereas project reject submission classify project successful project submission incomplete status attribute define requirement attribute empty refer another web link evaluation propose approach perform extract project topcoder sort date apply processing technology preprocessing mention perform validation technique split sort project training recent project notably selection validation instead fold validation leverage data project fold validation employ prediction project leverage project available propose platform however cannot leverage project exist predict project sort extract topcoder data ascend wise machine classifier data elder data data recent data prediction project leverage project available propose crowdsourcing platform split project combination  recent project project finally validate classifier combination training multinomial naive bayes classifier MNB linear regression classifier LR fourth random classifier RF fifth vector machine svm classifier sixth convolutional neural network cnn classifier seventh memory lstm classifier eighth combination predict status project classifier NB MNB LR RF svm cnn lstm respectively finally calculate precision recall classifier performance metric evaluate approach apply widely metric precision recall binary classification respectively precision recall approach prediction project project truly predict project correctly predict fail project incorrectly predict project incorrectly predict fail RQ accuracy propose approach research RQ propose approach baseline algorithm random prediction zero algorithm alternatively benchmark accuracy propose approach propose approach exist approach performance comparison approach predict project knowledge therefore algorithm performance comparison propose approach evaluation propose approach random prediction zero iteration evaluate classifier iteration recent project dataset performance precision recall classifier respectively performance classifier iteration respectively average average precision recall propose approach random prediction zero respectively overfitting evaluation propose approach variation training accuracy minor comparison alternative approach propose      average observation observation propose approach outperforms random prediction zero classifier precision performance improvement propose approach upon random prediction zero respectively recall performance improvement propose approach upon random prediction zero respectively performance decrease propose approach recall zero zero predicts majority successful project performance improvement propose approach upon random prediction zero respectively impact sort perform additional evaluation technique validation evaluate propose approach evaluation technique without sort average precision recall validation without sort respectively performance improvement propose approach sort dataset precision recall respectively propose approach validation sort selection validation leverage data project consequently validation approach perform sort project however validation technique significant significance iteration fold validation machine feature related technology impact project notably validation remain analysis misclassification propose approach false positive false negative fail project predict successful project whereas successful project predict fail project comprehensive keyword extraction specific software engineering text avoid misclassification improve performance propose approach however fully understood rationale misclassification future investigate rationale misclassification reduce misclassification precede analysis conclude propose approach accurate prediction project RQ impact sample sample adjusts distribution corrects bias within imbalanced dataset investigate impact sample sample sample adopt synthetic minority sample approach sample insignificant whereas randomly sample significant sample notably accepted reject project avoid bias moreover sort dataset date evaluation without sample sample setting performance precision recall sample setting respectively average performance sample average precision recall propose approach sample sample respectively difference performance balance imbalanced datasets suggests technique sample improve overall performance propose approach impact sample  sample sample image KB image roc sample rate performance evaluation propose approach plot receiver operation characteristic roc curve sample rate majority sample rate minority roc curve illustrates positive rate sensitivity specificity false positive rate performance curve approach closer indicates significance average roc curve auc ratio accepted reject project suggests propose approach separability distribution input project RQ performance comparison machine algorithm research RQ apply widely text classification algorithm MNB LR RF svm cnn lstm due competitive performance exploit mention cnn lstm model report effective text classification parameter tune classification algorithm tune parameter machine algorithm usually context statistical model fitting tune mention classification algorithm evaluate internal parameter setting identify parameter setting furthermore performance classification algorithm parameter setting MNB multinomial bernoulli gaussian naive bayes considers feature vector frequency notably MNB performance suitable feature model propose approach mention contrast bernoulli naive bayes binary algorithm feature gaussian naive bayes continuous distribution moreover evaluate LR rate iteration respectively data rate converges iteration whereas rate convergence iteration similarly max depth min sample split max terminal node RF increase max depth min sample split decrease performance propose approach however underfitting max terminal node whereas performance increase max terminal node increase notably overfit max terminal node beyond furthermore propose approach svm kernel parameter setting kernel linear linear classification kernel rbf poly sigmoid non linear classification kernel linear performance propose approach approach layer cnn filter kernel activation tanh similarly lstm model contains embed layer lstm layer dropout recurrent dropout dense layer activation sigmoid binary  loss function notably although performance propose approach minor across parameter classification algorithm parameter parameter tune comparison classification algorithm evaluation svm LR RF MNB cnn lstm classifier performance precision recall classifier respectively average performance classifier average precision recall svm LR RF MNB cnn lstm respectively apply classifier svm yield accurate dataset distribution validation svm LR RF MNB cnn lstm   combine boxplot  plot rug plot density curve informative boxplot distribution plot bean classifier density across bean horizontal classifier whereas horizontal average notably implement   package average horizontal propose classifier svm horizontal classifier observation observation svm outperforms LR RF MNB cnn lstm precision recall respectively notably boost algorithm exploit classification error due additional computational sensitive noisy data adaboost susceptible overfitting algorithm svm achieves svm creates hyperplane feature hyperplane maximum margin project outlier exception text classification svm generalization data contrast distance similarity algorithm RF linear svm combination within feature performs classification computational complexity contrast kernel option svm moreover svm machine classifier text classification LR RF MNB LR outperforms MNB performance propose classifier svm difference feature project LR LR discriminative model performs training feature contract MNB generative model report LR svm kernel svm linear therefore LR outperform propose classifier svm dataset LR outperforms RF LR training attribute execution sparse feature feature almost zero sparse feature difference performance LR RF significant however curse dimensionality LR increase performance significantly dataset freedom RF inappropriate dimensional feature prediction project although algorithm cnn lstm achieve comparison machine algorithm classification however outperform propose machine classifier svm dataset evaluation propose approach classifier perform training datasets another unsupervised classifier important functionality keywords textual document project predict however classifier perform classification text relationship decrease performance classifier therefore propose keywords feature mention gist propose approach moreover perform wilcoxon  software built setting calculate difference approach analyze difference alpha svm LR RF MNB cnn lstm respectively furthermore compute investigate difference approach employ cohen delta indicates difference medium respectively suggests difference propose approach contrast LR RF whereas difference propose approach medium remain approach notably apply wilcoxon pairwise comparison distribution svm algorithm alternatively population apply wilcoxon precede analysis conclude propose approach significant svm classifier RQ influence preprocessing requirement document project contains irrelevant meaningless data punctuation mention passing data machine algorithm overhead reduces performance increase computational research RQ propose approach enable disable preprocessing evaluation preprocessing input setting performance precision recall performance propose approach preprocessing input setting performance improvement propose approach preprocessing input setting average precision recall propose approach enable preprocessing disable preprocessing influence preprocessing  enable disabled improvement observation observation propose approach preprocessing layer attains significant improvement performance evaluation performance improvement precision recall respectively disable preprocessing significantly decrease performance recall propose approach decrease performance apply propose approach without preprocessing unwanted  feature affect efficiency processing propose approach precede analysis conclude preprocessing layer textual information requirement project essential vital propose approach RQ influence input factor research RQ propose approach enable disable input evaluation input setting performance precision recall performance propose approach upon input setting respectively average precision recall propose approach setting default disable non textual feature disable textual feature respectively comparison input factor precisionrecallf default disable non textual feature disable textual feature observation observation textual feature alone without non textual feature insufficient prediction default setting enable textual non textual feature disable non textual feature decrease precision significantly recall disable textual feature non textual feature alone significant reduction performance propose approach significantly decrease precision recall precede analysis conclude textual non textual feature critical prediction project disable reduce performance significantly propose approach investigate textual feature useful prediction manually analyze textual feature depth manual analysis suggests keywords influence failure project illustrate observation snippet project application integrate exist FMS achievement payment data batch validation pre define external gui application useful screen filter validate batch validate achievement payment employee validation attribute displayed authorize user review validate validation action web application user update achievement payment web application user action web application adjustment payment outside candidate keyword validate suggests specification project explicitly specify requirement criterion project textual specification keyword validate succeed finally notably lemmatization convert validation validate validate validate mention snippet typical failure project mail component visual component application visual unlimited mail along attach file limited configurable maximum component function mail transfer protocol smtp mail ssl security protocol component mail mail server information mail message information attachment component writes successful unsuccessful component compatible XP vista platform within specification keywords ssl compatible keywords specify security compatibility criterion criterion however significant effort accomplish stringent constraint developer withdraw project fail accomplish project manual analysis textual feature inclusion security compatibility related keywords decrease rate project restricts novice developer participate security compatibility feature explain significant effort accomplish exist literature CCSD service topcoder significant amount  waste explain requirement competitive software developer moreover senior developer essential contribution complex task preemptive occurrence attract senior software developer explain requirement increase rate project furthermore investigate significance keyword discriminate predict keywords associate accepted project reject project validate configuration sequence edit documentation ultimate secure realtime compatible respectively leverage TF idf significance keywords project sort significant keywords occurrence project combine successful project compute frequency TF project compute inverse document frequency idf likelihood keyword prediction reject prediction formalize likelihood keyword successful project successful project keyword project keyword RQ influence contest prize investigate misclassifications propose approach introduce contest prize feature contest prize investigation misclassification distort classification increase attracts developer motivates around influence contest prize contest  exclude observation evaluation observation introduce contest prize slightly reduces misclassification default contest prize slightly increase accuracy performance metric precision recall introduce contest prize significantly reduce misclassification contest prize dependent project prize contrast project another exist survey participant topcoder scant attention prize consequently increase prize impact project precede analysis conclude introduce contest prize minor influence performance propose approach threat threat validity metric chosen evaluate approach threat construct validity precision recall evaluation propose approach however metric widely adopt researcher another threat validity related parameter classification algorithm optimal parameter setting instead default notably parameter setting comparison classification algorithm specify however decrease parameter setting constructive validity threat adoption YAKE keywords extraction assign correspond keywords available YAKE model outperform exist model although modify YAKE mitigate threat however comprehensive keywords extract software engineering text decrease performance approach internal validity threat related implementation approach mitigate threat implementation checked however unnoticed error threat external validity related generalizability approach analyze software development project topcoder platform project crowdsourcing platform increase decrease performance approach external validity threat approach perform project propose approach evaluate project english another threat external validity project therefore traditional machine algorithm evaluate propose approach algorithm parameter adjust mostly significant training data related CCSD significantly gain attention research community recent researcher explore CCSD model domain application however despite importance resolution prediction project completion focus project completion issue however prediction project similarity cluster  competitive network boost approach cbc CN introduce route project developer approach selects project  classifier project recommends candidate employ cluster classification handle local characteristic CCSD project technique considers project similarity content historical activity construct competitive network developer rank initial prediction project developer machine approach  introduce actively suitable developer available project topcoder identify typical developer CCSD behavior construct prestige network employ multi label classification technique similarly employ content recommendation technique develop framework  framework automatically recommends developer newly CCSD project employ multi label classification technique developer treat historical activity developer machine learner capture characteristic developer recommends developer newly project prediction influential factor topcoder project jan jan apply traditional machine technique identify influential factor project outcome framework detects cancelation prone project facilitate management prevent potential delay analysis analysis project project completion analysis percentage project attractiveness analysis average apply project identify factor influence project completion topcoder upwork identify factor influence quality project moreover decision DCS DS introduce investigates influence factor software developer behavior CCSD context introduce dynamic feature extract characterize dynamic competition factor propose analytics dynamic worker decision framework propose improve elasticity adaptive software development topcoder impact worker performance moreover limited CCSD conduct micro crowdsourcing platform instance matrix factorization propose task recommendation framework task preference model preference task recommendation amazon mturk micro task crowdsourcing platform similarly matrix factorization propose rout crowdsourcing task appropriate worker maximize accuracy task amazon mturk moreover prone dishonest worker amazon turk propose classification task task reward amount propose trust evaluation model consists task trust  reward amount trust  finally introduce evolutionary algorithm  GA NSGA II effectively differentiate honest worker dishonest worker although focus CCSD however propose approach conclusion future CCSD paradigm widely employ promise innovative effective quality however challenge rate submission consequently significant crowdsourcing project satisfy waste effort developer CCSD platform crowdsourcing software project propose machine approach prediction CCSD project satisfactory perform preprocessing processing technology employ modify keyword rank algorithm identify keywords rank CCSD project model CCSD project vector vector machine classifier predicts CCSD project effort propose approach evaluate data CCSD project validation average precision recall respectively impact requirement description project significantly prediction however impact project description prediction project reword furthermore explore metadata feature project improve performance propose approach approach credit authorship contribution statement   methodology data curation formal analysis draft hui liu conceptualization methodology revision response reviewer   algorithm implementation evaluation nan  conceptualization revision