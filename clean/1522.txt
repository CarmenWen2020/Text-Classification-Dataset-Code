DPs recognise software development however lack appropriate documentation hamper traceability benefit blur code automatic DP detection become relevant usually rigid analysis software metric specific source code propose GEML novel detection approach evolutionary machine software diverse firstly GEML evolutionary algorithm extract characteristic DP formulate readable syntax  context grammar secondly classifier built predict code contains hidden DP implementation GEML validate DPs public repository recurrently adopt machine increase diverse DPs effectiveness robustness detection capability initial parameter tune parameter setup performance guarantee applicability approach without adjust complex parameter specific finally demonstration previous keywords detection reverse engineering machine associative classification grammar genetic program introduction DPs reusable template address recurrent software adoption DPs programmer goal improve quality software maintainability  flexibility understandability benefit manual inspection error prone consume automatic detection DPD become prominent reverse engineering research automatically identify adoption DPs DPD technique improve understand decision software   reuse technique propose research literature automate DPD structure static code code structure define DPs predetermine expert knowledge usually specific codebase expert define code structure impose rigidity detection technique reinterpret context reduce limitation machine ML technique propose DPD technique easily adapt codebases collection representative recognise diverse implementation simply replace extend analyse collection ML approach mechanism structural behavioural source code software metric DP despite DPs described multiple aspect ML approach software metric code structural behavioural unfortunately detection performance exist ML approach DPD affected analysis specific parameter configuration characteristic harder adopt tune parameter considerable effort software engineer machine expertise furthermore ML technique neural network understand interpret expert recommendation likely trust GEML novel machine approach DPD static code specifically GEML associative classification AC ML technique implement grammar genetic program GP goal achieve benefit ML proposal address limitation GP basis approach ML proposal GEML learns DP ability capture diverse DP implementation limitation previous ML proposal GEML promote extensibility readability flexibility extensibility GEML customisable collection microstructures potential identify DP instance automatically evolutionary algorithm phase readability GEML classifier configurable context grammar declares syntax establish mechanism encode knowledge distinctive characteristic DP instance comprehensible outcome model flexibility GEML applicable DP without algorithm parameter configuration optimal DP addition benefit GEML accuracy outperform available technique competitive sample furthermore GEML maintain stable behaviour configuration beneficial software engineer practical setting GEML allows developer execute without configure DP customise parameter gain detection scenario however desirable quality GEML beneficial reasonably performance exist technique focus evaluation effectiveness GEML perform evaluation firstly GEML detection performance depth sensitivity analysis although analysis laborious become essential comprehend internals artificial intelligence technique apply aim understand extent algorithmic component configuration contribute detect individual DP detection capability GEML selection option effectiveness GEML configuration customise microstructures eligible software engineer software metric operator characterise DP alternative scenario software engineer knowledge customise separately DP additional benefit customise GEML individually DP practitioner runtimes finally detection performance configuration GEML anticipate simpler usage scenario practitioner analyse GEML behaves configuration training DPs DPs ML perspective reduce available training sample GEML infer detection adaptation regard internal component configuration GEML detection performance DPD ML non ML technique GEML accuracy MARPLE ML approach DPs available comparison improvement non ML technique GEML recover DP instance validate JHotDraw frequently project DPD literature lastly analyse strength weakness GEML respect ssa ptidej reference DPD frequently comparative purpose GEML highly competitive correctly identifies DP implementation DPs detection available GEML overcomes limitation absence implement role DP excessive false positive evaluation GEML practical approach DPD improves effectiveness return readable outcome furthermore possibility code relevant brings flexibility DPD contribution novel DPD technique GEML machine grammar genetic program configuration detect DPs return readable provision collection microstructures metric operator derive  grammar cfg GP algorithm define categorical numerical analysis microstructures software metric DP experimental evaluation GEML training configuration scenario highly competitive ML non ML approach research demonstration software engineer execute GEML customise individual DPs organise concept terminology related apply technique introduce related detailed description DPD model detail experimental methodology framework conduct validation detection model comparison DPD mart analysis applicability describes demonstration additional approach finally threat validity conclude remark threat validity conclude remark respectively theoretical background description communicate customise context purpose define role specific task perform consequently DPD identify code implement role within structure definition relate particularity program java allows implement explicit interface besides role played code therefore adaptable presence predefined structure role cannot assume diverse behavioural creational structural suggests characterise definitely hamper detection explains relevant theoretical concept related technique GEML conduct detection procedure built basis associative classification ML approach classification approach understandable detection model internally classifier construct evolutionary technique GP specially conceive evolve computer program accord grammar derivation constraint define program potential GEML detection model built associative classification machine computational vast collection data ML technique mostly unsupervised supervise unsupervised technique explore data sample meaningful technique within unsupervised association mining association formally item itemsets association implication quality compute quality confidence representative indicates frequently satisfied within data sample confidence proportion sample satisfy consequent already satisfy antecedent equation data sample within unlike unsupervised supervise technique prediction information extract data purpose classification algorithm assign predefined category refer unknown data sample associative classification technique classifier aim association CARS consequent determines generate AC apply CARS CARS prune exclusively definitely constitute classification model grammar genetic program GP inspire principle evolution evolutionary computation creates population individual potential evolve generation individual characterise genotype computational structure encode phenotype representation addition domain specific fitness function define ass quality individual schema generation individual modify aim individual predecessor specifically algorithm selects subset population fitness combine generate offspring crossover operator mutation apply obtain individual diverse generation individual survive population genetic program GP EC technique individual encode structure originally conceive evolve computer program GP specialise operator manipulate GP extension GP cfg describes syntactic constrains satisfied valid individual cfg define tuple non terminal terminal production production indicates non terminal rewrite derivation expression contains terminal formally express GP individual derive sequence production derivation cfg application crossover mutation guarantee production valid GP association grammar formally defines structure itemsets context individual association evolutionary orient towards quality accord confidence criterion related multiple technique propose automatic detection structural behavioural creational static dynamic analysis source code technique combine detect inspect definition collaboration GEML performs static analysis mostly focus approach DP detection attention proposal machine addition majority source code input author explore detection stage uml diagram within scope technique pat pioneer declarative logic program defines structural DPs software project prolog prolog identify DP instance similarly prolog meta structure DPs context finder integrates related structure invocation filter predefined detection script fuzzy logic incomplete knowledge attempt detection flexible approach fuzzy assign structural behavioural reporting confidence potential however fuzzy approach extensive knowledge diverse implementation knowledge construct expert outcome detection bias alternatively technique similarity adopt graph structural information ssa substructure correspond predefined template graph structure DP explicit representation relationship role mechanism approximate apply variation similarly behavioural message passing reduce false positive approach substructure prior identification DP implementation signature predefined template DPs refine vein approach focus improve prediction performance substructure former reduces conveniently partition project graph latter defines sequence representative discover filter irrelevant stage  model graph meta model domain specific propose specify structural behavioural relationship DPs another popular  graph abstract representation candidate DP implementation statically analyse formal explore context DPD specifically formal concept analysis apply structural relation candidate approach later extend introduce additional contribution filter phase candidate propose independent variant conduct detect structural within subsystem printer controller however formal approach computationally expensive due exponential growth formal concept express feature document annotation automatic analyser built author acknowledge incomplete definition inappropriate semantics negatively impact detection relation define basis visual another specify structural DPs reduce false positive detection definition negative criterion presence DP performs analysis relationship author formulate DPD constraint satisfaction define structural behavioural DP satisfy manual definition formalisation relationship role   representative approach constraint relaxation former explanation satisfied non satisfied constraint later extend numerical reduce candidate per role  extension available within ptidej suite ML apply DPD mainly building classification model characterise DPs inspection code implementation proposal role ML detection source code specific algorithm apply association discard role accord software metric ML directly responsible detection similarly decision neural network manually define feature predictor reduce false positive detect structural analysis code collection software metric neural network goal identification potentially role DP address detection rely ML technique decision presence DP code multiple artificial neural network role subset metric chosen via feature selection propose classifier detection filter candidate classification model vector machine input label manually identify implementation metric associate role subgraph isomorphic algorithm execute candidate extract code MARPLE software metric input structural behavioural composition delegation implement eclipse plugin MARPLE cluster classification algorithm implement weka particularly MARPLE highly interpretable classifier decision however DP instance directly input executes cluster algorithm prior detection model representative sample consequently understand recently DPD treat multi classification goal specific implement input code classifier neural network vector machine random software metric convolutional neural network random apply feature define occurrence microstructures code proposal GEML belongs ML technique DPD non ML approach GEML prior knowledge DP detect therefore adapt organisational policy program style ML automatically discovers define DP explore previous implementation code repository counterpart ML approach label implementation available context focus ML alternative GEML differs exist approach combination software metric input algorithm GP classifier instead detector neural network vector machine outcome model harder understand reduces likelihood adoption practitioner GEML approach depicts overall structure GEML approach input consist organisational repository predict sample source code detection execution GEML detect DPs return incorporate organisational repository future detection detection model progressively adapt specific development culture detail approach GEML propose phase model firstly structural behavioural metric software analysis aim representative label DP implementation  code repository contains positive negative sample negative sample relevant information realistic scenario similarity DP misclassification otherwise negative sample benefit robustness detection specially amount positive public repository instance within repository characterise constituent source code role mapping correspondence role association compliant cfg formally define syntax constraint GP algorithm DPD GP4DPD developed characterise implementation available repository CARS descriptive directly detection purpose effective construction detection model chosen aim prune apply obtain minimum descriptive strategy detector accord  associative classification phase explain detail image KB image phase model detection GP algorithm generation algorithm procedure GP4DPD receives input generation  population  individual CARS return  grammar cfg source code repository repo GP4DPD external archive  compose accurate individual accord evaluation return output image KB image regard operation GP4DPD firstly creates random population pop  individual  syntax prescribed grammar cfg external archive  initialise empty initial individual pop evaluate compute fitness function obtains calculate repository repo algorithm iterates  generation generation selection operator return  individual union population pop population  crossover operator apply probability combine genotype obtain offspring mutate choice specific mutator randomly operator seek balance exploration magnitude apply  improvement population diversity comparison expression  DPD specific mutator aim generate positive negative sample offspring evaluate replace population finally external archive update exceed confidence threshold ensure exceed  redundant explain detail encode aforementioned genetic operator encode genotype individual valid derivation production formally define cfg phenotype denotes correspond association genotype phenotype mapping described role adapter delegate functionality  valid adapter explain cfg definition terminal non terminal production derive valid expression non terminal context terminal software metric structural behavioural identify presence instance whereas non terminal define derivable component comparison expression aforementioned production derivation generation detection ultimately terminal cfg certainly customise specific efficient description relevant image KB image correspondence genotype phenotype illustrative individual propose grammar DPD production omit readability production determines derive non terminal   antecedent consequent respectively antecedent define inclusive sequence numerical  categorical  comparison  derive terminal express positive detection instance   addition worth grammar slightly customise adapter non terminal role derive adapter  target similarly adaptation grammar straightforward operator role relevant available exceptionally implement operator possibility operator available algorithm relevant GP4DPD affected algorithm receives grammar definition parameter adapt consequence mention DP declare antecedent comparison expression prefix comparator operator argument numerical comparison  representation software metric comparison comprises numerical comparator numerical operator computes orient software metric CK chidamber kemerer metric suite  noc dit depth inheritance rfc response argument refer role numerical constant const comparison noc target indicates target subclass likewise numerical software metric implement grammar without recompiling GP4DPD image KB image grammar GP4DPD algorithm categorical comparison involve structural behavioural structural express characteristic structural abstract relationship aggregation generalisation behavioural refer interaction invocation analyse static code comparison compose categorical comparator categorical operator  delegate argument participate role categorical comparison  target  describes target role implement interface available operator signature description worth categorical operator mainly elemental micro clue easily understood software engineer structure express categorical operator code artefact satisfies false basis instance abstract interface elemental code artefact interface usually artefact interface however largely depends specific program artefact enumeration subtypes artefact abstract concrete implies operator     artefact besides operator strongly correlate  others false redundant therefore cfg declares multi categorical operator return alternative instead  allows analyse source code artefact return possibility operator replaces redundant unnecessarily inefficient boolean operator boost generation compact readable grammar operator implementation numerical operator   noc directly inherit dit depth inheritance rfc distinct constructor potentially invoked receives message categorical operator   cannot extend false otherwise  subclass false otherwise  instantiates within false otherwise  exception static flag instantiation false otherwise  invoked another false otherwise return return false otherwise receives receives argument false otherwise  instantiates false otherwise delegate invokes false otherwise  cod artefact false otherwise  return artefact implement   enum  indicates directly indirectly override   implement     return sort link artefact       return visibility restrictive constructor private package public aggregation return information attribute declare visibility   return declare  inherit  implement delegate  otherwise  return declare delegate interface extend implement multiple multi  otherwise  return interface extend implement multiple multi interface extend implement  otherwise  interface extend implement defines collection interface extend implement false otherwise genetic operator genetic operator evolutionary schema selection crossover mutation selection operator apply generation  aim binary tournament selects individual union pop  accord fitness  regard crossover operator apply accord probability operator randomly swap comparison respective genotype comparison traverse derivation pre cmp delimit cmp  illustrate offspring mutate variant mutator firstly  aim generate novel comparison selects comparison rebuilds individual randomly derive cmp terminal obtain comparison chosen random roulette promotes significantly alter individual categorical comparison replace numerical comparison secondly  aim obtain positive negative sample rationale operator comparison describes implementation negation imply incorrect operator traverse derivation rewrite logical meaning comparison inverse probability comparison antecedent aim simply switch comparison replace illustrate addition terminal consequent label invert probability instance comparison  target  describes recurrent positive sample adapter  target  likely negative sample mutation operation regardless specific variant mutate offspring return image KB image crossover operator construction detection model explain  algorithm return external archive compose CARS however  strictly detection model aim database coverage compute prune originally define CBA approach associative classification later apply algorithm   algorithm pseudocode prune conveniently adapt procedure archive return GP4DPD  repository repo coverage threshold output return prune ruleset sort accord confidence comparison respectively precisely precedes iff satisfied conf conf conf conf supp supp conf conf supp supp comparison comparison repository sample scan antecedent positive conveniently  addition correctly classifies sample flag marked ruleset counter sample repo increase sample threshold remove repo sample checked finally contribute increase detection capability discard happens detects sample confidence sample repo image KB image prune procedure constitute classifier commonly reference strategy associative classification comparison maximum likelihood maxl dominant factor multiple label DFML DFML define  DFML DFML  DFML differently unknown sample instance maxl selects ranked sample consequent imply prediction approach criticise author becomes responsible decision classifier contrast DFML selects incoming sample distributes accord consequent partition determines adapt proposal representative partition obtain variant DFML compute partition return analysis strength frequency similarly DFML calculates laplace accuracy estimate accuracy selects partition average DFML considers within partition prefixed parameter sort classifier code apply predict presence DP implementation experimental setting research objective validate data repository explain methodology detail experimental framework research conduct aim respond research rqs RQ configuration informs technique DP combination parameter GP machine algorithm prune vast convenient objectively parameter setup DP RQ software engineer significant metric detection combination numerical metric categorical behavioural structural attribute engineer possibility microstructures operator convenience analyse operator frequently experimentation replicate adjust maintain detection performance RQ GEML effectiveness ML DPD technique convenient configuration DPs model competitive ML approach purpose configuration relieve software engineer model RQ training influence GEML ML approach GEML availability DP therefore important GEML behaves software engineer confirm potential technique execution scenario RQ GEML effectiveness non ML DPD technique similarly RQ analyse benefit GEML brings non ML DPD currently available software engineer ensure contributes advance experimental data source experimentation considers category define creational abstract factory factory singleton behavioural command iterator observer strategy template visitor structural adapter bridge composite decorator proxy complexity role multiple role sample extract public repository institutional data source valid specifically conduct implementation repository namely DPB mart purpose firstly DPB sample publicly available repository moreover DPB author MARPLE validate approach ensures comparison proposal contains positive negative sample requirement ML DPB sample industrial java project plus project adopt literature artefact attribute code loc software project DPB limitation repository sample positive negative GEML non ML proposal rely mart peer validate repository frequently DPD mart sample distribute project exception DPExample project summarises sample per project identify within mart exist DPs define gamma JHotDraw project variety DPs appropriate project GEML DPD explain later mart allows GEML DPD reporting JHotDraw project limit DPs available comparison mart originally specifically ML approach due reduce positive sample enlarge suitable training accurate practicable analysis important GEML extensive collection DPs training available mart therefore built training repository validate applicability GEML DPD ML proposal therefore complement positive sample available mart instance manually validate recover DPD code ssa ptidej report presence DP implementation role ptidej information contrast sample mart fully label repository maintain instance role negative sample approach generate random candidate code positive sample accord heuristic procedure maximum negative sample per positive sample generate available repository training sample preliminary positive sample remain DPs available mart proven insufficient training java project experimentation  DPExample   alpha  netbeans junit JHotDraw   pmd sample per  adapter decorator singleton composite  proxy observer strategy factory command visitor iterator bridge characteristic project available mart DPExample   positive sample DPExample   alpha  netbeans junit JHotDraw   pmd description rqs validate detection capability GEML laboratory setting specifically parameter tune influence proposal analyse configuration respect MARPLE another machine GEML recent non ML DPD proposal    aim comparison purpose mart project JHotDraw focus qualitative aspect evaluate GEML practical GEML project DPExample repository DPB training proposal non ML DPD ssa ptidej project input frequently comparative purpose DPD respectively preliminary analysis unavailable fail installation execution cope intrinsic randomness evolutionary algorithm independent random execute bias due training partition input repository DPB stratify fold validation execution comparison DPD approach widely project JHotDraw DPD analysis access recover instance project comparison inspect agreement respect mart JHotDraw mart project variety DP implementation project within mart training truly DP sample label positive mart simulate engineer project DPD model DPs apply detection model project none mart project contains sample DPs training detection model DPExample ssa ptidej training phase directly execute DPExample input positive sample DPExample manually revise report commonly classification accuracy indicates percentage instance correctly classify recall corresponds amount DPs retrieve sample within repository precision DPs positively detect positive specificity indicates proportion negative sample correctly identify negative calculates harmonic precision recall performance metric compute relevance statistically validate firstly wilcoxon allows perform pairwise comparison null hypothesis hypothesis algorithm configuration perform equally distribution execution evolutionary algorithm DP performance multiple configuration conveniently adjust holm pairwise comparison reporting significant difference cliff delta confidence experimental framework implementation GEML java  functionality data structure implement evolutionary algorithm VF algorithm available  graph library implement generation candidate additional library ckjm implementation CK metric suite java parser source code parser extract information code  library bytecode input implement grammar operator evaluation although bytecode operator prefer faster computation parameter setup variation detection model GP4DPD algorithm prune procedure population generation crossover probability preliminary maximum derivation determines limit genotype hardly generate individual admissible addition external archive restrict avoid discard effectiveness prune parameter accord conclusion extract parameter serf influence detection analysis confidence coverage configure accord frequently apply within AC parameter setup DPD model ParameterValue population generation crossover probability maximum derivation coverage threshold threshold confidence threshold validation detection model explain internal detection model analyse extensive parameter RQ focus selection grammar operator reveal recurrent microstructures DP RQ finally emphasis effectiveness proposal RQ parameter response RQ parameter focus influential aspect fitting  GEML coverage threshold parameter prune confidence threshold production quality evolutionary strategy selection determines prune DPD model additional appendix coverage threshold coverage threshold determines sample satisfy detection model threshold recommendation AC literature default confidence addition classification strategy maxl chosen baseline procedure simplest classification classification compute configuration emphasis reflect precision recall execution average obtain coverage threshold statistical analysis wilcoxon report significant difference adapter contrast difference threshold difference coverage threshold reduce threshold confidence classification strategy update mechanism archive confidence threshold preserve quality response RQ parameter return quality DP aim combination confidence threshold jointly classification strategy analyse outcome combination appendix separately summarises finding combination parameter respect sake clarity mainly analyse obtain addition accuracy fully reliable DPB repository highly imbalanced respect classification performance configuration difference singleton adapter factory apply decorator composite however difference report difference mainly configuration classification strategy confidence threshold classification performance     factory    regard classification strategy worth CARS input strategy DFML author firstly reveal detection alternative maxl return performance strategy significantly decorator composite similarly DFML obtains detection performance maxl strategy account reduce detection argue limited alternative DPD secondly strategy DFML DFML latter procedure exploit detection capability GEML specifically strategy focus negative sample strategy obtain specificity expense recall meaning DP instance recover therefore configuration DFML analyse confidence threshold influence detection model confidence threshold performance mostly configuration confidence threshold composite exception speculate certainty detection nevertheless commonly AC literature regard singleton adapter obtain whilst factory decorator composite however configuration related proportion sample satisfy implementation within repository therefore alternative AC literature finally summarise finding RQ prefer singleton adapter factory decorator composite recommend confidence threshold choice composite obtains another DFML prune strategy performance strategy beneficial decorator composite selection grammar operator cfg determines expression within DP implementation operator apply without  capture analysis practical detection model easy software engineer nevertheless engineer discard grammar operator refer microstructures opinion descriptive detect modify comply organisational selection representative operator limited pre addition reduce consequently therefore response RQ analyse extent selection operator influence operator detection capability aim occurrence prune execution depict plot frequency appearance normalise singleton operator related instantiation   presence whereas role input hardly adapter  specific operator whereas   rarely operator related creation  return commonly sample factory finally    recurrent operator decorator composite related delegation belonging inheritance ability GP4DPD negative almost operator reduce operator generation besides potentially  operator within affect readability therefore operator frequency omit selection affect detection performance depict dash DPs preliminary experimentation image KB image frequency appearance grammar operator operator     factory    comparison  purpose configuration   singleton adapter factory decorator composite experimentation analogously previous without selection grammar operator brevity additional obtain DP reduce grammar operator bold  improve analogous confidence strategy obtain without reduce operator DFML classification strategy obtain regard confidence threshold mostly configuration composite recommend remain robust notorious difference previous operator absolute selection seemingly benefit obtain singleton composite adapter without operator reflect practically argue consistency favour engineer adapt selection grammar operator organisational repository reduce without significantly affect detection performance pairwise comparison perform analogous configuration reduce grammar operator statistical analysis reflect significant difference factory exception slightly improves operator GEML automatically operator relevant category related visibility instantiation detect creational singleton factory whereas operator focus delegation structure highly effective recover structural behavioural adapter decorator composite performance GEML significantly decrease operator reduce factory exception performance comparison discussion performance comparison robust GEML behaves specific configuration grammar operator microstructures refine nevertheless likely software engineer decision microstructures unrealistic parameter adjust model sake practicality model configuration previously DFML clearly dominates classification strategy confidence threshold singleton adapter whereas appropriate factory decorator finally configuration composite prefer rare DP implementation seemingly comprehensive choice similarly confidence threshold composite competitive performance obtain configuration compiles obtain parameter precisely accuracy return configuration default configuration response RQ detection performance GEML MARPLE ML experimental methodology specifically obtain MARPLE originally report author purpose configuration MARPLE corresponds random classifier preprocessor combination comparative purpose configuration technique DPs GEML outperforms MARPLE singleton adapter factory percentage improvement respectively purpose configuration contrast MARPLE achieves increase decorator however GEML demonstrates significant advantage composite obtain increase purpose configuration MARPLE configuration worth remark GEML stable along contrast MARPLE GEML detection performance singleton structure exhibit role contrast return decorator composite conclusion drawn DPD model detection capacity decrease complexity increase comparison finding related RQ extract comparison JHotDraw project   adapter command composite decorator factory observer singleton strategy template GEML outperforms MARPLE comparison achieve improvement composite GEML stable MARPLE accuracy purpose configuration ML proposal GEML detection performance complex discussion characteristic GEML characteristic appeal alternative beyond performance discus implication practical perspective cfg diverse eligible grammar operator facilitates customisation detection engineer contrast proposal GEML allows numerical categorical meaning simultaneous metric microstructures software engineer explicitly influence developmental aspect furthermore model capture significant adapt model repository promote ML technique detect sample positive negative model input future detection GEML progressive adjustment prediction organisational development culture usually dynamic finally comparison proposal GEML model comprehensible practitioner comparison DPD mart analysis GEML DPD project available mart JHotDraw project gamma DPs available project mart project cannot training instance prototype recent DPD chosen comparison  detects structural sub graph isomorphism algorithm  approach analysis signature  ontology combine structural behavioural semantic information JHotDraw contrast author report absolute recover instance access DP implementation allows compute performance metric precision recall basis truth instead validate custom repository author usually mart extend DPD datasets publicly available DPs recover instance per DP sum precision recall compute positive sample label mart truth none comparison distinguish strategy report GEML DP GEML recovers DP implementation   GEML DPs adapter observer singleton template remain DPs DP implementation factory  detect  GEML considerably reduces false positive adapter strategy contrast GEML ML approach suffers training instance composite observer GEML manages detect positive composite recover observer implementation analysis applicability explain basis practical scenario evaluate accord qualitative aspect experimentation perform DPs adaptation execute GEML DPs introduce outcome analyse training repository influence behaviour propose RQ comparison reference non ML DPD RQ influence training factor response RQ GEML retrain apply purpose configuration input repository explain detection model DPExample median execution precision recall respectively sort decrease positive training sample insight despite training instance repository limit factor inherent machine GEML retrieve DP instance gamma DP available mart exception builder memento prototype facade observation suffers training sample lack data execution detection generate marked degradation performance evident precision rate false positive tends increase GEML DP implementation execution exception observer abstract factory command factory performance GEML project DPExample without numerical numerical  numerical   adapter singleton template proxy observer strategy composite abstract factory command factory visitor iterator decorator bridge another consequence reduce training overfitting variability algorithm DPExample project literature contrast source project training project slight difference rely role identification software metric specially evident DPs adapter template GEML considerably precision recall training phase adapter difference DPB mart label role DPB assigns per role affect effectiveness  operator assumption similarly realise numerical software metric become informative difference inspect training available implies threshold loc  representative project exclude operator improve detection capability guaranteed stable abstract factory command factory generate DP available additional specificity operator reveal important factor counteract training sample reflect decorator GEML obtain positive sample detection model  operator particularly associate decorator frequently imply operator orient towards DP implement detection visitor obtain recall despite positive sample specific operator role implement interface becomes highly relevant identify structure finally strategy structure distinguish therefore detect correctly DPD accord outcome GEML differentiate strategy vice versa around instance correspond false positive attribute misclassification DPs finally average execution DPD apply DPExample medium project GP4DPD although usually longer prune generate procedure mostly depends return GP4DPD training DPD model generation prune DP instance repository VF algorithm efficient candidate generation disparity role filter heuristic apply DP finally proceed detection depends candidate average execution phase DPD graph building code average  detection   filter adapter singleton proxy observer strategy composite factory command visitor iterator decorator bridge comparison   adapter singleton proxy observer strategy composite factory command visitor iterator decorator bridge coincidence DPD coincidence positive  positive implementation   TP ssa  ssa  adapter singleton proxy observer strategy composite factory command visitor iterator decorator bridge detection performance GEML varies GEML achieves recall DPs despite sample available detection capability affected training characteristic DP role label repository choice operator software metric become relevant sample available improvement precision recall respect GEML without implementation specific operator difficulty DPs sample significantly comparison DPD context RQ previous contrast obtain available software engineer ssa ptidej comparison favourable GEML training sample DPs extremely GEML partially outcome GEML fail identify instance discover GEML manages superior competitive ssa ptidej GEML obtain report absolute positive DP implementation retrieve correctly identify TP easy interpret effort manually verify outcome reference actual DP implementation truth overall GEML detects DP implementation ssa ptidej ssa applies conservative detection strategy allows reduce presence false positive fps proxy strategy factory bridge visitor clearly illustrate GEML variability regard fps correspond DPs abstract factory command issue previous instance overfitting behaviour GEML considerably reduces inspect within project tends return fps ptidej correctly identifies implement fails assign role return permutation DP instance ssa limitation respect role identification DPs ssa role meaning practitioner manually inspect code DP definition superior necessarily belonging category creational structural behavioural indeed DPs return majority implementation singleton template difficulty detect implementation factory composite adapter ssa DP instance GEML adapter template strategy decorator instance command difference favour GEML bridge visitor factory ptidej GEML return DP instance adapter template proxy however lack DPs observer bridge abstract factory decorator strategy impose limitation ptidej detection agreement intersection focus solely DP instance detect coincidence express percentage outcome positive DP implementation tps evident conclude due FP rate ptidej GEML closer ssa positive implementation nevertheless GEML achieves agreement ptidej proxy coincidence ssa ptidej focus exhibit agreement GEML ssa implementation observer return instance similarly implementation ssa factory detect GEML phenomenon proxy implementation return instance furthermore tps GEML GEML detects implementation ssa ptidej counting abstract factory iterator instance neither ssa ptidej DPs observer bridge composite DP implementation tps return GEML meaning highly effective instance visitor apart unique implementation return GEML instance detect ssa happens ability DP implementation complementary conclude compile relevant response RQ GEML positive instance reference ssa ptidej sample abstract factory iterator available DPs sample recover GEML comparison agreement positive implementation DPs significantly DPD mutually complementary practical demonstration GEML publicly available java demonstration additional allows engineer detect DP implementation project without expertise ML evolutionary technique graphical DPD phase generation candidate source code analyse extract initial potential DP implementation candidate detection model GP4DPD prune algorithm execute generate detection recovery detection classification strategy chosen software engineer candidate actually implement DP phase detailed firstly generation candidate project potential sample DP extract code artefact relationship  related role mapping procedure assigns role artefact comprise candidate accord relationship adapter code artefact adapter role implement interface declare target adapt service  link code artefact similarly singleton code artefact correspond DP candidate role screenshot configuration panel candidate export future execution file software metric generate detection model conduct confidence threshold user operator apply mining genetic operator selection grammar operator parameter default simplicity advanced user modify simply edit xml configuration file file repository user modify accord organisational requirement additionally detection future illustrate operation project  java library processing handle data heterogeneous data source contains implementation singleton illustrative return GP4DPD positive sample consequent  negative sample consequent  implies implementation singleton  repository non public constructor ensure instance addition dit meaning singleton instance superclass repository java determines public constructor invocation exception valid implementation singleton exception alternative implementation singleton usually cod private constructor invocation static variable however microstructures grammar operator allows detect execution confidence threshold addition operator limited singleton finally recovery classification strategy  apply maxl strategy implementation repository highly coincident actual specification library worth implementation repository gradually adjust database corporate culture future detection threat validity internal threat related aspect experimentation cannot ensure causality obtain stochastic algorithm setup  internal threat therefore independent execution furthermore parameter conduct construction detection model stratify fold validation perform avoid bias due training data another threat internal validity refers setup detection specifically selection prune classification strategy database coverage prune AC literature already apply jointly classification strategy detection performance classification strategy analyse experimentation statistical analysis detection model greatly affected algorithm external validity related generalisation experimental approach validation comparison purpose addition role multiple role played artefact training sample available DPs limit generalisation conclusion similarly DPB mart repository java project implies conclusion directly extrapolate organisational environment nevertheless project non trivial become frequent benchmark within application GEML industrial project adaptation specific requirement program microstructures grammar operator possibility extend collection operator flexibility cfg GEML adaptable organisational conclude remark GEML introduce novel automatic approach detection evolutionary machine knowledge code repository extract GP4DPD association highly readable format knowledge extendable context grammar declare syntax highly flexible adaptable organisational environment application prune classification strategy already associative classification approach detection capability GEML accurate robust prediction extensive experimentation GEML generate quality implementation structural creational behavioural reveals prediction performance remains robust improve related proposal  without adjust individually significantly increase application software engineer adjust parameter analyse detection capability GEML affected training DPs behavioural creational structural analyse ML DPD proposal reveal GEML remains highly competitive DP available reference DPD GEML additional DPs detects implementation although training sample variability rate false positive demonstration programmer analyse java project future incorporate microstructures grammar operator facilitate detection remain DPs addition evolve integrate within exist ide platform eclipse integrate detection capability program maintenance task