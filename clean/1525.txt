microservices emerge architectural style develop distribute application assess performance architecture deployment configuration respect deployment alternative challenge align usage production environment introduce approach operational profile generate load automatically ass scalability pas fail criterion microservice configuration alternative approach domain metric alternative instance apply inform decision selection alternative conduct production monitoring regard performance related anomaly detection evaluate approach extensive bare host environment virtualized environment data carefully evaluate impact increase compute resource performance specifically evaluate domain metric non increase function cpu resource environment subsequent series investigate application approach ass impact security attack performance architecture deployment configuration previous introduction background microservices architectural style approach software application collection loosely couple software component component microservices suppose autonomous automatically independently deployable cohesive architecture lends decentralize deployment continuous integration deployment developer amazon netflix reporting significant microservice architecture currently configuration alternative microservices deployment serverless microservices function amazon lambda container deployment docker virtual machine per host host microservice granularity combination mechanism available architecture alternative parameter imply architecture deployment configuration challenge microservices suppose independent however underlie deployment environment introduce couple impact overall application performance couple load balancer dns lookup hardware software layer microservices report performance degradation microservice architecture equivalent monolithic deployment model author analyze performance degradation microservice deployment alternative due virtualization associate docker propose performance improvement overcome degradation therefore microservice architect focus performance implication architecture deployment alternative addition impact production workload performance specific microservice deployment configuration account alternative microservice architecture deployment memory allocation cpu docker container replica assign microservice goal introduce quantitative approach performance assessment microservice deployment alternative approach automate performance quantitatively ass architecture deployment configuration domain metric introduce performance focus load operational workload situation arrival rate concurrent user methodology propose methodology framework architecture scalability assessment illustrate briefly introduce detailed combine analysis operational profile data performance generate domain metric dashboard dashboard illustrates scalability respect operational profile distribution production empirical distribution workload situation performance load environment operational profile data estimate probability occurrence workload situation production scalability requirement ass architecture deployment configuration quantitative assessment metric ass fitness architecture alternative perform define workload situation image KB image overview methodology framework architecture evaluate apply propose approach compute introduce domain metric twelve configuration memory allocation cpu allocation microservice replica execute data environment identify environment architecture deployment configuration domain metric significant environment increase replica service evaluate cpu allocation guarantee performance assess domain metric additional environment execute basis subsequent investigation domain metric sensitivity concern configure scalability requirement evaluate impact security attack domain metric scenario without security attack contribution contribution methodology scalability assessment quantitative approach framework assessment microservice architecture configuration alternative experimental validation experimental validation propose approach scalability assessment without attack prior approach domain metric evaluation input domain partition strategy domain load partition input domain input domain subset equivalent fault reveal behavior domain load load domain subset equivalent workload situation extension previous propose approach framework implementation relation previous revise presentation previously extend sensitivity analysis scalability assessment scenario moreover additional application assess performance attack propose approach metric contribution comparison previous author signature   affect  metric partition performance signature assessment architecture alternative  framework outline remainder organize contains summary review literature microservice architecture challenge performance assessment contains overview propose approach infrastructure performance assessment microservice architecture experimental report discus experimental obtain apply propose approach conclusion suggestion future research reproducibility package online related summary previous author review literature microservice architecture challenge performance assessment microservice architecture intrusion detection relate review literature contribution previous author overview relationship contribution contribution previous related publication detailed hereinafter extension previous publish european conference software architecture content  introduce quantitative approach domain metric evaluate microservice architecture deployment alternative bare virtual environment  extend previous define methodology assessment microservice deployment alternative refer architecture configuration introduce metric ass software scalability metric requirement definition architecture model measurement ass architecture ability performance requirement function workload increase introduce approach assessment telecommunication markovian approximation approach operational data resource markov definition derive efficient suite basis domain reliability assessment SUT markovian approximation estimate steady probability occurrence suite effectively reduce focus performance likely production usage domain load input domain workload arrival rate concurrent user workload subset related probability occurrence workload situation propose fully automate framework implement approach introduce  approach enables experimental replication context visualization dashboard mobile device conveys previous incorporate security attack mirai virtualized environment UNIBZ operational profile additional cpu memory resource sensitivity analysis performance threshold without attack UNIBZ environment description UNIBZ environment refer microservice architectural challenge comprehensive literature review microservice architectural challenge author focus challenge architecture description quality attribute research microservice architecture quality attribute focus scalability reusability performance agile development maintainability pahl jamshidi systematic survey exist research microservices application environment microservices research immature additional experimental empirical evaluation application microservices environment literature survey identify develop microservices automation address concern methodology scalability assessment integrate automation conduct validate propose methodology performance assessment microservice architecture   address appropriate performance metric activate auto action specifically investigate relative absolute metric propose autoscaling algorithm reduce response factor actual kubernetes horizontal auto algorithm introduce domain metric capture scalability SUT architecture deployment configuration production usage derive operational data analysis therefore metric ability satisfy scalability requirement evaluate workload situation architecture deployment configuration intrusion detection comprehensive survey intrusion detection IDS IDS classify monitor platform host network hybrid attack detection misuse anomaly hybrid deployment architecture non distribute distribute anomaly IDSs baseline profile normal operation developed deviation baseline profile identify intrusion performance signature propose architecture intrusion detection shelf IDSs complement performance signature author performance signature behave security attack identify performance metric cpu memory percentage active thread evaluate impact security intrusion domain metric methodology framework methodology automate assessment architecture deployment configuration configuration domain metric quantifies configuration ability satisfy scalability requirement operational profile define workload situation abstract concept output operational data analysis per application domain specifically concurrent user focus however application domain banking transaction rate complex microservice architecture ass resource saturation service execute demand software hardware resource virtualization load balancer cpu memory network therefore importance propose methodology resides ability ass scalability architecture configuration complex microservice architecture describes approach application infrastructure sake reader summarizes notation approach notation   workload situation  situation probability occurrence frequency occurrence  service  workload situation pas fail threshold  response  deviation  response  deployment configuration  service successful service  metric computation domain metric approach introduce illustrate consists collection operational data data normal usage http request analysis operational data quantitative estimation probability occurrence workload situation concurrent user analysis operational data generation automate generation load architecture deployment configuration evaluation baseline computation quantitative definition scalability requirement quantitative definition scalability requirement consist pas fail criterion load specify threshold response workload execution execution load architecture deployment configuration specify generation computation domain metric illustrate approach report operational profile publicly available information video service described analysis operational data operational profile describes workload situation probability occurrence estimate relative frequency occurrence SUT operational profile identify workload situation representative respect production usage illustrate analyze operational data operational profile frequency occurrence workload situation operational profile output reduce execute workload situation aggregate bin operational profile frequency occurrence bin suite coverage criterion frequency generation define setting load sequence obtain workload situation define bin operational profile SUT load specification consists workload situation load sequence choice architecture deployment configuration baseline requirement defines service pas fail criterion performance metric specific assumption performance metric average response service reference architecture deployment configuration consists perform accord load specification evaluate baseline requirement perform baseline computation quantitative definition scalability requirement approach calculate correctly execute service identify baseline requirement perform accord load specification define deployment configuration resource workload average response standard deviation service baseline workload scalability requirement service define innovative approach definition scalability requirement employ baseline performance automatically identify tolerance scalability degradation load baseline requirement service SUT scalability requirement scalability requirement load specification scalability requirement baseline requirement  illustrates approach service response metric baseline requirement workload situation refer operating response average curve average response service increase workload situation operating service fails service succeed average response exceeds baseline threshold operating whereas service fail operating average response exceeds respectively workload situation occurs maximum tolerate workload situation corresponds maximum tolerate response image KB image scalability illustrate response function workload situation service scalability fails operating refer response service baseline load specific architecture deployment configuration baseline measurement correspond service execution pas fail assessment service load specification workload configuration configuration simplify notation computation workload situation configuration executes service service execution assess successful comparison scalability requirement service marked pas workload configuration denote service otherwise therefore successful execution service evaluate assumes execution service mutually exclusive accurate microservice architecture however applicability approach accurate develop queue network model compute reader refer   detailed review assumption limitation applicability queue network model illustrates pas fail estimation load specification correctly execute service evaluate pas fail scalability requirement workload specification  pas  execution computation domain metric finally domain metric configuration respect suite define workload situation evaluate probability occurrence correspond workload situation domain metric per workload situation quantitative assessment ass performance architecture deployment configuration illustrate evaluate contribution report frequency occurrence workload situation operational profile image KB image plot domain metric per workload situation architecture deployment configuration environment contribution domain metric workload situation load sequence displayed plot plot depicts deployment configuration satisfies fail pas criterion plot workload situation load sequence gap probability outer polygon obtain measurement inner polygon architecture deployment configuration gap impact performance degradation domain metric application perform illustrate validate approach introduce previous concerned comparison load bare environment HPI virtual environment UNIBZ analysis described perform ass sensitivity domain metric respect scalability requirement threshold factor described SUT normal behavior behavior security attack framework architecture detail ecosystem implement propose approach comprises component analysis component operational profile production computes baseline probability workload situation infrastructure generates executes load architecture deployment configuration performance baseline fail pas criterion graphical user interface calculates visualizes performance metric report smartphone user interface UI component series developed integrate gathering operational profile utilize application performance monitoring APM source  initiative commonly utilize series database  monitor operational data package  notebook connects  retrieves raw operational data generates empirical distribution workload situation define script infrastructure load source BenchFlow automate deployment define building container virtualization docker define workload situation configuration  load framework performance automate analysis load specification manually define extract automatically continuity script jupyter notebook  application evaluate performance baseline compute performance generate plot distribution previously obtain domain metric curve compute sensitivity analysis plot react native javascript framework building native mobile apps UI  demo publicly available evaluation approach illustrate compute domain metric ass scalability performance regular behavior attack evaluation considers operational environment specific SUT architecture deployment configuration alternative operational profile apply SUT sock microservices demo environment described execute generate individual baseline per load methodology approach cope explosion methodology cope explosion aggregate workload situation combine workload situation simplify notation concurrent user workload situation architecture deployment configuration focus cpu memory instance microservice namely cart cart mostly microservice generate pas fail architecture deployment configuration constant workload situation identify therefore architecture deployment configuration remainder describes precise detail experimental setting associate reproducibility package SUT utilize sock microservices demo recent version per march built  sample commerce website sock implement microservices cart handle user shopping cart implementation various technology java net node sock representative microservice application regard aspect criterion sock SUT usage microservice architectural automate deployment container deployment option load BenchFlow load BenchFlow source framework automates execute performance BenchFlow reuses integrates technology docker  apache spark BenchFlow reliably executes load automatically performance data computes performance metric statistic BenchFlow validate reliability obtain BenchFlow user define performance intent rely declarative domain specific DSL goal driven load declarative template express requirement goal metric maximum execution parameter execution BenchFlow framework implement strategy driven user input specification addition execution BenchFlow monitor SUT infrastructure deployed load SUT infrastructure containerize deployment bare   institute HPI future soc service orient compute lab enables containerize deployment virtual machine VMware ESXi hypervisor   UNIBZ containerize bare machine HPI characteristic load driver server 2GB ram core thread mhz SUT server 6GB ram core thread mhz machine magnetic disk rpm gbit network infrastructure containerize deployment virtual machine UNIBZ characteristic load driver server 4GB ram core mhz SUT server 8GB ram core mhz SSDs machine EMC VNC series network attach storage gbit network infrastructure rely docker CE deployment containerize application infrastructure definition execution performance rely BenchFlow DSL user specify performance declarative manner define load explore configuration BenchFlow variable automatically explore configuration concurrent user amount ram cpu assign deployed service service configuration environment variable replica service rely BenchFlow DSL define report BenchFlow framework automate execution execution quality verification retrieval environment deployed docker container container implement distinct microservice container docker execute daemon hypervisor depicts deployment HPI docker swarm docker manager node docker worker node docker container container execute microservice component HPI deployment docker swarm deployed bare machine deployment UNIBZ however UNIBZ deployment additional virtualization layer bare server  ESXi virtual machine exactly configuration HPI image KB image overview infrastructure operational profile workload situation operational profile production video application wikipedia operational profile built frequency occurrence workload situation specify concurrent user derive operational profile maximum workload intensity maximum user image KB image operational profile workload situation maximum perform video application operational profile replicate wikipedia operational profile operational profile generation workload situation BenchFlow computation domain metric synthetic user behavior focus behavior individual user generate representative workload target evaluate performance therefore model synthetic user behavior replayed user approach user likely sock operational environment model model behavior user respective relative frequency maximum deviation define frequency distribution visitor catalog detail buyer catalog detail cart cart creates visitor summary request sock occurrence per user define workload intensity function ramp min steady execution ensure steady execution performance data negative exponential execute request minimum maximum respectively deviation define summary request occurrence user visitor buyer visitor actual overall workload relative frequency  index  login     catalogue  catalogue catalogue category   catalogue  catalogue sort tag  detail html tag      basket basket       customer   customer     architecture deployment configuration deployed SUT architecture deployment configuration specify generation methodology introduce parameter varied deployment configuration amount available ram cpu replica cart service target cart service request issue workload described target cart service configuration explore report ram configuration GB GB cpu replica remain resource server deployed SUT service sock application manage docker avoid container execution memory disabled behavior docker replicate architecture configuration increase memory GB execute configuration baseline requirement ass impact workload situation architecture deployment configuration response define baseline response define evaluate service experienced response baseline define baseline requirement workload situation concurrent user memory resource allocate normal workload architecture deployment configuration GB memory cpu replica cart service discus choice baseline requirement perform sensitivity analysis rely operational data identify aggregate workload situation load specification described addition service sock configure SUT concurrent user multiple service access instance service user insert item shopping cart proceed checkout confirm request issue workload situation target cart microservice attack attack report conduct UNIBZ lab environment described modify version mirai malware mirai botnet DDoS attack attack harness insecure iot internet device author analysis mirai timeline security intrusion review mirai mutation alert risk botnets compromise iot device mirai compose component command  server admin interface perform attack available bot parse format command command appropriate bot bot perform actual attack infect device infect device bot performs brute scan IP address IP address performs scan bot successfully IP address authenticate frequently credential admin admin admin bot authenticate enable access report  server discover bot IP address authentication credential bot perform attack protocol performs denial service attack transport protocol udp tcp flood target device packet malformed packet attack http http request cooky random data connection valid response return bot continually flood target device http request goal render target device  consume excessive amount resource router server intrusion prevention intrusion detection device publicly available mirai source code extract bot conduct mirai attack target configurable remove scanner device infect attack load without attack parallel min mirai bot parameter duration attack attack min attack min protocol http IP address attack IP address SUT machine sock instal thread attack conduct load driver server machine configure GB ram core mhz SUT server machine mbit network attack remain min min attack without attack analyze discus sock video operational profile infrastructure described evaluates domain metric attack sock virtual environment domain metric bare virtual environment domain metric compute architecture deployment alternative define workload situation environment HPI UNIBZ domain metric investigate architecture deployment configuration outer plot theoretical maximum probability operational profile described theoretical maximum pas corresponds frequency operational profile workload situation domain metric compute investigate architecture deployment configuration none analyze architecture deployment theoretical maximum scalability assessment failure identify image KB image domain metric per workload situation environment HPI UNIBZ operational profile video application configuration probability configuration violet configuration load HPI environment configuration GB ram cpu cart replica exhibit scalability assessment failure concurrent user however concurrent user increase significant decrease domain metric violet domain metric achieve configuration GB ram cpu cart replica addition cart replica performance degradation assess domain metric illustrate contrast domain metric achieve configuration GB ram cpu cart replica significant implication assessment architecture deployment alternative additional replica memory cpu configuration decrease application performance HPI environment UNIBZ significant performance degradation assess domain metric HPI addition within narrow domain metric overlap scalability assessment failure concurrent user increase concurrent user domain metric decrease rate architecture deployment configuration configuration GB ram cpu cart replica domain metric achieve domain metric employ architecture deployment configuration GB ram cpu cart replica discussion deployment configuration systematic application engineering approach quantitative performance assessment cpu increase docker container replica performance improvement bare environment HPI virtual environment UNIBZ domain metric oscillates narrow beyond GB ram cpu cart replica performance user difference domain metric assessment HPI UNIBZ environment architecture deployment configuration additional architecture factor VMware hypervisor overhead bandwidth impact performance finding recommendation practitioner benefit application methodology propose evaluate operational profile deployment alternative context moreover finding bottleneck analysis careful performance engineering activity execute additional resource architecture deployment configuration performance attack evaluate performance degradation SUT attack execute security intrusion parallel normal workload compute domain metric setup attack launch mirai botnet BenchFlow mirai SUT execute server domain metric compute deployment configuration attack attack attack security attack influence performance therefore impact domain metric prominent attack min attack attack domain metric assess  configuration attack attack domain metric varied broader domain metric assessment attack deployment configuration GB ram cpu replica domain metric assess  domain metric per configuration without attack duration configuration respect domain metric highlight configuration domain metric   duration  attack GB GB GB GB GB GB GB GB GB GB discussion obtain developer sophisticated algorithm intrusion detection performance impact attack customer affect metric response approach detect intrusion specifically mission critical performance metric  tracked detect deviation performance baseline implement performance analysis variation increase resource assessment domain metric virtual environment limited resource variability respect architecture deployment configuration evaluate understand environment influence perform increase environmental resource configuration VMware ESXi virtual machine SUT CPUs core GB ram variation perform within environment increase memory replicate configuration increase memory GB respectively memory impact scalability assessment domain metric improve nonetheless variation domain metric configuration attack obtain security attack facilitate analysis impact domain metric additional resource environment security attack min performance degradation SUT reflect domain metric domain metric obtain architecture deployment configuration domain metric obtain architecture deployment configuration load impact security attack operational profile ass impact operational profile propose methodology analysis operational profile analysis replicate operational profile extract wikimedia dump access wikipedia july load extract database illustrate scalability assessment obtain operational profile performance impact security attack architecture deployment configuration theoretical domain metric maximum workload situation concurrent user without attack sensitivity analysis discus choice baseline threshold described perform sensitivity analysis threshold vector factor threshold threshold domain metric service principle fail vice versa threshold domain metric service fail latter increase domain metric threshold goodness choice threshold analysis perform without attack resource summarizes finding illustrate sensitivity analysis architecture deployment configuration achieves domain metric load overall architecture deployment configuration achieves domain metric sensitivity analysis configuration normal behaviour attack resource operation profile video application     attack attack resource image KB image domain metric configuration per workload situation configuration GB memory video profile image KB image domain metric configuration per workload situation without mirai attack video profile image KB image domain metric configuration per workload situation without mirai attack wikipedia image MB image sensitivity analysis configuration load polygon illustrate plot image MB image sensitivity analysis configuration polygon illustrate plot illustrates analysis configuration achieve domain metric load corresponds plot domain metric workload situation plot report correspond threshold axis domain metric threshold axis dash horizontal operational profile workload situation whereas dash vertical indicates threshold legend plot report workload situation load domain metric maximum within interval gap percentage maximum theoretical maximum horizontal dash obtain operational profile polygon illustrate domain metric workload situation threshold configuration achieve domain metric SUT normal behavior plot theoretical maximum obtain operational profile within workload situation load concurrent user workload situation load increase gap domain metric theoretical maximum threshold domain metric increase workload situation however unique factor within chosen adopt workload situation addition increment threshold domain metric constant indicates increase threshold fail service domain metric majority load report sensitivity analysis overall architecture deployment configuration achieve domain metric illustrate similarly unique factor within chosen adopt workload situation increment threshold domain metric constant illustrates sensitivity analysis experimental attack without attack additional resource configuration achieve domain metric maximum workload situation theoretical maximum obtain operational profile achieve within interval optimum regardless attack resource SUT theoretical maximum load threshold discussion analyze sensitivity domain metric scalability threshold introduce specifically interested assess threshold sensitive correctly pas fail criterion scalability assessment load concurrent user employ threshold sufficient achieve probability assign load depicts architecture deployment configuration achieve domain metric workload situation polygon therefore load domain metric scalability sensitive threshold scalable load contrast load scalability metric sensitive threshold multiplication factor degradation performance load load factor achieve probability operational profile associate concurrent user increase load threshold scalability factor mirai attack resource illustrates sensitivity analysis configuration polygon plot distinction workload situation concurrent user concurrent user workload situation concurrent user threshold threshold achieve optimal domain metric therefore conclude threshold baseline propose adequate detect scalability degradation sensitivity domain metric threshold related scalability issue load discussion summary analysis summarize obtain analysis replication infrastructure cpu increase docker container replica bare infrastructure performance improvement limited resource allocate virtual infrastructure constraint performance within narrow performance user difference performance assessment bare virtual infrastructure additional architecture factor impact performance VMware hypervisor overhead bandwidth etc limit measurement methodology importance execute detailed performance analysis docker container improves performance service regardless presence duration attack replica simplify traceability attack additional resource infrastructure reduces replica scalability assessment detection security breach propose quantitative approach consistently report finding operational profile resource allocate demonstrate customer affect metric response detect intrusion constitutes efficient privacy friendly metric intrinsically publicly available finally conclude baseline threshold compute statistical distance average behavior user access relatively amount resource interaction SUT adequate detect scalability degradation threat validity introduce methodology framework scalability assessment microservice architecture configuration leverage operational profile load illustrate identify threat validity operational profile data analysis domain metric introduce relies careful analysis production usage operational profile data organization access accurate operational profile data impact accuracy domain metric assessment approach overcome lack accurate operational profile data related proxy SUT conduct user survey analyze data previous version SUT opt option perform SUT operational profile video application choice bound specific operational profile replicate analysis wikipedia operational profile choice generation generation estimation performance probability occurrence operational profile data operational profile data granularity coarse threat accuracy estimate operational profile distribution approach overcome coarse granularity operational profile data perform computation operational profile data analytic simulation model develop heuristic markovian approximation data derive operational profile enrich granularity operational distribution baseline computation approach quantitative definition scalability requirement propose consist define pas fail criterion scalability specify percentile response approach assume baseline performance microservice validate however approach scalability requirement microservices baseline performance already exhibit significant performance degradation validate choice perform sensitivity analysis threshold execution propose approach automate execution analysis load assess continuous improvement declarative approach automate deployment extent built framework  easily deployed redistribute production environment reproducibility package publicly available domain metric calculation implicit assumption calculation domain metric service occurs rate compute application access assumption heuristic compute practical microservice architecture however activation microservices mutually exclusive application queue network model approach computation microservices activation rate overall input rate transition probability microservices conclusion introduce approach quantitative assessment microservice architecture deployment configuration alternative approach consists operational profile data analysis generation baseline requirement computation execution domain metric compute microservice alternative specify architecture deployment configuration metric reflect ability deployed configuration performance requirement production usage load apply approach deployment configuration bare environment virtualized environment approach advantage automate deployment docker container load automation approach contributes automatically derive baseline performance requirement baseline assess pas fail criterion load baseline computation requirement addition fully automatize approach framework  deployed production environment auto environment careful performance engineering activity execute additional resource architecture deployment configuration bottleneck resource downstream additional resource increase workload bottleneck resource significant performance degradation model capture performance degradation related intrusion approach propose stable variation experimental setting reference operational profile baseline threshold detect service failure