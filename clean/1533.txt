context startup aim business develop innovative limited financial resource development software startup context opportunistic agility driven tolerance technical debt context hardware startup understand hardware startup activity objective aim identify startup achieve quality maintain focus agility conduct exploratory hardware startup data semi structure interview analysis documentation propose integrative model agility quality hardware startup agility hardware startup complex achieve adoption pace development alone hardware startup quality driven approach development core component frequent user debt management hardware startup lack mindset strategy achieve quality stage conclusion hardware startup attention hardware quality evolutionary prototyping future research focus define quality driven contribute agility strategy mindset quality hardware startup context previous keywords startup hardware startup software engineering development empirical research introduction startup newly technology important source technology innovation significant impact digital transformation despite successful startup fail primarily due destruction competition without previous operational startup establish role connection external stakeholder startup develop tech besides personal trait startup founder financial factor development factor characterize development startup   wang  shah   conboy   edison  sanchez  gorschek      morgan          wang         gorschek     gorschek  instance software research achieve effective minimum viable manage technical debt startup context obstacle gradually become aware entrepreneur startup context unique challenge traditional development innovation   wang  shah   conboy   edison  sanchez  gorschek      morgan        nguyen duc shah  startup ecosystem relatively explore research hardware startup startup develop service proposition integral software hardware component hardware physical tangible sensor gateway connectivity component wearable device mobile phone software code intangible operating server script database algorithm typical hardware hardware implement transmit data software coordinate operation hardware data barrier hardware advanced development hardware technology rapid prototyping decrease component batch manufacturing  platform renew hardware startup hardware startup additional complexity software startup handle development integration hardware hardware usually secure focus ensure quality attribute deliver moreover quality relies quality integrate component software hardware module software startup focus agility remain priority quality assurance hardware related development knowledge development embed establish relevant  smallness startup investigation adaption exist methodology suitable startup context software startup pace development ability handle uncertainty react business development introduce flexibility concept agility hardware startup pure software development hardware development typically involves development cycle depends vendor relationship agility quality critical circumstance instance startup deliver quality driven norwegian startup  medical develops glucose smartwatch glucose without penetrate quality driven developed pressure promise launch recent survey systematic adoption development methodology hardware startup seek understand hardware startup investigate role engineering activity conceptualization launch investigate factor influence agility quality explore commonality challenge mention literature regard hardware development scarce aim explore agility quality manage motivate research RQ hardware startup achieve agility quality development qualitative survey investigate stage european hardware startup contributes startup engineering research focus hardware intensive development research empirical evidence agility hardware startup quality aware context restrict resource foundation researcher practitioner explore hardware startup engineering nascent stage remainder proceeds introduces background relevant theoretical framework research undertaken potential threat validity report transcribed citation participant discus relation research concludes research propose direction future background context tech startup startup define differently across various principle  sutton    wang  shah   conboy   edison  sanchez  gorschek      morgan         recurrent theme startup tech startup characteristic organization focus creation software intensive operating aim aggressively business highly scalable context startup understood organizational generally involve role coordination stranger scenario quality performance highlight correctly foresee opportunity address adapt modify approach reveal startup fail achieve execution stage startup increase curve foster establishment survival determinant successful procedure software development startup startup generally develop potential target without necessarily customer increasingly technology become available player hence benefit technology driven innovation decrease prioritize customer driven development involves identify unknown customer meeting relates driven software development requirement tend software rarely document validate release meeting customer failure release exist entrepreneurial theory framework practitioner pursuit business growth  theory discovery creation customer development approach introduce blank lean startup research software engineering depicts startup prefer prioritize quality neglect traditional activity formal project management documentation shortcut quality infrastructure inhibit validate context customize development manage challenge customer development inadequate software engineering significant factor failure rate software startup entrepreneur aware significance built startup reluctant introduce agile hoc startup emphasize importance building stage software startup challenge experienced implement rigorous agile methodology benefit agility development agility concept multi facet refers ability organization project react agility define capability react adapt unexpected within dynamic environment constantly quickly advantage software development agile proven powerful goal successful profitable business model quickly address customer agile proven effective traditional ceremony birth agile manifesto principle agile methodology become popular software replace traditional rigid software development decade agile software engineering extensive research enormous amount literature exist introduction adoption agile variance organizational setting unified contradictory finding benefit report customer collaboration handle defect program ahead management focus engineer estimation recur theme agile development factor dynamic coordination customer involvement etc influence agile development research report combine agile development software engineering paradigm distribute development user combination development focus upfront investment planning agile highlight rapid frequent attention challenge investigate fusion agile rigid release planning application driven approach automate acceptance research suggests agile suitable software startup iterative development approach adaptive adoption formal agile startup limited due excessive amount uncertainty pressure startup tailor version agile development combination agile methodology engineering embed development research development hardware startup rare exploration limited develop hardware relevant report literature embed engineering concern application specific compute device consist hardware software component knowledge development hardware related establish rarely transfer hardware startup development startup context unique embed domain hardware strict requirement software development hardware intensive simultaneous development hardware component hardware related software software allows frequent update release architecture seek hardware software largely independent release illustrate hardware related software development distinct constant communication interconnect verification image KB image hardware software characteristic hardware related software development requirement experimental documentation requirement requirement data throughput rate cycle function latency software requirement operation risk hardware simulation precise operation hardware without expensive prototype enable hardware software operation hardware orient software development experimental developer understand uncertainty related hardware software affect requirement cannot decision cannot software developer utilize iterative development approach ambiguity hardware related software development communication hardware software developer implement hardware software interface efficiently information explicit relies heavily documentation minimize information loss iteration however due vast amount experimental documentation feasible stage development essential activity due reliability device autonomy requirement regression ensure parallel development drift addition independent software hardware interaction hardware software verification important ensure intend recent advancement hardware technology agile embed domain although agile positive impact decrease development reduce error rate development agile embed domain widespread coherent understand agile methodology embed development startup context reduce effort phase development requirement management architecture research methodology software startup engineering research extent concerned investigate development operation maintenance software hardware startup interpret evidence research devise qualitative approach goal qualitative research investigate understand phenomenon within context dependent depth knowledge qualitative research narrow focus broader scope qualitative survey overall goal characterize status adopt agility quality driven population hardware startup qualitative survey suitable limited capacity capture insight data robson classify research purpose exploratory understand seek insight descriptive portray situation phenomenon explanatory seek explanation situation mostly causal relationship improve improve aspect phenomenon non deterministic development startup context context development highly influence financial situation entrepreneurial approach exploratory research  investigate multiple startup klein myers differentiate research perspective  critical interpretive  evidence hypothesis inference sample critical identify social critique interpretive attempt understand phenomenon participant interpretation context research investigate phenomenon integrates factor engineering concept hence adopt interpretive data semi structure interview analysis individual artifact project chose project suitable analysis concern development activity expectation interaction contextual environment focus interview startup project launch core illustrates research image KB image research selection research relies theoretical sample purposive non probabilistic sample typically observation sufficient inclusion cod researcher identify participant instance ceo CTO engineer access important information appropriate participant chose criterion runeson höst startup relevant inclusion met criterion startup member development individual activity startup active relevant startup develops service hardware software startup prototype engineering relevant sample survey comprise hardware diverse selection application domain characteristic although systematically sample distribution relevant startup eligible participation knowledge software hardware development candidate met criterion regard qualify contribute research via professional network author identify potential source contact incubator program technology park channel relevant startup innovation  ntnu accel  author professional network   hub overview communication channel researcher contact startup startup channel  innovation  campus  various stage tech startup mainly innovative ntnu ntnu accel  accel uni accelerator promising startup  incubator accel various hardware startup   professional  spanish dutch   manage  park incubator  startup    hub community platform overview norwegian  startup via platform startup assistance recruitment connection investor hub interviewee description  startup   startup  startup   startup hardware  startup  startup software  startup  startup   startup  startup software   startup   startup  startup software   startup originate  entrepreneur spin investigate startup founder varied industrial regard entrepreneurial startup startup startup experienced failure regard background interviewee majority technical background relevant develop data collection procedure chosen data collection interview identify efficient research explorative semi structure approach enable discovery unforeseen information interviewee express freely constraint project availability startup questionnaire data collection stage agility agile methodology agile lean startup methodology implement external dependency influence development balance hardware software development manage documentation quality quality assurance manage quality refactor codebase extent reuse component earlier prototype perform hardware software closing differently development remark researcher contact hence data collection regard data collection technique data collection significant effort researcher data ensure pre define interview sufficiently explore direction author attend interview avoid interpretation respondent perspective insight topic qualitative data precise interview participant business background website relevant incubator accelerator website additionally participant questionnaire prior interview information appendix efficient interview author possess knowledge interviewee formality initial analysis holistic understand evidence conclusion drawn interview interview min investigate insight development managerial overhead stage adapt apply systematic mapping stage startup interview startup stage refers conception sale stabilization phase customer receives growth phase deliver customer without disturb development startup description   employee startup smart  startup   startup physical  startup unmanned aircraft  startup advanced  startup    startup  management  startup cable cam  startup digital   startup collaborative  startup interactive  startup 3D printer  startup sensor  analysis procedure apply thematic synthesis code theory model qualitative research objective thematic synthesis research model theme development strategy hardware startup focus aspect unique software startup illustrate image KB image thematic synthesis initial reading analysis transcribed interview generate initial identify data interview transcribed shortly conduct ensure actual meaning interviewee author interview central concept relevant hardware startup cod generate initial code author apply descriptive cod technique identify concept category finding systematic across data descriptive cod organize data category towards creation theme cod integrate approach avoid cod data context identify text apply iterative cod simultaneous data collection analysis cod code reference interview iteration involve cod data interview code generate reference code examine author lesson evaluation implement interview generate relevant code iteration classify text code iteration generate code inductive manner code theme theme initial code meaningful unstructured code related code category concept interview transcript analyze separately ensure theme associate context model theme generate theme explore interpret model theme appendix theme prototyping development quality assurance enable factor addition identify startup context theme thematic extract address management agility quality validity procedure qualitative research validity address enable replication research ensure finding trustworthy ensure validity validity guideline runeson höst construct validity ensures operational really researcher investigate accord research assure interview suitable research define interview approach goal metric interviewee  engineer insight business technical related aspect understand startup dimension within span min data startup incubator website prior interview improve reliability participate startup description ensure conformance reality external validity refers extent finding generalizable beyond context qualitative intention enable analytical generalization extend characteristic startup mostly norway mainly consist stage entrepreneurial mostly fund acquire competence hence rely finding startup characteristic stage european startup startup american startup already growth stage feature reliability refers extent data analysis dependent specific researcher define validate interview protocol colleague decrease risk bias interpretation author attend interview interview norwegian hence transcript verbatim preserve actual meaning respondent recording transcribed shortly interview mitigate bias additionally finding related literature examine similarity contrast explanation comparison proven enhance internal validity quality finding hardware startup achieve agility quality development integrative agility quality hardware startup development integrative model agility quality hardware startup grouped concept accord dimension agility driven quality driven project activity prototype development quality assurance concept describes foundation hardware startup manage agility quality classify emerge concept category mindset belief opinion towards topic pink actual application belief specific task strategy achieve goal image KB image integrative quality agility integrative model agility quality hardware startup focus quadrant vertical axis activity prototyping development quality assurance horizontal axis agility quality integrative overview agility quality manage development quality assurance activity model enable factor apply quality agility concept model hardware startup achieve agility mindset strategy prototyping development phase hardware startup development quality assurance phase gain quality however becomes hardware startup lack strategy mindset achieve quality prototyping development phase model illustrates lack quality assurance phase vital agility hardware startup none quality driven activity adopt hardware startup contribute agility impedes adoption focus quality hardware startup commonality hardware startup perform approach customize iterative sufficient competence collaborative technical decision mindset strategy startup perform agility quality driven development sub detailed insight related enable factor agility quality aspect prototyping development quality assurance activity enable factor achieve agility quality   customize iterative  define version agile sprint customer potential user feedback tailor agile backlog sprint review  competence vendor  sufficient competence  software hardware engineer perform implementation  professional network recruitment  collaborative technical decision  harmony hardware software integration structure decision regard implementation  competence leadership coordination communication  achieve agility hardware startup   partial laboratory  fidelity prototype service software hardware prototyped  hardware funding available  adoption  commercial shelf source component  component driven expert  optimize manufacturing logistic  risk maintain flexibility development achieve  competence communication risk  combine documentation agile  document task sprint   accept technical debt intrinsic  amount technical debt  competence traceability  outsource manual  none important manual task  quality outsource partner task definition  quality aspect hardware startup   quality driven prototyping core  driven prototyping focus non functional  capability within  towards frequent user  verify customer thorough  task  partly automate  member individually  competence  simulation aid component  predict behaviour physical   regulation standard quality  regulation standard infer strict development  outsource partner available  enable factor achieve agility quality customize iterative hardware hardware orient development involve experimental developer encourage iterative development approach startup simplistic version scrum hoc agile startup define agile development startup identify implement specific development development stage tech introduction formal communication inhibit agility freedom startup development consist almost absent communication easy implement specific agile lean agile applicable hardware development cannot frequently involves hardware variance task interrelate dependency complex scrum jira strict scrum probably easy implement pure software development simplify version due offering financial managerial factor agile implement differently hardware startup sprint duration usually goal define weekly meeting development physical usually longer implementation software startup focus define measurable sub goal startup sprint respective hardware software development however startup differentiate hardware software sprint handle contingency hardware software development weekly basis define goal goal achieve semester software development sprint hardware sprint sufficient competence although contract approach startup mention internal development achieve agility hardware startup member dedicate aspect development hardware startup factor besides software demand expertise member member hardware startup preferably knowledge application domain systematic development software hardware development mechanical engineering particularly achieve collaboration software engineer hardware engineer accelerate prototyping however startup startup challenge achieve competence talented startup cannot salary attract future external resource substitute competence sustainable startup member typically task orient founder reduce agility production due availability commitment issue collaborative technical decision hardware startup technology driven iterate typically structure probably due startup member stage member motivate voluntary task responsibility startup lack governance mechanism legal strict regulation typically technical decision engineer decision basis startup flexibility everyone responsible requirement responsibility member probably multiple role overall member trust competence flexible organize reorganize member collaborate vendor react environment agility aspect hardware startup partial laboratory prototyping almost startup immediately built physical prototype elicit requirement achieve rapid business experimentation usually evolutionary approach perform incremental improvement resolution prototype rapid prototyping important obtain customer feedback however problematic hardware context hardware startup usually significant focus non functional requirement challenge regulation associate complex development hardware ecosystem investigate startup priority modularity software hardware achieve frequent user physical prototype immediately shortcut quality develop resolution prototype equipment quality prototype supplier inability quickly develop prototype startup flexible software software frequently update customer focus develop interface hardware software directly access hardware achieve parallel independent development hardware software mainly reuse software hardware component easy reuse refine prototype developed interface hardware software development individually outsource software development software weekly hardware okay prefer software firmware facilitate clearly define interface software hardware adoption component investigate startup extensive reuse software hardware hardware mechanical component easy reuse refine prototype resolution prototype startup mock throwaway prototype prototyping stage hardware startup reuse prototype code module replace hardware component specific code reuse electronics harder physical component usually substitute prototype software easily reusable access prototyping equipment important asset reduce development prototyping 3D printer startup prototyping rapid customer feedback enables faster 3D printer advantage literally almost everything apart electronics production almost 3D printing without access useful equipment prototyping expensive optimize manufacturing logistic consume hardware prototyping production shipping production usually china southeast asia delivery vendor schedule shipping investigate startup spent significant amount production shipping manufacture component prototype mostly china delivery delivery shorter startup experienced quality issue external partner manufacturing defect crucial prototype component extra delay critical valuable already spent component cooperate professional actor decrease risk quality issue enhance communication outsource production mechanical circuit component manufacturer significant defect tech prototyping demand startup finalize release implies vendor dependability importance component certainty available entire prototyping stage crucial version screen production important component fix achieve quality priority startup however vendor dependency hardware startup hardware development focus quality shortcut hardware assure sufficient quality specification production costly initial finding hardware startup focus ensure quality core hardware component inhibit progress finding hardware startup effort ensure quality hardware component inhibit evolution prototype spent component addition redesign pressure financial resource production batch startup commitment professional manufacturer vendor component quality affordable advantage geographical distance difference culture challenge communication effective communication important service paid maintain development grown supplier quality prototype faster building network earlier startup previously chose cheapest supplier component communication usually combine documentation agile software perception developer code documentation activity additional overhead tacit knowledge hardware startup documentation development focus software development daily understand code tech sub technology complexity increase implies documentation component attention hardware startup lack quality documentation development instead update documentation quality eventually extra prototyping stage hardware development significantly longer software development hardware startup function probability quit project increase focus documentation hardware startup knowledge accompanies quit sometimes becomes challenge knowledge quit knowledge accompanies extra effort choice outsource greatly impact amount documentation partner usually document component manage technical debt user manual consultant developed hardware startup perform documentation exist multiple lower barrier documentation wikis google spreadsheet confluence utilize decrease amount rework thorough documentation efficient integration employee development previously spent extra due lack documentation instead without perform documentation eventually extra wiki internal documentation effort something accept technical debt intrinsic attribute technical debt illustrate developer sometimes accept compromise dimension modularity urgent demand dimension deadline compromise incur debt paid principal repaid health project balance goal quality therefore important minimize waste manage technical debt accept important quality hardware startup incur intentional technical debt business experimentation feature perform iterative cycle minimal effort quality customer feedback correspond software startup technical debt mainly manifest software hardware startup software quickly shortcut workarounds easily software hardware development prioritizes implement functionality improve quality codebase software away shortcut fix later building technical debt purpose customer quickly hardware startup accumulate technical debt hardware component similarly software component concept technical debt built erosion frequent quality easily manifest hardware component refactoring deliver release hardware rarely perform endeavour however hardware eventually hardware redesign hardware component reuse resolution prototype imply hardware redesign earlier iteration intend lifetime decision propagate throughout lifetime eventually become poorly decision discover release hence temporary quality hardware software eventually accumulation technical debt hardware startup outsource manual outsource choice local consultant  contract vendor hardware development significant amount ensure quality applies already prototype stage demonstration outsource manual release execution environment integration developed component service outsource manual effort startup focus innovation core creation activity software focus software modify automatic ensure everything hardware function climate perform various mechanical outsource manual quality aspect hardware startup quality driven prototyping core component central hardware startup quality hardware development important associate mistake production quality greatly affect perceive functionality contrast software challenge implement improvement quality assemble consequence focus non functional attribute prototyping stage essential startup implement driven approach develop core component prototype setup ensure subsystem intend allows analyze metric data critical component feature usually define detailed advance development towards frequent user achieve development stage activity generally focus hardware startup feature guaranteed important verify feature customer spent activity minimize evident software startup developer avoid waste improvement validate functionality prefer development replace spending ceo highlight importance frequent feedback customer user prototype critical development later sought startup challenge realistic environment legal restriction related privacy public safety simulation dummy data alternative foundation robust challenge develop drone easy perform specific knowledge lack financial resource delivery challenge broader spectrum customer physical prototype resource intensive develop contrast pure software cannot necessarily deliver digital software update customer investigate startup rely customer frequent feedback partly automate hardware startup rely individual developer feature implement responsible code responsible quality function frequently activity startup manual smoke ensure functionality undertaking formal procedure prototype manually internal employee identify prominent defect prototype adopter customer subsystem structure responsible delivery responsible feature inside startup pilot customer software engineer tends optimize integration operation software component adopt automate report simulation aid component hardware development simulation helpful ensure quality attribute physical hardware simulation precise operation hardware without expensive prototype enable hardware software operation startup challenge realistic environment due memory performance constraint privacy public safety issue planning startup context hence neglect simulation code production postpone split hardware software functionality stage fail project addition perform simulation tune attitude avoid mathematical error investigate startup startup later lifecycle stage implement systematic activity customer quality activity become important establish customer stricter demand pilot customer increase quality requirement startup implement formal regulation quality assurance startup regulate domain healthcare automotive regulation standard infer strict guideline development quality assurance activity prototyping phase besides operating document standard quality hence greatly affect severity technical debt infers debt management weak document management hoc introduce document management iso standard requirement approve medical documentation development iso certification certify accord quality strict requirement documentation documentation documentation discussion achieve agility hardware related development agility essential startup attribute stage hardware startup hardware startup sacrifice quality instead apply engineering principle development prefer achieve rapid business growth related activity accumulation technical debt eventually inhibit business growth achieve agility hardware startup straightforward adopt agile rapid prototyping software startup evident iterative development planning hardware startup hardware development usually software development non functional attribute assure prototyping stage hardware startup dependency release frequency software startup limited ability continuous experimentation software startup investigate hardware startup achieve agility facilitate simultaneous multiple implementation outsource component significant struggle hardware startup rarely develop component architectural decision advance development greatly affect later integration component development hardware startup feasibility development facilitate experimentation multiple achieve agility efficient management external dependency increase knowledge external component develop reliable relationship external partner startup reduce waste fix issue startup hardware development embed sensitive rapid hardware hardware related software preliminary architecture facilitate iterative development flexibility handle rapid hardware startup intentionally software neglect bug easily detect investment robust facilitate streamline development later stage ensure conformance hardware hardware related software however driven approach problematic severe memory performance constraint embed addition restrict resource hardware startup achieve development stage activity generally focus hardware startup startup foremost interested ensure feature customer refactoring basically orient variant restructuring orient software alter external behaviour code improves internal structure research indicates regular refactoring hardware startup neither software hardware development prototyping consists shortcut workarounds software component hardware development compatible regular refactoring frequently redesign component involves significant relates software startup research refactoring rarely implement stage startup startup grows return accumulate technical debt quality demand customer scalability issue mention extend agile embed development hardware related embed hardware wearable device internet robotics environmental particularly relevant limited resource driven requirement temporary exploratory management assure quality complexity uniqueness hardware development imply hardware startup prioritize quality differently software startup development investigate startup facilitate software amount hardware rework minimum due rigid hardware development hardware quality performance requirement embed enable hardware software operation intricate due complex hardware cycle simultaneous software hardware hardware startup invest interface combine skilled increase amount parallel development facilitate largely independent development hardware software rapid flexible software hardware startup incur intentional technical debt software developer constantly code rely tacit knowledge instead formal documentation hardware documentation importance due stakeholder involve hardware development intentional technical debt frequent software startup harmful hardware startup due sensitivity numerous complex hardware software interaction refactoring code behaviour jeopardize operation software shortcut finding complex tech severe amount rework hardware startup invest documentation barrier formal documentation adoption agile proven efficient reduce error rate however usage restrict subset agile customize individual hardware startup investigate hardware startup incur unintentional technical debt due difficulty perform usability acceptance pilot customer lack financial resource dependency delivery challenge broader spectre customer immediately building physical prototype startup focus validate focus customer acquisition efficient demand functional hardware startup inability prototype inhibit business experimentation feature creep feature creep hardware startup similarly software startup harmful production maintenance core functionality central embed development hardware startup assure non functional attribute stage implement various extent hardware startup environment development environment memory performance constraint affect hardware startup ability investigate startup rely individual developer effort ensure quality functionality manual smoke simulation professional engineering activity finding rigorous implement later cycle stage investigate startup quality driven development approach performance quality criterion core component verify frequent user beyond functional software development specific hardware hardware software integration interface apply quality driven environment report balance agility quality tech development conflict requirement quality agility development hybrid balance strict hardware development flexibility software development extend knowledge integrative approach agility quality hardware development tactic achieve agility outsource rapid prototyping sprint development related commonly startup however hardware startup overall strategy quality assure activity previous report agile influence software quality teamwork engineering documentation management startup illustrate implementation quality aware development focus frequent user customer feedback collaborative decision adoption documentation model engineering limited resource alternative ensure quality stage realistic environment restrict stage fail fail cheap computer simulation validation documentation component usually responsibility developer easy documentation sufficient approach agile documentation startup disrupt informal workflow important useful documentation spare later effort startup context hardware software communicate effective manner hardware software integration meeting important agility quality development decision startup manage interface hardware software necessity allows distribute development simultaneously multiple technology exist research address combination agility quality requirement engineering architecture implementation comprehensive adopt agility quality aware across development activity startup extent familiar agile concept however applicability hardware startup context perception although quality aware agile useful lack establish actual usage hardware startup specific quality aware manage technical debt attain quality stage development conclusion hardware startup develop physical mixed hardware software component expertise within technological addition software development hardware startup production logistics issue factor imply initial financial investment experienced software startup qualitative exploratory investigate hardware startup role engineering activity conceptualization launch factor influence agility quality research hardware startup achieve rapid prototyping evolutionary approach hardware software decomposition strategy opportunistic agile agility prototyping production varies competence funding various external constraint hardware startup incur technical debt unavoidable evolution informal partial quality assurance approach reduce overall technical debt competitive environment hardware startup inevitable invest hardware quality explains priority hardware startup engineering approach specific manage relationship quality practitioner understand awareness context technical business related decision sustainable evident quality agility balance quality aware agile effective management vendor empirical evidence prototyping engineering hardware startup however highlight compromise hardware startup quality quality significance research identify valuable activity approach hardware startup restrict resource encourage researcher explore technical debt sample stage hardware startup addition future research investigate hardware startup ensure safety security standard develop highly standard IEC partly managerial viewpoint hence important link everyday activity perform engineer developer future verify startup applicability environment enable generalization startup audience investigation undertaken understand role scope engineering activity hardware startup integrative model agility quality implies focus mindset strategy development activity future research focus define quality driven contribute agility simplify introduction quality startup hardware startup attention hardware quality evolutionary prototyping engineering strategy hardware startup manage relationship restrict resource increase quality demand future research focus strategy mindset quality startup context hardware startup specific guideline perform research verify consequence absence identify limitation qualitative implication bias mitigate risk misunderstanding interpretation researcher attend interview whenever interview perform site recording transcribed translate shortly interview ensure respondent meaning preserve another limitation insufficient knowledge technical decision development challenge interviewee knowledge business executive managerial viewpoint benefit amount participant insight engineering activity hardware startup another shortcoming diversity investigate startup selection constitute stage european hardware startup profit wider collection data discover relevant theme ensure credible conclusion generalizability investigation hardware startup operating lifecycle stage various geographical location improve reliability research