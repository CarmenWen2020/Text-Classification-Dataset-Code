code clone code fragment within software code clone negatively impact maintainability software code clone detection technique propose decade however clone detection perfect clone detection report false positive irrelevant clone specific project management user perspective detect source code clone detection syntax lack user specific preference clone manually inspect analysis remove false positive consideration manual clone validation effort consume error prone clone detection propose machine approach automate validation training dataset built code clone clone detection manually validate clone feature extract clone machine model propose approach algorithm automatically validate clone without inspection propose approach remove false positive clone detection automatically evaluate precision clone detector datasets evaluate exist clone benchmark datasets clone benchmark datasets minimum effort clone detect clone detector software approach accuracy manual validation multiple expert judge propose comparative exist related approach clone classification previous keywords code clone validation machine clone management introduction copying reuse exist code directly alteration another location program software development cycle paste code fragment code clone researcher upon primary clone clone syntactically identical code fragment regardless presentation style comment clone paste code identifier clone modify code statement addition statement deletion modification exist clone syntactically dissimilar code fragment implement functionality recent research average around code software duplicate clone location another although code clone intentionally accelerate development code clone harmful existence inflate software maintenance clone creation propagation software bug throughout becomes consistent clone code fragment throughout software inconsistent correspond duplicate code fragment responsible creation software bug addition creation bug code clone becomes bug propagation programmer paste buggy code fragment throughout software implement functionality detection code clone therefore accelerate maintenance task software remarkably besides exploit similarity detect code clone understand improve overall software clone detection technique propose developed automate clone detection extensive research specific decade return code clone available software code clone undergo complicate detect algorithm clone detection identifier function code fragment modify remove portion code clone undergo syntactical implementation functionality location etc modification complicate handle complex source code structure detect code clone undergo generalization source code printing normalization identifier syntax code fragment complex generalization normalization source code clone detection algorithm report false positive clone code fragment possibly coincidentally otherwise valid clone user besides research definition positive code clone clone subjective user software conduct survey user clone validation detect clone detection report significant variation user validate clone clone positive code clone varied within user programmer manually validate clone detection clone information specific scenario source code refactoring software maintenance task manual validation becomes hinder factor medium software programmer challenge extract actual positive clone report code clone clone detection previous research JDK contains loc report code clone code code linux kernel report code clone loc scenario report code clone clone detection illustrate amount manual validation code clone information besides clone detection algorithm usually irrespective specific requirement user preference return positive clone clone relevant task programmer engineer suitable refactoring mining code clone generate report consume task reduces usability code clone detection scenario increase software project subjective detect clone manual validation usage conduct user involve detect clone multiple expert judge manual validation detect clone independent manual judge significant difference validation user judged clone false clone user judged clone false clone respectively propose machine approach predict user code clone validation propose code clone detection classify report clone per user preference automatic validation user accelerate overall code clone management faster acquire information clone comparison consume manual validation performance quality machine algorithm validate detect clone extend propose architecture ensure compatibility propose exist clone detection promising experimental setup clone validation propose comparison related exist code clone validation aim research RQ manual code clone validation assist via machine RQ propose machine validation across clone clone detection contribution propose architecture automatic code clone validation machine implementation version proof concept propose source available github extension contribution research domain data distribution clone classification extract feature finding feature data distribution analysis understand clone classification possibility improvement research conduct detailed comparative machine algorithm clone classification knowledge previous focus comparative machine algorithm clone classification observation strength weakness machine algorithm clone classification contribute future research improvement model organize discussion related specific research contains discussion propose data distribution analysis comparative analysis multiple machine algorithm respectively discus conduct propose exist related discussion threat validity respectively finally discus conclusion future related introduce exist research target clone classification closely related propose automatic clone validation technique propose maintenance organization classification code clone recently focus aid manual user specific validation task report code clone user specific code clone classification FICA user specific clone classification FICA token sequence similarity analysis frequency inverse document frequency TF idf vector training report code clone clone detection manually marked false positive clone user training clone token extract clone gram token sequence define gram token sequence document clone frequency TF calculate similarly define document clone project software consideration inverse document frequency idf TF idf vector calculate respectively TF idf clone cosine similarity calculate document probability unmarked clone clone calculate assign numerical clone however boolean clone uniformly besides improvement model FICA optionally user feedback iteratively training FICA learns user specific validation completely token sequence validation accuracy significantly target clone beyond noticeable recently propose approach  aim semi automate precision clone detection focus clone precision reporting contrast validation framework workflow judge loop precision report precision reporting  validate subset clone subset validate confidence precision clone remain clone resolve precision judge manual validation finally merges clone subset aggregate return precision evaluation target clone detection involvement refer approach  reasonable responsible precision target clone detection precision otherwise precision reporting target clone detection reliable however contrast propose validation framework target assist user overall analysis detect clone fully automate pre model envision propose machine approach improve increase datasets validation explore possibility fully automate precision reporting clone detection recent research code clone detection report clone classification comprehension  broadly classify exist code clone comprehension technique category category technique classification detect code clone location clone respect another hierarchy file directory similarity clone grouped detect clone latent semantic index lsi identifier clone besides machine algorithm apply detect clone token sequence similarity clone analyze categorize apply unsupervised machine algorithm clone cluster category clone comprehension technique visual representation scatter plot code clone aspect browser hierarchical graph detect clone classification visualization technique organization maintenance code clone easy clone manually analyze validation remains overall code clone comprehension technique improve significantly automatic validation machine approach validate accord specific user besides researcher challenge evaluate technique clone detection due lack validate code clone benchmark building benchmark threat validity due unavoidable error amount manual validation benchmark validate union clone detector manual effort benchmark positive clone report manual validation effort machine model aid creation user specific validate clone propose layer report code clone generate exist clone detection user validate clone fed validation behavior specific programmer propose extract feature report code clone source code fragment training phase validate code clone unknown code clone validate propose extract feature code clone machine algorithm validation response programmer feedback optionally update improve prediction propose opportunity improve programmer preference besides propose optionally tune validate importance code clone ide management clone clone ide programmer code clone report clone detection code clone importance per preference programmer flexibility validate clone scenario propose approach discus propose clone classification workflow propose training machine model discussion detail significant workflow finally extend architecture propose overall workflow propose workflow extend architecture detail propose propose machine model predict user specific code clone validation model manually validate code clone correspond user model improve report code clone clone detection predict user specific validation workflow sequence source code codebase exist clone detection detect code clone correspond clone detection propose exist clone detection clone multiple combine optionally generality training report code clone clone detection user manual validation user code clone positive false positive detail user specific manual clone validation database training machine model feature extract marked code clone training machine model exist related research FICA token sequence feature training machine model fail predict validation successfully beyond clone improve classification target clone beyond calculate clone similarity structural pre processing normalization detail feature extraction methodology extract feature feature vector clone classification feature vector correspond manual validation clone training machine model machine model predict clone validation unknown machine model stage return probability false positive correspond code clone finally classify clone detection classification tune user preference probability user feedback classify clone user cycle supervise improve validation clone label feature extraction report code clone clone detection user manual validation correspond user validation database later training machine model report clone clone detection clone database clone manually marked false positive user report code clone grouped disjoint positive false positive clone respectively training machine model machine model input feature correspond label important appropriate feature classification target clone code clone classification hence token sequence feature classification algorithm intend enhance classification performance efficiently diverse clone prediction addition improve classification workflow focus extract informative feature feature extraction undergoes pre processing source code transformation similarity extraction code clone image KB image image KB image pre processing printing comment removal ensures consistent structure similarity extraction source code clone extract similarity feature code clone fragment comment removal printing information user code clone validation extract feature mainly similarity target code clone fragment addition source transformation consistent normalization literal consistent rename identifier apply code clone clone listing listing code fragment detect clone weka software validate comparatively simpler code clone discussion code clone exhibit structural similarity calculate similarity directly source code probability introduce perspective clone due strict consideration modification literal identifier apply source code transformation calculate clone similarity extract information image KB image image KB image listing listing transform clone fragment listing listing respectively blind rename identifier apply consistent normalization literal blind rename identifier identifier structural comparison similarly literal transform consistent normalization literal listing listing transformation correspond modification literal identifier similarity feature information code clone  source transformation apply pre processing transformation feature analyze difference code clone fragment output previous prior calculate numerical similarity clone fragment minimal transform clone fragment another listing image KB image minimal operation transform code clone fragment listing code clone fragment listing unix diff utility purpose calculates minimum insert delete operation convert file another listing delete operation insert operation respectively apply clone fragment transformation conflict transform clone fragment listing listing minimum operation resolve difference delete operation insert operation listing correspond operation listing calculate similarity code clone fragment correspond operation correspond code clone fragment respectively fragment similarity difference code clone fragment increase code clone fragment similarity tends towards zero fragment similarity calculate clone fragment exactly feature structural information code clone fragment mimic manual validation per obtain manual code clone validation user intuition code clone fragment significantly validator likely false positive correspond code clone fragment calculate respectively difference information variation fragment difference likelihood validate positive code clone comparatively difference feature clone classification however clone versus clone consideration relatively code clone fragment variance difference code clone fragment mitigate bias average code clone average capture clone difference capture code fragment mismatch popular code clone detection source transformation consistent rename identifier normalization literal workflow code clone detection clone detection NiCad  research performance clone detection motivation subset feature transformation calculate clone fragment similarity however knowledge previous clone validation feature hence finalize feature selection building machine model conduct data distribution extract feature feature feature separability overall contribution classification feature contribution comparatively contribution separability feature information contribute feature remove exhibit clone classification discus finding detail feature classification code clone training machine model clone classification workflow propose discussion supervise machine algorithm classification user specific clone validation supervise classification algorithm manually validate  extract clone feature clone validation label respectively machine algorithm dataset function probability false positive code clone investigate classification performance machine algorithm knowledge previous research directly focus user specific clone validation extract clone feature target validation clone relevant sequence algorithm instead TF idf token sequence fail validate beyond clone FICA performance multiple machine classification algorithm random naive bayes classifier decision backpropagation neural network comparative machine algorithm accuracy within clone classification backpropagation neural network maximum performance comparison classification model accuracy backpropagation neural network machine model propose finding comparative multiple machine classification algorithm detail prediction decision configuration machine model classify code clone extract feature vector probabilistic classifier function assigns probability probability belonging positive clone propose user decision threshold tune validation output quality clone report positive default clone validation classify positive code clone towards upper limit propose becomes strict classify clone return clone probability positive clone return code clone similarly decrease propose tolerant classify clone positive decision threshold useful user tune quality per requirement improve machine model supervise user feedback classify code clone machine model correspond code clone detection user feedback code clone database propose feedback code clone optionally along exist training improve code clone classification cycle supervise possibility improve classification accuracy pre model transfer towards develop custom validation model manual validation feedback cycle supervise goal transfer improve customize target task leverage knowledge source task hence pre artificial neural network model training dataset improve customize validation model comparatively minimal effort architecture clone classification addition model locally code clone classification extend propose architecture additional advantage machine model generalization performance significantly depends quality quantity training dataset relatively data machine model perform propose clone detection generate increase usability propose architecture overview architecture report code clone target code clone detection server validation http request request mainly contains target code clone validate request optionally additional information propose classification model configuration classification model code clone source code communication server javascript notation clone validate feature extract feature vector machine model probability correspond clone detection display validate user advantage deployment model image KB image model compatibility exist code clone detection compatibility exist clone detection platform implementation dependency abstract implementation exist clone detection developed platform specifically program propose javascript notation understandable irrespective implementation variety improve usability propose extent listing sample api request automatic clone validation standard api request format exist clone detection request automatic clone validation irrespective underlie architecture implementation correspond validation request propose validation pre processing clone fragment pre deployed model prediction finally sends validation response correspond clone detection listing architecture ensures compatibility clone detection minimal effort image KB image image KB image improvement training phase training data individual user machine algorithm challenge model deployment user advantage model trigger model dataset simpler involves request additionally user model artificial neural network decision convergence decision besides architecture possibility manage knowledge validation user specific project project specific clone analysis project target code clone per task architecture useful manage training dataset validation model possibility processing cluster distribute compute future processing advantage data clone validation relatively processing device analysis data distribution clone classification workflow usage machine code clone validation data distribution positive false positive code clone feature selection machine lean model discussion dataset description discus data source contains discussion detail dataset finally discus statistical summary underlie distribution extract feature data source machine algorithm recognize available underlie dataset important dataset feature extract training  dataset algorithm bias failure generalize clone generalization validate code clone chosen relatively diverse dataset source project besides clone report exist clone detection multiple source project training clone  inter project dataset source java generality propose publicly available namely NiCad  iClones  SourcererCC detect clone separately benchmark clone detection target generality suffices clone detection widely research recent experimental evaluation addition propose directly clone fragment feature extraction compatible clone detection return meta data information clone fragment software randomly clone manually validate clone detection separately chosen dataset recent research code clone source project evaluate propose approach detail data report obtain exist clone detection code clone input propose validation purpose code clone detection data source correspond report code clone code clone manually validate training phase propose recent research clone validation decision scenario depends user perspective code clone validate judge positive clone others clone generalization propose code split validate graduate research computer background manual validation decision along correspond code clone input propose training phase analyze data distribution clone classification manually validate clone extract feature machine model discus distribution statistical behavior extract feature code clone detect clone detection code fragment clone code fragment code clone analyze feature code clone positive false positive manually validate clone attempt contribution clone classification distribution average code clone fragment feature positive false positive clone average code fragment randomness positive false positive clone distribution feature almost overlap another positive false positive code clone overlap suggests feature minimal information yield contribution training machine algorithm validation besides extract feature normalize code clone namely normalization syntactical similarity token clone feature underlie distribution feature normalize histogram plot positive false positive clone  similarity code normalization noticeable distribution feature comparatively average code fragment feature validation distribution positive false positive clone completely linearly separable feature somewhat distinguishable distribution indicates contribution validation prediction average clone fragment somewhat syntactic similarity token normalization source code image KB image histogram syntactical similarity token norm image KB image syntactical sim token norm image KB image accuracy comparison across software underlie relationship feature cluster clone underlie relationship available similarity potential information cluster clone plot visualization attempt distinguishable separation cluster scatter plot syntactical similarity versus token normalization code clone however analysis distinguishable cluster information machine algorithm recognize underlie available dataset detailed analysis dataset feature machine algorithm feature distribution analysis feature code clone information importance contribution clone validation analysis clearer data distribution appropriate machine algorithm correspond feature algorithm analysis data distribution feature comparatively distinguishable distribution contribution positive false positive clone feature ranked contribution analysis correspond distribution difference somewhat indicates separability classification detailed feature distribution prior apply machine algorithm important noisy feature specific classification affect classification performance reduces generality classification distribution contributes research improvement feature extraction selection appropriate classification algorithm built feature vector feature clone classification due contribution noisy behavior classification feature distribution analysis  summary detail sim norm syntactical similarity normalization sim norm syntactical similarity normalization sim norm syntactical similarity normalization token sim norm syntactical similarity token normalization token sim norm syntactical similarity token normalization token sim norm syntactical similarity token normalization function intersect function intersect code fragment unmatched brace unmatched brace across code fragment performance analysis machine model comparative propose approach data distribution clone classification workflow involve machine data distribution analysis feature selection classification model respectively performance machine model propose workflow feature bayes classifier extract code clone feature vector naive bayes classifier conditional probability model classification  clone false positive validate clone respectively extract clone feature report clone classifier assigns conditional probability bayes theorem prior probability clone likelihood clone feature vector clone evidence feature vector evidence ignore independent clone assumption clone feature independent feature naive bayes classifier assigns probability feature vector kernel density estimation likelihood calculation feature continuous described configuration classifier accuracy precision recall respectively quality analysis report image KB image correlation feature subset however assumption classifier independence extract feature clone classification definition code clone clone clone similarly code clone clone induction extract similarity feature clone sort correlation correlation extract feature noticeable clone structural feature average difference relatively correlation feature however extract similarity feature clone normalization significantly correlation finding bayesian network classifier considers learns dependency relation feature unsupervised via minimum description mdl dependency network bayesian network mitigate assumption naive bayes classifier perform relatively clone classification feature naive bayes outperform bayesian classifier behavior totally unexpected detailed error dependency network training behavior classification quality machine algorithm     decision random random naive bayes classifier bayes network naive bayes  logistic regression stochastic gradient descent classifier multiclass classifier decision decision classifier predict target variable classifier decision input variable feature vector internal node correspond input variable correspond input variable define node leaf denotes target variable classification model input variable node split remain training dataset variation classification recursive training split correspond node selection performance clone classification prune decision accuracy obtain precision recall respectively random another variation classification considers random input variable generate decision obtain accuracy precision recall relatively decision random classifier considers multiple decision building model approximately accuracy classification algorithm decision however precision recall relatively decision backpropagation neural network training dataset input layer output layer hidden layer node ann learns function denotes connection input layer hidden layer hidden output layer respectively denote layer bias neuron activation function respectively softmax activation function output layer function predict clone validation feature vector correspond probability denotes probability code clone feature positive preset user preference propose approach decides code clone positive false positive otherwise training phase neural network investigate optimal network configuration epoch converges maximum limit epoch model fold validation accuracy converges versus epoch average fold validation neural network converge within epoch accuracy analyze output quality across plot roc curve calculate curve auc roc curve roc curve propose recommend user default ratio positive false positive ratio output training besides precision recall curve propose precision recall curve auc image KB image avg accuracy fold validation algorithm converges epoch addition backpropagation neural network explore extend model training prediction function mapping dimension feature vector label respectively per apply rectify linear relu sigmoid function activation function hidden output layer respectively neural network layer node overfitting specific neuron adapts decision ignore neuron fail generalize classification model propose dropout prevent neural network overfitting random neuron along correspond connection network training phase prevent adaption network approximate network phase kera python library tensorflow recent source project release google investigate model clone classification performance configuration dropout probability node hidden layer investigation comparatively sequential stack layer addition input output layer dropout probability neuron along correspond connection probability generality training model neuron hidden layer obtain accuracy data distribution non linear function requirement clone classification hence finding investigate machine model classification understand classification contribute future research building model insight classification backpropagation neural network verify classification performance perform machine model detail finding implementation detail implement prototype performance propose experimental setup user specific training data web application developed automatic validation developed web application addition command easy user accessibility python server web application developed flask  python server code clone report code clone detection user specific validation iteratively display code clone user manual validation code clone user decision positive false positive server database mapping correspond user profile CouchDB nosql database easy distribute compute data CouchDB advantage feature database handle amount code clone future manual validate code clone building classification model described propose  pre processing code clone extract feature described training model pre processing clone feature extract java program feature vector training dataset classification model machine algorithm clone classification detail finding comparison classifier model user specific validation code clone report code clone validation model predicts return validation correspond user implement prototype code clone validation model user server request code clone validation server machine model clone classification sends validation user json format server request response restful api validation correspond code clone detection classification comprehension clone per user configuration addition deployment modular model locally prediction embed clone detection image KB image prototype clone validation image KB image prototype validate clone report image KB image prototype prediction response information source project experimentation software         swing         combination detect clone multiple clone detection average per code clone fragment experimental setup automatic clone validation contribute clone analysis across scenario requirement software interested evaluate across environmental ups clone detection user software source project evaluate propose model generality multiple clone detection software detect code clone clone detection along configuration evaluation artificial clone evaluation code clone related technique critical validation code clone false positive varies significantly concrete information validation accuracy model interested evaluate artificially generate clone clone software generate positive clone modification source code possibly generate code clone mutation framework code clone benchmark framework code fragment input performs mutation operation random edit operation code fragment artificially clone mutation edit operation source code operation positive clone mostly simpler minimal subjective bias code fragment  artificial positive code clone target performance propose validate artificial positive clone along mixed randomly false clone dataset described apply propose clone validation comparatively accuracy artificially clone artificially clone minimal subjective bias disadvantage another comparatively easily distinguishable noticeable recall evaluation software propose promising accuracy via fold validation data exhibit confidence dataset comparatively contains diverse software project however interested propose software project completely source project previous training phase source software project detail code clone detection detect code clone available source software project code clone detection generality propose code clone detection along correspond version configuration report code clone code clone detection manually validate user none user previously involve building training dataset besides performance propose exist FICA contact source code correspond author model predict user clone validation project comparative accuracy exist propose approach software noticeable graph propose approach accuracy java file manager however unlike propose approach noticeably performance clone mostly comparative besides quality precision recall calculate approach obtain highlight noticeable precision recall comparison propose approach noticeable plot plot illustrates precision recall exist approach relatively propose besides plot depicts variation quality exist approach comparison propose relatively consistent lesser variation quality image KB image accuracy comparison across software clone detection  configuration iClones   NiCad blind rename abstract literal  generous  aggressive simian ignore overlap balance parenthesis  token replacement another observation FICA learns token sequence comparison significantly overall token increase code  average token per clone fragment classification noticeably longer propose approach behavior relatively software java file manager  swing operation artificial code clone via mutation framework clone  operation addition removal code comment addition removal  systematic rename identifier arbitrary rename identifier literal insertion deletion within insertion deletion modification artificial code clone  comparison exist software        swing         combination detect clone multiple clone detection average per code clone fragment discussion artificial neural network efficient compute model approximate complex function variant artificial neural network widely recognition computer criticism satisfactory explanation behavior anns input input layer inform output output layer anns assign node bias layer connection predict accordingly without information complex function perspective propose challenge function neural network decision biasing completely feature however assume neural network input predict decision bias feature neural network output decision classify sample algorithm calculate feature contribution chi feature comparison neural network bias feature feature extract feature noticeable normalize randomly distribute feature completely dominate feature model noticeably bias towards feature decision besides code clone similarity respectively logical clone validation similarly average code clone fragment unmatched brace contribution chi finding noticeable correspond feature classification image KB image quality comparison image KB image feature via chi another important aspect analyze propose classification fails succeed clone model validate clone cannot validate complex clone possibility propose fails validate clone clone validate comparison code clone code clone difference validation possibility propose clone analyze failure validation propose plot classification 3D clone plot plot scatter plot sample along clone similarity plot sample randomly scatter 3D presence code clone available sample plot scatter plot sample propose misclassified randomness scatter plot suggests propose fail classify code clone algorithm fail correctly classify clone scatter plot misclassified sample plot align along axis clone similarity besides plot plot easy visualization plot randomness clearly noticeable misclassified sample propose conclude fail clone similarly propose successfully classify code clone randomness correctly classify sample plot RQ manual code clone validation assist via machine propose machine algorithm via fold validation dataset neural network converge within epoch validation accuracy propose average fold besides completely software propose promising accuracy clone validation positive reveal opportunity machine clone validation assist overall code clone maintenance analysis RQ propose machine validation across clone clone detection generality validation propose machine clone clone detection evaluation fail clone plot correctly classify validate clone propose noticeable clone randomly scatter across validation clone previously similarly plot misclassified clone randomness across indicates clone validation propose succeed fail specific clone demonstrate generality machine approach across clone besides evaluate validate clone detection validation conjunction promising threat validity neural network widely model complex non linear relationship traditional statistical fail model accurately however complex non linear function neural network training amount training phase individual programmer neural network lack data clone manually validate beforehand training besides individual programmer manage manually validate clone training neural network significant amount reduce usability automatic clone validation training phase easy validate data programmer training neural network remove consume training individual programmer threat validity model individual programmer choice however model training generalize programmer independent decision threat validity minor besides mitigate threat neural network update individual programmer feedback neural network converges towards validation preference individual programmer accuracy precision across software clone detection evaluate pre judged positive false positive clone judge affected subjective preference clone individual programmer possibility threat validation however mitigate threat validity validation decision multiple programmer another likely threat validity possibility minor error feature extraction extraction feature propose source code parser via transformation source code parser guaranteed perfect error possibly propagate feature calculation however effort reduce probability error feature calculation evaluation accurate conclusion introduce machine approach automatic code clone validation code clone detection usually return clone complex procedure contains clone preference user opinion requirement manual validation clone detection software propose machine approach assist automatic validation code clone feedback user improve prediction validation evaluate propose user clone detection artificially code clone source project promising accuracy automatic validation clone propose