background migration monolithic microservices refactoring therefore migration usually economic impact tend postpone activity mainly migration demand release feature objective monitor technical debt sme migrate legacy monolithic ecosystem microservices goal analyze code technical debt migration microservices conduct analyze twelve project code extract business monolithic microservices analyze technical debt sonarqube perform qualitative member understand perceive quality motivation possibly postpone activity migration microservices reduce technical debt despite initial spike technical debt due development microservice relatively technical debt tend monolithic previous keywords technical debt architectural debt code quality microservices refactoring introduction migration microservices become popular migrate improve quality facilitate software maintenance commonly adopt initial migration strategy extract component monolithic microservices simplify microservices microservices directly legacy monolithic adopt message bus however complexity usually architecting architectural migration monolithic microservices commonly perform actively developed therefore development feature prioritize refactoring code generates technical debt TD activity postpone increase software maintenance migrate microservices facilitate maintenance however recent survey confirm maintenance increase migration therefore goal understand overall code TD increase decrease migration microservices TD varies migration report monitor code TD sme medium enterprise migrate legacy monolithic ecosystem microservices interested evaluate TD sonarqube commonly analyze code TD monitor evolution TD project develop migration microservices analysis focus TD propose sonarqube reliability remediation remove issue generate fault maintainability remediation remove issue increase maintenance effort security vulnerability remediation remove security issue moreover implement qualitative conduct focus development software architect manager goal deeply understand distribution TD issue motivation postpone activity knowledge limited investigate impact postpone activity TD context microservices understand TD grows opening avenue future research analysis TD structure briefly introduces background related microservices TD report exist topic define research context data collection data analysis protocol obtain discussion identify threat validity conclusion outlook future background background microservices technical debt TD moreover sonarqube adopt calculate TD microservices microservice architecture become popular microservices autonomous independently deployed service clearly define purpose independent deployment advantage developed program independent service deployed hardware moreover easy maintain fault tolerant failure service monolithic addition microservices native application ideal isolation distribution elasticity automate management loose couple moreover microservices propose vertical decomposition application subset business driven service service developed deployed independently development technology stack development responsibility microservice belongs development deploy operating upgrade service technical debt concept TD introduce cunningham debt incur software project development deficiency maintenance overhead McConnell improve definition TD construction approach expedient creates technical context later increase define TD collection implementation construct expedient technical context future costly impossible TD actual contingent liability impact limited internal quality primarily maintainability evolvability approach strategy evaluate TD propose approach quantify debt effort fix TD issue data basis  guo propose TD management framework formalizes relationship benefit improve software quality decision maintenance activity investigate automate identification TD developer identify TD item development manual identification automatic detection examine source code analysis technique identify code debt software focus TD TD impact increase defect proneness apply TD identification technique code automatic static analysis issue   modularity violation version apache hadoop source software project metric code code violation positive correlation metric defect proneness disperse couple modularity violation investigate TD apply approach ongoing software project decrease technical debt measurement commercial source TD cast coverity scan  designite adopt sonarqube commonly TD measurement adopt user moreover sonarqube source competitor commercial license sonarqube calculates metric code code complexity verifies code compliance specific cod analyze source code violates cod metric outside predefined threshold quality gate sonarqube generates issue issue generate TD therefore sonarqube development java python javascript sonarqube version java classify related reliability maintainability security code reliability bug TD issue something code reflect bug security vulnerability security hotspot issue exploit hacker otherwise security sensitive maintainability code maintainability related issue code decrease code readability modifiability important code adopt sonarqube refer commonly code define fowler beck sonarqube zero false positive issue reliability maintainability security issue false positive available online sonarqube calculates TD  iso compliant developed dnv  france category robustness application stability ability recover failure performance efficiency application responsiveness usage resource security ability confidential information prevent unauthorized intrusion transferability software understandability understand software become productive changeability software adaptability modifiability sonarqube calculates TD sonarqube identifies TD density previous formula instantiate calculate technical debt maintainability related tag code suppose increase proneness infect code technical debt  index sonarqube version sonarqube version maintainability remediation effort refer TD TD reliability remediation effort reliability related tag bug suppose increase bug proneness infect code refer TD TD security remediation effort related security vulnerability tag vulnerability refer TD TD related report relevant related migration microservices TD migrate microservices software development improve maintainability decrease delivery however migration microservices easy task commonly migration without microservices hire consultant migration migration monolithic microservice approach propose migrate monolithic microservices analyze literature classify report refactoring approach migrate monolithic microservices highlight exist refactoring approach practically applicable adequate metric verify migration previous classify migration adopt highlight complex migration experienced software architect identify architectural guideline initiate migration identify migration strategy distinguish bang migration replace legacy  incremental migration replacement  fisher propose decomposition approach scalability cube split application component achieve scalability richardson mention approach decomposition strategy decompose business capability define service correspond business capability decompose domain driven sub domain decompose define service responsible action decompose resource define service responsible operation entity resource propose decomposition approach container optimization goal increase elasticity application possibility obtain flexible composition service   recommend combine decomposition approach propose approach hide complexity stem variation device thanks application uniform approach model physical logical iot device service moreover foster interoperability extensibility diverse communication protocol proxy microservice component propose cluster algorithm approach couple criterion derive literature analysis approach extensible framework service decomposition combination criterion driven integrates graph cluster algorithm feature priority analysis specification moreover approach introduces concept couple criterion instance grouped category cohesiveness compatibility constraint communication approach evaluate integrate exist graph cluster algorithm combine action research investigation load potential benefit practitioner confirm user feedback propose data driven microservice orient decomposition approach data diagram business logic approach deliver rational objective easy understand thanks objective operation data extract business logic similarly adopt mining analyze business monolithic propose heuristic slice monolithic microservices sub granularity software structural functional splitting execution fragment across software granularity software behavioral recently propose approach identify microservices monolithic structural analysis propose approach validate migration monolithic microservices microservices technical debt investigate TD microservices   propose investigate impact TD microservices adopt adaption reduce TD microservice software issue generate TD microservice previous identify microservice specific anti TD microservice recently extend public catalog anti industrial survey investigate approach adopt prevent accumulation TD reporting prevent TD due architectural erosion mainly lack automate quality architectural moreover subsequent perform another industrial survey interview practitioner explore evolvability assurance apply usage metric microservices report architectural issue postpone architectural decision harmful TD moreover report participant apply architectural service orient metric recommend apply static analysis architectural analysis software quality architectural issue perform exploratory refactoring exist microservice remove issue communication layer focus investigation TD related communication layer connection service issue presence business logic communication layer increase dependency service similarly perform focus migration analyze aspect migration   propose approach identify architectural TD monolithic migration satisfy requirement microservices proposal tactic contextualizing architectural TD introduce approach technology decision microservice architecture explicit enable enable aware TD accrue decision propose methodology reduce TD microservices systematically identify architectural violate principle microservices suitable architectural refactorings resolve differently previous TD trend project migration microservices code TD detect sonarqube TD perceive developer empirical guideline define runeson höst goal research context selection data collection data analysis procedure goal research technical debt TD trend project migration microservices perform research RQ RQ TD monolithic trend microservices RQ TD monolithic sonarqube sonar model trend microservices RQ TD perceive developer trend monolithic microservice RQ TD migration microservices RQ TD issue sonarqube bug code security vulnerability migration microservices RQ perceive TD migration microservices RQ aim understand overall TD trend monolithic microservice interested evaluate TD sonarqube investigate TD calculate code sonarqube RQ however insight obtain execution sonarqube investigate TD perceive developer RQ migration microservices hypothesize TD decrease migration microservices mainly newly developed architectural developed code understandable RQ investigate TD related quality affected migration code buggy migration microservices stable prone RQ investigate TD item detect sonarqube RQ investigate developer perceive quality propose sonarqube RQ therefore hypothesize microservice faulty sonarqube issue bug prone sonarqube issue code secure sonarqube issue security vulnerability selection investigate rqs migrate microservices adopt italian medium enterprise sme developer develop business suite tax accountant lawyer related business developed practitioner italy migration migrate bookkeeping document management italian tax accountant allows tax accountant manage bookkeeping management digital invoice invoice ministry economic development manage tax declaration fulfill legal requirement currently tax accountant invoice per frequently update annual tax usually italian government normally update bookkeeping december january involves tax rate modify invoice however tax declaration march april therefore adapt software enable tax accountant update regulation march april hire consultancy pace developed java  application server monolith developed model controller web application developed java  jsp desktop application java swing document upload synchronization server component deployed file tomcat server virtual machine microsoft azure data microsoft sql server database project developed compose developer consultant usually hire december adapt tax twelve code code gotten harder understand modify ceo report migration significant amount implement modify code moreover developer understand implement aforementioned issue migrate microservices facilitate maintenance distribute independent business eliminate synchronization increase velocity migrate business independent microservices extract monolithic microservices developed java automatically deployed docker container kubernetes cluster microsoft azure microservices responsible upload permanent storage invoice responsible manage tax declaration private database implement manage tax declaration portal ministry economic development implement private public management invoice tax accountant private tax declaration independently data portal ministry economic development development microservices adopt RabbitMQ message bus manage communication microservices monolithic implementation microservice RabbitMQ api gateway microservices functionally structurally java purpose manage data invoice tax declaration access format location local database sql server apis ministry economic development execution data collection monitor migration august september perform automate TD analysis data code TD migration RQ focus understand usefulness TD analysis qualitative insight RQ automate TD analysis TD data obtain analyze commits sonarqube version analysis sonarqube standard quality profile analyze commit migration migration analyze TD sonarqube distribution TD issue TD sonarqube technical debt maintainability remediation effort issue classify sonarqube code TD reliability remediation effort issue classify bug TD security remediation effort issue classify security vulnerability focus confirm automate TD analysis gain qualitative insight perform focus focus semi structure interview goal discus migration microservices beneficial participant experienced benefit focus moderate author focus session audio obtain consent participant relevant transcribed cod moderator focus verify author focus benefit issue perceive migration microservices issue benefit goal understand practitioner perceive benefit associate TD quality code migration microservices aim understand perception overall project quality developer migration TD decrease migration microservices moderator introduce notion TD goal understand perceive overall TD developer postpone technical activity migration microservices report postpone activity activity migration session moderator obtain sonarqube analysis feedback developer participant report attach whiteboard participant described grouped discussion participant quality postpone activity moderator associate iso IEC quality characteristic functionality performance efficiency compatibility usability reliability security maintainability portability moderator highlight whiteboard participant discus category activity belongs data analysis RQ analyze growth TD migrate microservices rate growth TD analyze overall TD sum TD TD TD TD issue independently apply linear regression data migrate microservices growth rate regression inspect slope coefficient regression complement RQ obtain automate TD analysis analyze focus analyze positive negative RQ relative proportion TD issue TD commit relative distribution TD issue statistically significant migrate microservices apply mann whitney non parametric null hypothesis distribution identical probability random sample random sample statistically significant calculate mann whitney default python scipy package computes statistic moreover magnitude difference cliff delta non parametric ordinal data interpret guideline  kim medium analyze response focus complement aforementioned analysis cod regard software quality characteristic perform participant analyze descriptive statistic outcome rqs analyze data sonarqube RQ RQ conduct focus insight evolution TD RQ RQ sonarqube analysis data stem frame migration august april migration january september december monolithic actively developed focus eleven member participate developer developer another software architect project manager focus RQ TD monolithic trend microservices trend TD analyze sonarqube RQ overall TD sum TD TD TD monolithic migration overall TD migration immediately introduction microservice sum TD monolithic microservices faster growth TD migration microservice become stable TD decrease significantly trend growth monolithic migration TD stabilize extraction feature monolithic microservice TD trend migration worth microservices monitor TD commonly increase immediately creation microservice decrease later overall TD evolution linear regression data migration microservices slope coefficient regression report slope coefficient overall TD significantly migrate microservices coefficient migration monolithic implies remarkable overall TD growth rate developer perceive TD confirms trend RQ TD slope coefficient migration microservices TD MTD rtd std  coeff  coeff focus developer confirm introduction microservice activity postpone participant report activity postpone development monolithic postpone development microservices prioritize delivery production developer explain vertical sonarqube TD beyond introduction microservices due adopt microservices microservices copying code monolithic microservice developer integrate refactor code obtain code reduce TD microservice explain delay reduction TD participant report increase amount perceive TD introduction microservices mainly due delivery production priority sometimes temporary sub optimal choice deliver code monolithic microservices rationale development microservice involves duplicate exist service adopt temporary microservice becomes stable monolithic participant activity postpone microservices accrue TD easy implement microservices monolithic limited microservices descriptive statistic TD migration mann whitney cliff delta TD MTD rtd  median stdev  median stdev mann  cliff deltad CI activity postpone migration microservices  migration performance efficiency reliability security maintainability regard amount perceive TD migration focus developer project manager software architect opinion software architect project manager perceive increase effort microservices negative issue overall development increase due develop distribute increase overhead previous research software architect concerned architectural decision postpone due urgent release feature fix bug however project manager software architect TD microservice grows monolithic image KB image TD evolution microservices monolithic developer confirm TD decrease introduction microservice accumulates legacy monolithic moreover report pressure microservice become stable pressure development monolithic postpone technical decision microservices sql database migrate nosql database another postpone decision regard outdated library monolithic upgrade library newer version code postpone due constraint important postpone activity refactoring code extract microservice developer deeply refactor code extract monolithic production however refactoring postpone urgent feature request impact microservice report choice implement feature monolithic apply almost migrate microservice implement feature directly microservice another important postpone decision development api gateway RabbitMQ message bus api gateway planning migrate api gateway future overall despite voluntarily postpone activity participant perceive overall TD decrease image KB image RQ TD migration microservices distribution sonarqube TD RQ relative distribution TD issue statistically significant apply mann whitney reporting conclude relative distribution TD issue migration microservices cliff delta confidence interval CI confidence distinct TD vast difference migration microservices TD TD negative coefficient migration decrease TD adoption microservices coefficient TD reduce TD growth rate vast majority business monolithic migration TD TD monolithic business migrate linear regression data migration microservices individual TD related vulnerability reliability maintainability respectively slope coefficient regression report overall code quality focus participant confirm code microservices easy modify microservices component quality migration involve rewrite code developer instead refactored code largely reuse exist code participant assign postpone activity quality characteristic focus performance efficiency reliability security maintainability activity assign iso IEC quality characteristic functionality compatibility usability activity assign detail postpone activity report worth quality characteristic correspond TD category propose sonarqube moreover related postpone activity refactor increase postpone activity related security characteristic developer report development microservices paid attention future maintainability reduction postpone activity regard maintainability related aspect therefore obtain sonarqube RQ TD trend invert trend monolithic introduction microservice TD tend decrease instead increase developer report migration impact report easy microservices however integration complicate mainly complex replicate locally developer machine difference report selenium perform graphical user interface execute without security related activity developer report migration microservices postpone activity developed monolithic issue experienced developer approach application developer extend authentication monolithic authorization individual service instead implement OAuth software architect  activity due pressure deliver update tax performance efficiency related activity developer postpone activity development microservices report performance generally important important performance issue exception upload pdf invoice task tax accountant usually performs batch invoice italian ministry economy finance permanently software architect development implement serverless function enhance performance avoid infrastructure activity perform however constraint developer postpone activity regard reliability developer invest effort reliable however postpone activity pressure technical nda postpone activity image KB image discussion migration microservices non trivial task engineering heavily impact project facilitate maintenance highlight remain monolithic deadline annual update constant TD longer adapt tax therefore despite increase overall development migration beneficial extra manifold developer architecture various aspect enable legacy communicate via enterprise service bus microservices authentication issue related issue introduction devops culture migration microservices confirm expectation TD monolithic rate microservices confirm significant decrease maintenance predictor propose sonarqube reduction remediation effort related code perception developer despite developer postpone activity development monolithic microservice perceive amount TD activity postpone microservice easy implement trivial monolithic vast majority postpone activity related quality aspect integration important postpone activity related architectural decision mainly aware anti developer microservices instead message bus refactor introduce message bus later focus enable insight benefit issue migrate microservices benefit decrease bug fix increase understandability initial expectation migration minor benefit reduce synchronization possibility deploy feature without compile deploy however regard issue project manager software architect highlight development possibly developer microservices developer highlight complexity microservices monolithic monolithic advantage local microservices rely distribute extra positive activity perform postpone introduction microservices introduce continuous delivery increase coverage confidence automatic important issue related availability microservice template microservice perfectly suitable extra initial increase TD introduction microservice probably due lack service template microservice easy develop easy develop availability template developed microservice recommend invest effort definition service template dramatically development microservices future another important issue related  architectural decision continuous architecture principle recommend postpone architectural decision really however implement postpone architectural decision significantly effort usage lightweight message bus RabbitMQ api gateway instead api gateway sme RabbitMQ api gateway however aware implement api gateway migrate RabbitMQ obtain sonarqube analysis developer confirm measurement security reliability analyze recur violation monolithic microservices realize commonly violate monolithic commonly violate microservices developer quality aspect development microservices paid attention code developer importance severity harmful sonarqube harmful generic exception thrown sonarqube report generic exception error   exception prevents handle generate exception differently application generate error classify sonarqube code decrease code maintainability severity however developer appreciate availability opinion severe report sonarqube related unused variable unused enable understand remove another unexpected developer rat importance security enable security vulnerability manually identify focus adopt sonarqube production integrate CD CI pipeline identification actually harmful purpose future investigate fault prone combine actual fault proneness detect source code approach adopt source project gain recommend evaluate migrate microservices carefully investigate migration option develop microservice continuously apply quality monitoring approach development monitoring technical debt code quality technical debt architectural avoid presence microservice anti threat validity introduce threat validity structure yin reporting construct validity internal validity external validity reliability moreover debate tactic adopt mitigate construct validity concern identification adopt concept analyze TD model sonarqube therefore approach aware TD requirement TD architectural TD heavily impact TD aware accuracy TD detect sonarqube bias however sonarqube aware important postpone activity amount TD mitigate threat perform focus discus TD thorough discussion amount TD postpone activity generate future threat internal validity concern factor influence obtain postpone activity discussion developer publicly expose activity postpone threat external validity concern generalization obtain monitoring development slightly however previous microservices developer confirm microservices increase maintainability code readability understandability therefore benefit decrease TD migrate microservices microservices investigate structurally functionally therefore implement microservices structure functionality threat reliability refer correctness conclusion preliminary therefore apply statistical technique trend TD migration statistical technique apply confirm aware accurate statistical technique series accurate estimate difference slope however statistical technique contradictory conclusion technical debt TD migration microservices twelve software project code developed italian sme investigate technical debt SMEs adopt microservices conduct investigate perspective TD migration microservices TD detect code sonarqube perceive developer purpose analyze sonarqube code TD development migration conduct focus analyze developer perceive TD related postpone activity depth insight reveal TD development microservices initial introduction microservice TD limited mainly development activity code microservice stabilize TD decrease linearly trend monolithic unexpectedly distribution TD issue introduction microservices important statistically significant difference emerge proportion sonarqube issue classify bug security vulnerability decrease code maintainability issue increase microservices suppose facilitate software maintenance reduction code developer confirm overall perceive reduce maintenance complexity increase velocity overall development effort increase introduction microservices extra effort due development connection legacy microservices introduction distribute authentication mechanism activity previously however manager confirm increase velocity freedom compensate extra effort important migration remain release annual tax update government future investigation impact TD migration microservices aim analyze project detect architectural moreover aim investigate TD due temporary architectural decision goal understand activity postpone benefit postpone activity cancel increase effort refactor activity zero development refactoring effort increase postpone postpone whereas activity monthly extra per refactored become expensive planning investigate evolution TD adopt serverless function development microservices prevent anti TD finally adopt sonarqube production another future focus identification harmful sonarqube therefore accurate definition quality model declaration compete author declare compete financial personal relationship influence report acknowledgment research partially  grant award   foundation finland appendix migration adopt appendix summarize adopt migrate monolithic microservice migration microservices april software architect consultant migration microservices analyze feasibility potential usefulness migration estimate evaluate availability resource migrate despite estimate initial due migration overhead microservices increase development velocity enable independently therefore reduce hassle implement feature moreover hire consultant development microservices decompose monolithic microservices  development december implement critical bug fix frame developer training microservices software architect consultant analysis monolithic migration january compose internal developer consultant implement microservice consultant microservices internal member experienced developer java java develop microservice training migration implement identification decomposition option architectural guideline migration software architect consultant slice independent microservices analyze internal dependency structure identify decomposition option service correspond business capability propose architectural guideline extract microservices microservices communicate directly publish subscribe communicate RabbitMQ message bus moreover temporarily RabbitMQ api gateway finally involve member prioritization microservices service developed priority priority assign criterion service priority bug implementation microservice enable developer completely develop scratch fix issue microservices prioritize business priority constraint impose december april service migrate priority adapt tax implementation microservice implement regulation microservice instead implement monolithic migrate later microservice risk component monolithic issue arisen implementation microservice consultant skeleton sample microservice continuous delivery pipeline gitlab CI implementation microservices implementation microservice gradually implementation microservices propose appendix protocol report runeson höst important report protocol purpose report protocol adopt guideline recommend purpose protocol define detailed procedure collection analysis raw data enable researcher replicate context sub sub automate TD analysis data code TD migration sub focus understand usefulness TD analysis qualitative insight procedure collection analysis sub sub automate TD analysis analyze TD project sonarqube sonarqube version procedure automatic TD analysis access source code possibility execute sonarqube code purpose author schedule weekly access source code data execute analysis nda analysis perform server desk researcher virtual machine core GB ram perform analysis install sonarqube data collection analyze commit monolithic project august sonarqube default model extract data sonarqube apis sonarqube analysis commits analyze commit monolithic project august sonarqube default model purpose developed script checkout commit git repository chronological execute sonarqube analysis sonar scanner maven important analysis perform library private maven repository host server guarantee successful compilation sonarqube analysis analyze separately microservices approach data extraction sonarqube  microservices analyze sonarqube extract data related project sonarqube api sonarqube exporter version sonarqube exporter extract sonarqube project issue csv format sonarqube exporter structure technical debt dataset report analyze sonarqube code code complexity amount comment issue issue report sonarqube sub focus purpose focus gain qualitative insight sonarqube focus semi structure interview goal discus migration microservices beneficial participant experienced benefit focus moderate author focus session audio obtain consent participant relevant transcribed cod moderator focus verify author procedure focus limited issue sufficient allocate participant comprehend issue meaningful discussion interaction selection participant participant  developer invite member involve development monolithic microservice developer monolithic focus session invitation email potential participant reporting session audio focus session conduction session moderate author carefully manage schedule contribution allocate session initiate welcome participant inform consent participant data audio session moderator introduction goal session introductory session min topic another task moderator session discussion participant  task identification benefit issue perceive migration microservices issue benefit collaboratively benefit issue member issue benefit issue benefit issue issue benefit merge exist identification perceive quality quality collaboratively discus quality moderator iso IEC quality characteristic functionality performance efficiency compatibility usability reliability security maintainability portability participant quality whiteboard quality issue benefit merge exist identification perceive TD moderator introduce concept TD participant discus TD increase identification postpone activity migration microservices activity postpone migration postpone development microservices collaboratively discus activity associate quality characteristic report feedback sonarqube analysis moderator sonarqube analysis participant discussion sonarqube analysis wrap research focus task task driven benefit issue perceive migration microservices quality code migration microservices TD decrease migration microservices postpone technical activity migration microservices