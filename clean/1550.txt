software crash usually harm fault crash crash fault research topic stack trace crash report usually contains abundant information related crash helpful crash recently researcher extract feature crash construct classification model feature predict crash fault resides stack trace accelerate debug debug effort apply metric iml crash data crash fault residence prediction mahalanobis distance metric quality feature representation reduce distance crash instance label increase distance crash instance label addition loss function loss cope imbalanced issue crash data source software project iml performs significantly sample ensemble imbalanced performance indicator previous keywords crash fault residence prediction stack trace metric imbalanced introduction nowadays software played significant role daily due variety uncontrollable programmer software fault daily development maintenance serious fault program exception failure unexpectedly software crash terrible situation user negatively affect reputation software develop software crash impractical critical crash residence fault crash crash fault programmer focus correspond code location greatly promote efficiency software development improve quality quickly code crash fault development software usually crash reporting automatically manage crash report crash crash report contains source data crash circumstance crash site environment crash stack trace stack trace exception crash location trajectory series function program exception thrown empirical mozilla software crash fault function reside inside stack trace crash fault exactly information function stack trace crash fault resides inside stack trace developer focus code correspond function whereas crash fault function resides outside stack trace developer function sequence involves inspect massive source code therefore predict function crash fault resides stack trace promote crash localization developer quickly code review prediction crash fault residence beneficial optimize allocation debug resource inspection effort crash fault residence prediction essential research topic software quality assurance activity issue propose  automatically detect faulty code crash exactly information function stack trace specifically simulated crash fault program mutation crash instance extract feature faulty code stack trace label information crash fault bug fix traditional classifier model label data predict crash fault residence submit crash treat crash fault residence prediction typical binary classification performance classification model heavily relies quality data representation transform feature quality feature representation potential promote prediction performance crash fault residence addition data crash instance reside inside stack trace reside outside stack trace data inherent characteristic imbalance characteristic negatively impact performance classification model critical alleviate imbalanced issue performance improvement propose crash fault residence prediction model feature engineering imbalanced metric iml address issue iml feature representation apply mahalanobis distance metric crash instance data aim enlarge distance crash instance label shorten distance crash instance label meanwhile iml address imbalanced issue decompose loss function accord label crash instance evaluate effectiveness iml predict crash fault residence conduct benchmark dataset consists source software project performance indicator across project iml achieves average crash instance inside stack trace average crash instance outside stack trace average mcc experimental iml achieves significantly performance sample imbalanced ensemble imbalanced performance indicator summary contribution propose address feature representation imbalanced issue crash fault residence prediction novel metric iml iml metric  discriminative feature representation utilizes improve loss function alleviate adverse impact imbalance comprehensively evaluate iml source software project performance indicator experimental significant superiority iml baseline comparison remainder organize introduce background software crash stack trace previous stack trace fault localization technical detail iml illustrate experimental setup benchmark dataset performance indicator statistic data partition parameter configuration report experimental threat validity finally conclude related software crash stack trace crash occurs software function properly exit serious manifestation software failure crash prioritize fix correspond crash information helpful defect fix crash reporting automatically stack trace information stack trace information related exception crash exception sequence function exception thrown information crash reproduction crash fault localization stack trace multiple assume frame frame frame thrown exception crash frame information function code frame frame frame location exception thrown frame frame initial function frame frame function code stack trace previous faulty code function frame illustrate application scenario crash fault residence prediction iml assume project develop software historical crash data label previous development crashed member correspond stack trace frame without member sequence function stack trace involves review code debug effort member historical label crash data metric representation classification model predict crash fault locates stack trace member carefully review code frame faulty code fix prediction greatly promote debug fault localization stack trace relevant stack trace fault crash bug localization resort stack trace information faulty function sometimes file schr√∂ter conduct empirical evidence stack trace important information developer eclipse project debug addition crash fault typically frame stack trace java exception stack trace helpful analyze fix bug program propose combine dynamic information generate stack trace static analysis fault null pointer exception conduct version ant project effective propose  defective file crash correlation identify stack trace firefox eclipse project  achieve precision recall project respectively propose static  bug localization stack trace similarity text retrieval textual similarity project  achieve performance lucene propose  crash fault function  apply static analysis crash stack generate approximate crash trace function crash trace  factor calculate suspicious function crash mozilla  outperform conventional stack significantly propose statistical fault localization framework function crash fault framework consist instrumentation static analysis generation passing fail execution trace suspiciousness calculation ochiai version firefox project framework crash fault function version respectively propose BRTracer identify faulty file segmentation stack trace analysis project demonstrate BRTracer perform significantly representation buglocator propose  induce crash fault  combine traditional code characteristic crash reporting information classification model data historical fix crash calculate probability induce crash release version netbeans project illustrate  superior information retrieval fault localization usually calculate suspicious function fault applies machine predict crash crash fault function information stack trace locates faulty code code function crash fault residence prediction propose  however perform conversion processing data feature representation propose project model bda predict crash fault residence project label data another project however imbalanced issue account performance project model usually constrain distribution difference across data metric quality data representation imbalanced issue feature representation addition conduct crash fault residence prediction data within project distribution difference issue ignore imbalanced metric iml novel representation focus metric imbalanced scenario detail iml feature representation crash data notation assume feature crash instance correspond label denotes crash instance denotes label crash instance feature dimension indicates correspond crash fault resides inside stack trace InTrace whereas indicates correspond crash fault resides outside stack trace OutTrace define label data indicates label crash instance assume data label crash instance define indicates positive crash instance label InTrace indicates negative crash instance label OutTrace crash instance data positive crash instance negative crash instance data imbalanced metric metric similarity reconstructs data reasonable latent similarity crash instance crash instance label crash instance label mahalanobis distance commonly distance metric latent distance suitable classification task NN model mahalanobis distance regard improvement version euclidean distance inconsistent related various dimension euclidean distance euclidean distance crash instance define identify matrix mahalanobis distance regard modification euclidean distance define positive semi definite psd matrix decompose linear projection induced rank rewrite mahalanobis distance crash instance equivalent euclidean distance mapping projection dimensional mahalanobis distance metric aim minimize loss crash instance data express regularization psd constraint frobenius norm mahalanobis metric euclidean distance satisfy semantic constraint imbalanced metric disadvantage metric formulation loss function treat crash instance equally crash instance without correspond label treatment suitable imbalanced crash data positive crash instance label InTrace minority optimize metric formulation decompose loss function multiple accord label crash instance crash instance purpose reduce negative imbalance specifically crash instance loss function decompose hinge loss maximum inside bracket margin parameter expression decompose loss function loss function distance crash instance label generate loss loss function aim narrow distance crash instance label loss function distance crash instance label loss loss function aim enlarge distance crash instance label plus margin loss function denote crash instance label OutTrace denote crash instance label InTrace distance loss function closer lessen distance distance loss function apart enlarge distance loss crash instance district scenario mahalanobis distance imbalanced metric formalize convex expression define subset respectively parameter balance crash instance label closer crash instance label apart decomposition loss function metric treat loss crash instance differently image KB image loss function difference metric imbalanced metric former crash instance subset weigh latter diverse crash instance data intuitively subset impact loss function subset positive crash instance minority loss purpose iml employ strategy assign loss function accord correspond subset strategy enables treat loss function subset differently metric robust imbalanced data crash instance subset respectively inefficient subset metric data consist crash instance strategy reduce randomly crash instance another carefully crash instance former strategy generate subset crash instance data usually imbalanced negative crash instance randomly multiple instance label occupy majority data latter crash instance strategy selects multiple neighborhood label positive crash instance generate subset negative crash instance generate subset strategy adapt imbalanced data iml employ strategy reduce imbalance data account statistic information project setup detail benchmark dataset information dataset correspond collection performance indicator statistic classification model parameter configuration data partition benchmark dataset evaluate performance iml crash fault residence prediction task conduct publicly available benchmark dataset previous dataset consists source java project apache codec apache collection apache IO jsoup  mango ormlite core codec encoders decoder collection powerful data structure development important java application IO library assist development IO functionality jsoup java html parser directly parse url address html text content  plug par sql statement translates hierarchy java mango performance distribute framework relational mapping ormlite core package core functionality java database connectivity android package information project version mutant program mutation mutant mutant without passing execution mutant remain crash instance remove useless mutant crash percentage crash instance inside stack trace InTrace crash fault mutant reserve remove useless  consist mutant stack trace   data generate crash fault extract feature label crash fault residence brief description generate crash fault obtain crash fault fault project mutation pit simulate crash fault previous chose default mutation operator conditionals boundary mutator increment mutator invert negative mutator math mutator negate conditionals mutator return mutator void mutator generate program mutation discard mutant without crash remain crash instance extract feature feature crash fault extract java compiler  static program analysis transformation extract feature feature extract stack trace ST source code frame frame TF BF respectively normalize TF BF NTF  respectively feature extract stack trace potential characterize difficulty crash feature extract frame program crash feature extract frame reflect information initial function brief description feature brief description extract feature crash fault  description ST  related stack trace ST  exception crash  frame stack trace  stack trace  function stack trace  overload function exists stack trace   function   function  java file project  project TF BF feature related frame TF frame BF TF BF  local variable TF BF file TF BF function constructor TF BF import package TF BF inherit others TF BF code comment TF BF function  code TF BF parameter TF BF local variable TF BF statement TF BF loop TF BF statement TF BF statement TF BF statement TF BF statement TF BF TF BF TF BF finally TF BF assignment statement TF BF function TF BF return statement TF BF unary operator TF BF binary operator NTF  normalize feature TF NTF BF  code NTF  TF TF BF BF NTF  TF TF BF BF NTF  TF TF BF BF NTF  TF TF BF BF label crash fault residence residence label crash fault frame function crash fault label InTrace code information frame stack trace crash fault resides inside stack trace otherwise crash fault label OutTrace label collection bug fix performance indicator predict residence crash fault binary classification task employ commonly indicator matthew correlation coefficient mcc information retrieval evaluate performance iml calculate indicator define positive crash instance positive TP denotes crash fault label InTrace predict InTrace false negative FN denotes crash fault label InTrace predict OutTrace negative TN denotes crash fault label OutTrace predict OutTrace false positive FP denotes crash fault label OutTrace predict InTrace commonly indicator calculate positive crash instance precision positive crash instance define ratio crash instance label InTrace correctly predict crash instance predict InTrace recall positive crash instance define ratio crash instance label InTrace correctly predict crash instance label InTrace harmonic similarly define negative crash instance precision recall negative crash instance negative crash instance define mcc essentially correlation coefficient actual predict classification model comprehensively considers TP TN FP FN deem relatively balance indicator imbalanced data mcc positive crash instance define similarly mcc negative crash instance define accord definition mcc comprehensively evaluate overall performance label mcc mcc predict crash instance completely consistent actual mcc predict completely inconsistent actual mcc performance random prediction indicator mcc performance evaluation widely previous software engineering task image KB image framework scott knott esd statistic conduct significant analysis performance difference iml comparative statistical scott knott difference  scott knott employ hierarchical cluster algorithm significant performance difference  improve version scott knott via normality correction correction relieve limitation specifically   normality requirement performance apply transform preprocess merges negligible cohen delta quantify commonly friedman nemenyi scott knott advantage cluster multiple completely non overlap significantly difference scott knott esd analyze input  indicator project correspond output rank project input  output previous correspond output rank project rank achieves performance classification model obtain feature representation crash data via iml classification model conduct prediction task mahalanobis distance imbalanced metric improve accuracy knn classifier latent optimization goal sample belong NN learner instance classifier label crash instance belongs NN closest instance crash instance training label belong finally NN assigns label instance prediction parameter configuration iml parameter tune margin parameter regularization parameter balance parameter empirically previous grid optimal combination parameter training validation apply optimal combination NN classifier empirically predict residence crash fault data partition investigate effectiveness iml predict crash fault residence stratify sample data training validation specifically randomly crash instance label InTrace OutTrace remain crash instance randomly crash instance label InTrace OutTrace training remain crash instance validation stratify sample ensures ratio crash instance data reduce randomness bias data partition data partition neutralize fluctuation performance report correspond average standard deviation indicator stratify sample multiple  reduce variability random commonly previous software engineering evaluation iml sample project  codec collection IO jsoup  mango ormlite core average iml sample project  codec collection IO jsoup  mango ormlite core average mcc iml sample project  codec collection IO jsoup  mango ormlite core average RQ iml perform sample imbalanced mention iml metric imbalanced data sample widely imbalanced propose investigate iml effective achieve prediction performance crash fault residence sample comparative sample apply training comparison comparative iml conduct training baseline briefly described ROS random sample randomly duplicate crash instance minority crash instance label InTrace rus random sample randomly remove crash instance majority crash instance label OutTrace SMO synthetic minority oversampling technique synthesizes crash instance minority interpolation  SMO sample tomek link data cleaning  SMO sample edit neighbour data cleaning  borderline SMO algorithm generate synthetic crash instance minority  svm algorithm detect crash instance generate synthetic crash instance SMO minority ADASYN performs sample  synthetic sample approach minority metric preprocess training treat comparison report indicator correspond standard deviation bracket denotes standard deviation iml sample imbalanced mcc respectively observation image KB image scott knott esd iml sample iml ensemble project  codec collection IO jsoup  mango ormlite core average iml ensemble project  codec collection IO jsoup  mango ormlite core average mcc iml ensemble project  codec collection IO jsoup  mango ormlite core average iml achieves performance comparative sample imbalanced project average across project average baseline iml achieves improvement ROS rus average improvement iml achieves performance comparative sample imbalanced project average across project average baseline iml achieves improvement  average improvement mcc iml achieves performance comparative sample imbalanced project average mcc across project average mcc baseline iml achieves improvement rus average improvement fourth visualizes correspond statistical  iml sample imbalanced significant difference drawn iml rank significant difference performance baseline indicator iml effective achieve significantly prediction performance crash fault residence sample image KB image scott knott esd iml ensemble iml classifier project       NNIML NNIML NNIML NNIML NN codec collection IO jsoup  mango ormlite core average iml classifier project       NNIML NNIML NNIML NNIML NN codec collection IO jsoup  mango ormlite core average iml classifier project       NNIML NNIML NNIML NNIML NN codec collection IO jsoup  mango ormlite core average RQ iml superior ensemble imbalanced ensemble creates multiple model model improves overall performance imbalanced data integrate output model propose investigate iml performs ensemble comparative ensemble comparison comparative iml conduct training brief description baseline bagging bagging resamples crash instance generate multiple subset model subset average output model   classifier variant  additional balance training rus   classifier rus bootstrap sample balance   classifier rus sample iteration boost algorithm alleviate imbalanced issue   classifier creates ensemble iteratively random crash instance subset report indicator correspond standard deviation iml ensemble imbalanced mcc respectively observation iml achieves performance comparative ensemble imbalanced project average across project average baseline iml achieves improvement   average improvement iml achieves performance comparative ensemble imbalanced project average across project average baseline iml achieves improvement bagging  average improvement mcc iml achieves performance comparative ensemble imbalanced project average mcc across project average mcc baseline iml achieves improvement   average improvement fourth visualizes correspond statistical  iml ensemble imbalanced iml rank significant performance difference baseline indicator iml performs significantly ensemble crash fault residence prediction task RQ iml classifier metric customize NN model performance improvement NN classifier classification model propose investigate classifier impact performance iml addition classifier parameter research investigate NN classifier parameter iml research additional typical classifier naive bayes NB decision DT vector machine svm logistic regression LR random RF comparison besides discus performance NN classifier distinct parameter setting empirically additional setting comparison report indicator correspond standard deviation iml classifier mcc respectively iml NN classifier achieves performance comparative classifier project average across project average baseline iml NN classifier achieves improvement NN classifier svm average improvement iml NN classifier achieves performance comparative classifier project average across project average baseline iml NN classifier achieves improvement svm NB average improvement mcc iml NN classifier achieves performance comparative classifier project average mcc across project average mcc baseline iml NN classifier achieves improvement NN svm average improvement fourth visualizes correspond statistical  iml classifier iml rank significant performance difference comparative classifier indicator NN classifier choice iml achieve average performance predict crash fault residence threat validity external validity generalization experimental threatens external validity project benchmark dataset developed java future replication verify conclusion apply iml project developed although crash instance dataset generate artificial mutation previous fault mutation substitute fault empirical assessment derive artificial simulated crash fault basically generalize internal validity fault implementation threaten internal validity minimize validity implement iml modify source code author adapt crash fault residence prediction task besides library scikit implement shelf imbalanced comparative aim avoid potential mistake implementation construct validity suitability evaluation indicator statistic threatens construct validity mcc evaluate effectiveness iml crash fault residence prediction task mcc comprehensive performance indicator suitable precision recall addition statistic  significance analysis statistic generates non overlap significant difference multiple traditional statistic friedman nemenyi conclusion propose crash fault residence prediction model novel metric iml learns quality feature representation mahalanobis distance metric tackle imbalanced issue assign loss function crash instance accord label source software project iml achieves significantly prediction performance crash fault residence task sample ensemble imbalanced future adapt iml project prediction scenario addition investigate effectiveness project crash