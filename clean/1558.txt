introduces notion constrain array clas mathematical fault localization software clas extend ordinary array applicable constraint parameter constraint cla enhances applicability array practical proposes algorithm construct clas experimental propose algorithm practical previous keywords combinatorial interaction array array software introduction combinatorial interaction strategy software strategy SUT model finite parameter factor interaction empirical interaction involve fairly factor typically suffices reveal latent fault developed construct combinatorial interaction array CAs survey  nie leung important direction extend capability combinatorial interaction fault localization capability array LAs suite capability   LAs define LA enables failure trigger interaction outcome purpose extend notion LAs expand applicability practical specifically propose constrain array clas detect failure trigger interaction presence constraint constraint prohibit constraint handle combinatorial interaction focus previous construct constrain array cca consist constraint satisfy interaction constraint satisfy clas ability fault localization CCAs however clas additional consideration constraint specifically constraint impossible distinguish failure trigger interaction interaction another hence treatment inherently indistinguishable extend LAs concept distinguishability formal definition clas propose generation clas demonstrate generation practical organize describes SUT model definition array related notion definition clas theorem computational generate clas experimental obtain apply instance summarizes related concludes future direction preliminary SUT model interaction SUT model factor domain factor mapping constraint domain consists consecutive integer valid iff satisfies constraint SUT denote valid factor interaction interaction strength hence contains interaction interaction treat interchangeably iff interaction empty instead denote interaction image KB image SUT constraint impossible interaction interaction cannot valid interaction invalid formally interaction valid valid invalid otherwise classic phone SUT model factor domain constraint consist valid whereas valid invalid violates fourth constraint similarly interaction valid occurs valid invalid violates constraint occurs valid suite define possibly empty collection array array interaction denote interaction interaction define denote empty interaction clearly comparison interaction faulty fault interaction faulty failure fault execute fail iff faulty interaction otherwise pas hence execute suite vector pas fail array array constraint array CA detect existence fault trigger interaction strength interaction formally CA define array LA faulty interaction   introduce LAs   definition LAs definition LAs namely LAs LAs notion independence interaction strength interaction interaction independent iff exist interaction interaction interaction independent interaction faulty failure mask failure limit scope fault localization independent interaction notion independent interaction LAs define remain array namely LAs LAs exist trivial otherwise equivalent LAs LA LA pas fail obtain faulty interaction identify fail faulty interaction however array cannot constraint valid cannot execute reality constrain array definition clas presence constraint suite consist valid assume array suite consists possibly empty valid circumvent instead CAs constrain array CCAs valid interaction cca strength denote cca define cca array valid interaction strength easy cca cca therefore definition equivalent cca incorporate constraint LA crucial consideration addition presence invalid interaction constraint impossible identify faulty interaction identify constraint exist notion distinguishability formally define clas definition valid interaction distinguishable iff array consist valid distinguishable indistinguishable valid contains interaction none exactly interaction invalid hence array exists constraint indistinguishable interaction interaction indistinguishable constraint remove factor another extreme identical clearly identical interaction indistinguishable definition valid interaction valid interaction strength array consists valid cla iff correspond extreme interaction exist cla intuition definition SUT faulty interaction outcome obtain execute obtain SUT faulty interaction unless interaction distinguishable algorithm identify faulty interaction directly obtain definition cla algorithm amount independent fail assumption strength faulty interaction satisfies faulty interaction interaction indistinguishable former clas clas SUT respectively clas array valid clas cla considerably array consists valid cla almost exhaustive valid verify indeed clas sufficient interaction strength valid interaction distinguishable distinct interaction distinguishable interaction distinguishable parameter assume faulty interaction cca suite fails outcome identical another interaction instead faulty impossible interaction faulty outcome contrast cla fail interaction fails faulty whereas fails faulty hence safely conclude faulty interaction definition clas ensure accurate fault detection unless interaction indistinguishable faulty indistinguishable cla suite fail whenever interaction faulty however outcome occurs another interaction distinguishable faulty clas guarantee outcome interaction distinguishable CCAs guarantee cca fail faulty outcome arises faulty narrow candidate fault clas observation definition observation cla cla cla cla cla cla cla cla cla respectively cla cla cla cla respectively observation constraint LA exist cla equivalent observation suppose SUT constraint LA exists parameter cla parameter cla parameter LA possibly parameter proof suppose LA interaction distinguishable hence cla suppose array cla distinguishable implies distinguishable trivially hence LA argument applies LAs LAs exist observation equivalence LA cla LA actually exists clas exist constraint theorem LAs exist guarantee existence clas definition  indistinguishable interaction fault localization illustrates definition LAs array SUT indistinguishable existence indistinguishable interaction violates definition LAs contrast clas permit existence indistinguishable interaction distinguish interaction distinguishable hence clas exist SUT LAs exist clas effort variant LAs lemma valid interaction distinguishable iff valid interaction interaction respectively valid proof suppose valid array contains suppose valid valid valid hence theorem array consist valid cla proof interaction distinguishable lemma valid exists contains argument proof lemma although theorem guarantee suite consist valid cla desirable suite computational generate clas computational generation clas focus attention generation clas practical demonstrate previous exceeds clas become substantially CCAs offset benefit combinatorial interaction practical suite distinguish situation fault exists hypothesize fault occurs clas instead clas propose algorithm generate clas although research exists generation LAs already research cca generation combinatorial interaction propose algorithm exist cca generation algorithm generate clas becomes theorem prof cca cla allows approach cca generate shelf algorithm cla obtain remove redundant cca theoretical theorem integer array cca cla proof definition array cla iff distinguishable suppose array cca distinguishable cca argument clearly proof distinguishable factor involve interaction interaction factor cca hence interaction factor factor distinguishable valid suppose factor denote otherwise interaction valid valid interaction cca contains hence argument applies distinguishable theorem namely theorem variant theorem   CA LA theorem cca already cla however CCAs usually clas redundant remove obtain clas theorem prof cla cla equivalent useful redundant redundant removal invalidate array cla instead cla simplifies restrict interaction instead lemma suppose array cla cca proof cla hence theorem array cla cla proof suppose cla lemma cca theorem cla recall cla iff distinguishable trivially independent indistinguishable cca therefore clearly argument proof assume without lose generality assume strength distinguishable cla distinguishable cla remain assume distinguishable assumption assumption factor involve interaction factor factor exist otherwise denote interaction valid strength cca strength interaction interaction obtain extend factor valid distinguishable cla directly implies implies hence valid simultaneously valid  argument invalid cca hence algorithm image KB image algorithm propose algorithm generate clas algorithm SUT model strength input finally return cla algorithm heuristic algorithm guarantee output cla optimal indeed clas algorithm function  exist algorithm generate cca function  enumerate interaction cca contains interaction obtain valid interaction interaction cca valid cca contains valid interaction valid interaction compute mapping iteration loop randomly chosen compute mapping array obtain remove function  obtain enumerate interaction interaction iteration loop remove remove remains cla equivalently cla removal perform valid interaction implies implies corresponds valid mutually distinguishable interaction distinguishable distinguishable iff cla clearly interaction deletion alter hence perform examine interaction instead interaction perform interaction another interaction loop iterate initial examine finally becomes cla reduce output clas algorithm initial cca generate identical clas finally obtain depends delete suppose valid interaction distinguishable suppose mapping interaction delete delete delete mapping becomes deletion interaction lose identical interaction however delete delete delete influence clas concrete clas obtain cca specifically clas generate cca cla delete whereas cla delete underlined evaluation generation clas strength propose generation algorithm evaluate focus generation clas evaluation perform respect criterion generation clas comparison generation algorithm smt satisfiability modulo theory solver propose knowledge exist another generates clas smt generation algorithm smt generation algorithm regard adaptation constraint generate CCAs LAs algorithm sufficient existence cla equivalent cla encode conjunction logic expression algorithm smt solver satisfiable valuation variable logic expression satisfiable valuation interpret cla satisfiable valuation non existence cla conclude encode cla array variable array encode variable accord definition clas definition logic expression enforces array satisfy SUT constraint another guarantee valid interaction ensures enforces valid interaction mutually distinguishable interaction cla successfully generate within timeout decrease algorithm smt solver prof non existence clas algorithm fails terminate within timeout repetition research setting research understand experimental RQ propose algorithm perform respect generation generate clas RQ performance propose algorithm smt algorithm RQ propose algorithm perform apply algorithm instance numbered benchmark  benchmark benchmark namely benchmark instance propose algorithm execute nondeterministic algorithm smt algorithm deterministic initial smt algorithm clas obtain propose algorithm smt algorithm ensures output cla smt algorithm obtain propose heuristic algorithm conduct machine ghz core intel xeon cpu GB memory MacOS  program implement propose algorithm cit bach cca generator implementation smt algorithm  smt solver implementation timeout algorithm leftmost benchmark IDs fourth factor valid interaction benchmark fifth marked asterisk unordered indistinguishable remain propose algorithm smt generation algorithm propose algorithm maximum minimum average generate clas label average cca parenthesis CCAs generate  algorithm maximum minimum average sum generate CCAs delete redundant CCAs rightmost smt algorithm instance cla obtain algorithm cla array denotes cla algorithm iterate decrease fail within timeout prof  cla latter cla obtain immediately previous iteration guaranteed optimal bold font optimal clas iteration initial timeout experimental comparison generation cla strength benchmark IDs detailed structure addition generation clas apply propose generation clas label strength generate cla label valid interaction benchmark label unordered interaction mutually indistinguishable generation clas clas average generation average generate clas average average respectively timeout data indicates correspond execution within data indicates CCAs cannot construct exceeds parameter experimental RQ propose heuristic algorithm clas benchmark instance exceptional instance apache gcc nearly factor benchmark algorithm terminate successfully clas within limit propose algorithm generate clas considerably initial CCAs reduction rate varies instance fold reduction benchmark namely insurance  service storage storage summary propose heuristic algorithm generate clas within reasonable unless clas algorithm substantially initial CCAs experimental cla propose heuristic algorithm smt algorithm SUT propose  cla    cca  aircraft movie   banking banking concurrency  healthcare healthcare healthcare healthcare insurance    service storage storage storage storage storage  telecom apache bugzilla  spin  RQ algorithm propose algorithm distinguish benchmark movie concurrency propose algorithm achieve magnitude reduction smt algorithm benchmark propose algorithm difference explain generate cla smt algorithm constraint satisfaction logic expression approach limit clas propose heuristic simply delete examine initial smt algorithm cla obtain propose heuristic algorithm hence clas generate smt algorithm guaranteed exceed generate propose heuristic algorithm experimental smt algorithm successful decrease clas typically suggests propose algorithm rarely minimum optimal clas CCAs generate  superset optimal clas another clas depends delete delete unlikely optimal cla summary propose heuristic algorithm faster smt algorithm smt algorithm handle algorithm superior yield clas propose heuristic algorithm RQ propose algorithm clas instance benchmark namely apache gcc generation clas within benchmark model application hence conclude although improvement desirable propose algorithm generation clas strength propose cla generation algorithm  clas examine scalability respect strength research experimental average cla propose algorithm strength  average  RQ propose algorithm perform strength clas relatively apply propose algorithm benchmark clas strength respectively namely exclude consist factor propose algorithm summarizes obtain marked respectively valid interaction strength indistinguishable valid interaction strength label average propose algorithm obtain clas average generate clas generation increase exponentially strength increase benchmark growth growth generation timeout benchmark algorithm generate clas propose algorithm fail generate clas benchmark algorithm already fail enumerate valid interaction enumeration valid interaction enumerate interaction CDA generation within timeout RQ propose algorithm handle strength handle improvement algorithm performance finally valid interaction benchmark valid interaction valid interaction constraint exceptional strength necessarily computation computation  apply cla actual program examine clas respect capability identify faulty interaction induced software bug definition clas ensure faulty interaction underlie assumption specifically clas faulty interaction strength interaction faulty interaction however assumption necessarily reality aim research RQ clas detect faulty interaction actual bug assumption strength faulty interaction procedure construct SUT model application bug source code application program collection faulty version program exhaustive identify faulty interaction bug identify faulty interaction clas estimate faulty interaction obtain clas parameter clas experimental chose flex gzip application obtain source code software artifact infrastructure repository sir  lincoln sir program associate specification file extend specification specification file option input requirement specification option sir environment program encompasses bug facility verify input output chain automatic script generation analyze specification file application SUT model constraint SUT model bug facility sir bug flex gzip exactly bug version program exhaustive conduct application construct cca strength factor SUT model application cca exhaustive suite consists valid script cca apply faulty version application outcome faulty interaction identify compute minimal interaction interaction occurs fail fail contains interaction minimal satisfies minimal unique interaction identify faulty version SUT model completely application fail faulty version bug manifest summarize bug designate sir propose algorithm generate cla SUT model derive script cla apply faulty program faulty interaction cla exhaustive bug   AA array array index array index AA var var var var AA var var var var var var  KL assignment var var var var faulty KP loop var var experimental summarize leftmost application bug exhaustive cla consists fail fail faulty interaction faulty interaction exhaustive experimental faulty interaction      AA  fst   AA   AA  FS align       KL   ASCII  ASCII faulty KP  ASCII  ASCII  scanner fst scanner  alternate   lex bypass  equivalence  scanner FS scan  scan option option faulty version denote AA faulty KP exactly faulty interaction strength derive clas successfully identify faulty interaction theory AA faulty interaction strength namely  fst   cla fail faulty interaction interaction fail remain however assume existence faulty interaction strength faulty interaction identify interaction coincide outcome suggests faulty interaction cannot exactly outcome obtain clas informative clue similarly AA AA faulty interaction faulty interaction strength cla correctly faulty interaction strength faulty interaction namely  FS align  strength faulty interaction affect identification faulty interaction faulty KL faulty  strength definition cla interaction outcome interaction  ASCII identify faulty interaction exactly useful fault localization subset faulty interaction   ASCII although limited RQ obtain RQ derive clas fail faulty interaction faulty interaction faulty interaction strength information useful localization faulty interaction related constraint handle important issue combinatorial interaction approach coin  recent survey constraint handle combinatorial interaction survey mention research address contrast research LAs stage notion LAs originally propose   publish discus mathematical LAs propose mathematical construction LAs propose computational generation LAs none previous constraint recent survey array research application     mathematical LAs detect array error array knowledge attempt report incorporate constraint array introduce concept cla jin  preprint version extends version incorporate subsequent heuristic algorithm obtain clas originally generate clas instead clas extends theorem namely theorem algorithm yield clas comprehensive experimental faster implementation algorithm smt algorithm propose algorithm address faulty interaction without mathematical mention propose adaptive strategy adaptive strategy interactively execute gradually narrow candidate faulty interaction cla approach non adaptive benefit non adaptive approach consume perform parallel identify multiple faulty interaction adaptive approach machine technique apply outcome identify suspicious faulty interaction practical issue fault localization industrial software development cycle  discus faulty program statement identify faulty interaction important address conclusion introduce notion constrain array cla generalize array incorporate constraint parameter extension allows array apply usually constraint clas heuristic algorithm generate clas faulty interaction experimental practical instance propose algorithm construct clas reasonable multiple fault exist outcome clas useful clue identify faulty interaction candidate faulty interaction narrow interaction fail however outcome fault multiple fault simultaneously cla interaction faulty interaction fail outcome interaction faulty possibility multiple fault account conclude faulty interaction detect array address absence constraint direction future research adapt detect array SUTs constraint attempt direction future research direction develop algorithm cla generation extend clas handle invalid input negative scenario