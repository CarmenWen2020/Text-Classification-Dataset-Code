context software project interaction stakeholder behavior driven development BDD facilitates collaboration stakeholder adapt BDD improve cooperation project objective objective propose empirically evaluate BDD adapt project technology transfer model propose BDD project conduct workshop session understand challenge benefit BDD later industrial evaluation perform practitioner investigation understand business aspect requirement improve quality reuse artifact organization benefit BDD practitioner identify challenge specification ownership behavior adoption software project versioning behavior propose address challenge evaluate practitioner conclusion evaluation BDD adapt facilitate interaction software project software feedback practitioner improve propose previous keywords behavior driven BDD software introduction software development complex involves various stakeholder interaction conceptualize develop release software software transform exist business agile customer orient robust business setup automate manual developed exist commercial business industrial automation telecommunication robotics software fundamental transformation exist business become software intensive developed project define software development project however develop software proven challenge task characteristic parallel development distribute misunderstood requirement effort estimation issue researcher explore improve development reduce manageable improve requirement engineering knowledge engineering facilitate development complex interaction communication verification activity various sub multiple sub involve synchronization activity release management challenge associate context sub independent deployment micro service component library described project requirement define abstract transform requirement functional requirement alignment requirement verification phase succeed software development described behavior driven development refer BDD driven development methodology align business technical software traditional software development organization business unknown developer tester engineer gap technical business aspect software development BDD introduce objective systematic vocabulary understand requirement customer requirement engineer developer tester specification methodology category acceptance driven development methodology driven development specification driven development acceptance driven development commonly bridge gap business customer technical aspect software BDD aim normal software project without multiple site furthermore lack empirical evidence related BDD software project majority propose theoretical concept associate BDD evaluate software development cycle implementation phase BDD approach improve software development context empirical evidence BDD usefulness project BDD aim enhance communication stakeholder crucial propose BDD adapt software development introduce BDD software development perform empirical investigation benefit challenge associate introduction BDD software project investigation understand exist development identify challenge benefit BDD workshop session outcome workshop session propose evaluate BDD industrial practitioner practitioner perceive useful software development improvement later feedback practitioner revise propose software development background related behavior driven development development research analysis describes discussion related threat validity investigation contains conclusion future background related briefly describes concept software development behavior driven development furthermore related described BDD software development definition behavior driven development BDD requirement described central refer narrative feature behavior acceptance criterion refer scenario multiple scenario behavior feature BDD template behavior feature user login scenario user login user enters username password authentication successful user scenario user user authenticates credential user user behavior feature report feature file feature file requirement document vocabulary feature file stakeholder manager developer tester architect communicate behavior feature file promote understand requirement jørgensen agile software development XP scrum driven development TDD etc software development however introduce challenge modification exist behavior driven development attempt improve TDD collaboration coordination stakeholder previous research communication gap failure customer requirement behavior driven development feature user acceptance criterion customer foster vocabulary organization improve knowledge coordination collaboration feature BDD software development organization enhance customer perspective knowledge organization  wang identify characteristic BDD characteristic ubiquitous business terminology iterative decomposition specification template user scenario automate acceptance readable specification code elaboration behavior development phase literature review  wang limited BDD considerable evaluate BDD context BDD characteristic investigation research community limited described behavior driven development industrial context driven development inspires BDD principle behavior feature specify development behavior fail development development functionality implement fail behavior pas important behavior feature specify business customer BDD specify format behavior although behavior described domain specific  software development software development define development involve across site collaborate develop joint define dingsøyr dependency customer requirement various sub software development verification manage difficulty manage develop deliver project extensively described research literature development conduct empirical identifies cognitive load driver information issue software practitioner software project conduct empirical evaluation developer project requirement engineering related challenge mention challenge research literature development extensive  communicate software requirement correctly software various address related software development described software organization guild improve communication coordination organization industrial software development project address communication information related challenge mapping dingsøyr combination schedule unscheduled meeting improve communication coordination software development project kettunen  succeed development holistic phase software development recent research software development focus individual software development address software development cycle coordination phase requirement development verification phase crucial successfully deliver software development project survey software practitioner coordinate closely deliver successful software software project effort estimation overrun difficulty related coordination multi site development setting empirical evidence software development meeting scrum scrum coordination additional coordination successful delivery software development project customer collaboration knowledge research software development dingsøyr moe future research attempt propose evaluate additional coordination BDD software development context software software challenge investigate challenge complex telecommunication domain multiple defect slippage occurs defect later challenge fault slippage maintenance timeliness fault slippage specific challenge development unclear responsibility vague requirement quality investigate challenge specific development project dependent complexity issue concern maintenance highlight furthermore communication effort difficulty understand specification issue concern coordination challenge specify overall finding align investigate challenge focus regression highlight maintenance communication issue selection prioritization challenge various propose software concern measurement estimation highlight importance phase evaluate estimate effort phase various factor  McIntosh rely software reliability model input proposes visualization visualization highlight important diversity increase visualization benefit highlight timely update status data practitioner positive feedback visualization valuable addition increase complexity automation become important liu mei developed platform automation framework encompasses various activity management execution analysis module initialization scope identification data management procedure management automate data analysis manage schedule propose framework rely grid technology framework built layer specific grid service researcher alternative schedule grid resource swarm intelligence schedule concern average task completion BDD related usage BDD software development objective utilize BDD development context software development research literature BDD development perform informal literature review previous BDD phase software development BDD inspire development technique  propose evaluate evaluation approach conduct source software ERP evaluation describes mapping business analyze impact BDD external code quality internal code quality productivity conduct academia propose development approach BDD context hardware verification propose approach acceptance development phase incorporate quality attribute hardware later develop verify implementation propose approach generate definition semi automatically user enters information recommendation relate definition propose approach detects duplication BDD document predicts code BDD  implement evaluate source project summary related   evaluation traceability requirement BDD  identify impact BDD quality  development BDD context hardware   reuse exist BDD  propose evaluate development BDD development methodology  rahman gao propose architecture reuse BDD scenario   propose approach detects duplication BDD document   identify domain aware BDD   van lessen combine BDD business model facilitate automation  propose evaluate BDD development framework propose framework generate BDD scenario mock implementation scenario consists phase behavior scenario scenario scenario rahman gao propose architecture reuse BDD scenario introduces reuse BDD context micro service approach described evaluation relevant detailed understand approach  propose domain aware BDD scenario demonstrate business aware domain perform application BDD cycle evaluate industrial apply context context clearly define summary previous related usage BDD improve software development related identify benefit challenge BDD context address challenge characteristic identify challenge benefit related BDD survey software practitioner accord critical challenge associate BDD challenge collaborate participant phase lack coach template BDD specification maintenance significant perceive benefit BDD accord participant survey improve ability requirement improve documentation capture domain knowledge understand implementation software important benefit mention earlier challenge without detail context practitioner organization organization  lessen software project BDD combine business model facilitate automation activity approach requirement model business model business analyst BDD script address research gap BDD context enlist benefit challenge summary exist literature previous research described benefit challenge BDD development evaluate benefit challenge BDD context BDD propose project however benefit BDD address challenge project collaboration communication requirement elaboration verification research approach research approach inspire technology transfer model propose identify improvement exist development information documentation discussion observation per BDD address improvement identification benefit challenge BDD context workshop information workshop propose BDD development BDD implement  laboratory later evaluation perform software practitioner industrial survey interview data collection feedback practitioner propose improve detail described research approach identify potential improvement assess exist development analysis industrial setting context industrial understand applicability development develop business organization ericsson develops distribute combination sub organization telecommunication globally employee development model hybrid bespoke driven development development across site sweden germany canada india collaborate software git  etc requirement development delivery organization collaborate deliver participant experienced manager requirement engineer architect manager developer tester service delivery practitioner analysis development organization exist development development occurs hybrid model waterfall agile phase requirement development verification requirement phase requirement engineer develops software requirement business document define template vocabulary requirement engineer consistent requirement document consist code sub developed development majority participant business broken sub business document sub business author business misinterpretation requirement development phase agile meeting development sprint development etc commits delivery date regardless dependent sub development sub software requirement sub organization verification organization prepares domain knowledge manual verify release identify automate java manual readable loss information code requirement development explicitly manager input customer presence quality coverage dependent developer requirement engineer manager review lack input requirement engineer verification important functionality customer spending effort verify functionality customer exist development development deem context BDD release defect handle maintenance phase developed lesson discussion practitioner formulate research agenda BDD overcome issue requirement automation lack input business perspective identify strength weakness BDD context development BDD strength weakness propose BDD suitable software development formulate research evaluate challenge benefit BDD development RQ benefit practitioner associate BDD software project RQ challenge BDD software project RQ BDD apply software development project RQ sub RQ activity BDD apply software development project RQ conclusion concern significance limitation completeness drawn industrial evaluation propose software practitioner usefulness challenge BDD RQ RQ development workshop session qualitative research workshop meeting obtain member specific topic software engineering context workshop feedback practitioner expert increase validity workshop session perform multiple task peer debrief member systematic data collection detail described primary source execution workshop described define research workshop session objective identify issue related introduction BDD development planning workshop workshop session session around workshop agenda participant meeting detail meeting request participant increase workshop session experienced practitioner software practitioner software development requirement management geographical site practitioner understood BDD concept participant understood methodology TDD BDD practitioner suitable experienced software context evaluate identify benefit challenge BDD conduct workshop session workshop session background information BDD discussion BDD lastly discussion focus benefit limitation BDD concern context described background information purpose information BDD practitioner session description topic moderator background information BDD information presentation slide participant session workshop introduce BDD objective concept related BDD implication concept BDD participant understand concept usage discussion BDD practitioner understand BDD inquire various aspect BDD requirement handle configuration management etc participant BDD BDD usage development discussion context practitioner reflect BDD benefit limitation concern exist discussion item moderator discussion relevant BDD participant feedback workshop topic detail session workshop anecdote statement practitioner notebook session summary session relevant consideration workshop participant validation qualitative data workshop analyze constant comparison approach qualitative analysis phase constant comparison identify theme topic data theme qualitative data described guideline constant comparison guideline data analysis workshop aim identify terminology practitioner BDD characteristic terminology benefit challenge duplicate remove remain generate described detail data collection analysis RQ RQ RQ develop candidate RQ perform static validation RQ detail workshop participant   participant  developer manager requirement manager development manager  developer development manager manager requirement manager owner requirement manager manager developer manager develop candidate RQ identify challenge propose address challenge BDD project developed account activity exist development activity BDD benefit challenge identify investigation software practitioner BDD apply development cycle challenge BDD useful organization exist development utilized BDD BDD inspires propose development exist development organization BDD assumes BDD scope limited functionality objective verify functionality assumes behavior feature file develop scenario propose adapt BDD develop feature file sub feature file sub adapt BDD incorporate requirement verification phase software development cycle image KB image BDD software project exist activity mitigate lack competence software development challenge propose development associate software artifact overcome challenge related BDD usefulness software development organization significant difference exist development related earlier automate development phase automate development phase parallel software development phase propose detail activity input output responsible actor conduct lab validation activity evaluate experimental lab validation demonstrate developed propose activity industrial discussion software practitioner behavior feature described aspect practitioner behavior balance personal information customer configure telecommunication behavior customer customer appropriate setting contract phone  balance etc author developed behavior robot framework available  behave framework available  later behavior practitioner various development phase manager requirement engineer developer architect verification engineer development manager demonstrate usage feature file technology stack association code etc demonstration conduct session behavior execute organization environment demonstration evaluate realistic setting demonstration session author feedback practitioner overall practitioner demonstration activity originally propose development however concern already identify outcome perform static validation RQ static validation consists feedback software practitioner seminar presentation survey questionnaire interview petersen wohlin develop feedback practitioner identify usefulness drawback apply investigation conduct questionnaire survey available questionnaire improve feedback later interview software practitioner ericsson perform evaluate improve propose detail evaluation survey questionnaire industrial evaluation questionnaire available questionnaire developed background behavior driven development description propose develop login propose questionnaire evaluate  checklist perform survey software engineering checklist utilized development questionnaire data analysis response per checklist questionnaire classify administrate online questionnaire text input response user detailed questionnaire attempt evaluate significance limitation completeness propose questionnaire significance opinion benefit propose limitation drawback limitation improve completeness remove kindly item recommend remove questionnaire practitioner software organization organization developed criterion involve relevant participant software participant experienced professional software development participant understand development methodology eighteen practitioner organization respond questionnaire feedback practitioner analyze later improve propose non respondent practitioner email reminder maximum role respondent data analysis perform systematically reliably identify interpret feedback questionnaire excel questionnaire data analysis phase qualitative data response analyze constant comparison approach qualitative analysis phase data analysis response broken theme related challenge benefit BDD feedback propose terminology belonging theme categorize analysis survey response practitioner  respondent requirement manager requirement engineer architect developer developer development manager practitioner interview interviewed experienced practitioner identify BDD perceive benefit challenge development evaluate propose interview increase validity credibility identify per robson  classification conduct semi structure interview predetermine interview consist introduction interviewer interviewee introduction BDD evaluation benefit challenge context evaluation activity objective conduct interview identify strength weakness BDD evaluate significance limitation completeness propose identify activity propose exist development organization feedback apply organization interview available author later another author review interview interview pilot practitioner interview available evaluate activity interviewee currently apply activity modification modify reflection activity alternative realize activity improve activity difficulty already interview developed evaluate detail feedback practitioner improve practitioner activity context similarity practitioner improve interviewed experienced software practitioner software development understand development methodology practitioner organization site conduct ericsson information background practitioner interview session min interview permission interview author conduct interview data interview transcribed identify important irrelevant information data analysis qualitative data interview perform thematic analysis described braun clarke thematic analysis identify reporting within data relevant quote cod later code identify theme data  requirement development organization accepts code requirement development theme improve quality requirement analyze data extract useful information email interviewee listing interview correspond confirm information extract raw data interview contains interview practitioner detail interviewee interview  interviewee   min interviewee   min interviewee  min interviewee   min interviewee  min interviewee   min interviewee   min dynamic validation dynamic validation pilot setting investigation activity detail already validate setting candidate however application future extensive resource commitment management dynamic validation conduct future focus dynamic validation activity investigation organize per research RQ benefit practitioner associate BDD software project identify benefit related BDD software project benefit understand business aspect requirement improve quality requirement reuse artifact project organization benefit identify per workshop session detail benefit subsection identify benefit per workshop interview  benefit workshop understand business aspect requirement improve quality requirement reuse artifact project organization workshop understand business aspect requirement improve quality requirement reuse artifact project workshop improve quality requirement workshop improve quality requirement reuse artifact project workshop improve quality requirement organization workshop improve quality requirement organization interview  organization interview improve quality requirement interview improve quality requirement understand business aspect requirement interview improve quality requirement interview  interview improve quality requirement organization interview  understand business aspect requirement understand business aspect requirement participant investigation requirement executable development uniform understand requirement business aspect achieve uniform understand reduce due requirement misunderstanding previous research associate benefit BDD express develop uniform understand requirement accord investigation participant alignment requirement manager developer tester collaboration improve quality improve quality requirement participant investigation BDD improve quality requirement document project requirement user perspective software requirement combine accord investigation participant format BDD isolate precondition business logic requirement improve quality requirement template detailed requirement manager participant investigation BDD textual meaningful suitable understand behavior developer understand usage BDD developer easily understand accord participant identify priority task effort deliver correctly understand developer tester perform developer tester understand software participant workshop mention customer significant competitive advantage organization reuse artifact project project consume costly develop artifact scratch behavior feature described BDD useful artifact development verification phase practitioner behavior reuse organization develop automate furthermore behavior reuse purpose documentation organization automation developer workshop reveal organization already develop BDD scenario however scenario project verification phase introduction BDD requirement automation development phase development cycle exploratory increase quality furthermore participant workshop BDD benefit increase BDD complement data driven approach another session participant organization related automation development development cycle BDD requirement verification RQ challenge BDD software project identify challenge software project ownership lack competence benefit specification behavior project difficulty versioning behavior challenge identify per workshop session detail challenge subsection specification behavior project critical challenge identify workshop relates specify behavior described development accord practitioner project requirement advance requirement clarify elaborate development phase practitioner feature iteration domain expert understand potential user challenge specify behavior BDD identify challenge per workshop interview  challenge workshop specification behavior project ownership maintenance behavior project adoption technology benefit BDD workshop specification behavior project ownership maintenance behavior project difficulty workshop specification behavior project ownership maintenance behavior project benefit BDD versioning behavior workshop specification behavior project software project difficulty workshop specification behavior project ownership maintenance behavior project difficulty workshop specification behavior project ownership maintenance behavior project difficulty interview specification behavior project adoption technology benefit BDD interview specification behavior project ownership maintenance behavior project interview specification behavior project ownership maintenance behavior project interview adoption technology benefit BDD interview  specification behavior project interview software project benefit BDD interview specification behavior project adoption technology benefit BDD ownership maintenance behavior project another vital challenge participant related BDD artifact ownership BDD lack ownership BDD software development phase artifact confusion lack guidance practitioner lack maintenance artifact furthermore ubiquitous BDD maintenance related challenge participant workshop maintenance complicate textual correspond code implementation adoption technology project introduction technology consume practitioner training education productive BDD setup practitioner belonging organization recommend proof concept conduct evaluate BDD suitability interface lack familiarity BDD identify challenge impact BDD adaptation project benefit BDD accord practitioner BDD artifact costly develop project analysis model BDD context ordinary requirement document model BDD rigorous analysis adequate knowledge practitioner development involves collaboration stakeholder requirement development organization collaboration development practitioner mention organization invest exist framework replace framework BDD framework storage retrieval BDD documentation storage setup software project software component developed across site communication iteration inter accord practitioner attend workshop limit factor BDD BDD assumes collaboration stakeholder delivery sub component practitioner involves multiple component deliver development cycle versioning behavior another identify challenge versioning behavior described project stakeholder associate artifact manager realize behavior entirely reflect artifact difficulty project inter dependent verification difficulty challenge BDD furthermore mention specify behavior collaboration various stakeholder business technical workshop participant BDD increase develop deliver behavior project practitioner requirement artifact combine BDD efficient RQ BDD apply software development project research consists sub propose activity industrial evaluation detail sub described RQ activity BDD apply software development project activity described input output activity described contains activity actor input output activity activity input output activity activity define actor responsible perform task fulfill activity requirement engineer stakeholder tester domain expert etc feature file specify behavior manager customer request behavior feature described behavior textual statement description description activity propose  specify behavior   manager requirement customer behavior manager communicates description behavior requirement engineer exist reusable  engineer domain  behavior manager exist behavior exists identify adapt develop feature  engineer architect verification  behavior manager BDD feature file behavior developed behavior executable scenario develop hook feature   BDD feature file behavior executable executable keywords implementation behavior executable automate develop feature file per sub   keywords BDD feature file activity develop feature file sub feature file relevant behavior sub implement code behavior execute sub feature  sub feature file correspond code execution report sub behavior execute feature   feature file behavior execution report exist reusable behavior activity requirement engineer searcher exist behavior adapt reuse activity avoid develop behavior behavior already reuse feature presence feature development phase reuse exist artifact conduct reusable behavior organization document commonly practitioner identify reusable artifact text classification approach processing identify reusable behavior   normalize compression distance artifact identify script normalize compression distance similarity ration  petersen define similarity identify reusable document approach identify reusable behavior detail  petersen repository management service gerrit stash identify behavior exemplify normalize compression distance assume requirement engineer BDD behavior feature description  activity requirement engineer selects text keywords feature description requirement engineer selects automate script implement NCD implementation available script exist feature file folder feature file unique perform feature description keywords NCD compress description behavior compress feature file concatenation compress NCD closer feature file closer feature file requirement engineer review feature file closer ass relevance behavior inside feature file reuse requirement engineer identifies closest behavior feature file behavior modify reuse technique text classification similarity ratio technique implementation reuse detail described evaluate another author available  petersen develop feature file activity requirement engineer elaborates behavior detail perform action input output etc feature file developed contains executable scenario behavior file behavior approve customer manager executable feature file customer requirement develop hook feature file activity developer develop hook glue code feature file hook implementation keywords previous keyword  code program similarly keywords link unique program hook developed feature file along hook glue code execute integration environment develop feature file per sub behavior feature file define however behavior correspond hook per sub sub develops code feature file belonging sub code sub feature file execute sub feature file activity belongs sub develop correspond sub feature file activity develop sub identify behavior correspond behavior behavior code verification activity execute feature file feature file execute behavior phase develop feature file behavior fail sub feature behavior verify feature release usage organization demonstrate activity propose context belonging author organization concern component described sub contains customer related functionality sub contains user contract related functionality sub contains package customer telecommunication customer request software development organization develop feature described   data package agent activates package customer activity specify behavior manager customer request feature writes behavior fulfill feature behavior activate customer behavior activate contract behavior contract detail data package activity exist reusable behavior sake assume reusable behavior therefore behavior developed scratch remain activity perform assumption activity already activity description activity develop feature file behavior elaborate feature file elaborate behavior behavior activate customer customer request ID activate customer ID verify customer ID active behavior activate contract contract request ID activate contract verify contract ID active behavior contract detail data package item data package data package fetch correctly data package item contract verify contract update activity develop hook feature file hook implementation keywords previous hook correspond keywords behavior hook developed behavior behavior image KB image activity develop feature file per sub behavior customer related functionality sub contract related functionality sub package related functionality sub correspond sub hence behavior sub feature file described sub feature file contains elaborate behavior hook development development sub feature file requirement document develop code behavior sub feature file contains elaborate behavior hook development development sub feature file requirement document develop code behavior sub feature file contains elaborate behavior hook development development sub feature file requirement document develop code behavior development develop code fulfill requirement correspond sub feature file behavior developed sub feature file activity execute subsystem feature file automate sub feature behavior code developed behavior report generate sub development stakeholder activity execute feature file execution feature file generates report keyword status keywords behavior passing fail report behavior RQ conclusion concern significance limitation completeness drawn industrial evaluation propose propose component evaluate industrial practitioner feedback improve practitioner optimistic propose improve propose aspect evaluation significance limitation completeness significance industrial evaluation practitioner benefit associate improve communication collaboration stakeholder technical non technical communication propose enhances communication involve stakeholder discussion related feature file feature file develop understand practitioner detection misalign interface sub practitioner background requirement engineering structure scenario behavior improve quality requirement documentation behavior recommendation actor activity benefit defines delegate responsibility reuse culture progress executable feature file mention strength significance propose correspond industrial survey interview described quotation survey respondent regard benefit improves communication stake holder enables easily engage development cycle  functionality ensures deliver business definitely misunderstanding management development organization define automate anything developed faster business driven approach development achieve preferably contract customer clause contract manage validate TDD benefit increase focus business user customer  focus achieve significance summary feedback industrial evaluation significance  improve communication stakeholder understand user focus essential detection interface non alignment structure requirement non technical communication stakeholder documentation progress development distribute software clearly define responsibility reuse culture organization involvement customer development improve quality limitation evaluation practitioner identify drawback weakness propose accord practitioner collaboration stakeholder costly consume practitioner mention challenge develop sub feature file practitioner maintenance feature file sub feature file drawback due feature file textual practitioner described define behavior activity straightforward compulsory activity define behavior drawback rare requirement understood experimentation development phase interviewee mention involve customer approve feature file development become bottle delay development evaluation practitioner mention sometimes organization sends partial delivery customer secure milestone feature deliver limitation evaluation quotation survey respondent regard drawback testcases implement testcases sub testcases connects dot sub finalizes customer requirement  resource available allocate pro  limitation availability stake holder absence member ambiguity overall limitation summary feedback industrial evaluation limitation  dependence stakeholder behavior easy define dependency requirement non functional requirement technology customer interested feature file iteration lesser involvement architect manager consume costly develop sub feature file maintenance delivery partially drawback mention practitioner completeness remove practitioner identify activity important propose practitioner interview remove exist reusable artifact mandatory activity practitioner motivate suggestion activity perform practitioner expertise therefore guideline activity quotation another practitioner   establish remove naturally dev client handle completeness improve practitioner feedback questionnaire interview suggestion activity propose suggestion practitioner suggestion quote architectural  architectural later phase loop development engineer feature maybe behavior sometimes evil consistent terminology  extremely stringent keywords format structure benefit interface activity approval interface subsystem communicate collaboration  apply  complex develop complex compound feature function operation everyone understands challenge proven implement contains summary feedback related completeness practitioner industrial evaluation completeness summary feedback industrial evaluation  architectural discover development handle verify interface define sub verify interface define sub verifies conformance feature file organization guideline remove  exist reusable behavior remove version propose feedback practitioner feedback propose improve suggestion introduce introduce validate developed feature file accord standard ontology consistent organizational concept content previously developed feature file validation develop feature file consist already keywords activity introduce interface architectural activity architectural evaluate sub modify interface accommodate architectural development practitioner introduce counter scenario revert activity architectural evaluate version propose apply interview practitioner estimate apply organization previous interviewee described lesser related activity however educate convince practitioner regard benefit BDD practitioner estimate fully implement organization estimate interviewee apply interviewee interviewee interviewee interviewee interviewee interviewee interviewee activity interview practitioner identify activity exist development activity exist partially exist development activity partially exist activity exist exist reusable behavior develop hook subsystem feature file interviewee notation describes activity partially describes activity exist modification apply feature document feature file demand activity partially  interviewee interviewee interviewee interviewee interviewee interviewee specify behavior exist reusable behavior develop feature file develop hook subsystem feature file develop feature file per sub execute feature file discussion discussion crucial aspect research industrial evaluation characteristic propose propose development utilizes BDD software development essential characteristic feature file development feature file developed contains vocabulary understood organization introduce validate feature file commonly understood business ontology vocabulary development development misunderstand requirement involvement approval feature file manager customer reduce requirement furthermore feature file develop business critical feature feature file contains scenario business effort parallel development accord kumar mishra automation development around software development feature file contains executable scenario feature file development requirement organization feature file automatic development automation phase execute parallel verify deliver propose automation development parallel reduce deliver feedback loop previous research software integration project rapid feedback loop essential identify evaluate fix software artifact cheaply quickly development iterative therefore feedback loop regard requirement architecture identify resolve issue quickly propose multiple feedback loop identify potential relatively quickly feedback loop completeness requirement uniform vocabulary structural misalignment verification requirement assumes BDD release development sub however exceptional circumstance partial delivery gateway overridden remain BDD release iteration couple characteristic related software technology essential role therefore development empower internal development propose limited development verification jenkins junit etc XP program technology java python operates abstract without impact internal transforms propose BDD impact internally architectural evolution  developed multiple iteration iteration architectural evolution structural degradation architecture evolve multiple introduce activity evaluates architectural propose evaluate architecture architect activity interface technical detail header request response reuse initial activity exist reusable behavior requirement engineer behavior reuse feature identify related item significant impact quality development feature similarity feature identify code artifact developed previously however essential mention scope limited BDD development scope reuse related develop reuse reusable BDD artifact etc focus reuse potential BDD artifact readable document context rahman gao context microservices architecture address challenge identify software practitioner practitioner challenge prevent adopt BDD propose attempt mitigate challenge described challenge specification behavior propose specific actor assign specify behavior development cycle moreover introduce customer approval behavior manager specification behavior project improve furthermore activity introduce exist behavior easy specify behavior challenge ownership maintenance clearly define responsibility matrix actor reduce confusion related ownership manager owner BDD related however feature file correspond sub feature file maintain correspond development maintenance related challenge tackle approach version maintenance requirement document organization already versioning software maintenance related challenge version feature file sub feature file hook resolve software traceability organization utilize information retrieval technique trace link software artifact demonstrate cleland maintenance behavior resolve perform refactoring behavior behavior feature file approach guideline refactoring BDD behavior hook implement code program IDEs eclipse  contains plugins maintenance BDD behavior hook hook longer keyword hook challenge adoption technology mention previously propose exist impact development hence likely scenario competence organization furthermore organization strategic investment management organization competitive education training session furthermore industrial evaluation developed relative confirm improve competence easy practitioner challenge benefit BDD expensive activity introduce identify reusable content already feature file development expensive future benefit reduce defect improve quality balance expensive challenge software propose distribute identifies important uniformly understood feature file commonly understood vocabulary define interface architectural ensure deviation software requirement architecture principle reduce adaptation constraint organization industrial evaluation application propose consume complicate task organization commitment budget incremental transformation organization allocate budget personnel transform organization propose adaptation competence upgrade training manager organize resource organizational guideline ontology architectural BDD template apply report finding application comparison approach mention accord informal literature review propose BDD cycle development discussion comparison approach propose approach circuit development BDD feature file requirement document feature film developed iteration program VHDL approach data configuration BDD formal verification approach limited software development difference propose approach approach propose approach suitable multiple sub assumes statement developed perform parallel development secondly approach apply industrial instead demonstration approach conduct essential aspect development reuse customer involvement mention propose development methodology  methodology apply context multi agent similarity propose approach owner suggests behavior later elaborate described industrial however fundamental difference propose approach approach propose uniformly feature file reuse development sequential propose approach mechanism understand BDD another essential difference approach rahman gao conduct BDD cycle context microservices architecture micro service architecture necessarily involves software organization define reuse maintenance aspect BDD cycle propose development software development hence research concern context objective rahman gao however reuse BDD maintenance related approach propose rahman gao combination propose approach approach approach BDD software development cycle threat validity classifies validity threat suggests improve validity threat validity threat reliability construct validity internal validity external validity validity threat improve validity reliability extent data collection data analysis dependent researcher minimize threat peer debrief researcher involve review interpret document workshop session researcher session finalize researcher meeting meeting workshop participant feedback clarification later analysis systematically perform constant comparison analysis upon researcher peer debrief industrial evaluation data automatic web reduce valuable information researcher later researcher interpret practitioner feedback feedback improve propose mitigate validity threat involve researcher peer debrief automatic data collection storage audit trail systematic data analysis triangulate finding interview conduct confirm workshop industrial survey interview finding interview interviewee increase investigation reliability member per internal validity concern factor researcher factor affected factor unknown researcher threat applies participant benefit challenge adapt BDD practitioner identify benefit challenge non BDD related factor BDD maybe issue practitioner account mitigate threat recommend triangulation data source therefore conduct multiple workshop session multiple participant various site mitigate researcher bias industrial evaluation researcher involve preparation questionnaire analysis feedback improve validity similarly interview finalize researcher member conduct reduce threat validity external validity extent generalize outside organization software development organization industrial practitioner organization software industrial evaluation furthermore industrial practitioner belong role manager architect developer tester etc involvement practitioner multiple software organization multiple role mitigate threat validity evaluation conduct experienced practitioner role developer tester requirement engineer organization prior understand methodology therefore challenge practitioner organization randomly developed selection criterion survey interview reduce bias reduce potential bias possibility researcher bias exists participant construct validity concern capture construct intend capture mitigate threat researcher BDD background workshop participant inquire understood BDD furthermore researcher considerable explain concept vocabulary understood practitioner organization described usage standard vocabulary reduce threat validity industrial evaluation detailed description background related concept participant understand concept correctly participant outside organization additional researcher explain intend concept propose interview carefully interview propose interviewee understand detail presentation interviewee concept BDD counter threat multiple research BDD concept participant furthermore interview inquire participant understood BDD concept propose conclusion development involves complexity interaction collaboration multiple stakeholder various sub previous research identify various aspect development improvement research behavior driven development introduce facilitate development enhance collaboration educate practitioner business evaluate suitability behavior driven development BDD context development workshop session session BDD demonstration practitioner involve eighteen industrial practitioner organization interview experienced practitioner identify suppose benefit challenge related adaptation BDD context later BDD inspire development propose development evaluate improve feedback practitioner summary research RQ benefit practitioner associate BDD software project multiple workshop session practitioner benefit associate BDD development improve quality software requirement benefit template requirement practitioner feature file develop uniform understand requirement perceive benefit BDD reuse artifact project benefit project furthermore practitioner organization benefit organization BDD BDD reduces ambiguous requirement stakeholder already acceptance development benefit improve overall quality verification project RQ challenge BDD software project software practitioner significant challenge context software development lack ownership BDD competence critical challenge context project practitioner BDD expensive BDD detailed analysis model scenario costly project maintenance BDD scenario challenge textual scenario difficulty challenge practitioner mention lastly versioning BDD artifact challenge context RQ BDD apply software development project challenge previous research BDD inspire development propose development manager suggests behavior behavior requirement engineer exist behavior reuse exist artifact activity requirement engineer develops feature file elaborates behavior feature scenario scenario developed executable hook glue code verification executable feature file status development behavior feature file broken sub feature file belonging sub sub develops verifies sub code sub feature file sub feature file verify feature verification stage behavior pas feature release evaluate validate activity industrial evaluate eighteen practitioner development organization interview experienced software practitioner practitioner useful improve communication quality reuse documentation production however practitioner costly implement involvement multiple stakeholder availability bottleneck practitioner propose phase architectural alignment validate format feature file later version propose practitioner inquire apply development organization future mention investigation participant introduce propose organization consequence perform dynamic validation approach dynamic validation future application understand characteristic improve release software furthermore investigate reusability behavior BDD methodology guideline increase reuse potential behavior