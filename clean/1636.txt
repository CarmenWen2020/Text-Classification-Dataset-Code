dependency analysis foundational program analysis technique limited scalability handle  novel dependency analysis technique aim approximate program dependency relatively perturbed execution technique MOAD model observation approximate dependency  program dependency likelihood program dependent another instead boolean relationship MOAD generates program variant delete source code execute impact MOAD infers model program dependency capture relationship modification observation evaluate MOAD program slice obtain probabilistic dependency model exist observation backward slice technique ORBS MOAD observation slice average furthermore introduce notion observation slice unlike ORBS inherently computes backward slice MOAD model dependence traverse direction easily compute slice comparison static slice MOAD delete median excessively delete median slice keywords dependency analysis program slice model MOAD introduction understand dependency program fundamental task software engineering basis software engineering task program comprehension software maintenance refactoring security debug traditional static approach dependence graph widely adopt suffers issue inability easily handle multi lingual combine analysis multiple complex limited scalability partial analysis viable static approach program analysis observation slice ORBS overcome issue ORBS applies speculative deletion iteratively program analysis observes apply deletion viable code compiles deletion unrelated slice criterion variable behavior deletion respect suite deletion text ORBS entirely agnostic analyze file grammar unavailable unknown analyze unconventional semantics description  despite benefit along lightweight implementation ORBS drawback analysis purely dynamic approach iteratively attempt validate speculative deletion program via compilation execution incur significant investigates feasibility approximate dependency analysis greatly reduce precise dependency analysis aim report program depends program outcome boolean approximate dependency analysis instead report likelihood depends outcome probabilistic program dependency analysis technique propose initial static analysis extend probabilistic information execution conjecture analysis solely dynamic observation useful program analysis context significantly costly approximate approach stem infers stochastic model program dependence unlike ORBS performs iterative deletion analyze program dependency respect program slice criterion technique MOAD model observation approximate dependency learns approximate model program dependence significantly dynamic observation intuitively ORBS slice increasingly accurate iterative deletion contrast MOAD employ deletion treat independently observes multiple program ultimately execution approach introduces benefit MOAD observation ORBS infers relationship individual deletion dependency instead uncover dependence information iteratively delete arrives minimal slice output MOAD construct multiple backward slice whereas ORBS backward slice moreover observation MOAD independent MOAD inherently parallel evaluate MOAD implement perform dependency analysis benchmark suite program widely slice literature evaluate viability accuracy MOAD slice MOAD model program backward slice program iff report likelihood threshold comparison baseline random slice technique MOAD indeed program dependence comparison ORBS slice MOAD slice ORBS slice observation investigate various construct observation impact inference model earlier technique empirically evaluate backward slice extends previous extensive comparison backward slice MOAD ORBS secondly MOAD slice codesurfer static analysis  inc finally framework depth extensive relative merit deletion scheme inference model infer MOAD dependency model extends underlie model technique richer explanation benefit clarify limitation hint slice scratch probabilistic dependency model apply fault diagnosis however additional future focus slice representative summarize technical contribution introduce concept approximate dependency analysis transforms dependency relationship boolean probabilistic MOAD technique model approximate program dependency essential generate observation infer model observation conduct empirical evaluation MOAD via backward program slice instantiate model instantiate program slice model MOAD empirically slice static analysis organize introduces concept approximate dependency analysis explains relates exist slice technique ORBS introduces MOAD technique aim model approximate dependency slice instantiate program slice dependency model empirical evaluation report contains discussion finding potential future related concludes approximate program dependency program dependency dependence relation program statement expression variable computation directly indirectly affect computation another dependent plethora technique propose capture model dependence information technique static parse detailed analysis program semantics program outcome analysis typically capture binary dependence relation program dependence relation dynamic dependence analysis approach propose typically annotate already extract static model probability concrete execution static annotate explicit model downside static static annotate approach cannot easily handle heterogeneous component binary multiple file format theory combine analysis multiple format concrete actually fix typically selection additional practical duplicate stage multiple compiler chain observation slice ORBS address allows agnostic dynamic slice without detailed semantic knowledge reuse exist chain implementation ORBS trivial code however ORBS model program component relation target slice criterion simply creates backward slice iterative execute cycle another slice criterion analysis typically happens fault diagnosis debug notion perfect dependence model accurately capture dependence program approach aim approximate perfect model closely minimal effort construction classical ORBS technique perspective dependency assume everything dependent everything dependence cluster attempt discover independence criterion deletion execution permanently remove independent however dependence independence explicitly model separately code code understand dependence information independent program lose longer exist proposes leverage minimal requirement applicability easy implementation lightweight dynamic analysis technique ORBS model dependence relation explicitly approximately detailed syntactic semantic knowledge component program involve heterogeneous approach model building specific dynamic execution approximate dependency information however explicitly building probabilistic model brings potential advantage model dynamic approach ORBS anything invocation multiple dependence execution model multiple program analysis task posit exists complementary propose exist program analysis conceptually shift traditional precise program dependency model approximate dependence model however argue mainly perspective technique depends specific analysis task precise analysis outcome binary relation program depends another however input program subset input precise analysis program actual input dependent program contrast approximate analysis probability program affected program latter precise analysis approximate technique propose approximate sample subset input typically optimal model however approximation improve additional observation inference algorithm approximation preferable depends downstream analysis task model apply semantics code analyze complexity input approximate program dependency model focus instantiation target program slice allows potential benefit technique context model discussion slice model direction dependence ascribed MOAD context program slice MOAD model observation approximate dependency overview terminology MOAD phase observation phase inference phase output phase observation observation input inference phase inference model aim capture dependence within program illustrate infer program slice infer slice ORBS static slice codesurfer terminology approach dynamic addition program input identify within deletable compose text program statement assign statement statement etc code etc within program subsequently sub program delete inference sub program boolean vector deletion entry vector delete assign retain assign false program slice subset program relates specific variable specific location slice criterion program slice backward slice consists program affect criterion slice consists program affected criterion borrowing notion program slice ass impact delete various slice criterion criterion program location variable variable update assignment statement impact delete sequence trajectory criterion implement program output criterion annotate printing script criterion ORBS boolean vector response entry per criterion entry iff sequence unaffected deletion respect sequence program assumption deletion brings trajectory criterion criterion likely depends observation phase core phase deletion generation scheme generates deletion program mutant deletion scheme generates deletion deletion remove exactly generates encode vector subsumes considers relation observation assume deletable program observation observation involves considerably deletion impact sample data image KB image algorithm describes observation phase input program input suite deletion generation scheme  algorithm initializes output observation empty output sequence criterion execution deletion generate scheme subsequently deletion function  generate sub program compose non delete omit function  input trajectory criterion annotation output output vector response fail compile output fail output response deletion observation return algorithm reader familiar ORBS difference algorithm ORBS ORBS cumulative backward slice slice criterion observation algorithm independent parallel illustrate algorithm program statement criterion generation scheme statement statement deletion false false false false false false apply deletion statement program compile execute input response vector boolean trajectory correspond criterion preserve tuple deletion response becomes observation deletion statement program inference phase inference phase described algorithm infers backward slice criterion algorithm observation output phase inference model deletion slice criterion infer deletion apply program backward slice image KB image assumption inference delete trajectory slice criterion likely backward slice assumption trajectory assumption connection straightforward data tends overestimate  data statement delete data cannot fail situation delete mislead model generate invalid slice contrast delete influence inference model instantiate trajectory assumption logistic bayesian model detail inference necessarily constrain resolution observation granularity function infeasible MOAD remove statement independent criterion another statement function affect criterion slice observation described identify criterion potentially influence deletable criterion deletable deletable statement criterion asymmetry granularity deletion granularity criterion observation impact slice MOAD compute backward slice slice criterion criterion observation slice compose deletable observation however slice reverse compute slice MOAD accept slice criterion deletable output slice subset criterion observation phase inversion source confusion slice generate MOAD slicer text involve criterion deletable statement remainder subsection detail inference model notational convenience hereafter denote false respectively model explicitly aforementioned assumption delete trajectory slice criterion likely backward slice assume subprogram obtain program remove deletion preserve trajectory slice criterion model remove slice formally model built observation infers slice deletion vector response vector delete response criterion unchanged logistic model logistic statistically implement assumption perform logistic regression logistic regression coefficient independent variable dependent variable false specific coefficient positive dependent variable independent variable increase conversely coefficient negative dependent variable independent variable increase logistic model regard response slice criterion dependent variable deletion independent variable regression coefficient interpret slice coefficient positive delete average trajectory delete affect criterion probability trajectory average correspond coefficient negative considerably criterion affect negative coefficient simplicity zero threshold coefficient positive coefficient exclude zero negative coefficient future optimize threshold sample slice coefficient formally logistic model infers deletion vector slice respect bayesian model bayesian inference model strictly reflect trajectory assumption overestimate independence described bayesian model dependence conditional probability generate slice apply threshold assume denotes conditional probability preserve trajectory delete observation estimate observation satisfy difference depends criterion average conditional probability criterion threshold instead fix formally bayesian model infers slice average estimate probability observation slice important advantage MOAD ORBS apart improve efficiency enables observation slice contrast backward slice aim program affect slice criterion slice identifies program affected slice criterion program dependence graph pdg backward slice transitive closure program dependence transitive closure dependence direction slice reverse dependence direction backward slice ORBS approximates backward slice iteratively attempt delete program iterative approach essentially dependence converges slice criterion perform backward slice suffices slice criterion impact deletion relevant backward slice criterion ORBS however cannot easily compute slice contrast backward slice dependence slice fan slice criterion multiple program slice consequently obtain slice criterion ORBS compute backward slice program backward slice slice analysis already weakness ORBS compute slice multiple backward slice attractive approach MOAD efficiently compute slice definition approximates dependence model difference ORBS MOAD generate slice utilize information observation ORBS recognizes relation regard delete affect criterion MOAD capture multiple relation specifically criterion affected delete setup research evaluate MOAD investigate research RQ concern MOAD capability approximate program dependency RQ RQ evaluate MOAD backward slice generate ORBS static slicer codesurfer RQ evaluate amount observation affect MOAD accuracy finally RQ slice generate MOAD generate codesurfer RQ viability model correctly capture program dependence information MOAD approach stochastically model program dependence without knowledge obtain expensive static analysis guarantee MOAD program dependence scratch investigate approach viable ability model slice random slicer random subset program slice without prior knowledge none model outperform random slicer RQ impact model inference model performs program slice evaluation RQ slice generate inference model RQ comparison ORBS perform inference model ORBS MOAD purely dynamic approach inference model dynamic information closest related baseline approach observational slice implementation ORBS ORBS accurate slice MOAD longer research evaluate quality efficiency MOAD comparison ORBS ORBS RQ perform inference model static slicer perform quantitative analysis backward slice generate MOAD generate widely static backward slicer codesurfer RQ address enumeration benchmark program mbe mug investigate slice vice versa analyze difference RQ sample impact sample observation investigate reduce analysis MOAD sample subset observation hypothesis model built observation slice analysis sample rate sample observation program available observation inference model sample observation cater randomness sample sample rate subsequently slice generate model built amount sample observation RQ MOAD slice static slice originally backward slice related operation slice insight MOAD generalizes program dependence analysis understand slice capability MOAD qualitatively slice compute codesurfer baseline describes baseline approach ORBS purely dynamic slice approach codesurfer dependence analysis static slice observation slice ORBS observation slice ORBS benchmark approach evaluate performance MOAD ORBS dynamic program slice technique observation program semantics execute program chosen suite ORBS slicer performs iterative speculative deletion code deletion permanent preserve trajectory compute slice criterion ORBS implementation slice source code text refer algorithm ORBS capture deletion ORBS considers deletion sequence consecutive text addition performance advantage deletion enables ORBS delete delete bracket enclose empty apply ORBS attempt delete successfully deletes deletion attempt fail deletion successful deletion ORBS onto target source code skip delete unsuccessful deletion reverts deletion file ORBS performs multiple code cannot delete anything minimal slice impossible delete slice recent variation ORBS ORBS representation ORBS performs breadth traversal node attempt delete subtree program trajectory slice criterion subtree permanently delete otherwise append later consideration ORBS implementation employ  xml program important modify ORBS algorithm attempt delete syntactic MOAD statement motivation modify ORBS comparison output slicer introduce amount specific information otherwise agnostic algorithm basis comparison brings dramatic ORBS considerable considers numerous sub constituent statement codesurfer codesurfer compute static program slice baseline codesurfer static analysis  computes static slice convert program dependence graph  reachability graph refer dependence closure slice implies necessarily executable program relevant MOAD codesurfer slice return vertex finer granularity MOAD statement codesurfer capable identify entire statement slice fortunately codesurfer maintains mapping text program vertex codesurfer slice exploit mapping mapping vertex overlap source code identify associate slice criterion vertex compute slice finally vertex comparison MOAD excerpt output codesurfer slice script configuration initial MOAD program statement  version xml multi parse identify statement  enables approach apply program multi lingual program  dependence algorithm inherits ORBS ability apply multi lingual analysis slice criterion consists arithmetic char int float etc assignment clang version insert statement slice criterion statement responsible output sequence compute criterion goal slicer preserve sequence remove unnecessary code baseline apply ORBS maximum modify ORBS codesurfer apply version default configuration perform ubuntu intel core TM cpu 2GB memory gcc version statistic prttok prttok replace sched sched totinfo tcas printtokens printtokens replace schedule schedule totinfo tcas siemens program       program non comment non blank sloc statement criterion mbe mug program semantics amenable careful precise furthermore specific challenge dependence analysis highlight pro con approximation technique addition siemens suite technique ordinary code siemens suite lieu program exhaustively compute slice program scalar slice criterion remove slice selection bias analysis program program siemens suite widely program dependence literature easy exist literature technique previous observation approach viable agnostic program dependence analysis leverage prior program evaluate MOAD applicable program involve program relative model performance MOAD apply oppose outside scope metric metric slicer performance definition denote slice compute ORBS ORBS codesurfer MOAD slice criterion respectively rate MOAD model rate infer slice successfully compile preserve trajectory target slice criterion slice criterion observation slice ORBS ORBS MOAD generate slice observation consists compilation subsequent execution assume compilation successful slice percentage program generate ORBS ORBS codesurfer MOAD respectively reference slice infer slice deletable delete relative reference slice deletable infer slice reference slice excess reference slice infer slice deletable excessively remove infer slice relative reference slice excess reference slice infer slice ORBS MOAD deletable calculate excess directly slice however ORBS codesurfer MOAD MOAD slice text MOAD statement mapping convert statement slice MOAD  option program attribute correspond xml utilize information statement mapping codesurfer exploit mapping internal dependence graph representation source text granularity issue arise MOAD codesurfer slice MOAD deletes statement contains statement deletes statement necessarily deletes statement cannot delete solely statement ignore statement statement MOAD codesurfer codesurfer slice criterion construct vertex internal graph representation finer granularity text text compute slice respect union vertex code rate MOAD  gen   gen  rate mbe replace mug sched sched prttok totinfo prttok tcas denote slice percentage program generate ORBS ORBS MOAD respectively separately model bold parenthesis ratio mbe mug prttok prttok replace sched sched totinfo tcas average viability RQ RQ random slicer implementation randomly deletes probability slice criterion program random slicer slice generate preserve trajectory slice criterion slice criterion across program random slicer generates slice fifteen random slice compile none preserve trajectory slice criterion clearly indicates unlikely slice contrast MOAD ability viable slice compile capture desire semantics deletion generation scheme generate observation remain report rate inference model percentage slice preserve desire trajectory program mbe mug slice preserve trajectory successfully siemens suite generate slice preserve trajectory rate perform approach outperforms deletion generation scheme deletion generation scheme average performs data performs data prttok particularly rate investigate code snippet data dependence image KB image unusual slice individually delete without affect trajectory model learns remove consequently MOAD infers slice tends  omit trajectory situation happens replace replace program replace target text input text trigger boolean variable input parse succeed assignment statement boolean variable delete bother execute however delete assignment statement program exit replacement slice fail preserve trajectory suggests statistical model capture interaction program RQ image KB image impact model RQ evaluate inference model ability remove average slice slice criterion model MOAD facilitate inter program comparison average slice percentage program accord generates slice inference model anova slice due inference algorithm rarely happens deletion affect trajectory learns delete infer slice image KB image venn diagram statement delete deletion scheme overall impact training data average slice analyze tendency respect inference model model attempt deletion data implies model independence criterion implies slice monotonically decrease observation increase built data ubiquitously generates slice built data logistic model tends generate slice data dominance illustrates model learns dependency relation observation finally slice generate bayesian model relatively minor variation observation increase sophisticated model evident data data average data estimate probability preserve increase decrease observation echoed RQ investigate qualitative difference slice analyze subsumption relationship statement delete model summarize difference venn diagram statement delete model slice criterion delete statement scheme statement delete scheme combine definition statement delete delete empty clearly diagram comparison delete statement hypothesize frequency execution therefore exposure statement interact relative aggressiveness model statement frequently commonly execute execution slice criterion execution aggressively delete statement trajectory preserve execution deletion cautious execution exhibit dependence relationship slice criterion others contrast statement deeply nest execute statement execute likely execution specifically affect subsequent computation slice criterion consequently delete statement likely fail preserve trajectory prevent easily delete interestingly deletion statement infrequently affect trajectory likely relatively correspond feature logistic regression model checked hypothesis analysis involve average statement nest depth vice versa average initial finding promising factor affect slice difference warrant deeper analysis outside scope data RQ image KB image comparison ORBS RQ MOAD implementation ORBS regard aspect efficiency slice accuracy denote observation ORBS ORBS MOAD deletion generation scheme respectively mbe mug prttok prttok replace sched sched totinfo tcas average efficiency initial efficiency considers observation generate slice ORBS observation code towards therefore version efficiency comparison observation involve ORBS ORBS reflect compilation execution compute slice MOAD compilation execution construct training data ORBS examines statement slice MOAD observation slice observation comparison compute ratio slice observation ratio evident data ORBS MOAD significantly observation observation magnitude ORBS similarly deletion generation scheme involves observation ORBS ORBS tends observation ORBS closer overall observation ORBS observation observation observation ORBS efficiency comparison efficiency scenario MOAD slice criterion program ORBS efficient MOAD analyze program dependence investigate compute ratio observation MOAD average observation generate slice ORBS however scenario MOAD deletion generation scheme actually observation ORBS ORBS respectively deletion generation scheme observation MOAD ORBS ORBS generate approximately slice slice respectively slice due approximate inference MOAD generate slice ORBS ORBS average slice slice criterion ORBS ORBS along ORBS MOAD slice average ORBS model built observation generate slice infer slice ORBS slice average significant difference occurs program logistic inference model built data infer slice correspond ORBS slice infer slice correspond ORBS slice data model infer slice ORBS slice replace prttok prttok logistic model infer slice ORBS slice prttok totinfo respectively ORBS difference reflect ORBS slightly slice ORBS average program MOAD slice ORBS model observation infer slice ORBS slice significant difference occurs tcas logistic MOAD slice ORBS slice slightly ORBS slice MOAD slice correspond ORBS slice average excess denote denote finally statement parenthesis reflect percentage excess program  generation scheme stmt mbe mug prttok prttok replace sched sched totinfo tcas accuracy ORBS guarantee minimal slice preserve trajectory slice criterion MOAD approximates slice slice criterion therefore ORBS slice truth MOAD slice deletion generation scheme inference model calculate excess define facilitate detailed comparison model average slice criterion program parenthesis correspond percent program excess slice finally ORBS slice contrast ORBS slice MOAD slice observation increase significantly decrease excess slightly increase tendency logistic model however barely bayesian model explain slice model deletion generation scheme yield accurately deletes model excess excess model difference modest inference model tends generate slice ORBS ORBS illustrates average difference excess model compute slice criterion data performs consistently notably model interestingly dominance extend excess varied difference average excess inference model upper data excess stmt excess stmt average excess MOAD backward slice codesurfer backward slice comparison parenthesis reflect percentage excess  excess  excess mbe replace mug sched sched prttok totinfo prttok tcas average gain confidence apply anova tukey HSD excess statistically significant however significant difference excess overall model built observation generates slice compact ORBS slice however logistic model slice slice totinfo data however slice tend excess ORBS slice slice criterion unique explicitly output trajectory slice investigation reveal unable preserve trajectory target slice criterion implies dependency inference sufficiently precise described ORBS modify version ORBS traverse statement modify version ORBS dramatic ORBS RQ considers comparison ORBS overall trend similarity comparison RQ image KB image depth comparison static backward slice RQ RQ configure MOAD deletion generation scheme inference algorithm RQ configuration effective accurate configuration described convert slice excess backward slice MOAD codesurfer average criterion comparison sloc candidate correspond non statement denominator ratio slice mbe MOAD fails delete codesurfer deletes zero average MOAD mug MOAD program siemens suite excess average  delete MOAD backward slice mbe mug slice generate codesurfer siemens suite MOAD excessively deletes notable percentage proportion program opportunity static analysis false positive issue detail discussion RQ image KB image mbe mug source code axis source code affected slice criterion axis program slice criterion capture backward slice respect criterion axis denotes excess statement codesurfer slice MOAD slice denotes statement MOAD slice codesurfer slice empty denotes statement neither slice denotes statement slice remainder explores difference slice codesurfer MOAD understand address mismatch difference partition category explain illustrate benchmark program described program refer declaration inference model MOAD cannot delete variable declaration insufficient observation deletion occurs deletion generation scheme deletes statement therefore variable successful deletion variable declaration delete statement MOAD unable delete function prototype deletion compilation error contrast codesurfer computes dependence closure slice graph representation omits function prototype slice category declaration statement mbe function declaration declaration statement mug finally function declaration declaration statement mutation granularity program mutation operator MOAD statement deletion limit granularity operates statement iteration nest within loop  iteration codesurfer correctly identifies however MOAD treat loop statement atomic retain consequently declaration category declaration statement initialization deletion variable initialization impact java integer variable implicitly initialize zero MOAD delete initialization statement codesurfer cannot assume initialize subsequent computation category assignment statement return mandate presence return statement return statement delete program permit function simply return return location eax register happens behavior return boolean normal execution MOAD delete return statement without observable semantics program category return statement limit static analysis static analysis mug mbe reveal limitation static analysis previous observation slice MOAD successfully  complex data dependence overcome limitation exhibit static analysis MOAD learns  complex data dependence precise slice category assignment statement variable mbe assignment statement mug depth comparison MOAD backward slice static backward slice RQ image KB image image KB image average slice criterion replace slice MOAD percentage program sample axis boxplot summarizes performance model built random sample ORBS ORBS slice average slice criterion program image KB image MOAD rate average slice criterion mbe sched boxplot summarizes performance model built random sample sample RQ RQ considers tradeoff amount training data quality inference gain initial impression data program replace plot axis sample axis ratio average slice average slice criterion program program finally solid dash horizontal average slice ratio ORBS ORBS respectively overall plot notion sample increase slice MOAD decrease approach ORBS slicer model amount variation model separately model plot substantial initial lessens sample increase average slice difference slice difference observation generates slice data finally variance individual sample height relatively suggests robust stochastic sample logistic model slice tends decrease sample increase trend model variance across sampling taller inference model finally bayesian model tends generate slice observation trend median fluctuates furthermore difference slice sample relatively replace gain additional confidence apply anova separately data model statistically significant apply tukey hoc model tukey hoc equivalence slice useful finding sample data slice statistically data essentially indistinguishable data model equivalence notable narrower narrower reflect model sensitive amount data built finally bayesian model stability sample model inferior performance suggests model robust sample variation improve accuracy slice stability model investigate rate observation increase tendency program mbe sched axis sample axis rate average slice criterion program MOAD easily generate trajectory preserve slice program mbe mug persists observation deletion generation scheme siemens suite program rate tends decrease sample grows model logistic model sample increase statement delete tends remain code harder compile likely preserve trajectory robustness slice bayesian model rate steady despite sample growth average excess MOAD slice codesurfer slice comparison parenthesis reflect percentage excess  excess  excess mbe replace mug sched sched prttok totinfo prttok tcas average RQ considers impact sample viable model built subset data RQ image KB image depth comparison static slice RQ RQ investigates MOAD slice despite backward slice described ORBS backward slice however MOAD easy reverse anything quality slice address slice MOAD codesurfer RQ slice recall MOAD slice invert criterion statement affect criterion slicer affect statement slice criterion program MOAD computes slice mapping affect statement within program statement mapping described infers criterion finally MOAD criterion slice mapping codesurfer criterion slice backward slice dependence graph vertex program codesurfer computes slice identify vertex code traverse dependence dependence graph origin slice identify vertex slice finally vertex slice excess slice MOAD codesurfer average criterion program important comparison limit potentially slice variable exist slice criterion MOAD report absent slice refer denominator calculate MOAD delete codesurfer remain excessively delete MOAD codesurfer mbe excess delete mug program siemens suite excessively delete MOAD slice generate codesurfer image KB image difference slice MOAD codesurfer printtokens difference slice MOAD codesurfer prttok visualize identify structural semantic relationship slice prttok switch statement function  char graph program investigate efficiency MOAD statistically analyze excessively delete ratio codesurfer slice average excessively delete slice verify prttok average simply excess fourth average standard deviation ratio codesurfer slice MOAD reduces average slice benchmark program mbe mug program siemens suite ratio reduction siemens suite mbe mug reduction MOAD false positive dependence exist static analysis directly program execution distribution ratio codesurfer slice codesurfer slice program siemens suite plot omits benchmark lack sufficient slice meaningfully boxplot statistic codesurfer slice   average excess  stdev image KB image distribution ratio codesurfer slice codesurfer slice dot ratio MOAD eliminates almost codesurfer slice slice investigate criterion snippet listing snippet source prttok token struct token ptr determines loop program terminates therefore codesurfer program slice assigns token loop however delete happens assigns another token loop important suite contains handle without observation MOAD learns actually related handle codesurfer slice affected loop delete related handle slice MOAD illustrates infer accurate dynamic dependence analysis image KB image snippet source code siemens suite listing codesurfer prttok slice  ptr buffer input delete execution return execute eventually executes therefore remove instead sufficient maintain functionality exclude slice MOAD codesurfer almost prttok slice listing codesurfer decision memory buffer return determines loop program terminates file  token program terminates however statement actually quote token quote buffer already loop indicates irrelevant loop consequently MOAD remove slice accidentally slice generate codesurfer sched listing slice generate MOAD slice generate codesurfer handle desire index queue however index queue consequently MOAD deletes unobservable dependence slice suite specific information capture MOAD analyze slice generate MOAD unlike backward slice declaration statement difference declaration statement slice slice criterion instead segmentation fault fault empty file interprets trajectory execute criterion perceive prevent MOAD delete statement slice remove prttok segmentation fault MOAD computes slice respect criterion actually affected statement image KB image false positive dependency due segmentation fault another significant hidden dependency static analysis incapable capture occurs statement update database another query database query depends update code sched code input external source configuration empirical evaluation codesurfer assumes file independent configure assume dependent dramatically increase slice user image KB image hidden dependence sched static analysis unable comparison RQ image KB image discussion future advanced adaptive deletion generation scheme depth analysis MOAD backward slice static backward slice indicates specific delete delete category declaration describes MOAD cannot delete variable declaration statement deletion generation scheme observation deletes declaration statement statement declare variable initialization return category evidence unexpected execution behavior mislead MOAD excessively delete initialization statement return statement slice suggests advanced adaptive deletion generation scheme model source code principled systematically deletion utilize sample deletion per cycle faster observation delete declaration another approach generate deletion adaptively respect observation via active observation data interim model propose future deletion potential information gain aforementioned methodology adopt deletion generation scheme specific limitation overcome declaration limitation introduce meta statement statement variable addition delete individual statement MOAD attempt delete entire delete meta statement improve slice generate MOAD variation meta statement approach attempt detailed dependence relationship statement meta statement deletion generation scheme meta statement statement deletion generation scheme observation delete combination statement hence additionally delete combination deletion generation scheme combination statement assume deletion generation scheme program image KB image belongs meta statement statement deletion deletion statement already deletion generation scheme additionally deletion combination statement additional systematic approach introduce various observation initialization return simply initialization statement return statement  observation phase restriction dependence model MOAD learns construct slice perform processing aim remove initialization statement unused variable return statement unused enable explore completeness slice soundness avoid  delete conditional dependency model alternative  approximate dependency model benefit traditional static model approach latter binary relation program MOAD model probability program dependent another however MOAD average marginal probability model probability input important future approximate model dependent specific input input specific approximate dependency model program analysis software quality task refine model beneficial fault localization precise information testcase fail input program probability model input precise estimate probability situation conditional dependency model information program slice slice criterion model situation likely sophisticated model technique inference algorithm model bayesian network encode conditional independence program infer likelihood program inclusion slice distribute joint distribution encode therein investigate complex input criterion specific model markov random model strength association program probabilistic graphical model perform capture graph dependency relation software unclear flexible conditional dependency model statistical inference model gaussian novel statistical model approach sum network explore future overall argument hierarchy program analysis correspond model traditional binary program dependency model subsume average model MOAD latter subsume dependent input criterion specific model model ultimately likely varies downstream analysis task specific program semantics future strive clarify model task additional application future evaluate model effectively task fault localization fault comprehension offs precision usefulness model comprehension orientation benefit slightly precise model retain situational context slice whereas bug location benefit precise slice related multiple proposal approximate dependency complement statically extract graph dynamic information notable propose annotate traditional program dependence graph PDGs probability capture dependence relation dynamic execution extend pdg conditional probability relate node similarly feng gupta bayesian network calculation conditional probability model correctness program statement fault localization graph   probability model predict likely impact slice augment static slice relevance label dependence interprocedural dependence graph probability relate coverage propagation propose probabilistic model dependence program exist program dependence graph detailed information program execution coarser model generally applicable whilst useful slice conclusion introduces technique model program dependence dynamic observation goal enable reformulation dynamic program dependency analysis probabilistic statistical inference model analysis specific analysis task furthermore upfront model built infer inexpensive model reuse multiple analysis scenario reformulation aim retain strength exist purely dynamic dependency analysis prior static analysis agnostic scalable etc illustrate technique MOAD inference model observation dynamic slice illustrate probabilistic model specifically MOAD slice minimal ORBS slice average model built observation ORBS furthermore model built slice negligible backward slice model artifact implementation MOAD publicly available via zenodo credit authorship contribution statement  lee conceptualization methodology investigation software data curation draft review edit david  methodology investigation draft review edit robert  conceptualization methodology draft review edit  methodology draft review edit shin yoo conceptualization methodology draft review edit funding acquisition