efficient assignment bug fix task software developer importance software maintenance evolution task efficiently assign developer software project confront extra delay propose strategy minimizes bug fix feasible developer arrangement handle bug fix request enhance therefore evolutionary objective algorithm involve schedule driven approach explores schedule evaluate developer fix bug assign empirical analyze performance schedule driven approach non parametric statistical quality indicator metric assure superiority jdt platform schedule driven approach superior approach respectively approach superior performance assign conveniently bug fix task developer avoid overload developer keywords bug assignment schedule driven bug fix software maintenance introduction regardless source commercial software software evolution maintenance software project bug report daily systematic approach handle request inevitably increase moreover bug report efficiently assign software developer software project confront inefficiency amount perform bug fix addition delay penalization extra incur project model professional developer asset development assign incoming bug report related research greedy machine information retrieval approach recommend developer task approach cannot prevent developer become overload task assign scholar meta heuristic approach non dominate sort genetic algorithm NSGA II achieve balance task assignment task address developer overload nonetheless model task assignment detail NSGA II effective optimal perspective NSGA II typically prior encode chromosome sort task task dependency graph tdg  bug fix task assignment mostly sparse almost task population generation task assign individual developer bug likely developer developer assign task NSGA II effective encoding task assignment improvement exploration thereby examine spent developer perform assignment perform task assign developer particularly refer schedule approach schedule driven SD target bug task assignment aim minimize bug assignment software engineering approach aspect minimize arrangement developer profile bug zone assignment schedule minimize delay delay schedule driven aspect assignment schedule evaluate candidate manner evaluate arrangement schedule evaluate eventually assignment schedule developer perform assignment evaluate arrangement associate schedule bug  minimum minimum schedule supplement bug assignment gain efficiency occurs risk schedule instance workload available developer developer chosen model frequently happens machine algorithm information retrieval technique apply compute wage paid developer plus incur penalty due delivery version software addition predefined task deadline violate additional compute service agreement SLA function SLAs penalty delay penalty usually quality service importance urgency bug schedule context handle incoming task candidate developer presence SLAs consideration tdg investigation built approach particularly proposes efficient refer KRRGZ KRRGZ NSGA II treat task assignment aim minimize detail dependent variable depends developer fix bug penalty due delay SLA violation aim improve KRRGZ SD hypothesize exploration augment hidden hidden refer schedule task assign developer SD evaluate schedule assignment motivate assume developer maintain software project bug file issue assign developer bug assign randomly developer assignment evaluate incur project assignment compute evaluate NSGA II delay dependency bug KRRGZ improve freedom fix bug obviously bug assign developer important incorporate model propose model shortcoming overcome encode assignment task developer assign task perform scenario SD evaluate schedule assignment developer KRRGZ optimize individual developer SD project addition KRRGZ relevant information bug penalty due delay define SLA SD detail developer assign task aim combination multiple equally efficient combination equivalent project manager prioritize contribution structure propose strategy minimizes bug fix feasible developer arrangement handle bug fix request enhance therefore KRRGZ involve SD approach explores achieve basically apply NSGA II objective task assignment NSGA II algorithm encode fitness function formulate therefore encode fitness function KRRGZ extension encode extend schedule vector perform task developer fitness function comprise extend account delay delay due potentially passing deadline incur penalty evaluation achieve schedule local strategy input algorithm KRRGZ SD incoming bug request available developer source code repository access source code repository calculate productivity developer extract tdg perform empirical performance approach data organize discus related setup introduce organization empirical improvement approach discus limitation threat validity finally conclusion research related bug triaging assignment widely topic recent software engineering research technique classify machine information retrieval metaheuristic approach fix bug attempt machine algorithm address task assignment software development author exhaustive bug cycle status bug incremental approach propose version topic model algorithm topic miner assignee fix incoming bug useful survey bug triaging address bug triaging  almost software project propose data reduction synthesizes feature instance selection diminish bug correspond reduce data employ binary classifier forecast feature instance selection affect quality reduce data improves accuracy bug triaging contextual information improve assignment request developer author address dynamicity developer structure concern consideration assign task propose recency developer developer expertise frequency inverse document frequency idf related metadata assignment task information retrieval relevant source code request repository recommend ranked developer code employ function rank potential developer fix incoming bug incoming bug distance bug previously handle bug affinity incoming bug developer profile sum developer assign normalize finally ranked potential developer perform task although accuracy approach avoid risk overload developer bug assignment resource allocation task assignment software project NP introduce optimization approach queue model focus package interdependency package important role formulation resource allocation schedule factor management decision comprehensive review research related topic refer software simulation activity commonly treat evolutionary approach explore similarly evolutionary approach multi objective task assignment moreover cooperative evolution approach encoding per staff assignment another schedule software project concerned task assign developer author mitigate package consecutively achieve package prerequisite amongst consecutively dependent approach assign task developer specific encode schedule detail finally address developer assign task KRRGZ approach author multi objective paradigm model task assignment prevent overload developer competency approach assign task developer task assign developer competent objective KRRGZ minimization research departs approach improves schedule driven task assignment setup detail perform abstract representation propose task assignment software maintenance objective task assignment elaborate formulation objective detail schedule driven task assignment task assignment perform bug fix software codebase assume equip project manager facility prevent risk resource maintain software entire pipeline incoming task assign developer link arrow activity perform manually semi automate fully automate focus task assignment schedule assignment developer schedule understood extension assignment dictate bug fix developer incoming bug fix request request mapped code impact analysis output impact assume impact compose package file modify impact analysis algorithm aim automate action code response request technique regard information retrieval machine heuristic context accuracy mapping literature hybrid approach impact generation receives input although usually bug report source code repository bug report fed request analysis source code repository impact KRRGZ assignment task SD approach upon assignment input developer profile tdg task broken subtasks propose equip facility compute delay output assignment task along optimal schedule assignment non dominate assignment although exist equally efficient minimum relies meta heuristic approach stochastic cannot assure algorithm achievable objective formulation dive detail formulate goal reduce assignment task throughout notation objective formulate precisely therefore concept breakdown schedule WBS incoming task decompose subtasks task associate node tdg assign task maximum task depends assign developer assign subtask task respectively task subtasks task effort estimate effort productivity assign estimation productivity developer assign subtask challenge calculate developer productivity estimate effort developer task evaluate model data effort developer productivity ass KRRGZ investigate developer productivity scope information topic research literature notation developer index task subtask belonging task assignment task dependency graph schedule driven approach approach permutation encode random hypervolume generational distance contribution hypervolume indicator generational distance indicator contribution indicator indicator fitness evaluation  formulate function depends hourly wage developer wage furthermore another namely duration imposes extra software project presence SLA duration define startTime request notify  perceive definition actually function argument detail task function argument subtasks argument situation former calculates startTime task latter computes startTime subtask dep denotes subtasks  assign denotes developer assign available subtask delay define deadline variable industrial setting usually factor finally  formulate return rate amount penalty customer specify SLA grows software maintenance increase completion fitness function objective  combination regular delay  assignment vector calculation conflict however decrease necessarily decrease instance situation developer wage experienced developer wage completion shorter pareto optimality mention already objective orthogonal possibility combine objective vector challenge lack deterministic vector objective principle pareto optimality clarify decision dominate objective objective manner objective strictly dominates population evaluation cannot relation belong generation pareto optimal pareto non dominate candidate dimensional associate objective hence dimensional plot software engineering SBSE approach address task assignment model objective justify contrary relationship objective define fitness function explain algorithm computational computational representation evolutionary algorithm sufficient discrete performance exploration exploitation multi objective offs metaheuristic approach subsequently computational NSGA II evolutionary algorithm NSGA II performs non dominate sort exploitation commonly SBSE specifically model multi objective algorithm non dominate contains NSGA II extend domain specific algorithm greedy local  exploration quality indicator metric  per evaluation intend modify schedule vector computational complexity importance evolutionary algorithm apply greedy local imposes extra address shortcoming possibility define parameter link evaluation however intend enlarge restriction account KRRGZ NSGA II optimization algorithm parameterized KRRGZ setting report approach KRRGZ encode subsection aim encode candidate vector vector encode chromosome determines assign subtask vector schedule specifies task perform developer vector address task assignment determines developer assign subtask chromosome encode subtasks task task dependency graph tdg tdg reveals dependency task task dependent task tdg acyclic graph dag perform task topological sort algorithm sort prepared dag obtain task task topologically sort candidate assignment subtasks developer encode assume developer impact tdg encode feasible candidate link tdg technical dependency exist artifact task dependency sometimes label dependency moreover task subtasks subtask subtask task image KB image sample task dependency graph tdg impact impact subtasks candidate chromosome impact sum subtasks member topological sort tdg chromosome encode candidate topological sort tdg graph KRRGZ encode however chromosome extend encode schedule extend schedule along associate chromosome developer perform task chromosome alone schedule task assign developer perform parallel potential link task important role schedule potential link candidate link parallel node tdg tdg potential link highlight dash potential link iterate schedule schedule fix potential link denote tdg graph candidate assignment parallel task developer analyze intersection parallel task candidate schedule image KB image link potential link iterate schedule link potential link pool node developer node already parallel candidate link tdg link incur cycle graph reevaluate topological sort update tdg dominates former domination potential link schedule vector otherwise remove link tdg link pool empty obvious schedule generation link cycle tdg link automatically discard tdg acyclic avoid loop link incurs optimum encode important KRRGZ considers perform task developer account approach candidate along correspond schedule explore overlook KRRGZ tdg sparse approach potentially possibility KRRGZ sparse dependency task frequently image KB image candidate update tdg along associate chromosome schedule fitness evaluation fitness evaluation compute candidate generation algorithm generation generate offspring population population truncate predefined population algorithm describes greedy local involve fitness evaluation output algorithm schedule associate correspond algorithm denotes schedule initialize algorithm greedy approach link schedule therefore examine link optimum minimum correspond index untouched possibility none link schedule image KB image local algorithm stochastic greedy local SLS assignment adapt local evaluates schedule fix schedule schedule generate flip schedule vector flip switch SLS approach algorithm advance evaluation assignment possibility valid schedule evaluate schedule approach aim research SD KRRGZ latter suppose approach however sake completeness SD KRRGZ approach random RS permutation encode PE RS uniform distribution generate basically sanity SD PE encode preserve evaluation apply PE efficient model NSGA II advantage disadvantage PE SD summarize generate random PE faster easy due feasibility SD feasibility obligation avoid cycle dependency graph augment factor PE whereas SD expands usually SD dependency possibility become invalid evaluate feasibility usually resource consume SD PE discus organization empirical research evaluate approach research research aim aim minimize task assignment bug fix address procedure efficiency propose approach comparison approach RQ NSGA II parameter KRRGZ SD RQ SD dominate KRRGZ quality indicator metric RQ permutation encode dominate KRRGZ SD RQ truth SD accuracy data examine approach applicability validate approach within context therefore data employ available data preprocessed analyze implementation milestone eclipse ide project component jdt platform component access information available developer productivity developer hourly wage developer package incoming bug report dataset associate developer package competence KRRGZ model competency developer productivity loc package productivity developer fix bug relevant statistic project component bug dependency interval bug dependency tdg allows infer task package bug denote impact impact artifact accomplish task artifact define subtasks developer dependency comparison task milestone milestone jdt platform assume scenario tdg milestone sparse due bug fix bug fix seldom another bug fix priority assign bug associate penalty rate bug fix already mention priority usually specify SLAs task priority penalize priority suppose task priority  zero situation priority jdt platform milestone characteristic milestone bug  jdt jdt jdt jdt jdt jdt jdt jdt jdt platform platform platform platform platform platform platform platform platform platform priority associate penalty rate specify SLA priority priority  rate validity procedure introduce metric evaluate approach comparison truth GT SD finally discus configure NSGA II implementation quality indicator metric approach evaluate algorithmic metric quality indicator metric metric approach dominate another approach comparison quality indicator metric hypervolume contribution generational distance hypervolume objective hypervolume refers portion dominate non dominate underlie algorithm approach non dominate objective relative reference hypervolume globally algorithm weakly dominate algorithm pareto optimal moreover diversity convergence feature comparison reveal hypervolume however accord hypervolume suffer bias prevent recognize hypervolume quality indicator guarantee convergence dimensional objective contribution address superiority algorithm candidate already exists reference contribution quality indicator contribution define ratio specific algorithm non dominate already exist reference algorithm generates candidate reference algorithm contribution drawback concern contribution algorithm generational distance generational distance quality indicator compute average distance algorithm belong reference metric representation measurement error indicates obtain pareto optimal member reference distance compute dimensional objective generational distance zero already reference approach fully convergent generational distance important approach pareto optimal non dominate generational distance usually intend algorithm convergence metric hypervolume account diversity algorithm refers distribution non dominate objective non dominate belong individual algorithm metric compute overall distance approximation member reference pareto algorithm request uniformly distribute objective comparison quality indicator metric reference reference union non dominate pareto optimal MOEA framework  reed NSGA II algorithm compute quality indicator metric framework api application program interface normalize objective advance computation reference normalization perform MOEA framework avoid computation reference statistical random variation output evolutionary algorithm due stochastic mitigate author propose scenario therefore statistical justify superiority approach inspire research conduct wilcoxon statistical significance difference performance employ approach wilcoxon non parametric inferential statistical assumption distribution sample analysis wilcoxon robust treat data outlier output sum rank research literature recommends loss approach performs approach performance examine algorithm moreover usually non parametric criterion precisely report difference performance heuristic approach compute obtain statistical vargha delaney approach allows extent approach comparison quality indicator metric denote refer algorithm definition rank sum algorithm item usually report basis confidence confidence specifies threshold accepted complement wilcoxon robustness report statistical difference domination determines significance difference propose medium approach perform lose medium instance label comparison truth algorithmic performance metric evaluate propose approach however examine accurate propose approach confirm truth GT GT assignment successful fix GT compute accuracy SD KRRGZ obtain accuracy identity comparison implies recommend developer actual fixer iff developer fix bug GT approach robust computation accuracy member data profile algorithm identify developer perform task refer approach profile assignment characteristic profile developer scenario developer characteristic developer assign equally valid profile technique research literature automatic bug assignment research compute profile accuracy information productivity developer package hence developer identical productivity package interchangeable distribution developer productivity jdt platform package violin plot although dispersion exists developer productivity package configuration NSGA II detail operator NSGA II elaborate SD KRRGZ genetic operator NSGA II apply multi objective important genetic operator exploration exploitation distance sort binary tournament member conveyed generation distance normalize distance closest  along objective axis distance measurement precede sort objective ranked infinite distance computation objective normalize sort diversity NSGA II operates distance therefore binary tournament selection upon distance tournament crossover binary tournament selection commonly NSGA II member tournament alongside operator crossover function uniform mutation function exploration algorithm configuration tune function operator aim evaluate convergence challenge multi objective evolutionary convergence generational distance moreover fix evaluation algorithm algorithm evaluate fitness function equally evaluation amount computational effort population configuration population configuration algorithm fitness evaluation  configuration parameter quantitative evaluation approach  fitness evaluation configuration parameter    KRRGZ schedule driven detailed overview population member empty schedule mutation crossover apply chromosome gene schedule creation relies developer subtask alter chromosome reevaluate prevent invalid schedule crossover mutation operator apply associate schedule valid anymore existence cycle tdg schedule completely rewrite fitness evaluation apply mutate ensure schedule compatible associate candidate configuration approach KRRGZ SD quality indicator metric population refers candidate initialize algorithm fitness evaluation  crossover uniform mutation genetic operator implementation argument function argument rate function operating crossover function rate determines probability chromosome exchange gene rate mutation limit probability offspring gene variable candidate initialize developer NSGA II candidate chromosome combine fix gene offspring chromosome implement NSGA II operator reform exist chromosome population aim exploration image KB image flowchart apply SD approach contribution NSGA II KRRGZ interpretation reference legend reader refer web version article respectively crossover uniform mutation apply candidate particularly vector aim research parameter NSGA II approach examine realistic approach solves objective task assignment efficient proceed SD KRRGZ quality indicator metric finally examine SD GT accuracy RQ NSGA II parameter KRRGZ SD parameter tune activity usually overlook software investigation configure KRRGZ parameter model therefore preliminary research refer RQ setting associate genetic operator investigate examine parameter tune operator another comparison crossover jdt comparison candidate platform maximum examine crossover rate parameter examine genetic parameter tune operator  crossover mutation parameter tune mutation tune mutation parameter jdt platform report respectively comparison performance belongs mutation crossover quality indicator metric jdt   crossover quality indicator metric platform   crossover mutation  crossover mutation rate population already KRRGZ SD mutation quality indicator metric jdt   mutation quality indicator metric platform   RQ SD dominate KRRGZ quality indicator metric RQ examines improvement SD KRRGZ central research therefore elaborate motivate explain SD outperform KRRGZ comparison SD macro pareto boxplots median  quality indicator perform statistical approach elaborate motivate specific dataset clarify approach chosen bug jdt information bug priority estimation effort fix bug package affect source data KRRGZ jdt developer information relative productivity package affected bug code per loc hourly wage effort package jdt  core swt ltk fix bug jdt priority information importance bug bug   KRRGZ sample productivity developer per package loc   comparison SD KRRGZ snapshot contains bug fix snapshot developer involve bug fix activity approach relative improvement percentage achieve SD KRRGZ improvement minimum approach   improvement  jdt platform address package jdt ltk package  package core compute sample already mention approach KRRGZ equip possibility due inclusion schedule therefore acyclic graph dag bug dag associate whereas absence candidate schedule dictate perform task developer schedule achieve improvement almost improvement improvement rearrangement perform task arrangement evaluate rearrangement KRRGZ approach superior bug address comparison SD KRRGZ snapshot snapshot SD KRRGZ approach assignment SD KRRGZ pareto improvement relative improvement non negative improvement SD performs KRRGZ negative percentage denote superiority KRRGZ SD snapshot SD KRRGZ however snapshot SD beaten KRRGZ objective happens SD KRRGZ pareto optimal equally optimize project manager define priority objective instance opt uniformly SD invest available project manager instead minimize SD KRRGZ project manager easily KRRGZ visualize pareto randomly milestone jdt platform pareto visually diagram random RS comparison sanity scatter plot milestone jdt platform respectively particularly demonstrates pareto optimal jdt dominate KRRGZ occurs milestone platform pareto plot SD dominates KRRGZ RS throughout happens SD dominate KRRGZ SD KRRGZ almost pareto image KB image pareto jdt milestone respectively depict jdt closer origin performance image KB image pareto platform milestone respectively depict platform closer origin performance performance comparison boxplots addition pareto approach respect median  evaluate quality indicator boxplot diagram comparison SD KRRGZ perform quality indicator metric plot data comparison milestone project plot non dominate jdt dominate comparison quality indicator platform plot superiority jdt milestone SD median outlier happens platform addition SD dominates KRRGZ median jdt platform respectively moreover standard deviation quality indicator metric milestone project significant difference performance highlight SD performs KRRGZ quality indicator hypervolume contribution image KB image boxplots performance quality indicator jdt milestone respectively boxplots hypervolume generational distance contribution boxplots correspond SD KRRGZ median horizontal interpretation reference legend reader refer web version article image KB image boxplots performance quality indicator platform milestone respectively boxplots hypervolume generational distance contribution boxplots correspond SD KRRGZ median horizontal interpretation reference legend reader refer web version article statistical comparison subsection report output apply non parametric statistical wilcoxon rank denote average quality indicator metric SD per data KRRGZ RS wilcoxon examines approach statistically significantly describes difference SD KRRGZ data relation approach denotes standard deviation quality indicator jdt platform milestone entry normalize background scheme corresponds  darker hypervolume contribution generational distance  wilcoxon computation finally summarize loss stats stack scenario obtain loses output wilcoxon threshold wilcoxon summarize loss statistic wilcoxon sum rank approach fix comparison approach jdt platform jdt SD winner KRRGZ platform SD KRRGZ worth mention RS situation performance comparison image KB image loss summary wilcoxon rank sum approach respectively stats loss jdt platform threshold stack summarize loss vargha delaney upon quality indicator SD jdt project KRRGZ visualizes approach obtains comparison platform project SD KRRGZ respectively SD significantly KRRGZ quality indicator RQ permutation encode dominate KRRGZ SD RQ examine efficiency SD KRRGZ permutation encode PE therefore perform optimal task assignment milestone jdt platform descriptive information bug unique developer unique devs fix bug approach addition SD PE KRRGZ chosen minimum related pareto PE outperforms SD happens SD PE pareto optimal equally optimize SD clearly outperforms PE PE SD minimum dominates visualize pareto pareto implementation SD KRRGZ PE milestone jdt platform respectively SD performs PE closer origin indicative performance clearly jdt platform platform jdt performance PE SD comparison SD KRRGZ PE minimum chosen   superiority SD PE  jdt jdt platform platform plot quality indicator metric milestone SD outperforms PE image KB image pareto KRRGZ SD PE platform milestone platform platform worth mention PE dominate SD performs KRRGZ pareto evidence regard image KB image boxplots performance quality indicator jdt milestone boxplots hypervolume generational distance contribution respectively boxplots correspond SD PE median horizontal interpretation reference legend reader refer web version article image KB image boxplots performance quality indicator platform milestone boxplots hypervolume generational distance contribution respectively boxplots correspond SD PE median horizontal interpretation reference legend reader refer web version article RQ truth SD accuracy dedicate RQ evaluate propose approach accuracy particularly comparison GT assignment approach KRRGZ data earlier accuracy report identity profile truth GT SD KRRGZ accuracy identity profile  accu profile accu  jdt platform conformance assignment SD KRRGZ assignment identity comparison mainly moreover profile accuracy SD KRRGZ acceptable accuracy GT accuracy SD approach illustrates assignment GT jdt jdt platform GT SD KRRGZ nonetheless significantly conjecture experienced salary fix bug milestone proclaim GT optimal KRRGZ SD outperform GT clearly achieve relatively profile accuracy SD regard profile accuracy KRRGZ GT RQ KRRGZ discussion limitation threat validity built approach approach inherits limitation KRRGZ SD assumption relevant developer bug simultaneously bug report developer competency fix effort report bug fix developer productivity accurate complexity bug consideration competency developer proportional productivity assumption affect approach equally comparison approach assumption approach lose benefit instance KRRGZ address developer assign task prevent overload examine SD violin plot developer participation randomly milestone jdt platform task evenly distribute developer fashion KRRGZ SD optimizes KRRGZ avoids overload developer aspect addition influence decision manager instance leader prefer assignment involves developer knowledge code widely purpose inspire criterion preference refer specific metric developer involve task per developer developer assign bug specific metric subset scenario pareto dominate others regard platform manager characteristic manager maximize developer involve developer optimize image KB image task distribution developer SD random milestone jdt platform examine dependency bug fix affect performance SD relation KRRGZ  become sparse performance SD tends KRRGZ bug fix however affect dominance SD KRRGZ approach perform SD outperforms KRRGZ consistently specific metric subset pareto optimal platform developer sum devs involve devs without task   task per dev devs without task researcher investigate data address limitation benefit data addition script access replication package subsection address threat concern validity introduce approach specifically construct internal external validity construct validity construct validity address doubt surround methodology empirical research address construct validity employ literature empirical research comparative data evaluate KRRGZ concern data KRRGZ apply internal validity internal validity potential bias incur stochastic evolutionary approach imposes bias tackle internal threat approach quality indicator rid bias experimental fix configuration average quality indicator wilcoxon apply statistically output approach acceptable safety external validity generalizability propose approach directly external validity software project empirical cannot valid software data obtain project data originate issue potentially threat generalizability concern moreover machine overfitting underfitting metaheuristic approach prevent issue encode configuration initialize employ data almost dependency bug fix situation bug fix task cannot assure software project tdg schedule approach lose advantage perform KRRGZ role dependency limited intra module dependency account exists risk dependent library reference code dependency network ecosystem address schedule driven approach beneficial dependency identify conclusion future conduct empirical developer bug fix assignment task assignment formulate multi objective objective paradigm schedule driven extends encode improve efficiency introduce specifically approach explore embed greedy operates schedule quality indicator metric perform comparison hypothesize exploration exploitation quality indicator metric improvement schedule driven approach KRRGZ approach schedule driven approach employ proprietary source development bug fix benefit propose approach manage management respect efficient bug fix assignment advantage beneficial handle assignment without specific presumption codebase bug report propose approach implement issue receives issue regular basis properly task associate bug issue dependency bug examine task assign developer consume activity greedy local evaluation iterate research SD approach efficient issue bug assignment future goal account research examine optimize developer knowledge project assign task developer development maximize data model developer turnover curve others turnover usually lose experienced developer consequently project risk therefore task assignment knowledge diffusion credit authorship contribution statement   software conceptualization investigation draft   conceptualization supervision   conceptualization validation   validation review edit supervision