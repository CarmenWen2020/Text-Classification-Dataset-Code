mutation generate syntactic version mutant program widely software notably assessment suite mutant useful extent semantically distinct program semantically equivalent program despite syntactically distinct research devote identify weed equivalent mutant program semantically equivalent non trivial tedious error prone task identify equivalent mutant individually intent purpose suffices estimate interested estimate mutant generate program ratio equivalent program refer ratio equivalent mutant rem argue basis analytical rem program estimate static analysis program analyze mutation related program purpose aspiration attention potentially effective approach longstanding stubborn previous keywords mutation mutation equivalence redundancy ratio equivalent mutant mutant equivalence mutation generate syntactic variation program meaningful extent syntactic modification apply yield semantic difference mutant syntactically distinct program compute function existence pervasiveness equivalent mutant source bias uncertainty mutation analysis generate mutant program suite infer depends equivalent mutant survive mutant somehow mutant equivalent mutant mutant equivalent mutant suite mutant important distinguish distinct mutant mutant something ass extent mutant distinct equivalent issue mutant equivalence focus research recently beyond scope survey mutation equivalence research  generalization research mutation equivalence category research infers equivalence local analysis mutation site prone loss recall program locally distinct globally equivalent due non injectivity program function research infers equivalence global behavioral attribute prone loss precision program behavioral attribute semantically distinct syntactically distinct program semantically equivalent undecidable notwithstanding theoretical attempt program semantically equivalent non trivial costly error prone program respect specification probably program attempt mutant equivalent program impractical attempt mutant distinct impractical importantly practical application identify equivalent mutant individually suffices estimate important identify equivalent mutant individually helpful whenever mutant probability survive mutant equivalent increase approach estimate equivalent mutant argue research mutation equivalence ought complement effort equivalence program effort estimate probability program program mutant mutant semantically equivalent estimate probability relatively easy inexpensive enables pertain mutation equivalence illustrate snapshot ongoing research mutant equivalence previously publish introduce entropy software metric aim reflect semantic attribute software artifact syntactic representation intent explore relationship semantic metric fault tolerance software artifact empirically actually metric correlate proneness artifact equivalent mutant discover metric correlate program proneness generate equivalent mutant reflect fault tolerance attribute program fault tolerant prone generate equivalent mutant fault tolerance redundancy argue quantify redundancy program estimate ratio equivalent mutant program prone mutation argue ratio equivalent mutant program depends program mutation operator apply discus impact mutation operator ratio equivalent mutant contribution advance respect previous publication automate calculation redundancy metric discus calculation redundancy metric automate developed compiler generation technology regression model automatically calculate redundancy metric discus derivation regression model redundancy metric compute automate estimate ratio equivalent mutant software artifact equivalence mutation revisit formula equivalence mutation propose formula excludes consideration mutant estimate equivalent program quantifies suite performance distinct mutant potentially redundant duplicate mutant dependency mutation policy discus rem program depends mutation operator deployed program orthogonal approach mutation policy define mutation operator derive regression model derive regression model mutation operator apply individually infer rem operator individual operator sample illustrative sample purpose illustrate potential quantitative approach envision empirically validate threat validity primarily analytical ass proneness program generate equivalent mutant quantify quantification analyze mutation related program basis analytical argument information theoretic function statistical identity analytical argument forth compelling empirical validation explore challenge empirical related discus related research effort highlight relationship interestingly effort premise namely mutation expensive proposition mitigate expense attempt predict outcome mutation without actually conduct preliminary empirical validation assumption report throughout assumption fully  validate approach panacea mutation equivalence venue research lightweight effective alternative prevail semantics approach stubborn redundancy mutant   mutant equivalence mutant equivalence factor namely mutant operator program mutate sake argument fix mutation policy define mutant operator reformulate yao attribute program prone generate equivalent mutant program prone generate equivalent mutant deliver function despite presence mutation mutation instance fault formulate attribute program prone generate equivalent mutant deliver function despite presence fault attribute fault tolerance equally program fault tolerant redundancy hence quantify redundancy program ass program predisposition generate equivalent mutant quantify proneness program generate equivalent mutant ratio equivalent mutant rem ratio equivalent mutant generate program generate mutant quantitative redundancy due briefly definition compute correlate rem program rem resolve define redundancy metric streamline functional relationship metric define shannon entropy assume reader familiar simpler concept theory sake simplicity entropy compute assumption uniform probability redundancy define programmer declare really uncommon declare integer variable typical integer variable sufficient declare variable respectively birth variable redundant mention variable redundancy reflect gap declare actual random variable declare program random variable actual redundancy program ratio conditional entropy entropy entropy decrease execution program proceeds resolve define version redundancy initial actual actual function conditional entropy compute illustrative image KB image program define integer variable entropy initial actual define positive integer variable entropy actual define positive integer variable entropy hence redundancy initial execution program creates dependency program variable exist correlate rem redundancy reflect volume information declare actual around declare program likely mutation alters alter actual functional redundancy define model software function input output model functional redundancy conditional entropy normalize metric entropy function conditional entropy merely difference entropy metric introduce clark     miller reflect program tendency mask error compute introduce define positive integer variable define positive integer variable correlate rem output harder mutant operator affect program output output distinct non injectivity define whereas previous model program function input output purpose metric model function initial function injective distinct initial mapped onto distinct quantify non injectivity program define metric reflect extent function initial onto injective conditional entropy initial actual actual latter function former conditional entropy difference respective entropy normalization quantity entropy initial actual compute already albeit illustrative compute entropy initial actual actual illustrative insertion sort algorithm integer array initial actual program initial array index variable scan array index partially sort array hence actual variable fix array scan increase unknown hence entropy estimate entropy array sort array reduce entropy permutation sort version approximation whence correlate rem driver mutant equivalence program ability mask error program mutation virtue non injectivity transformation factor quantifies ability another interpret non injectivity ratio information mutant lose retrieve hence equivalent program non determinacy define readily acknowledge metric controversial hence provision model metric without whereas concept equivalence program mutant widely understood argue ambiguity constitutes equivalence program image KB image program equivalent depends variable version auxiliary variable define variable alone discussion discussion oracle equivalence specifically quantify non determinacy oracle equivalence relation program mutant define non determinacy oracle ratio conditional entropy entropy compute illustration oracle compute non determinacy define oracle equivalence hence indeed leaf uncertainty define oracle equivalence hence informs variable fails inform correlate rem clearly looser oracle equivalence mutant deem equivalent program interpret ratio information mutant program satisfy oracle equivalence mutant program variable pas equivalence redundancy circumstance equivalence conclude model redundancy highlight relationship mutant equivalence survey circumstance mutant equivalent program circumstance capture metric discussion refer terminology   pertain fault error failure envision circumstance mutant equivalent program mutation alter program mutant distinct source text impact program variable unique identify database mutation onto distinct mutation impact program affect program execution distinct attribute actual program declare redundancy reflect gap actual declare argue likelihood declare without affect actual mutation alter fault define fault  hypothesize error hence mutation alters error alter fault program compute sum non empty array indexed variable variable program initializes mutant initializes mutation fault generates error satisfies intend loop invariant redundancy increase monotonically initial redundancy intermediate increase argue adequate situation mutation fault error masked mutation variable variable subsequently argue non injectivity reflect extent initial mapped mutation fault error propagate masked failure prone whenever observable output program projection program hence distinct preclude output output extreme program computes median array sort array return entry alter without affect output argue reflect focus input output program internal mutation fault error error propagate failure failure equivalence output arises whenever define equivalence identity output variable output variable program swap swap previous equivalent variable argue non determinacy reflect summarizes discussion aspect mutation equivalence redundancy metric capture semantic syntactic analysis reachability possibility mutation operator apply statement due program unreachable indeed analysis revolves around function remain intact alter hence approach capture mutation apply code integration factor beyond scope research integrate analysis parameter quantifies ubiquity unreachable code software metric McCabe cyclomatic complexity redundancy metric driver mutant equivalence circumstance mutant   mutation alter program initial redundancy mutation alter program fault alter redundancy mutation fault error masked non injectivity mutation fault error propagate failure functional redundancy mutation fault error propagate failure failure within tolerance oracle equivalence non determinacy estimate redundancy metric discus automate derivation redundancy metric redundancy metric pertain program pertains oracle equivalence resolve regression model program specific metric factor non determinacy formula regression model derive independent variable dependent variable zero indeed whereas characterize program characteristic oracle equivalence totally role factor extreme occurs oracle obtain regardless factor hence varies varies integrate independent variable regression model factor linear regression formula ensure model focus exclusively program specific redundancy metric amount zero program specific redundancy metric deploy compiler generation technology automate derivation redundancy metric java program subsequently derive estimate program rem analyze mutation related specifically apply syntax translation compute program specific redundancy metric namely refer RC redundancy calculator automate derivation non determinacy normally compute analyze source code oracle equivalence compute metric java evaluate entropy entropy entropy initial actual entropy actual entropy input entropy output discus various quantity evaluate entropy declare semantic fairly straightforward java datatype associate standard entropy assumption  declare internal input define explicit parameter global variable access reading output define return statement global variable access entropy sum entropy variable entropy variable dependent data variable per data   bool  byte  char   data array specify default adjust data array  user entropy actual redundancy metric compute entropy actual entropy initial actual entropy actual discus initial actual initial actual assume within declare hence precondition entropy initial actual define assertion defines precondition precondition statement slightly modify version java  syntax assert  exclusively precondition purpose compute define recursively expression entropy data hence define integer variable precondition  expression data indeed comparison exclude hence reduce entropy illustration define variable integer precondition  entropy initial actual indeed absolute indeed inequality excludes expression approximation reduce entropy illustration define integer variable precondition  integer zero compute entropy merely approximate whereas equation logically independent adopt simplicity illustration define integer variable precondition  whence reflect entropy merely indeed disjunction assume reduces entropy yield maximum entropy illustration define variable precondition  hence entropy uncertainty despite attempt systematic analyze precondition perfect define integer variable precondition  entropy actual initial analyze precondition precision depth semantic analysis beyond scope entropy actual barely user explicit expression precondition cannot user hence resolve compute entropy specifically resolve compute entropy actual functional dependency creates variable executes program catalog variable initial influence determines entropy actual sum entropy catalog variable introduce boolean matrix dependency variable location source code matrix contains variable location depends initial variable matrix derive vector logical disjunction location source code vector contains location depends initial variable entropy actual compute sum entropy variable correspond entry vector vector vector derive dependency matrix declaration upon encounter declaration variable matrix initialize identity boolean matrix diagonal false elsewhere signify variable depends exclusively initialization whenever variable assign constant correspond variable assign false everywhere signify variable variable assignment whenever encounter assignment statement variable expression corresponds variable matrix replace logical variable expression assignment statement statement statement statement variable correspond statement statement variable statement whenever encounter statement derive dependency matrix dependency matrix matrix yield maximum entropy dependency matrix statement statement interpret statement shorthand apply statement skip leaf variable intact entropy dependency matrix corresponds skip merely variable cond matrix decision preserve program variable dependent variable loop whenever encounter statement derive dependency matrix loop dependency matrix statement dependency matrix loop closing bracket assignment execute loop involve implicitly variable loop illustrative respectively sequence assignment statement statement statement despite effort systematic analyze functional dependency program variable perfect stepwise analysis conduct scan program initial declare initial actual  statement entropy initial actual integrate dependency analysis theory ought initial actual define precondition propagate alongside functional dependency depth semantic analysis akin symbolic execution scope modest goal estimate entropy image KB image illustration dependency matrix statement image KB image illustration dependency matrix statement estimate ratio equivalent mutant validity conjecture redundancy metric enable predict rem program conduct function apache mathematics library apache lang library http apache org benchmark software component commonly software function data file data oracle output program generate mutant  http  org context deploy default mutation operator  increment mutator void mutator return vals mutator math mutator negate conditionals mutator invert  mutator conditionals boundary mutator manage execution comparison mutant maven http maven apache org redundancy metric calculator generates estimate program specific metric estimate rem function execute data suite output mutant  execute suite rem ratio mutant output generate mutant data sample benchmark   loc loc suite estimate actual ratio equivalent mutant mutant generate lack accurate estimate program ratio survive mutant mutant mutation mutant survive mutation equivalent suite sufficiently thorough minimize likelihood latter scenario monitor statement coverage mutant ensure thoroughly mindful perfect statement coverage neither due possibility unreachable code sufficient execution mutant yield outcome input data outcome another mindful ratio survive mutant mutant upper bound actual accurate estimate actual enlarge diversify suite outcome data correspond independent variable dependent variable raw data model available online pdf format http web  edu  model pdf data regression model predict rem redundancy metric model redundancy metric backward elimination procedure predictor variable variable model adjust bic achieves balance data predictive performance subset selection model variable model data validation regression model significant anova examination residual yield concern model attain variation rem explain model likely due sample nevertheless rem predict fairly linear model performance improve sample consideration non linear model distinction redundancy metric currently investigation alongside factor reflect probability mutant reachability program mutant derive propose mutation policy estimate equivalent mutant performance suite judged estimate non equivalent mutant image KB image histogram residual quantify mutation redundancy program ratio equivalent mutant suite mutant cannot unless distinct mutant mutant contains really effectiveness equivalence mutant address estimate equivalence mutant extent mutant slightly program mutant generator apply minor syntactic difference assume amount redundancy hence exception assumption mutation alters program involve widely redundancy clearly assumption justified situation notwithstanding assume mutation operator generally alter amount redundancy program indeed program program mutant program within slight syntactic difference program neither likely likely mutant equivalent hypothesis  benchmark apply  default mutation operator yield mutant apply RC randomly mutant return program specific metric extent rem program redundancy metric program redundancy rem hence argue approximation probability mutant equivalent address probability equivalent equivalence denote probability equivalence probability estimate inductive formula probability equivalent probability equivalent inductive formula considers exist equivalence defines equivalence explicit formula equivalence mutant argue truly effectiveness worthwhile important image KB image equivalence function depends depends hence cannot typical neighborhood sample program encounter benchmark empirical distinct mutant generate mutant mutant realize actually dozen distinct mutant consequence observation mutant program rush premature  compute program sake illustration sample surprising borne empirical observation researcher distinct mutant mutant nearly percent mutant validate equivalence happens increase equivalence non equivalent exist equivalence probability unless zero quantity eventually becomes zero sufficiently borne observation evolution sake correspond zero non zero intermediate maximal intermediate non zero zero zero interestingly surprisingly maximal variation function evolution image KB image essential mutation evolution evolution mutation mutant program suite mutant customary ratio effectiveness mutation argue formula suffers flaw denominator ought reflect mutant equivalent hence data numerator denominator ought quantify mutant instead distinct mutant suite cannot credit mutant repeatedly address flaw propose definition definition program mutant thereof mutant equivalent suite execution mutant mutant essential mutation denote define ratio distinct mutant distinct mutant whereas traditional mutation ratio propose mutation ratio equivalence overlap shade equivalence mutant equivalent denominator already viz propose compute equivalence overlap introduce function partition subset thereof equivalence overlap sake simplicity refer cardinality function coverage routine assumption statistical independence function expression ratio whereas equivalence overlap overlap equivalence random equivalence spar definition equivalent hence equivalence reference ponder equivalence define equivalence relation application formula minimal mutant extraction minimal anything distinct mutant identify minimal distinct mutant representative equivalence representative equivalence sake minimality partition equivalence relation equivalence algorithm extract minimal mutant scan image KB image albeit estimate minimal scan suffices iterate identify distinct whence algorithm image KB image inspection algorithm speedup achieve iteration distinct mutant introduce function  inspection estimate partition equivalence inspect additional equivalence necessarily additional drawn define goal estimate relative probability equivalence geometric random variable parameter estimate probability relative resort recursive formula probability associate obtain depends outcome recursive formula obtain combinatorics remain already affect maximum additional correspond probability explain occurs reflect affect remain determines probability computer code recursively computes combination probability allows compute hence probability standard deviation compute conceptually unequal however individual account complexity combinatorics involve increase dramatically illustration whence derive estimate mutant mutant partition equivalence estimate speedup briefly estimate performance algorithm evaluate achieve adopt algorithm function algorithm iteration inner loop minimal iteration function equivalent sum sum iteration minimal iteration minimal etc approximate sum whereas algorithm minimal algorithm review equivalence minimal hence performance estimate hence simplification safer approach estimate cannot rely actually equivalence algorithm scan remain equivalence exist achieve remedy algorithm apply iteration outer loop exit identify equivalence merely inspection remedy thereof boundary slightly currently multiplier ensures minimize overhead conduct analyze mutant program minimal distinct mutant equivalence distinct mutant mutant distinct mutant equivalence mutant perform encounter distinct mutant involve mutation hence equivalence investigation impact mutant generation policy analyze rem program focus solely program assume fix mutant generation policy rem depends mutant generation policy specifically mutant operator deploy approach integrate mutant generation policy analysis program attribute mutant generation policy implement research develop regression equation policy rem function program attribute individual mutation operator develop regression model operator infer rem mutant generation policy individual operator option research approach insight individual mutation operator affect rem program interact cancel accentuate practical option broader policy operator operator option depends ability derive rem operator rem individual operator apply separately operator mutant generate program individual operator mutant equivalent mutant generation policy deploys operator rem operator hence rem policy absence information relative assume yield formula rem validate formula viz specifically function apache mathematics library http apache org function suite oracle assert statement function  http  org alongside maven http maven apache org generate mutant equivalence program data derive approximation rem program active mutation operator activate individual mutation operator activate combination operator rem combination operator formula derive rem individual operator operator operator  default operator operator operator compute average standard deviation relative error rem combine operator compute rem derive individual operator selection operator operator surprisingly precise operator extract drawn therefrom rem rem compute combination predict error difference compute predict error remain combination involve operator conditionals boundary mutator combination operator combine respectively predict error compute rem rem eleven combination operator entry comparison rem compute rem fourteen program sample obtain combination mutation operator obtain combination operator curve coincide program unison program exhibit gap estimate rem intrigue ought investigate preliminary conclusion fairly likely estimate rem program mutant generation policy rem mutation operator policy data available online http web  edu  impact pdf mutation operator  mutator  mutator  conditionals mutator  boundary mutator  mutator  vals mutator   mutator  mutator sample function sample  loc gcd   public    public    int int  public   int void  int   boolean  int  int int  int int rem composite mutation policy rem composite mutation policy II assessment assessment approach envision compute rem program discus threat validity rem approach scenario briefly quantitative approach reflect envision approach assumption equation model purpose tentative analytical argument empirically validate  loc convert integer deploy RM calculator code yield redundancy metric apply regression formula yield execution  yield mutant estimate mutant equivalent  excessive actually mutant equivalence program equivalent remainder discussion rem estimate leaf mutant estimate distinct  address mutant equivalent program distinct equivalence partition accord discussion estimate mutant distinct program equivalence accord sixteen mutant distinct remain equivalent sixteen data ass effectiveness suite suite mutant generate accord calculation cannot anyway traditional mutation argue flaw account mutant cannot hence suite cannot penalize fail individual mutant equivalent thereby unduly reward suite repeatedly mutant formula propose mutant equivalence mutant mutant useless distinct mutant instead equivalence minimal mutant mutant equivalence clearly expensive equivalence mutant mutant already picked distinct mutant arises mutant average introduce function mutant inspect mutant equivalence mutant inspect distinct mutant estimate target equivalence achieve speedup resolve identity distinct mutant achieve estimate derive estimate cannot rely fully actual equivalence scan mutant equivalence exist safer alternative simply inspect mutant return whatever distinct mutant encounter assurance normally equivalence risk approach estimate equivalence actual terminate equivalence remedy flaw resolve inspect chip increase equivalence without risk useless inspection accord relative importance assign efficiency shorter processing effectiveness ensure equivalence relation threat validity purpose definite ascertain highlight promise quantitative approach highlight research direction potential useful insight mutation program risk approach whereas traditional approach rely semantic analysis explore mutation equivalence rely quantitative potentially  static analysis program source code briefly discus weakness approach infer direction future research calculation redundancy metric redundancy metric define basis model computation variable explicitly declare fix scope fix entropy compile variable modify context explicit assignment statement function java code complex  aspire compute redundancy metric static source code analysis virtually impossible infer detailed semantic information static analysis simplify assumption approximation remedy weakness envision revisit definition redundancy metric possibly OOP specific metric integrate metric capture program proneness unreachable code metric complexity program structure envision revisit simplify assumption strike judicious compromise effectiveness precision redundancy metric rem conjecture rem program statistically correlate redundancy borne formula function redundancy metric investigation derive regression model mutant generation policy program program regression model assumption etc explore optimal classification model derivation minimal optimal validate model integrate mutation policy argue rem program individual mutant generation operator derive rem program mutant generation policy operator formula formula assumption operator generate approximately mutant empirical validation formula operator anecdotal propose formula remedy weakness envision enhance analysis program catalog statement target operator quantify frequency appearance statement program analyze formula rem frequency statement target operator program analyze envision conduct empirical formula estimate rem paradox highlight importance rem analyze mutation attribute program highlight challenge involve estimate rem precision explore investigate rem estimate rem precision premise aspire estimate program mutant generation policy static analysis obtain approximation apply mutant generation policy program mutant equivalence data obtain upper bound thorough diverse data upper bound analogy cocomo cocomo cocomo II model vast wealth information estimate project project detail distribute schedule across phase activity manage software development accord propose estimate schedule equation cocomo cocomo II ability estimate software kloc equation wealth information software development regardless estimate compute non determinacy endeavor automate calculation program specific redundancy metric redundancy metric pertains oracle equivalence remains future research goal involves compiler generation technology focus analyze java function return boolean conclusion prospect goal researcher attention venue mutation research explore promise yield useful summary research mutation equivalence focus primarily task analyze program program mutant mutant semantically equivalent despite syntactically distinct notwithstanding task undecidable costly tedious error prone difficulty compound program mutant potentially mutant operation interested mutual redundancy mutant mutant equivalence operation fortunately program semantic equivalence inevitable argue intent purpose individually identify mutant equivalent program sufficient estimate premise stem namely ratio equivalent mutant rem program mutant generation policy define mutation operator affords significant insight mutation program policy estimate rem program mutant generation policy analyze redundancy program argue mutation related economically estimate ratio equivalent mutant program indeed estimate program estimate mutant equivalent estimate extent mutual redundancy mutant equivalent discus rem program ass redundancy mutant specifically estimate equivalence mutant equivalent program ass effectiveness suite distinct mutant argue commonly mutation flaw propose definition formula improve mutation ass performance data mutant distinct mutant empirical validation formula investigation formula criterion forth extract minimal mutant redundancy possibly redundant mutant argue mutant equivalence usually advantageous limit mutant per equivalence ahead equivalence mutant per equivalent derive program attribute program prone generate equivalent mutant characterize program prone generate equivalent mutant program preserve function despite presence mutation mutation introduce simulate fault replace former latter characterization program preserve function despite presence fault program fault tolerant program attribute program fault tolerant redundancy hence quantify redundancy program estimate earlier define redundancy metric program independent variable empirically derive regression model dependent variable compiler generation technology scan java code compute redundancy metric derives estimate currently evolve enhance precision scope related goal title predictive mutation PMT overlap extent goal aim estimate outcome mutation mutant survive without actually conduct  exception PMT mutation approach predicts mutant execution alive without mutant execution earlier PMT approach refer rem approach goal distinct achieve goal whereas PMT purely empirical relies machine predictive model rem approach combine analytical empirical attempt identify attribute program rem quantify attribute derive regression model experimental data compute rem program function quantitative attribute identification quantitative attribute crucial argument mutation surrogate fault attribute program prone generate equivalent mutant program fault tolerant redundancy whereas redundancy metric independent variable rem depends factor execution infection propagation readily concede redundancy metric account probability execution envision integrate factor future research argue redundancy metric capture probability infection functional redundancy non injectivity metric capture probability propagation  argue typical mutant pool obstacle widespread mutation identify mutant fault reveal capability limit useful mutant argue fault reveal capability depends static attribute mutant machine algorithm develop  analyzes mutant rank accord fault reveal capability empirical evidence outperforms random mutant selection target   premise mutation related attribute essentially dynamic attribute infer static analysis relevant artifact another relationship upper bound fault reveal mutant seek indeed goal  seek minimal mutant ensure mutant equivalent hence necessarily equivalent mutant pigeonhole principle function meaning  significance ratio equivalent mutant program function redundancy metric equivalence probability equivalence equivalence partition essential mutation data mutant program partition ensure argue mutation suite reliable indicator effectiveness estimate mutation suite costly hence seldom remedy flaw propose estimate effectiveness suite static analysis production code code propose independent variable code coverage production code metric code readability mutation dependent variable deploy machine derive empirical model estimate mutation production software independent variable pertain production code code approach approach recognizes inherent inefficiency traditional mutation attempt obviate focus static analysis relevant artifact approach approach premise valid gain efficiency exceeds override loss precision mutation imperfect effectiveness suite mutant prof effectiveness suite depends mutant distinct mutant equivalent mutant hence metric effectiveness equivalence mutant individual mutant intrigue research aim minimize mutant without affect effectiveness relies concept mutant subsumption defines mutant redundancy mutant subsume hence deem redundant another research intrigue aim achieve goal namely identify weed useless redundant mutant definition redundancy totally accord mutation subsumes mutation detects detects mutant obtain apply mutation subsumption formulate mutant mutation subsumes program mutation apply theory rewrite subsumption dynamic subsumption respect data define interestingly subsumption definition relative correctness propose perfectly intuitive mutant respect mutant respect equivalent dynamic subsumption equivalent relative correctness respect restriction whereas mutant equivalence definition equivalence relation mutant subsumption relation pre whereas mutant equivalence minimizes useful mutant per equivalence mutant subsumption minimizes useful mutant maximal relation pursue rem estimate minimal per subsumption criterion estimate minimal per equivalence criterion prospect empirical validation stem mathematical analysis empirical evidence validate conduct empirical validate analytical involve benchmark software traditionally mutation generation estimate borne validity hypothesis program mutant approximately exactly identical limited estimate borne partition equivalence inspection average equivalence hypothesis without assumption equivalence partition equivalence inspection sufficient likelihood multiplicative coefficient hypothesis without assumption equivalence realistic assumption occasionally throughout equivalence mutant approximately interestingly mutant program clearly research goal aspiration worthwhile goal effective alternative complement prevail approach undecidable intractable semantic analysis