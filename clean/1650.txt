security reusable building secure software architecture recur security context incomplete nonstandard implementation security vulnerability invite attacker therefore detection security improves quality security feature propose security detection spd framework internal technique framework platform data extraction semantic analysis technique implement matrix OMM non uniform distribute matrix NDMM technique OMM technique detects security matrix inside target matrix tsm NDMM technique determines relationship security relationship tsm semantic analysis reduce rate false positive evaluate performance propose spd framework technique independently NDMM technique location security highly flexible scalable accuracy acceptable memory consumption project previous keywords software component security security detection technique security quality assurance secure architectural introduction maintenance security software dynamic struggle battle secure legitimate access illegal software security security application decade researcher discover elaborate security software repetitive specific security login security feature login access sap security whereas login discovery sap security researcher classify security standard security catalog catalog application detail security standard security template discovery documentation security essential implement enhance security feature software characteristic software security building software security attacker illegally software security security reusable security component software recur security context easy sophisticated software security quickly efficiently security  security knowledge experienced security expert therefore novice security developer easily security achieve quality security feature development software secure software development security micro architectural security component assurance standard implementation security software essential task quality assurance standard application security security implement software accord detailed documentation security available catalog however inspection quality security cannot achieve without detect software software quality attribute performance modifiability security security quality attribute specific guard software execution device anytime  however quality attribute affect implementation advanced security feature suffer performance software similarly frequent modifiability negative impact security software engineering implementation security requirement status security incomplete misuse imperfect quality assurance utilized weakness another implement security correctly discrepancy source model update backtracking implementation requirement phase however successfully implement security evaluation apply security software security combination strengthen security objective confidentiality software security improve security access architecture software access security session security ensure user validity legitimate software resource quality assurance quality implementation security cannot achieve without detection information implement structure location detection security security architecture software security measurement information security expectation software direction quality improvement detection confidence security quality assurance   status security countermeasure security attack target software absence security security loophole software loophole usually security flaw defect weakness security flaw throughout security employ mitigate security flaw security flaw invite attacker exploit software vulnerability illegitimate access target software therefore detection security ensure security software security quality attribute elaboration construction phase secure software development lifecycle detect instance security target assist security developer understand security feature detect security information lose security architectural decision improve maintain security software therefore contributes understand analyze configure software specific security requirement detection framework supportive security understand orchestration detection research exist detection anti couple research security detection however implement detection limitation complexity consumption determination location security software source code security detection framework framework depends preprocessed data shade technique orange shade component relationship discovery input software model empty relationship matrix empty relationship matrix developed software source code document adjacency matrix software graph relationship information relationship discovery software model detect relationship software graph empty matrix relationship matrix target matrix logical matrix relationship information component framework security input relationship output relationship discovery security matrix security matrix logical matrix information relationship security information relationship security extract security documentation security security matrix inside target matrix image KB image overview security detection spd framework security matrix essential framework semantic analysis employ remove confusion matrix detect actual security matrix semantic analysis input security matrix data data prepared preprocessing stage security document security requirement document developer intuition overhead actual security detect security matrix data sophisticated comprehensive reduce significant irrelevant security matrix data guarantee completely filter security actual security partially fails filter remain matrix scrutinize manually detect actual security matrix fourth essential detection report information implement security location inside software overview propose framework detection framework explain detail algorithm available detection inside target however algorithm developed detection security develop non uniform distribute matrix technique spd framework evaluate spd framework semester schedule extend evaluation source java target android message SAIM client automate  machine simulator atm sim electronic voting  implement matrix OMM technique spd framework update OMM technique improve extend security detection framework propose novel security technique non distribute security matrix NDMM develop multi security MSPD gram model processing discovery security security developer orchestrate security architecture security therefore software performance demonstration perseverance security feature summary contribution security detection spd framework platform data extraction semantic analysis technique implement data extraction security semantic analysis technique discover association security security semantic analysis component spd framework apply update matrix OMM technique propose novel technique non distribute security matrix NDMM security gram model processing nlp develop multi security MSPD contrast technique OMM NDMM improve spd framework evaluate spd framework internal technique source java software organization depict background research requirement template role security detection security detection framework detail explain implementation propose security technique spd framework precisely elaborates evaluation detection framework analyzes spd framework related detection framework elaborate threat validity security detection finally conclude research direction future limitation image KB image detailed security template associate spd framework security template spd framework elaborate background detection explain usefulness security template implementation spd framework development security catalog security catalog introduce developer utilize security software development enumeration security catalog introduces template security security template spt structure description express formally documentation template evolve  template gang GoF template finally transform template  security template security documentation format standardize organization applies template however consensus template security template specific document contains  information security format template unique specific role template template purpose security nevertheless defines characteristic explicitly classification security comprehensive survey available security classification propose security template classification security structural behavioral semantic information connection security template classification security security detection framework define classification security security flaw others detect security security objective related security flaw related attack define classification security security static structure dynamic structure security document information component security detection framework employ structural behavioral semantic information framework template structural information structure GoF template security detection framework expound propose framework security template arrow however development multi semantic analysis parse security security requirement document detailed semantic analysis elaborate sub static structure dynamic structure participant collaboration strategy define fundamental principle security exhaustive description associate mechanism similarly sub define detail security sub static structure security document diagram static structure security diagram contains unique information therefore detect structural software similarly sub dynamic structure defines interaction diagram interaction diagram preserve dynamic behavior security employ detection security detection framework utilize structural dynamic reduce false positive semantic analysis detect security static dynamic semantic information security template spt detection framework mapping spt  concrete security template access sap security document sap organizes accord security template security template sap security available sap concrete implementation login guard validation screen security template essential sub template static structure dynamic structure static structure diagram dynamic structure sequence diagram sap security document refer however security requirement document semantic analysis development security requirement document explain static dynamic information security basis develop security graph graph generate matrix technique security detection spd framework moreover semantic information reduce false positive discus spd framework employ security template spt develop security graph detailed detection framework introduction security detection spd framework employ security target software input security target software data detect existence security fundamental structure security detection framework initial intermediate processing detailed framework initial setup consists preprocessing data input framework input security target graph target unified model uml model data label respectively fundamental detection framework contains relationship discovery information extraction security semantic analysis data output framework report information existence security location software source code develop security detection spd propose framework representation graph matrix linear algebra security target software graph database matrix throughout matrix instead graph diagram developed reverse engineering technique software source code phase target intermediate processing consists relationship discovery security information extraction cie subunit extract information diagram target target matrix tsm relationship graph  database security matrix prepared sequence diagram available security documentation initial processing security matrix security graph spg database matrix input security spm security spm detects security matrix inside  database target matrix processing consists semantic analysis detection report generation output security spm security matrix actual security matrix apply semantic analysis data reduce rate false positive input data specific security analysis information existence non existence location security finally spd generates detection report image KB image detailed security detection spd framework image KB image sap security sequence diagram subsection elaborate detection framework practically implement spd initial processing preparation input file relationship discovery security semantic analysis initial processing empty target matrix tsm available software source code software model diagram input relationship discovery software uml model text file format java editor uml model text file format information diagram relationship visible rectangle rectangle text text file login client diagram text file explain parameter input utilize source monitor software extract target source code software uml model develop empty tsm target empty matrix develop tsm therefore input relationship discovery empty tsm software uml model reverse engineering target utilize java editor inception phase software development software model input spd security input output relationship discovery preprocessed input preprocessed data input extract security graph security sequence diagram sequence diagram access sap security respectively  catalog sequence diagram sap security develop sap security graph sap security matrix spm client therefore spm security graph security sequence diagram matrix security graph spg database fourth preprocessed data input data semantic analysis data unique security prepared security consists security however developer something scenario therefore developer intuition input data parse gram model security security requirement document input data stage almost font style predict functionality correspond security spd employ matrix data intermediate processing detect spm inside tsm therefore purpose initial processing empty target matrix security matrix target uml diagram data security text format preprocessed input intermediate processing explain subsection intermediate processing intermediate processing consists relationship discovery security input preprocessing data empty tsm uml diagram text format extract spm information extraction cie subunit extract relationship information target uml diagram relationship information relationship statement inside uml model file relationship extractor CRE subunit relationship information relationship relationship cardinality uml diagram target standard relationship statement text file uml model relationship input tsm discus internal component text file uml software model uml model preserve relationship information relationship standard relationship statement format separator relationship label relationship relationship relationship cardinality explain relationship stereotype text cardinality recursive association connection connection edit excerpt relationship statement explain statement item standard relationship statement explain relationship label unique label identify relationship relationship relationship originates login relationship relationship admin relationship relationship association cardinality cardinality relationship stereotype defines relationship text access cardinality cardinality relationship recursive association recursive relationship exists otherwise connection otherwise connection edit edit otherwise relationship extract information extraction cie subunit empty tsm tsm relationship information relationship graph  database android message SAIM target insert digit existence relationship otherwise intermediate processing security matrix spm sap security inside target matrix tsm SAIM target security matrix algorithm spm SP finder comparator subunit SP finder subunit detects security comparator spm error output spm matrix however outcome false positive detailed matrix algorithm processing semantic analysis detection report processing intermediate processing spd framework false positive SAIM target  sap security inside tsm spm apply semantic analysis semantic analysis data comparison reduces false positive spm actual sap security detection report SAIM target output spd framework information existence non existence location security security technique security spd framework algorithm subgraph isomorphism matrix spd framework subgraph isomorphism technique matrix OMM technique however challenge utilize OMM technique security detection framework develop technique non uniform distribute matrix NDMM sake simplicity develop explain technique access sap security implement semester schedule sap security target uml diagram graph matrix representation respectively explain sap security extract security graph diagram sap security security catalog purpose sap security legitimate user gain access target attacker unauthorized access operating login screen sap security diagram structural sap consists analyze sap security association interaction scenario client actor boundary protection virtual boundary client access resource target static structure boundary protection physical existence client serf client information access target representation resource sap security utilized credential user access resource association association image KB image sap security graph image KB image target diagram sequence diagram elaborates specific dynamic behavior sap scenario sequence diagram unique dependency sequence diagram interaction client sap client request permission sap access user ID password sap allows client access decision verification client credential therefore communication sap exists permission sap grant client access contains resource target therefore sequence diagram verify message communication security security graph develop semester schedule experimental user login admin semester schedule teacher relationship bidirectional association implement access security client client information user target client sap security detailed knowledge target relationship cardinality employ actual security remove ambiguity image KB image target graph user access semester schedule teacher however access resource grant verification login admin login credential user verification perform admin scenario user credential database admin access database verification purpose confirmation user legitimacy access resource semester schedule teacher grant login role access security transform uml diagram sap security target graph security graph available diagram security documentation interaction elaborate sequence diagram node graph relationship designate vertex graph transformation diagram security graph straightforward security catalog finite security therefore manually develop security graph graph database matrix entity sap security uml graph diagram target uml graph diagram respectively matrix transformation sap security target software matrix existence connection connection matrix technique matrix OMM technique developed detection submatrix inside matrix detection submatrix matrix detects subgraph inside graph subgraph isomorphism subgraph isomorphism NP however subgraph isomorphism algorithm polynomial execution efficient subgraph isomorphism algorithm propose recent instance graphql spath  develop algorithm variant subgraph isomorphism OMM algorithm executes polynomial pseudocode algorithm matrix submatrix inside target matrix permutation arrangement target specific develop arrangement unique target matrix tsm security matrix spm variant extraction procedure earlier therefore variant spm arrangement tsm detection detect security inside target exists spm detect earlier exhaustive image KB image possibility identify security inside target OMM technique spm inside chosen tsm another tsm TSMs checked spd selects another variant spm procedure spm detect exclusive arrangement permutation tsm however detect spm necessarily actual spm highly memory consume favorable OMM explain algorithm matrix matrix numeric entry matrix matrix OMM algorithm convert matrix vector transpose function occurrence inside vector  function matlab bold matrix however eliminate wrap around OMM algorithm detect inside reduce attempt loop isempty idx occurrence OMM algorithm occurrence finally compute coordinate matrix idx therefore index location matrix inside matrix idx idx summary algorithm selects matrix inside matrix  function location successive increment matrix inside matrix previous finally vector linear index coordinate matrix inside matrix matrix available inside matrix detect matrix inside matrix diagonal coincide diagonal matrix detect matrix inside matrix diagonal coincide consideration explain OMM algorithm detect coordinate matrix diagonal matrix explain sequence matrix therefore interaction diagonal matrix sequence submatrices inside correspond image KB image diagonal submatrix inside diagonal matrix submatrix border correspond submatrix border correspond diagonal submatrix coincides diagonal matrix however diagonal submatrix coincide diagonal matrix algorithm developed submatrix security matrix spm propose algorithm algorithm relationship CC detection remove shortcoming OMM algorithm flexibility scalability detection security non uniform distribute matrix technique non uniform distribute matrix NDMM unique partially subgraph isomorphism define computational relation matrix input matrix matrix matrix contains matrix submatrix matrix distribute non uniformly inside matrix mathematical representation target diagram tsm reveals entire matrix another matrix arrangement transformation tsm matrix reveals relationship therefore detection spm inside tsm tsm transform actual submatrix isomorphic advantage algorithm tsm detect implement security spm scatter inside tsm therefore selection tsm tsm highly unlikely tsm spm visible submatrix therefore dominant submatrix isomorphic spm inside tsm image KB image matrix representation sap security another target spm detect inside tsm detection relationship security target therefore target security relationship non uniformly distribute however relationship exists target arrangement exploit understand develop algorithm detect security inside target without target CC algorithm pseudocode algorithm image KB image NDMM illustrate NDMM algorithm matrix inside matrix matrix spd matrix matrix matrix therefore another remain matrix spd matrix remain matrix therefore matrix inside matrix matrix  array extract matrix matrix relationship matrix matrix relationship spm therefore relationship spm extract relationship matrix matrix extract matrix  matrix matrix scatter non uniformly distribute matrix inside matrix matrix successful unsuccessful comparison matrix matrix matrix matrix comparison matrix matrix matrix  matrix successful  matrix  array outermost loop scan matrix matrix  array development multi security semantic analysis semantic analysis develop multi security MSPD purpose multi verify actual security matrix extract matrix algorithm discus development MSPD data unique construction MSPD fourth described prepared selection data security document security documentation available access sap security available  catalog login guard validation screen MSPD security document combine camel camel attach upper  syntax generate variation program developer combination uppercase generate variation generate  login guard validation screen variation  login guard validation screen synonym available MSPD exclude   interface bay aperture  shield  socket  entrance  authorization proof verification  monitor introduce intuition developer security recommend security community participate promote incorporate reasonable security alias template security documentation therefore reliability semantic analysis detection increase developer intuition developer     developed bag model unigram model processing nlp enhance gram model nlp develop fourth security document security document spd software requirement document SRD chosen SRD atm SRD software designer statement david  CAD account extract attribute customer account withdraw conceive account CAD float variable account therefore importance software requirement document SRD extract respectively parse document spd SRD SRD extend document sap document  catalog software requirement document software development filter text unigram model image KB image parse document gram model fourth fourth enhance version MSPD gram model nlp develop fourth security therefore bigram model nlp implement bigram model matlab program training data tag POS tag pnn tag NN pronoun tag PN tag VB adjective tag adv preposition tag PP parse POS accuracy increase increase information training data detailed algorithm combination login guard validation screen item consists syntax  login login standard combine program java python semantic analysis data detect security matrix  MSPD unique utilize correspond spm actual security semantic analysis reduces  significantly therefore probability actual spm describes security increase semantic analysis experimental evaluation security detection effort infant stage benchmark available evaluation however   security detection source android application android message application besides benchmark detection security semester schedule automate  machine simulator atm sim electronic voting  security access sap security session SS authenticator AP future benchmark detection security chosen selection criterion research   diversity domain diversity security source code exist appropriate relationship increase complexity relationship source software project developed java program evaluation metric performance detection technique accuracy detection security computational computational semantic analysis location security source code complexity performance source code relationship target security arrangement target matrix security relationship complexity memory utilization impact target memory utilization impact relationship target memory utilization target lack standard implementation security challenge target security properly address difficulty implement authenticator  detection detect security access architecture namely access sap security session SS operating access authenticator AP documentation security available catalog developed  security detection framework algorithm employ spd developed matlab software detection security target computer intel core duo processor GB ram MB cache processor frequency ghz FSB mhz information target security detection sap security employ  project sap matrix SAIM project sap matrix sap depends inclusion exclusion client sap security graph matrix project client software java however SAIM project client java therefore client eliminate spm becomes evaluate overall consumption fundamental spd data extraction matrix semantic analysis utilize OMM NDMM matrix algorithm separately complexity tsm spm target complexity   complexity spm      spm sap SAIM sap atm sim SS  AP detection OMM detection security detection OMM technique spd permutation TSMs TSMs spm TSMs however randomly tsm TSMs apply spd random selection tsm security tsm multiple execution spd report false positive semantic analysis participates filter actual security false positive detection actual security location security matrix correspond inside target detect location security security runtime software verify implementation standard security quality security loophole monitor cycle computational spd computational entirely execution detect security matrix spm inside target matrix tsm graph computational spd increase complexity target contributor execution data extraction computational data extraction contributes execution detection however  executes multiple TSMs computational matrix OMM semantic analysis significantly OMM semantic analysis target respectively besides computational increase significantly atm sim target image KB image performance spd OMM successful spd detection OMM algorithm target security SP security detect apply detection detect otherwise location security randomly tsm target  TSMs target matrix  atm sim SS  selection tsm arrangement tsm significant computational evaluate TSMs semester schedule elapse detection therefore choice TSMs critical tsm unique arrangement however randomly arrangement TSMs arrangement TSMs detection random selection TSMs substantial whereas exhaust detection spd arrangement tsm spd positively detects spm however computational detection TSMs spm execution spd detection spm earlier TSMs scenario tsm additionally semantic analysis remove false positive therefore zero false positive NDMM NDMM algorithm relationship therefore TSMs TSMs spm detection detection security NDMM technique NDMM technique target atm sim  perfectly however SAIM target output reduces semantic analysis SAIM sap matrix interaction spm sap security sap security relationship spm sap security target relationship available tsm inside tsm tsm therefore increase occurrence spm tsm spm detect inside tsm spd detection NDMM algorithm target security SP SP instance detect  instance reduces semantic  security  atm sim ssn  semantic analysis sap detect analyzes sap sap documentation intuitively sap scenario develop sap comparison extract detect data increase sap detailed discussion development semantic analysis available location security report spd semantic analysis computational data extraction matrix semantic analysis graph indicates computational data extraction increase target computational increase significantly atm sim target SS security detection atm sim AP security detection  ratio interaction atm sim approximately similarly ratio interaction  decrease ratio complexity atm sim complex TSMs  therefore logical increase computational unique complexity interaction relation target phenomenon image KB image performance spd NDMM technique successful unique arrangement unique tsm target arrangement inside tsm unique significant role computational evaluate OMM NDMM technique TSMs OMM technique NDMM technique demonstrate correlation computation unique unique arrangement NDMM technique randomly tsm TSMs therefore correlation computation unique unique arrangement tsm unique visible random selection tsm semantic analysis outperforms SAIM target target actual spm detect correctly without variation therefore false positive complexity performance OMM technique arrangement interaction relationship target indicator complexity performance security detection calculate elapse tet target OMM technique elapse calculate security successfully detect target reveals elapse tet depends interaction target calculate elapse target OMM technique elapse calculate security successfully detect target reveals elapse interaction security detection image KB image target security interaction elapse OMM technique randomly arrangement tsm semester schedule apply OMM technique arrangement tsm performance regard  detection tsm arrangement elapse correspond randomly TSMs sap security matrix spm visible tsm however random selection TSMs spm scatter inside tsm tsm spm bold inside TSMs sap security detect successfully tsm shortest tsm sap security detect successfully TSMs elapse TSMs tsm tsm therefore graph decrease elapse tet accordingly graph indicates arrangement inside tsm significant performance image KB image tsm arrangement OMM technique NDMM technique calculate elapse target NDMM technique elapse calculate security successfully detect target reveals elapse interaction calculate elapse target NDMM technique elapse calculate security successfully detect target reveals elapse tet interaction security detection interaction security target target decrease decrease elapse however increase target target interaction decrease correspond elapse reduce reduction correlation interaction security elapse detection image KB image target security interaction elapse NDMM technique randomly arrangement tsm semester schedule project apply NDMM technique arrangement tsm performance regard elapse tet elapse correspond randomly TSMs sap security matrix spm visible tsm however random selection tsm spm scatter inside tsm tsm spm bold inside TSMs sap security detect successfully tsm tsm shortest tsm sap security detect successfully however TSMs elapse decrease elapse indicates arrangement inside tsm significant performance tsm arrangement unique impact entire elapse detection therefore elapse tsm unique comparison NDMM OMM technique OMM technique detect spm specific arrangement tsm TSMs NDMM technique detect spm arrangement TSMs elapse tet NDMM technique tet tsm OMM technique tet tsm complexity memory utilization complexity software project increase arrangement interaction detection complexity impact memory utilization consumption previous implication consumption complexity granular detail impact complexity software utilization memory complexity memory utilization detection OMM NDMM technique increase interaction significant influence memory security detection however comparison OMM NDMM technique memory consumption concern complexity software increase interaction affect OMM NDMM technique differently NDMM technique slightly memory OMM technique detection tsm purpose complexity memory utilization useful project source java project limited however project java visible complexity memory utilization therefore relationship per couple code complexity metric impact memory utilization cod code structure efficient code technique code optimize reduce complexity memory usage security detection complexity memory utilization target security  utilization security detect    atm sim SS  related security detection assure existence security knowledge structure location software source code primary research detection therefore guideline exists detection explicitly developed security instead discus functionality software catalog classify catalog structural creational behavioral catalog security categorize security feature however security catalog available architectural component security micro security specifically fulfill security requirement non functional requirement software engineering detection security comprehensive detail security feature security explain precise security implementation furthermore security security interact therefore security difference detection understandable definition security documentation purpose software however security security related issue similarity documentation template detect security matrix intermediate detection approach detection technique additionally security detection matrix research detection utilize matrix intermediate representation detection available however confine discussion matrix representation internal   matrix detection detection attempt discover software model source code static analysis propose detection similarity graph vertex employ representation matrix compute similarity detection recognize modify standard reduces graph rely specific heuristic facilitates extension structure however structural analysis employ dynamic information improve accuracy increase per package subsystem increase convergence similarity algorithm additionally similarity algorithm significant memory software calculate similarity correlation template detect software matrix calculation normalize correlation identify variant source code software limitation approach feature documentation detection update accordingly detect correctly approach estimate similarity subgraphs graph instead vertex matrix existence inside software introduce dong zhao detection matrix develop toolkit DP miner DP miner apply structural behavioral semantic analysis detection DP miner matrix target encodes information prime prime finally encode correspond matrix xmi intermediate representation structural analysis behavioral semantic analysis implement reduce false positive propose detection incorporates matrix transformation cluster apply decision algorithm consist compound detection algorithm classification composite training capable detect instance training developed software develop discovery execute graph graph template matrix representation normalize correlation approach normalize correlation algorithm calculates similarity graph inside graph approach execution compute relationship matrix distinctively decompose graph phase phase depends vertex graph matrix depiction benefit approach reduce provision optimal however depends graph affect complexity algorithm decompose target graph apply isomorphism graph decompose component target graph exploit isomorphism graph decomposition reduces complexity target graph permutation matrix isomorphism however node target decomposition becomes complicate exhaustion isomorphism propose decision develop subgraphs exhaust graph isomorphism detect algorithm target vertex permutation matrix sixteen vertex decision graph whereas practically target vertex decision graph increase exponentially vertex therefore complexity detection increase execution approach detection decorator graph isomorphism graph identify candidate graph correspond subgraphs candidate apply isomorphism graph detect isomorphic subgraphs instance depends filter candidate filter candidate isomorphism cannot detect instance exhibit approach detection adapter bridge composite decorator proxy subgraph mining merge source code transform source code predefined graph node relationship instance sub detect inside graph merge sub joint collective predefined approach constraint detect sub combination detection security   detection security employ reverse engineering suite  detect access security java software resource graph  intermediate representation software resource graph enables utilize hierarchical reflexion analysis employ definition access develop hypothetical architecture graph static analysis target discus false positive already software component utilize related access component detection security research mature accord literature survey     attempt detect security propose implement security detection spd framework advantage disadvantage technique within framework threat validity issue security matrix hence variation security matrix impact detection nonetheless overall security fulfill purpose deviate actual security variant variation security matrix uml sequence diagram understand relationship security diagram information rigid specific software requirement modify software environment core intact implementation sap diagram bidirectional association relationship nevertheless relationship necessarily bidirectional association furthermore sequence diagram verify adjust relationship however sequence diagram reveals access communication contrast relationship diagram therefore decision developer discretion information implement sap security target accord software requirement nonetheless understand evident sap security security matrix security participate detection functionality target client role fix interacts software therefore client significant impact security matrix sap security matrix client conceive actor consequently extraction security matrix depends sequence diagram understand target functionality relationship spd depends quality input model target apply reverse engineering java source code java editor reverse engineering develop uml model target data extraction spd extract relationship information uml model file developed java editor therefore ensure uml model quality manually analyze target source code relationship interestingly relationship analysis lose connection source code android message SAIM target SAIM target relationship exist uml model com   com  login sap however source code association relationship conclusion future standard security confidentiality integrity availability increase software security security address maintenance security software correctly implement propose security detection spd framework platform data extraction matrix semantic analysis implement technique matrix OMM non uniform distribute matrix NDMM implement detection framework OMM technique detection submatrix inside target matrix OMM spd false positive introduce semantic analysis reduce false positive zero semantic analysis multi security MSPD gram model processing nlp develop MSPD MSPD developed security requirement security documentation OMM technique overall efficiency significantly concern computational detect actual security however TSMs OMM technique location security inside target NDMM technique relationship uniqueness NDMM technique detect security TSMs target security available inside target NDMM technique slightly memory computational OMM technique detection target false positive employ semantic analysis technique reduce false positive NDMM technique detects location security source code target evaluate technique concern complexity execution accuracy security location NDMM technique intrinsically OMM technique future diagonally distribute matrix technique develop powerful technique security detection multi security extend computer developed non english alphabet convention besides tune detection security relationship inheritance aggregation composition