technical debt TD commonly additional quality compromise yield benefit software development negatively affect quality software predict future TD facilitate decision task regard software maintenance assist developer project manager proactive action regard TD repayment however notable contribution exist TD forecasting scarcely investigate empirically evaluate ability machine ML model predict TD evolution specifically extensive conduct dataset construct obtain weekly snapshot fifteen source software project popular static analysis extract software related metric TD predictor subsequently identify TD predictor TD forecasting model popular ML algorithm validate various forecasting horizon analysis linear regularization model meaningful forecast TD evolution shorter forecasting horizon non linear random regression performs linear model longer forecasting horizon future TD capture sufficient accuracy model facilitate planning software evolution budget allocation approach basis predictive TD analysis suitable project relatively knowledge investigates feasibility ML model forecasting TD previous keywords technical debt technical debt forecasting machine empirical introduction technical debt TD notion inspire financial debt economic theory introduce ward cunningham metaphor intend introduce software resolve exist quality issue overall software development lifecycle SDLC TD metaphor related software implementation code gradually extend phase SDLC software architecture documentation requirement manner financial debt TD incurs payment increase future software usually code quality effectively manage identification quantification repayment TD software development lifecycle researcher practitioner developed adopt multitude theory however predict accumulate TD evolution software application challenge research issue software TD emerge parallel opportunity predict TD paramount importance software maintainability recognize effort intense activity SDLC engineer project manager appropriate training perform effective software maintenance therefore forecasting evolution TD valuable assess software become  identify software artifact prone accumulate significant TD although topic predict evolution various aspect directly indirectly related TD concept code fault proneness software evolution trend attract attention academia knowledge focus forecasting TD hence practical decision predict future TD software evolve valuable software development consequently software architect project manager gain understand future TD issue advance appropriate refactoring activity maintenance towards TD forecasting previous apply statistical series model TD principal forecasting statistical series model mostly univariate historical data variable forecast future evolution behavior widely literature predict software evolution trend future request software defect dataset source java application autoregressive integrate average model ARIMA accurate TD principal prediction sufficiently sample application however overall ARIMA model performance satisfactory TD principal forecasting ahead predictive performance significantly prediction moreover conclude ARIMA model tune entire jenkins methodology logical continuation extension previous effort approach TD forecasting specifically achieve advanced multivariate model feature engineering account various TD related feature combination generate TD prediction therefore previous focus univariate series forecasting attempt empirically evaluate ability multivariate machine ML adequately forecast future TD trend software application achieve practical prediction building multivariate model alongside evolution target variable evolution additional feature related target variable widely strategy  series model interdependency therefore improve forecast accuracy extend initial dataset software application investigate combination software related metric TD indicator already exist ML forecasting development novel model prediction evolution TD software project towards direction apply various popular ML regression regularization vector regression regression forecast evolution TD principal attempt summarize research RQ usage machine model specific technical debt indicator meaningful accurate approach forecasting technical debt principal source software objective evaluate ability ML model predict TD evolution software application TD indicator TD predictor viewpoint researcher intend investigate ML approach effectively adopt project manager developer accurately forecast evolution TD principal planning decision context empirical TD principal source java application publicly available github repository TD principal almost application evolution corresponds nearly snapshot weekly interval model meaningful context dataset construct positive formulate research ML model technical debt indicator potentially basis construction TD forecasting investigate extent model properly capture evolution TD principal accuracy forecasting shed conduct empirical roadmap illustrate relevant literature identify TD indicator predictor TD related feature various orient OO metric afterward construct relatively code repository comprise source java application retrieve github online repository application subsequent snapshot commits weekly interval span almost application evolution approach dataset snapshot code extract identify TD related feature various orient OO metric predictor popular namely sonarqube ckjm extend respectively independent application specific datasets TD indicator TD snapshot subsequently employ technique correlation analysis univariate multivariate analysis statistically significant TD predictor retain discriminatory information finally examine potential ML forecasting model algorithm apply TD prediction accuracy various forecasting horizon safer conclusion regard significance knowledge TD examines applicability ML model TD forecasting overview methodology described meaningfulness forecasting model related ability reflect developer perspective model phenomenon predict evolution useful perform survey empirically evaluate meaningfulness TD forecasting approach introduce investigate usefulness TD forecasting concept via questionnaire distribute representative software image KB image roadmap structure background concept forecasting TD related forecasting model specifically applicability TD forecasting thoroughly describes data definition collection pre processing describes forecasting model training benchmarking technical implementation propose approach survey conduct empirically evaluate meaningfulness TD forecasting approach introduce report limitation validity threat empirical discus significant implication research finally concludes discus future background overview relevant background forecasting TD introduce unfamiliar reader concept forecasting concept forecasting prediction future data usually analysis trend predict future attribute important role nearly engineering due increase variety complexity forecasting forecasting technique developed developed forecasting domain influence statistical classify category causal associative series model causal model widely regression analysis assume relationship variable variable therefore discover relationship forecast future series model widely ARIMA model treat examine assume information forecast dependent data decade however machine ML model drawn attention establish serious contender classical statistical model forecasting community model data driven model algorithm utilize supervise unsupervised reinforcement acquire knowledge stochastic dependency future historical data expert opinion regard approach series ML yield accurate prediction recent author ML become accurate computer contribution traditional statistical accurate ML discover involve devise reverse situation however comparison related specific dataset series longer ML optimally related  artificial neural network anns achieve traditional statistical linear regression jenkins ARMA ARIMA approach   concludes anns successfully model forecasting nonlinear series recently model regression vector regression regression causal associative model causal associative model assume variable forecast somehow related variable environment relationship forecasting challenge discover relationship variable variable relationship complex mathematical model forecast future variable causal model regression model linear multivariate regression regularization model ridge lasso regression linear multivariate regression commonly technique model relationship independent variable dependent variable fitting linear equation data simplest linear regression model allows linear relationship forecast variable predictor variable predictor variable multivariate regression advantage technique simplicity popular statistical package linear multivariate regression coefficient variable estimate however linear regression model suffer fitting fitting    regression technique reduce model complexity reduce multi collinearity prevent fitting apply regularization constrains loss function ridge regression constraint sum coefficient regularization coefficient lambda regularization lasso regression instead loss function absolute coefficient optimization coefficient unimportant feature become zero allows automate feature selection regularization machine ML model algorithm utilize various supervise unsupervised reinforcement predict outcome previously although exist decade drawn attention due constantly improve model data processing capacity traditional statistical forecasting technique strictly format historical data ML forecasting advantage data source data source format dimensionality etc however handle correctly suffer serious drawback lack interpretability expensive computational requirement overfitting widely ML forecasting model vector regression regression decision random regression various ann variant multi layer perceptron bayesian generalize regression neural network vector machine svm originally developed classification later extend domain regression goal vector regression SVR function approximates actually obtain target training data minimum generalization error achieve non linear function linearly mapping feature dimensional kernel induced feature regression nonparametric regression forecast similarity euclidean distance training input closest training data prediction average target output svm decision originally developed classification later extend domain regression regression RT variant decision built iterative splitting data partition splitting sample training node algorithm chooses independent variable minimize sum deviation enhance version RT algorithm random RF RF ensemble decision bagging bagging repeatedly selects random sample replacement training sample training prediction unseen sample average prediction individual regression majority vote technical debt concept nowadays TD important software management identify creation fowler fowler software development debt usually consequence pressure assign TD  decision gonna  unnecessary investment feature architecture engineering etc fowler proposes TD quadrant matrix intentionality awareness visualize pathway TD McConnell suggests categorization argue TD unintentional intentional unintentional debt consequence cod intentional debt non optimal decision commit purpose extreme situation accumulate TD enormous cannot paid technical bankruptcy moreover recent highlight analyze TD SDLC classify TD occurrence phase software development requirement architecture implementation building documentation infrastructure versioning defect technical debt component component TD principal refers paid eliminate debt effort address difference optimal quality TD translate activity code refactoring documentation update improve coverage component TD compose amount potential penalty increase effort decrease productivity paid future task probability probability artifact contains debt undergo maintenance additional effort maintenance expensive longer financially viable project declare  technical debt index attempt empirical TD quantification assessment various TD index index evaluation overall quality TD software application propose researcher subsequently implement industrial quantify TD index atomic data calculate TD indicator OO metric software quality metric violation code architectural subsequently ass quality architecture code application employ model model TD iso IEC standard software quality assessment lifecycle expectation  methodology others regard various TD index correspond propose software economics theory quantify TD violate architectural code severity violation medium achieve introduce function quantifies principal input fix violation fix violation fix violation finding integrate formula cast quantifies TD identify architectural code violation categorize quality attribute another marinescu introduces novel framework assess TD technique identify architectural  detect evaluate metric majority aspect complexity couple encapsulation impact  formulate index factor calculation namely influence granularity severity framework integrate infusion evaluates software quality global quality deficit index  related  widely  monitoring assess quality TD source code software application representative assess TD software   commercial quality management indicator namely efficiency portability maintainability reliability calculate code TD indicator quality assign advantage account source code documentation quality available functional requirement etc accurate calculation TD finally sonarqube widely source platform continuous inspection code quality analysis functionality metric code quality attribute previous sonarqube  ass TD software switch specifically code compliance classify cod code violates considers violation TD item popular quality assessment worth mention  structure   related TD metaphor inspire financial debt economic theory indicates quality compromise yield benefit software development negatively affect quality software numerous technique propose estimate manage TD variety option developer project manager software application however apart manage TD predict future equally important knowledge facilitate decision task regard software implementation maintenance incur TD instance investigate examine contribution TD forecasting software evolution software engineering refer development incremental update software accord lehman software evolution software evolve become irrelevant gain information evolution software challenge increase complexity decrease software quality attempt analyze understand predict evolution software increase considerably nowadays software evolution software maintenance synonym stress develop predictive model estimate effort software maintenance evolution activity accuracy therefore improvement model proven software development estimate future evolution software valuable insight quality accord iso IEC accepted international standard notion software quality hierarchically decompose quality attribute maintainability reliability security multitude quality model propose assessment prediction quality attribute individually instance wagner implement model bayesian belief network assess predict maintainability software application software metric similarly van  predict orient software maintainability apply bayesian network zhou leung approach multivariate adaptive regression spline quality attribute relatively abstract directly artifact software source code iso IEC decomposes concrete quality complexity directly quantify metric McCabe cyclomatic complexity similarly quality attribute propose estimate future evolution software quality metric calculate future software defect fault proneness code vulnerability majority approach apply series ML prediction model individual software analysis available information historical data trend source code metric etc commonly technique analyze evolution software series analysis model evolution software apply ARMA series typical project successfully empirical author series model predict future revision sufficient accuracy another series model forecast future request evolution identify trend data source application highlight series capable model request project staff planning likewise series approach predict defect software evolution defect report source project series model predict software defect conclusion model facilitate planning software evolution budget allocation finally  series model forecast request evolution data eclipse request additionally identification seasonal tendency important validate usage seasonal information significantly improves estimation ability model ARIMA model addition series analysis multiple address forecasting evolution various aspect software quality employ ML technique  malhotra introduce benchmarking framework predict therefore maintainability software application OO metric predictor framework effectiveness ML technique linear regression decision svm genetic algorithm source conclude although predictive performance achieve almost ML technique genetically adaptive model perform others elish elish various ML technique multivariate linear regression svm ann  regression predict maintainability competitive prediction accuracy achieve apply  model supervise ML technique code detection software report performance obtain random algorithm code detect accuracy regard fault proneness prediction conduct   author propose multivariate regression model predict fault prone component orient legacy fault data previous release moreover propose ML predict software fault proneness approach employ sensitivity analysis software metric likely existence error afterward ann predict future fault proneness relative principal component analysis code metric regression model accurately predict likelihood release defect finally regression classification identify fault non fault prone module multiple release legacy telecommunication conclude algorithm prediction satisfactory accuracy robustness multitude model available literature predict evolution specific quality attribute quality reveal importance quality prediction forecasting software engineering community however evolution software accumulate TD evolve TD indicator software quality emphasis maintainability predict future equally important various focus analyze evolution TD impact software development perspective highlight TD evolution stress project manager preserve software maintainable purpose introduce refers accumulate TD principal becomes benefit expand instantiate validate  framework ass source code module decision respect investment improve quality software manager insightful decision hence forecasting evolution TD principal valuable estimate software become  effectively predict TD software progress future improve TD repayment strategy constantly monitor analyze evolution previously mention extensive research respect forecasting evolution quality attribute directly indirectly related TD contribution exist regard TD forecasting scarcely investigate forecasting evolution TD highlight recent author awareness gap TD topic investigate efficient TD forecasting model accurate prediction TD principal evolution addition stress useful examine TD forecasting foster development quality software attempt towards issue introduce concept predict TD software service SaaS exploit cocomo software model propose however limited compute another author empirically evaluate ability series analysis model predict TD evolution source software project autoregressive integrate average model ARIMA accurate prediction fairly however predictive decrease considerably longer forecasting horizon circumstance forecast evolution software quality evolution TD principal software future significance identify issue address research concrete contribution exist related literature regard TD forecasting volume potential metric technique potentially enhance completeness software quality forecasting concept enable project manager developer decision uncertainty precise  strategy manage TD promptly avoid unforeseen situation data definition collection preparation execution aim combine TD related feature metric dataset source triangulation purpose investigate extent multivariate ML model accurately predict TD evolution software application describes detail definition collection pre processing dataset later input TD forecasting model towards TD related dataset literature initial TD indicator appropriate TD indicator multiple consecutive snapshot commits source project sonarqube ckjm extend extract indicator along TD principal snapshot data collection perform data pre processing data technique descriptive statistic correlation analysis feature selection apply dataset input forecasting model finally restructure application specific dataset format input forecasting model procedure detail TD indicator definition TD indicator discover TD item analyze artifact SDLC TD indicator propose literature related software metric assessment attribute feature characteristic software artifact context orient OO program various metric metric propose chidamber kemerer quality model orient  characterize complexity couple cohesion code others metric widely literature predict maintenance effort maintainability quality attribute closely related TD besides OO metric code indicator presence code TD code warn deeper code software violation program principle impede software maintenance impose code refactoring addition automatic static analysis asa findbugs checkstyle widely TD asa analysis source code bug violation program failure quality decay software violation remove refactoring avoid unforeseen problematic situation OO metric code issue extract asa software quality metric extract quality assessment widely literature indicator monitor quantify TD quality software maintainability approach treat indicator source potential TD predictor source triangulation combine already exist forecasting develop novel model prediction future evolution TD software application popular widely calculate TD indicator sonarqube ckjm extend sonarqube source platform continuous inspection code quality analysis functionality metric quality attribute code adopt organization nearly public source project sonarqube proof concept research purpose accord recent technical debt management frequently estimate TD principal addition another highly customizable user adjust standard sonar relevant author continuously adopt sonarqube business objective preference developer user TD forecasting described tune sonarqube prior obtain TD related measurement prediction tailor critical therefore opt TD related metric sonarqube primary TD principal predictor version sonarqube within context furthermore sonarqube compute target variable quantify TD principal software application sonarqube code compliance classify cod code violates considers violation TD item identify TD item sonarqube computes remediation estimate effort refactor considers TD complement TD predictor account popular chidamber kemerer metric quality model orient  metric choice metric dit noc rfc lcom WMC  metric dam MOA cam intensively ability predict maintainability maintenance effort limitation sonarqube lack OO detection mechanism therefore OO metric application chose popular ckjm extend extend version ckjm source calculate metric define  suite processing bytecode java file indicator extract ckjm extend calculate source code ass quality associate architecture software application complexity couple cohesion inheritance others addition ckjm extend calculates metric strictly accord definition chidamber kemerer metric TD indicator therefore independent variable creation dataset along description moreover strengthen TD indicator selection reference relate metric TD quality software maintainability describes metric compute sonarqube describes metric extract ckjm extend target variable variable forecast denote principal define principal effort fix issue compute sum code bug vulnerability remediation effort obvious choice related metric independent variable multivariate model investigate constituent component TD principal principal compute sonarqube code bug vulnerability however apart TD principal constituent component evident target variable investigate directly related metric however TD indicator examine equally significant impact TD principal extensive feature selection analysis report predictor tailor dataset experimental setup TD indicator  project metric compute sonarqube technical debt metric   fix code issue reliability remediation  fix bug issue security remediation  fix vulnerability issue  fix issue sum metric mention code bug vulnerability remediation effort reliability metric  bug issue project security metric  vulnerability issue project maintainability metric code  code issue project  metric comment  comment comment code project    physical project neither whitespace tabulation comment eski  elish elish coverage metric uncovered  code project duplication metric duplicate  duplicate project complexity metric  cyclomatic complexity project calculate code  van deursen singh saha metric aggregate project compute ckjm extend complexity metric  complexity average java binary code average project   zhou  per contains complexity average project eski  singh saha van  shatnawi zhou leung elish elish  inheritance depth inheritance hierarchy average project singh saha van  shatnawi  immediate descendant average project  van deursen shatnawi zhou leung elish elish  local plus average project eski   van deursen singh saha van  shatnawi zhou leung couple metric  couple average project eski  singh saha shatnawi  couple average project   elish  couple average project   elish  couple average project eski  singh saha  couple redefine inherit couple average project eski  cohesion metric  cohesion interrelate average project van  shatnawi zhou leung elish elish  cohesion lcom singh saha  metric computes relatedness parameter average project eski  metric  public declare public average project  van deursen singh saha van  zhou leung elish elish  access metric ratio private declare average project goyal   aggregation data declaration user define average project kaur  goyal  collection data dataset construction popular source application github repository application belong application domain networking software kafka   retrofit  websocket business software ofbiz scientific software  utility software IO guava jenkins  selection criterion software popularity activity data availability java program specifically exploit advanced mechanism github java project filter sort filter initial java application ranked popularity ass activity application insight github functionality examine commits lifespan application application commit activity frequent per moreover sonarqube ckjm extend compile compute metric project compilable error compile application met criterion approximately snapshot commits weekly interval fetch span project evolution precisely opt commit analyze analysis rationale option ensure fix weekly interval commits twofold ensure fix distance retrieve sample commits critical reliability forecasting model secondly snapshot weekly daily interval viable rarely project daily commits addition another decision snapshot weekly daily interval analyze consecutive commits avoid inactivity eliminate inactivity consecutive snapshot significant commit codebase snapshot potentially introduce dataset reasonable activity important accurate model generate forecast potentially future inactivity useful project manager decision activity longer interval monthly probably reduce inactivity significantly data significantly forecasting performance whereas model forecast monthly basis shorter ahead restrict practicality decision approach described codebase snapshot code sufficiently application fundamental conclusion specific dataset generalize obtain purpose construct dataset dedicate crawler facilitate reproducibility extensibility construction datasets crawler available online application construct codebase detail fetch source code snapshot application proceed sonarqube ckjm extend described analyze snapshot application specific datasets consist TD indicator described chose format application specific dataset contains specific snapshot application chronological series whereas TD indicator plus TD principal snapshot format forecasting model construction phase described later application TD dataset application  weekly  snapshot     timeframe apache kafka  platform building data pipeline apps apache IO library contains utility implementation file filter file comparators apache ofbiz ofbiz ERP library entity service feature aspect business apache   optimal workplace machine data apache groovy  powerful dynamic static static compilation capability java platform apache   powerful scalable graph data rout transformation mediation logic apache incubator    performance java source rpc framework google guava  core library graph apis utility concurrency hash processing   http http client android java application retrofit  http client android java inc  jenkins  source development workflow automation server project boot  boot easy production grade application service absolute minimum   java websocket  server client implementation java    source multi format 1D 2D barcode image processing library implement java    collaboration rtc server widely adopt protocol message XMPP aim model TD evolution entire software project predict TD individual software artifact perform data collection application application snapshot commit observation application specific dataset TD related metric extract sonarqube analysis compute default modification however metric extract ckjm extend dit rfc noc originally define therefore metric directly independent variable purpose aggregate ckjm metric specifically approach metric aggregation code code analysis aggregation approach relevant previous data preparation selection independent input variable critical ML algorithm additional input another dimension contributes curse dimensionality phenomenon performance degrades input increase furthermore irrelevant partially relevant feature negatively impact model performance construct dataset understand statistical attribute variable reduce input variable described important highly significant TD principal forecasting technique correlation analysis univariate multivariate analysis retain discriminatory information statistical significance indicator TD quality safely perform dimensionality reduction dataset feature selection maximize diversity representativeness comparable heterogeneous application dataset construct described forecasting purpose consists application suitable generalize finding generic conclusion regard feature selection therefore increase dataset feature selection purpose addition application exploit benchmark repository consists popular java library junit xerces  etc retrieve maven repository dataset calibrate quality assessment model investigate interrelationship software metric specific vulnerability purpose extend repository maven application popularity benchmark repository contains source software java application comprise approximately code adequate purpose identify significant TD indicator extract indicator extend dataset initial application analyze source code application sonarqube ckjm extend described finally merge metric metric obtain snapshot analyze application extend dataset metric application chose snapshot analyze application ensure representativeness software application benchmark repository commit furthermore assume snapshot project mature previous snapshot extend dataset online extend dataset correlation analysis feature selection purpose additional application obtain benchmark repository project commits therefore suitable forecasting model feature analysis selection switch dataset application commit commits forecasting model training descriptive statistic descriptive statistic analysis data data meaningful simpler interpretation summary sample observation descriptive statistic central tendency median mode variability standard deviation variance minimum maximum variable kurtosis skewness extract metric application sonarqube ckjm extend merge dataset described previous descriptive statistic TD indicator calculate extend dataset reminder extend dataset comprises superset dataset construct forecasting purpose application additional application later stage feature selection purpose therefore computation statistical metric application conduction python program specifically panda data analysis library metric likely useful predictor metric significant difference percentile median upper percentile variation therefore metric subsequent analysis software engineering data metric highly skewed outlier observation substantially affect treat carefully mitigate risk analysis opt technique perform distribution feature cannot assume descriptive statistic TD indicator extend dataset         bug vulnerability code comment  uncovered duplicate complexity amc WMC dit noc rfc cbo CBM IC lcom lcom cam npm dam MOA image KB image histogram TD indicator extend dataset histogram metric complement initial analysis histogram examine normality skewness metric normal distribution symmetric metric normally distribute validate boxplots online supportive boxplots standardize display distribution data graph dataset summary minimum quartile median quartile maximum outlier observation easy identify inspect boxplot plot individual outside boundary minimum maximum metric outlier observation investigate finding univariate variable outlier multivariate variable outlier analysis described correlation analysis previously performance ML algorithm degrades input increase irrelevant partially relevant feature negatively affect model performance successfully reduce input variable important apply spearman rank correlation coefficient analysis TD principal compute sonarqube TD indicator described application spearman rank correlation nonparametric sensitive outlier additionally assume distribution data important data distribution interpret strength correlation cohen suggestion accord correlation weak moderate finally ensure association correlation statistical significance purpose correlation examine confident association hence examine statistical significance correlation confidence correlation metric illustrate  correlation correspond metric focus correlation dependent variable TD principal independent variable TD indicator complement spearman correlation analysis correlation TD TD indicator significance correlation facilitate readability correlation alphabetical denote strength correlation  suggestion described marked correspond weak medium correlation respectively addition statistically significant marked bold statistically significant regular font image KB image spearman rank correlation TD indicator extend dataset towards feature selection metric correlation correlation non significant statistical correlation respect TD marked candidate removal metric identify non correlate CBM IC lcom cam dam metric statistically insignificant correlation rfc CE lcom respect TD consequently filter TD indicator analysis spearman rank correlation TD indicator extend dataset   project metric compute sonarqube reliability metric bug security metric vulnerability maintainability metric code metric comment  coverage metric uncovered duplication metric duplicate complexity metric complexity metric aggregate project compute ckjm complexity metric amc WMC dit noc rfc couple metric cbo CBM IC cohesion metric lcom lcom cam metric npm dam MOA weak correlation medium correlation correlation univariate analysis TD indicator extend dataset    bug vulnerability code comment  uncovered duplicate complexity amc WMC dit noc cbo npm MOA univariate analysis apply correlation analysis filter towards feature selection apply univariate regression analysis remain metric TD indicator TD extend dataset application importance potential confounders empirical orient emphasize univariate regression focus relationship independent variable metric dependent variable TD principal widely software engineering examine metric separately filter remove metric underlie relationship statistically significant TD descriptive statistic however metric highly skewed render data suitable univariate regression analysis apply logarithm transformation remain metric logarithm reduces skew response predictor linear regression assumption normal distribution residual summarizes univariate linear regression analysis metric apply extend dataset application coefficient determination proportion variation dependent variable explain model standard error relationship statistical significance standard error regression coefficient independent variable respectively significance metric statistically significant TD therefore TD indicator analysis contrary metric remove analysis statistically significant remain metric therefore metric multivariate analysis univariate analysis filter metric proceed apply multivariate regression analysis filter towards feature selection univariate analysis examine independent variable target variable separately multivariate analysis examines effectiveness independent variable predict dependent variable multivariate analysis usually combine stepwise regression feature selection choice predictive variable automatic procedure remove independent variable significance backward elimination stepwise regression involves candidate variable deletion variable multiple linear regression delete variable loss statistically insignificant deterioration model variable delete without statistically significant loss remain variable user define significance technique widely empirical software engineering examine combine metric software quality defect code prediction metric report examine statistically significant univariate regression analysis argue another feature selection unnecessary perform mainly additional filter layer capture instance independent variable significant respect dependent variable independently examine univariate analysis significant predictive combine variable therefore redundant information increase model complexity slide described extend initial sample dataset information future information simultaneously independent variable feature information lag lag comprise independent variable ML model generally complex relationship variable data  approach dramatic increase feature therefore increase complexity prediction algorithm performance significantly independent variable without lose explanatory backward elimination significance significance threshold determines longer independent variable predictor significance examine statistical significance TD indicator predictor confidence subsequently backward elimination involve perform multiple iteration fitting multiple linear regression model predictor inspect predictor remove insignificant predictor predictor predictor remove fitting model exclude previously remove predictor remain predictor significant multiple iteration apply backward elimination detail multivariate linear regression model model covariates meaning metric namely bug code duplicate afferent couple significant impact TD TD predictor dataset investigation application covariate coefficient standard error ratio statistical significance coefficient ratio ratio coefficient estimate standard error sample relative ratio absolute suggests coefficient statistically significantly zero confidence remain predictor ratio addition covariate null hypothesis coefficient zero perform backward elimination remain predictor likely meaningful null hypothesis reject intermediate obtain throughout various iteration backward elimination online information regard metric eliminate iteration TD indicator detail regard coefficient standard error ratio statistical significance metric iteration finally strengthen feature selection optimal TD predictor multicollinearity multicollinearity phenomenon predictor intercorrelations highly linearly related correlation predictor target variable indication model performance correlation predictor usually issue issue feature selection analysis later unpredictable variance overfitting model cannot ascertain important feature target variable identify quantify severity multicollinearity linear regression analysis variance inflation factor VIF VIF calculate predictor regress predictor model coefficient determination formula VIF upwards thumb VIF indicates predictor moderately correlate predictor indicates multicollinearity likely predictor remove compute VIF factor predictor VIF considerably TD predictor suffer multicollinearity analysis described perform python program specifically scikit ML library conclude initial metric TD indicator investigation statistically significant TD therefore optimal TD predictor extract bug code duplicate afferent couple metric input forecasting model model training phase described multivariate analysis model TD indicator extend dataset     bug code duplicate slide ML model directly notion observation series data usually frame suitable supervise forecasting task understand notion dummy data temporal sample data specific lag timestamp independent variable respectively target variable apparent structure data supervise framework arise data format dataset format model training information sample due information specific lag target variable lag model estimation lag forecast benefit ML model traditional statistical approach ARIMA ability input feature advantage slide transform dataset format integrates sample multiple prior input predict future output extends initial sample dataset information future information simultaneously approach described detail input sample width lag width slide chosen width illustrate corresponds lag arrow plus lag merge suppose lag indicates independent variable sample lag merge incorporates information additionally desire forecasting horizon illustrate chosen specifically indicates forecast ahead sample target variable dataset ahead forecast target variable depict shift simultaneously sample apply transformation reframed dataset lag plus lag independent variable forecast ahead reframed dataset dataset temporal standard regard choice width lag merge per choice usually depends independent variable forecasting horizon forecasting model therefore initial width selection balance model complexity optimal prediction quality training algorithm forecasting horizon error minimization criterion instance width lag observation minimum absolute error mae forecast ahead application specific datasets across model lag simply increase model complexity without profound impact model accuracy respectively longer forecasting horizon suitable model performance reframed dataset apply slide approach XY  restructure application specific dataset forecasting model suitable supervise ML series dataset prepared standard linear non linear ML algorithm apply preserve fragment apache kafka reframed dataset apply slide approach another challenge emerges concept TD forecasting multi forecast forecast future driven capture entire future TD evolution software application TD future approach ML multi forecast approach model developed forecast forecast recursive approach model developed forecast model recursively prior forecast input forecast subsequent multiple output approach model multiple output developed capable predict entire forecast sequence shot manner apache kafka dataset reframed ahead forecast slide width XY  TD code bug duplicate afferent couple ML regression model exception anns directly output hence exclude multiple output approach moreover slide described assumes dataset reform multivariate lag observation independent variable recursive approach exclude forecast independent variable predict ahead therefore adopt approach model developed forecast forecasting horizon forecast ahead dataset reframed slide approach described dependent variable ahead subsequently model dedicate forecast future finally output model merge vector depicts entire forecast TD evolution ahead machine approach TD forecasting previous introduce various software related metric widely literature TD indicator described data collection initial application specific datasets subsequently feature selection described reduce initial feature TD indicator reduce model complexity optimal TD predictor code bug duplicate afferent couple finally restructure application specific dataset slide suitable supervise ML examine ability various ML model forecast evolution TD principal application specific dataset TD predictor model various forecasting horizon ahead series validation obtain prediction error investigate algorithm various forecasting horizon benchmarking evaluation document thoroughly model training benchmarking investigate ability linear non linear ML model forecast TD evolution software application apply collection ML model multivariate linear regression mlr ridge lasso regression stochastic gradient descent sgd vector regression SVR linear gaussian kernel random regression application specific dataset model extensively evaluate literature ability predict software quality attribute maintainability security software code defect however appropriate ML model trial error predictive performance algorithm strongly depends structure data therefore within context investigate spectrum ML model account highly diverge data relationship application specific datasets overcome limitation technique model briefly described multivariate linear regression mlr commonly technique model relationship independent variable dependent variable fitting linear equation data mlr coefficient variable estimate advantage technique simplicity interpretability performs relationship model extremely complex addition popular statistical package however mlr model suffer overfitting ridge lasso regression technique aim reduce model complexity prevent overfitting apply regularization constrains loss function ridge regression constraint sum coefficient regularization coefficient lambda regularization lasso regression similarly instead coefficient loss function absolute optimization coefficient unimportant feature become zero automate feature selection regularization advantage regularization technique apart prevent overfitting simplicity computational efficiency model however regularization model suffer bias error gradient descent minimize function gradient loss function involves loss derivative function towards minimum stochastic gradient descend sgd regression gradient descent instead update coefficient derivative data algorithm update coefficient derivative randomly chosen sample sgd allows function converge overcome local minimum faster randomness involve advantage sgd ability perform noisy data goal vector regression SVR function approximates target training data minimum generalization error achieve non linear function linearly mapping feature dimensional kernel induced feature advantage SVR efficient non linear data handle kernel trick addition SVR regularization capability regularization prevent overfitting however hyper parameter tune appropriate kernel function proven task regression RT variant decision built iterative splitting data partition decision node binary recursive partition enhance version RT random RF RF ensemble rts bagging bagging repeatedly selects random sample replace training sample training prediction unseen sample average prediction majority vote individual rts advantage RF interpretability complex highly non linear relationship however RF model memory model addition RF model prone overfitting due training decision conduction python program specifically scikit ML library brevity ML approach focus mainly apache kafka software however model comparison application dataset supervise validate performance algorithm validation extensively ML fold validation cannot directly series data due temporal hence observation cannot randomly split without respect temporal ass prediction accuracy model adopt validation strategy inspire fold validation validation commonly evaluate series model performance notion model update observation available brief validation subset consecutive extract series initial model accuracy model future prediction evaluate compute prediction error finally expand training validation combine average estimate model predictive performance validation model accurate estimate performance model unseen data visualization validation behavior apache kafka dataset consists observation snapshot validation chose split meaning training sample expand sample iteration constantly observation split chosen data sample statistically representative broader dataset split overly suffer variability worth mention split chosen application datasets observation observation chose split maintain analogy predictive performance model future horizon validation prediction future respectively image KB image validation hyper parameter tune increase model predictive performance model hyper parameter external attribute model contrast typical model parameter coefficient linear regression model hyper parameter cannot estimate data training hyper parameter penalty parameter error svm random etc tune model GridSearchCV python implementation grid grid commonly optimal hyper parameter model accurate prediction perform exhaustive specify parameter estimator chose coefficient determination objective function estimator evaluate parameter proportion variance dependent variable predictable independent variable perform hyper parameter selection application specific dataset fold validation described avoid overfitting ensure model generalization evaluate forecasting performance investigate model absolute percentage error MAPE MAPE popular forecast accuracy absolute error percentage MAPE advantage absolute positive negative error cancel relative error dependent variable allows forecast accuracy differently series data software application equation MAPE observation actual forecast complement model evaluation compute absolute error mae error RMSE error widely forecasting task mae average magnitude error prediction without direction RMSE quadratic average magnitude error mae RMSE express average model prediction error variable equation mae RMSE observation actual forecast report comparison prediction error regression model apache kafka dataset multiple future prediction error average error split perform validation prediction error bold average specific model ahead prediction category ahead model etc reminder adopt approach described examine model output predict horizon forecast error refer forecast specific individual future entire forecast evolution aggregate forecast illustrate entire evolution examine application model execution phase described illustrates MAPE forecasting model average forecasting horizon ahead investigation illustrate MAPE forecasting model ahead respectively apache kafka TD prediction validation   min RMSE min MAPE mlr average lasso regressor average ridge regressor average sgd regressor average SVR regressor linear average SVR regressor rbf average random regressor average clearly depict linear model mlr lasso ridge SVR linear regression generally MAPE perform non linear model SVR rbf random regression moreover linear model accuracy demonstrate model apply regularization prevent overfitting lasso ridge regression specifically lasso regression candidate average MAPE ridge regression average MAPE image KB image apache kafka TD prediction MAPE average ahead validation image KB image apache kafka TD prediction MAPE ahead validation image KB image apache kafka TD prediction MAPE ahead validation image KB image apache kafka TD prediction MAPE ahead validation image KB image apache kafka TD prediction MAPE ahead validation image KB image apache kafka TD prediction MAPE ahead validation shorter forecasting ahead difference linear non linear model performance becomes clearer forecasting TD apache kafka project ahead lasso regression MAPE horizon SVR gaussian kernel random regression correspondingly lasso regression ahead MAPE horizon SVR gaussian kernel respectively linear model candidate forecasting ahead however observation predictive significantly forecast longer future non linear model almost stable performance holdout sample ahead indicator longer non linear model perform linear indeed forecasting horizon ahead random regression candidate MAPE examine ability investigate algorithm forecast TD principal understand model perform application dataset project instead average detailed apply  application appendix illustrates MAPE forecasting model average forecasting horizon ahead software application investigation illustrate MAPE forecasting model ahead respectively average software application investigation similarly apache kafka shorter forecasting linear model apply regularization lasso ridge regression generally MAPE performance non linear model depict ridge lasso regression model candidate MAPE respectively predictive linear model significantly forecast longer future however non linear random regression algorithm almost stable performance holdout sample ahead ahead random regression candidate performs model MAPE respectively image KB image project TD prediction MAPE average ahead validation image KB image project TD prediction MAPE ahead validation image KB image project TD prediction MAPE ahead validation image KB image project TD prediction MAPE ahead validation image KB image project TD prediction MAPE ahead validation image KB image project TD prediction MAPE ahead validation sum extract analysis observation linear model apply regularization lasso ridge regression capable achieve forecasting performance shorter forecasting ahead non linear random regression perform investigate model longer forecasting ahead application specific datasets significance whereas increase confidence regard generalizability aforementioned finding although cannot apply application valuable contribution TD forecasting landscape composition therefore TD forecasting leverage predictive algorithm combine deliver prediction adequately forecast future TD principal trend software application model execution construction benchmarking model described indicative model execution indicative visualization forecasting report adopt approach meaning model developed forecast forecast forecasting TD principal evolution apache kafka application ahead random regression model validation phase report stable performance perform examine model longer forecasting denotes forecast denotes truth sample exclude model training phase scene accord adopt approach model execute specific forecast TD aggregate vector plot project TD evolution indicative visualization illustrate forecasting random regression ahead application online supportive online observation application investigation random regression meaningful forecast software application algorithm capture trend future evolution TD principal whereas future TD principal capture sufficient accuracy brevity illustration TD evolution forecast algorithm however similarly TD principal forecasting random regression satisfy forecast obtain regularization model lasso ridge regression shorter forecasting report model benchmarking technical implementation introduces approach aim exist gap foundation towards accompany deliver TD forecast therefore assist developer project manager proactive action regard TD management activity  european project aim address challenge issue implement propose approach TD forecasting integrate TD management TDM framework envisage TD forecasting implement individual standalone facilitate applicability consists backend server dedicate deployment forecasting model web service expose server interactive graphic user interface gui allows invocation forecasting model display user insightful information future evolution TD backend frontend TD forecasting component overall  dashboard outcome  project TD forecasting integrate preliminary version  dashboard online currently development purpose screen screen TD forecasting comprises dropdown button interactive plot dropdown button allows user forecasting horizon prediction forecasting horizon backend server invokes forecasting algorithm horizon return prediction gui par interactive plot truth predict TD principal evolution screen plot entire evolution forecast evolution application whereas plot focus solely forecast grain addition plot complementary comprise detailed forecast screen forecast TD upcoming difference TD forecast TD per indicator TD principal increase decrease extent additional information developer inform decision regard prioritization TD repayment activity image KB image screen TD forecasting industrial conduct empirically evaluate meaningfulness TD forecasting approach introduce investigate extent approach valuable insight affect developer decision regard evolution software via questionnaire distribute representative software survey minimize possibility remain statistical detach software development survey seek feedback practitioner goal survey twofold empirically evaluate meaningfulness accuracy TD forecasting methodology propose empirically ass usefulness acceptance TD forecasting concept software daily TD management activity purpose survey involve greek department  greece european software hereafter refer development service multiple technology private public organization employ highly skilled professional worldwide however anonymity dataset anonymized personalize information project participant survey although participant extremely familiar TD concept terminology experienced issue related quality assessment sonarqube continuous inspection code quality software development lack TD terminology data collection furthermore sonarqube quality inspection allows partially validate sonarqube TD measurement mechanism communication developer TD measurement software development survey opt questionnaire described detail online important develop questionnaire selection survey guideline kitchenham  amount purposeful concrete category mutually exclusive avoid biasing respondent construct questionnaire multiple choice organize introductory questionnaire introductory participant demographic information role subsequently participant introduce background information concept TD component TD principal inefficiency etc rate likert aim evaluate usefulness TD forecasting questionnaire refer project specific valid participant actively involve development project formulate thoroughly described premise access dedicate sonarqube instance host analysis software application suitable candidate survey criterion rely application application developed java program constantly maintain relative commits associate sonarqube analysis measurement available commits finally sonarqube analysis measurement minimum code bug duplicate code TD principal metric construction TD forecasting model statistically significant TD predictor analysis conduct within unfortunately fourth TD predictor afferent couple available analysis ckjm extend furthermore access source code application execute ckjm extend however unavailability independent variable significantly affect forecasting performance model afferent couple standard error variable survey  demographic role usefulness TD forecasting useful estimation TD principal software project useful forecast future TD principal software project extent forecast TD principal future development project suppose forecast increase trend TD principal action repay TD TD principal evolution project temporal TD increase TD increase TD increase gradual TD increase project gradual TD increase TD decrease TD increase TD principal forecasting project commits project relatively stable TD evolution however forecast commits ahead gradual increase TD principal forecast anything development perform code refactoring prevent increase project commits project gradual increase TD evolution however forecast commits ahead slight decrease TD principal increase rate forecast anything development invest enhance already exist functionality criterion software application belonging business software domain namely project project loc loc respectively specifically analysis data sonarqube database commits project commits project although commit code update weekly basis integral routine inform exist sonarqube mainly due technical issue sonarqube analysis data fix weekly interval introduce establish dataset longer viable approach overcome issue replace concept weekly snapshot consecutive commits therefore within context survey specifically questionnaire TD forecast application forecasting ahead refer commits ahead sonarqube measurement anonymized software application online parse sonarqube analysis data perform pre processing extract plot application illustrate entire TD principal evolution application investigation subsequently manually inspect plot extract identify abrupt TD principal trend trend gradual increase decrease increase decrease temporary increase decrease etc therefore questionnaire identify participant abrupt trend instance trend TD principal decrease maybe due code deletion code refactoring remove TD ill code participant aware specific action perform justify abrupt trend refactoring code addition deletion deadline etc sonarqube TD measurement mechanism capture software development apply forecasting model predict future TD principal evolution project project ahead exploit prototype TD forecasting described extract forecasting plot automate without tedious model training benchmarking usage python script therefore questionnaire TD forecast application participant willing anything development project TD principal evolution instance TD evolution specific application constant forecast TD increase future perform refactoring prevent increase respectively TD evolution gradually increase forecast TD decrease invest enhance functionality instead perform refactoring practical usefulness meaningfulness TD forecast partially evaluate qualitative feedback participant majority questionnaire likert exception respondent option refactoring code TD action however questionnaire refer project specific description text survey analysis survey demographic subsequently analyze participant obtain due questionnaire knowledge application analysis communication specifically request participant actively involve development project valid facilitate distinguish response participant maintain anonymity participant survey hereafter refer regard demographic participant extract questionnaire participant software developer participant software architect moreover participant analyze understand usefulness TD forecasting industrial context specifically regard useful estimation TD principal software project likert useful useful participant chose useful option remain chose useful option response TD principal monitoring perceive highly important software development valuable information regard effort maintain extend software application regard useful forecast future TD principal software project likert useful useful participant chose useful option remain chose useful option response TD principal forecasting significance software development gain understand future TD issue advance appropriate refactoring activity maintenance regard extent forecast TD principal future development project likert extent participant chose moderate extent option remain chose extent option response participant future development project forecast TD principal statement evaluate specific participant questionnaire finally regard suppose forecast increase trend TD principal action repay TD participant respond refactoring remain respond code TD allows refactor exist code code refactoring establish approach TD repayment code recently emerge promising TD prevention strategy inspect respondent opt refactoring already exist code repay TD latter indicates possibly strict deadline delivery functionality prefer increase overall quality project TD code code contributes positively overall TD assess specific participant questionnaire subsequently analyze questionnaire series identify TD principal project project abrupt trend participant goal ass participant aware specific action development perform justify abrupt trend refactoring code addition deletion deadline etc therefore validate sonarqube TD measurement mechanism capture software development participant summarize refer comment regard TD principal trend project project respectively inspect participant project participant project project identify illustrate online reading participant comment regard identify TD principal trend almost developer involve project aware specific action perform justify abrupt trend specifically accord participant temporal TD principal increase project depict attribute amount functionality experienced engineer deadline improvement code TD principal decrease similarly TD principal increase depict attribute rapid code addition limited without deliver version project customer subsequently TD principal increase depict attribute additional functionality request customer quickly delivery project finally gradual TD principal increase depict attribute rapid bug fix code expansion without properly previous implementation sonarqube TD measurement mechanism indeed capture software development participant comment TD principal trend project similarly project reading participant comment regard identify TD principal trend developer involve project aware specific action perform justify abrupt trend specifically accord participant gradual TD principal increase project depict attribute specific strict deadline delivery version customer demo contest involve developer project similarly TD principal decrease depict attribute code refactoring defect fix developer perform finally TD principal increase depict attribute feature customer affected specific code developer constantly switch customer limited comment developer sonarqube affect magnitude TD increase implies increase gradual instead similarly observation regard project project sonarqube TD measurement mechanism capture software development participant comment TD principal trend project summarize respondent regard questionnaire TD TD evolution project attribute software development cycle specifically TD growth gradual mainly attribute rapid code addition usually without implement feature functionality request client strict constraint similarly temporal TD growth related dirty code expansion deadline however prompt refactoring action improve TD quality recently code TD attribute refactoring cycle perform relatively relaxed repay amount accumulate TD improve quality maintainability suboptimal code introduce project rapid code expansion mention definition TD metaphor verify necessity inspire quality compromise yield desire benefit delivery code client quality decay software developer aware additional refactoring action software maintainable finally analyze questionnaire TD forecast project project participant willing anything development project TD principal goal evaluate practical usefulness meaningfulness TD forecast qualitative feedback developer illustrate ahead forecast project project respectively ridge regression perform prediction questionnaire truth forecast onwards hidden participant however information completeness validation forecasting approach addition forecast carefully signal significant trend choice ass willingness developer development cannot foresee trend participant summarize commits application relatively stable TD evolution however forecast commits ahead gradual increase TD principal forecast anything development perform code refactoring prevent increase image KB image project TD principal forecasting ahead ridge truth forecast onwards hidden participant image KB image project TD principal forecasting ahead ridge truth forecast onwards hidden participant project almost minor addition functionality focus critical bug prevent software misbehavior user code refactoring utmost importance prevent TD increase decrease TD principal future rate code refactoring mandatory manager approve development implement architecture refactor code maintainable usable approve management management priority quality software TD increase continuous code mainly developed junior engineer without guidance senior engineer TD incremental revisit questionnaire gradual TD principal increase attribute participant rapid code expansion without properly previous implementation developer invest functionality refactoring already exist code however developer forecast predicts gradual increase TD principal application forecast reconsider decision proceed refactoring instead code reading participant respondent actually willing action reduce TD principal increase forecast specifically respondent perform refactoring prevent future TD principal increase rate defect arise hinder software behavior respondent agrees code refactoring mandatory prevent increase however deviation development approve project manager perfect balance repay TD therefore increase software quality reduce software project usually achieve decision ability manager confirms future evolution software quality depends heavily business related parameter feature release deadline etc commits application gradual increase TD evolution however forecast commits ahead slight decrease TD principal increase rate forecast anything development invest enhance already exist functionality already critical refactorings code decrease TD handle project reassure code increase TD apply  sprint develop project functionality ideally pause develop refactor exist code however future TD decrease decrease TD code allows refactor problematic revisit questionnaire slight decrease TD principal attribute participant code refactoring defect fix developer perform relatively relaxed invest cleaning already exist code therefore decrease continuously TD principal rate strategy alternative invest TD code instead refactoring exist code efficient code refactoring difficulty introduce refactoring cycle due limitation developer forecast predicts slight decrease TD principal increase rate application forecast reconsider decision proceed TD code instead refactoring exist reading participant respondent willing advantage forecast slight decrease TD principal pause refactoring activity functionality software application focus TD code prevent TD increase deliver functionality specifically respondent reassure code increase TD apply refactoring sprint similarly respondent ideally pause develop apply refactoring however pending functionality forecast slight TD decrease focus TD code industrial report validation actual TD trend reflect circumstance decision development forecast derive ML model valuable insight affect developer decision regard evolution software research solidify usefulness TD forecasting approach account numerous business related factor evolution software project limitation threat validity discus limitation validity threat empirical accuracy forecasting model definition constrain software domain future evolution software quality depends heavily numerous business related factor feature release deadline fluctuation development therefore anticipate schedule unanticipated challenge endeavor beyond scope longer horizon phenomenon capture project building prediction model historical data knowledge future evolution described perform industrial investigate prediction regard TD evolution nevertheless acknowledge inability propose approach account unforeseen business related apart aforementioned limitation methodology propose suffers threat external internal validity external validity refers ability generalize unavoidably external validity threat applicability ML model forecast TD examine sample application another application exhibit phenomenon nevertheless application diverse respect application domain etc partially mitigates threat generalization addition propose methodology consists construct forecasting model version therefore easily adapt software application sufficient reliable historic data available threat stem dataset consists source java application limit ability generalize conclusion application domain program however building TD forecasting model described primarily upon output compute software related metric indicator quality attribute TD propose model easily adapt forecast TD application cod program extraction software related metric TD indicator respective contributes mitigate threat generalization however dataset application cannot speculation source application commercial orient program research finally another threat external validity sample survey perform within context report participant investigate software application validation insufficient valuable insight regard meaningfulness propose TD forecasting methodology concern internal validity possibility unwanted unanticipated relationship parameter affect variable predict reasonable assume numerous metric affect TD consideration however construct initial TD predictor software related metric widely literature indicator presence TD OO software metric code code issue extract asa limit threat regard selection TD predictor limited feature selection analysis correlation TD estimate software related metric TD predictor threat internal validity however attempt mitigate threat univariate multivariate regression analysis explore relationship dependent independent variable furthermore statistical significance indicator TD quality safely perform feature selection maximize diversity representativeness extend dataset additional heterogeneous application construct validity refers meaningfulness measurement independent dependent variable correctly threat related construct validity due inaccuracy identification software related metric TD indicator identification quantification TD mitigate risk widely namely sonarqube ckjm extend proof concept propose forecasting methodology forecasting approach described dependent apply measurement user preference however measurement obtain consequently therefore experimentation ass correctness obtain via prediction model exploit ML algorithm implementation scikit library widely reliable forecasting threat validity finding TD repayment refactoring activity effective recommendation TD repayment granularity however goal propose forecasting approach developer project manager decision perform TD repayment project grain recommendation software component repayment activity focus finally reliability threat concern possibility replicate facilitate replication experimental package dataset script analysis forecasting model construction online moreover source code repository project available github obtain data implication researcher practitioner knowledge TD examines applicability ML model TD forecasting across independently developed source java project analysis indicates linear regularization model non linear random regression meaningful forecast TD evolution sufficient accuracy significant implication research despite limitation previous implication research identify issue address research although extensive research respect predict evolution individual software feature quality attribute quality directly indirectly related TD software project concrete contribution exist related literature regard TD forecasting therefore impact scientific community therefore encourage researcher explore direction topic future extensively evaluate TD forecasting technique broader spectrum software application domain program addition useful investigate efficient forecasting model accurate prediction TD principal evolution equation software repository potential source TD related data project management issue specifically mining TD related data project issue report effort fix bug bugzilla closing issue jira valuable information towards enhance TD forecasting approach ultimately approach information specialized technique forecasting code analysis software evolution analysis processing pave advance domain predict future TD critical decision timely software become  therefore respond promptly appropriate refactoring activity prevent situation specifically approach TD forecasting examine forecasting technique contribute towards enhance identify application introduce refers accumulate TD principal becomes benefit implication monitoring forecasting evolution TD highly important software development valuable information regard effort maintain extend software application therefore TD forecasting methodology integrate relative outcome research crucial remain competitive decision regard TD management activity hypothetical scenario software investment specific application TD forecasting effective facilitate planning budget allocation specifically model predicts decline TD project manager proactively allocate resource software enhancement project model predicts increase TD organization priori allocate resource quickly repay action development refactoring activity research therefore potential economic impact software budget foresee TD accumulation therefore avoid potential bankruptcy future empirical focus exclusively model software evolution project manager efficiently prioritize TD activity software application specific application however developer overwhelmed volume TD liability code bug vulnerability etc fix render TD repayment procedure tedious consume effort demand significance prioritize software component refactor highlight fix TD item dormant code effectively affect maintenance future investigate possibility extend TD forecasting technique granularity software project package function enable granular prioritization TD liability incorporate information retrieve TD forecasting technique rank software project artifact prediction accumulate TD conclusion future technical debt TD refers inefficiency phase software development lifecycle extra maintenance effort recent TD attract attention academia considerable increase functionality TD management TD repayment activity TD management aim resolve mitigate TD software technique reengineering refactoring however decision regard repay TD item consequence stress accompany enable engineer project manager perform effective software maintenance insight regard apply refactoring therefore stakeholder decision choice decision uncertainty circumstance forecast evolution TD software development practical decision mechanism aim improve TD repayment strategy estimate software become  purpose examine extend usage ML model meaningful accurate approach forecasting TD principal source software application RQ across independently developed maintain manage source project TD principal model adequately ML technique specifically forecasting horizon ahead regularization model lasso ridge regression meaningful forecast TD principal evolution forecast longer future however predictive significantly contrary non linear random regression almost stable performance holdout sample examine ahead forecasting horizon longer ahead random regression capture trend future evolution TD principal predictive linear model indicates complex model performs forecast horizon longer analysis conclude ML model constitute suitable effective approach TD principal forecasting meaningful estimate TD evolution relatively future TD capture sufficient accuracy knowledge TD examines applicability ML model TD forecasting therefore constitutes basis future research experimentation future extensive evaluation TD forecasting technique broader spectrum software application granularity software project package function solidify usefulness TD forecasting approach conduct extend practitioner future prediction actual development impact forecasting adoption investigate ability already examine forecasting model accurate prediction longer forecasting horizon investigate software repository potential source TD related data project management issue archive communication project personnel specifically analysis communication project personnel reveal indication TD artifact concentrate maintenance effort indication factor TD forecasting technique target critical maintenance artifact potential mining information achieve source triangulation yield accurate TD forecasting estimate credit authorship contribution statement   conceptualization data curation formal analysis investigation methodology software visualization draft review edit   formal analysis funding acquisition methodology project administration resource validation visualization review edit   data curation formal analysis software visualization review edit alexander  conceptualization investigation resource supervision validation visualization review edit declaration compete author declare compete financial personal relationship influence report apache ofbiz TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor apache  TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor apache groovy TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor apache  TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor google guava TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor  TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor retrofit TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor boot TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor apache  TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor apache incubator TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor java websocket TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor  TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor jenkins TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor  TD prediction validation ModelMAE min RMSE min MAPE mlr lasso regressor ridge regressor sgd regressor SVR regressor linear SVR regressor rbf random regressor