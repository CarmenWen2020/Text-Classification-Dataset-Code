deductive verification gain paramount attention academia although intensive research direction almost mainstream research community paid attention verification database application proposes comprehensive verification vcs generation technique database program adapt symbolic execution conditional normal weak precondition validity generate vcs database program determines correctness annotate database developed prototype DBverify theoretical foundation allows instantiate VC generation PL sql code yield detailed performance analysis approach circumstance respect literature propose approach competence crucial sql feature aggregate function nest query null operation embed sql code within host imperative chosen benchmark PL sql code annotate relevant procedure violate annotate primary latter mostly due acceptance runtime input sql statement without keywords database formal verification deductive verification introduction static program verification integral software engineering formally disprove correctness program without execute acknowledge immense importance critical intensive research direction inception verification theorem model algebra successfully introduce formally verify correctness finite hardware infinite software program guarantee implementation satisfies specification deductive purpose theorem emerge promising technique software verification intensive research direction coverage almost mainstream presently deductive verification stage maturity industrial deductive approach internally employ verification generator VCG input program specification return output proof obligation verification vcs vcs backend proof validity vcs relatively proof richer specification database application pivotal role aspect daily existence realize everywhere web application critical banking commerce government health etc situation organization prefer adopt software module integrate exist database driven underlie database intact therefore verification untrusted module essential erroneous code inconsistency exist database data violate exemplifies scenario budget allocation attribute TA database  propose budget department whereas attribute MP EQ CT CS maintain distribution manpower equipment contingency  respectively procedure DBprog extract TA application variable department program department available budget program statement adjusts budget deficit amount specification constraint constraint specify  definition respect procedure DBprog execution however DBprog accepts input update operation violation specification reduce budget amount minimum threshold specify constraint motivation contribution presence external database along program internal verification task database application challenge  although database integral indispensable compute environment research community paid attention direction exhaustively literature relatively attempt verify database application briefly propose manually translates embed sql code  script computes verification weak precondition unfortunately approach suffers severe limitation scalability adopt program precisely verification decidable fragment within scope variable logic formula approach fails accept sql code presence arithmetic operation aggregate function operation etc predicate abstraction integrity constraint verification extend version orient database propose   cope verification complexity due reference source code translate intermediate predicate abstraction apply intermediate expressive accommodate important database feature nest query arithmetic expression aggregate function etc author   propose integrity constraint verification database application transformation operator propose approach express update operation predicate integrity constraint define constraint theory function translates constraint theory weak precondition respect update simplify formula obtain apply function  verification RDBMS specification implementation propose coq proof assistant expressive limited relational algebra proposal allows transaction functional database definition refinement verify refinement checker stateful contrast concern address database implementation issue approach mainly concern bug user define transaction comparative summary literature depict exist proposal potential null aggregate function arithmetic expression paradigm notation attribute involve attribute tuple involve multiple attribute involve null involve aggregate assertion involve attribute application variable applicability exist literature relatively due inability embrace crucial sql feature aggregate function nest query null arithmetic expression moreover focus verification sql statement without imperative paradigm compensate extra complexity approach translate sql intermediate therefore expressive intermediate imposes limitation verification sql feature usually database application popular host program java etc embed data access logic express declaratively structure query sql sql derive program PL sql sql therefore verification application contrast program mainstream demand treatment due presence database attribute along program variable comparative summary literature               facilitate correctness proof database application address mention challenge propose comprehensive technique generation verification vcs database program adapt symbolic execution SE conditional normal cnf weak precondition wpc generate vcs database program discharge valid automate theorem prover program guaranteed specify database developed prototype DBverify theoretical foundation allows instantiate VC generation PL sql benchmark code yield detailed performance analysis approach circumstance report respect literature approach powerful verify sql code embed within host imperative coverage mention crucial sql feature database worth mention primarily motivate  pinto  summarize contribution propose comprehensive technique generate verification vcs database application database statement embed host imperative generate vcs automate theorem prover validity program correctness aim adapt symbolic execution SE conditional normal cnf weak precondition wpc propose technique important sql feature aggregate function nest query null various operation union intersect minus formalize conversion database program assignment facilitates verification symbolic execution conditional normal develop DBverify verification implement python theoretical foundation enables user verify PL sql procedure approach DBverify antlr parser generate vcs microsoft theorem prover validity finally perform experimental evaluation benchmark PL sql code approach detailed performance analysis experimental establish effectiveness approach various circumstance organize recall abstract syntax consideration introduces conversion database program assignment detail propose verification generation technique database program complexity analysis propose approach correctness proof detailed DBverify prototype implementation verification PL sql code experimental PL sql benchmark code detailed performance analysis described threat validity finally research concludes database assignment recall   abstract syntax database consideration introduce assignment intermediate representation serf backbone approach propose abstract syntax database generic scenario database application sql code embed another host aim recall   abstract syntax sake simplicity theoretical formalism sql data manipulation host imperative statement depict variable categorize database attribute application variable arithmetic expression boolean expression define accordingly presence along arithmetic relational operator distinct aggregate function respectively identity function sql statement consist action update statement component action component formula logic exemplify statement update  sal sal corresponds update corresponds action therefore abstract syntax define informally semantics update statement described database tuples satisfy attribute update sequence similarly query distinct   max sal tab sal   max sal  abstract syntax accord sal distinct distinct  distinct  max sal max sal asc filter tuples target satisfaction obtain processing tuples  application variable syntax nest query insertion tuple satisfy default abstract syntax database   assertion database deductive verification fully automatic annotate source code assume assert statement accord specification informal semantics assume assert assume command excludes computation satisfy logical expression whereas assert command program specify proven program execution whenever assert assertion satisfied verification assumption initial database consistent database reflect annotate program assume command code database command responsible database detect violation granularity annotation assert command anywhere within program database command adopt assertion  define database attribute tuple involve null aggregate assertion integer variable arithmetic expression define reader refer  semantics assertion exemplify various database schema employee ID  salary department    assertion salary salary salary attribute tuple respectively upon presence attribute assertion whereas assertion   assertion due involvement database attribute application variable assertion involve null aggregate null avg salary respectively assignment database assignment semantically equivalent representation program assignment variable version version denotes logical variable ensures assignment variable define versioned variable define variable associate integer subscript version obtain logical encode program essential task deduction verification framework generation appropriate verification demonstrate code snippet assignment program code generation vcs capture actual program semantics code fragment specification depict logical expression VC annotate code however although capture due unsatisfiability unsatisfiable satisfiable differentiate variable assignment operator convert program code assignment assignment imperative statement prime objective assignment ensure definition variable assignment statement version define variable assignment operator introduce code equivalent assignment denote initial version version respectively conditional statement merge assignment violate multiple definition variable merge imaginary assignment introduce merge function resultant representation static assignment ssa function argument correspond incoming argument function incoming along ssa code fragment depict ssa executable function equivalently define ternary conditional operator statement define dynamic assignment dsa alternative representation variable define along ensure definition towards merge meaning function mapping incoming equivalent predecessor correspond appropriate function argument destruction function predecessor ssa code snippet depicts equivalent dsa similarly highlight ssa dsa treatment statement image KB image statement assignment assignment sql statement extend notion ssa dsa database application exemplify update statement treat imperative statement assignment depict conversion assume existence ghost database denote cap contains version attribute database allows resultant assignment reflect database capture database auxiliary update statement negation cond database assignment depict pictorially image KB image statement assignment similarly define assignment insert delete auxiliary update statement reflect database versioning attribute refer statement statement version application variable treat sql statement statement similarly statement imperative presence update delete insert statement treatment convert ssa dsa code snippet illustrate function multi definition database attribute ssa define update program define image KB image dsa database code introduce whenever statement function destruct predecessor instance introduce statement ensures definition attribute towards merge image KB image sql statement assignment propose verification approach dsa whenever applicable restrict discussion dsa translation subsequent formalize dsa translation database function program variable correspond version define initial version define define function  command variable version equivalent dsa variable version depicts detailed definition  various component consideration  renames variable attribute correspond versioned version assignment statement version define variable incremented update version introduce syntactic indicates action tuples satisfy another action tuples satisfy update insert delete statement syntactic image KB image dsa translation function  dsa update delete insert auxiliary update statement capture definition attribute tuples syntactic definition  assignment statement modify increase version define attribute conditional statement function destruct sync define stmt stmt define statement stmt stmt stmt task sync function variable definition consistent stmt stmt apply destruct ensure variable inclusion code snippet accord definition  sync destruct function yield dsa introduces statement resultant dsa statement obtain destruct similarly statement introduce propose verification generation technique namely symbolic execution conditional normal weak precondition subsequent verification generation technique mention earlier fundamental involve deductive approach generate vcs program code annotate specification vcs generate fed theorem provers validity prof correctness program specification although vcs widely verification systematically analyze research community author  pinto  revisit various VC generation technique iteration imperative program perform detailed comparison efficiency knowledge explore realm database application database statement embed within purpose host imperative objective extend VC generation technique namely symbolic execution conditional normal weak precondition database application enable formally verify underlie database perform detailed comparative analysis respect performance symbolic execution simplest verify correctness program generate logical formula along execution program symbolic execution specification account symbolic execution considers symbolic input concrete therefore execution proceeds along entire execution program VC assert command VC encodes program relevant assert command therefore exists relation execution VC validity logical formula certifies execution correspond assertion consequently successful validation formula ensures program correctness specification technique advantage traceability invalid VC allows immediately identify execution violate formalize function statement dsa superscript subscript version update version respectively denote dsa update delete insert function VC define logical encode execution program encounter program along function return logical formula encodes program defines function statement helper function composition function program sequence statement function VC recursively logical encode program invoke auxiliary function define finally encounter statement function VC return VC correspond implication assert constraint define overall algorithm symbolic execution VC generation depict algorithm cfg denotes graph image KB image code snippet DBprog dsa annotate assume assert statement empty sequence statement DBprog accord definition VC apply algorithm sequence statement VC VC VC initiate recursive subproblems auxiliary function accumulates logical formula along program finally function VC encounter assert statement program generates vcs VC satisfied MP EQ CT CS indicates DBprog respect specification violation happens due statement DBprog attribute amount influence runtime input limitation conditional normal previous VCG symbolic execution exponential vcs scenario overcome VCG bound model software  unroll loop avoid enumeration  technique transformation iteration dsa program basically conditional statement sequentialized distribute sequence statement conditional statement nest combine rewrite dsa program another semantically equivalent statement guard conditional statement guard representation dsa program conditional normal cnf transformation database program dsa equivalent cnf define function  transforms statement equivalent cnf upon execution depends extraction formula statement purpose define function logic formula depict finally verification construct contains encode program statement contains encode assert command program unlike symbolic execution technique verification generate depicts function VC combine generates VC program dsa algorithm overall algorithm generate cnf VC illustrates cnf VCG technique image KB image dsa DBprog cnf apply  depict output formula obtain apply therefore construct combine depict similarly symbolic execution technique validity VC fails violation weak precondition hoare logic widely deductive verification formalism computer program axiom inference proof hoare triple pre stmt terminate execution statement stmt satisfy precondition pre satisfy postcondition introduce predicate transformer transform predicate specify program semantics define weak precondition postcondition treat assertion precondition postconditions predicate program predicate transformer technique generates vcs propagate predicate backward weak precondition postconditions along program VCG postcondition costly due presence existential quantifier formula extend VCG weak precondition database program statement stmt postcondition weak precondition iteration imperative program compute image KB image DBprog cnf DBprog image KB image verification DBprog cnf adopt VCG database program define database statement convert input program dsa motivate program DBprog depict annotate DBprog depict verification weak precondition annotate program compute image KB image finally VC generate similarly SE cnf validity VC fails violation limitation although approach generates verification VC exponential program instance statement weak precondition computation considers formula increase duplicate propagate therefore program conditional statement generates VC efficient weak precondition non dsa program weak precondition technique vcs exponential respect program flanagan  technique apply program dsa generate vcs quadratic understand simplify definition predicate transformer dsa program execution program encode logically compact duplicate assert formula encode program formula program formula assignment statement simply correspond equality formula sequence statement conjunction formula sub statement conditional formula formula statement program formula various statement consideration depict function denotes encode author   later propose simplify emphasize technique weak precondition computation introduce weak formula weak liberal precondition characterizes pre non execution terminates satisfy image KB image definition function statement wpc conservative predicate pre execution terminate satisfy execution assertion satisfied however execution terminate satisfy therefore author   derive notable relation wlp assert statement therefore wlp program compute wlp program define assume assert statement therefore database program assert assert statement function computes VC generates linear program formula unlike wpc VC efficient weak precondition VC linear program illustrates annotate VC linear duplicate assert expression address aggregate function null sub query union intersect minus operation guidance crucial database specific feature operation aggregate function aggregate function statement usually return query violation obtain aggregate function variable affect directly indirectly specification database database program aggregate function attribute VC approach ensure presence resultant vcs treat vcs variable VC violates specification violation goal identify instance violation adopt approach various aggregate function min exists minimum attribute database instance violation however false positive treatment min variable propose adopt constraint constraint min vcs max min sum adopt constraint define bound constraint variable sum approximation false positive avg adopt constraint define upper bound constraint variable avg applicable specification department employee tuple scope future treat null address null treatment specify attribute accept null null specific null violation situation expression attribute insert update null null presence null null conditional statement possibility null null null attribute warn report generate presence null null false respectively null constraint null therefore VC generation statically ignore logical encode database statement sub query sub query nest inside clause outer insert update delete statement inside another sub query sub query anywhere expression return sql statement sub query format sub query format convert inner query logical sub formula becomes VC involve attribute operator relation outer query illustrates scenario update statement logical sub formula generate sub query symbolic execution ID ID cid therefore resultant VC nest query format replace operator assignment operator VC generation aim violation database code instance invalidate resultant VC fulfills objective without loss generality assume attribute database unique presence query address easily incorporate VC addition equi union intersect minus operation query combine operator union intersect minus logical encode union intersect achieve logical logical operator logical formula obtain operand union intersect compose minus operation replace union intersect operation VC generation presence minus achieve treat loop mention earlier deductive verification approach user guidance expertise program annotation naturally presence loop program challenge fundamental infer loop invariant remains throughout loop iteration situation iteration effective cod database program action tuples parameterized changeable parameter tuples database statement code tuples parameterized action collectively express loop iterate cursor recursive query hoare logic propose iterate program loop invariant formally classic inference invariant express partial correctness loop defines hoare logic database program extend imperative program relation hoare triple weak precondition iff generates quantifier formula hoare logic verifier instead computation loop invariant host imperative relies exist approach adopt database program computation inductive invariant approach   propose verification approach alternative extend exist abstract interpretation database program definition widen operation addition recursive query image KB image hoare database program complexity analysis correctness proof perform complexity analysis propose VC generation algorithm correctness complexity analysis asymptotic characteristic vcs generation various approach VC generation symbolic execution generates vcs along execution program program conditional statement exist execution therefore vcs contrary cnf approach sequentializes conditional statement increase program extent assume program contains chain nest depth approach generates VC weak precondition approach considers formula therefore program conditional statement generates VC correctness proof define function namely VC VC core VC generation technique therefore correctness propose verification technique guaranteed correctness function achieve validity input output logical formula semantics transition semantics database application aim recall notion transition semantics database program transition semantics database database involves host imperative variable database attribute define semantics domain definition application environment application variable domain function domain application environment application variable domain val definition database environment database index database environment define function domain definition environment database attribute attr attribute correspond typed domain environment define function attribute attr projection operator definition concrete semantics database consideration define denote database environment application environment respectively therefore denote tuple transition relation specifies successor statement executes therefore transitional semantics program restricts transition relation program instruction illustrates concrete semantics update statement database update operation database update statement abstract syntax denote target semantics notation denotes tuples denote semantic function arithmetic expression environment notation denotes substitution substitution environment denote finally upper bound denote depict lemma theorem lemma theorem aim guarantee correctness various VC generation function verification approach mention earlier transition semantics define lemma theorem extend semantics assertion define  database application relation satisfies assertion interpretation lemma logical encode execution program dsa program statement program logical encode compute function function interpretation implies proof proof establish structural induction assume satisfies interpretation assignment statement obtain substitute occurrence involve semantics therefore due dsa affected combine database statement database statement involves action cond treat guard command equivalent dsa database statement definition function lemma database action assume definition function involve due dsa possibility former action semantics therefore latter attribute substitute respectively affected therefore hence combine proof statement direction reader appendix detail theorem database program annotate dsa verification derive function VC initial valid denote satisfies vice versa proof apply accord definition vcs along execution initial satisfy accord lemma program satisfies assert therefore valid prof theorem theorem verification generate annotate database program cnf apply function VC initial valid denote satisfies vice versa proof semantically equivalent proof theorem theorem annotate program verification valid satisfies vice versa proof proof structural induction recall definition accord definition assume therefore accord transition semantics assume occurrence replace accord assume accord definition assume therefore accord semantics function assume update tuples satisfy similarly assignment statement remain unchanged tuples satisfy combine lemma assume proof statement reader refer appendix detail recall hoare triple hoare logic database define semantics hoare triple definition hoare triple valid denote whenever soundness denote hoare triple derivable hoare logic theorem soundness hoare logic stmt pre respectively stmt stmt proof proof database statement proof theorem assignment sequence conditional iteration statement reader refer  DBverify database code verifier DBverify prototype implementation propose verification approach PL sql developed python roughly code workflow DBverify DBverify consists module dsa translator SE verify cnf verify WP verify overall schematic diagram DBverify depict module convert PL sql code equivalent dsa module SE verify cnf verify WP verify implement verification generation deductive approach module detail image KB image DBverify workflow image KB image schematic diagram DBverify description benchmark database application DB  procedure attribute application variable  CC inventory management IM  CB hotel reservation HR retail business management RM computer management CS banking management BS registration CR module dsa translator module convert PL sql code equivalent dsa initial task module annotate PL sql code assume assert statement specification consideration construct graph cfg annotate code parse technique antlr parser purpose finally cfg information input module performs variable versioning destruction node immediate predecessor generate dsa standard algorithm extension PL sql schematic diagram module depict module SE verify annotate PL sql program dsa module generates vcs accord algorithm depict resultant vcs smt solver validity purpose schematic diagram depict module cnf verify unlike SE verifier module convert annotate input program dsa equivalent cnf representation generates VC accord algorithm finally VC fed smt solver validity schematic diagram module depict module WP verify database program specification module computes VC accord algorithm schematic diagram module depict DBverify considers presence aggregate operation variable null maintain  attr  attr  attr   attribute constraint null null assign expression null attribute report constraint violation  guard conditional statement null replace non determinism therefore VC generation statically ignore logical encode database statement nest query DBverify proceeds inner sub query outer sub query generate abstract syntax ast sub query generate logical formula accord formalism described operation DBverify extract logical formula ast logical formula query outer union intersect minus operation formalism described experimental evaluation experimental PL sql benchmark code prototype DBverify summary benchmark code depict organize experimental report subsection ass performance deductive verification symbolic execution conditional normal weak precondition technique discus elect efficient algorithm conduct computer equip core ghz cpu 4GB memory ubuntu operating verification deductive approach DB   vcs SE verification  verification  valid invalid  client sql dimension sql sql  sql status sql parcel sql client sql delivery attempt sql parcel sql warehouse sql update warehouse sql license category contract sql delivery status sql sql delete client sql  inventory sql assemble module sql assemble component sql  sql deliver sql  cust sql  update sql retail business logic sql budget sql  sql award bonus sql discount sql  proc sql   proc sql  sql  sql sql transfer sql  account sql debit account sql procedure transaction sql sql  sql  sql  sql  sql  sql  sql  sql  sql  sql  sql assess deductive verification technique DBverify accepts PL sql code annotate assertion input generates vcs express validity vcs checked negation unsat indicates program satisfies whereas indicates counter report VC negation generate procedure budget weak precondition exhibit model CS MP EQ CT TA model serf counter correctness budget procedure depicts detailed verification benchmark application deductive approach procedure define benchmark various service verify individual independent focus verify database fourth denote assertion procedure assertion annotate PL sql procedure define definition chosen practical relevance procedure behavior assertion attribute tuple null aggregate function assertion fifth indicates verification vcs generate procedure symbolic execution SE verification conditional normal cnf weak precondition wpc generate VC verification  procedure approach comparison depict worthwhile verification cnf SE wpc interestingly benchmark code SE longer verification wpc arguably generation multiple vcs multiple logical encode SE validity individually depict however exception procedure namely IM RM application longer VC generation experienced depict due presence attribute postconditions sql statement define attribute precisely affect computation postcondition weak precondition backward direction significantly verification outcome assertion valid invalid report respectively clearly benchmark procedure satisfy annotate database procedure violate annotate primary sql statement procedure accept runtime input without assertion satisfied benchmark procedure dsa generation DSAGEN conversion PL sql code equivalent dsa SE cnf verification intuitively various factor statement code variable attribute define statement nest depth etc contribute differently DSAGEN extract insightful observation variation DSAGEN PL sql code classify statement category medium effectiveness denote respectively upon contribution dsa gen compute overall PL sql code accord equation statement denotes statement category return category additional factor reflect complexity attribute variable define factor implementation dependent classify statement effectiveness category variable declaration assume assert cursor operation exception handle statement medium effectiveness category assignment statement effectiveness category conditional sql statement depicts variation DSAGEN code II VC generation VCgen VCgen procedure SE cnf wpc depict VCgen cnf others however VCgen SE wpc procedure SE performs wpc wpc performs SE although VC generation approach highly affected presence conditional statement primary difference VCgen SE logical encode statement along correspond VC creates multiple logical encode statement multiple vcs statement therefore procedure execution comprise multiple statement logical encode VCgen procedure CC IM RH BS contrast wpc VC generation computation weak precondition postcondition backward direction primarily affected statement define attribute variable postcondition sql statement define statement influential involve clause therefore procedure define statement VCgen wpc IM RM CS etc variation VCgen PL sql code identify influence statement operational complexity VCgen computation PL sql code SE cnf wpc approach DSAGEN minor equation statement classification SE cnf conditional statement medium category whereas wpc considers assert conditional statement category although computation cnf wpc differs SE account various code define variation VCgen procedure SE cnf wpc depict respectively vcs vcs SE technique execution exist code depends nest structure presence conditional statement without nest code yield maximum whereas balance nest yield minimum code therefore conditional statement code hence vcs within interval generate vcs allowable depict IV execution  built smt solver validate generate formula procedure deductive approach depict execution vcs generate cnf others however SE wpc depends vcs generate SE versus VC generate wpc elect efficient verification algorithm evaluate deductive verification algorithm goal efficient suitable algorithm address analyze theoretical practical perspective already program conditional statement exist execution therefore SE algorithm vcs contrast cnf algorithm avoids enumeration transform procedure cnf assume program contains conditional statement nest depth cnf algorithm generates VC wpc algorithm generates VC ing weak precondition generate postcondition along code exhibit exponential VC program conditional statement analysis empirical cnf VC generation theoretical analysis however SE wpc although influence conditional statement VCgen varies due presence statement already mention SE performs enumeration account statement multiple VC generation statement multiple consumes significant amount varies upon VC generation wpc effectively depends computation weak precondition postconditions consumes considerable amount increase postcondition involves attribute variable exist statement define attribute variable although empirical quantify factor exactly conclude program define statement execution VCgen SE wpc observation drawn execution depict vcs generate cnf execution vcs generate SE wpc however execution SE wpc due presence multiple vcs repetition logical encode validity checked individually exception namely IM RM VC generate wpc vcs generate SE happens due presence attribute postcondition sql statement define attribute wpc dsa conversion becomes factor overall verification depict analysis easily judge cnf efficient verification algorithm however decision SE wpc depends program structure postcondition statement involve program threat validity discus threat external validity generalization finding propose VC generation technique applicable database application relational database focus verify correctness database expressive assertion although express database failure involve referential integrity database notably theoretical formalism abstract syntax database embed within imperative host although considers host imperative dynamic memory data structure float pointer etc engineering without affect propose technique besides abstract syntax database extension capture crucial feature popular structure database mysql oracle DB microsoft sql server postgresql etc data manipulation operation mention propose approach verification dynamically generate database statement application developed DBverify currently loop PL sql extend loop highlight database management embed within popular host python java etc release latter effort modify parser processing module DBverify accord concrete syntax concurrent database transaction transaction interleave concrete program threat mitigate proposal static identification permutation database statement transaction incur exponential computation discus threat internal validity refer experimental bias error annotate benchmark PL sql procedure assertion already underlie database definition chosen practical relevance procedure behavior aim relational database report  proposal crucial sql feature aggregate function treat abstraction false positive experimental reveal cnf efficient verification algorithm however decision SE wpc depends program structure postcondition statement involve program related theorem deductive model algorithmic verification algebra category technique formally verify hardware software theorem model approach complementary strength weakness combination promise enhance capability algebra constitutes framework formal verification data emphasis execute concurrently decade numerous proposal mention propose literature verification purpose program address various feature variable structure pointer etc addition database researcher significant verify database application theorem model apart proposal equivalence schema refactoring synthesis author propose approach verification web application embed sql translation embed sql script  function computation verification  function weak precondition purpose verify integrity constraint define underlie database limited expressibility  aggregate function arithmetic operation integrity constraint verification orient database program propose   constraint cannot violate postcondition precondition precondition postcondition propose approach computes verification weak precondition postcondition computation author   propose integrity constraint verification database application transformation operator propose approach express update operation predicate denotes sequence constant integrity constraint define constraint theory function translates constraint theory weak precondition respect update simplify formula obtain apply function  resultant formula execute query return empty database consistent otherwise return tuple hint extend update restore consistency verification database integrity constraint refinement propose propose sql schema stateful module sequence definition predicate definition function signature user transaction functional verification integrity constraint generate verification sql code automatic theorem prover unfortunately syntax sql propose nest query aggregate function memory relational database management RDBMS fully verify coq propose author mainly verify RDBMS correctly executes query denotational semantics sql relation verification functional correctness database driven application model propose  author introduces allows user specify functional correctness LTL formula verify database driven application functional author verification monadic model underlie database update insertion deletion decidability obtain recency bound artifact recently introduce retain data theoretical approach verification database driven propose author symbolic model via model completion equivalently via distribute temporal logic obtain verification model propose   correctness verification service composition multi compute environment qos factor motivation  pinto   pinto  author detail approach namely symbolic execution conditional normal weak precondition generate vcs imperative extension latter approach database application conclusion contributes towards verification database application propose comprehensive technique generate verification database program respect literature propose approach ability crucial sql feature along embed host imperative verification database introduce DBverify verification implement python theoretical foundation enables user verify PL sql procedure approach detailed performance analysis experimental benchmark PL sql code demonstrates effectiveness approach various circumstance notably performance cnf algorithm approach PL sql code chosen experimental benchmark procedure satisfy annotate database procedure violate annotate primary latter acceptance runtime input sql statement without credit authorship contribution statement   conceptualization methodology prototype development benchmark code preparation revise draft preparation validation   conceptualization supervision review edit validation   pinto supervision review validation appendix proof lemma logical encode execution program dsa program statement program logical encode compute function function interpretation implies proof proof establish structural induction assume satisfies interpretation assignment statement obtain substitute occurrence involve semantics therefore due dsa affected combine database statement database statement involves action cond treat guard command equivalent dsa database statement definition function lemma database action assume definition function involve due dsa possibility former action semantics therefore latter attribute substitute respectively affected therefore hence combine assume definition function involve due dsa accord action semantics therefore however accord action tuple correspond attribute insert database affected therefore hence combine assume definition function involve due dsa previous possibility former latter tuples satisfy remove database therefore accord function direction easily consideration affected application variable involve theorem annotate program assert verification valid satisfies vice versa proof proof structural induction recall definition assignment accord definition assume therefore accord transition semantics assume occurrence replace accord assume accord definition assume therefore accord semantics function assume update tuples satisfy assignment statement remain unchanged tuples satisfy combine lemma assume accord definition exist tuples remain unchanged therefore newly insert tuple assume combine lemma accord definition assume therefore tuples remain intact database delete action satisfy therefore assume lemma statement affect database attribute easily involve database attribute