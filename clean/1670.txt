exist technique automatic code comment assume code snippet comment identify user code snippet advance smarter comment approach desire comment source code generate comment code snippet comment achieve goal propose novel CommtPst automatically appropriate comment source code comment closely related code syntax semantics adopt neural model embeddings capture code semantic information analyze abstract syntax capture code syntactic information employ lstm memory model logical dependency code statement fuse semantic syntactic information comment code sequence evaluate CommtPst data dozen source software github experimental precision recall achieve CommtPst respectively outperforms traditional machine improvement previous keywords comment lstm code syntax code semantics comment generation introduction code comment integral software development standard comment improve software maintainability developer understand source code obviously quality code comment important role software activity code review program comprehension owe importance code comment researcher paid attention automatic comment generation technique automatically generate code comment software entity code snippet technique comment generation hypothesis comment user identify code snippet comment unfortunately assumption limit exist comment generation approach handle scenario source code generate comment suitable inside core code snippet precisely scenario code snippet comment become uncertain comment predefined therefore smarter comment approach desire comment source code generate comment code snippet inside developer forget comment cod previous programmer average program via online questionnaire programmer forget comment program programmer occasionally forget comment programmer rarely forget comment therefore remind programmer comment appropriate gap propose novel approach CommtPst identify suitable comment source code worth due complex logic source code automatically identify appropriate comment source code challenge comment code statement tightly couple code statement couple correlation variable arr comment code statement couple code statement couple correlation implement initialization comment code statement identify comment via simply code couple correlation information typical comment comment statement variable definition comment multi loop code snippet comment understand image KB image address challenge employ lstm memory model logical dependency code statement syntactic semantic perspective code syntactic information relationship code statement syntax couple relation etc code semantic information semantics distribution source code syntactic semantic information reflect logical correlation code statement capture logical correlation code statement syntactic information code statement unified syntax  multiple code statement syntax probably achieve behavior code statement correlative analogously semantic information logical correlation code statement multiple code statement variable arr lstm model explicit indirect hidden logical correlation code statement syntactic semantic information comment code sequence training CommtPst effectively comment source code evaluate CommtPst datasets github achieve precision outperforms baseline contributes CommtPst remind suitable comment generate code comment lstm introduce model logical correlation code statement comment source code comprehensive evaluation demonstrate feasibility effectiveness comment prediction facilitate research application CommtPst dataset available http github com   organize overview describes project data collection describes feature extraction introduces propose lstm model setup describes analysis experimental discussion discus related discus threat validity summarizes approach outline direction future overview propose approach approach phase model training phase prediction phase model training phase goal prediction model source code comment prediction phase discriminant model comment source code image KB image overview approach analyzes source code comment identifies comment instance source code code corresponds label label correspond comment uncommented approach analyzes source code comment uncommented code statement approach extract feature code feature various quantifiable characteristic code statement potentially differentiate code statement comment preserve feature code syntactic feature code semantic feature lstm algorithm leverage feature expressive code syntactic semantic feature construct unified vector representation training construct feature extraction fusion approach prediction model training prediction model construct prediction phase predict code statement comment entire code statement input prediction model code extract syntactic semantic feature model building phase input feature prediction model output prediction label correspond code statement comment uncommented comment code statement source code comment project data collection introduce project data collection project investigate source software project github ant antlr ArgoUML  jdt JHotDraw JabRef jfreechart lucene  project contains code statement java summarizes information software project software project   code comment ant antlr ArgoUML  jdt JHotDraw JabRef jfreechart lucene  chose project firstly owe source availability popularity java project various research software engineering secondly project affiliate  organization software apache ibm comment source code likely standardize although content comment project date focus comment source code namely comment date comment source code data collection comment source code header comment javadoc comment internal comment header comment declaration comment internal comment associate code statement usually precedes associate code statement comment locates code statement code statement comment header comment declaration predict therefore CommtPst predict comment internal comment image KB image comment CommtPst approach data positive negative instance source code target project specifically code internal comment precede internal comment code label comment otherwise label uncommented code statement comment label correspond positive instance uncommented label correspond negative instance regard internal comment coverage positive instance comment source code approach model logical relation code comment label context code statement identify comment source code however comment code statement training invalid comment instance correspond incorrect comment decision eliminate invalid comment instance series preprocessing apply comment code statement invalid comment instance concern code statement comment obj  null occurs code code abandon code developer invalid comment instance concern comment automatically generate auto generate auto generate comment identify keywords auto generate eliminate comment code statement static analysis identify specifically comment remove comment notation ast parser parse comment comment parse syntactic token  comment identify comment code evaluate effectiveness conduct randomly comment comment code detect comment code correctly keyword detect correctly code feature source code lstm model extract feature code sequence feature code extract code syntactic semantic feature code detailed feature extraction described code syntax preserve assume developer comment source code closely related syntax source code developer tend comment logically independent code snippet code logic reflect code syntactical information capture code syntactical information analyze program ast ast syntactical structure source code depict relationship component code hierarchical user eclipse jdt extract abstract syntax code code syntax subdivide denote syntactic token     etc parse syntactic structure code statement source code abstract syntax syntactic token abstract syntax source code via parse abstract syntax syntactic token involve code code tokenizing token   source code syntactic token involve code worth code multiple syntactic token code   null contains syntactic token     apply syntax analysis source code code obtain syntax token accord code statement syntax token consist syntactical corpus capture relationship comment code syntactical information model training image KB image code tokenizing code semantics preserve besides syntactical information code semantics preserve predict comment source code source code compose identifier wealth code semantics code semantics effectively software traceability recovery linkable knowledge mining api mining bug report retrieval driven encourage extract semantic information characterize comment code semantics extract text source code obviously text source code positive role preserve code semantics text weaken code semantic therefore series preprocessing apply split camel  filter stopwords source code etc filter etc reduce amount vocabulary entire corpus apply stem segmentation technique textual english tense tense future tense perfect tense transform tense feature fusion subsequent algorithm numeric vector input syntactical semantic feature mapped achieve mapping built link syntax token textual numeric vector specifically apply wordvec continuous skip gram model convert syntax token textual vector representation syntax information express syntax token semantic information express textual directly fuse feature express inspire address issue project syntax token textual meaning vector representation unified corpus contains comment apis representation apis task similarly unified corpus contains syntax token textual specifically code statement randomly shuffle syntax token textual shuffle corpus regard shuffle strategy shuffle syntax token textual code   null shuffle fix location syntax token textual obtain randomly collocation obtain vector representation continuous skip gram model embed central entire corpus embed intermediate continuous skip gram model continuous skip gram effective predict surround context generally objective function skip gram model aim maximize sum probability surround context central denote central context respectively context denotes sequence conditional probability define softmax function input output vector underlie neural model vocabulary intuitively estimate normalize probability context central vocabulary employ negative sample compute probability image KB image shuffle strategy syntax token textual apply wordvec syntax token textual corpus associate vector representation obtain semantic information code statement syntax token textual correspond vector representation syntax token textual wordvector model transform fix vector however code syntax token textual fix vector code simply vector code address challenge transform code statement vector representation average vector syntax token textual vector statement contains proven effective vector structural semantic information leveraged propose network obtain representation capable distinguish comment source code lstm architecture source code regard sequential data hence rnn network model comment source code via code syntactic semantic information predict comment source code prominent drawback standard rnn model network degrades dependency exist sequence due phenomenon explode vanish gradient propagation researcher propose variant mechanic preserve dependency memory lstm lstm repeatedly apply semantic relatedness task achieve convincing performance context information source code useful predict comment normal lstm sequence direction obtain correlation surround code statement statement bidirectional lstm lstm purpose illustrates typical lstm retain memory gate mechanism lstm remembers information erase forget gate lstm handle dependency effectively activation backward chain stack output linear output layer backward activation bias vector image KB image lstm architecture lstm network compute comment probability code statement context code syntactic semantic information training objective minimize entropy error label predict label code statement vector dimension optimization adam update algorithm kingma network parameter network predict comment source code image KB image architecture propose lstm setup evaluate predict comment approach described objective ass accuracy predict comment reference comment RQ accuracy CommtPst predict comment RQ impact structural semantic feature accuracy RQ code amount affect accuracy CommtPst RQ comment per affect accuracy CommtPst RQ evaluate lstm model model standard rnn lstm representation bow subsection RQ evaluate impact code structural semantic feature prediction accuracy respectively RQ RQ evaluate code comment dataset affect accuracy CommtPst data selection hyper parameter setup intuitively shorter internal comment conduct quantitative analysis analyze relationship comment rate axis code axis proportion involve internal comment comment increase percentage comment increase significantly meaning shorter likely comment code quarter comment chose threshold filter code datasets predict comment randomly data zero tag dataset data training validation approximately  amount ant antlr ArgoUML  jdt JHotDraw JabRef jfreechart lucene  image KB image comment rate code datasets lstm network variable input accord statistic code datasets lstm network snippet code zero vector snippet code truncate extra code training model batch hidden layer input layer output layer respectively hidden layer evaluation criterion evaluate effectiveness CommtPst instance label positive CommtPst instance positive precision prc recall rec compute respectively TP positive positive instance correctly categorize FP false positive positive instance incorrectly categorize TN negative negative instance correctly categorize FN false negative negative instance incorrectly categorize therefore precision percentage positive instance identify CommtPst actually positive instance recall percentage positive instance successfully retrieve CommtPst harmonic precision recall comprehensive indicator combine precision recall analysis experimental discus precision recall comment generation important comment incorrect comment information unnecessary comment degrades quality code comment waste computational resource remind programmer comment incorrect comment prompt interfere programmer normal increase workload contrary intention therefore accuracy important recall research RQ prediction accuracy previous propose traditional machine  predict comment comment closely related context information source code traditional predicts comment extract code context feature author manually structural context feature syntactic context feature semantic context feature however manually feature sufficient inaccurate model therefore  performance within project scenario perform project scenario developer project comment style comment prediction model traditional machine automatically model relationship code context information comment comparison rnn accuracy rate recall rate prediction traditional experimental CommtPst    CommtPst understand importance wordvector performance wordvector representation technique bow apply bow source code source code preprocessed corpus snippet denote vector reflect snippet idf understand importance lstm performance model rnn lstm rnn processing sequential data source code rnn parameter across sequential data arbitrary concern CommtPst accurately identify comment source code focus performance CommtPst positive instance summary prc rec positive instance combination algorithm representation technique rnn bow lstm bow almost performance meanwhile rnn wordvector recall precision lstm wordvector significant difference overall performance lstm algorithm equivalent rnn algorithm evaluation  rnn bow lstm bow lstm bow rnn wordvector lstm wordvector lstm wordvector lstm bow precision recall lstm bow meanwhile lstm wordvector recall precision lstm wordvector lstm wordvector outperforms lstm wordvector overall lstm algorithm outperforms lstm algorithm significantly suggests lstm algorithm improve performance comment prediction traditional rnn lstm algorithm due backward layer lstm reinforces association relationship code comment identify comment source code rnn bow precision recall rnn wordvector performance lstm wordvector lstm bow precision recall lstm bow precision recall lstm wordvector summary wordvector outperforms bow margin suggests semantics encode bag comment source code contrast wordvector individual dense dimensional vector dimension latent semantic syntactic feature wordvector suitable comment prediction effectiveness conduct multiple random partition datasets maintain performance random partition datasets affect performance multiple random partition data  summary lstm combine wordvector accuracy comment prediction consistency lstm wordvector default combination RQ feature choice furthermore evaluate code feature syntactic feature semantic feature prediction accuracy metric obtain lstm algorithm combine wordvector training RQ difference generate syntactic feature vector dataset evaluate syntactic feature similarly evaluate semantic feature generate semantic feature vector dataset feature choice  syntactic semantic syntactic semantic generally feature useful apply syntactic feature model CommtPst achieves precision recall apply semantic feature average prc exhibit obvious improvement increase respectively growth prc reveal syntactic context feature extract source code indication comment source code lastly combine syntactic semantic feature model average prc rec increase considerably effective fusion feature enables model comment source code prediction accuracy continuous increase feature model continuous accuracy increase confirm feature useful characterize logical dependency code statement perspective code comment fix vector code statement transform code statement vector representation average vector syntax token textual vector statement contains summation vector maximum max pool maximum vector comparison average performs maximum significantly average summation evaluation criterion maximum positional relationship code statement dimensional vector vector fusion approach  summation maximum average RQ code amount examine impact CommtPst comment subset code statement code account hence mainly focus performance CommtPst code code statement statistic code statement prc rec apply CommtPst datasets code variation code affect performance CommtPst code impact limited summary CommtPst robustness datasets snippet code statement demonstrates effectiveness CommtPst apply lstm network model logical relationship code statement depends memory ability lstm code statement increase lstm dependency code statement via code syntactic semantic information identify comment code sequence CommtPst performs fluctuate stable accuracy datasets code statement RQ comment amount snippet involve comment comment evaluate CommtPst apply datasets involve comment classify subset accord comment amount comment involve comment account hence mainly focus performance CommtPst comment prc rec apply CommtPst datasets involve comment comment increase prc achieve CommtPst upward trend rec stability trend achieve CommtPst significant variation comment amount therefore CommtPst performs robustness datasets snippet involve comment variation image KB image comment amount performance CommtPst discussion FN FN FN FN recall CommtPst achieve false negative instance CommtPst identifies uncommented comment verify false negative instance really comment qualitatively analyze false negative instance developer developer comment randomly false negative instance identify CommtPst programmer false negative instance really comment meanwhile programmer agrees comment false negative instance participant professional developer report software development average participant declare comment frequently mainly comprehend code others addition participant report comment frequently programmer accomplish validation independently consensus false negative instance comment namely programmer comment false negative instance comment instance developer forgot CommtPst acquires correspond comment exist dataset identifies comment presume rate fully comment recommendation consistent FN instance detect TP instance actually formula calculate accuracy recall estimate experimental FN correction  CommtPst FN performance improve mainly programmer comment false negative instance complex code logic programmer code understand comment code style programmer code statement style cannot explain comment therefore due complex code logic style code understood code reader future CommtPst remind programmer comment opportunity program generate comment useful code reader understand cod decision detail programmer image KB image FN denotes false negative instance shuffle strategy VS shuffle strategy effectiveness shuffle strategy conduct comparison shuffle strategy randomly shuffle syntax token textual code statement shuffle corpus comparison another corpus firstly syntax token code statement textual code statement shuffle strategy conduct comparison comment prediction apply shuffle strategy shuffle strategy CommtPst shuffle strategy performs shuffle strategy embed relationship syntax token textual occurrence shuffle syntax token textual shuffle strategy embed maybe hardly overall relationship syntax token textual fix meaning syntax token textual capture shuffle corpus embed effective reveal overall relationship syntax token textual fix embed shuffle strategy easy express syntax token textual meaning experimental shuffle shuffle strategy  shuffle strategy shuffle strategy related CommtPst identifies comment model code logical relationship via algorithm related research source code comment apply source code analysis source code comment quality code comment wealth information useful program comprehension software maintenance code comment mainly focus comment quality evaluation code comment generation recently researcher focus attention code comment quality evaluation propose relevant evaluation metric knowledge research evaluate code comment quality report   garcía alvarez evaluate code comment quality assess proportion code comment software however evaluation metric crude redundant comment copyright comment employ decision categorize code comment ass quality code comment metric usefulness completeness propose  evaluate quality code comment  assess code comment quality series heuristic algorithm association code comment comment comment quality evaluation analyze exist code comment evaluate quality although comment quality evaluation monitor code comment quality guidance comment quality improvement therefore improve quality source code comment another comment concern code comment generation propose novel automatically generate code comment mining data stackoverflow meanwhile apply code clone detection technique discover code software repository exist comment code addition novel technique automatically generate descriptive comment java furthermore technique automatically generate readable comment java lstm model code comment automatic generation code snippet convolutional neural network generate text description code snippet structural semantic information abstract syntax convert sequence information machine translation model translate code comment code api information consideration improves accuracy code comment generation exist comment auto generation summary focus comment inside exist become inapplicable comment predict comment source code becomes machine approach automatically exist instance thereby reduce amount decision previous traditional machine approach comment code comment instance predict comment code apply source code analysis development technology researcher apply source code analysis abstract syntax convolutional neural network network perform convolution operation abstract syntax program operation structural information program salient introduce algorithm syntactic semantic information code clone detection contrast traditional technique transform abstract syntax binary extract syntactic information program integrate domain knowledge traceability link recovery propose trace network architecture utilized embed recurrent neural network model generate trace link apply approach rnn encoder decoder generate api usage sequence api related query addition propose neural network  code learns  vector representation source code query code snippet semantically related query retrieve accord vector addition convolutional neural network predict semantically linkable knowledge developer online forum adopt neural model convolutional neural network capture document semantics knowledge detect security vulnerability software lstm network feature generalize across project approach implement vulnerable function prediction project scenario meanwhile employ algorithm automatically mapping program semantics software defect approach belief network automatically semantic feature token vector extract program abstract syntax propose source code representation   unlike exist model ast  ast series statement encodes statement vector capture lexical syntax knowledge statement solves dependence ASTs combine code analysis inspiration combine semantic information syntactic information code rnn context information source code etc threat validity focus threat affect threat validity suitability evaluation conventional evaluate effectiveness propose approach issue model binary classification comment uncommented code statement introduce precision prc recall rec evaluate effectiveness CommtPst meanwhile performance CommtPst model representation technique metric evaluate effectiveness CommtPst threat suitability evaluation another threat validity generalizability CommtPst identify comment source code source code java apply approach project program python etc code syntax pointer operation carefully handle extract code syntax future investigation analyze project program mitigate threat threat validity quality comment data collection project characteristic evolutionary active update developed non profit organization restrict inevitable project quality comment although filter mechanism propose future investigation comment quality project mitigate threat conclusion future code comment important role program comprehension software maintenance proposes novel CommtPst identify suitable comment source code comment source code extract feature syntactic feature semantic feature technique apply comment feature experimental demonstrate feasibility effectiveness CommtPst future complementarity CommtPst approach automatically comment code snippet combination smarter comment approach comment source code generate comment code snippet inside obviously combination CommtPst important role