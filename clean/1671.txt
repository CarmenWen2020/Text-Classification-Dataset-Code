concept affirm refactoring sar introduce explore developer document refactoring activity commit message developer explicit documentation refactoring operation intentionally introduce code previous manually identify refactoring define quality improvement category internal quality attribute external quality attribute code refactoring related commits however approach heavily depends manual inspection commit message propose approach identify commit describes developer related refactoring classify accord refactoring quality improvement category specifically combine gram TF idf feature selection binary multiclass classifier model automate classification refactorings quality improvement category challenge model commit message extract engineer source java project finding model accurately classify sar commits outperform random classifier approach discovery relevant sar model relatively training dataset previous keywords refactoring affirm refactoring commit classification machine introduction role refactoring simply improve internal structure code without alter external behavior driver agile methodology become reduce technical debt accord recent survey research refactoring focus automate recommend candidate code refactored refactoring operation apply recent fully automate technique  indeed minimize disturbance exist perform refactorings developer typically recognize preserve semantics expense significantly improve therefore developer centric approach detect developer refactor code document refactoring strategy detection refactoring operation documentation allows understand code evolution challenge trigger refactoring reduction code proneness error facilitation api migration etc automate detection refactoring operation apply source code advanced recently accuracy critical deeper analysis refactoring activity document context recent introduce taxonomy developer actually document refactoring strategy commit message documentation admit affirm refactoring document refactoring similarly code documentation useful decipher rationale apply future developer various engineering task program comprehension reverse engineering debug however detection refactoring documentation hardly manual limited automate detection documentation activity acceptable accuracy indeed automate detection refactoring documentation various application actionable insight software practitioner researcher empirical around developer perception refactoring developer structural metric code refactoring code factor influence non functional furthermore previous intention application refactoring classify improve internal structural metric cohesion encapsulation remove code god code optimize external quality attribute testability readability systematic classify refactoring related message estimate distribution refactoring effort category cope mention limitation aim automate detection classification refactoring documentation commit message objective analyze feasibility performance apply technique identify classify refactoring documentation commit message however detection refactoring documentation challenge besides inherit ambiguity distinguish meaning text recent developer misuse refactoring documentation  reliance keyword alone cope challenge harvest potential taxonomy document refactoring activity taxonomy typically threaten potential false positiveness sample therefore develop baseline code refactoring activity analyze commit message ensure textual refactoring reduce false positive contribution approach firstly distinguishes commit message potentially contains explicit description refactoring effort secondly classifies category identify previous knowledge attempt automate detection classification affirm refactorings evaluate performance approach keyword approach relies message refactoring keywords finding model outperforms keyword approach accurately identifies refactoring related commits average accuracy furthermore infer feature keywords relevant detection refactoring documentation extract extend refactoring documentation identify previous deploy model lightweight web service publicly available software engineer practitioner publicly dataset truth replication extension purpose structure explain notion refactoring documentation affirm refactoring review exist related commit message classification detail classification methodology precisely elaborate data collection preprocessing choice classification algorithm evaluate approach report comparative various classifier extract previous identify influential feature report threat validity conclude future affirm refactoring definition commit message atomic description code augments machine readable meaning interested automatically detect developer documentation refactoring activity commit message refactoring documentation textual description developer considers refactoring perform code intentionally document refactoring activity affirm refactoring sar sar compose terminology consistently refactoring related commit message commit message refactor   extract code readable developer explicitly mention intention refactoring keyword refactor along extra information related refactoring activity developer report refactoring operation perform extract code involve refactoring operation   intent refactoring code readable message label affirm refactoring sar totally partially document refactoring perform source code affirm refactoring sar refactor remove cod mov improve consistency modularize code split remove unused code cosmetic fix code code  remove dependency  replace enhance code  maintenance easy simplify internal extract code cleanup package structure  minor simplification safer  reorganize project structure code improvement chang code maintenance refactoring minor enhancement  remove redundant code rid unused code  clearer fix convention extend refactor code fix module structure  code code optimization  delete stuff fix flaw  code revision nonfunctional code cleanup  fix technical debt improve code quality  fix quality issue fix code improv antipattern performance code minor structural avoid future confusion  unnecessary code easily extend  code  reorder polish code rework  code format structure unused file away  simplify code redundancy cosmetic redesign quality factor inlined unnecessary cleanup improvement code cleanse  rename consistency fix quality flaw  refactoring towards  analysis simplify code manual inspection message correspond commit reveals extract  belongs  along rename parameter consistent update documentation background explain rationale refactoring improve code readability operation perform code involve category previous manually analyze commit message extract relevant textual sar sar identify across source project demonstrates refactoring research typically focus detection refactoring opportunity source code recommend appropriate operation particularly interested extract intent refactoring capture typically trigger developer refactor code intent generic keywords code cleanup code revision code  reorder etc specific keywords concept recommend refactoring ensure correctness data conduct pilot sample data explore understand challenge classify commit message pilot define sar category internal external code developer typically structural complexity orient metric couple composition etc metric driver refactoring technique literature internal quality attribute developer mention correction management program refactoring code anti defect code resolution removal defect violate fundamental software principle decrease code quality code duplicate code code blob etc finally extract intent correspond literature considers external quality attribute external quality attribute feature indicates effectiveness understandability readability refactoring approach driven optimization non functional attribute testability understandability changeability evolvability readability identify sar per category depict category namely internal quality attribute code external quality attribute exist refactoring technique identify refactoring opportunity source code recommend pure canal refactorings behavior preserve code purpose improve software quality depicts classification cluster exist refactoring taxonomy report literature classification majority category quality issue quality attribute code extract sar commits internal   inheritance functionality duplicate code abstraction performance code complexity compatibility data composition readability couple stability switch statement encapsulation usability lazy flexibility parameter polymorphism extensibility primitive  cohesion efficiency feature envy accuracy blob accessibility blob operation robustness testability correctness scalability configurability simplicity reusability reliability modularity maintainability traceability interoperability fault tolerance repeatability understandability effectiveness productivity modifiability reproducibility adaptability manageability important exist along manual analysis refactoring interleave development task update functionality bug fix etc category bug fix functional etc classification perform previous recently  capture additional refactoring category bug fix feature future extend capture taxonomy worth analyze impact refactoring code internal quality attribute external quality attribute focus developer documentation refactoring operation impact aim classify intent classify message removal duplicate code code classify purely developer intent remove duplicate code perform refactoring operation impact removal code refactoring operation impact internal quality attribute analysis achieve simply classify developer intent impact refactoring operation impact refactoring operation heavily literature complement effort expose developer refactor image KB image refactoring motivation finally accord recently publish survey refactoring typically driven intent belong category benefit commit message essential comprehend code aspect software development classification maintenance effort code summarization file proneness bug proneness etc instance recent feasibility extract insight software quality developer inline documentation instance mining developer comment unveiled developer  commit code incomplete temporary faulty phenomenon admit technical debt SATD similarly previous introduce affirm refactoring sar define developer explicit documentation refactoring operation intentionally introduce code per analogy SATD sar manifest positive phenomenon primary concept manage technical debt understand developer intent refactoring code adequate corrective action SATD resolution recent focus understand SATD remove refactoring documentation reveal intent frequently developer refactor importance community recent survey refactoring developer manually refactoring code narrow scope refactoring towards developer relevant bridge gap refactoring adoption however identification sar intensive subjective error prone cop burden manual analysis goal detect classify sar mention category furthermore automate identification sar straightforward keywords necessarily exclusive refactoring refactoring intuitive keyword activity context refactoring code review merge code however developer perceive review refactoring code review refactoring definition intend alter behavior improve structure review code research investigate documentation refactoring facilitate review identification sar document refactorings future investigation analysis related report related developer perception refactoring documentation along related commit message classification refactoring documentation focus recently identification detection refactoring activity software cycle approach identify refactoring activity analyze commit message versioned repository  spinellis stem refactor refactoring refactored identify refactoring related commits  keyword approach detect refactoring activity program version identify transformation contains refactoring author identify refactorings keywords detect commit message focus approach refactor  unused  import remove replace split  rename later murphy replicate  source  keywords conclude commit message version unreliable indicator refactoring activity due developer consistently document refactoring activity commit message another evaluate approach namely manual analysis commit message dynamic analysis  approach analyze refactorings source repository behavioral preservation author manual analysis achieves comparative reliable approach detect behavior preserve transformation another survey professional software engineer microsoft investigate refactoring identify refactoring developer keywords usually refactoring commit message survey developer mention keywords refactoring activity refactoring related keywords identify survey refactor rewrite restructure redesign extract improve split reorganize rename commit message identify refactoring commits version approach commits keywords commits refactoring related keywords investigate package identifier evolve evolution document commit correspond message analyze surround refactoring operation author influence extend situation rename apply identifier data author indicates potential behavior associate identifier prior explore developer document refactoring activity commit message activity admit refactoring affirm refactoring sar sar indicates developer explicit documentation refactoring operation intentionally introduce code existence unlocks developer perception quality attribute couple complexity typically recommend refactoring instance identify quality model developer vision quality optimization explicitly mention commit message refactor improve quality attribute although variety structural metric internal quality attribute developer improvement source code empirical investigation metric associate quality attribute improvement degradation software quality characteristic commit classification      mockus     maintenance request participant accuracy    commits participant accuracy administrative  lanza     reengineering corrective engineering management hassan    commits participant agreement maintenance feature introduction     mention feature addition non functional     SMO  feature     non functional         decision vector   operating svm clr homer     commits participant precision        extension backward compatibility abstraction refinement      lanza category non functional    commits participant          manual canal refactoring    apart sample manual canal refactoring levin     GBM RF  levin     GBM RF      svm GBM   lda mda NN  RF naive bayes logitboost    non  RF GBM  svm commits accuracy internal QALD svm NN APM  external QA commits multiclass accuracy code  commit classification variety approach categorize commits literature approach perform manual classification develop automatic classifier machine technique develop discriminative topic model classify software summarize approach  lanza developed lightweight manually classify keyword retrieve development maintenance activity engineering engineering corrective engineering management activity address multi category manually classification scheme exist literature conduct multidimensional empirical refactorings perform systematic label commit message understand purpose apply refactorings apply thematic analysis reveal actual motivation refactoring instance developer response propose classification refactoring instance canal floss refactoring manual inspection discriminative topic model technique automatically classify software mockus  automatic classification algorithm classify maintenance activity textual description another automatic classifier propose hassan classify commit message bug fix introduction feature maintenance developed eclipse plug  classify message  category corrective adaptive perfective additional category blacklist automatically assess software due bug fix refactoring keywords message perform manual classification commits understand rationale commits later propose automate technique classify commits maintenance category machine technique define classification schema extend  categorization additional feature addition non functional classifier another classifies conduct classification commits involves non functional requirement NFRs commit address commit possibly assign multiple NFRs learner purpose along machine learner extend  categorization hierarchically however classifier naive bayes classification code transaction moreover maintenance request classify machine technique naive bayesian decision explore popular learner categorize software application maintenance svm perform machine learner categorization others levin  automatically classify commits maintenance activity classification model namely gradient boost machine GBM random RF RF model outperforms model accuracy versus extend RF model promising accuracy recently replicate levin  introduce code density commit purpose code density classification achieve accuracy project commit classification logitboost classifier technique leverage automate identification classification sars although manual summarization sar useful consume task manual effort derive although automatically classify commits currently automatic identify sar specifically automatically classify message  maintenance category corrective adaptive perfective refactoring classify sub perfective maintenance category currently report specific subcategories refactoring extract scenario commit message performs automate classification sar commits therefore affirm refactoring research introduce automatic classification approach commit contains sar classify sar category approach automate approach identify sar complement extend identify detect indicator refactoring understand developer document refactoring label refactoring operation instead label commit message refactoring operation existence refactoring operation commits verify refactoring miner  achieves accuracy precision recall respectively confidence validation commits refactoring commit message extensively exist literature classify maintenance related task focus classify bug feature request commit message primary source information generate accuracy applicable however approach restrict specific source textual information future replicate approach metadata issue description approach data collection commits refer exist dataset link github repository perform initial filter reaper navigate engineer project verify java refactoring miner author dataset classify engineer software project project software engineering documentation project management reduce project engineer document interchangeably although acknowledge potential diverse project finding extend project document primary research rely documentation chose focus project likely quality documentation commit message consistently available refactoring detection extract entire refactoring project popular refactoring mining refactoring miner choice refactoring miner justified achieve accuracy detect refactorings available precision recall along suitable automation data mining phase refactoring operation commits apply overall framework nutshell goal automatically identify classify commit message refactoring documentation affirm refactorings sake simplicity refer sar approach input commit message binary decision contains sar sar detect classifies category internal quality attribute external quality attribute code overall framework approach depict formulate phase approach consists model building phase prediction phase model building phase goal model corpus document refactoring operation commit message prediction phase model previous phase predict category refactoring related commit message framework commit message along truth category obtain manual inspection input training procedure extract project previous input commit message preprocessed informative featurization commit message extract feature structure feature extract feature training commonly classifier evaluate model prediction classifier typically previous commit classification software engineering classification prediction outline training model challenge performance model already vocabulary gram training dataset extract feature data vocabulary input model finally classifier output predict label commit message commit classification classification phase data preparation text cleaning preprocessing feature extraction gram model training building classifier selection model evaluation commit message text approach recent trend text classification technique algorithm data preparation goal classifier sufficient commits category analyze candidate commits classify cannot manually randomly sample subset  feature category imbalanced training dataset starvation adequate instance worsen performance model without sar multiclass internal QA external QA code classification equally distribute data training classification perform author approximate commits review threshold related commit classification commits comparable around commits sample commits project classification model detail manual analysis data classification data preparation building truth challenge commits prune exist dataset commits manually inspect validate refactoring operation associate description commit message intend dataset subset dataset purpose binary multiclass classification instance per   sar instance    instance dataset binary classification commits commits without sar sar randomly sample commits previously sar perform another individual verification author commits agreement author exclude dataset without sar easily randomly commit message simply sar strengthen decision boundary intend commits closest commit sar contiguous commits commit perform committer randomly sample without sar manually verify description refactoring activity multiclass classification chosen commits belong category avoid involve interpretation important description category explicit commit message stratify sample commit message manual classification equally stratum ensure commits report developer intention perform refactoring improve quality attribute fix code inspect commits remove false positive avoid false positive commits apply filter narrow commit message eliminate likely classify affirm refactoring filter ensure algorithm quality commit message exist filter commit message filter commit message blacklist category filter commits underlie modification actually source code modification apply filter heuristic narrow commit message eliminate likely classify sar important remove commit message training commit message information clearly purpose code classifier document commit message label commits information refactorings prior prune commit message classifier criterion filter commit contains alternative refactor factor commit classify sar commit commit message contains slightly simplify code simplify code commit classify sar commit commits ambiguous discard classify commit message solr indexer multiple collection auto configuration  commit belong exclude quality attribute identifier commits exclude  precise issue location  discard commit complexity refer quality attribute mention ambiguous commit message prevent confident hence discard commit message randomly sample another replacement commit message confidently classify random saturate faster others increase instance underrepresented balance criterion reduce commits focus insightful commit message binary classification commits remove ambiguous message evaluation commits commits respectively multiclass classification mitigate risk bias dataset inspect agreement manual classification extract stratify sample dataset classify author sample commits independently classify author particularly levin  inspect manual classification agreement randomly classify sample commits commits multiclass classification respectively quantity roughly equates sample confidence confidence interval cohen kappa coefficient evaluate inter rater agreement categorical achieve agreement classification multiclass classification accord agreement almost perfect agreement classification available reproducibility package reuse extend text cleaning preprocessing data preparation phase apply methodology explain text pre processing commit message classify category preprocessed format classification algorithm remove informative featurization extract feature preprocess text tokenization goal tokenization investigate tokenization text meaningful token tokenize commit splitting text constituent split token package token package lemmatization lemmatization replaces remove lemma lemmatization involves separation identification generate split commit message input text constitute chunk text identification filter feature aid extraction lastly multiple generate removal english etc remove role feature classifier capitalization normalization text diversity capitalization problematic classify commits commit message convert contraction expand removal remove deteriorate classification specifically remove numeric unique duplicate email address URLs performance classifier binary classification performance classifier multiclass classification feature extraction gram cleaning preprocessing text apply feature extraction extract useful information text differentiate classification gram technique feature extraction gram technique occurs text feature text gram semantic isolated keywords improve information however gram commit message refactor remove redundant extract improve usability keyword improve clearly indicates sar commit classification bigram enhance performance text classification fisher filter feature selection  text manage text feature vector function standard frequency inverse document frequency TF idf due popularity research community gram TF idf preprocessed commit message assign compute scheme TF idf frequently document frequently document model training building phase perform fold validation technique ass variability reliability classifier specifically classification combine commit message dataset split dataset fold fold proportion commit message thereafter perform evaluation dataset fold training dataset remain fold dataset aggregate evaluation report average performance classifier classifier selection model evaluation classifier optimal classification commits challenge task developer document commits commit message along commit repository commit message usually generally convey information commit multiclass classification commit message categorize explain respectively predefined category approach relies supervise machine algorithm assign commit message category important optimal classifier satisfactory classifier knn naive bayes multinomial gradient boost machine GBM random RF context commit classification category random RF achieves performance investigate classifier statistical precision recall accuracy classification performance important calculation multiclass classification azure machine azure ML facilitate comparison statistical consistent classification compute multiclass precision recall formula precision recall calculate worth model inherently binary classifier adjust multiclass classification classifier applies strategy issue multiple output ensure fairness strategy multiclass classification classifier gradient boost machine  vector machine svm locally svm LD svm average perceptron APM bayes machine bpm remain classifier logistic regression LR random RF decision   neural network NN conduct microsoft azure machine built web service classification model deployed discussion conduct empirical ass performance approach evaluate commit classification model standard statistical performance classification precision recall accuracy report research replication package comprehensive package available  replicate extend RQ accurately perform multiclass sar classification machine technique previous sar extract commit message however lack automatic technique classify perform automate approach classify sar classification machine technique accuracy comparison classification algorithm report perform model classify dataset finding random RF gradient boost machine GBM respectively clearly competitor classification multiclass addition RF GBM logistic regression LR outperforms model detailed performance multiclass classifier random boost machine belong ensemble machine typically yield superior predictive performance mainly due aggregate learning logistic regression logistic regression achieves comparable performance random boost explain underlie model text data inherent structure logistic regression assumption another observation regard classifier accuracy classifier GBM svm LD svm APM bpm inherently binary classifier strategy adapt multiclass hence classifier accuracy perform binary classification multiclass classification respectively another accuracy identify multiclass label commit message potentially belong multiple category hence machine classifier confuse classify commit message commit message confuse classifier perform multiclass classification respectively commit message contains package synonym  commit message contains code related keywords tend classify code code related commits usually description code optimize commit target improve flexibility phase classify external QA moreover important categorize mainly refactoring documentation reflect overall activity commits hence commit message strictly refactoring code refactoring tends interleave software engineering task fix bug migrate etc therefore important context understand intention application refactoring future research direction image KB image RQ effective machine approach classify sar goal research propose automatic approach classify sar commits effectively outperform classification baseline random classifier selection baseline approach approach silva opt approach identify refactoring commits analyze refactoring activity heavily rely focus classify commit message  category corrective adaptive perfective keyword approach currently evidence approach perform choice random classifier silva assumes detection affirm refactoring random exist apply machine technique context text classification usually evaluate approach classifier approach others keyword approach knowledge considers additional approach random classifier silva keyword random classifier approach research shed classification sar hypothesize algorithm cannot outperform algorithm propose framework chosen baseline investigation baseline technique approach identify sar propose identify recur sar commit message indicator refactoring activity exists commit classify sar calculate standard statistical metric baseline commit message sar non sar commits multiclass classification respectively perform manual inspection identify positive negative false positive false negative positive approach correctly identify sar commits negative commits correctly classify without sar similarly false positive commits classify sar finally false negative commits classify without sar really sar commits compute precision recall baseline random classifier silva random classifier baseline approach rationale random classifier approach accountable significantly comparison random classification precision approach calculate sar commit message project recall commit message classify sar calculation explain previously experimental approach baseline baseline random classifier approach baseline approach improvement comment outperform multiclass respectively approach outperforms random baseline respectively multiclass classification image KB image visualization approach analyze finding deploy model web service validate multiclass model randomly commit message respectively commit message commits commit message commits commits quality attribute identifier manually commit message classify sar commits prediction phase classify non sar accord approach intuitively induce existence feature refactoring activity capture previous indeed feature keywords refactoring activity  code  fix merge cod style issue report previous related refactoring documentation feature complement manually identify sar reveals image KB image comparison statistical approach random classifier    classifier precisionrecallf  multiclass improve multiclass improve image KB image sample identify automatic classification RQ training dataset effectively classify affirm refactoring assess accuracy approach classify sar commits investigate amount training data effectively classify sar approach easily extend dataset sar identification commits approach considerable effort research incrementally training data ass classifier performance randomly stratify sample commits stratum sar non sar commits author combine commits dataset classification equally split dataset fold ensure partition ratio sar non sar commits multiclass classification however stratify sample commits commits restrict minimum commits belonging code category avoid imbalanced training dataset training originally discard commits batch training classification approach fold validation technique fold training data remain target examine impact quantity training data performance classification classifier batch commits silva evaluate performance dataset batch commits maintain ratio sar non sar commits training dataset iteration report average performance fold image KB image achieve incrementally training data classification image KB image achieve incrementally training data multiclass classification reveals identify sar non sar commits overall maintains almost significant improvement accuracy dataset increase obtain commits conclude fold training dataset sufficient identify sar commits achieve fold classify internal QA external QA code commits multiclass slightly increase increase commits training dataset commits conclude achieve performance equivalent commit message respectively significance difference apply mann whitney difference statistically significant image KB image research implication discus spectrum exist implicates research implication practitioner practitioner background related perform refactorings important facilitate code review consensus formally document refactoring activity model various refactoring activity document information valuable criticize document code enforce synchrony refactoring miner detect refactoring source code documentation commit message sanity remind developer information furthermore review heavily relies understand context preform refactoring refactoring impact cannot narrow category author clearly intention reviewer properly ass understand maintenance activity critical practitioner effectively evolution project enhance effectiveness manage technical debt  maintenance related resource therefore plethora perform automatic classification repository artifact bug report issue code commit message purpose approximation maintenance activity security relevant bug proneness bug fix extends exist effort another dimension localization refactoring effort goal estimate maintenance activity manager developer evaluate quality project sensitive anomaly arise cope category software practitioner catalog refactoring documentation concrete document refactoring activity commit message category developer specific refactoring faster generally guideline structure commit message catalog sar encourage developer documentation extend improve refactoring documentation code developer improve quality refactoring documentation trigger explore motivation refactoring category opinion developer important manager developer opinion feeling distribute software development developer document manager intention software engineering centric important manager understand intention report evaluate progress respect goal improve code quality examine developer report activity gain insight improvement moreover refactoring recommendation intention developer fix code recommend refactoring intention refactoring commit message commit message code optimize refactoring recommendation code refactoring recommend narrow scope code fragment developer interested recommender intention exclude completely intention developer recommender  important aspect implication researcher research perspective recent focus automatically identify execution refactoring operation source code purpose automatic detection refactoring understand developer cope software decay extract refactoring strategy associate remove code improve structural measurement however technique analyze source code operation perform without associate textual description infer rationale refactoring application propose model intend bridge gap complement exist effort accurately detect refactorings augment description intend refactoring activity previously developer tend description refactoring activity occasionally mention intention refactoring remove duplicate code improve readability along mention refactoring operation apply migration inline etc model combine detection refactoring operation serf solid background various empirical investigation instance previous analyze impact refactoring operation structural metric limitation absence context related application refactorings developer apply refactoring intention improve metric therefore model consideration commits commit message specifically express refactoring purpose optimize structural metric couple complexity empirical revisit adequate dataset furthermore software practitioner catalog refactoring documentation concrete document refactoring activity commit message catalog sar encourage developer documentation extend improve refactoring documentation code indeed reliable accurate documentation crucial importance software project presence documentation refactoring operation commit aspect software development improves quality focus knowledge transfer developer another important research direction attention concern documentation refactoring shortage refactoring documentation developer typically focus functional update bug patch consensus refactoring document subjective developer specific moreover grain description refactoring consume typical description indication operation perform refactored code hint intention refactoring addition developer specification ambiguous reflect developer understand improve source code reality developer necessarily adequately estimate refactoring impact quality improvement therefore model corpus refactoring description analyze typical syntax developer develop model improve potentially automate exist related code researcher investigate consistency code actual intention explore overlap implication educator educator generation developer engineer document refactoring activity threat validity identify potential threat validity approach construct validity approach heavily depends commit message comment java project perform quality quantity commit message impact finding additionally comment project sar developer document refactoring activity commit message mitigate risk project appropriate analysis another potential threat relates manual classification manual classification training commit message intensive task personal bias mitigate manual classification related error discard ambiguous commits dataset replace commits another important limitation concern dataset training evaluation dataset similarly previous commit classification optimal systematic technique evaluation concern relationship refactoring quality issue goal classify refactoring documentation explore refactoring operation detect refactoring miner related correspond quality issue document developer commit message recent commit message capture classification mixed maintenance activity commit message belong internal quality attribute discus code complexity reduction external quality attribute scalability improvement code explains duplicate code removal investigate significant commits belong explore multi label classification future external validity threat relates commits extract source java project generalize commercially developed project project program another threat concern generalization sar commit message commit sar commits contains sar generalize project outside java developer community additional expression belong sar category although commit message primary source text approach restrict specific source textual information future replicate approach metadata issue description chose focus commit message issue description issue description code detail available refer multiple code span purpose bug fix feature request besides project issue tracker issue tracker guaranteed available additional source information engineer project sword guarantee easy label noisy data approach hinders generalizability project subset project model achieve performance across project mitigate concern project belonging domain shuffle commit message training avoid bias conclusion propose approach identify classify affirm refactoring commit message performance approach random baseline approach accurately classify sar commits accuracy multiclass classification respectively outperform approach achieve commits perform multiclass sar classification respectively indicates relatively training dataset sufficient classify sar commits future applicability approach project developed program domain another potential research direction finding identification detection affirm refactoring commits conduct user industrial partner predict refactoring intention developer ass aligns source code apply refactoring