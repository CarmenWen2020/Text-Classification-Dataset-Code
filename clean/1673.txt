program comprehension fundamental prerequisite software maintenance evolution understand software structure developer codebase documentation available outdated approach tedious consume inefficient recent emerge facilitate program comprehension static graph depict structure software graph however usage graph challenge graph understand limited granularity function introduce coarsen technique multi hierarchical representation graph specifically propose hierarchical cluster approach execution visualize graph granularity software package function overarch goal assist software developer understand software abstraction implementation ability focus individually validate approach conduct user software engineer task survey demonstrate approach feasible automatically construct multi abstraction graph hierarchically cluster meaningful abstraction video demo available http  github codex previous keywords program comprehension static analysis static graph machine hierarchical cluster introduction program comprehension imperative prerequisite software reuse debug maintenance evolution facilitate task understand software implementation developer documentation description software manually understand implementation however software documentation outdated software implementation software evolves increase complexity understand implementation structure becomes challenge consume task manually mapping functionality implementation expensive consume error prone therefore software developer analysis understand gain knowledge implementation technique software developer understand functionality structure graph graph depicts structure function operational invocation graph aim facilitate software comprehension operational analysis task simplify software related activity debug maintenance software graph graph node software package function relationship function graph software developer structure inner connection software examine organize graph reading implementation illustrates graph graph automatically construct visualize codex software evolves complexity increase graph comprehension becomes challenge specifically usage graph program comprehension challenge image KB image instance graph codex node correspondingly highlight metadata visualize panel software evolves graph exponentially grows connection graph harder visualize interpret developer increase overhead program comprehension execution quickly depth subsequently encode introduces efficiency scalability challenge analysis task cluster overcome challenge understand graph data driven approach equip automate facilitate visualize understand graph software approach aim multi hierarchical abstraction graph granularity function package overarch goal facilitate task program comprehension address aforementioned challenge adapt extend technique visualize graph multi graph abstraction hierarchical cluster multi graph abstraction abstract representation package graph graph finally function graph utilizes coarsen approach hierarchically aggregate function dependency ultimately generate package graph directional graph package generate package graph user explore abstraction implementation simplify comprehension hierarchical cluster approach aim reduce execution complexity efficiently extract meaningful useful information aid program comprehension literature various technique propose summarize reduce execution sample filter compression approach promising mainly limited granularity information loss omit important execution recent abstract technique introduce multiple granularity execution trace however approach lack hierarchical visualization abstraction linkage abstraction moreover approach limited graph function ignore package hierarchy alternatively approach address challenge visualize graph abstraction enable hierarchical analysis navigation mechanism return facilitate explore investigate execution contribution coarsen technique construct multi static graph representation mechanism link hierarchical abstraction cluster correspond graph refinement technique project coarse graph finer graph interactive visualization enables analysis execution enhance program comprehension user evaluate usability usefulness previous focus construct visualize static graph granularity however automatic construction graph multi granularity addition easy extend program approach cluster execution trace introduce previous extend approach automatically mapping cluster graph feature user navigate abstraction cluster graph aid comprehension abstraction implementation interactive visualization developed comprehension abstraction organize brief background topic graph approach highlight visualization feature visualization explains detail usage codex benefit evaluate user briefly discus related finally concludes summarizes future background brief background topic graph define repeatedly graph widely facilitate understand structure evolution execution software graph dynamic construct runtime static construct compile dynamic graph execution contrast static graph execution research focus static graph hereafter graph refer static graph simplicity unless otherwise distinguish software static graph define graph entity entity node denote incoming node node denote outgo node graph function graph  graph  package graph PCG graph described function graph capture function construct caller callee relationship function function function graph node graph graph capture communication coarse grain function graph function function graph node node package graph coarse grain graph belonging package node package parallel remove approach developer tends explore manner developer analyzes package selects goal package investigation investigates deeper function approach manner explore execution function graph easy understand developer apply cluster approach directly function graph complicate developer coarsen technique abstract function graph technique multi graph package graph graph coarsen user abstraction apply cluster accord cluster project enhance user understand functionality organization overall explain approach detail discus unified representation subsection illustrates overview approach unified representation caller callee towards construct graph extract code structure entity relationship dependency entity obtain exist static analysis  python java  java extend java output caller callee unified representation caller callee format image KB image flavor entity function namespace fully qualify entity consists package define scope identifier identifier entity parameter function argument image KB image toy coarsen technique reduce node merge namespace node namespace node belongs function belong therefore merge node graph construction phase consists parse construct function graph simplify function graph abstraction coarsen technique graph schema parse caller callee extract node relationship data structure avoid entity conflict maintain fully qualify entity consists namespace parameter important module function identical across namespaces package entity attribute image KB image attribute node construct graph identify articulation node graph articulation node node disconnect graph remove graph coarsen coarsen popular graph reduction define aggregation graph node identify node coarser graph advantage multi coarsen technique facilitate graph data analysis merge node specific criterion define criterion simplify function graph multi graph package graph illustrates coarsen technique construct graph graph coarsen technique function graph input collapse node namespace node similarly construct package graph merge node namespace graph package node execution extraction extract execution source node target node source node entry target node exit node identify node node entry node exit execution graph cycle function built networkx library extract execution function depth generate graph entry exit however extend function graph remove cycle entry exit criterion cycle rely discovery remove extract execution image KB image graph cycle remove execution vertex restriction direction addition none vertex function export file generate function graph execution function feature matrix cluster execution machine technique preprocess data  format feature matrix generate entity feature encode encode manner illustrates entity execution entity feature matrix feature vector feature presence absence function feature matrix contains entity binary feature entity absent entity feature matrix function entity feature hierarchical cluster hierarchical cluster distance algorithm similarity function distance cluster allows developer explore data granularity hierarchical cluster approach divisive cluster agglomerative cluster approach agglomerative hierarchical cluster AHC cluster execution hierarchical abstraction algorithm singleton cluster cluster cluster contains advantage AHC approach AHC reverse engineering approach architecture software recover fashion moreover AHC abstraction useful developer desire cluster valid meaningful image KB image hierarchical cluster specify cluster however perform cluster similarity execution linkage researcher conduct various similarity linkage conclude jaccard similarity reliable measurement linkage algorithm jaccard similarity similarity link linkage similarity similarity entity jaccard similarity dissimilarity widely cluster text cluster calculate compute intersection union equation linkage hierarchical agglomerative cluster variant distance cluster linkage linkage software architecture recovery technique linkage SL linkage CL average linkage AL linkage distance cluster identify farthest cluster cluster equation convert cluster graph hierarchical cluster dendrogram illustrates AHC perform approach AHC execution linkage algorithm abstraction multi granularity graph convert cluster graph extract cluster data dendrograms belong cluster cluster cluster cluster export file cluster ID extract cluster dendrogram algorithm input retrieve cluster cluster extract file correspond file finally pas graph cluster later graph cluster mapped graph codex image KB image cluster cluster mapping graph approach construct graph automatically construct function graph coarsens abstraction package graph developer abstract package graph selects specific cluster investigate refinement technique apply project cluster graph detailed graph function graph automate mapping node cluster graph correspond node finer graph attribute namespace important attribute namespace coarsen graph therefore attribute expand node representation implementation detail algorithm image KB image algorithm graph input assume cluster coarsest grain coarsest graph cluster package graph cluster graph algorithm construct graph obtain correspond node graph node graph attribute graph schema attribute namespace label node label exist confirms node scope correspond obtain iteration algorithm apply project graph finer regard function graph software visualization previous rely  generate graph however exist graph visualization generate static format svg png dot format graph become complex challenge analyze understand graph entity node associate attribute likely visually overlap due limited screen canvas understand static graph tedious challenge overcome issue develop visualization dynamic browser user friendly intuitive interface codex feature user interactively explore graph panel facilitate explore metadata graph node display graph tab browser developer separately feature demonstrate subsection node node link technique commonly visualize explore relationship software entity node link technique graph graph node file module belong developer function module package interact another node feature entity arrow relationship entity node articulation articulation vertex disconnect graph sub graph remove highlight node user selects node click highlight node graph transparent feature developer focus function relationship moreover node panel metadata user browse metadata node graph matrix click dependent tab node click tab node node filter user click dashboard button modal valuable information graph node entry exit addition user filter node metadata mapping cluster graph integrate mapping hierarchical cluster graph visual automate developer click cluster hierarchical convert cluster graph algorithm developer navigate graph browser tab insert cluster cluster node graph  cluster relevant node highlight multi hierarchical cluster dendrogram popular format hierarchical cluster however graph increase becomes identify cluster horizontal cluster overlap overcome issue extend codex hierarchical cluster layout hierarchical load codex format  json csv graph render layout node graph reload analysis implementation implement propose python program developed web application visualization flask bootstrap define node towards construct graph define extract entity dependency define function entity function ignore orient structure regard essential component traditional functionality clearly component relationship entity function instantiate extract function dependency integrate exist static analysis generate caller callee text file analysis apache byte code engineering library  analyze file input construct visualize graph parse caller callee relationship file construct graph generic graph data structure networkx library manipulate render structure graph json schema obtain node construct graph file format  json json schema visualization graph hierarchical cluster execution construct multiple abstraction graph extract execution modify version depth dfs algorithm built networkx cluster execution AHC algorithm numpy scipy library machine model onto generate built feature matrix fed hierarchical cluster algorithm parameter setting define approach similarity matrix jaccard linkage illustrative illustrate applicability usefulness examine generate meaningful hierarchical cluster granularity illustrate alleviate challenge understate complex graph adopt multi graph abstraction technique summarizes implement java resolution readable image website   code editor  3D interior 2D  apply approach  java code editor java equip operational feature auto completion intuitive easy gui although program code due outstanding manageable manual analysis verification challenge unsupervised algorithm evaluate cluster algorithm meaningful focus manageable enable inspect manually evaluate significance examine approach identify functionality automatically generates graph software coarsen technique  package automatically ignores package graph analysis function graph entry graph feature codex entry contains application due graph ignore graph apply approach function graph cluster function graph dendrogram cluster   compute optimal cluster   refers optimal   yield yield functional graph data cluster image KB image dendrogram  cluster   graph  function   graph node entry exit graph  package function entity node entry exit agglomerative hierarchical cluster reasonably software structure cluster cluster cluster due algorithm cluster eventually codex visualize function graph cluster cluster auto feature bracket cluster disconnect graph singleton cluster dendrogram investigation function graph node function external library graph construction cluster mapped graph feature  cluster singleton cluster merge cluster due node cluster handle initialization graphical interface relationship cluster cluster handle graphical interface feature cluster handle button action interface cluster handle auto feature cluster graph without node image KB image evaluate AHC   confirms graph generate execution  demonstrate propose building abstraction automatically extract graph software cluster addition visualization useful exploration comprehension automatically generate graph image KB image convert  cluster dendrogram graph node function belongs auto bracket feature action gui component visible gui handle gui feature handle button action interface handle auto program keywords feature function graph interpretation reference legend reader refer web version article II  apply approach  interior application java user 2D furniture appliance preview 3D easy feature import texture furniture video user customize preference font measurement version desktop applet goal validate feasibility developer differentiate source code version explore desktop version illustrate approach useful bridging cognitive gap facilitate comprehension task showcase task understand multiple package medium developer tends explore manner developer program comprehension analyze package dive deeper deeper function finally source code similarly approach approach analyze construct analyze package graph cluster depth analysis user navigate package graph graph investigation finally graph deeper function graph package graph depicts  package graph package node entry desktop version applet version cluster package graph PCG generate propose dendrogram hierarchical cluster dendrogram mention previously   optimal cluster illustrate optimal cluster respectively obtain AHC explore meaning cluster namely cluster approach successfully differentiates version  desktop applet dendrogram cluster merge cluster applet version similarly cluster merge cluster desktop version graph explore cluster belong desktop version cluster scenario investigate cluster sub cluster cluster convert graph conversion  cluster graph package mapping graph package node package node package node package package pink node belong package depicts  graph graph node decrease decrease addition manageable specific domain investigate apply approach graph randomly cluster cluster package package related reading default user preference function graph investigate function cluster  function graph uncoarsening graph graph function belong graph network apply approach graph partition approach successfully partition graph cluster network codex cluster handle user preference functionality measurement another observation node belong  node belong another  image KB image PCG dendrogram  cluster   cluster applet version cluster desktop version image KB image graph comprehension  coarsen function graph multi abstraction apply cluster approach cluster uncoarsening cluster apply approach cluster graph cluster uncoarsening graph cluster function apply approach cluster extract graph cluster interpretation reference legend reader refer web version article structural characteristic graph  entity node entry exit  graph execution encode hierarchical cluster generate subgraph execution overhead previous task apply goal amount codex affordable output hierarchical cluster vast majority processing overhead due computation complexity AHC examine  entire processing around sub entire processing spent hierarchical cluster costly generate sub graph generate cluster however specific cluster investigate overall around belong due execution increase hierarchical cluster overhead nevertheless overall analysis practical task important mention machine platform gpu computation pytorch drastically reduce execution overhead discussion discus finding aforementioned specifically examine approach generates meaningful hierarchical cluster granularity codex construct meaningful hierarchical structure comprehensible functionality multiple granularity graph software partition graph cluster CH graph functionality software refer moreover cluster logic feature software investigation sub cluster functionality  replace  II analyze cluster execution abstract package graph PCG focus cluster desktop version software graph  function graph  remove irrelevant information focus domain reduce computation due graph reduce cognitive effort understand graph software description task user  description  package fan outgo fan incoming  package fan incoming fan outgo rationale analysis dependency entity assess quality essential conduct visualization assist software comprehension  package project rationale investigate internal structure artifact typical comprehension task  transformation model package affected affected package belong rationale impact analysis allows estimate impact code estimate effort  source code  version applet desktop version function applet version function version rationale investigate functionality understand role software useful activity software comprehension engineer researcher user  qthe interface intuitive user  QI recommend software developer  QI prefer manually inspect codebase  QI effort inspect codebase  qthe task identify feature implement multiple function codebase faster achieve manually inspect   retrieve information code node helpful program comprehension  qthe generate cluster graph beneficial identify functionality structure visually without inspect source  qthe multi graph visualization beneficial understand overall structure function package likert qthe useful cluster visually exploration execution graph hierarchical likert  visualization useful understand software   previous   comment limitation suggestion QI  QI unnecessarily  QI easy  QI technical  QI various function  QI inconsistency  QI  QI cumbersome awkward  QI confident  QI  user objective user seek insight specific technique useful similarly user aim gain insight useful approach user feedback moreover ass strength weakness visualization future effort improve exist technique evaluate usefulness usability approach user user involve participant task questionnaire questionnaire ass usefulness ass usability usability sus participant user conduct invite software engineer survey software engineer opt participate participant mention participant belong international worldwide google others participant experienced procedure accessible participant deployed linux virtual machine VM ubuntu lts azure participant task consent demographic information ass research participant video clip brief overview visualization evaluate participant software comprehension task questionnaire task intend data usefulness usability task  application refer information participant questionnaire response participant google task participant perform task task goal core task representative software comprehension task feature achieve goal comprehension task comprehension framework task comprehension evaluation literature software visualization task comprehension activity  framework uncovered activity mainly concerned dynamic aspect within scope goal task feature investigate project extract cluster graph user task rationale task participant entry exit graph filter feature task participant analyze investigate cluster project cluster projection feature fourth task participant explore information associate specific node fifth task participant explore approach questionnaire questionnaire consists likert evaluate usefulness feature visualization gain feedback usability sus evaluate usability discussion report usefulness respectively discus strength weakness user feedback finally report discus usability usefulness evaluate usefulness participant perform task survey express opinion accordingly illustrate likert asks participant opinion interface participant strongly codex interface intuitive user friendly participant recommend codex developer response positive vast majority statement participant goal ass experienced developer participant java prefer manual inspection code automate visualizes code structure graph participant strongly agrees statement participant disagree strongly disagrees participant illustrate prefer inspect code manually upon investigation discussion participant discover discrepancy participant understood participant refer prefer inspect source code directly debug maintenance task contradict goal target towards cognitive task understand structure actual debug task overall maintenance analysis complementary understand software actually explain aim ass execution overhead codex participant strongly codex effort task program comprehension finding strongly align execution analysis illustrative focus specific task identify functionality investigation developer task codex versus manual inspection prefer inspect codex codex useful identify feature underlie function implement participant explore feature feature helpful program comprehension task majority statement specific reflect participant opinion usability generate visualize cluster without source code specifically participant strongly statement participant disagree statement participant multi graph helpful visually understand structure package function multi visualize graph feature facilitate overall program comprehension participant participant strongly participant neutral statement none response  statement aim ass overall satisfaction contribution multi hierarchical visualization graph response statement disagree neutral strongly overall participant strongly multi hierarchical visualization graph useful understand overall structure software participant rate overall usefulness codex participant neutral response participant feedback questionnaire contains participant evaluate overall opinion regard feedback improve valuable insight difficulty encounter analysis summarize highlight participant feedback graph filter participant challenge explore function graph participant comment visualization hang node drawback node link representation tends become highly clutter node visualize participant improvement feature filter hide irrelevant node graph manageable easy explore participant selectively execution node lack information customization software metric identify component instance refactored however participant structural data participant comment package participant software metric data loc WMC query sort another suggestion regard ability customize style graph participant brief description hover icon another participant enrichment available plugin popular IDEs  VS code usability analyze usability usability sus average usability accord previous average interpret although average minimum threat validity although justify rationale program comprehension task choice task bias propose approach minimize threat task inspire task comprehension evaluation literature software visualization task comprehension activity  framework uncovered activity mainly concerned dynamic aspect another threat validity however argue curated document manageable representative software moreover primary concern validate usefulness therefore manually implement conduct future related graph visualization researcher propose visualization generate visualize graph however   graph propose 2D software visualization approach geometric entity source code described rectangle respectively arrow relationship exist interactive visualization graph shah  propose interactive graph visualization program java graph grid pixel pixel function  interactive visualization implement eclipse plugin developer explore static graph specific instead manually traverse understand another introduce propose  multilevel graph aspectj visualization structure structural although  allows user explore multi dependency   combine static structure dynamic analysis 3D landscape extract dynamic graph information allows developer navigate gain insight feature implement dynamic graph developer input data execute moreover obtain execution contrast focus static graph software static graph considers execution promising limited aspect limited abstraction function maintenance task understand coarse grain visualize portion graph depict overall structure display entity attribute likely information overload fail understand software generate graph static format png dot format effort understand execution reduction technique massive execution scalability issue improve comprehensibility execution researcher propose reduction compression technique reduce  filter technique reduce execution graph abstraction filter approach filter utility component execution similarly focus reduce graph reduce stack depth execution approach aim reduce graph omit essential execution graph contrast approach considers execution focus cluster hierarchy reduce overall graph another research direction compress reduce execution reduce execution sample technique sample visualize animate dynamic trace   focus reduce execution encode author comparative approach encode reduce overall graph approach reduce overall execution ultimately graph granularity contrast focus cluster execution multiple abstraction approach reduce graph hierarchical developer understand software multiple hierarchical granularity another approach sage sage dynamic analysis approach focus building hierarchical abstraction function label hierarchical abstraction functionality focus static analysis software dynamic analysis execution software input static analysis considers execution moreover focus building hierarchical abstraction abstraction sage visualizes identify cluster vertically stack layer user lose visible layer due lack global overview codex hierarchical mechanism link cluster graph facilitate explore investigate execution hierarchical cluster software cluster commonly technique program comprehension syntactic cluster technique propose mitchell  cluster research static structural dependency inheritance reference cluster approach rely semantic cluster source code identifier comment unlike previous software cluster technique approach execution cluster source code entity perform functionality execution reflect overall workflow conclusion future automate data driven approach comprehension task software equip interactive visualization primary research contribution twofold abstraction bridge cognitive gap functionality software implementation specifically abstraction graph software developed multi hierarchical tier abstraction software granularity function package developed interactive visualization allows developer understand software graph abstraction enable visual inspection trace exploration functionality granularity exemplify benefit automatic abstraction visualization software comprehension initial evaluation ass usefulness usability user assessment however enhance visualization visualization improve package hierarchy coarsen graph moreover extract calculate software metric utilize node reflect matrix developer insight complexity software rigorous validation perform future gpu platform reduce execution spent cluster task