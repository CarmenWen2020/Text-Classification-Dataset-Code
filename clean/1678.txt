background request contribution review source industrial context objective goal understand quality flaw code anti security vulnerability cod style violation request code affect acceptance review maintainer project conduct java source project analyze presence code quality flaw request analyze correlation apply logistic regression machine technique moreover manually validate request qualitative insight importance quality issue acceptance rejection unexpectedly quality flaw pmd affect acceptance request factor reputation maintainer importance deliver feature important quality request acceptance conclusion researcher already investigate influence developer reputation request acceptance investigate code style violation specifically pmd recommend researcher investigate topic understand useful previous keywords request pmd machine introduction request developer convenient contribute project popular project source commercial request review contribution developer researcher focus attention request mechanism investigate aspect review request assign reviewer accepted researcher highlight reputation developer submit request implementation feature important acceptance factor aspect quality knowledge investigate quality flaw code anti cod style violation affect request impact acceptance request therefore understand quality flaw driver accept request conduct involve java project analyze presence quality flaw request quality flaw highlight pmd code anti cod style violation investigate presence pmd quality flaw request affect acceptance review project maintainer analyze quality flaw request pmd frequently static analysis pmd evaluates code quality standard available detection quality aspect generally harmful code duplicate code anti couple issue god various cod style violation whenever violate pmd issue remainder refer quality flaw pmd pmd issue previous confirm presence pmd issue code code anti pmd significantly increase risk fault maintenance effort therefore developer issue increase software maintainability decrease fault proneness unexpectedly application statistical technique presence pmd issue influence acceptance rejection request therefore apply machine model decision random extremely randomize adaboost gradient boost xgboost confirm reject overcome limitation statistical technique moreover manually inspect reject accepted request insight impact quality request acceptance confirm application machine model pmd issue request code anti project maintainer accept reject request structure describes concept underlie related researcher recent define research metric hypothesis context data collection data analysis protocol achieve discus identifies threat validity conclusion outlook future background introduce code quality aspect pmd analyze code quality request request mechanism finally brief introduction motivation usage apply machine technique code quality pmd evaluate code quality  debt pmd frequently static code analysis java along checkstyle findbugs sonarqube aforementioned pmd analyzes  code avoid incompatibility library version library analyze commits dataset avoid risk commits compile examine java  project unfortunately average project successfully compile pmd source aim identify issue technical debt accumulate development specify source file analyze code checked predefined pmd standard user customize default java encompasses available java pmd project throughout issue pmd priority absolutely behavior critically broken buggy highly recommend behavior likely broken buggy recommend behavior confuse  standard optional behavior likely buggy standard style taste highly optional nice consistent policy package priority severe issue affect rate acceptance request priority guideline default custom pmd project documentation pmd compile code analyze aim analyze code request instead project code adopt pmd defines java classify category cod style error prone documentation multi thread performance security available pmd official documentation confirm harmful empirical highlight subset related empirical confirm  pmd related  pmd   characteristic avoid cod IP maintainability loose  kemerer maintainability abstract maintainability couple  kemerer maintainability cyclomatic  maintainability data  maintainability  excessive  proneness excessive  proneness fault proneness excessive parameter  parameter proneness god proneness comprehensibility   inappropriate intimacy proneness loose package  kemerer maintainability comment  comment  git request git distribute version enables user collaborate cod project offering robust feature code feature commit local repository code remote server others developer  onto user workstation merge version codebase organize conjunction request git user diff easy analyze addition request project accepted merge project request code review mechanism compatible git github goal code review insert mainline developer remote repository github merge  feature project maintainer github review accept reject diff code incoming reviewer comment vote github web user interface request approve reject request abandon closing creator refine comment submit review machine technique machine classifier adopt classifier generalize linear model logistic regression classifier decision ensemble classifier bagging random  adaboost  xgboost sub briefly introduce adopt classifier rationale logistic regression frequently algorithm machine logistic regression collection measurement issue binary classification request acceptance function output probability input classify probability accepted decision model data construct graph decision classify input data split subset split chosen variable improves accuracy decision subset data flowchart structure model user classify input prediction perceive split data gini impurity information gain gini probability incorrect classification random subset assign random within subset information gain accuracy decision node chosen gini chosen popularity resource efficiency decision classifier chosen easy implement readable decision handle noisy data subset without significance ignore algorithm classifier susceptible overfitting model becomes specific training data input data overfitting become apply model mode generalize dataset random breiman ensemble classifier reduce risk overfitting decision construct collection decision random subset data collection decision depth reduce correlation subset attribute risk overfitting input data label model utilizes generate input data average individual label label input extremely randomize upon random introduce principle splitting data random subset building collection decision randomize decision attribute splitting subset randomize computationally efficient model random alleviate negative overfitting bagging breiman ensemble classification technique reduce overfitting model multiple training initial creates multiple decision sample initial uniformly replacement individual data multiple training label input voting adaboost freund  classifier concept boost implementation algorithm collection decision intent correctly label instance data misclassified previous training assign sample data misclassified sample priority subsequent predetermine limit accuracy cannot improve model predict label sample model label calculate decision construct adaboost decision resistant overfitting useful generalize data however adaboost susceptible data outlier gradient boost friedman boost collection weaker classifier sequentially accord algorithm gradient boost factor building decision loss function algorithm minimize loss function similarly adaboost model fully optimize predetermine limit xgboost chen  scalable implementation gradient boost xgboost performance improvement construct model important factor analyze data related report relevant request request request development usage online resource request reviewer assignment acceptance sometimes request submit edit code latent collaborative conflict therefore request compete overlap increase merge complexity another investigate issue regard request latency define complex issue related independent variable comment request code style influence factor integrate request code style criterion generally reveal divergence criterion consistency however code style inconsistency request code affect merge code investigate developer refer online resource request focus context usage online resource resource evolve moreover investigate browsing purpose online resource request instead investigate commit message evaluate request description generally documentation aim review possibly accept request request reviewer assignment automatic organization github effort waste propose reviewer recommender predict highly relevant reviewer incoming request textual semantics request social relation developer factor influence request latency project approach precision rate recommendation recall rate recommendation however author aspect code quality confirm recent investigate factor influence acceptance rejection request developer project specific request moreover perceive quality context important role request acceptance difference treatment request core community generally merge decision postpone technical factor generally request phase merge frequently gender role request acceptance request acceptance rate contribution versus contribution accepted request likely merge developer social contribution cod moreover social connection request submitter project manager affect acceptance core member evaluate request geographical location impact factor request acceptance request acceptance rate discover apparent similarity integrator accept contribution analyze source code quality code style documentation granularity adherence project convention request program significant influence acceptance acceptance mostly scala program factor regard developer related acceptance developer developer reputation submit request moreover important role acceptance request positively influence majority contribution accepted rejection request increase technical properly fork increase important rejection factor  request complexity contribution locality modify artifact project policy contribution integrator perspective social challenge address motivate contributor project explain rejection without discourage contributor perspective important reduce response maintain awareness improve communication software quality request knowledge focus quality aspect request acceptance investigate development focus factor affect efficiency contribute acceptance request related acceptance analyze  corpus project request increase however proportion repository relatively stable identify factor affect lifetime request merge code review increase probability acceptance review request merge request reject project quality requirement request project convention fail request reject another conduct survey aim characterize factor decision request acceptance quality reveal priority developer important acceptance factor identify target importance code quality however respondent specify quality differently respective perception conformance available documentation contributor reputation developer quality aspect challenge request generally accepted accord integration platform regard factor quality developer perception evaluate non functional characteristic merge developer prefer understandable elegant code documentation code project minimal impact moreover vast majority developer manually evaluate code quality however developer ranked choice continuous integration travis CI  suite request author highlight efficiently automate request quality evaluation investigate request acceptance commercial project address quality request review developer perception apply data mining technique project github repository understand merge conduct manual inspection request investigate factor influence merge outcome request request involve discussion request developer affiliation significant factor model moreover report developer generally associate quality request quality description complexity  however evaluate request reject investigate software quality request focus trustworthiness developer affiliation moreover quality request acceptance rate developer perception investigate usage automate static analysis source project context software evolution apply pmd impact pmd software quality defect density proxy metric external software quality moreover data pmd statistically significant difference defect density however analyze acceptance rejection request quality code accepted request complement analyze code quality request popular source project code style violation specifically pmd quality factor moreover investigate quality specifically issue source code affect request accepted review project maintainer code quality pmd frequently source software analyze source code empirical guideline define runeson höst goal research context data collection data analysis procedure goal research goal investigate role pmd issue request acceptance accordingly expectation formulate goal goal metric GQM template   acceptance request  respect presence pmd issue  developer  context java project define goal derive research RQ  distribution pmd issue violate request analyze software  presence pmd issue affect request acceptance  specific pmd issue affect request acceptance RQ aim assess distribution pmd issue violate request analyze software account distribution pmd issue respect priority assign pmd understand context RQ aim project maintainer source java project quality issue request source code review code quality issue affect acceptance request pmd issue generally rejection request RQ aim understand presence specific pmd issue likely project maintainer reject request request affected code anti god inappropriate intimacy reject maintainability code context project criterion sample criterion project java primary program active development code host github request contribute code request moreover maximize diversity representativeness comparable project respect project domain recommend project accord criterion majority project apache software foundation repository repository excellent source project criterion described widely software industrial mature due strict review inclusion  moreover project review code strict quality remain project trend java repository github github valuable source data code review selection manually popular java project criterion mention report project analyze along request PR frame analysis project loc project project owner  frame loc apache apache  apache  apache cassandra apache  apache  apache groovy apache  client apache  apache incubator  hibernate hibernate orm apache kafka apache lucene solr apache maven apache metamodel mockito mockito apache netbeans netty netty apache  apache phoenix apache  project framework project boot apache storm apache  apache  apache zeppelin  zipkin data collection extract request project github api request fetch code request analyze code pmd default java pmd static analysis request code java request request source code therefore exclude request related source code documentation image filter pmd issue item introduce request filter aid diff file github api request identify request accepted request marked merge request commit handle request within project data analysis data collection csv file reporting dependent variable request accepted independent variable pmd issue introduce request data structure adopt remainder RQ calculate request pmd issue project moreover calculate accepted reject request pmd issue calculate occurrence request project moreover calculate descriptive statistic average maximum minimum standard deviation pmd issue data structure analysis project    variable accepted    understand pmd issue affect request acceptance RQ significant difference frequency frequency category compute contingency matrix perform apply logistic regression machine technique report accuracy regressor pmd issue independent variable predictor PR accepted reject dependent variable multiple machine model model performs differently data bias variance bias model attention training data bias attention training data variance variance attention training model data cannot generalize customary machine suitable model multiple bias variance description technique rationale adopt report rqs however factor loc independent variable machine technique accurate evaluate importance pmd issue acceptance request RQ examine issue specific priority affect accuracy metric prediction model technique grouped pmd issue project accord priority analysis separately project priority project priority obtain RQ analyze issue priority combine pmd issue project data model available item priority analyze pmd issue individually apply importance mechanism training baseline model feature model model accuracy baseline model feature affect accuracy model model feature dataset accuracy baseline model accuracy model feature remove important feature model classify request accepted reject RQ RQ model confirm prediction request acceptance model accurate accuracy comparison accuracy model fold validation data randomly split model training remain model calculate accuracy precision recall matthew correlation coefficient model combine accuracy metric fold estimate model perform calculate commonly metric precision recall harmonic average latter precision recall metric focus positive model argues metric bias suggests contingency matrix calculate additional metric understand negative prediction affect accuracy construct model contingency matrix calculate model matthew correlation coefficient mcc suggests reduce information matrix probability model accuracy classifier easily gauge overall accuracy machine algorithm model calculate receiver operating characteristic auc auc measurement calculate receiver operating characteristic roc auc ratio classifier probability classifier rank randomly chosen positive randomly chosen negative accuracy accuracy  precision recall mcc TP positive TN negative FP false positive FN false negative distribution request PR pmd issue project RQ project PR pmd issue acc  occurrence apache apache  apache cassandra apache  apache  apache  apache groovy apache  client apache  apache incubator  apache kafka apache lucene solr apache maven apache metamodel apache netbeans apache  apache phoenix apache  apache storm apache  apache  apache zeppelin hibernate hibernate orm mockito mockito netty netty  zipkin project boot project framework pmd violate accepted reject request RQ violate reject PRs  description  finalize explicitly  thread explicitly thread  float loop index float  overload  override finalize  local interface session     local interface session   local  non label switch statement  replace enumeration newer java util iterator  instantiate   char  operation immutable    violate accepted PRs  description  non constructor distribution pmd issue request RQ priority pmd pmd issue pmd issue pmd issue issue  accepted PR reject PR confirm automate application machine model gain qualitative insight manually inspect accepted PR non accepted PRs project identify PRs reject accepted due quality issue validation perform author individually analyze candidate PRs PRs mention quality issue rejection message false otherwise moreover author report PRs aim fix quality issue remove issue highlight static analysis understand importance quality issue maintainer PRs classify differently author manually inspect PRs discussion involve author resolve conflict consensus classification replicability replicate publish raw data replication package csv file request java code exclude request edits documentation html CSS others RQ distribution pmd issue violate request analyze software analyze request violate pmd analyze project request accepted request reject distribution pmd issue differs greatly request project cassandra phoenix relatively pmd issue request groovy  maven relatively pmd issue report pmd issue pmd issue occurrence pmd issue occurrence grouped priority priority account priority issue vast majority violate classify priority remain equally distribute none project analyze issue rat priority pmd role request acceptance rejection pmd rejection acceptance however reject PRs violate violate dataset  convention   violate reject PRs violate reject PRs medium priority recommend priority optional discover pmd diffusion rate acceptance diffusion rate rejection remain equally distribute descriptive statistic average avg maximum max minimum min standard deviation std dev recurrent pmd issue moreover priority pmd priority sum issue issue occurrence project specific violate project available replication package image KB image descriptive statistic recurrent pmd issue priority occurrence request PR project  RQ pmd  PR                 descriptive statistic recurrent pmd issue average avg maximum max minimum min standard deviation std dev RQ pmd  dev                RQ presence pmd issue affect request acceptance calculate contingency matrix logistic regressor machine model project model calculate accuracy described model average metric classifier technique contingency matrix significant difference accepted reject request presence pmd issue moreover confirm overall application logistic regression machine model data model project available replication package average estimate accurately predict maintainer accepted request pmd issue confirm analysis project independently none project behavior presence pmd issue acceptance rejection request analysis report frequently violate pmd contains distinct pmd item project interpret item depict prediction auc almost model hover around therefore overall code quality factor request accepted reject contingency matrix RQ pmd  pmd issue PR accepted PR reject model reliability RQ accuracy  fold validation model   auc precision recall mcc image KB image roc curve average fold validation model RQ summary quality related request acceptance RQ RQ   importance                       reviewer template margin reflect actual margin standard JSS template project moderate dismiss outlier machine suitable technique however contingency matrix confirms presence pmd issue affect request acceptance pmd issue request acceptance mutually independent RQ specific pmd issue affect request acceptance pmd issue priority improvement RQ contingency matrix priority significant difference accepted reject request presence pmd issue confirm application logistic regression machine model trend confirm project analyze independently analyze project pmd issue individually importance pmd importance importance quality baseline model accuracy model specific quality feature manual inspection commits reject PRs accepted PRs inspect none reject quality however PRs submit purpose fix quality issue detect static analysis accepted remain reject PRs maintainer project fix useful cosmetic reject PRs quality issue fix maintainer cumulative PR fix issue report reject PRs image KB image discussion discus obtain accord rqs practical implication research analysis request  quality flaw detect pmd code anti frequently request request god speculative generality  duplicate code issue generally harmful empirical developer prefer accept request implement feature fix bug reject maintain quality another project maintainer lack knowledge code anti cod propose pmd pmd issue driver acceptance rejection request project report behavior importance acceptance rejection request pmd recommends manual customization instead developer maintain quality however analyze detect pmd helpful customization useless predict software quality code submit request cannot generalize source commercial project project enforce quality accept request sonarqube competitor pmd recently launch feature developer code quality submit request maintainer sensitive quality code integrate project detect pmd adoption request quality analysis sonarqube usage pmd submit request increase quality code increase overall software maintainability decrease fault proneness increase injection pmd issue manual inspection PRs project groovy hibernate orm incubator  kafka netty   boot storm zeppelin adopt checkstyle conformity cod standard however limited amount PRs contains fix issue checkstyle confirm obtain complement obtain namely reputation developer important quality developed code implication practitioner maintain source project realization attention software quality request powerful benefit code review researcher investigate quality aspect influence acceptance request finding implication project contributor core researcher contributor code quality driver acceptance PRs recommend contributor code attention cod standard quality however prospective contributor attention criterion suite documentation applicable moreover contributor submit PRs merge without impact file core interested integrate PRs however core member adoption automate static analysis integrate CD CI pipeline contributor validate code researcher disseminate culture quality source project related development quality code remove quality issue code anti threat validity introduce threat validity tactic adopt mitigate construct validity threat concern relationship theory observation due measurement error rely pmd software quality analysis java however pmd widely evidence empirical assess detection accuracy therefore cannot exclude presence false positive false negative detect pmd issue extract code submit request github api however identify request accepted request marked merge request commit handle request within project therefore aware limited possibility maintainer integrate request code project manually without request accepted internal validity threat concern internal factor related affected evaluate code quality request apply pmd widely static code analysis java aware presence absence pmd issue cannot perfect predictor software quality metric detect however selection pmd perform allows detect code anti security flaw cod style violation without compile code specific purpose usage decor capture code enable capture security flaw aware code quality refer quality hinder pmd however code quality beyond metric metric code quality defect future commits request metric request coverage request indicator quality yield external validity threat concern generalizability project apache software foundation  specific strict quality remain project trend java repository github selection prefer project production environment request contribution application domain avoid aim mathematical model prediction bug domain application domain indication non generality prediction model application domain chosen project stem application domain external library framework web utility computational infrastructure application domain important criterion selection project analyze rate balance selection context however aware project enforce quality standard quality accept request furthermore source project cannot speculate industrial project internal moreover java project replication project dataset eleven project vast majority request moreover none project analyze issue rat priority conclusion validity threat concern relationship treatment outcome threat analysis apply report descriptive statistic moreover instead logistic regression prediction classifier reduce bias prediction classifier exclude possibility statistical machine approach yield accuracy model approach however extremely importance pmd issue statistical significance difference apply classifier conclusion request code review mechanism previous report request accepted trustworthiness developer however source maintainer code quality accept reject request verify statement analyze code quality request pmd widely static code analysis detect quality flaw code flaw code security vulnerability potential bug pmd detect quality flaw empirically harmful quality flaw god cyclomatic complexity inappropriate intimacy apply statistical technique machine classifier understand predict request accepted presence quality flaw detect pmd request code moreover manually validate analyze reject accepted PRs request analyze java project nearly accepted reject pmd quality flaw unexpectedly presence pmd quality flaw request code influence acceptance rejection request therefore quality flaw code submit request code anti influence acceptance PRs verify project independently moreover merge data data confirm complement conclusion derive report reputation developer submit request important acceptance factor aware code quality aspect coverage request bug generate code request however deserve future planning investigate quality metric detect affect acceptance request analyze project define accurate quality model sonarqube understand complement pmd purpose planning approach   context request publicly available datasets   methodology observational investigate awareness source community code quality accept request moreover understand harmful developer perceive pmd quality flaw code anti qualitatively ass violation another important factor developer personality influence acceptance request