context complexity software increase demand sophisticated effective software demand highly skilled software engineer address educator worldwide software education software engineering SE computer CS program publish decade undertaking objective objective summarize knowledge software education benefit reader educator researcher deliver software setting conduct education research address conduct systematic literature mapping SLM synthesize community educator publish topic compile candidate pool apply inclusion exclusion criterion pool publish topic software education become active increase pedagogical approach ware specific education propose challenge education insight overcome challenge propose conclusion educator researcher classification exist within software education synthesize challenge insight report software reference index vast knowledge software mapping aim educator researcher identify effectively deliver software conduct education research important keywords software software education software engineering education education research systematic literature review systematic literature mapping introduction software software penetrate almost aspect personal professional furthermore industrial source reporting software increasingly complex increase complexity software increase demand sophisticated effective software quality assurance software fundamental widespread activity assure quality software cambridge report global remove defect software risen billion annually remove defect comprises average development typical software project demand effective software increase highly skilled software non peer review literature grey literature online blog article industrial source reporting shortage software tester furthermore context software talent shortage recruiting quality software tester skillset recruiting quantity available challenge address highly skilled software tester software engineering SE computer CS program worldwide software education curriculum achieve distinct software alternatively blending integrate software concept program association compute compute machinery acm effort educator publish software education activity discus effective pedagogical approach proposal specific education educator identify challenge educator insight overcome challenge knowledge software education systematic review individual educator synthesize evidence educator software valuable challenge educator insight overcome challenge useful synthesize summarize report evidence research topic research rqs objective goal synthesis summary address goal conduct systematic literature mapping SLM synthesize community educator publish topic systematic SLM systematically pool investigate rqs categorize analyse various aspect contribution review fold classification perform systematic mapping via rqs synthesis challenge education via RQ synthesis insight recommendation education via RQ development index repository accessible online google spreadsheet goo  remainder structure background related describes research execution phase SLM literature review summarizes finding discus lesson finally conclusion future research background related brief overview software education versus software training briefly review related exist survey review software engineering software education software education versus training addition software education demand software training training certification scheme international software qualification   org organization national worldwide accord website december  issue certification clearly understand characterize distinguish software education training model concept context diagram clarify focus SLM highlight focus grey background education institution graduate distinguish SE CS non SE CS image KB image context diagram model relationship software education versus training educator SE CS curriculum graduate SE CS opportunity software graduate employ SE professional recognize software graduate non SE CS math business software survey software canada respondent population practitioner respondent respondent report non SE CS business mba industrial engineering mathematics english sport administration software graduate SE professional sometimes software online resource attend industrial training achieve certification software  related secondary software engineering education systematic review report SE education CS education review report educational aspect specific sub SE requirement engineering non exhaustive literature review publication review review review regular survey systematic mapping SMS systematic literature mapping SLM systematic literature review slr sort publication category indicative survey software engineering education  review   review regular  software education SLM  requirement engineering education software education software engineering education automate assessment approach program assignment computer education focus software education review carefully software category publish topic discussion focus discus related review SLM differs differentiate SLM rqs review summarize rqs previous review relate rqs SLM RQ survey software education title   rqs previous review relate rqs grey background survey evidence driven development  formal RQ regular survey survey extract information primary junior graduate etc corresponds aspect RQ context evidence increase productivity evidence increase quality program systematic mapping software education portuguese portuguese google translate translate RQ english RQ approach aid software RQ aspect contribution RQ RQ phase software contemplate software RQ RQ activity RQ technology development approach identify RQ target aid software RQ RQ RQ evaluation validation approach software RQ RQ challenge integrate software introductory program RQ challenge integrate introductory program RQ similarity RQ challenge education recent trend software education systematic literature review RQ topic address recent literature software education RQ RQ RQ contribution publish software education RQ RQ RQ insight lecturer introduce software RQ RQ software introductory program systematic mapping  RQ topic researcher investigate software introductory program RQ RQ RQ benefit drawback integration software introductory program RQ similarity RQ challenge education RQ insight education survey evidence driven development TDD academia report regular survey necessarily systematic review topic benefit incorporate TDD education worry challenge popular framework purpose SLM software education portuguese report review topic publish identify approach software develop evaluate another slr synthesize challenge integrate software introductory program report program deliver appreciate software activity conduct program assignment become tester appropriate challenge address literature recent trend software education via slr slr analyse review publish review recent trend gamification software tedious author involve slr SLM report substantial extension slr extend pool extend analysis rqs rqs recent SLM publish explore integration software introductory program pool mapping rqs summarize rqs previous review relate rqs SLM rqs focus SLM rqs wider focus previous secondary previous review rqs substantive pool SLM review SMS henceforth refer SMS review primary however examine pool SMS conclude pool focus mainly education program education discussion relate focus automate assessment program assignment topic directly software slr software contrast SLM focus education SMS secondary pool secondary another refer survey review however secondary secondary review pool intend review synthesize secondary become tertiary clarify SLM relation previous review venn diagram visualization software sometimes taught program SLM review publication overlap program indicates previous SMS already mention SMS specifically focus program software mechanism automate assessment program SLM publication overlap automate assessment software engineering education addition program automate assessment requirement engineering software SLM comprehensive slr publish date software education image KB image venn diagram scope SLM review topic assess execution SLM research SLM overview SLM research SLM aspect related execution SLM guideline conduct SMS slr SE slr developed SLM discus SLM planning phase goal rqs phase image KB image overview SLM uml activity diagram goal research goal classify summarize report evidence research topic research software education seek holistic knowledge software education conduct SLM establish identify relevant stakeholder experienced educator education researcher educator software valuable challenge educator insight overcome challenge helpful evidence report education author involve clearly evidence others literature occasion review individually holistic overview classification SLM helpful author actually junior colleague software express SLM furthermore education researcher properly conduct research topic research aspect education researcher contribution research previous empirical goal research rqs RQ classification contribution RQ contribution software education frequency RQ cluster cluster review identify around author collection RQ classification research research frequency proposal demonstration depth propose feedback conduct systematic empirical research rqs rationale RQ education researcher conduct empirical research topic benefit rigorous empirical already publish identify RQ RQ data source evaluation data source evaluation survey data others analyse quality automate RQ research hypothesis research hypothesis rqs inspire reader researcher explore research direction future RQ technical aspect technical aspect activity education report primary rationale RQ ass coverage technical topic planning automation activity attention coverage others activity automation attention landscape research analyse SLM proposition RQ educational offering rationale context software evaluation accord empirical software engineering guideline empirical context empirical evidence RQ approach education integrate across program RQ theory theory software education theory theory software education recognize literature CS SE education important adapt theory education CS SE education increase research rigor RQ empirical evidence report empirical evidence report organize RQ sub rqs RQ evidence challenge education challenge education empirical evidence RQ evidence insight recommendation education insight recommendation education empirical evidence source keywords SLM employ slr SLM software engineering SLM google scholar scopus widely previous slr SLM software engineering scopus addition google scholar source mention google scholar alone systematic review author independent phase author already apply inclusion exclusion criterion explicitly address topic display return candidate pool already pool  return candidate pool already pool immediately exclude scholar google  education software scopus com title ABS software education title ABS software  software focus venue topic conference software engineering education training  http org   jsp  acm  technical symposium computer education http acm org cfm  initial pool furthermore ensure maximize relevant identify focus venue topic conference software engineering education training  acm  technical symposium computer education proceeding directly URLs conduct january data extraction primary classification conduct january february available software education regardless publish restrict publication publish specific perform keywords apply title filter ensure candidate pool obviously potentially relevant avoid waste analyse non relevant waste effort clearly irrelevant candidate pool remove inclusion exclusion criterion purpose source focus software education screenshot activity google scholar obviously potentially relevant highlight ensure efficiency effort related candidate pool image MB image screenshot activity google scholar directly potentially relevant highlight google scholar return keyword phase analyse simply viable unbiased cope issue utilized relevance rank google pagerank algorithm restrict fortunately pagerank algorithm effective rank relevant checked somewhat saturation continued nth relevant focus software education heuristic report exist review guideline initial title filter candidate pool SLM duplication pool scopus google scholar database independent therefore candidate pool already candidate pool conduct backward snowball already pool aim ensure relevant source recommend systematic review guideline snowball context refers reference backward snowball citation identify additional snowball snowball additional backward snowball citation refer IDs primary review available online archive document refer pool clarify pool previously publish review previously publish review review considerably pool pool candidate already initial pool snowball compile initial pool candidate systematic voting conduct author define inclusion exclusion criterion apply derive pool primary although secondary seek apply comprehensive ensure relevant primary minimize related primary absolute guarantee indeed outside SE discipline focus issue effectiveness approach mention comprehensive literature implicitly link relevant recommendation conduct comprehensive application inclusion exclusion criterion voting carefully define exclusion criterion ensure relevant exclude scope exclusion criterion exclusion criterion focus software education academia scope exclude reporting software training exclusion criterion relatively evaluation exclude purely opinion exclusion criterion english text access internet exclusion criterion sought binary voting approach researcher vote candidate criterion researcher peer review vote disagreement consensus assess candidate exclusion criterion carefully assess relationship topic author inter related cluster publish focus specific web automate grade program assignment web inter related later RQ concern cluster topic criterion exclude application criterion exclusion detail exclude online spreadsheet exclude classify exclusion summarize candidate exclude fail satisfy inclusion criterion empirical goal reveal effective ineffective software behaviour novice programmer participate software focus software education undergraduate software bug detection technique topic symbolic execution constraint analysis model explicitly confuse software software complement statistic exclude exclusion exclude due criterion focus software education scope criterion exclude purely opinion tutorial conference criterion english text access internet longer version already pool candidate exclude fail satisfy exclusion criterion document refer tutorial title software program assignment conference secondary SLM primary secondary literature review pool candidate pool primary mention reference pool online archive document transparency enable replicability analysis detail extract data available online google spreadsheet goo  finalize pool ass growth publish purpose depict annual publication image KB image growth software education growth software january partial publish title assess research education research activity peaked publish perspective annual trend trend data software report SLM slr slr embed software slr web application slr graphical user interface gui survey mutation slr software testability trend data SLRs due timeline difference execution publication survey survey mutation publish data comparative growth sub software embed software testability earlier software education educator involve software education topic technical embed software mutation annual education reasonable due research activity topic development systematic research developed systematic classification scheme extract relevant data pool classify systematic discus developed systematic develop systematic analyse pool identify initial relevant attribute derive attribute generalization iterative refinement facilitate analysis relevant online spreadsheet goal categorize building research rqs refine systematic iterative approach classification scheme developed apply described rqs correspond attribute aspect attribute fifth indicates attribute multiple selection RQ contribution correspond multiple classify contribution contrast RQ research correspond classify research systematic developed    multiple  approach contribution pedagogical approach ware proposal propose specific education gamification education status overview trend empirical contribution  mapping cluster topic author  author later  research proposal informal evaluation empirical review  mapping data source evaluation survey interview  mapping research hypothesis  hypothesis  data activity generic software criterion knowledge automation execution evaluation activity  mapping context  statistic independent integration across approach independent program SE across program  mapping  purpose evaluation across   data theory theory software  theory purpose  raw text empirical evidence finding challenge  challenge  cod systematic review empirical evidence finding insight  insight  cod systematic review research rigorous proposal proposal educational implement professionally research informal evaluation empirical increase maturity mention  conduct review opinion survey graduate curriculum knowledge gap software approach rqs sub rqs extract data rqs address classification rqs address simply merge extract data RQ RQ RQ concern educational statistic report RQ RQ sophisticated approach analysis qualitative cod systematic qualitative data analysis approach synthesize challenge insight education report rqs RQ RQ evidence synthesis approach systematic literature review qualitative cod approach explain data extraction data synthesis classification scheme developed conduct pilot data extraction phase researcher extract data peer review extract data validate refine data extraction approach ensure homogeneity member ensure quality analysis pilot phase partition pool researcher researcher extract analyse data subset assign researcher extract data spreadsheet additional comment explicit classify attribute specific image KB image screenshot online repository goo  snapshot online spreadsheet enable collaborative classification traceability comment snapshot classification RQ research researcher comment facilitate peer review quality assurance data extraction afterward peer review phase researcher data extraction conduct systematic peer review researcher peer review analysis extraction disagreement discussion conduct ensure quality validity synthesize reporting challenge RQ necessarily report challenge actually challenge report junit complicate subjective interpret actual challenge therefore synthesize report challenge report reporting challenge necessarily advocate challenge address rqs RQ conduct qualitative cod data synthesis carefully review research synthesis guideline SE SLRs conduct synthesis accord objective research synthesis evaluate heterogeneity appropriate integrate interpretive explanation primary report respect intervention quantitative outcome variable meta analysis applicable examine conclude applicable RQ qualitative cod axial cod initial screen extract data challenge insight initial emerge challenge accepted qualitative data analysis initial challenge insight expand factor emerge creation factor cod phase iterative interactive conduct researcher peer review others basically factor related rqs aim factor accurately extract item detailed useful overview chose suitable abstraction recommend qualitative data analysis guideline screenshot datasheet qualitative cod RQ challenge report challenge extract grouped raw challenge software engage ensure effective sufficiently maintain appropriate complexity cod raw category remove raw cod consume raw data cod category visualize image KB image screenshot datasheet qualitative cod data RQ challenge finding SLM rqs RQ classification contribution RQ consists RQ RQ RQ contribution frequency classification contribution structure systematic multiple contribution classify category automate implement python program explain pedagogical principle underlie transcend marked pedagogical approach propose specific image KB image classification contribution contribution pedagogical approach pool propose specific education pool ware proposal pool discus summary category refer category multiple within pedagogical approach category discus introduce software reporting benefit introduce introductory program emphasis qualitatively beneficial introductory java challenge introduce impossible understand without program depth program factor software cod project limited multiple pool therefore recommend source project OSS software project software witness significant increase enthusiasm software discipline OSS project code achieve code fellow motivate bug code motivate bug bug expose failure develop program within pedagogical approach category multiple suggestion increase motivation software motivation simply evaluation criterion software code directly benefit suite simply suite quality grade software topic inexperienced programmer educator specific environment TDD introductory  pre define specification implement developed software education multiple associate ware proposal category description module software involve evaluation lesson deliver valuable information educator software exist building URLs access software laboratory  description lab software within description objective activity involve along evaluation entire repository available online url gamification increase motivation software educator introduce typical gamification reward badge leader environment gamification achieve educational halo highly addictive socially optimize software engineering code defender  physical bug hide seek within empirical category report investigation perform software education environment report achieve improvement adjustment improvement code quality introduce program conceptual understand software introduce software computer assistant education  within category investigation software behaviour quality authentic defect detect software behaviour exhibit introductory computer code coverage alone code mutation analysis fix code coverage assessment status overview trend category investigate software education australia canada america hong kong africa brazil abroad graduate knowledge gap software accord conception within category taught described deficiency topic activity negative gap topic web application functionality generation client requirement user RQ cluster topic author extract data pool regard topic author involve insight easily recognize link described artefact substantial amount   web code defender   web repository software tutorial  environment objective online portal increase user academic institution currently access vet tutorial software integration program subsequent insight repository software education  evolve collaborative environment social networking feature ability award virtual social interaction environment sep  software engineering program  environment within pool involve web web web application plug architecture variety service grader plug highly configurable customizable automate grade assessment service motivation web encourage adhere driven development TDD adaptive feedback submit code multiple automate feedback submission feedback analysis code style correctness quality correctness calculate percent instructor obscure pas code quality code coverage percent statement conditionals execute additionally web highlight code reveal coverage lack feedback code  web without punishment submission web insight behaviour behaviour feedback web recent cluster involves mutation code defender implementation detail educational purpose software subsequent empirical data actual integrate software module duel consists attacker defender compete fashion traditional battle consists defender attacker without attacker code editor introduce artificial fault resembles mutation artificial defect automatically initial report promising enjoy improve software RQ classification research SLMs classify primary research structure systematic establish review guideline classify proposal approach education explicitly mention informal evaluation empirical proposal although author apply approach author active educator implicitly approach categorization research interpret evidence report empirical generally rigorous evidence breakdown relate research hierarchy evidence software engineering research propose detailed hierarchy evidence hierarchy attention hierarchy evidence software engineering research propose  research secondary filter  review recommendation meta analysis primary   analytic rigorous derivation proof quantitative empirical careful experimental statistical observational  qualitative empirical survey sample data mining multiple project analysis project comparison prototype notation dataset another artifact certify usable others informal evaluation project objective review specific project lesson specific validate context depth report notation dataset  artifact  thumb evaluation toy novel argumentation proposal approach education explicitly mention RQ data source evaluation data source evaluation classify frequency data source majority data via survey data evaluate approach survey easy perform analyse source furthermore survey regular evaluation usually feedback image KB image data source evaluation data practical exam evaluation conclusion production code automate developed ass  status submission quality implement software metric evaluate impact education code defect per code gain understand impact interview report series interview project conduct interview consume perform survey analyse data source online quiz RQ research hypothesis analyse rqs hypothesis review quantify explicitly investigate rqs hypothesis complement another indication amount research conduct software education rqs investigate others explore contrast research direction research future explicitly rqs hypothesis fifth review constitute research software education identify rqs hypothesis rqs hypothesis summarize vast majority investigate rqs hypothesis rqs numbered sequentially although denote null hypothesis clarify item additional contextual information parenthesis research hypothesis investigate  RQ integration sep  significant quantitative impact program knowledge gain RQ sep  related assignment align learner understand underlie program concept RQ exist  TDD approach RQ credit TDD quality feedback grade RQ TDD approach affect amount spent project code RQ quality code respect acceptance RQ developed TDD approach impact RQ invest expensive euro physical infrastructure really creates substantial positive ST RQ critical overcome non technical background CS really focus RQ knowledge gap topic graduate respect RQ improve quality computer interaction project RQ introduce additional ensure positive RQ potential regression model potential mitigate alternative hypothesis significantly pre average pre objective described description pedagogical approach RQ CS assignment lab really improve code quality RQ CS enjoy RQ CS enhance RQ attitude accept non traditional educational module positive accept traditional RQ training non traditionally educational module behave uniformly fault detection rate training traditionally module difference fault detection rate uniformity training non traditionally module training traditionally module quality program program specification RQ peer effective individual construction RQ peer efficient individual construction RQ participation performance agile RQ quality actually ass behaviour checked RQ practical obstacle identify quality educational RQ resolve obstacle apply classroom RQ approach appropriate assignment RQ assignment RQ combination approach hybrid separately evaluate assignment variable amount freedom RQ bug software competition bug  web software competition RQ recommend future software bug  RQ report increase computer RQ suggestion improve bug  hypothesis software security technique typical software CS classroom expand program toolset equip tackle program task RQ submission unique submission defence program attack program assignment introductory security RQ multiple attack benefit performance acquire submit multiple attack submission RQ account difference max overall saq saq attack quality overall ability attack monitor RQ attack defense ability correlate RQ checked coverage coverage indicator suite quality alternative accurate predictor suite ability detect fault RQ reasonable educational context RQ bug RQ variation software RQ quality regard motivation user educational address topic functional structural mutation RQ usability RQ relative RQ education appropriate content relevancy correctness difficulty engage RQ strategy software RQ enable inhibit factor factor methodically factor hinder RQ attitude methodically RQ  incorporate engineering RQ mutation criterion facilitate novice program RQ offs recommendation mutation program RQ ST knowledge developer improve program deliver reliable implementation RQ ST knowledge impact effort invest developer implementation RQ ST knowledge impact complexity code RQ beneficial service successful RQ extent technically challenge cse online RQ significant difference performance technique RQ exist noticeable relationship technique RQ importance program background apply technique RQ influence gender factor software assessment RQ various strategy affect exam software rate importance correspond strength positive correlation rate helpfulness adherence behavior positive correlation likely adhere TDD principle rate TDD helpfulness positively program anxiety accord  adhere principle TDD program anxiety rate web helpful evaluation anxiety accord  rate web helpful RQ engage code defender compete code introduce fault attack defend reveal fault RQ performance improve RQ engagement correlate exam grade RQ appreciate code defender RQ technology RQ issue related RQ goal evaluation software constructively align RQ CS program exposure related quality generate undergraduate graduate RQ availability knowledge code coverage positively impact increase propensity improve quality suite RQ increase code coverage increase bug RQ  useful resource technique RQ  collaborative experimental significantly average  average coverage  average per experimental plugin web adaptive feedback adhere incremental experimental significantly project correctness coverage experimental average  average coverage increase relative average  average coverage trend perception helpfulness positive correlation report adherence behavior experimental helpfulness behavior significantly experimental significantly  project anxiety relative  negative evaluation experimental respond positively TDD future RQ TDD integrate program minimal effort instructor RQ grade code RQ TDD quality code productivity program increase mutant program code coverage RQ strength weakness mutation analysis code coverage metric RQ mutation analysis meaningful grade suite request program assignment RQ popt obtain implementation traditional approach blind popt orient program approach novice RQ adopt popt submit version traditional approach RQ popt programmer deliver implementation traditional programmer RQ mistake software RQ software topic hardest RQ helpful RQ towards habit software project introductory program RQ implement highly automate manner RQ effectiveness detection defect affected cve cve collaborative virtual environment RQ code coverage motivate improve suite RQ generate code coverage subsumes relation coverage statement coverage coverage subsume statement coverage RQ  useful resource technique RQ feature  collaborative  perform program task traditional static lab web ide lab lock aspect traditional static lab mutation grasp relevant mutation concept become software developer tester quality software propose  novice programmer increase quality program suite RQ cod  methodology TDD improve code coverage solo program RQ cod  methodology improve motivation TDD solo program RQ  RQ impact inexperienced code RQ RQ ST knowledge developer improve program deliver reliable implementation RQ ST knowledge impact effort invest developer implementation RQ ST knowledge impact complexity code code correctness instructor significant difference performance program assignment ass effectiveness web TDD variety rqs evaluate previous classification rqs exploratory rqs relationship rqs causality rqs rqs suggests considerable amount empirical data report previous research initial synthesize evidence comprehensively synthesize evidence related rqs RQ technical aspect activity RQ ass activity educational acknowledge primary sub taught clearly educator publish education activity RQ aim activity primary review recognize issue generalizability analysis RQ classify activity model previous classify accord summarizes frequency activity activity approximately examine generic software automation execution relatively evaluation investigate instance evaluation important function script investigate subsume within automation alternatively understood clerical administrative activity image KB image frequency activity image KB image overview typical software activity RQ educational mention instance basis publish summarize data histogram instance instance evaluation data semester program assignment submission impressive dataset average instance report across instance image KB image histogram offering RQ acknowledge primary sub taught RQ RQ aim educational setting primary review report enrol summarizes per boxplots report clearly outlier report nearly china enrol visualize boxplot without outlier image KB image boxplots enrol data exclude outlier RQ approach education offering integrate software taught distinct software integrate classification image KB image frequency taught across program relative balance approach education nearly dedicate software however taught regular program approach advantage disadvantage dedicate software resource complex detail software tedious RQ dedicate challenge motivate lack opportunity appreciate software furthermore easily forgotten simply practical alternatively integrate due constrains curriculum practical software relevant throughout core viable dedicate software author argue conclusion software incorporate curriculum software across program already program introduce sequence program integrate reinforce across program delegate software become task throughout curriculum approach systematically apply across curriculum inherent program activity participate challenge immediately apparent instructor junit integrate across computer curriculum educator researcher investigate innovative approach integrate program software engineering SE educator adopt approach ensure technique previous RQ theory theory software education previous research argue importance adapt theory CS SE education increase research rigor   argue CS education research understood dimension argumentation theory empirical evidence   develop diagrammatic representation  quadrant relationship theory evidence version diagram reproduce image KB image diagrammatic representation CS education  quadrant argument empirical evidence quadrant   argue quadrant empty ideally evidence argument publish quadrant denotes mainly evidence weak argumentation theory descriptive mostly   argue CS education literature finally quadrant theory evidence   argue CS education research belong quadrant image KB image challenge education   RQ explores theory theory software education data extraction theory education clarify technical theory SE software theory neither theoretical concept graph theory focus theory related educational aspect surprisingly pool theory instance theory popular educational theory constructive alignment theory theory review pool   theory cognitive load theory theory construct pedagogy effectively awareness limited amount information memory  initial investigation impact integrate software principle fundamental program apply cognitive load theory constructive alignment theory constructive alignment principle devise activity assessment task directly address intend outcome typically achieve traditional lecture tutorial examination concept constructive alignment learner construct meaning teacher deliberate alignment activity outcome utilized constructive alignment theory demonstrate continuously concrete expectation code development adapt semester theory zone proximal development distance actual developmental independent potential development adult guidance collaboration capable peer challenge education task challenge explore application appropriate approach maintain learner within zone proximal development constructivist theory theory belief occurs learner actively involve meaning knowledge construction experimental software constructivist theory diffusion innovation theory describes innovation perceive adopt individual organization diffuse social regard taught alongside program adopt behaviour immediate guaranteed benefit expose novice junior developer adopt constructivist theory definition  discovery theory discovery inquiry instruction discovery learner discover relationship CDIO educational theory conceive implement CDIO initiative educational framework stress engineering fundamental context conceive implement operating implement software theory theory cooperative cooperative educational approach aim organize classroom activity academic social social interdependence theory important ensure member actively participate practical achieve goal theory cooperative explore scholar cooperative strategy improves essential cooperative positive interdependence achieve positive interdependence structure practical member specify role role link CDIO theory definition author developed software CDIO characteristic project focus teacher target situation software education literature therefore literature CS education accord argument     recommendation argue theory future software education RQ empirical evidence finding organize RQ RQ RQ discus sub subsection RQ challenge education extract discussion challenge report respective qualitative cod synthesize qualitative data explicitly challenge identify text synthesize reporting challenge necessarily report challenge actually challenge report junit complicate report challenge source report challenge without advocate efficacy challenge challenge organize category relate instructor instructor discus challenge category challenge extract qualitative descriptive data challenge education important attention empirical evidence extract report correspond challenge important report challenge indeed empirical evidence already classify research accord category proposal approach education explicitly mention informal evaluation empirical analyse data subset report challenge  subset accord research image KB image  accord empirical evidence reporting challenge education challenge reporting evidence challenge report author mention challenge incorporate experiential ensure negative bias discover benefit functional author observation categorization research interpret increase evidence proposal explicitly mention empirical report empirical generally rigorous evidence challenge reporting synthesize challenge education empirical conduct reporting challenge explicit empirical evidence discussion although author apply approach author active educator implicitly approach challenge related instructor accepted motivation challenge software software response survey report review uncommon software described tedious boring software engineering related discipline interested develop software interested systematic developed derive satisfaction program derive satisfaction expose flaw program observes challenge  stigma software maintenance  alliance arguably favour task within realm software cycle software engineering typically dislike tangential really develop document address requirement construct conform aim software education challenge lecturer instill desire topic encourage specific discipline related challenge automate library easy earlier challenge beginner struggle program concept become overwhelmed software conduct automate software automation knowledge program impossible understand without program depth program factor program intensive activity program  program aspect furthermore although nowadays complex lack easy unfortunately instructor frustrate lack appropriate increase cognitive load another factor affect attitude software increase cognitive load TDD naturally observation research impart TDD compute curriculum challenge increase technical cognitive load reflect program harder additional syntax express argue software CS particularly challenge besides program structure peculiarity specific technique software challenge related instructor challenge related alignment industrial theory recognition software practical industrial ongoing challenge remain align recognize challenge educator perspective date novelty realistic report concept taught theoretically practical practical knowledge develop habit although taught practical forgotten correctly however complain software education theoretical lack practical scenario concept apply software impact medium approach simply intrinsically practical activity disconnection theory issue complexity warrant complex overwhelm software project source repository implement instructor project software education trivial issue complexity aspect realism software conduct software perceive irrelevant due program task rigorous costly beneficial project usually software engineering another develop software program significant graphical user interface beyond ability typical educator cod program function fully understand benefit necessity software perceive irrelevant due program task rigorous costly beneficial project usually software engineering issue related learner constant concrete feedback improve performance throughout development assignment recognize respond differently ability weaker continuous feedback prefer freedom resource constraint recognize resource constraint impact delivery assessment software program cite limited preparation instruction barrier software challenge evaluate assignment within limited override challenge usually topic software challenge related assess author recognize challenge assess software recognise negative gamification assessment express concern around opportunity instructor ass quality software correctness program mention avoid tendency approach assignment tick fashion recognise assessment technique automate grade evaluate software imperfect observes grade effort effort instead approach code coverage implement code coverage alone satisfactory quality assertion output issue detect code coverage alone advanced technique mutation regard unfortunately outside specialist unsatisfactory explain mutation widespread dire evaluate quality automatically educator limited evaluate assignment evaluate manually viable challenge evaluate assignment within limited challenge related integrate software report challenge related integrate software mention program compulsory program constraint practical software argue discussion undergraduate complicate software related undergraduate program goal priority program CS computer engineering SE information emphasize aspect software amount available devote SE issue furthermore mention split specific curriculum author challenge optimal progression SE structure regard software report critical issue integrate program foundation appropriate feedback evaluate performance challenge report challenge classify challenge category report challenge mention textbook automation unfortunately definitive theory software engineering exists unlike theoretical concept underpin computer amenable mathematical descriptor mention programmer thoroughly program fault psychological program ego RQ insight observation recommendation education analysis challenge education extract insight observation recommendation effective important insight observation recommendation education evidence define english insight capacity gain accurate understand something someone report understanding discussion extract qualitative descriptive data insight education important empirical evidence extract report insight classification proposal approach explicitly mention empirical analyse data subset report insight  subset accord empirical evidence proportion insight reporting empirical evidence derive insight report author conduct empirical analyse program project interview academic finding identify potential influence behaviour empirical insight express particularly  driven development TDD confident program proximity frequent association debug within mental model fix proactively avoid adopt behaviour mental model image KB image  accord empirical evidence derive insight education synthesize extract data insight observation recommendation qualitative cod insight observation recommendation percentage reporting challenge text identify subset qualitative cod insight image KB image insight observation recommendation education survey insight software regard address previously challenge category insight observation recommendation related introduction approach technique evidence effectiveness improve outcome briefly review category category insight evidence effectiveness approach introduction approach technique evidence effectiveness improve outcome report evidence reuse introductory program increase quality program generate motivate apply software development program another report evidence defensive program effective attack program converse pedagogical emphasis defensive security benefit emphasizes offense report empirical evidence favour formal training software CS program insight related address motivation earlier tedious boring attitude influence attitude assessment report emphasis extrinsic motivation grade educator report initiative implement seek attitude software improve gamification promising initiative improve activity appropriate mindset software educator report benefit software peer report easy convince programmer someone code convince code report code motivate bug bug expose failure develop program report peer review peer attempt code peer potential address competitive software guest lecture beneficial motivate assignment directly benefit suite simply suite quality grade insight related behaviour related motivation behaviour mental model purpose software motivate adapt behaviour software apply situation report proximity frequent association debug within mental model fix proactively avoid adopt behaviour mental model report software tends towards reflective approach program away trial error approach  stellar performance examination transfer knowledge beyond classroom investigation identifies mistake topic hardest helpful insight related delivery assessment author delivery assessment inevitably connection software meaningful encourage adopt appropriate mental model behaviour effective efficient software earlier identify proportion report proposal software proposal delivery assessment abstraction reflect previous content extent theory software another content related report imperative limit scope depth software computer background insight approach adopt previous vehicle assessment software identifies frequently previous observation applies widely despite weakness indispensable software engineering without advise popular widely education configuration environment insight related integrate SE program already contrast software integrate software particularly program illustrative quote tend compartmentalize knowledge transfer situation incremental introduction activity insert manner disrupt compromise content integrate software education discipline along CS undergraduate perspective taught program purely orient project focus software development educator additional solely focus insight practical author appreciate scenario software motivate ensure gain relevant relevant notable perspective majority understand prof understand software significant difference software claimed another opportunity technique individual insight specific driven development TDD recurrent topic analyse driven development TDD although application widespread educator investigate useful software TDD application opinion TDD education mixed educator report positive TDD TDD useful education timely feedback development assignment focus introduce TDD multiple positive outcome extremely positive express appreciation practical benefit TDD program assignment challenge TDD didactic particularly struggle TDD approach almost backwards TDD naturally aspect TDD garner resistance TDD knowledge framework understand refactoring unlearn habit development rigorous evaluation purport benefit TDD yield mixed TDD beneficial didactic purpose educator introduce TDD aware challenge properly address insight textbook hint textbook mention pre reading appropriate textbook facilitate recommendation education importance textbook insight addition specific insight software author occasionally comment educate patience reinforcement incremental development continuous refactoring eventually focus instead application project within dramatically improve teamwork communication capability development project management capability lesson math background relate challenge insight understand challenge insight related analyse semantic relationship challenge insight visualize relationship challenge insight clearly relate affect introduce increase realism software increase complexity increase cognitive load resource instructor therefore reduce resource available effectively ass image KB image relationship challenge insight rectangle insight pink rectangle challenge discussion summarize research finding discus implication recommendation educator suggestion education research finally discus potential threat validity review recommendation educator knowledge software education review educator researcher synthesize evidence educator software valuable challenge educator insight address challenge recommend educator review challenge insight address challenge important decision SE related undergraduate program integrate across typically program review advantage disadvantage associate approach therefore recommend educator curriculum designer suggestion SLM primary cite appropriate decision context rqs investigate suggestion educator RQ activity taught criterion exploratory contrast exploratory popular research report benefit exploratory recommend coverage exploratory software education clarify software educator publish education effort review sample education therefore partial lens software education investigation rqs emergence framework software aspect framework multiple dimension choice theory versus choice pedagogical approach enable educator systematically deliver framework propose CS education research aware education SLM insight task recognize framework future comment challenge insight recommendation delivery assessment encourage educator synthesize challenge insight address widely challenge accepted educator recommend seek motivate software attitude towards expectation software suggestion education research research software education understood researcher seek understand software education whilst seek educate become software tester odd rqs opportunity replication extension research research across spectrum motivate engage actively software mental model appreciate software additional metric developed educator ass quality software beyond code coverage conceptual surprising pool education theory ratio literature CS education education theory future software education potential threat validity SLM threat validity slr SE literature potential issue data extract limitation important bias apply exclusion inclusion criterion threat standard classification literature internal validity systematic approach precise inclusion exclusion criterion described however potential threat relevant article mitigate minimize threat google scholar scopus snowball therefore relevant sample rate negligible inclusion exclusion criterion application affected bias researcher judgment minimize threat joint voting peer review author furthermore RQ RQ SLMs  primarily explore occurrence phenomenon unless issue primary explore exist knowledge phenomenon consequently neither RQ RQ aim globally generalisable activity instead rqs focus primary review generalizability implication relate rqs treat carefully issue SLMs SLRs specific conclusion validity conclusion validity literature review assert conclusion rigorous repeatable treatment ensure conclusion validity related primary author review terminology define schema avoid ambiguity data extract primary author peer review another author mitigate bias disagreement author resolve consensus researcher systematic approach described procedure ensure replicability strengthen likelihood deviation classification decision external validity comprehensive review software education overall finding within software education intention generalize beyond conclusion future conduct systematic literature mapping SLM identify software education SLM classification synthesis challenge education insight education index contribution benefit educator delivery assessment software setting foundation previous research inform conduct research software software education compile initial pool apply inclusion exclusion criterion reduce pool SLM demonstrates software education active increase research pedagogical approach ware specific education propose challenge insight software identify future direction finding SLM software evaluate finding finding SLM previous review review software education training per conceptual diagram finding SLM develop flexible framework enable software educator evidence SLM assess extent SLM classification synthesis data SLM opinion sample appropriate beneficiary educator software education researcher derive guideline synthesis literature conduct synthesize evidence review conduct preliminary SLM whilst encourage report software education encourage community seek conduct rigorous evaluation intervention  curriculum