data parallel compute spark usually consists multiple computation stage inter stage communication coflows effort schedule coflows independently combination coflow schedule schedule however prolong average completion JCT due conflict propose abstraction schedule coBranch dependency computation stage coflows consideration schedule coflows jointly besides mainstream coflow scheduler preserve coflows priority prioritize priority preserve constraint incurs inter parallelism overcome employ urgency mechanism schedule coBranches aim decrease average JCT enhance inter parallelism implement urgency coBranch schedule BS apache spark conduct prototype evaluate performance shortest critical fifo achieves around percent reduction average JCT respectively simulation google trace performs reduces JCT percent respectively introduction accelerate data analytics data parallel framework dryad hadoop spark partition input data multiple computer data partition concurrently framework data parallel usually consists multiple computation stage stage batch computation task workflow data parallel acyclic graph dag node denote computation stage stage interconnect arrow arrow indicates communication stage output upstream stage input downstream stage inter stage communication involves parallel data transfer multiple task machine multiple reduce task reduce task receives data execute parallel data coflow dag data parallel transmission multiple coflows incurs considerable communication previous coflow scheduler propose optimize schedule coflows schedule calculate execution priority decrease completion JCT scheduler schedule coflow schedule optimization goal schedule previous research schedule developed independently however schedule disagreement scheduler prolong average JCT scheduler prioritizes computation resource allocate priority however coflow scheduler prefer transfer coflows computation task execute priority coflows transmit prolong JCT contrary average JCT decrease percent scheduler coordinate transmission coflows execution schedule detail motivation mainstream coflow schedule employ critical CP schedule intra coflows inter coflows coflow scheduler preserve another coflows prioritize however preserve constraint reduces inter parallelism demonstrate illustrative combine schedule coflow schedule formulate coordinative schedule coordinative schedule schedule coflows grain manner suffers complexity increase exponentially computation task coflows increase propose abstraction coBranch coordinate coflow schedule schedule data parallel coBranch comprises computation stage coflows disjoint dag regard coBranch schedule variety DAGs potential enhance inter parallelism dag variety involves fold multi completion critical DAGs difference completion coBranch shortest coBranch various owe various DAGs coBranches exhibit diverse urgency schedule urgency indicates maximum delay coBranch define definition inspire leverage urgency global priority schedule coBranches urgency schedule mechanism coBranches urgency prioritize although belong effectively enhances inter parallelism sum propose urgency coBranch schedule BS schedule coBranch BS estimate urgency coBranches calculates schedule preference coBranches pack coBranches iteratively employ distribute schedule schedule coflows accordance schedule preference coBranches implement extend module apache spark deployed lab cluster server contribution summarize formulate coordinative schedule data parallel consideration dependency communication computation urgency BS aim decrease average JCT theoretically approximation ratio heuristic BS specific propose distribute schedule coordinate transmission coflows execution coBranches expand BS online batch online BS priority coBranches update urgency execution continuously schedule decision organize background coflow schedule schedule data parallel illustrate schedule disagreement formulate coordinative schedule define coBranch abstraction illustrate motivation urgency schedule mechanism define coBranch urgency propose BS distribute schedule theoretical performance bound expand BS online implementation apache spark platform evaluation extensive concludes related schedule data parallel prior achieve tradeoff fairness latency data parallel dominant resource fairness generalization max min fairness multiple resource  overcomes latency scheduler classical schedule capacity schedule  queue guarantee fairness multiple tenant cluster focus fairness resource allocation optimization goal aim accelerate data parallel coordinate transmission coflows execution schedule optimize computation data parallel via effective computation schedule strategy involve various optimization goal JCTs throughput resource utilization shortest SJF prioritizes shortest execution specific schedule semi clairvoyant schedule propose data parallel partial prior information besides adaptive technique online schedule data application machine tetri propose schedule computation task constraint multiple resource graphene propose pack task constraint dag dependency  minimizes average JCT altruistic manner pack task  nevertheless performance shortest average JCT hence adopt SJF baseline exist schedule hardly transmission coflows incur communication overhead data parallel propose BS  schedule transmission coflows execution finally decrease average JCT coflow schedule conventional schedule  optimize transmission data perform badly decrease transmission coflow author propose coflow abstraction aim schedule data entirety effective bottleneck SEBF propose decrease average coflow completion transmit coflow bottleneck minimum coflow completion  task schedule decentralize manner recent coflow schedule allocate transmission rate coflows datacenter fabric aim decrease transmission completion improve network throughput swallow introduces coflow compression mechanism decrease transmission data data intensive application nevertheless motivation aim decrease transmission coflows JCT data parallel multi stage coflows mainstream coflow schedule employ critical schedule multi stage coflows CP prefers transmit coflows dag varys adopts SEBF schedule intra coflow data proposes CP handle inter coflow dependency  employ variant CP schedule preference multi stage coflows nevertheless coflow scheduler preserve multiple execute concurrently priority determines schedule inter coflows owe preserve constraint coflows priority prioritize priority incurs inter parallelism propose urgency BS priority coBranches priority coBranches distribute schedule prioritizes coflows urgent coBranches enhance inter parallelism coordinative schedule introduce coordinative schedule define coBranch abstraction model coBranch duration motivation coordinative schedule mechanism illustrative schedule reveal disagreement shortest effective bottleneck SEBF coflow schedule however schedule decision data schedule coordinative manner illustrative SJF prefers schedule shortest however data shortest delayed owe SEBF JCT prolong besides illustrate coordinative schedule decrease JCT coordinate execution transmission coflows illustrates dag data parallel denote data transfer task another task execute machine assume machine interconnect via non network fabric data data transmission data consumes bandwidth transmission data amount bandwidth worth parallel data sum transmission besides execution computation task transmission coflows computation task dependent data data regard coflow illustration coflows computation task rectangle denotes computation task label execution bold denotes data label transmission illustrative potential disagreement effective bottleneck SEBF shortest SJF execute machine machine computation thread abbreviate comp communication thread abbreviate comm arrow data task indicates task dependent data arrow task data indicates data generate output task SJF independently SEBF JCT respectively sum execution task transmission data indicates completion similarly sum execution task transmission data JCT shorter SJF prefers execute task execute priority data locality remain task assign respectively task assign coordinate communication schedule computation schedule JCT respectively task data transmit data regard coflow task dependent transmission besides machine receives data data task execute data regard coflow minimum coflow completion completion SEBF prefers transmit execute task however schedule decision SEBF delay schedule task although priority SJF JCT prolong JCT respectively contrast illustrates coordinative schedule mechanism machine receives priority accelerate execution task rapidly JCT respectively sum coordinative schedule mechanism decrease JCT around percent average JCT comparison average JCT reduction average JCT around percent sum data schedule without execution schedule disagreement schedule coflow schedule prolongs completion propose abstraction coBranch schedule data accord urgency coBranches coBranch priority data consistent coBranch computation task coBranch schedule priority data computation task dependent prefer transmit formulation formalize coordinative schedule combine coflow schedule schedule batch denote jth stage ith denote dependency stage dependent otherwise stage independent task execute data data task dependent regard coflow denote assume execution task transmission data coordinative schedule execute task transmit data objective function   sourcewhere  denotes completion ith optimization goal constraint   source  source  SourceRight click MathML additional feature SourceRight click MathML additional feature source source source NC source source source NB source constraint denotes completion computation stage constraint define JCT ith completion stage completion coflow respectively constraint denotes data constraint data transmit dependent task constraint task execute dependent coflow constraint restrict variable task execute otherwise constraint task maximum cpu core denote NC similarly constraint restrict variable data transmit otherwise constraint denotes transmission rate data constraint sum transmission rate data task bandwidth denote NB regard coordinative schedule coflow schedule constraint schedule proven NP coBranch abstraction scheme schedule data computation task grain manner however complexity unacceptable task data increase stage stage task task downstream stage fetch data task upstream stage complexity coordinative schedule exponentially increase propose coBranch semantic prevents schedule disagreement illustrate decrease complexity coordinative schedule definition coBranch DAGs coBranch consists sequential stage coflows disjoint dag illustrative dag multiple coBranches intra coBranch stage intra coBranch coflows schedule serial exhibit consistent priority contrary computation stage coflows belong coBranches multi inter coBranch stage inter coBranch coflows schedule parallel fashion priority differentiate schedule priority parallel coBranches prevent transmission coflows priority coBranch impedes execution computation stage priority coBranch dag data parallel stage stage lineage output stage input stage coBranch resource allocation stage stage allocate collection machine output stage locally stage execute input data stage  fetch local machine coBranch abstraction data locality algorithm analyzes dag data parallel construct coBranches coBranch synchronization dag node denote stage data parallel algorithm hop node dependent node denote node construct coBranch node coBranch function backtrack recursively dependent node node along node function synchronize construct coBranch synchronization node node indicates execute node complexity algorithm linearly correlate node algorithm dag analyze dag stage ensure coBranches coBranch synchronization node node coBranch backtrack node synchronize function  node construct coBranch synchronization ith node coBranch  backtrack  ith node function  coBranch dependent multiple node node synchronize dependent node backtrack dependent node return model coBranch duration calculate average task per computation thread approximate stage duration denote duration lth task jth stage ith denote worker thread execute task stage thread execute task sum task stage average task thread coBranch stage coBranch duration BD approximate sum stage duration BD source task duration  equation predict task duration prediction task duration remains discus promising approach prediction iterative pagerank machine application considerable cluster workload significant percent iterative kmeans regression computation task execute periodically task duration iterative predictive iteration increase dit denote task duration ith iteration task duration iteration series  iteration increase series auto regressive integrate average ARIMA model performs prediction accuracy ARIMA model predicts future iteration observation task duration worthy prediction approach replace BS urgency coBranch schedule owe coordinative schedule propose coBranches avoid schedule disagreement unfortunately exist schedule strategy longer effective schedule coBranches propose urgency schedule mechanism schedule coBranches theoretical performance bound motivation urgency coBranch schedule critical mainstream coflow schedule aim handle inter coflow dependency however preserve illustrates drawback CP preserve constraint DAGs coBranches simplicity assume cluster resource execute coBranches concurrently submit respectively partial resource marked available owe preserve constraint parallel coBranches execute concurrently inter parallelism critical CP heuristic simplicity assume cluster resource execute coBranches concurrently partial resource marked available enhance inter parallelism propose heuristic global priority coBranch heuristic judge parallel coBranches urgent prolong JCT illustrates heuristic prioritizes schedule prolong although execute similarly heuristic prefers execute prolong execute contrary prolong execute heuristic prefers execute sum incurs inter parallelism execute parallel coBranches concurrently propose delay urgent coBranches prioritize urgent coBranches coBranch urgency completion critical besides difference completion coBranch parallel coBranches various owe variety coBranches exhibit urgency schedule inspire urgency schedule coBranches via urgency metric avoid prolong average JCT calculate urgency coBranch crucial dag structure synchronization define definition coBranch synchronization dag multiple parallel coBranches connects downstream stage coBranch synchronization synchronization output coBranches aggregate input downstream stage downstream stage cannot execute output upstream stage synchronization significantly impact JCT synchronization usually multiple parallel coBranches execution parallel coBranches synchronization define urgency coBranch definition coBranch urgency synchronization consists coBranches urgency remain ultimate synchronization minus duration remain coBranches ultimate synchronization ultimate synchronization closest computation stage compose ultimate synchronization ultimate synchronization  calculate urgency remain ultimate synchronization denote schedule coBranches  schedule prior schedule ultimate synchronization duration accord definition urgency indicates ultimate synchronization later coBranch urgent coBranch urgency urgency execution exceed minimization urgency schedule preference coBranches intuitively prefer execute coBranch urgency however urgent coBranch performs badly urgent coBranch urgent coBranch execute urgent coBranches delayed prolong completion define exceed definition exceed denote coBranches respectively delay coBranch execute coBranch schedule exceed ET sourcewhere denote duration coBranch urgency coBranch respectively appendix computer society digital library http doi org ezproxy auckland TC lemma prof JCT critical plus exceed resource limited conclude schedule decision incurs exceed increase JCT inspire propose coBranch schedule minimizes average JCT schedule incurs exceed coBranch schedule overview workflow coBranch schedule BS utilizes urgency schedule strategy calculate schedule coBranches overview definition pending coBranches pending coBranch  immediately execute available resource pending coBranch dependent uncompleted coBranches non pending coBranch becomes pending dependent coBranches non pending coBranches cannot execute dependent coBranches unnecessary calculate schedule non pending coBranches contrary propose pending coBranches input BS feature effectively decrease algorithm overhead BS besides BS pending coBranches emerge BS  schedule preference important recalculation update urgency BS dynamic schedule applicable online scenario propose coBranch schedule distribute schedule dfs BS calculates schedule priority coBranches dfs schedule data transmit worker node accord schedule priority coBranches workflow BS submit online identify pending coBranches calculate duration urgency pending coBranches pack coBranches schedule coBranches schedule prefer schedule computation stage priority coBranches transmission data schedule coordinative manner via dfs coBranches pending coBranches update BS  schedule preference illustrative workflow BS coBranch schedule algorithm algorithm BS pending coBranches amount available resource input BS core BS incrementally generate schedule preference pending coBranches via multiple pack operation loop algorithm BS pack parallel pending coBranches enhance parallelism serial pending coBranches minimize exceed pack multiple pending coBranches coBranch combination amount resource cpu core bandwidth request coBranch combination exceed capacity available resource lemma update urgency duration coBranch combination lemma denote coBranch combination consists coBranches denote duration urgency urgency duration min max respectively submit pending coBranches amount available resource pending coBranches packed pack operation generates coBranch combination urgency duration calculate accord lemma coBranch combination generate pack operation schedulable denote algorithm operation generate schedule pending coBranches illustrative workflow algorithm schedule submit amount available resource maximum coBranches packed coBranch combination illustrative workflow algorithm schedule submit amount available resource maximum coBranches packed coBranch combination algorithm coBranch schedule pending coBranches amount available resource RC network bandwidth BC ensure schedule preference schedulable pack schedulable obtain coBranch combination BC BC schedule preference incomplete urgent schedulable calculate duration schedulable urgency RC BC calculate urgency obtain schedule preference shortest exceed return pack schedulable obtain BC BC definition operation denote duration urgency coBranches respectively coBranches operation generates schedule ET ET otherwise ET ET ET ET operation prefers schedule urgent coBranch schedule operation generates multiple schedule preference algorithm selects shortest exceed schedule preference shortest exceed picked operation algorithm determines pack operation repeatedly schedule preference pending coBranches algorithm terminates otherwise treat schedulable operation generates schedule preference incomplete algorithm schedulable lemma propose calculate urgency duration lemma coBranches duration plus urgency min algorithm pack operation generate schedule preference BS pack generates schedule schedule preference algorithm pack operation schedule preference indicates prefer execute execution schedule preference valid anymore resource marked grey becomes available pending coBranches BS  schedule preference resource available pending coBranches cannot packed operation schedule preference generate execute estimate complexity algorithm loop execute partial schedule preference generate pending coBranches loop terminates pending coBranches maximum pending coBranches complexity loop complexity loop schedulable schedulable consist pending coBranches coBranch combination BC BC pending coBranches packed complexity loop algorithm loop nest loop complexity algorithm propose online BS decrease complexity distribute schedule handle inter coflow dependency accord priority pending coBranches coflows priority coBranches prioritize furthermore distribute schedule coordinate transmission data coflows mention coflow consists data transmit concurrently data coflows trigger data fetch request computation task execute sends data fetch request worker node input data worker node handle request worker node sends input data task generates data algorithm distribute schedule network timeout tout schedule preference coBranches request identify coBranch ID request denote ID queue request queue tout communication thread sort request ID accord sort request queue communication thread incurs complexity schedule data via central controller implement dfs worker node schedule data distribute manner modify worker node data fetch request queue sort request priority priority request queue handle data fetch request handle correspond data priority data fetch request schedule preference coBranch data belongs algorithm dfs worker node manages data fetch request queue data fetch request handle worker node consumes communication thread data besides network timeout denote tout data fetch request tout dfs handle request performance analysis analyze performance bound heuristic BS discus performance improvement dfs approximation ratio BS explore performance bound BS schedule BS estimate upper bound JCT denote estimate bound JCT optimal schedule denote furthermore BS competitive via inequality theorem obtains coBranches ith denote coBranches RC denote maximum amount available resource denote resource request approximation ratio BS  source readability theorem detailed analysis proof appendix available online supplemental extension discus approximation ratio BS specific workload coBranches assume capacity available resource sum resource request  performance bound around sum approximation ratio BS characteristic workload coBranch profile amount cluster resource performance improvement dfs discus performance improvement dfs machine aspect PJ denote priority PC denote schedule coflows priority PJ moreover priority coflows PC    denote coflow machine data similarly  denotes coflow machine data PJ PC prioritize suffer schedule disagreement contrary machine suffers schedule disagreement PC PJ prioritize  denote coflow machine data similarly  denotes coflow machine data priority coflows PC   PC prioritizes inconsistent PJ machine suffers schedule disagreement performance improvement dfs completion coflows inconsistent priority  although data completion dfs transmit dfs decrease JCT performance improvement completion sum performance improvement dfs deterministic completion coflows conclusion performance bound dfs nevertheless PC PJ prioritize possibly concurrently execute schedule disagreement likely machine nice opportunity dfs promising avoid schedule disagreement increase online BS online non pending coBranch becomes pending dependent coBranches pending coBranches BS  schedule preference pending coBranches however execution algorithm consume unnecessary recalculation BS schedule preference pending coBranch emerges motivate online BS aim decrease computation overhead pending coBranch exist schedule preference online modification schedule impact performance decrease algorithm overhead algorithm online BS online BS pending coBranch denote  exist schedule preference assume exist schedule preference denotes ith schedulable online BS employ pack insert replace operation respectively schedulable pack  sum resource request  maximum remain available resource calculate ET denote exceed schedule preference schedulable insert exceed denote ET coBranch combination replace inner coBranches lbrace ldots rbrace denote coBranches replace theorem imposes constraint decrease exceed replace theorem coBranches   denote remain coBranches replace leq leq exceed schedule lbrace  rbrace algorithm online BS coBranch urgency schedule preference lbrace rightarrow ldots rightarrow rbrace amount available resource remain ET ET ET emptyset schedulable leq remain pack calculate ET insert calculate ET replace coBranch geq leq leq replace schedulable insert calculate ET ET min lbrace ET ET ET rbrace pack ET min lbrace ET ET ET rbrace insert replace replace insert insert operation extra exceed exceed incur replace operation denote ET exceed pack insert replace operation ET ET ET schedule preference exceed algorithm complexity loop schedule preference algorithm another nest loop complexity algorithm pending coBranches coBranches schedule hence complexity online BS pending coBranches approximately width dag online BS incur algorithm overhead implementation implement prototype BS extend module spark data parallel compute spark capable rapid iterative compute implementation illustrative implementation spark cluster spark cluster node centralize controller receives submission multiple driver allocates computation resource cpu core multiple worker node user submit driver driver generates dag data parallel supervises execution execute driver interacts node spark cluster submission resource allocation driver worker node worker physical server contains multiple java virtual machine executor obtain cpu core memory module driver data parallel submit driver analyzes dag cannot schedule straightforward duration unknown advance data parallel driver determines iterative stage analyze dag computation task iterative stage task completion driver specific apis task completion driver estimate coBranch duration mention coBranch duration evaluation module calculates coBranch urgency driver sends urgency coBranch duration implement BS algorithm node multiple execute concurrently manage driver centralize controller interacts multiple driver calculates schedule preference coBranches BS algorithm coBranch schedule computation stage belong priority coBranches execute allocates executor available resource prefer coBranches schedule coBranches successive computation stage parallel data dfs implement  schedule coflows coBranches  virtual server worker node  aim manage data fetch request spark worker receives multiple data fetch request request queue  handle accord modify  priority data fetch request consistent schedule priority coBranches coBranches BS  urgency uncompleted coBranches uncompleted coBranches become urgent priority correspond data fetch request increase schedule opportunity preempt dfs starve priority request performance evaluation conduct extensive evaluate performance BS spark cluster fifo adopt baseline shortest aim schedule shorter JCT priority adopt SJF baseline SJF inter scheduler besides recent coflow schedule adopts variant critical handle inter coflow dependency implement SJF CP shortest critical SJFCP prefers schedule JCT executes critical shortest average JCT mixed multiple artificial workload evaluate performance improvement BS workload increase besides BS online BS algorithm overhead online BS effectively decrease algorithm overhead artificial workload scenario evaluate performance BS production environment simulated google trace evaluation performance setting evaluate BS spark cluster consists server rack server equip intel xeon ghz core processor evaluate JCT reduction BS SJFCP fifo workload mixture typical spark pagerank logistic regression kmeans guarantee diversity coBranch duration workload input GB GB evaluation JCT improvement evaluate average JCT improvement factor dag batch increase plot percent improvement average JCT BS fifo JCT improvement factor BS SJFCP around percent cluster average JCT reduction BS fifo SJFCP respectively although average JCT increase BS advantageous schedule coBranches workload infer opportunity delay urgent coBranches prioritize urgent coBranches synchronization BS performs increase summary although workload artificial urgency BS achieves performance improvement detail understand detail schedule workload distribution coBranch duration workload artificial workload majority coBranches cluster comparison BS fifo shortest critical SJFCP artificial workload consists pagerank kmeans logistic regression submit batch increase cumulative increase performance execution schedule fifo gradually slows fifo SJFCP BS achieves shorter average JCT furthermore calculate JCT improvement factor workload JCT denote JCT fifo workload schedule fifo similarly JCT BS denotes JCT workload schedule BS JCT improvement factor BS fifo calculate align frac JCT fifo JCT BS JCT fifo tag align SourceRight click MathML additional feature JCT improvement factor workload JCT improvement factor BS fifo increase percent JCT improvement around percent similarly calculate JCT improvement factor BS SJFCP percent JCT improvement factor individual negative proportion around percent JCT SJFCP JCT BS nevertheless BS achieves shorter JCTs majority around percent SJFCP average JCT improvement BS SJFCP fifo percent respectively sum BS advantageous artificial workload evaluation overhead batch BS multiple BS algorithm overhead incur BS evaluate sum algorithm overhead demonstrate online BS effectively decrease sum algorithm overhead comparison BS increase sum algorithm overhead nonlinearly increase nevertheless algorithm overhead acceptable comparison JCT noticeable overhead incur online BS BS indicates pending coBranches dramatically increase BS repeatedly execute online BS effectively decrease algorithm overhead cluster algorithm overhead increase besides evaluate average algorithm overhead average algorithm overhead increase average algorithm overhead incur BS varies although overhead recalculation BS incurs considerable overhead online BS incurs average algorithm overhead average overhead almost delay execution pending coBranches schedule sum online BS effectively decrease average algorithm overhead pending coBranches emerge evaluation online performance submit multiple batch evaluate online BS continuously submit interval arrival poisson distribution average interval online submit cluster resource submit faster completion backlogged increase available resource allocate submit suffer nevertheless submit backlogged suffer completion completion becomes longer online offline fifo SJFCP online BS achieves JCTs advantage online BS evident increase advantage online BS becomes evident cluster online submit continuously average interval arrival evaluation prediction accuracy evaluate prediction accuracy execute workload spark cluster predict duration calculate prediction error align err frac pred meas meas tag align sourcewhere pred meas denote predict duration respectively average prediction error prediction model report prediction accurate prediction error grows prediction error stable percent prediction becomes accurate prediction increase infer execution iterative enhances prediction accuracy cluster workload execute continuously predict duration prediction error prediction increase prediction error prediction simulation google cluster data performance BS significantly impact characteristic workload artificial workload scenario evaluate performance BS simulated production environment replay google trace simulation BS performs trace workload achieves percent improvement average JCT analysis benefit BS delay urgent coBranches synchronization schedule urgent coBranches synchronization potential benefit BS characteristic workload infer beneficial schedule synchronization difference execution coBranch shortest coBranch data parallel calculate difference gap workload utilize distribution gap characteristic workload analyze data parallel estimate distribution gap google trace distribution gap gap around production environment majority JCTs majority JCTs usually gap nice opportunity BS delay gap prioritizes schedule JCTs delay exceed gap delayed prolong infer owe various gap BS beneficial simulated production environment artificial workload observation google trace simulation evaluate BS algorithm simulate execution dag google cluster data widely accepted data parallel benchmark simulation conduct computer equip intel core TM MQ cpu ghz GB ram workload google cluster data detailed task duration resource requirement machine constraint simulation extract task information task duration google trace around simulate execution simulated program faster trace google trace network transmission coBranch duration approximate task computation without coflow transmission although coordinate coflow transmission task schedule BS applicable simulation owe benefit urgency BS strategy simulation average JCT evaluate performance via trace replay submit within assign machine JCTs boxplot maximum JCT minimum JCT median JCT boxplot target inside boxplot denotes median JCTs BS achieves median JCTs fifo SJFCP BS completes faster SJFCP fifo simulation JCT simulated google trace JCT improvement BS SJFCP fifo percent respectively evaluate detailed JCT reduction JCT improvement factor BS SJFCP fifo JCT improvement around percent percent JCT improvement percent BS decrease JCT JCT improvement percent negative infer SJFCP completes around faster BS sum average JCT improvement factor BS SJFCP fifo percent respectively analyze various synchronization gap stimulate potential BS simulated production environment artificial workload  machine resource capacity important factor influence resource contention increase simulated machine average JCT average JCT decrease increase machine BS achieves shortest average JCT infer machine enhance performance BS simulation JCT BS SJFCP fifo  average JCT increase increase BS performs schedule BS beneficial JCT reduction BS increase simulation JCT coflow completion CCT  interval arrival submit rate performance scheduler backlogged submit batch span submit average JCT increase span submission increase average JCT BS shortest span submission increase nevertheless performance BS evident submit shorter interval simulation facebook coflow data evaluate coflow completion perform simulation facebook trace distribute schedule effective bottleneck coflow information facebook incomplete coflow facebook sender machine receiver machine transmit byte facebook trace information dag dependency simulation batch parallel stage dependency evaluate performance schedule schedule data execution stage scatterplot coflow completion CCT coflow trace majority data achieve reduction communication SEBF achieves CCTs dfs SEBF calculates minimum coflow completion MCCT coflows prefers schedule coflows  SEBF achieves average CCT SEBF decrease average CCT percent nevertheless dfs aim decrease average completion schedule data coordinative manner SEBF dfs decrease average JCT percent infer dfs accelerate coflows decrease JCT although coflows  conclusion propose coBranch abstraction coordinate transmission coflows computation stage urgency BS coordinative schedule theoretically performance bound BS besides expand BS online decrease algorithm overhead implement apache spark conduct prototype JCT reduction SJFCP fifo around percent respectively besides conduct trace simulation demonstrate performance BS outstanding simulated production environment