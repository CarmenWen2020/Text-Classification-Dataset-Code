article proposes highly efficient advanced encryption standard aes hardware architecture encryption encryption decryption operation reorder register retiming technique article unify inversion circuit   without delay overhead addition optimization technique minimize linear mapping multiplicative offset enhances hardware efficiency schedule datapath propose architecture knowledge propose architecture shortest critical delay efficient throughput per conventional aes encryption decryption encryption architecture tower propose architecture perform aes encryption wise parallelism unavailable cipher chain cbc mode technique globally apply architecture pipelined evaluate performance propose conventional datapaths logic synthesis  library confirm propose architecture achieve approximately percent efficiency bps GE consumption conventional counterpart introduction cryptographic application essential rely secure communication authentication digital signature accordance rapid increase internet iot application numerous cryptographic algorithm implement resource constrain device embed throughput efficiency advanced encryption standard aes iso IEC standard symmetric cipher widely cipher around publication aes hardware implementation aes propose evaluate CMOS logic technology aes implementation important practical academic perspective aes employ substitution permutation network spn structure  security primitive aes encryption decryption frequently chain mode operation cipher chain cbc cipher message authentication code CMAC counter cbc mac CCM wireless lan wireless sensor network therefore aes architecture efficiently perform encryption decryption chain mode demand cannot exploit tradeoff pipelining throughput encryption chain mode although conventional architecture employ pipelining technique importance datapath optimization throughput efficiency addition schedule implement resource constrain device offline schedule implementation additional memory expand moreover schedule sometimes important implement cipher tweak authenticate encryption temporal generate tweak unique valuable develop efficient aes architecture schedule without wise pipelining technique aes architecture encryption encryption decryption schedule propose architecture achieve critical delay serially gate critical overhead conventional architecture tower architecture employ operation reorder register retiming technique unify inversion circuit without selector technique unify affine transformation linear mapping isomorphism constant multiplication reduce logic gate propose conventional aes datapaths synthesize evaluate library evaluation architecture perform encryption encryption decryption efficiently throughput per gate propose architecture percent correspond conventional architecture concept preliminary evaluation aes encryption decryption architecture  previous newly efficient aes architecture threefold novel contribution propose optimization technique minimize linear operation multiplicative offset multiplicative offset variety matrix construction linear mapping without additional overhead compact latency implementation propose multiplicative offset extension previous architecture basis operation reorder register retiming thanks propose architecture achieves percent efficiency previous version newly throughput gate aes encryption hardware propose concept technique tower arithmetic register retiming unification linear operation multiplicative offset combination unification multiplicative offset technique significantly reduce logic depth critical delay encryption datapath propose aes encryption architecture achieves percent throughput gate efficiency conventional previous report consumption consumption estimation monte carlo gate timing simulation annotation glitch clearly advantage propose architecture consumption organize introduces related aes hardware architecture aes encryption decryption hardware architecture operation reorder register retiming unification linear mapping multiplicative offset evaluation propose datapath logic synthesis gate timing simulation comparison conventional datapaths proposes aes encryption hardware architecture technique evaluate propose architecture manner discus variation propose architecture finally contains conclusion related briefly related previous version detail unified aes datapath encryption decryption architecture perform encryption decryption per cycle without pipelining typical aes architecture architecture implement efficiently throughput per architecture utilize inherent parallelism symmetric cipher encryption decryption architecture efficient manner unify resource consume component inversion circuit   encryption decryption datapaths conventional approach unified datapaths approach distinct datapaths encryption decryption datapaths multiplexer architecture intermediate register  instead AddRoundKey register retiming suitable pipelined architecture approach unify circuit function   MixColumns inverse function respectively decryption operation encryption operation drawback conventional architecture false critical delay delay overhead multiplexer false critical reduces maximum operation frequency owe logic synthesis due false logic chain overhead multiplexer nonnegligible standard addition approach sometimes additional  reorder overhead inversion circuit tower arithmetic inversion circuit inv  significant impact performance aes implementation approach namely mapping tower arithmetic inversion circuit mapping lookup binary decision diagram BDD positive polarity reed muller  transforms faster tower tower arithmetic enables compact efficient inversion circuit comparison mapping therefore focus inversion circuit tower arithmetic embed tower inversion circuit aes hardware isomorphic mapping aes tower inversion MixColumns perform aes PB GF irreducible polynomial typically input inversion circuit aes mapped tower isomorphic mapping inversion operation tower inverse isomorphic mapping prior affine transformation apply architecture perform aes    MixColumns AddRoundKey tower isomorphic mapping inverse mapping perform timing data plaintext ciphertext input output respectively conversion suppress conversion perform encryption decryption however constant multiplication MixColumns tower aes inversion efficiently perform tower precisely tower architecture linear mapping constant multiplication usually TXOR delay TXOR indicates delay xor gate xor gate inv MixColumns tower aes propose encryption decryption architecture aes architecture unifies encryption decryption efficient manner reduce critical delay summarize merge linear mapping MixColumns isomorphic mapping reorder  minimize selector unify encryption decryption merge register retiming perform isomorphic mapping inverse mapping pre datapaths reduce linear mapping operation moreover reduce selector multiplexer unified datapath inversion circuit encryption decryption remove isomorphic mapping inverse mapping critical overall architecture consists function schedule architecture performs  tower function schedule therefore applies isomorphic mapping aes tower datapaths pre operation pre datapath datapath datapath performs operation encryption decryption overall architecture propose aes encryption decryption hardware function propose architecture employ datapath encryption decryption inversion unified applies operation reorder register retiming technique address conventional issue false critical additional multiplexer operation reorder technique merge linear mapping reduce linear mapping critical datapath reorder technique allows unification linear mapping affine transformation unification mapping drastically reduce critical delay xor gate linear mapping tower architecture operation reorder derive operational operation aes encryption equation sourcewhere ith jth intermediate rth input encryption rth respectively subscript variable member function indicates coefficient matrix MixColumns respectively indeterminate GF satisfy rewrite decompose inversion affine transformation sourcewhere linear mapping affine transformation constant tower architecture sourcewhere isomorphic mapping aes tower inverse isomorphic mapping linear mapping isomorphism constant multiplication GF perform constant multiplication correspond matrix GF therefore merge mapping reduce critical delay xor gate unify linear mapping mapping apply sourcewhich  arbitrary linear mapping lin satisfies lin lin lin variable tower derive substitute merge linear mapping SourceRight click MathML additional feature affine transformation tower denote linear mapping merge tower linear mapping cannot equation aes decryption correspond respectively source sourcewhere denotes ith jth intermediate rth input decryption indicates linear mapping inverse affine transformation coefficient respectively constant linear mapping cannot merge perform inversion operation addition construct encryption decryption datapath inversion circuit cannot encryption decryption without selector timing inversion operation therefore register retiming intermediate inverse affine transformation tower decryption data register instead rewrite source datapath construct minimal critical delay accord propose reorder technique propose perform isomorphic mapping GF GF data input output decompose  inversion inv affine encryption affine MixColumns AddRoundKey merge exchange affine  decryption inversion circuit exchange inversion  operation exclude isomorphic mapping perform tower mention additional selector inversion circuit thanks operation reorder register retiming technique inversion operation perform data register output directly inversion circuit propose encryption decryption reorder register retiming illustrates propose function datapath unification linear mapping architecture employ multiplexer whereas conventional employ multiplexer datapath employ multiplexer selector reduce critical delay circuit false critical unified affine unified affine perform unified linear mapping constant addition linear mapping critical architecture whereas conventional architecture suppress overhead constant multiplication tower unification adder array consist input adder MixColumns  encryption factor technique MixColumns AddRoundKey available unified affine described detail circuit without delay overhead data width unified affine adder array encryption reduce calculation perform encryption addition adder array AddRoundKey unified encryption compose adder factor technique  without delay overhead data width unified affine adder array decryption finally inactive disabled  datapath fully parallel inversion circuit thanks disable multiplexer AddRoundKey unified parallel xor addition unified affine active encryption addition  suppress consumption due dynamic hazard although tower inversion circuit consume owe dynamic hazard hazard terminate input inactive propose function encryption decryption hardware datapath employ inversion circuit efficiency inversion circuit applicable tower architecture encryption decryption merge isomorphic mapping reduce linear function datapath inversion circuit GF representation input output output rrb data width inversion unified affine unified affine however AddRoundKey decryption parallel xor datapath implement respectively xor gate NB input reduce version rrb encryption datapath contains linear mapping unified affine GF GF critical adder array AddRoundKey multiplexer basically longer delay GF GF addition demux implement gate thanks redundancy whereas  representation gate schedule schedule encryption decryption encryption schedule initial initial register generates cycle decryption calculate initial initial register advance schedule generates reverse generator however conventional schedule datapaths applicable architecture loop false longer critical optimize datapath address issue introduce architecture schedule datapath implementation  calculate  cycle therefore schedule encryption tower express keyex keyex keyex keyex sourcewhere  rth tower keyex expansion function consists constant addition  subword tower inverse schedule decryption tower keyex source propose schedule datapath architecture keyex component  subword constant unified encryption decryption input mapped tower computation AddRoundKey perform tower upper multiplexer selects initial input initial register multiplexer selects initial register input generator multiplexer encryption decryption importantly adder xor gate compute  critical shorter function addition enc dec signal input  subword gate usage gate useful shorten critical schedule datapath conventional employ multiplexer moreover constant addition perform separately  subword reduce critical delay critical delay schedule becomes shorter optimize function propose schedule encryption decryption hardware optimization linear mapping multiplicative offset linear mapping isomorphic mapping linear unified affine constant multiplication MixColumns  realize xor matrix operation construction define polynomial tower tower implementation construction xor matrix ham matrix impact performance aes hardware subsection newly multiplicative offset increase variety construction linear mapping conversion matrix ham although optimize tower implementation propose fix multiplicative mask inversion extend generalize optimize tower aes encryption decryption architecture basis propose register retiming operation reorder illustrates propose encryption decryption multiplicative offset denote ith jth intermediate byte rth encryption decryption multiplicative offset respectively addition denotes rth multiplicative offset operation exclude operation GF GF GF GF respectively perform tower multiplicative offset byte input data constant offset non zero PB GF intermediate byte offset finally data output remove offset decryption offset pre datapaths multiplication GF linear mapping GF multiplication merge isomorphic mapping unified affine operation reorder register retiming increase variety conversion matrix without overhead candidate propose tower encryption decryption operation reorder register retiming multiplicative offset importantly isomorphic mapping multiplicative offset identical encryption decryption indicates unify pre datapaths schedule multiplicative offset addition merge linear operation without multiplicative offset confirm multiplicative offset overhead conventional optimization input output propose multiplicative offset modifies timing multiplication register retiming linear operation per unified precisely inversion derive SourceThis offset cancel multiplication inversion however cannot implement aes function efficient manner offset indicates register intermediate perform multiplication prior inversion therefore offset source intermediate byte byte offset intermediate byte offset tower intermediate register merge linear mapping  retiming equation datapath encryption derive sourcewhere denotes unified linear transformation offset correction encryption constant fix embed datapath pre datapath plaintext mapped tower offset denotes merge linear mapping constant multiplication datapath ciphertext mapped aes offset remove denotes merge linear mapping constant multiplication decryption inversion adjust encryption register retiming operation reorder technique derive multiplicative offset version sourcewhere denote unified linear transformation offset correction intermediate propose register retiming multiplicative offset decryption respectively offset instead register retiming ciphertext byte offset encryption intermediate byte compute  denotes ith jth byte ciphertext input data decryption moreover remove offset datapath encryption whereas offset register offset correctly remove offset invert inversion offset encryption decryption unified schedule ith jth rth offset tower ith rth offset tower initial schedule offset encryption express     SourceRight click MathML additional feature  denotes keyex offset correction linear mapping affine transformation subword tower replace similarly inverse schedule offset decryption  sourcethus perform AddRoundKey  offset replace keyex  respectively propose encryption decryption hardware multiplicative offset realize replace operation correspond multiplicative offset encryption decryption thanks offset correction multiplicative offset apply architecture without overhead increase variety conversion matrix candidate optimal conversion matrix exhaustive manner consequently conversion matrix ham conversion matrix ham without multiplicative offset tower inversion roughly multiplicative offset reduces circuit linear mapping approximately percent without overhead conversion matrix ham useful reduce fan xor gate related latency consumption performance evaluation summarize synthesis propose aes encryption decryption architecture synopsys compiler version  library indicates nand equivalent gate gate equivalent  latency indicates latency encryption decryption estimate circuit delay datapath max freq indicates maximum operation frequency obtain critical delay throughput indicates throughput maximum operation frequency cycle cycle throughput respectively unless plaintext ciphertext input output simultaneously cycle mhz indicates consumption estimate monte carlo gate timing simulation annotation enc dec indicates encryption decryption respectively efficiency indicates throughput per PL indicates latency conduct practical performance comparison optimization maximizes effort minimize gate without flatten description apply optimization  timing constraint perform optimization apply latency synthesize propose aes encryption decryption architecture latency aes encryption decryption hardware architecture optimization synthesis propose conventional aes hardware architecture optimization synthesis propose conventional aes hardware architecture optimization conventional representative datapaths previous version synthesize source code synthesis described author refer source code   obtain website fairly evaluate performance datapaths without pipelining datapaths adjust  architecture correspond propose datapath latency calculate assume datapath cycle perform encryption decryption others cycle initial addition computation perform cycle throughput architecture lutz calculate assume cycle perform encryption decryption per architecture perform consecutive encryption decryption cycle per plaintext ciphertext input output simultaneously cycle otherwise cycle lutz architecture plaintext ciphertext cannot input output simultaneously cycle initial data register logic addition combinational circuit datapaths schedule implement description schedule isomorphic mapping remove application function datapath achieves latency efficiency conventional tower inversion circuit although operation translate tower architecture delay overhead MixColumns  suppress unification technique precisely critical delay propose datapath   TXOR sel   sel denote delay inversion circuit  selector respectively delay TXOR unified linear operation TXOR adder array TXOR AddRoundKey TXOR datapath critical conventional architecture linear operation adder array AddRoundKey inversion selector critical delay conventional  TXOR sel sel denotes delay selector logic depth propose datapath latency conventional tower architecture advantage regard latency lutz lookup inversion  addition confirm optimization linear mapping multiplicative offset clearly improves efficiency architecture percent efficient throughput per conventional precisely propose datapath achieves approximately percent efficiency conventional architecture percent efficient previous version optimization addition propose datapath percent throughput gate efficiency conventional previous version optimization respectively propose architecture perform aes encryption decryption percent conventional respectively precisely propose architecture reduces percent conventional encryption decryption respectively compress datapath cutoff inactive  thanks latency consumption propose architecture improves latency efficiency percent conventional encryption decryption optimization respectively optimization improvement latency efficiency percent encryption decryption respectively propose architecture perform aes encryption decryption consumption addition propose architecture improves PL percent percent percent percent encryption decryption previous version optimization respectively multiplicative offset confirm advantage propose architecture previous version consumption efficiency performance architecture relatively experimental critical  operation reorder therefore becomes longer addition  tower consume aes suggests architecture suitable schedule implementation architecture propose architecture however architecture throughput increase ratio throughput circuit architecture  compute  additional selector respectively moreover propose architecture efficiency previous version multiplicative offset reduce implementation linear mapping described propose encryption architecture function unified aes encryption decryption architecture important exist practical application aes hardware encryption highly demand owe wider counter ctr mode inverse authenticate encryption aes galois counter mode gcm offset otr propose efficient aes encryption hardware architecture philosophy overview propose aes encryption hardware architecture propose function encryption basically derive omit decryption propose unified architecture multiplicative offset apply architecture overall architecture propose aes encryption hardware propose function encryption hardware focus construction linear operation performs operation correspond unified affine adder array AddRoundKey encryption diagram linear operation jth denotes jth byte input unified affine denotes affine transformation multiplicative offset tower manner encryption decryption architecture accord  function implement correspond respectively architecture  function factorize denotes ith jth input byte MixColumns rth aes indicates linearity isomorphic mapping multiplicative offset linear operation realize propose architecture employ realization AddRoundKey efficiently implement another formula output denote datapath AddRoundKey bypassing MixColumns unified affine transformation xor gate linear operation identical calculation saving circuit realization linear operation MixColumns factorization linear mapping GF usually delay TXOR TXOR denotes delay xor gate indicates linear operation TXOR delay delay usually TXOR optimal conversion matrix TXOR delay reduce delay linear operation implement TXOR delay actually matrix TXOR delay without multiplicative offset successfully optimal matrix exhaustive propose encryption architecture latency confirm effectiveness multiplicative offset thanks register retiming operation reorder multiplicative offset encryption architecture logic depth conventional architecture  delay gate architecture delay  TXOR conventional tower architecture knowledge propose architecture achieve delay  TXOR sel sel denotes delay selector encryption decryption hardware critical datapath datapath adder array multiplexer datapath longer GF GF datapath confirm efficiency propose architecture multiplexer delay logic gate xor gate schedule propose schedule datapath encryption hardware encryption schedule basically derive remove decryption datapath encryption decryption schedule function implement accord however contrast encryption decryption schedule xor gate exclude output  factorize achieve factorization perform without degrade critical delay functionality propose schedule encryption hardware performance evaluation performance propose aes encryption hardware data derive comparison performance evaluation conventional hardware typical architecture evaluate aes encryption hardware architecture denote SASEBO IPs publish source intellectual core IPs channel attack standard evaluation   SASEBO IPs tower hardware architecture tower respectively source code architecture derive addition evaluate architecture     native mapped operation  perform tower respectively public source code architecture source code synthesis described author refer SASEBO IPs cycle encryption propose architecture architecture   implement encryption perform cycle accord description denote cycle cycle denote throughput efficiency plaintext ciphertext input output simultaneously cycle respectively latency obtain synthesis latency aes encryption hardware architecture optimization latency aes encryption hardware architecture optimization synthesis propose conventional aes encryption hardware architecture optimization synthesis propose conventional aes encryption hardware architecture optimization SASEBO IP shorter latency throughput architecture approximately circuit SASEBO IP tower circuit architecture shorter latency efficiency architecture SASEBO IP consumption tower spite circuit tower gate tower consume circuit due dynamic hazard compiler synthesize consideration latency consumption nevertheless architecture consumption comparable latency SASEBO IP clearly usefulness propose unification technique linear mapping multiplicative offset addition confirm architecture efficiency consumption architecture   thanks unification technique multiplicative offset confirm propose architecture achieves percent efficiency bps GE conventional representative architecture optimization respectively confirm advantage propose architecture efficiency consumption critical delay propose datapath  TXOR sel TXOR corresponds delay linear operation conventional architecture SASEBO IP  TXOR sel  TXOR sel critical linear operation contrast SASEBO IP delay  TXOR sel  aforementioned SASEBO IP latency propose architecture however latency propose architecture comparable SASEBO IP whereas propose architecture approximately percent circuit optimization indicates latency efficiency propose architecture 5Discussion comparison conventional architecture comparative evaluation propose conventional representative datapaths previous focus efficiency architecture however previous concrete implementation exhibit performance abovementioned conventional datapaths hardware aes description critical employ redundant representation unification technique reduce critical delay however evaluate efficiency lack detailed description implementation aes processor typical throughput encryption architecture cannot evaluate lack description building another aes encryption decryption architecture throughput however architecture throughput efficiency architecture accord moreover latency aes encryption decryption architecture twist BDD hardware evaluate sophisticated route possibility pipelining propose employ architecture without wise parallelism pipelining however wise parallelism exploitable parallelizable mode authenticate encryption ctr mode gcm otr offset codebook OCB throughput pipelining obtain pipelined version propose architecture unroll insert pipeline register datapath pipelined insert register datapath propose datapath efficiently pipelined pipeline register output inversion delay balance inversion circuit synthesis propose datapath optimization  standard library inversion circuit delay remainder delay accordingly pipelining achieve throughput gbps nearly twice without pipelining propose datapath suitable pipelined implementation choice implementation employ tower actually  efficient architecture applicable aes hardware architecture employ tower arithmetic decomposition inv inversion inv affine transformation merge linear operation isomorphic mapping tower implementation latency efficiency description logic minimization  efficient   basis architectural gate optimization   improve performance aes logic minimization technique efficient however cannot apply architecture unifies isomorphic mapping affine transformation linear operation inversion xor matrix operation input output achieve latency therefore inv cannot decompose inversion inv affine transformation cannot apply aes hardware architecture utilizes decomposition extension architecture efficient application remains future contrast tower mapping architecture BDD implement latency relatively consumption circuit efficiency however implement inversion inv affine transformation separately architecture whereas directly implement functionality indicates decomposition latency overhead implementation addition optimization technique unify linear operation implementation implementation isomorphic mapping efficiently unified architecture tower efficiently decompose inversion inv affine transformation  suitable architecture intend achieve throughput gate efficiency candidate application countermeasure channel attack another discussion propose architecture resistant channel attack differential analysis  mask countermeasure masked tower inversion circuit feature countermeasure replace inversion masked inversion duplicate linear operation countermeasure apply propose datapath addition hiding countermeasure dynamic differential logic  replaces logic gate complementary logic style applicable hardware efficiency proportionally respect sophisticated mask countermeasure threshold implementation TI consolidated mask scheme CMS applicable propose datapath principle manner conventional countermeasure  considerable overhead random aforementioned countermeasure apply countermeasure overhead critical application addition TI CMS inversion circuit pipelined reduce circuit circuit delay equally insert pipeline register encryption decryption conclusion efficient aes architecture encryption encryption decryption propose datapath utilizes operation reorder register retiming technique unify critical component additional selector consequently datapath critical delay conventional tower technique optimize matrix linear operation multiplicative offset multiplicative offset improve efficiency aes hardware architecture approximately percent without overhead propose conventional aes datapaths implement compatible architecture evaluate logic synthesis  library synthesis propose architecture approximately percent efficient conventional architecture throughput per addition gate timing simulation annotation confirm propose architecture perform encryption decryption consumption