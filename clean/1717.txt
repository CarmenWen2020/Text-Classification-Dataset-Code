storage user remotely data enjoy demand quality application service pool configurable compute resource without burden local data storage maintenance however user longer physical possession outsource data data integrity protection compute formidable task user constrain compute resource moreover user storage local without worry verify integrity enable public auditability storage critical importance user resort auditor TPA integrity outsource data worry securely introduce effective TPA audit vulnerability user data privacy introduce additional online burden user propose secure storage privacy preserve public audit extend enable TPA perform audit multiple user simultaneously efficiently extensive security performance analysis propose scheme provably secure highly efficient preliminary conduct amazon EC instance demonstrates performance introduction compute envision generation information technology architecture enterprise due unprecedented advantage demand service ubiquitous network access location independent resource pool rapid resource elasticity usage pricing transference risk disruptive technology profound implication compute transform business information technology fundamental aspect paradigm shift data centralize outsource user perspective individual enterprise data remotely flexible demand manner brings appeal benefit relief burden storage management universal data access location independence avoidance expenditure hardware software personnel maintenance etc compute advantage appeal brings challenge security threat user outsource data service provider csp administrative entity data outsource actually relinquish user ultimate fate data correctness data risk due although infrastructure powerful reliable personal compute device internal external threat data integrity outage security breach noteworthy service exist various motivation csp behave  user regard outsource data status csp reclaim storage monetary discard data rarely access hide data loss incident maintain reputation although outsource data economically attractive storage immediately guarantee data integrity availability properly address impede architecture user longer physically posse storage data traditional cryptographic primitive purpose data security protection cannot directly adopt simply data integrity verification practical due  transmission across network besides insufficient detect data corruption access data user correctness assurance  data recover data loss damage outsource data user constrain resource capability task audit data correctness environment formidable expensive user moreover overhead storage minimize user perform operation data additional retrieve data user complexity verify data integrity besides user access storage enterprise easy management desirable  verification request designate fully ensure data integrity user computation resource online burden critical importance enable public audit service data storage user resort independent auditor TPA audit outsource data TPA expertise capability user periodically integrity data behalf user easy affordable user ensure storage correctness moreover addition user evaluate risk subscribed data service audit TPA beneficial service provider improve service platform independent arbitration purpose enable public audit service important role nascent economy become fully establish user ass risk gain trust recently notion public auditability propose context ensure remotely data integrity security model public auditability allows external addition user verify correctness remotely data however scheme privacy protection user data external auditor indeed potentially reveal user data auditor severe drawback greatly affect security protocol compute perspective data privacy user data rely TPA storage security data audit introduce vulnerability unauthorized information leakage data security moreover legal regulation health insurance portability accountability HIPAA demand outsource data leak external simply exploit data encryption outsource mitigate privacy concern data audit  employ unencrypted public data outsource library scientific data due unnecessary processing burden user besides encryption completely data privacy audit reduces complex management domain unauthorized data leakage remains due potential exposure decryption therefore enable privacy preserve audit protocol independent data encryption tackle privacy preserve public audit compute focus data storage besides prevalence compute foreseeable increase audit task user delegate TPA individual audit task tedious cumbersome demand enable TPA efficiently perform multiple audit task batch manner simultaneously address utilizes technique public homomorphic linear authenticator hla enables TPA perform audit without demand local data drastically reduces communication computation overhead straightforward data audit approach integrate hla random mask protocol guarantee TPA knowledge data content server CS efficient audit aggregation algebraic authenticator benefit batch audit specifically contribution summarize aspect motivate public audit data storage security compute privacy preserve audit protocol scheme enables external auditor audit user data without data content knowledge scheme scalable efficient privacy preserve public storage audit specifically scheme achieves batch audit multiple delegate audit task user perform simultaneously TPA privacy preserve manner security justify performance propose scheme concrete comparison organize introduces threat model goal detailed description scheme security analysis performance evaluation discussion zero knowledge audit protocol overview related finally conclude remark statement threat model data storage service involve entity illustrate user amount data file server manage service provider data storage service significant storage computation resource differentiate CS csp hereafter auditor expertise capability user trust ass storage service reliability behalf user upon request user rely CS data storage maintenance dynamically interact CS access update data various application purpose user longer posse data locally critical importance user ensure data correctly maintain computation resource online burden potentially periodic storage correctness verification user resort TPA ensure storage integrity outsource data hop data private TPA architecture data storage service assume data integrity threat user data internal external attack CS software bug hardware failure bug network economically motivate hacker malicious accidental management error etc besides CS interested benefit maintain reputation CS hide data corruption incident user audit service effective user gain trust assume TPA business audit reliable independent however harm user TPA outsource data audit model beyond user reluctance leak data TPA assume server incentive reveal host data external regulation HIPAA request CS maintain user data privacy user data belong business asset exist financial incentive CS external therefore assume neither CS TPA motivation collude audit neither entity deviate prescribed protocol execution presentation authorize CS respond audit delegate TPA user issue certificate TPA public audit TPA authenticate certificate authentication handshake omit presentation goal enable privacy preserve public audit data storage aforementioned model protocol achieve security performance guarantee public auditability TPA verify correctness data demand without retrieve data introduce additional online burden user storage correctness ensure exists cheat server pas TPA audit without indeed user data intact privacy preserve ensure TPA cannot derive user data content information audit batch audit enable TPA secure efficient audit capability cope multiple audit delegation possibly user simultaneously lightweight TPA perform audit minimum communication computation overhead propose scheme public audit scheme outsource data data integrity introduce notation brief preliminary overview public audit discus straightforward scheme demerit scheme extent scheme batch audit TPA upon delegation multiple user finally discus generalize privacy preserve public audit scheme data dynamic notation preliminary data file outsource denote sequence ZZp prime mac message authentication code mac function define denotes cryptographic hash function introduce cryptographic background propose scheme bilinear GG GG GGT multiplicative cyclic prime generator GG GG respectively bilinear GG GG GGT GG GG ZZp bilinearity implies GG GG exists efficiently computable algorithm compute nontrivial nondegenerate definition framework definition previously propose scheme context remote data integrity adapt framework privacy preserve public audit public audit scheme consists algorithm keygen SigGen   keygen generation algorithm user setup scheme SigGen user generate verification metadata consist digital signature  server generate proof data storage correctness  TPA audit proof public audit consists phase setup audit setup user initializes public secret parameter execute keygen preprocesses data file SigGen generate verification metadata user data file verification metadata server deletes local preprocessing user alter data file expand additional metadata server audit TPA issue audit message challenge server server retain data file properly audit server derive response message execute  verification metadata input TPA verifies response via  framework assumes TPA stateless TPA maintain update audit desirable public audit easy extend framework capture stateful audit essentially splitting verification metadata TPA server respectively assume additional data file user error resilience redundantly encodes data file data error code integrate scheme scheme warmup mac suffers undesirable systematic demerit bound usage stateful verification additional online burden user public audit audit easy introduce TPA homomorphic linear authenticator recent proof storage pinpoint exist hla privacy preserve analysis scheme overcomes drawback scheme specific hla scheme mac mac authenticate data trivial upload data MACs server sends correspond secret TPA later TPA randomly retrieve MACs correctness via apart linear sample data communication computation complexity TPA knowledge data verification circumvent requirement data TPA verification restrict verification consist equality data outsource user chooses random message authentication code   deterministic MACs  data file publishes verification metadata MACs TPA TPA reveal secret  server keyed mac comparison audit privacy preserve impossible recover   however suffers severe drawback data file audit limited secret fix priori secret exhaust user retrieve data recompute republish MACs TPA TPA maintain update audit reveal mac potentially audit delegation multiple user maintain TPA error prone static data cannot efficiently dynamic data however data dynamic critical importance storage brevity clarity protocol static data adapt protocol dynamic data hla effectively public auditability without retrieve data hla technique  MACs unforgeable verification metadata authenticate integrity data difference  aggregate compute aggregate hla authenticates linear combination individual data hla proof storage user authenticates  TPA verifies storage random challenge server return  aggregate authenticator compute efficient data audit consume constant bandwidth adoption hla technique suitable purpose linear combination  potentially reveal user data information TPA violates privacy preserve guarantee specifically challenge random coefficient TPA accumulate linear combination TPA derive user data simply linear equation privacy preserve public audit scheme overview achieve privacy preserve public audit propose uniquely integrate homomorphic linear authenticator random mask technique protocol linear combination sample server response masked randomness generate server random mask TPA longer information linear equation therefore cannot derive user data content linear combination file correctness validation authenticator shortly presence randomness public hla equip audit protocol public auditability specifically hla propose signature scheme propose boneh  shacham hereinafter refer BLS signature scheme detail GG GG GGT multiplicative cyclic prime GG GG GGT bilinear introduce preliminary generator GG secure hash function GG uniformly GG another hash function GGT ZZp GGT uniformly ZZp scheme setup phase user keygen generate public secret parameter specifically user chooses random signing spk ssk random ZZp random GG computes secret parameter ssk public parameter spk data file user SigGen compute authenticator  GG chosen user uniformly random ZZp identifier file denote authenticator SigGen ensure integrity unique file identifier compute  file tag  signature private ssk simplicity assume TPA user sends along verification metadata server deletes local storage audit phase TPA retrieves file tag respect mechanism setup phase TPA verifies signature  via spk quits emit false verification fails otherwise TPA recovers core audit generate challenge message audit chal TPA random subset TPA chooses random shorter explain message chal specifies checked TPA sends chal server upon challenge chal server  generate response proof data storage correctness specifically server chooses random ZZp calculates GGT denote linear combination sample specify chal  blind server computes modp ZZp meanwhile server calculates aggregate authenticator  GG sends response proof storage correctness TPA response TPA  validate compute verification equation  source protocol illustrate correctness verification equation elaborate ssc  ssc     source protocol easy protocol achieves public auditability secret TPA maintain audit audit protocol potential online burden user approach ensures privacy user data content audit employ random mask hide linear combination data protocol enables privacy preserve guarantee affect validity equation due circular relationship verification equation storage correctness underlie protocol security protocol formally proven besides hla achieve constant communication overhead server response audit independent sample privacy preserve public audit protocol previous server data checked detect server misbehavior probability data corrupt random sample detection probability chosen uniformly random data TPA audit randomly chosen detect misbehavior probability percent respectively volume data outsource portion data file affordable practical TPA server data sample strategy probability assurance sample strategy storage provider information dispersal algorithm ida fragment geographically distribute user outsource data increase availability operation affect behavior propose mechanism ida systematic preserve user data encode redundancy user perspective unchanged outsource data precomputed verification metadata remain valid metadata utilized audit mechanism guarantee correctness user outsource data storage communication tradeoff described accompany authenticator storage overhead server however introduce parameter authenticator construction adjust storage overhead communication overhead audit protocol TPA server assume consists sector mij mij ZZp public parameter spk randomly chosen GG authenticator construct  GG authenticator per per sector reduce storage overhead respond audit challenge chal server chooses random ZZp calculates GGT server blind  derives blind  ZZp aggregate authenticator compute sends proof response TPA proof TPA computes verification   source correctness elaboration omit overall storage overhead reduce proof increase roughly due additional server return presentation simplicity scheme description choice batch audit establishment privacy preserve public audit TPA concurrently handle multiple audit upon user delegation individual audit task TPA tedious inefficient audit delegation distinct data file user advantageous TPA batch multiple task audit demand slightly modify protocol user achieves aggregation verification equation audit task secure batch audit protocol simultaneous audit multiple task obtain detail described setup phase basically user perform setup independently suppose user user data file outsource server simplicity assume file user denote secret  correspond public parameter   user user already randomly chosen overwhelm probability  ZZp file correctly generate correspond file tag    user SigGen computes    GG sourcewhere  finally user sends file authenticator tag server deletes local storage audit phase TPA retrieves verifies file tag user later audit verification fails TPA quits emit false otherwise TPA recovers  sends audit challenge chal server audit data file user upon chal user server randomly ZZp computes denote RK  protocol server compute randomly masked response generate    source server responds verify response TPA compute TPA equation    source batch protocol illustrate LHS expands LHS RK      sourcewhich equality batch audit protocol efficiency improvement batch audit allows TPA perform multiple audit task simultaneously greatly reduces computation TPA aggregate verification equation reduce relatively expensive operation individual audit considerable amount audit identification invalid response verification equation response valid fails probability invalid response batch audit situation response collection invalid response accidental data corruption possibly malicious activity server ratio invalid response valid standard batch auditor reject entire collection sort invalid response batch audit utilize recursive conquer approach binary specifically batch audit fails simply collection response audit via TPA server individual audit carefully recursive binary approach percent response invalid batch audit performs faster individual verification data dynamic compute outsource data access update frequently user various application purpose hence data dynamic privacy preserve public audit paramount importance upon exist adapt scheme data dynamic operation modification deletion insertion data dynamic achieve replace index information computation authenticator classic data structure merkle hash MHT underlie sequence enforcement authenticator  adopt technique achieve privacy preserve public audit data dynamic specifically setup phase user generate  TPA additional metadata leaf node MHT audit phase besides server response correspond auxiliary authentication information aux MHT upon response TPA TR MHT aux authenticate compute server authenticate TPA perform audit sigma via prod replace prod interfere propose random mask technique data privacy preserve data dynamic data update user generate TR MHT later TPA metadata storage audit task detail handle dynamic operation omit application version scheme allows TPA audit update data file worth mechanism easily extend version previous version data file correspond authenticator audit demand TPA previous generate user denote TR MHT TR MHT ldots TR MHT file version TR MHT related version data file whenever designate version data file audit TPA correspond TR MHT perform audit server version data file authenticator correctly audit request TPA server replicate data file version update however efficiently manage storage within scope generalization mention protocol hla hla construct homomorphic identification protocol apply random mask technique construct correspond zero knowledge proof homomorphic identification protocol therefore privacy preserve public audit secure storage generalize complexity assumption factor evaluation security analysis evaluate security propose scheme analyze fulfillment security guarantee described namely storage correctness privacy preserve user originate security guarantee batch audit TPA multiuser storage correctness guarantee server cannot generate valid response TPA without faithfully data capture theorem theorem server audit phase indeed posse specify data intact proof exists extractor prime random oracle model valid sigma prime theorem theorem extractor random oracle cdot hash query issue server treat adversary challenge gamma return extractor server output sigma equation cdot sigma gamma prod gamma cdot  hbox  extractor rewind server execution protocol challenge extractor gamma ast gamma server output sigma ast equation cdot sigma gamma ast prod gamma ast cdot ast  hbox sourcethe extractor obtains sigma prime ast gamma gamma ast valid response underlie proof storage recall sigma cdot  sigma gamma gamma ast prod gamma gamma ast cdot ast sigma gamma gamma ast prod gamma gamma ast ast sigma gamma gamma ast prod gamma gamma ast cdot ast prod sigma gamma gamma ast prod gamma gamma ast cdot ast ast prod sigma gamma gamma ast ast prod gamma gamma ast ast sum cdot gamma gamma ast sum ast gamma gamma ast source finally remark extraction argument random oracle paradigm proof underlie scheme privacy preserve guarantee theorem TPA cannot derive user data information audit theorem server response sigma TPA cannot recover prime proof existence simulator valid response without knowledge prime random oracle model TPA treat adversary valid sigma server randomly gamma hbox rlap kern hbox leftarrow prod gamma cdot sigma gamma finally  gamma simulator random oracle cdot remark  technique random oracle model proof underlie scheme security guarantee batch audit extend multiuser affect aforementioned security insurance theorem theorem batch audit protocol achieves storage correctness privacy preserve guarantee user proof privacy preserve guarantee multiuser theorem omit storage correctness guarantee reduce user fork technique proof theorem however verification equation batch audit involves challenge random oracle ensure challenge fork concerned random oracle response adversary issue random oracle query gamma cal vert vert cal simulator immediately determines gamma cal vert vert cal cal cal gamma valid response extract user proof theorem performance analysis report performance audit mechanism happens dedicate TPA storage node user data outsource TPA user implement workstation intel core processor ghz MB ram rpm western digital GB serial ata server implement amazon elastic compute EC instance EC compute GB memory GB instance storage randomly generate data GB algorithm implement code cryptography pbc library version elliptic curve utilized mnt curve embed security chosen vert vert vert vert experimental trial per model user storage bandwidth data transfer storage audit implement mechanism consideration factor conduct storage communication tradeoff parameter introduce mechanism incurs extra storage data audit bandwidth mechanism adopt audit frequently storage correctness data transfer dominant per model properly reduces extra storage percent data increase audit bandwidth roughly choice relatively desirable audit frequently user flexibly storage communication tradeoff parameter application scenario powerful workstation measurement user setup phase generate authenticator achieves throughput around KB KB respectively due expensive modular exponentiation operation byte sector authenticator computation experimental data file outsource setup phase happens authenticator generation independent operation easily parallelize multithreading technique multicore therefore various optimization technique apply speedup user setup phase focus privacy preserve storage audit performance primarily ass performance propose audit scheme TPA server indeed lightweight focus privacy preserve protocol propose batch audit technique privacy preserve protocol estimate cryptographic operation refer notation suppose random specify challenge message chal audit phase quantify introduce privacy preserve audit server computation auditor computation communication overhead difference choice previously privacy preserve analysis atomic operation analysis simplicity analysis similarly omit notation cryptographic operation notation cryptographic operation server generate response aggregate authenticator sigma prod sigma hbox rlap kern hbox random factor hbox rlap kern hbox blind linear combination sample gamma sum hbox rlap kern hbox gamma hbox rlap kern hbox correspond computation hbox  kern vert vert exp kern vert vert hash kern kern mult kern respectively exist hla ensure remote data integrity extra random mask constant exp kern vert vert mult kern hash kern kern sample assurance audit extra server privacy preserve guarantee negligible server computation response generation similarly auditor upon response sigma correspond computation response validation hash kern  kern vert vert hash kern mult kern mult kern exp kern vert vert kern kern hash kern exp kern vert vert mult kern account additional constant computation relatively expensive operation extra imposes overhead overall response validation ignore sake completeness performance comparison scheme performance scheme almost scheme privacy preserve guarantee extra communication scheme server response sigma contains additional random hbox rlap kern hbox performance sample assurance hbox audit performance sample assurance hbox audit batch audit efficiency discussion asymptotic efficiency analysis batch audit operation however practical additional expensive operation batching modular exponentiation multiplication benefit remove pairing significantly outweighs additional operation remains verify batching efficiency conduct batch audit audit task increase approximately interval focus choice performance directly obtain choice performance correspond  individual audit baseline measurement setting average per task audit compute audit task batch individual audit individual audit batch audit indeed reduce TPA computation percent per task audit comparison audit batch individual audit per task audit denotes audit task comparison audit batch individual audit per task audit denotes audit task sort invalid response justify efficiency recursive binary approach TPA sort invalid response negative batch audit tightly pertain evaluates batch verification various signature feasibility recursive approach evaluate choice consistent setting duplicate evaluation recursive binary methodology easily deduce choice generate collection valid response implies TPA concurrently handle audit delegation conduct repeatedly randomly corrupt alpha percent replace random average audit per task individual audit approach invalid response exceeds percent batch performance batch audit safely conclude preferable straightforward individual audit random distribution invalid response within collection nearly batch audit invalid response grouped comparison audit batch individual audit alpha response invalid per task audit denotes audit task zero knowledge public audit scheme prevents TPA directly derive prime possibility offline threat TPA valid sigma response specifically TPA prime  tilde prime sigma  prod cdot tilde prime tilde prime construct random coefficient chosen TPA challenge message tilde however tilde prime chosen hbox rlap kern hbox vert vert usually practical security setting background information prime launch TPA hbox rlap kern hbox besides TPA successful derive linear equation specify protocol strict choice significantly decrease TPA successful probability addition restrict  exactly limit audit exactly TPA accumulate successful prime diminishes TPA appropriate choice parameter hbox rlap kern hbox effectively defeat potential offline threat nevertheless public audit scheme provably zero knowledge leakage scheme completely eliminate possibility offline attack communication computation overhead setup phase scheme secret parameter ssk public parameter spk hbox rlap kern hbox additional public audit phase upon challenge chal server chooses random sigma rho leftarrow hbox rlap kern hbox calculates sigma cdot hbox rlap kern hbox gamma hbox rlap kern hbox prime denote linear combination sample prime sum sigma denote aggregate authenticator sigma prod sigma hbox rlap kern hbox ensure audit leak zero knowledge server blind prime sigma specifically server computes gamma prime bmod sigma sigma cdot rho sends varsigma sigma response proof storage correctness TPA varsigma sigma gamma rho bmod response server TPA  validate response compute gamma verification equation cdot sigma gamma  prod gamma cdot cdot varsigma  hbox source correctness equation  cdot sigma gamma sigma cdot cdot sigma cdot rho gamma sigma cdot cdot sigma gamma cdot rho gamma cdot sigma gamma cdot sigma rho gamma prod gamma cdot cdot varsigma source equality elaboration theorem audit protocol achieves zero knowledge information leakage TPA ensures storage correctness guarantee proof zero knowledge easy randomly gamma varsigma hbox rlap kern hbox sigma hbox rlap kern hbox leftarrow prod gamma cdot cdot varsigma sigma gamma  gamma proof storage correctness extract rho extraction prime proof theorem likewise sigma recover sigma conclude valid sigma prime extract related public auditability provable data possession pdp model ensure possession data file untrusted storage utilize rsa homomorphic linear authenticator audit outsource data randomly sample file however propose scheme public auditability expose linear combination sample external auditor directly protocol provably privacy preserve leak user data information external auditor proof retrievability por model error code ensure possession retrievability data file remote archive service however audit challenge user perform fix priori public auditability scheme although straightforward merkle construction public  approach encrypt data later propose improve framework por protocol generalizes  variant por private auditability shacham improve por scheme built BLS signature proof security security model define construction publicly verifiable homomorphic linear authenticator built provably secure BLS signature elegant BLS construction compact public verifiable scheme obtain approach privacy preserve due propose introduce TPA online storage honest encrypt data precomputed symmetric keyed hash encrypt data auditor auditor verifies integrity data file server possession previously commit decryption scheme encrypt file auditor maintain suffers bound usage potentially brings online burden user keyed hash dynamic data attract attention recent literature efficiently integrity guarantee remotely data propose partially dynamic version prior pdp scheme symmetric cryptography bound audit partially dynamic data storage distribute scenario additional feature data error localization subsequent propose combine BLS hla MHT fully data dynamic  develop skip scheme enable provable data possession dynamic however verification protocol linear combination sample input privacy preserve audit related thoroughly requirement ought satisfied remote data possession protocol practical propose protocol unlimited file integrity verification allows preset tradeoff protocol local storage burden user schwarz miller propose integrity remotely data across multiple distribute server approach erasure code efficient algebraic signature aggregation homomorphic authenticator utilized approach aim ensure data possession multiple replica across distribute storage extend pdp scheme multiple replica without encode replica separately guarantee multiple data actually maintain utilize layer erasure code structure remotely archive data extend por model distribute scenario data availability assurance scheme efficient audit provable assurance correctness remotely data almost none necessarily requirement privacy preserve public audit storage moreover none scheme batch audit scheme greatly reduce computation TPA cop audit delegation portion previously extend abstract revise improve technical detail primary improvement privacy preserve public audit protocol enhance security strength completeness additional slightly efficient protocol provably secure zero knowledge leakage public audit scheme enhance audit scheme provably secure batch audit protocol performance evaluation newly protocol completely  extend scheme data dynamic discussion generalize privacy preserve public audit scheme lack finally formal analysis privacy preserve guarantee storage correctness heuristic argument sketch conclusion propose privacy preserve public audit data storage security compute utilize homomorphic linear authenticator random mask guarantee TPA knowledge data content server efficient audit eliminates burden user tedious possibly expensive audit task alleviates user outsource data leakage TPA concurrently handle multiple audit session user outsource data file extend privacy preserve public audit protocol multiuser TPA perform multiple audit task batch manner efficiency extensive analysis scheme provably secure highly efficient preliminary conduct amazon EC instance demonstrates performance auditor fledge implementation mechanism commercial public important future extension robustly cope data encourage user adopt storage service confidently