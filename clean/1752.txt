widely cache llc architecture microprocessor inclusive llc popularity inclusive stem bandwidth optimization simplification implementation cache coherence protocol however inclusive LLCs associate curse inclusion victim inclusion victim forcefully replace inner cache hierarchy replace inclusive llc tight couple llc victim inner cache content drawback inclusion victim severe performance degradation llc replacement policy victimize another llc multiple core exploit leak information eviction timing channel inclusive llc channel noisy due presence inclusion victim malicious content  private cache llc eviction reduce impact aforementioned drawback inner cache particularly mid cache inclusive cache hierarchy mid cache beneficial absence inclusion victim inclusion victim fundamental inclusion arise due content inclusive llc manage motivate observation introduce fundamentally inclusive llc zero inclusion victim ziv llc guarantee freedom inclusion victim retain advantage inclusive llc inclusive llc proposal guarantee thereby completely isolate core cache llc eviction inclusion victim constraint llc victim chosen index function ziv llc relaxes constraint efficiently minimally enable global victim selection scheme inclusive llc avoid generation inclusion victim detailed simulation conduct chip multiprocessor model multi programmed multi thread workload ziv llc gracefully mid cache llc delivers performance  llc llc replacement policy ziv llc comfortably outperforms exist related proposal performance grows increase mid cache capacity index inclusive cache hierarchy invalidation inclusion victim introduction processor multi chip cache hierarchy accelerate data delivery functional  cmp processing core private cache cache hierarchy usually across core relationship content cache llc private cache important cache hierarchy cmp popular widely deployed inclusion context cmp private cache content subset llc content llc implement inclusion llc refer inclusive llc maintain inclusion llc implement action fetch chip memory llc allocate llc addition allocate private cache request core evict llc resident private cache forcefully invalidate extra interconnect message llc private cache purpose usually refer invalidation private cache invalidate refer inclusion victim inclusion victim fundamental inclusion arise due choice replacement victim inclusive llc non inclusive LLCs implement action subset refer exclusive mostly exclusive LLCs implement action allocate llc core evict private cache non inclusive LLCs purpose comparison inclusive LLCs implement action implement action discus detail advantage disadvantage inclusive llc discussion motivate inclusive llc guarantee freedom inclusion victim fundamentally inclusive llc central focus advantage shortcoming inclusive llc popularity inclusive llc arises bandwidth advantage simplification allows cache coherence protocol advent  cache coherent multiprocessor core processor processor coherence request directory snoop request cache hierarchy llc inclusive llc lookup request inner cache hierarchy significant reduction lookup bandwidth requirement inner advantage inclusive LLCs usually refer snoop filter inclusive llc snoop filter capability due inclusion UI OOVBM  PNQVUFS SDIJUFDUVSF acm annual international symposium computer architecture isca doi isca introduction  snoop filter advantage inclusive LLCs enjoy implementation intra chip coherence protocol additionally inclusive llc important simplification  coherence protocol implementation discus scalable  implement directory intra chip coherence protocol coherence directory necessarily inclusive structure responsibility maintain coherence status resident private cache cmp external request another cmp directory snoop chip coherence directory private cache inside chip coherence directory snoop filter although inclusive llc snoop filter longer however cmp inclusive llc significant reduction intra chip coherence protocol complexity non inclusive complexity advantage inclusive cache hierarchy arises invariant lookup chip coherence directory guaranteed inclusive llc entry directory correspond resident private cache implies inclusive llc outcome request coherence directory llc directory llc llc inclusive fourth inclusive llc directory llc sharer core generate data response request protocol transient non inclusive llc accord reverse engineer directory structure skylake processor non inclusive llc processor introduce coherence directory private cache llc prior directory organization coherence directory structure non inclusive LLCs irrespective chip coherence directory structure unified chip coherence directory structure coherence protocol non inclusive cache hierarchy complicate due presence fourth summary inclusive llc simplifies intra chip directory coherence protocol significantly cmp inclusion victim generate inclusive llc significant drawback inclusion victim active victimization private cache llc increase significantly performance degradation fix llc capacity inclusion victim function private cache capacity llc replacement policy dependence capture performance achieve inclusive non inclusive NI cache hierarchy configuration llc replacement policy namely lru hawkeye hawkeye replacement policy dynamically classifies llc cache friendly cache averse behavior  min algorithm data generate simulate core cmp cache hierarchy MB llc KB per core instruction data cache multiple configuration private per core cache configuration per core cache KB KB KB increase lookup latency multiprogrammed workload compose spec cpu application performance comparison inclusive non inclusive LLCs speedup normalize relative configuration KB cache inclusive llc lru policy lru speedup workload important observation cache capacity non inclusive llc performs inclusive llc performance gap hawkeye lru speedup hawkeye suffer performance degradation inclusive llc prevents hawkeye realize potential increase cache capacity non inclusive llc performance improves inclusive llc performance slowly degrades due gradually increase volume inclusion victim inclusive llc cache substantiate aforementioned normalize inclusion victim inclusive llc normalize KB cache lru understand trend hawkeye data offline implementation min replacement policy min replacement policy llc victim oracle knowledge future global access cache cache capacity hawkeye min policy generate inclusion victim lru min policy  llc furthest reuse future presence circular access victimization recently circular access mapping llc access BN llc associativity access recently furthest reuse resident llc recently llc victim highly likely resident private cache generation inclusion victim hawkeye policy inherits behavior min llc replacement policy attempt approach optimal behavior generate volume inclusion victim infer volume inclusion victim experienced min data volume inclusion victim increase increase cache capacity understand aforementioned trend llc configuration llc replacement policy normalize KB cache  trend correspond speedup IV detail simulation environment although hawkeye policy optimal behavior portion access visible locally llc impossible correctly model behavior min inclusive llc llc access access inclusion victim alter llc access global access access cache remains unaffected choice llc victim instruction schedule input min KB cache KB cache KB cache normalize incl victim lru hawkeye min normalize inclusion victim observation llc  NI hawkeye decrease slightly increase cache capacity cache increase subset access previously cache llc cache normalize cache configuration llc replacement policy normalize KB cache lru cache independent llc replacement policy non inclusive llc inclusive llc cache non inclusive llc varies llc replacement policy volume inclusion victim KB cache KB cache KB cache normalize llc lru NI lru hawkeye NI hawkeye normalize llc KB cache KB cache KB cache normalize lru NI lru hawkeye NI hawkeye normalize cache summary preliminary indicates inclusive llc significant performance increase llc cache generation inclusion victim llc replacement policy attempt approach optimal behavior min policy fail achieve potential due volume inclusion victim inclusive llc private cache capacity reasonably llc capacity inclusion victim inclusion overhead llc arise replication llc private cache influence private cache capacity however inherent inclusion resolve llc increasingly exclusive focus inclusion victim inherent inclusion artifact architect manage inclusive LLCs apart performance inclusion victim  enhance probability llc  core timing channel attack attacker schedule core evict inclusive llc engineer memory access evicts belonging schedule core invalidation private cache inclusion victim future access private cache llc access become visible attacker attacker access victim otherwise compute llc index previously access evict llc decipher access physical address achieve measurement latency access absence inclusion victim attack noisy likelihood contribution sketch central contribution inclusive cache hierarchy inclusion victim knowledge inclusive cache hierarchy guarantee  inclusive llc refer zero inclusion victim ziv llc generates inclusion victim retain advantage inclusive llc simpler coherence substrate cmp environment non inclusive alternative ziv llc considers inclusion victim constraint llc victim index function crux employ ziv llc efficiently minimally enable global llc replacement policy avoid generation inclusion victim simulation multiprogrammed multi thread workload ziv llc gracefully cache llc capacity performs non inclusive llc lru hawkeye replacement policy IV ziv llc comfortably outperforms related proposal performance grows increase cache capacity additionally eliminate inclusion victim ziv llc achieves  isolation core cache eviction inclusive llc inclusive llc eviction longer inner cache content however security analysis ziv llc future focus performance aspect ziv llc II related inclusive LLCs performance security viewpoint non inclusive cache inclusive directory  proposes data array llc non inclusive maintains inclusive provision tag array tag array decouple data array maintains pointer associate tag correspond data allows eviction data llc without generate inclusion victim provision tag array maintain tag evict resembles non inclusive llc equip provision coherence directory unfortunately cannot enjoy coherence protocol simplification inclusive llc handle lookup inclusive directory non inclusive cache already propose bypass inclusive LLCs specifically tag bypass maintain tag directory overall tag inclusive temporal locality aware  inclusive llc closer theme tag data array inclusive  proposes technique mitigate performance impact inclusion victim technique refer temporal locality hint  informs llc access private cache llc recently access core technique however llc lookup interconnect bandwidth technique refer core invalidation eci forcefully invalidates lru victim core cache replace lru victim llc observes receives llc llc replace prematurely technique however increase private cache application behavior technique refer query selection QBS query private cache llc victim candidate currently resident private cache  within target llc victim candidate technique unfortunately none technique guarantee regard freedom inclusion victim QBS fails victim resident private cache  lru llc thereby generate inclusion victim QBS originally propose lru combine llc replacement policy cache hierarchy aware replacement char algorithm replacement policy inclusive llc aware inclusion victim evict cache proposal decides prioritize victimization llc access cache victim algorithm attempt attach llc victimization priority subset already evict cache thereby reduce volume inclusion victim maintain quality choice llc victim discus char mechanism infer liveness evict cache proposal improve efficiency ziv llc recent explore detail joint influence inclusion policy prefetching technique llc management policy vast majority recently propose llc management policy deliver performance non inclusive LLCs suffer performance degradation inclusive LLCs due inclusion victim already inclusion victim reduce enhance rate eviction timing channel attack llc proposal explore mitigation technique security vulnerability related cache proposal improve cache security lock static dynamic grain cache partition combination lock partition randomize dynamic mapping address cache dynamic encryption cache address OS assist  prefetching inclusion victim  llc victim inner cache inclusion hence applicable non inclusive LLCs restrict subset inclusion victim category technique closer proposal discus detail relaxed inclusion cache ric relaxes inclusion hence eliminates inclusion victim data cipher data thread private data privately modify sensitive data relax inclusion data additional cache coherence thread private thread private modify data flush private cache migrates core another ric custom compiler identify thread private data unfortunately analysis conservative ric cannot security critical data secure hierarchy aware cache replacement policy proposes modify llc replacement policy llc evict resident private cache target llc evict resident request core private cache target llc  random target llc although successfully lower volume inclusion victim arise core llc conflict important plug core information leakage cannot guarantee freedom inclusion victim contrast proposal  inclusive llc inclusion victim altogether ziv llc detailed ziv llc discussion baseline cache hierarchy description proposal discus primary component ziv llc detail baseline cmp cache hierarchy baseline chip cache hierarchy assume inclusive llc per core private cache llc distribute chip interconnect topology important discussion private cache coherent directory MESI coherence protocol efficiency coherence directory structure decouple llc sparse directory sparse directory organize tag associative structure entry sparse directory privately cached minimize sparse directory eviction entry tag  private cache cache private cache aggregate core refer sparse directory improve sparse directory bandwidth sparse directory slice slice directory associate llc sparse directory slice associate llc responsible privately cached llc llc refer request private cache hierarchy llc sparse directory slice parallel outcome lookup subsequent coherence action sparse directory date avoid extraneous invalidation trigger coherent writes private cache eviction notify sparse directory slice eviction  message dirty evict generate traditional writeback llc sparse directory date significantly simplify previous related proposal QBS sparse directory lookup reveal llc resident private cache sparse directory entry freed invalidate evict private cache overview ziv llc inclusion victim generate llc replacement due associative cache architected manage llc replacement candidate picked llc restricts choice replacement candidate ziv llc exploit observation inclusive llc private cache observation aggregate private cache capacity llc capacity inclusive llc configuration llc outside inclusion overhead global replacement policy enable replace llc private cache cache hierarchy inclusion victim policy invoked baseline replacement policy selects victim resident private cache ziv llc incorporates cache hierarchy enable minimal global replacement policy implement efficiently invoked selectively ziv leaf coherence protocol architecture llc unaltered functional ziv llc llc address llc sparse directory slice directory entry allocate target sparse directory llc address replace llc completes baseline sparse directory llc allocation sparse directory entry baseline evict resident private cache private cache sparse directory address private cache baseline generate  instead ziv llc relocates llc relocation RS RS contains resident private cache guaranteed exist identify ziv replaces resident private cache insert relocation ziv llc leverage sparse directory entry location relocation relocate llc replace appropriate relocation primary component ziv llc discus architectural relocate llc another focus relocation efficiently implement appropriate replacement algorithm relocation insert relocate context cache  cache structure employ relocation however purpose relocation cache entirely cache relocation multi replacement policy thereby improve upon replacement decision skew associative cache relocation throughout suppose llc relocate location relocation involves reading source destination distinguish relocate non relocate within llc relocate slice sparse dir llc private cache resident RS relocation baseline replace insert update loc llc addr replace insert overview functional ziv llc llc already mention sparse directory entry EB location relocate llc another llc sparse directory entry extend relocate along tuple relocation subsequently relocate access core arise private cache eviction private cache replacement another relocation discus ziv llc handle handle private cache private cache request sparse directory llc parallel access aforementioned relocate llc lookup pre relocation lookup considers relocate lookup llc sparse directory sparse directory entry EB relocate emits location directly llc data array compute location background replacement update appropriately due access importantly critical access relocate latency max llc tag array latency sparse directory array latency llc data array latency longer sequential tag data array latency llc lookup non relocate sparse directory array latency llc tag array latency within CACTI sparse directory MB llc implement technology node critical access relocate lengthen cycle respectively configuration KB KB KB cache additional delay llc access latency access relocate llc sharer core exist sharer access private cache therefore latency impact restrict relocate core latency difference access relocate non relocate infer suffer llc conflict exploit timing channel covert channel however latency delta impossible distinguish latency fluctuation due various non deterministic latency component queue delay core llc handle private cache eviction private cache eviction message llc sparse directory evict core remove directory entry directory entry indicates private cache directory entry invalidate directory entry relocate correspond llc invalidate thereby relocate aforementioned relocate invalidate tag llc evident relocate core access core access request llc evicts private cache relocate invalidate llc access llc performance ziv llc baseline evict llc generate inclusion victim ziv llc avoids relocate eviction message private cache dirty llc traditional writeback action update llc relocate writeback directly memory controller relocate invalidate eviction message private cache data  eviction notification relocate invalidate dirty writeback memory controller relocate relocate llc relocate replace relocate relocate guaranteed generate inclusion victim victimization avoid relocation protocol however complication related update relocate sparse directory entry address suppose aforementioned relocate evict relocate location update sparse directory entry EB however access EB cannot generate address sparse directory tag remain address provision llc maintain remain prohibitive amount storage however tag relocate llc access relocate initiate lookup sparse directory tag array therefore tag relocate llc location sparse directory entry tuple EB EB relocate physical address MB llc byte llc tag assume hash function index LLCs complex hash function tag assume llc encode entry sparse directory slice directory entry llc purpose practically sparse directory slice sparse directory entry per slice respectively KB KB KB cache configuration therefore comfortably encode location sparse directory entry EB relocate llc tag relocate EB tag update EB location metadata overhead metadata overhead relocation component llc relocate implement KB additional storage MB llc byte implement unused valid dirty sparse directory entry relocate along location llc MB llc byte amount additional per directory entry baseline sparse directory entry core cmp bitvector cache coherence protocol MESI MOESI etc therefore sparse directory entry expand CACTI verify lookup expand sparse directory comfortably hidden parallel llc access simulated cmp sparse directory slice entry per core cache KB KB KB respectively per llc additional KB KB KB storage sparse directory KB maintain relocate per llc storage overhead per MB llc KB KB llc capacity relocation relocation satisfy resident private cache refer NotInPrC satisfy alone however llc relocation private cache imminent access replace hurt performance baseline therefore desirable augment locality centric lru resident private cache llc implement lru policy refer LRUNotInPrC llc implement hawkeye policy equivalent cache averse resident private cache hawkeye policy reference prediction RRPV distinguish  RRPV cache friendly RRPV cache friendly RRPV indicates recently maximum RRPV resident private cache refer MaxRRPVNotInPrC llc replacement policy employ  grade desirable relocation likely resident private cache refer LikelyDeadNotInPrC discus architectural relocation llc satisfy target relocation relocation replacement policy relocation invoked directly llc llc victim architectural llc augment satisfies multiple tracked associate llc correspond llc constitute vector PV arrangement PV  avoid unnecessary PV scan compute logic gate gate llc logic trigger PV flip PV flip  llc llc  PV vector PV correspond PV nextRS register robin location PV register effectively index relocation robin selection important uniformly distribute relocation load across eligible llc algorithm decode nextRS compute PV decode RS decode nextRS vector nextRS decode nextRS implies nextRS algorithm relies significant binary binary obtain  complement logic algorithm isolate PV relative RS algorithm trigger whenever relocation operation  flip algorithm trigger  decode nextRS PV multiple PVs correspond decode RS currently average interval relocation operation llc evaluation latency execute algorithm discus detailed synthesis later however phase frequent relocation relocation interval latency execute algorithm handle situation decode nextRS relocation request llc maintain entry fifo buffer llc relocate buffer decouples actual relocation datapath relocation logic interface modular buffer entry llc address data byte storage fifo buffer slightly byte per llc relocation logic associate fifo buffer arbitrates llc contends llc logic llc bandwidth llc priority pending relocation avoid complicate coherence protocol directory entry relocate private cache request negatively acknowledge directory entry relocation completes rare occasion relocation fifo evaluation situation llc controller handle private cache request stall private cache request cannot deadlock progress pending relocation progress private cache request extremely rare situation llc resident private cache situation arise extremely uneven distribution active across algorithm computation decode nextRS input decode RS output decode nextRS generate mask RS mask decode RS decode RS extract upper portion PV split RS  mask  mask  decode nextRS upper    decode nextRS   compute output decode nextRS upper decode nextRS decode nextRS decode nextRS decode nextRS upper llc encounter evaluation situation handle relocate llc another llc query hop llc relocation relocation query randomly picked llc destination llc relocation proceeds accord aforementioned intra relocation protocol relocation non increase latency difference access relocate non relocate relocation due core conflict llc newly llc llc victim relocate decision allows balance volume  relocation across core another alternative relocation candidate newly llc llc victim randomly probability distribution relocation protocol discus additional implement specific relocation invalid invalid llc invalid invalid PV consult relocation metadata overhead PV per MB llc NotInPrC llc provision NotInP resident private cache private cache eviction writeback sparse directory slice directory entry indicates resident private cache NotInP llc access core llc NotInP reset llc NotInPrC llc NotInP metadata overhead per MB llc KB per NotInP PV ziv llc implement NotInPrC identify relocation invalid PV another per llc metadata overhead nextRS NotInPrC PV relocation invalid PV empty otherwise nextRS invalid PV relocation LRUNotInPrC PVs maintain invalid NotInPrC LRUNotInPrC llc NotInP access llc replacement llc lru NotInP llc LRUNotInPrC otherwise update NotInP llc lru llc LRUNotInPrC update accordingly relocation priority nextRS invalid invalid PV empty nextRS LRUNotInPrC priority PV LRUNotInPrC empty nextRS NotInPrC PV picked relocation target priority source llc checked satisfies correspond relocation priority invalid LRUNotInPrC NotInPrC relocation relocation victim selection algorithm execute llc llc victim relocation selection llc satisfy invalid anyway baseline llc replacement policy global llc satisfy invalid llc satisfy LRUNotInPrC global llc satisfy LRUNotInPrC llc satisfy NotInPrC global llc satisfy NotInPrC metadata overhead per MB llc KB per NotInP PVs MaxRRPVNotInPrC LRUNotInPrC PV LRUNotInPrC replace PV MaxRRPVNotInPrC operation LRUNotInPrC replace lru maximum RRPV obtain operation MaxRRPVNotInPrC metadata overhead LRUNotInPrC LikelyDeadNotInPrC PVs invalid NotInPrC LikelyDeadNotInPrC llc provision LikelyDead NotInP llc LikelyDead NotInP llc LikelyDeadNotInPrC relocation nextRS LikelyDeadNotInPrC PV picked invalid PV empty LikelyDeadNotInPrC PV empty nextRS NotInPrC PV picked priority source llc checked satisfies correspond relocation priority relocation relocation victim selection algorithm execute llc llc victim already NotInP llc update LikelyDead llc identify likely llc explore identify likely llc reuse proposal however suite purpose identify likely resident private cache identify cannot replace llc cache hierarchy aware replacement char proposal closest requirement proposal attempt infer likely llc viewpoint evict private cache core infer prioritize replacement llc proposal however llc replacement baseline policy instead identify likely llc relocation llc satisfy LikelyDeadNotInPrC important relocation purpose therefore adaptation char dynamically adjust confidence inference relocation demand discus evict cache cache eviction writeback llc baseline invoke char inference mechanism infer header eviction writeback message convey information llc llc receives private cache eviction writeback message inference message accordingly LikelyDead correspond llc LikelyDeadNotInPrC llc infer llc access due private cache LikelyDead reset char categorizes evict cache attribute private cache prefetch demand request private cache llc cache demand reuses experienced dirty char cache eviction recall llc counter ratio recall counter eviction counter threshold rarely recall llc hence likely evict cache classify infer adaptation char adjusts inference threshold dynamically restrict comparison   implement   initialize cache controller llc relocation request llc PV LikelyDeadNotInPrC empty threshold request bitvector  core  llc decrement llc receives private cache eviction writeback core  piggyback acknowledgment message eviction writeback  reset private cache non inclusive cmp model cache controller receives overwrites decrease llc dynamic threshold llc maintains sufficiently interval consecutive decrement threshold account request another interval private cache eviction overall relocation inference operates threshold likely accurate periodically reset llc cache phase summarize char per cache classification primary overhead LikelyDeadNotInPrC stem additional cache KB overhead per core KB cache additional llc KB overhead MB llc PVs per llc additional header private cache eviction writeback message convey inference outcome eviction writeback acknowledgment message update private cache response convey llc classification algorithm char storage overhead per llc per core KB cache llc additional BITS eviction ack inference eviction WB response llc PVs adaptation char additional storage grey additional information  message within parenthesis  implement  combine inference hawkeye char hawkeye llc access optimal behavior training inference mechanism char account cache reuses employ rudimentary inference mechanism implement PVs invalid MaxRRPVNotInPrC LikelyDeadNotInPrC NotInPrC relocation selection nextRS invalid priority nextRS MaxRRPVNotInPrC priority choice attempt replace cache averse marked hawkeye privately cached invalid PV empty nextRS LikelyDeadNotInPrC priority MaxRRPVNotInPrC PV empty nextRS NotInPrC picked PVs empty priority source llc checked satisfies correspond relocation priority invalid MaxRRPVNotInPrC LikelyDeadNotInPrC NotInPrC global relocation overhead implement overhead implement LikelyDeadNotInPrC additional PV per llc critical estimate synthesize module update  PV computes decode nextRS ziv llc TSMC synopsys compiler  mode compile ultra command critical purely combinational implementation logic timing target cycle ghz frequency NotInPrC PVs associate logic update  decode nextRS PV overhead per MB llc LRUNotInPrC LikelyDeadNotInPrC PVs overhead per MB llc  PVs overhead per MB llc replacement policy relocation relocation appropriate replace relocate relocation underlie priority implement llc priority within relocation evict invalid available evict relocation honor priority invalid invalid relocation priority dictate replacement policy within relocation llc implement NotInPrC LRUNotInPrC replacement policy relocation victimize NotInP closest lru llc implement MaxRRPVNotInPrC replacement policy relocation victimize NotInP RRPV llc implement LikelyDeadNotInPrC baseline llc policy lru replacement policy relocation victimize LikelyDead closest lru LikelyDead victimize NotInP closest lru llc implement  replacement policy relocation attempt victimize NotInP RRPV corresponds cache averse identify hawkeye privately cached victimize LikelyDead RRPV LikelyDead victimize NotInP RRPV llc controller execute replacement algorithm baseline replacement invoked traditional llc another relocate relocation handle sparse directory eviction ziv llc relies sparse directory structure location relocate llc sparse directory associative tag structure replace valid entry traditional protocol handle sparse directory eviction invalidates privately cached evict directory entry additionally ziv llc evict sparse directory entry relocate relocate invalidate llc invalidation location relocate directory entry evict recently propose zero directory eviction victim  protocol eliminate invalidation sparse directory entry evict accommodates evict directory entry llc directory entry evict llc avoids generation invalidation incorporate novel extension baseline cache coherence protocol ziv llc seamlessly integrates  protocol integrate maintains performance configuration provision sparse directory structure summary ziv llc ziv  inclusive llc inclusion victim relocate llc victim resident private cache propose option complexity llc victim relocate relocation primary performance determinant ziv llc otherwise ziv variant inclusion victim relocation quality llc victim relocation ziv llc leverage chip coherence directory maintain location relocate llc metadata logic overhead ziv llc IV simulation environment  simulation infrastructure evaluate proposal parameter simulated cmp CACTI lookup latency cache array latency llc lookup cycle additionally interconnect latency interface queue etc evaluate scalability proposal model core MB llc KB per core cache KB per core instruction data cache model evaluate server application baseline simulation environment cpu core dynamically schedule ghz entry rob entry lsq cache KB lru cache KB lru cycle KB lru cycle KB lru cycle llc sparse directory interconnect llc MB lru hawkeye cycle tag lookup cycle data access byte sparse dir  interconnect 2D mesh rout delay link latency memory model DRAMSim channel ddr controller channel BL rank per channel dram device KB buffer per latency parameter evaluate ziv llc implement relocation NotInPrC LRUNotInPrC LikelyDeadNotInPrC evaluate context lru policy MaxRRPVNotInPrC  evaluate context hawkeye policy proposal QBS implement lru hawkeye policy baseline policy determines victim lru  maximum RRPV minimum RRPV conduct evaluation multi programmed multi thread application homogeneous  multiple application cmp application input spec cpu suite ref input heterogeneous multi program random workload application input ensure application input heterogeneous workload avoid bias application application representative dynamic instruction simpoint application application completes representative statistic report representative application multi thread application performance sensitivity inclusion victim canneal facesim vip parsec suite  spec omp suite evaluate tpc mysql configure GB database GB buffer pool client core billion instruction tpc simulation replay instruction trace mysql server pin simulation RESULTS analyze performance multi programmed multithreaded workload respectively characterizes frequency relocation expense performance analysis multi programmed workload normalize configuration KB cache inclusive llc lru policy allows easily along dimension discus baseline llc policy lru performance cache capacity leftmost correspond baseline inclusive non inclusive LLCs performance QBS inclusive llc ziv llc shorten LikelyDeadNotInPrC LikelyDead KB cache QBS deliver performance non inclusive llc fail performance cache capacity increase llc resident private cache rapidly increase cache capacity becomes increasingly important appropriate llc victim llc resident private cache ziv llc implement NotInPrC LRUNotInPrC relocation perform QBS however NotInPrC LRUNotInPrC guarantee freedom inclusion victim QBS guarantee inclusive non inclusive QBS NotInPrC LRUNotInPrC LikelyDead KB cache KB cache KB cache speedup performance multi programmed workload lru baseline llc policy ziv llc implement LikelyDead performs across surprisingly outperforms non inclusive llc KB KB cache capacity understand performance improvement ziv llc baseline inclusive llc elimination inclusion victim selection llc victim relocation choice llc victim selection relocation due global relocation selection additional performance improvement non inclusive llc arises achieve ziv llc sometimes llc victim poorer quality baseline llc policy visible performance NotInPrC LRUNotInPrC KB KB cache capacity prominent discus hawkeye policy contribution non inclusive llc replacement policy lru LikelyDead policy without relocation replaces LikelyDead closest lru bridge roughly gap non inclusive llc ziv llc LikelyDead KB KB cache capacity remain performance gap attribute overall ziv llc LikelyDead gracefully KB cache capacity meeting surpass performance non inclusive llc however performance KB cache KB cache justify KB cache ziv inclusive llc comparison inclusive llc selects LikelyDead closest lru infer char victim target llc victim picked baseline policy privately cached LikelyDead target baseline victim privately cached baseline llc policy policy reduces volume inclusion victim significantly baseline inclusion victim refer policy  policy implement baseline llc policy across  performs QBS ziv llc NotInPrC LRUNotInPrC however policy significantly ziv llc LikelyDead configuration KB KB cache performance  suffers due baseline policy LikelyDead target LikelyDead llc underscore importance global victim ziv llc cache capacity grows detailed speedup achieve ziv llc LikelyDead configuration KB cache homogeneous application average speedup speedup heterogeneous tend benefit memory intensive application generate inclusion victim application thereby significantly degrade performance application private cache llc average relocation maximum across normalize llc upper panel cache panel average across multiprogrammed workload llc data closely performance trend ziv llc LikelyDead llc non inclusive llc KB KB cache capacity cache gcc ref xalancbmk omnetpp cld geomean geomean homogeneous heterogeneous speedup performance ziv llc LikelyDead configuration KB cache data QBS ziv llc nearly cache non inclusive across cache capacity QBS successfully eliminate inclusion victim although cannot guarantee freedom inclusion victim already proposal suffer performance due choice llc victim normalize llc cache multi programmed workload lru baseline llc policy discus performance llc hawkeye baseline policy performance already mention normalize configuration KB cache inclusive llc lru policy cache capacity rightmost performance ziv llc implement MaxRRPVNotInPrC shorten   shorten MRLikelyDead performance trend lru baseline across ziv llc implement MRLikelyDead performance non inclusive llc performance KB KB cache capacity combine likely inference char cache friendly cache averse classification hawkeye roughly percentage performance average ziv llc  relies classification hawkeye MRLikelyDead cannot outperform non inclusive llc cache capacity unlike baseline policy lru MRLikelyDead sufficiently compensate performance loss arise occasional choice llc victim eliminate inclusion victim quality victim baseline hawkeye policy significantly lru KB cache capacity smarter relocation justify cache capacity overall ziv llc MRLikelyDead performance KB cache capacity detailed speedup ziv llc implement MRLikelyDead configuration KB cache performance multi programmed workload hawkeye baseline llc policy normalize llc upper panel cache panel multi programmed workload baseline policy hawkeye trend llc performance trend closely cache trend baseline llc policy lru geomean xalancbmk  cam cld geomean homogeneous heterogeneous speedup performance ziv llc implement MRLikelyDead configuration KB cache normalize llc cache multi programmed workload hawkeye baseline llc policy sensitivity llc capacity MB llc core cmp summarizes average performance multi programmed workload configuration MB llc per core MB cache normalize respect baseline namely configuration MB inclusive llc lru policy KB cache per core MB llc replacement policy lru corresponds hawkeye policy lru policy ziv llc LikelyDead surpass non inclusive performance MB llc hawkeye policy ziv llc  MRLikelyDead perform non inclusive incl non incl LikelyDead incl non incl  MRLikelyDead lru hawkeye speedup performance multi programmed workload configuration MB llc core per core MB cache sensitivity sparse directory performance multi programmed workload sparse directory varied configuration MB llc hawkeye baseline llc policy KB per core cache performance variation traditional MESI coherence protocol baseline inclusive llc  llc ziv llc MRLikelyDead suffer performance degradation sparse directory reduce non inclusive llc gradually loses performance advantage baseline inclusive llc due invalidation arise sparse directory eviction however ziv llc closely performance non inclusive llc  coherence protocol succeed performance nearly invariant sparse directory achieves eliminate invalidation arise sparse directory eviction confirm ziv llc integrates seamlessly  protocol sensitivity sparse directory multi programmed workload hawkeye baseline llc policy KB cache performance analysis multi thread workload performance multithreaded application lru hawkeye baseline respectively canneal facesim vip  correspond configuration MB llc per core KB cache tpc correspond configuration per core cache capacity per core llc capacity core MB llc KB per core cache normalize lru baseline lru baseline canneal facesim vip performance sensitivity inclusion victim  tpc ziv LikelyDead performs non inclusive llc hawkeye baseline ziv llc rightmost application perform non inclusive llc facesim vip QBS proposal perform inclusive llc application performance sensitivity inclusion victim performance difference baseline inclusive  LLCs inclusion victim mostly harmless performance viewpoint application however application llc reuses baseline inclusive llc QBS sacrifice llc inclusion victim performance loss  validate scalability proposal  additional llc latency incur access relocate ziv llc performance impact nullify additional latency affect performance negligible amount inclusive non inclusive QBS NotInPrC LRUNotInPrC LikelyDead canneal facesim vip  tpc speedup performance multi thread workload lru baseline llc policy QBS  non incl inclusive MRLikelyDead canneal facesim vip  tpc speedup performance multi thread workload hawkeye baseline llc policy relocation statistic expense cumulative distribution interval cpu cycle consecutive relocation llc across llc multi programmed multithreaded workload configuration KB per core cache MB llc tpc KB per core cache MB llc relocation interval xaxis distribution ziv llc LikelyDead operating lru baseline  operating hawkeye baseline MRLikelyDead operating hawkeye baseline important observation data relocation interval cycle extremely recall combinational logic computes decode nextRS latency cycle therefore vast majority decode nextRS relocation arises  MRLikelyDead knee distribution shift significantly LikelyDead hawkeye baseline frequent relocation relocation interval volume inclusion victim hawkeye baseline interval cdf LikelyDead interval cdf  interval cdf MRLikelyDead cumulative distribution relocation interval cpu cycle configuration KB cache expense relocation addition per instruction epi multi programmed workload primary expense ziv llc arises relocation additional dynamic leakage expend widen sparse directory relocation involves reading llc relocation CACTI estimate expense assume technology node cache capacity increase epi contribution increase due increase relocation cache hierarchy inclusion victim across configuration contribution epi multi programmed workload multithreaded application detail increment epi typical epi pico joule nano joule instruction across processor CACTI micron ddr calculator epi addition average epi cache llc dram cache llc reduce execution configuration KB cache ziv llc MRLikelyDead average epi cache llc dram multi programmed workload configuration  additional epi ziv llc proposal enjoys overall advantage epi inclusive baseline additional epi component due reduce execution contribution average epi multi programmed workload VI summary zero inclusion victim ziv llc enables inclusive llc guarantee freedom inclusion victim crux involves invoke relocation protocol whenever baseline llc policy selects victim generate inclusion victim relocation policy complexity performance goal policy primarily satisfied target relocation offend llc victim relocate ziv llc allows integration reasonably private cache llc capacity deliver performance  llc llc replacement policy evaluation multi programmed multi thread workload evaluation baseline llc policy becomes challenge relocation inclusive llc perform non inclusive llc private cache capacity increase challenge laid foundation ziv LLCs important future explore relocation compute optimal relocation victim llc resident private cache private cache capacity future explore oracle assist optimal selection another important future analyze security guarantee ziv llc enable isolation private cache inclusive llc eviction