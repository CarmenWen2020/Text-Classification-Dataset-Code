provider amazon microsoft guarantee availability workload datacenters redundant infrastructure delivery typically redundant resource reserve infrastructure failure maintenance workload performance availability suffer unfortunately reserve resource utilization consequently datacenters built address propose zero reserve datacenters flex ensure workload desire performance availability flex leverage existence software redundant workload tolerate infrastructure availability impose minimal performance degradation infrastructure availability flex mainly comprises offline workload placement policy reduces strand ensure safety failure maintenance distribute monitor failure quickly reduces respect workload requirement detects failure evaluation flex strand increase deployed server translates construction saving per datacenter site lesson flex production microsoft datacenters index datacenter management redundant cap workload availability introduction motivation demand service infrastructure service IaaS  provider datacenters highly utilize infrastructure datacenter critical reduce datacenters built bottleneck resource provider oversubscription couple cap via performance throttle safely increase utilization deploy server datacenter carefully amount oversubscription prevent excessive performance degradation due cap  zhang affiliate chicago microsoft research  zhang affiliate facebook microsoft research however provider maintain infrastructure availability IaaS offering source inefficiency remains specifically provider provision redundant resource datacenters ensure availability maintenance infrastructure failure aka unplanned maintenance redundant resource typically reserve relatively rare unplanned maintenance reserve lose exist oversubscription approach ignore reserve aim restrict peak utilization performance suffer maintenance normal  operation peak cannot exceed failover budget reserve resource enormous opportunity increase datacenter utilization reduce typical availability datacenter resource reserve leverage resource deploy server significantly increase usage reduce overall per provision watt reduce datacenters built improve sustainability provider downside potential performance availability impact failover budget maintenance propose zero reserve datacenters manage workload desire availability performance detail demonstrate provider allocate reserve resource highly available datacenters deploy additional server minimize impact maintenance relies observation service typically exhibit relatively utilization occasional peak hence joint probability critical infrastructure failure maintenance peak employ oversubscription strategy provider typically host workload infrastructure availability requirement datacenter software redundant workload web data analytics tolerate infrastructure failure due built redundancy UI OOVBM  PNQVUFS SDIJUFDUVSF acm annual international symposium computer architecture isca doi isca workload inherently redundant individual IaaS virtual machine cannot tolerate infrastructure unavailability however vms tolerate slight performance throttle existence workload motivation combine oversubscription cap via throttle observation suggests maintenance rarely corrective action utilization server provision reserve resource spike occasionally observation workload shut others throttle upon rare unfortunately accomplish challenge allocate reserve server infrastructure immediately transfer load fail remain temporarily overdraw corrective action failover budget provider workload across datacenter guarantee safety failure minimize strand fragmentation maintenance provider corrective action within duration overdraw sustain failure within outage infrastructure information workload characteristic requirement action perform software presence potential server communication failure constraint manage zero reserve datacenters challenge address challenge flex extend highly available infrastructure recent generation microsoft datacenters ensure corrective action software introduce offline workload placement policy reduces strand ensure safety maintenance policy leverage mathematical program optimization efficient placement workload server web server IaaS vms batch workload deployment policy flex offline highly available distribute dynamically monitor infrastructure failure corrective action failover budget within monitoring relies highly available telemetry pipeline action throttle shut workload respect pre define workload performance availability requirement flex online deployed flex online production multiple datacenters flex offline discus lesson production evaluation flex offline median strand batch microsoft workload deployment whereas simpler policy strand difference traditional oversubscription flex median simulation emulation flex online manages quickly effectively respect workload performance availability requirement overall flex increase server deployment datacenter building per watt increase translates saving MW site multiple datacenters saving customer via differentiate pricing workload requirement related prior focus oversubscription cap normal non maintenance operation explicitly allocate reserve additional server deployment illustrates difference oversubscription leverage underutilization allocate deploy server peak budget contrast flex enables fully allocate reserve mitigate disruption allocate reserve orthogonal oversubscription allocate underutilized oversubscribed  prior reserve deploy server however workload availability requirement workload placement runtime decision failover limit amount reserve contrast flex entire reserve server deployment workload desire availability summary contribution propose notion highly available zero  datacenters demonstrate achieve combination infrastructure distribute software implement flex manage zero reserve datacenters minimal impact workload flex comprises offline component responsible smartly workload online component dynamically manage availability performance thoroughly evaluate flex via simulation experimentation realistic workload reduces strand manage minimal impact workload infrastructure microsoft datacenters deployed flex production load lesson II background motivation distribute redundant infrastructure availability infrastructure provider datacenters redundant device  UPSes generator transformer distribution PDUs redundancy backup distribute tradeoff maintainability fault tolerance tradeoff designer redundancy hierarchy hierarchy datacenter server distribute redundancy ups redundancy pdu redundancy simpler maintainable hierarchy datacenter consists isolated distribution hierarchy rack PDUs pdu active active manner PDUs roughly load PDUs upstream UPSes ensures ups roughly load UPSes ups becomes service due unplanned maintenance due concurrent utility generator failure entire load ups instantaneously transfer remain UPSes pdu ups mapping difference transfer backup ups availability scenario load UPSes exceed rat capacity failover limit allocation ups ups allocation limit ups capacity implies ups capacity reserve ups remains unallocated server massive source inefficiency propose allocate reserve additional server increase server refer sum UPSes reserve non reserve capacity provision flex ability reserve resource distribute redundant architecture cannot accommodate flex redundant active cannot allocate server ideal failure redundant twice normal load workload hardware heterogeneity workload provider service IaaS vms software  SaaS user service built rack ups pdu pdu pdu pdu pdu pdu ups ups ups server psu cpu pdu pdu pdu pdu hierarchy generator ups  pdu delivery psu provider software stack IaaS availability underlie infrastructure ensure availability service agreement SLAs met individual vms individual vms embody redundancy tolerate infrastructure failure contrast SaaS typically distribute provider tolerate failure minimize reliance availability infrastructure specifically SaaS component replicate across availability zone  AZ independent SaaS tolerate server failure AZ service heal another refer SaaS software redundant workload IaaS vms non redundant SaaS implement IaaS vms  hardware google dedicate bare server similarly microsoft SaaS offering bing exchange message service distribute cosmos data processing bare server datacenters VM service microsoft azure perspective flex datacenters workload service hardware rack deployment account difference workload flex relies pre define workload performance availability requirement impact function hardware provider deploy variety hardware configuration compute cluster gpu cluster storage cluster customer demand hardware configuration reduce flex server hardware cpu memory cap mechanism intel runtime average limit RAPL RAPL lower throttle cpu frequency possibly voltage memory access however hungry hardware gpus disk array capability moreover service amenable throttle workload broadly category software redundant non redundant capable non redundant non cap workload distribution across microsoft distribution workload category microsoft clearly significant portion deployed capacity software redundant non redundant cap flex relies observation fully allocate reserve provider exhibit workload distribution leverage flex  datacenters however datacenters host non redundant cap non capable workload software redundant workload public VM flex allows portion reserve cap deployment microsoft deployment flex target scenario VI capacity planning workload deployment provider demand forecasting procure resource server  planning deployment typically discrete chunk rack server optimize chain pipeline predictable sizable capacity growth workload deployment networking requirement satisfied networking requirement typically deployment treat  typically bottleneck resource focus requirement define per rack conservative estimate peak rack obtain exist benchmark specpower average utilization workload estimate allocate deployment datacenter responsible workload placement account requirement optimize placement decision minimize strand fragmentation due deployment flex feasibility analysis flex datacenters involve throttle shut workload confirm frequency corrective action corrective action maintenance downtime coincides utilization failover budget perform mathematical analysis estimate joint probability factor potential impact workload profile conventional datacenter reserve flex datacenter zero reserve analysis model datacenter utilization average variance distribution device unplanned downtime data fully allocate non flex datacenter september data peak utilization  provision unplanned maintenance average whereas maintenance average maintenance schedule utilization highly unlikely actually engage flex online dataset utilization weekend peak weekday utilization maintenance assume unplanned maintenance coincide utilization analysis datacenter corrective action assume default behavior flex online throttle server cap shut server software redundant workload analysis probability server shut roughly availability server software redundant workload availability server non redundant workload datacenters availability corrective action involve throttle impact function IV customer default behavior software redundant workload shut aggressively reduction price flex impose excessive unavailability software redundant service IV flex goal flex reserve ensure safety prevent cascade failure guarantee workload performance availability SLAs distribute redundant hierarchy couple mixed workload requirement enablers flex overview conventional non flex datacenter distribute redundancy provision allocate equipment reserve illustrates datacenter horizontal failover budget amount provision safely allocate reserve flex overview failover load remain device UPSes remains aggregate capacity scenario corrective action reserve flex datacenter instead entire provision deploy equipment peak usage beyond failover budget normal non failure operation aggregate capacity device sufficient withstand load however failure maintenance coincides load load remain device exceeds capacity overdraw cascade failure initial device failure another device shutdown another shutdown prevent cascade failure shave usage capacity remain device quickly within overload tolerance propose combination shut software redundant workload cap non redundant cap workload failure mitigate maintenance cap server resume operation capacity approach involves challenge deployment equipment ensure sufficient software redundant cap workload available utilization failover budget inability workload diversity strand device telemetry flex controller become mission critical highly available ensure overload action within tolerance duration overload curve enforce cap shut server significant impact workload performance availability critical ensure safety important minimize workload impact subset server safely failover budget flex tackle challenge component offline component flex offline label capacity demand workload optimizes placement server IV highly reliable telemetry pipeline monitoring device IV highly available flex config ups tolerance function load  enforce decision shutdown cap subset deployed server failover IV controller flex online flex online relies temporary overload capacity UPSes battery infrastructure  cable breaker typically tolerance UPSes tolerance curve battery function load failover load ups tolerance additional load additional  allows generator load battery enforce limit latency flex online failover detection telemetry collection controller action reduce rat ups capacity flex offline workload placement optimization II server deployment request specifies rack allocation per rack workload web IaaS vms additionally associate availability attribute deployment server deployment shut failover similarly cap attribute defines deployment cap non cap finally cap deployment associate flex defines cap instal rack provider cap workload flex cap maximum acceptable performance impact external cap workload IaaS vms leverage historical utilization couple statistical multiplexing bound average reduction acceptable threshold utilization flex online actually engage knowledge individual external workload historical rack profile impact across workload affected datacenter overly penalize specific customer finally provider software redundant workload flex rack shut goal deployment request  demand strand due pocket lack workload diversity minimize ensure shave utilization maintenance scenario assume maximum shave software redundant rack entire allocate non redundant cap rack difference allocate flex recover non redundant non cap rack historically placement manually datacenter deployment approach robin across UPSes modification approach balance shave non shave workload across UPSes ensure constraint met normal failover operation however approach strand due suboptimal placement propose flex offline automate workload placement algorithm integer linear program ILP seek optimal placement request demand simplify formulation focus ups normal failover operation brevity omit constraint device PDUs deployment request demand UPSes pdu model mapping pdu upstream UPSes  allocate deployment associate indicator variable deployment pdu deployment normal operation allocate constrain ups capacity accounting distribute redundancy distribute load across UPSes pdu    failover ups addition regular load ups load   deployment cap shut server workload   software redundant   non redundant cap  non redundant non cap highly reliable telemetry pipeline load ups failure shave constrain ups capacity      finally objective workload placement minimize strand across ups device    ILP determines deployment datacenter pdu deployment provider additional constraint bound impact external non redundant workload external vms omit evaluation highly available telemetry pipeline flex hinge reliable fidelity  telemetry device flex importance telemetry pipeline significantly oversubscription approach device failover flex datacenter instantaneous load transfer cascade failure detect tackle within device tolerance duration contrast load spike normal operation usually gradual layer hierarchy detection typically acceptable flex datacenter unreliable telemetry unnecessary throttle shut server ensure safety data workload impact factor highly reliable telemetry pipeline failure pipeline meter monitoring device flex controller redundancy diversity pipeline stage pipeline comprises meter network switch  publish subscribe pub sub explain sufficient monitor device ups monitor explicitly device failure however rely meter error due meter failure  hence logical meter equivalent device accounting loss     equivalent drawn ups redundancy allows consensus approach tolerates failure  meter prevent failure network switch network diversity logical meter management switch datacenter network beyond redundant similarly deploy independent data  fault domain physically independent pub sub flex controller experimental observation telemetry pipeline latency limit flex flex online runtime decision controller operation flex controller responsible detect failover corrective action failure maintenance ups generator utility transformer switch  failover ups others flex controller monitor overdraw individual ups device specific failure sufficient distribute redundant architecture couple workload placement constraint ensure ups overdraw occurs failover utilization telemetry pipeline controller highly available controller multi primary configuration instance fault domain pdu rack switch telemetry UPSes frequency individual rack frequency controller instance instance action  throttle shutdown action idempotent independently compromise safety algorithm policy controller execute subset rack throttle shut overdraw detect ups goal ensure safety minimize overall impact workload policy candidate workload software redundant non redundant cap  function return rack workload randomly prioritize workload decides correspond action computes estimate recover calculates estimate impact workload due cap throttle rack algorithm online decision policy impact function action SP     buffer workload  shutdown software redundant  non redundant cap software redundant   non redundant cap impact action argminc action action return action inner loop policy accumulates candidate rack correspond impact action estimate recover across workload finally selects rack candidate minimum impact update estimate ups rack portion load ups estimate ups device lower limit policy return action policy estimate amount recover candidate rack flex controller continuously monitor rack datacenter recent snapshot estimate series model ensure safety buffer account estimation flex online enforces corrective action limit non redundant cap rack correspond flex RAPL shut software redundant rack prevent instability due  flex online sends notification emergency software redundant workload recover AZ action enforce controller monitor workload characteristic increase device limit additional action conversely significantly cap server restore reduce impact policy estimate action impact workload candidate workload define perceive performance availability impact function percentage affected shut throttle rack impact function impact function function workload defines impact axis impact function workload percentage rack workload impact axis throttle shut percentage rack perceivable impact workload performance availability whereas percentage rack critical unless absolutely vital safety percentage rack throttle shut incremental impact workload halt progress workload implement business continuation failover another datacenter software redundant workload typically scenario function illustrate potential impact function service microsoft function typical non redundant cap workload VM service incremental impact throttle rack critical management rack contrast function software redundant stateless workload shut percentage rack impact load migrate seamlessly remain rack another datacenter finally function software redundant stateful workload partition across rack growth buffer shut impact rack perform useful incremental impact shut critical management rack absence impact function software redundant workload flex online non redundant cap workload throttle summary deployment workload placement optimization flex offline couple runtime flex controller flex online reserve safely failover scenario desire performance availability workload evaluation workload placement flex offline evaluate flex offline simulation demand microsoft historical production workload deployment simulate datacenter server delivery infrastructure methodology workload placement simulator faithfully model distribute redundant hierarchy MW simulator model placement deployment rack specific validates constraint normal failover limit device reject deployment cannot without violate constraint simulator trace demand deployment request request specifies rack provision per rack flag software redundancy cap capability couple flex evaluate placement policy trace typical deployment microsoft typical deployment rack deployment rack workload distribution average software redundant non redundant cap non redundant non capable workload flex correspond allocate rack generate trace demand provision flexibility placement policy  request rout placement finally impact deployment request shuffle trace variation data simulator solves flex offline ILP gurobi solver evaluation metric evaluate effectiveness  metric strand unusable unallocated due fragmentation equation IV seek placement reduce metric throttle imbalance indicates fairness throttle impact non redundant cap workload across ups failure seek reduce metric placement balance recoverable via throttle evenly across ups maintenance balance workload unduly penalize regardless calculate metric ups maintenance recover UPSes throttle provision shut software redundant workload calculate throttle imbalance max min perfect balance placement policy evaluate policy random randomly deployment simplest policy clearly naive balance robin deployment category software redundant non redundant cap  non cap across pdu robin manner goal roughly balance demand category ups policy implement guideline datacenter administrator flex offline optimizes placement deployment request demand horizon horizon batch variation flex offline batch demand worth random balance robin oracle strand provision impact placement policy strand capacity flex offline batch capacity flex  entire demand trace batch horizon depends certainty demand forecast typically flex  policy production variation policy purposely batching helpful  improve random balance roundrobin placement policy datacenters flex concentrate instead load across pdu finally robin policy strictly flex balance robin strand percentage provision datacenter policy delimit percentile strand across deployment trace horizontal median whisker extend minimum maximum strand across trace policy strand provision although random policy flexible exhibit median strand balance robin improves median variation across trace flex offline policy perform deployment optimal within respective horizon flex offline reduction median strand balance robin flex offline median flex offline narrower finally  oracle strand achieve longer horizon variation flex offline oracle varies ILP solver improvement already non zero improve demand forecasting pipeline lengthen horizon policy throttle imbalance balance robin outperforms random explicitly balance workload category across PDUs UPSes flex offline policy improvement increase horizon flex offline slightly median throttle imbalance flex offline oracle impact deployment  balance robin oracle throttle imbalance impact placement policy throttle imbalance  deployment distribution dominate rack deployment provider internet service mostly deployment incremental growth impact flex offline deployment specifically trace limited deployment rack deployment rack deployment trace deployment rack deployment tend reduce strand throttle imbalance maximum deployment rack flex offline exhibit roughly median strand throttle imbalance maximum rack impact software redundant workload software redundant workload reserve assume trace non redundant non cap workload flex software redundant workload significantly reduce strand detail software redundant workload median strand flex offline allocate datacenter without cap shave upon maintenance increase software redundant workload median strand quickly respectively within plus minus median summary flex offline improves strand throttle imbalance combination batching optimize demand horizon via ILP benefit robust across deployment workload distribution flex offline oracle optimal due visibility future demand demand combine uncertain demand forecast increase practical horizon placement thereby reduce strand throttle imbalance runtime decision flex online evaluate flex online simulation impact scenario evaluate performance methodology evaluate flex online corrective action algorithm impact function flex offline deployment trace datacenter historical rack workload impact function workload datacenters model rack distribution distribution rack derive ups load accordingly snapshot input controller algorithm sample impact function scenario clarity function workload category per scenario assume  workload performance availability non redundant cap workload implementation imposes restriction extreme scenario impact shut software redundant workload impact throttle non redundant cap workload contrast realistic scenario workload datacenters evaluation metric simulate failure ups report average percentage impact rack rack shut rack throttle across ups failure impact corrective action scenario axis function utilization ups failover xaxis curve utilization marker whisker standard deviation across ups failure focus narrow utilization axis action utilization sustain utilization ups impractical flex offline guarantee safety utilization impact rack percent rack rack shut percentage rack shut rack throttle percent throttle rack rack impact ups failure happens utilization scenario extreme impact rack aggressive shut rack shut action recovers throttle rack impact function promote shut software redundant rack prefer throttle non redundant cap percent impact rack percent rack shut percent rack throttle flex online runtime decision failover extreme scenario extreme throttle candidate non redundant cap rack shut software redundant rack remain scenario behave extreme realistic specifies performance impact shut throttle therefore shut throttle rack comparison realistic summary thanks impact function flex online successful prioritize corrective action accord workload performance availability maintenance moreover ability aggressively shut software redundant rack enables flex online reduce impact non redundant workload IaaS vms flex online performance joint probability failover peak utilization extremely production failure undesirable performance impact operation flex online emulate environment server discus learning production deployment methodology emulate datacenter consist UPSes distribute redundant hierarchy capacity MW capacity MW reserve rack per generate trace  demand distribution workload category workload per category flex offline policy workload placement emulate rack server synthetic benchmark emulate workload execution server utilization rack pre define factor server peak rack provision flex provision rack  cap workload benchmark internally evaluate software stack specifically terasort software redundant workload latency sensitive tpc benchmark non redundant cap non cap workload workload instance independently VM configure benchmark parameter instance server emulate aggregate utilization provision ups stage setup normal operation failover recovery emulate ups rack respectively setup stage server spawn benchmark accord assign workload mapping normal operation utilization UPSes stabilizes provision simulate ups failure twelve load transfer remain UPSes spike MW capacity UPSes flex online controller detects overdraw impact function couple rack snapshot utilization throttle shut decision controller policy decides shut rack  workload throttle non redundant cap rack shave corrective action enforcement rack non redundant non capable workload remain untouched restore fail ups load UPSes ups flex online controller detects recovery release throttle rack non redundant cap workload restarts rack  workload resume normal operation amount throttle limited pre define flex impact throttle non redundant capable workload overall percentile latency tpc benchmark throttle rack increase non throttle increase rack loss extremely rare reduce stricter impact function workload loss rare tradeoff benefit allocate reserve resource summary dynamic ups rack ups rack flex online emulation behavior flex online capable quickly react ups failure corrective action latency flex online production emulation VI VI  production deployment deploy flex production microsoft stage deployed flex datacenters allocate portion instead reserve additional server portion shut workload maintenance throttle discus lesson deployment production requirement entire reserve infrastructure upgrade deployed portion reserve legacy datacenters continuous load capacity upstream device medium voltage transformer feeder generator entire load reserve allocate maximum potential overload overload capacity ups battery failover insufficient sustain load detect failure enable flex controller microsoft building datacenters rat upstream device ups battery flex reserve resource additional implication infrastructure flex available capacity safely deploy server reserve production rack requirement cubic per per watt cfm constraint offline workload placement optimization constraint bottleneck increase server density significant server cfm requirement server airflow  improve datacenters backward compatibility redundant flex leverage redundancy deploy additional server upon loss redundant unlike lose redundant available mitigation datacenter gradual hence mitigation workload migration another domain enact strict flex cap shutdown action envision extra infrastructure additional server flex zero reserve meter fidelity IV reliable telemetry critical flex online however device UPSes fidelity external monitoring polling ups meter return due meter inaccuracy deploy additional ups output meter compensate multiple datacenter monitor device meter reading contention various fidelity dedicate flex meter careful coordination reduce polling interval firmware network status mechanism rack manager RM baseboard management controller  throttle shutdown server critical firmware rms  date deploy server exist server service replace due failure addition ensure action rms  reachable maintenance ensure built background service monitor firmware status network reachability rms responsible periodically inject failure fake action ensure firmware regression software bug issue action fail actual maintenance issue service warns operator engineer immediate remedial action redeployment firmware bug fix performance characteristic metric production data latency detect failure latency corrective action percentile data latency production windowing delay consolidate physical data logical meter latency throttle shutdown action around percentile MW DC latency limit impose device towards financial incentive availability workload entire reserve critical deploy workload amenable infrastructure availability microsoft workload unfortunately exist workload built capability individual IaaS vms inherently redundant redesign software redundancy fault tolerance currently develop model incentivize workload relaxed performance availability requirement vii related knowledge propose datacenters entire reserve server deployment guarantee safety failover offline workload placement workload desire availability nevertheless oversubscription workload awareness storage related oversubscription address oversubscription typically cap prevent circuit breaker author  infrastructure discharge battery throttle workload normal operation recent treat workload differently priority interactivity availability requirement oversubscription performance impact focus management normal non maintenance non failover operation without regard fully utilize reserve resource associate challenge flex focus allocate reserve resource additional server manage maintenance orthogonal combine prior  combine oversubscription redundancy redundant datacenters deploy server priority selectively throttle workload availability requirement placement failover approach ensures safety limit amount reserve contrast infrastructure availability aware workload placement highly available telemetry flex entire reserve guarantee safety oversubscription addition flex increase server density utilization workload priority awareness prior oversubscription recognize potential performance degradation cap notion workload priority ibm  shift server priority workload throttle server priority harder across PDUs quality service task server contrast flex implement detailed descriptive approach workload awareness impact function account explicit description workload performance availability impact placement runtime decision storage flexible infrastructure researcher repurposing storage device esd shave peak focus distribute  attach server rack approach vulnerable unbalanced peak deplete  quickly flex datacenters centralize  backup software react finally rout connection rack PDUs shuffle distribution topology lower reserve capacity eliminate moreover dual cord architecture costly infrastructure upgrade enable richer physical connectivity CONCLUSIONS introduce zero reserve datacenters flex manage flex leverage infrastructure availability requirement software redundant workload combine static workload placement dynamic management safely allocate reserve simulation flex significantly reduces strand quickly effectively manage workload availability performance flex decrease construction significantly saving datacenter site deploy flex production microsoft drew lesson benefit provider