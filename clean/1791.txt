provider typically server datacenters however increase transistor dennard chip thermal exceeds capability future consequently provider explore plate immersion hungry workload server cooler enable provider server component beyond normal frequency overclocking provider tradeoff increase performance via overclocking component reliability implication argue phase immersion pic promising technology prototype pic tank benefit pic characterize impact overclocking performance reliability moreover propose scenario advantage overclocking platform  server virtual machine VM auto autoscaling scenario leverage overclocking hiding latency VM creation postpone VM creation realistic workload tank prototype overclocking improve performance increase VM pack density improve latency auto scenario combination pic overclocking reduce platform index datacenter server overclocking workload performance management introduction motivation provider typically chiller outside server availability expertise equipment easy install maintain unfortunately downside dissipation efficiency sink fan increase operating component junction leakage negatively impact efficiency degrade performance due thermal limit component approach limit performance throttle reduce frequency importantly trend increase transistor couple dennard chip thermal TDP beyond capability   affiliate texas austin microsoft intern future manufacturer CPUs gpus capable provider explore plate immersion hungry workload technology chip narrower reduce leakage eliminate fan reduce datacenter usage effectiveness PUE ratio server networking google tensor processing TPUs plate alibaba introduce phase immersion pic tank datacenters reduces consumption achieves PUE  operates MW facility comprises tank achieves PUE phase immersion pic provider explore tradeoff technology however argue immersion pic significant advantage immersion substantially easy engineer evolve plate pic equipment immerse tank dielectric dissipate equipment dielectric boil phase remove chip later vapor convert condenser moreover argue immersion thermal dissipation junction server frequency overclocking longer capability overclock direction enhance performance however overclocking overclocking increase consumption impact component reliability stability lifetime furthermore overclocking improve performance workload overclocking cpu memory bound workload improvement performance component overclock harder provider usually manage virtual machine vms knowledge workload vms provider carefully manage overclocking performance UI OOVBM  PNQVUFS SDIJUFDUVSF acm annual international symposium computer architecture isca doi isca benefit manage associate risk explore immersion technology ability overclock component manage implication plate immersion datacenters pic promising technology immersion tank prototype recently production environment benefit pic explore aspect overclocking component lifetime stability ownership TCO implication representative workload benefit operating server frequency tank prototype workload latency execution shorten increase frequency processor gpu memory understand overclocking beneficial wasteful exploration propose scenario provider advantage overclocking strike balance performance component lifetime explore detail offering performance vms overclocking  server overclocking improve VM auto auto scenario leverage overclocking hide latency vms postpone creation vms latter approach component overclock leverage hardware counter bottleneck analysis evaluation realistic workload pic tank prototype overclocking improve workload performance increase VM pack density combine cpu oversubscription TCO analysis increase density reduce per virtual core microsoft azure comparison scenario auto scenario overclocking improve latency latency sensitive workload traditional auto related aware prior pic realistic workload computational sprint overclocking thermal concern alleviate however rely phase sustain overclocking contrast thermal perspective pic enables overclocking opening avenue aware prior proposal overclocking extensively context oversubscription auto summary contribution explore tradeoff demonstrate pic tank prototype immerse hardware phase immersion  dielectric phase boil vapor reject  additional overclocking  carefully potential performance benefit quantify impact overclocking performance lifetime stability TCO overclocking performance multiple realistic workload tank prototype propose scenario provider leverage overclocking datacenters reduce enhance customer overclocking enhance VM auto detailed extensive overclocking auto realistic workload tank prototype II immersion  datacenters datacenter datacenters  remove mainly    chiller loop chiller  tower via evaporation outside spray reduce recently provider introduce tackle chip initial effort typically plate hungry component fluid plate pip remove component although efficient plate specifically manufacture component increase engineering complexity moreover plate remove localize hungry component typically component immersion alternative plate immersion entire server  tank belong allied limited permission edit modify grant author comparison datacenter   average PUE peak PUE server fan overhead max server chiller  cpu plate pic pic II  commonly USED dielectric  FC HFE boil dielectric constant latent  useful dissipate contact dielectric recur engineering overhead removal phase manner pic tank absorbs  pump whereas pic phase vapor via boil away vapor naturally tank  coil  lose transfer coil condenser secondary loop ultimately coil finally reject cooler pic dissipate amount comparison technology efficiency offs summarize publicly disclose  server fan overhead compute platform  server data pic prototype overall chiller server constant humidity suffer PUE  lower PUE expose server aggressive environmental server fan overhead plate PUE engineering complexity pic achieves PUE due efficient transfer without engineering overhead increase server whereas remain fairly stable focus exclusively pic finding apply pic plate immersion electronic fluid specifically engineer effectively transfer electronics without compromise lifetime performance  fluid extensively supercomputer bitcoin mining pic pic  FC  HFE boil specific non conductive non toxic  moisture contaminant extremely  due chemical composition promote interaction electronics II summarizes flux pic tank prototype boil enhance  improves transfer performance commonly apply copper boiler attach cpu integral spreader directly integral spreader sink  cpu improves boil performance smooth pic tank  immersion aggressive component overclocking prototype tank host server tank host server tank evaluate overclocking tank perform thermal reliability tank tank dielectric boil tank core overclockable xeon skylake  HFE data tank extrapolate datacenter server tank core intel overclockable nvidia RTX gpu FC hungry component without sink  tank remove disabled fan remove sticker contaminate tank tank compute socket server blade prototype outside tank server remove server blade equip core intel skylake server TDP equip core skylake server TDP blade non overclockable immersion thermal performance pic tank prototype FC processor lock version xeon overclocking server consumes maximum processor socket memory ddr DIMMs motherboard fpga storage flash fan recently deployed tank production environment baseline compute server configure enable fan serf baseline throughout conduct thermal chamber server cubic per IV overclocking immersion  overclocking manufacturer CPUs gpus beyond nominal frequency within intel turbo boost opportunistically increase core active core instruction execute allowable operating frequency server processor processor within guaranteed minimum frequency thermal budget permit opportunistically turbo frequency improve performance analysis azure production telemetry reveals opportunity processor frequency overclocking domain active core utilization domain opportunistically component beyond pre define voltage thermal limit improve performance however opportunity diminish future component generation TDP limit contrast pic capability thereby guaranteed overclocking irrespective utilization without significant impact operating importantly overclocking significantly impact consumption component active core turbo domain core core frequency guaranteed domain min overclocking domain operating domain guaranteed turbo overclocking non operating domain boundary marked maximum  frequency consumption  FC platform skylake core skylake core pic pic  max turbo 1GHz ghz 6GHz ghz  location copper plate cpu  thermal resistance lifetime computational stability  TCO evaluate impact enable overclocking datacenters series server tank prototype observation compute server baseline although processor tank lock restrict TDP assume overclocked TDP accord lifetime model overclocking pic processor lifetime baseline overclocking overclocking translates additional dual socket server leverage overclockable xeon tank extrapolate implication overclocking consumption important datacenter consideration increase infrastructure immersion increase substantially operating frequency however efficiency improvement enable pic partially offset increase static processor reduces operates quantify reduction performance processor tank counterpart improvement frequency bin mhz reduce performance static per socket immersion eliminates fan compute server peak PUE reduce  datacenters pic reduction datacenter server per server reduce around static fan PUE per server gain alleviate substantial portion IV reliability function operational PARAMETERS failure mode dependency description Î”T gate oxide breakdown impedance source drain electro migration diffuses compromise gate structure thermal cycling micro crack due expansion contraction increase overclocking despite efficiency gain pic cannot overclock indiscriminately limit delivery infrastructure datacenter exacerbate oversubscription initiative undertaken provider improve utilization datacenters overclocking oversubscribed datacenters increase limit trigger cap mechanism mechanism intel RAPL rely cpu frequency reduction memory bandwidth throttle therefore offset performance gain overclocking hence provider perform overclocking carefully provider overclock underutilization datacenters due workload variability diurnal exhibit workload addition workload priority cap minimize impact critical overclocked workload limit breach due overclocking takeaway overclocking increase consumption substantially however immersion saving partially offset requirement lifetime increase operating frequency consequently voltage reduce lifetime electronics however immersion compensate lifetime reduction junction quantify lifetime operating obtain composite processor model fabrication IV summarizes lifetime degradation model lifetime gate oxide breakdown electro migration thermal cycling dependent accelerate lifetime reduction dependent parameter junction variance voltage overclocking immersion affect parameter substantially model exponential relationship voltage lifetime consistent prior research validate model accelerate account impact lifetime degradation function workload voltage thermal stress useful lifetime server  model calculate voltage electronics maintain predict lifetime processor lifetime estimation  lifetime comparison  xeon processor pic nominal overclocking  OC voltage max DTj lifetime FC FC HFE HFE server pic nominal overclocked frequency baseline nominal frequency junction lifetime operating voltage performance experimental voltage curve obtain overclockable xeon increase voltage voltage increase frequency core turbo evaluate model operating estimate processor lifetime configuration overclocked processor junction increase project lifetime FC nominal junction lifetime overclocked increase lifetime approximately HFE junction lower nominal overclocking interestingly overclocking lifetime  baseline finally model predict lifetime assumes worstcase utilization therefore moderately utilized server accumulate lifetime credit server overclocked beyond frequency boost performance extent duration additional overclocking balance impact lifetime component manufacturer counter overclocking lifetime takeaway immersion compensate lifetime degradation due overclocking pave server operating offs computational stability excessive overclocking induce  due aggressive circuit timing voltage  application crash erroneous error fortunately processor already implement error correction particle strike processor cache access verify error whenever aggressive overclocking correctable error overclocking platform error tank cpu cache error tank whenever verify computation detect error server  crash whenever excessively voltage frequency unclear crash voltage timing issue contrast indicates overclocking frequency core turbo stable risk correctable uncorrectable error overclocking balance computational stability accomplish monitoring rate correctable error component manufacturer define maximum overclocking frequency avoid computational instability monitor relevant counter safety takeaway computational stability unaffected moderate increase frequency voltage excessive overclocking potentially affect stability carefully manage environmental impact overclocking overall increase consumption source CO however datacenters primarily renewable source usage simulated amount project usage effectiveness  par  datacenters global impact potential potential minimize vapor loss fluid seal tank however load variation server service vapor escape tackle issue implement mechanical chemical trap vapor tank facility takeaway although overclocking consume renewables careful vapor management enable environmentally friendly overclocking TCO across azure TCO analysis pic datacenter analysis datacenter non overclockable overclockable pic datacenter datacenter construction operation tax fee factor prior TCO option per physical core metric  capacity provider azure baseline   datacenter azure server generation pic datacenter additional server related ability overclock tank fluid immersion pic datacenter mechanical electrical infrastructure redundancy networking iso availability baseline account average overclocking VI TCO analysis report relative blank baseline VI TCO analysis pic  relative  baseline non overclockable pic overclockable pic server network DC construction operation tax fee immersion per physical core confidentiality contribution factor towards baseline TCO prior although pic tank easily offset saving per physical core non overclockable pic datacenters cheaper saving primarily pic lower datacenter PUE enables reclaim towards server thereby amortize construction operation across core addition server saving eliminate fan server network increase pic additional server overclockable pic datacenters reduce TCO baseline comparison non overclockable pic capability overclock increase per physical core delivery infrastructure upgraded server requirement overclocking upgrade negate server saving obtain switch non overclockable pic overclocking increase TCO analysis conservatively assume overclocking maximum server per socket translates increase server consumption non overclockable pic increase consumption brings overclockable pic baseline finally overclockable pic saving overclocking oversubscription server describes oversubscription TCO impact VI takeaway immersion enables overclocking reduction per physical core comparison datacenters performance finally performance impact overclocking depends workload bound resource overclocking cpu memory bound workload improvement performance similarly overclocking memory bottleneck cpu  component overclock harder provider knowledge workload inside vms counter model OC lifetime reduction OC lifetime reduction immersion frequency boost vms pack vms CPUs VM VM CPUs VM VM CPUs VM VM CPUs VM VM VM turbo computation capability processor vms immersion environment provider extend capability immersion performance vms reduce dense VM pack provider predict impact overclocking VM workload evaluate impact overclocking workload detail VI takeaway despite thermal benefit immersion provider carefully overclocking performance benefit achievable manage associate risk overclocking  datacenters describes overclocking reduce provider enhance customer VI evaluates pic allows operating server frequency illustrate difference CPUs turbo maximum operating frequency CPUs anything beyond restrict due thermal constraint contrast immersion frequency operating CPUs lifetime reduction operating CPUs skylake processor HFE operating frequency lifetime counterpart CPUs frequency increase lifetime impact carefully manage associate risk IV additional frequency highperformance vms customer improve pack density vms server reduce capacity buffer datacenters mitigate capacity crisis datacenters augment VM auto enhance customer cpu overclocking overclocking component applies performance vms provider vms turbo boost however ability overclock provider performance VM frequency performance VM regular VM furthermore VM opportunistically frequency however decision provider performance risk described IV dense VM pack provider multi dimensional bin pack vms server normal capacity buffer capacity failover capacity immersion emergency VM failover normal VM VM VM VM VM VM VM VM VM VM VM VM VM VM VM VM buffer without overclocking increase VM pack density vms server ratio thereby reduce server percentage tighter VM pack equates saving provider azure however potential performance impact vms limit provider ability increase VM pack density provider vms unlikely resource rare scenario occurs provider overclocking mitigate cpu oversubscription overclocking assign vms server contrast assign performance loss oversubscription compensate overclocking importantly combination technique selectively provider willing  vms customer aware vms lifespan overclocking latter issue overclocking simply gap performance loss VM migration resource hungry lengthy operation eliminate completely buffer reduction provider typically reserve capacity buffer service failover due infrastructure failure upon vms affected failure reserve capacity however rare usually buffer unused underutilized illustrates buffer capacity failure clarity illustrate buffer comprise server across partially server provider overclocking replace static buffer virtual immersion normal operation capacity vms upon failure affected vms overclock server host capacity crisis mitigation provider datacenters demand forecast capacity planning challenge demand mismatch construction delay equipment shortage incorrect forecast compute capacity available capacity actual demand demand prediction gap increase capacity overclocking overclocking mitigate compute capacity gap threshold   threshold threshold cpu utilization  VM  VM cpu utilization overclocking improve autoscaling shortage customer deny service additional server deployed provider incorrectly predict demand capacity gap bridge gap overclocking vms deployed exist infrastructure assume resource memory storage available overclocking enhance auto provider auto vms deployment accord user user specify VM average cpu utilization exceeds similarly specify average utilization VM remove although cpu utilization metric auto user specify others memory utilization thread queue metric proxy application metric user latency however expensive deploy vms overhead impose performance penalty application consequently user typically threshold vms actually although provider predict surge load proactively impact application performance provider VM deployment overclocking mitigate performance impact overclocking essentially exist VM VM deployed completes vms regular frequency temporarily effective frequency faster illustrates temporarily  VM hide overhead VM completes variant overclocking postpone vii experimental frequency CONFIGURATIONS config ghz voltage offset turbo ghz llc ghz memory ghz OC OC OC obviate frequency typically impact cpu utilization provider vms utilization user specify threshold threshold illustrates prevent  altogether approach provider model impact frequency utilization crucial overclocking vms indiscriminately increase consumption impact component lifetime reduction utilization IV load provider periodically monitor impact overclocking utilization adjust frequency increase decrease accordingly finally overclocking  trigger cpu utilization threshold VI evaluation evaluates experimental setup representative application evaluation benefit component overclocking application performance vms evaluate overclocking enhance pack vms server estimate pack ratio VM performance degrade directly apply buffer reduction capacity crisis mitigation finally overclocking enhance auto scaler evaluate benefit throughout project potential efficiency experimental environment server server tank II server GB ddr memory tank xeon processor TDP tank intel processor nvidia TDP gpu server server datacenter edition hyper enable virtualization perform tank gpu overclocking perform tank frequency configuration configure frequency component vii configuration tank overclock core uncore memory production baseline configuration gpu CONFIGURATIONS ghz turbo ghz memory ghz voltage offset    IX APPLICATIONS metric application core description public metric sql  standard OLTP lat training tensorflow model cpu training distribute lat BI business intelligence client server queue application lat  performance  microsoft disk IO bench ops specjbb specjbb ops terasort hadoop terasort vgg cnn model gpu training memory bandwidth MB overclock configuration datacenters configuration independently overclock memory uncore cache configuration overclock combination component OC configuration knob gpu overclocking baseline turbo enable configuration progressively overclock gpu sub component  application IX describes application publicly available core application metric application application commonly whereas evaluate impact gpu memory overclocking performance vms evaluates provider performance vms overclocking processor memory gpu overclocking application impact overclocking metric average percentile server instance application isolation application metric application configuration overclocking improves metric enhance performance core overclocking OC benefit exception terasort  however considerably increase cache overclocking OC accelerates   incur marginal overhead memory overclocking OC improves performance slightly application significantly memory bound sql memory overclocking substantially increase BI illustrates importance careful overclocking although OC improves performance substantially reasonable penalty overclocking component increase without offering performance gain training predictable access prefetcher timely data cache faster cache memory improve performance significantly memory overclocking application evaluate impact memory overclocking configuration vii sustainable memory bandwidth computation rate kernel triad bandwidth performance improvement happens memory overclocked OC achieve improvement respectively increase core cache frequency positive impact peak memory bandwidth memory request faster increase aggressiveness overclocking average increase gpu overclocking machine training evaluate impact gpu overclocking vgg pytorch cnn model input entirely gpu memory normalize execution absolute vgg model overclocked configuration execution decrease proportional frequency increase increase voltage frequency performance however recent batch optimize model  overclocking beneficial extent  gpu memory overclocking marginal improvement  gpu memory overclocking  additional improvement increase   offering performance improvement overall baseline summary application benefit overclocking component however provider careful increase frequency bottleneck component avoid unnecessary overhead dense VM pack via oversubscription overclocking mitigate interference induced core oversubscription tank latency sensitive vms latency sensitive batch workload vms latency sensitive vms instance sql vms VM virtual core  oversubscription assign physical core pcores  across vms impact oversubscription pcores assign vms oversubscription oversubscription quantify benefit overclocking normalize metric average server workload bandwidth normalize execution baseline overclocked gpus server configuration OC vii average latency average latency decrease increase  crucially latency  comparable within OC pcores pcores overclocking performance pcores become available additional vms inactive pcores  idle baseline pcores sql consumes average respectively active pcores OC server consumes average respectively core uncore frequency increase increase batch latency sensitive vms scenario latency sensitive sql specjbb batch application BI terasort scenario pcores assign pcores oversubscription scenario configuration OC improvement metric application baseline requisite pcores configuration  baseline performance degradation  batch latency sensitive vms scenario workload  pcores scenario sql BI specjbb terasort scenario sql BI specjbb terasort scenario sql BI specjbb terasort oversubscription negative performance impact latency sensitive application sql specjbb suffer degradation contrast increase core uncore frequency OC workload improvement improve baseline terasort scenario TCO impact denser VM pack overclocking enable denser pack via oversubscription quantify TCO impact assume overclocking oversubscription physical core leverage strand memory azure server analysis quantify TCO per virtual core obtain per virtual core oversubscription TCO analysis IV assumes mapping virtual physical core oversubscription overclockable pic reduce TCO per virtual core oversubscription benefit non overclockable pic reduce TCO amortizes overall across virtual core summary oversubscription overclocking core provider vms hardware oversubscription reduce per virtual core azure overclocking enhance auto model impact frequency cpu utilization auto scaler implementation model beneficial validate model context auto overclocking improves auto performance utilization model auto scaler carefully overclocking workload memory bound benefit cpu frequency overhead mechanism expensive model prolong impact affected workload auto scaler OC latency core core core core avg latency sql vms sql BI tera specjbb sql BI tera specjbb sql BI tera specjbb improvement scenario scenario scenario baseline oversubscription ratio OC oversubscription ratio performance impact overclocking  batch latency sensitive vms load balancer client auto scaler telemetry auto asc architecture asc decides vms frequency core initiate effective model propose model per core architecture independent counter    cycle core active   cycle active core stall dependency memory access model estimate impact frequency utilization tilt tilt tilt     overclocking enhance auto scaler architecture setup architecture overclocking enable auto scaler client request load balancer server vms respond request auto scaler decides vms remove considers average cpu utilization server vms avoid decides frequency server vms average cpu utilization performance counter decision telemetry   tilt vms auto scaler equation minimum frequency processor average cpu utilization vms threshold respectively client server application IX client request arrival markovian service distribution server vms vms xeon server tank threshold cpu utilization emulate behavior operation impact network traffic norm overclock usage cpu utilization baseline auto scaler freq validate model utilization increase model frequency lower utilization model lower frequency accordingly VM  threshold respectively frequency ghz ghz OC frequency bin component overclocked model validation validate model equation configure auto scaler utilization threshold threshold exceed configure launch server vms adjust client load query per QPS cpu utilization auto scaler baseline frequency secondary axis frequency percentage frequency OC cpu utilization exceeds auto scaler increase frequency utilization threshold peak auto scaler frequency peak auto scaler  sharply maximum frequency adjust client load however utilization threshold imply invocation increase frequency utilization decrease model predicts correctly otherwise ineffective frequency utilization target frequency adjustment utilization threshold utilization auto scaler average average actual utilization increase load overclocking enhance auto scaler auto scaler evaluate configuration baseline vii OC OC frequency threshold cpu utilization baseline OC OC utilization baseline OC overclock OC overclock XI RESULTS auto scaler config norm lat norm avg lat max vms VM baseline OC OC threshold OC utilization threshold delay avoid  server VM client load QPS increase load maximum QPS cpu utilization  configuration load increase VM reduce load however OC OC baseline utilization baseline utilization faster frequency advantage OC OC OC baseline VM OC manages utilization increase OC VM utilization peak execution load XI summarizes application latency improves OC OC respectively baseline client load increase overclocking exist server vms faster evident reduction utilization thereby mitigates performance impact additionally baseline OC vms whereas prevent OC reduce vms OC saving VM baseline user capacity consume provider provider overclocking server vms average server vms increase OC OC baseline summary overclocking enhance auto user significant performance improvement hiding overhead VM reduce vms vii related explore benefit pic overclocking risk propose evaluate overclocking scenario provider nevertheless prior advanced processor boost management related advanced improve performance efficiency google plate hungry TPUs whereas alibaba pic improve datacenter PUE II pic technology technology phase plate  propose former combine pic plate  directly component boil within plate latter sub  channel carve electrical fluid  argue pic combination effectiveness simplicity achieves capability counterpart increase processor researcher propose computational sprint phase wax enhance removal processor combination core frequency increase active core melt propose approach  enhances turbo boost observation resource interference occurs increase frequency harmful waste  overclocked leader thread  checker thread execution leader aid execution data prefetching resolve outcome checker ensures correctness error introduce overclocking cooperative boost interaction frequency turbo performance   investigate computational sprint qos constraint  target improve latency boost processor task overall generally limited CPUs turbo frequency limitation boost moreover consequence risk operating overclocking domain overclock longer trading consequence risk enables opportunity performance qos capacity management  cap management cap datacenters safety mechanism typically rely frequency reduction overclocking manage approach circuit breaker limit reduce impact cap critical workload prior propose workload priority cap complementary mitigate performance impact cap server overclocked component CONCLUSIONS explore component overclocking public provider argue pic promising technology built tank demonstrate propose scenario pic enable overclocking benefit risk experimental evaluation overclocking scenario performance enhance feature couple VM auto conclude phase immersion overclocking enormous potential  platform