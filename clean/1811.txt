offload data ensure privacy secure data become important however encrypt data alone insufficient memory address leak sensitive information exploit packetized memory interface secure memory access oblivious computation multiple memory module interconnect multi hop  network memory address encrypt packetized memory interface simply encrypt address oblivious computation coarse grain memory access leak propose scalable encryption microarchitecture source rout packet encrypt source latency overhead intermediate router minimize define secure rout memory centric network enable oblivious computation memory access across memory module completely obfuscate explore naive secure rout algorithm ensure oblivious computation performance overhead minimize performance overhead propose ghost packet replace dummy packet exist network traffic propose ghost rout batch multiple ghost packet minimize bandwidth loss naive secure rout exploit random rout keywords oblivious computation rout memory centric network introduction compute paradigm shift compute allows significant convenience efficiency however physical data physical attack leak valuable information software OS secure secure hardware become important challenge prior secure processor encrypt data leaf processor however secure processor vulnerability expose address trace memory dram memory address transmit plaintext anyone physical access access memory address trace memory address attacker obtain sensitive information user program database access overcome limitation oblivious ram ORAM approach propose memory access provably hidden generate access random memory location prior significantly reduce complexity implement ORAM additional bandwidth fundamental limitation prior dram ddr interface memory address cannot encrypt however alternative memory interface packet instead memory command propose hybrid memory cube HMC  pcie  interconnect cpu memory interface enable processor memory communication message request instead dram command exploit packetized interface oblivious computation observable trace independent input attacker monitor memory access cannot behavior program define oblivious prior leveraged packetized interface secure memory access limited memory module multiple memory module module directly host cpu approach necessarily multi hop network addition packet destination leak coarse grain access hop destination assume interleave module reveals access recent fault access sequence reuse distance fault reuse leak secret information attack extend multi node network without intentional fault allocate across node address challenge oblivious computation consist multi hop network multiple memory module interconnect memory centric network memory module serf router node exploit packetized interface encrypt entire packet data address data address encrypt packetized interface guarantee oblivious computation coarse grain access traffic reveal multiple memory module memory module frequently access enable oblivious computation minimize performance impact propose scalable microarchitecture encryption minimize per hop latency multiple hop network encrypt decrypt UI OOVBM  PNQVUFS SDIJUFDUVSF acm annual international symposium computer architecture isca doi isca diagram multiple memory module interconnect logic memory computation capability hardware security packet hop increase overall packet latency however encrypt address data destination rout information transmit plaintext avoid encryption decryption intermediate node packet packet header transmit ciphertext propose router microarchitecture pipeline packet eagerly intermediate router node decryption parallel minimize per hop latency overhead leverage commonly aes counter mode precomputation oforder packet arrival complicates decryption destination random sequence buffer index transmit packet overcome limitation completely obfuscate access propose secure rout memory network enable oblivious computation naive implementation secure rout performance overhead memory access packet node additional bandwidth consume network channel network injection channel propose ghost rout exploit exist network traffic minimize performance overhead secure rout ghost rout consists component inject ghost packet network ensure oblivious traffic batching packet minimize impact network injection bandwidth constraint contribution propose oblivious computation multi module memory centric network exploit packetized memory interface multi hop network rout propose distribute scalable encryption microarchitecture minimizes per hop latency ensure decryption packet arrival destination propose ghost rout secure rout achieve oblivious computation ghost rout exploit exist traffic ghost packet minimize performance overhead obfuscate traffic addr data cmd dest payload addr data packet header route info dest payload addr data packet header ciphertext plaintext memory interface ddr address data dram command data encrypt packetized dram interface entire packet encrypt rout information plaintext remain packet encrypt II background threat model memory network packetized interface advance technology 3D integration enable stack silicon vias TSVs 3D stack dram stack logic contains vault memory controller  signal logic switch interconnects memory controller memory module building network interconnect memory module CPUs memory network assume memory module packetized interface prior ORAM assume conventional dram interface data encrypt memory address dram command precharge activate etc transmit plaintext comparison packetized interface enables communication cpu memory module packet message packet communicate memory module packetized interface entire packet address data encrypt logic memory module decryption encryption propose encrypt entire packet expose rout information plaintext minimize encryption decryption overhead router threat model assume attacker physical access chip channel attack prior tamper resistant processor assume processor secure logic layer memory module however offchip component insecure channel module attacker physical topology traffic vault refers vertically align memory partition obliviousness module multiple module grain coarse grain data access encrypt address access encrypt OTP OTP ghost packet data access linkability encrypt OTP OTP ghost packet access encrypt OTP OTP ghost rout ghost packet access packet identical batching ORAM security achieves obliviousness diagram memory attestation attestation logic logic memory module node assume attacker probe channel module inject replay flight packet cannot modify legitimate packet 3D stack memory assume memory layer untrusted vulnerable attack hammer attack boot attack beam neutron memory attack additional data encryption integrity verification locally within secure logic layer attacker thermal activity memory module detect module access however attack address prior outside scope address timing channel attack previously propose approach extend assume cpu module logic layer memory module trust compute remote attestation intel sgx PSA module authentic difference addition cpu vendor memory module vendor remote attestation memory address encryption oblivious computation overview definition ORAM security prior exploit packetized memory interface oblivious computation however prior limited node memory module directly CPUs packet traverse multiple hop comparison extend oblivious computation multi hop network rout summarizes ORAM prior module encrypt address pad OTP sufficient hide data access linkability multi hop  data access coarse grain memory module access information obfuscate address encryption obfuscates  access coarse grain access leak rout leverage OTP precomputation OTP without increase  router latency source rout introduce ghost rout ghost packet hide linkability access access hidden packet minimize performance impact across network batching initial attestation exchange enable secure communication memory network memory module addition CPUs trust trust memory module secure communication CPUs propose attestation memory module cpu attestation ensure memory module vendor authorize module date attestation request generate application cpu normal memory request packet memory network command attestation request cpu memory module memory module receives attestation request local attestation secure logic firmware hardware embed attestation local attestation cpu verify infeasible memory vendor certificate built cpu hardware attestation software verify memory vendor cpu vendor attestation return trust cpu memory module establish module public private generate boot tamper resistant chip storage initial attestation memory module sends certificate public cpu logic logic layer mostly hardwired logic packet packet hardware trojan manipulate packet router programmable rout leverage source rout output hop pre inject network boot sequence network discovery etc secure attack limited memory access latency pipeline baseline pre compute OTP per hop encryption source rout eager cpu module public broadcast public memory module module public encrypt secret OTP generation secret module generate module identification ID module encrypt module public ensures processor memory secret without possibility attack encryption aes counter mode leverage counter mode encryption cipher aes encryption counter secret input aes bitstream pad OTP incrementing counter OTP precomputed hide latency pre compute OTP xor plaintext generate ciphertext avoid replay attack assume nonce exchange node encryption random generate source destination ensure OTP nonce nonce node generate random exchange plaintext concatenate generate nonce rand nonce regenerate boot whenever source destination counter saturate decryption OTP calculate counter xor ciphertext restore plaintext IV router architecture router pipeline microarchitecture latency overhead baseline approach  encryption decryption router pipeline diagram encryption cipher aes hop latency overhead accumulate pre compute OTP xor pipeline reduces latency overhead router however xor latency accumulate across multiple hop importantly per hop encryption significant overhead  per packet avoid per hop overhead leverage source rout expose rout information plaintext packet encrypt ensures packet encryption decryption per packet encryption source decryption destination addition xor operation parallel router pipeline eager packet header plaintext router pipeline proceed xor operation occurs parallel exploit pre compute OTP OTP buffer per source destination packet source destination fifo OTP buffer sufficient memory module guarantee OTP counter synchronization however packet multi hop network nondeterministic rout OTP synchronization counter plaintext encryption counter introduces additional decryption latency destination propose transmit OTP buffer index allows packet OTP destination OTP buffer buffer index increase modulo OTP buffer  communication adversary destination packet index generate random permutation sequence OTP buffer index source  index avoid collision random sequence random sequence generate source packet arrives router packet decrypt xor ing ciphertext appropriate OTP decrypt packet header node ID packet assume destine memory module packet appropriate memory vault memory access packet destine router properly decrypt valid OTP packet ignore packetized interface packetized interface easily packet request flit packet request consists multiple flit hide access packet pad packet packet however performance bandwidth impact pad significant false positive packet decode OTP however false positive impact correctness packet destination addition probability false positive relatively OTP error rate channel diagram OTP buffer propose encryption decryption architecture multi hop network packet traverse multiple hop minimize performance bandwidth loss propose batching multiple request reduce pad overhead batching per destination basis request batch packet pad however randomize rout exploit destination packet packet destination intermediate node batching minimize bandwidth overhead secure  explore secure rout achieve oblivious computation however rout algorithm impact network performance ghost rout ghost packet minimize performance degradation define injection bandwidth channel bandwidth endpoint node cpu network network bandwidth network channel bandwidth router node network bandwidth network prior injection bandwidth memory centric network bottleneck memory module endpoint node explore ghost rout ghost packet reduce performance degradation reduce injection bandwidth overhead secure rout algorithm prior ORAM obtain obliviousness random shuffle access remapped random location phase however remapping approach additional storage processor remapping information addition hide access newly assign location phase dummy access location involve increase injection network bandwidth performance degradation naive secure rout algorithm ensure obliviousness without remapping relocation additional storage overhead remapping information II however performance degradation minimal rout ıve implementation coarse grain ORAM leveraged define minimal rout dummy packet inject packet node network minimal rout dummy request generate dummy module request reveal module packet approach completely hide memory access without sacrifice packet zero load latency injection channel bandwidth becomes bottleneck dummy packet inject packet network throughput suffers dummy traffic average hop havg network bandwidth overhead havg sequential rout network destination packet effectively hidden without inject packet packet rout memory node sequential described packet actual destination node intermediate router packet destination intermediate router packet destination node network coarse grain memory access completely hidden performance impact latency bandwidth latency memory access significantly increase increase network network throughput suffers packet consumes network bandwidth however dummy packet inject injection bandwidth sacrifice dummy broadcast rout performance sequential rout improve broadcasting packet rout intermediate router packet broadcast multiple improves packet latency reduce network bandwidth consume memory access addition broadcast broadcast packet generate dummy baseline network ORAM ORAM minimal rout sequential broadcast rout ghost rout average security guarantee oblivious oblivious oblivious oblivious oblivious oblivious injection bandwidth network bandwidth havg havg havg havg havg havg storage overhead  clog II comparison alternative oblivious computation memory network packet module network capacity memory node rout sequential broadcast algorithm algorithm ghost packet injection algorithm network dest packet destination packet inject rand random permutation sequence rand dest rand packet dest inject packet inject dummy packet node hide packet packet packet secure rout algorithm enable oblivious computation completely hide coarse grain access significantly degrade performance II qualitative comparison overhead approach enable oblivious computation improve minimal rout exist network traffic oblivious computation ghost packet ghost rout ghost packet propose exploit exist network traffic minimize performance overhead hide coarse grain access traffic across memory module random specific access distinguish another traffic statistic memory channel utilization spec workload numa dual socket intel xeon machine 8GB memory channel implies traffic random additional traffic obfuscate access random permutation injection sufficient ensure oblivious computation memory access across multiple channel  sophisticated hash algorithm maximize memory bandwidth utilization statistic memory channel utilization channel numa memory utilization differs workload utilization across memory channel workload tight distribution bandwidth exploit behavior minimize amount dummy packet workload hash memory controller memory traffic across channel balance additional traffic obfuscate traffic minimal define ghost packet packet adversary cannot distinguish packet dummy packet algorithm describes propose ghost packet injection algorithm random permutation sequence shuffle sequence observable trace guarantee met random permutation sequence guarantee traffic spatially random access random request packet buffer queue destination injection random permutation sequence permutation sequence queue packet inject packet inject otherwise dummy packet inject permutation sequence another random permutation sequence generate remain packet inject valiant rout randomize valiant rout destination intermediate node algorithm injects dummy packet minimal rout however minimal rout injects fix dummy packet algorithm amount inject dummy traffic deterministic attacker cannot distinguish dummy packet traffic dummy packet propose knowledge applicable communication memory channel extend network within router dummy packet handle identically packet simply destination hardware difference dummy packet random data decode OTP node ID node packet ignore ghost rout define ghost rout rout algorithm leverage ghost packet ghost rout classify ghost minimal ghost  rout ghost minimal rout define minimal rout algorithm ghost packet although exist traffic effectively reduce inject dummy packet ghost minimal rout minimal rout ghost packet pad packet packet IV reduce bandwidth overhead pad ghost packet propose ghost non minimal rout ghost non minimal rout inspire valiant rout packet rout intermediate node destination load balance packet rout source cpu intermediate random node destination ghost rout extend valiant rout algorithm destination intermediate node randomize ghost non minimal rout packet rout destination random intermediate node packet destination packet towards node specify rout information header rout improves network load balance inject packet destination algorithm ghost rout injection algorithm intm intermediate node node node network packet inject permutation node rand random shuffle rand intm inal rand packet intm packet inal batch packet intm inal packet intm packet inal batch dummy packet intm inal batch dummy packet intm inal ghost rout dummy packet content inject obfuscate traffic combine packet dummy packet although batch multiple ghost packet packet overall network traffic uniform random injection randomize guarantee obliviousness obliviousness modify algorithm ghost non minimal rout unlike ghost minimal rout random permutation node permutation sequence ghost non minimal rout consist tuples node specify destination intermediate node rand algorithm describes modify random injection algorithm ghost non minimal rout unlike valiant rout selects intermediate node randomly intermediate node ghost non minimal rout algorithm security guarantee ghost  rout packet inject packet inal intm node increase inject packet minimal rout request difference packet intm inal oblivious packet inal intm packet batch packet inject packet inal intm dummy packet route intm inal inject batching enable ghost non minimal rout dummy packet reduce approximately factor permutation sequence ghost  rout longer sequence minimal rout algorithm generate dummy packet however negligible performance impact sequence packet leveraged sequence packet permutation sequence algorithm algorithm effectively return traffic ghost rout ghost rout obfuscates traffic traffic cpu memory module reverse traffic memory module cpu reveal information return traffic concern ORAM ghost minimal rout dummy request generate dummy however ghost non minimal rout  network differs traffic originate memory module reveal memory module access hide memory module access packet CPUs regardless destination intermediate node node packet generate node generates data request packet route cpu packet encrypt replace intermediate node node request generates dummy packet rout cpu packet route intermediate node packet data cpu data congestion memory module packet source cpu request inject network obtain data node injects packet request packet inject network packet data payload however payload data simply random data data packet replace packet route memory module data node destination node packet contains data route intermediate node hide data replace traffic encrypt destination intermediate node packet encrypt twice decrypt twice source recover data security discussion define oblivious sequence memory access sequence access rout algorithm rout independent arbitrary sequence memory access rout rout indistinguishable rout memory access sequence define observable trace rout route intm inal intm inal    intermediate node packet  inal node packet proof sketch observation obliviousness observation network traffic ghost rout uniformly random independent input observation ghost rout injects packet random sequence independent input theorem observable trace rout rout independent rout algorithm rout oblivious proof accord algorithm packet inject destination rand although packet destination dummy packet inject deterministic uniform random traffic ghost non minimal rout algorithm packet intm dest exist dummy packet inject traffic bias additional traffic inject secure rout sequential rout ghost rout additional packet inject network algorithm ghost minimal algorithm ghost non minimal oblivious traffic memory module access additional dummy packet memory module random distribution ghost non minimal rout adversary observable packet   network traffic src  src  traffic distribution propose algorithm distribution rand uniform random observation applies algorithm generates random permutation sequence consumes sequence random permutation sequence random algorithm ghost non minimal rout randomly shuffle tuples observation applies observation ghost rout traffic uniformly random sequence packet randomize observable trace independent sequence oblivious analysis ghost rout traffic memory module access hotspot traffic ghost rout injects dummy packet packet injection bandwidth havg network bandwidth overhead packet however memory traffic distribute memory channel parameter core core ghz issue width rob cache KB cycle latency cache private KB cycle latency cache coherence directory MOESI cache directory directory cycle per processor processor configuration parameter organization layer vault GB per module scheduler FR FCFS dram timing tck trp tCCD tRCD tcl twr tRAS IV memory configuration workload MPKI barnes particle fft data fmm particle LU matrix ocean grid radix integer raytrace  frame streamcluster canneal blackscholes option evaluate workload probability distribution inject dummy packet dummy packet packet rarely occurs random input traffic compute average ghost rout probability distribution inject dummy packet packet inject ghost rout synthetic random traffic distribution dummy packet packet calculate equation num dummy packet dummy packet approximately regardless traffic injection rate inject packet ghost rout empirically packet injection bandwidth network bandwidth havg traffic injection rate vii impact performance ghost rout traffic rate VI evaluation methodology detailed cycle accurate simulator core model  cache model  booksim network simulator simulator modify memory schedule within logic layer memory module encryption decryption logic OTP precomputation model memory module node CPUs configuration processor memory performance impact encryption uarch RW  VL CB CLL LY memory address mapping scheme RW VL vault CB cube LY layer  CLL byte offset evaluation focus  dragonfly topology identify efficient topology memory centric network splash benchmark suite parsec suite input evaluate consumption McPAT cpu CACTI  memory dram interconnect model assume ghz router frequency SerDes latency serialization deserialization encryption impact propose encryption microarchitecture impact  oblivious computation impact router pipeline implementation router pipeline per hop encryption decryption per hop aes pre compute OTP per hop OTP source rout source OTP non secure baseline without encryption decryption assume xor introduces another pipeline stage router per hop aes significant performance degradation non secure router pipeline microarchitecture precomputed OTP degradation average degradation however leverage source rout encryption performance overhead additional latency nearly negligible performance nearly performance without encryption comparison propose secure rout algorithm across workload rout algorithm rout algorithm coarse grain oblivious computation secure rout algorithm sequential broadcast minimal ghost minimal ghost non minimal rout algorithm evaluate secure rout normalize non secure minimal dimension rout oblivious computation hide memory access packet pad minimal injects dummy packet packet significantly degrades overall performance performance degradation dummy packet memory intensive workload fft ocean radix overhead average amount extra memory network traffic significantly improve ghost packet leverage exist traffic ghost packet effective memory intensive workload probability reuse exist memory traffic amount dummy packet inject workload average ghost minimal injects dummy packet minimal injects dummy packet node network ghost non minimal performance overhead overhead dummy packet inject average ghost non minimal inject packet ghost minimal dummy packet greatly reduce ghost minimal algorithm packet inject packet buffer inal node however ghost non minimal algorithm packet inject packet intm inal reduces dummy packet ghost minimal ghost non minimal broadcast sequential significant performance degradation additional network bandwidth consume although broadcast outperform sequential broadcast performance overhead overhead sequential performance overhead overhead broadcast optimizes packet latency network traffic broadcast average hop sequential difference packet latency performance rout algorithm normalize propose secure rout algorithm across workload amount extra packet normalize regular packet secondary axis average packet latency rout algorithm average sequential broadcast ghost non minimal overhead unsecured baseline sequential broadcast request packet rout node packet dummy data generate node payload overhead latency effective secure rout algorithm likely differs topology bandwidth average runtime overhead propose rout algorithm across network topology mesh mesh flatten butterfly  dragonfly  radix topology non minimal rout ghost non minimal rout benefit valiant rout critical topology load balance channel moreover performance degradation across topology ghost non minimal performance degradation additional packet minimal broadcast network statistic channel utilization execution memory intensive workload fft compute intensive workload injection bandwidth channel directly cpu network bandwidth router router channel channel utilization active cycle execution cycle significant amount bandwidth dummy packet minimal memory average performance slowdown secure rout algorithm across topology injection channel network channel utilization dummy packet intensive workload minimal saturates injection bandwidth explains significant performance overhead inject amount dummy packet reduces channel utilization reduce sequential broadcast dummy packet inject cpu bandwidth processing packet however network bandwidth usage increase rout algorithm packet traverse hop network utilize network channel route node broadcast packet broadcast generates dummy packet packet consume significant amount network bandwidth network bandwidth saturate workload memoryintensive blackscholes injection network channel underutilized explains performance impact secure rout relatively synthetic traffic comparison demonstrate extreme traffic network performance rout algorithm synthetic traffic random traffic hotspot traffic performance network load varied hotspot traffic model traffic memory module access random traffic assumes node network randomly access performance improvement speedup propose rout algorithm minimal secure rout algorithm synthetic workload batch mode cpu inject packet memory module generate packet traffic random network load performance difference rout algorithm negligible network channel underutilized extra packet network minimal impact network speedup minimal rout algorithm random traffic hotspot synthetic traffic load random traffic increase network bandwidth becomes bottleneck ghost rout algorithm significant benefit network traffic random load ghost non minimal recommend leverage exist traffic batch ghost packet reduce performance overhead ghost minimal speedup ghost non minimal increase network load increase network load inject packet dummy packet unlike ghost non minimal sequential broadcast benefit random traffic characteristic node traverse regardless sequential broadcast broadcast performs latency sequential average hop packet traverse hop rout algorithm packet sequential consume network channel bandwidth rout algorithm random traffic comparison traffic hotspot sequential broadcast performance regardless network load traffic ghost minimal ghost non minimal cannot leverage exist traffic generate dummy packet obfuscate hotspot traffic ghost minimal ghost non minimal inject dummy per packet performance minimal performance degradation sequential broadcast however earlier hotspot traffic frequently memory bandwidth maximize access memory module remains adaptive ghost rout improve overall performance traffic hotspot traffic frequently vii discussion comparison approach VI performance ORAM ghost non minimal average ORAM overhead minimal rout without obliviousness ghost non minimal overhead performance workload ORAM network ORAM constant ghost barnes fft fmm ocean radix raytrace gmean VI performance overhead ORAM  constant rate injection ghost  non secure baseline ghost non minimal encrypts address packet grain access memory module hidden comparison ghost non minimal network ORAM implement coarse grain ORAM computation model simulation network ORAM evaluation overhead average alternative approach packet transmit constantly cycle constant version  network channel sends constant traffic constant significantly degrade performance workload performance degradation prior performance degradation accumulates across multiple hop memory network multiple hop memory access latency increase radix baseline additional per hop latency additional  encryption decryption latency latency slot scalability overhead ORAM ORAM memory capacity directly dependent memory module comparison ghost rout proportional memory module amount memory capacity per memory module memory capacity increase per memory module advance technology integrate memory chip within memory module increase benefit ORAM 4GB ORAM GB average hop network havg  implementation 4GB network overhead approximately havg comparison ghost rout introduces overhead havg assume 4GB per hop encryption propose toend encryption packet encrypt source OTP decrypt destination appropriate OTP alternative approach per hop encryption OTP encryption across channel network approach simplifies OTP management packet across channel however packet decrypt encrypt transmit node increase per hop latency evaluation approach approximately performance degradation insecure baseline whereas encryption negligible degradation importantly leverage per hop encryption hide coarse grain access destination node secure rout obfuscate coarse grain access per hop encryption additional overhead OTP buffer depth OTP generation non minimal rout average average hop network havg per hop encryption havg  per packet overhead component propose architecture counter OTP buffer OTP buffer depth impact performance depth OTP buffer hide OTP computation buffer empty packet stall OTP generate node memory network evaluate buffer entry sufficient ensure OTP buffer empty amount additional storage OTP buffer node approximately OTP addition counter source destination communication assume  memory traffic cpu counter memory module counter assume CPUs memory module evaluation coherence traffic cpu cpu traffic additional counter cpu counter amount storage counter cpu memory module cpu public memory module public private CPUs memory module approximately additional storage random permutation approximately byte per cpu attack threat model information leak coarse grain memory access prior introduce attack memory access secret extract fault sequence  memory access approach extend memory network memory module granularity attacker sequence memory access identify secret instance application array index input secret array span across memory module infer input secret memory trace otherwise attacker exploit rootkit configure memory mapping intend related exploit packetized cpu memory interface obfuscate memory access recently propose   approach prior encrypt data address OTP encryption however difference prior focus cpu module memory module multiple memory module directly cpu module address network memory module ORAM implementation propose reduce complexity ORAM practical phantom implement prototype secure processor oblivious memory hardware recursive ORAM additional ORAMs scalability reduces performance oblivious network ram closely related assumption oblivious  oblivious  assume attacker cannot access within memory correspond memory module memory cpu communicate ORAM extend hide access however ORAM ORAM random initialization random shuffle obliviousness remapped access client processor storage remapping information addition remapping multiprocessor coherence protocol processor comparison approach remapping exploit exist network traffic bandwidth available  propose secure DIMM architecture replace dram buffer secure buffer perform ORAM operation secure buffer achieves  obliviousness lack explanation  access obfuscation  propose batching ORAM request merge reduce redundant memory access ORAM shadow propose data duplication facilitate access intend ORAM access reduce overhead redundant ORAM access memory remapping conclusion propose secure rout ensure oblivious computation multi node memory network exploit packetized memory interface propose ghost rout minimizes performance degradation leverage exist network traffic batching ghost packet router pipeline microarchitecture secure rout eager packet minimize overall network latency evaluation ghost rout oblivious computation performance overhead insecure baseline