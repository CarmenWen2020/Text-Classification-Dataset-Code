domain thermally constrain mobile chip soc compute IO memory soc typically allocates fix budget correspond performance demand IO memory domain underutilized unfair allocation budget across domain issue IO memory domain frequency voltage increase consumption unused budget IO memory domain cannot increase throughput compute domain hamper performance avoid issue crucial dynamically orchestrate distribution soc budget across domain actual performance demand propose SysScale multi domain management technique improve efficiency mobile socs SysScale SysScale introduces accurate algorithm predict performance bandwidth latency demand soc domain SysScale DVFS dynamic voltage frequency mechanism distribute soc domain accord predict performance demand mechanism minimize significant latency overhead associate apply DVFS across multiple domain addition global DVFS mechanism SysScale domain specialized technique optimize efficiency domain operating implement SysScale intel skylake microprocessor mobile device evaluate variety spec cpu graphic 3DMark battery workload video playback core skylake SysScale improves performance spec cpu 3DMark workload average respectively battery workload typically fix performance demand SysScale reduces average consumption average meeting performance demand introduction mobile microprocessor built onchip soc integrates multiple component chip typically domain compute cpu core graphic IO display controller image signal processing isp memory memory controller memory interface dram illustrate mobile soc operates thermally constrain environment limited thermal TDP TDP soc  pmu employ budget management algorithm PBM dynamically distribute budget soc domain allows domain within allocate budget instance cpu core graphic compute domain budget graphic intensive workload execute graphic consume compute domain budget consumption compute domain within allocate budget pmu applies dynamic voltage frequency DVFS reduce cpu core consumption increase graphic performance demonstrate budget PBM allocates IO memory domain  manage performance mobile soc suboptimal observation observation typical mobile soc budget management algorithm assigns fix budget IO memory domain correspond worstcase performance demand bandwidth latency IO interconnect memory subsystem resource however mobile modest demand relative unfortunately apply DVFS IO memory domain actual demand domain socs inefficient DDRIO analog IO interconnect IO controller IO peripheral chip core llc cpu core graphic graphic memory controller dram DDRIO analog IO interconnect chip llc cpu core graphic memory controller DDRIO  DDRIO digital IO domain compute domain memory domain  SA voltage regulator  IO  IO controller controller IO controller IO peripheral IO peripheral peripheral mobile soc intel skylake domain compute IO memory voltage regulator  highlight IO controller IO interconnect memory controller VR SA observation mobile socs employ budget redistribution mechanism component within domain core graphic com acm annual international symposium computer architecture isca doi isca  domain budget management algorithm dynamic redistribution across domain therefore domain budget underutilized remain budget waste performance suboptimal unused budget allocate another domain compute domain increase performance observation mobile socs multiple component IO compute domain widely memory bandwidth demand across workload however due provision IO memory demand soc efficiency remains workload demonstrate sec observation unoptimized dram configuration register significantly reduce efficiency benefit multi domain DVFS reduction optimize unfortunately challenge exist mobile apply DVFS IO memory domain demand multiple domain accurate prediction actual bandwidth latency demand multiple domain potential DVFS performance soc presence multiple domain challenge soc integrates component IO interconnect memory subsystem component strict quality service qos requirement respect latency  traffic bandwidth display mispredicting component actual demand violate qos requirement significantly degrade performance DVFS IO memory domain global optimization monitoring demand soc domain subsequently configure multiple component soc actual DVFS therefore management transition apply global optimization computationally expensive correctly transition voltage frequency operating another degrade soc performance stall soc domain DVFS holistic efficient optimize maximize saving instance previous memory subsystem DVFS dynamically optimize dram interface DDRIO configuration register voltage DVFS unoptimized dram configuration register voltage significantly reduce negate potential performance benefit memory subsystem DVFS sec recent memory DVFS socs focus improve efficiency domain limited component domain address challenge mention  MemScale focus improve efficiency memory subsystem CoScale coordinate DVFS cpu core memory subsystem knowledge previous soc DVFS coordinate combine DVFS across domain optimizes dram configuration register voltage enable holistic management mobile soc thereby improve overall soc efficiency performance propose SysScale management technique SysScale SysScale accurately dynamically predict bandwidth latency demand multiple soc domain implement performance counter utilize exist configuration register SysScale highly efficient global DVFS mechanism dynamically distribute soc budget across domain accord predict performance requirement SysScale DVFS mechanism minimizes latency overhead perform DVFS simultaneously domain overlap DVFS latency configuration register chip SRAM domain maximize saving SysScale optimizes efficiency domain DVFS operating domain specific mechanism instance optimize efficiency dram interface dedicate scalable voltage optimize configuration register DVFS operating contribution knowledge SysScale enable coordinate highly efficient DVFS across soc domain increase efficiency mobile socs SysScale introduces ability redistribute budget across soc domain accord performance demand domain propose effective algorithm accurately predict performance bandwidth latency demand soc domain utilize newly implement performance counter exist configuration register introduce global DVFS mechanism minimizes performance overhead apply DVFS across multiple domain implement SysScale intel skylake soc mobile device evaluate SysScale variety workload spec cpu graphic 3DMark battery workload mobile device web browsing video conferencing video playback core skylake TDP SysScale improves performance spec cpu 3DMark workload average respectively battery workload typically fix performance demand SysScale reduces average consumption average meeting performance demand TDP reduces SysScale relative benefit significantly increase TDP SysScale enables average performance improvement spec cpu workload background brief overview mobile soc architecture memory subsystem focus consumption DVFS mobile soc architecture domain mobile processor  chip soc typically integrates domain chip compute cpu core graphic IO display controller isp IO interconnect memory memory controller dram interface DDRIO dram cpu core graphic IO controller memory subsystem similarly IO controller IO interconnect voltage mobile soc IO controller IO interconnect memory controller DDRIO typically independent however voltage source IO memory domain IO controller IO interconnect memory controller voltage regulator denote SA dram analog dram interface DDRIO analog voltage regulator  digital dram interface DDRIO digital typically voltage IO interface display IO isp IO denote IO compute domain typically voltage source depict voltage regulator cpu core llc voltage regulator graphic memory organization overview structure dram device dram chip dram module comprises rank dram chip typically multiple along IO hardware driver receiver enables access content storage outside chip via memory interface DDRIO peripheral logic command grid wordlines bitlines dram dram consists capacitor access transistor data encode capacitor detail refer reader prior dram organization operation memory consumption consumption dram comprises background operation memory controller briefly refer reader detailed overview background dram chip continuously consumes amount background without memory access background consumption source maintenance task  agent traditional  chip SA contains functionality memory controller IO controller  circuitry performs ensure signal integrity processor dram chip periodic refresh operation restore leaky dram ensure leak flip operation operation dram chip active consumption executes memory command memory access dram array IO register termination dram array consume core memory decoder amplifier dram array consumption correlate dram access memory bandwidth consumption array constant active precharge command active IO consume input buffer latch delay lock loop dll data interface driver logic transfer data dram chip register consume input output register command address dram interface circuit phase lock loop pll termination terminate DDRIO active operation termination depends interface utilization directly frequency dependent memory controller memory controller combination static consumption proportional operational voltage dynamic consumption proportional voltage frequency memory controller memory DVFS dynamic voltage frequency DVFS technique reduces consumption soc component cpu core graphic reduce voltage frequency potentially expense performance DVFS quadratic reduction consumption cubic reduction average dissipation expense linear reduction performance soc component overall consumption increase due longer execution utilization spent idle component therefore technique increase frequency voltage soc component reduce architect various metric delay EDP efficiency combine performance delay objective DVFS memory subsystem mobile soc improve efficiency reduce EDP memory DVFS reduces background operation memory controller consumption reduce frequency voltage memory subsystem approach frequency memory  delay EDP commonly metric quantify compute efficiency EDP efficiency  DDRIO analog digital dram device voltage reduce memory controller modify operating voltage DDRIO analog dram device commercially available dram device maximize saving apply memory DVFS concurrently apply DVFS DDRIO digital IO interconnect impact memory DVFS soc reduce frequency memory subsystem affect consumption performance soc performance affected reduce frequency data burst longer increase memory access slows memory controller dram interface increase queue delay memory controller consumption affected reduce memory subsystem frequency background reduces linearly memory controller reduces approximately cubic factor due reduction memory controller voltage SA lower dram operating frequency increase termination linearly access longer fourth due degradation performance utilization component increase increase overall soc memory reference code memory reference code MRC bios code manages memory initialization purpose MRC training detect DIMMs capability configure configuration register CRs memory controller MC DDRIO DIMMs data command interface DDRIO operation optimize performance define JEDEC standard MRC training typically dram frequency therefore configuration register MC DDRIO DIMMs optimize dram frequency dynamically switch memory subsystem multiple frequency DVFS configuration register update optimize correspond dram frequency otherwise unoptimized configuration register degrade performance negate potential benefit DVFS sec motivation experimentally motivate building SysScale intel broadwell processor previous generation target skylake processor goal evaluate potential benefit employ DVFS across soc domain multiple workload spec cpu 3DMark workload peak memory bandwidth dram setup substantial challenge operating dram array multiple voltage precisely tune timing transistor voltage partition examine performance processor without apply DVFS across multiple domain baseline setup cpu core frequency 2GHz maintain default voltage frequency soc component dram IO interconnect DDRIO digital evaluate benefit apply DVFS across multiple domain multi domain DVFS setup MD DVFS cpu core frequency setup reduce frequency voltage soc component IO memory domain experimental setup component baseline MD DVFS dram frequency 6GHz 6GHz IO interconnect 8GHz 4GHz voltage SA SA DDRIO digital IO IO core thread 2GHz 2GHz attain reduce performance setup parameter reduce ddr frequency bin 6GHz proportionally reduces memory controller MC frequency normally operates ddr frequency MC IO interconnect voltage SA proportionally reduce IO interconnect frequency align voltage IO memory domain voltage frequency curve domain reduce voltage SA DDRIO digital voltage IO proportionally minimum functional voltage correspond frequency IO memory domain maintain cpu core frequency  voltage unchanged across experimental setup fourth optimize performance soc setup configure dram device MC DDRIO optimize MRC dram frequency explain sec evaluation soc setup observation observation mobile substantial inefficiency respect manage voltage frequency IO memory domain impact MD DVFS setup average consumption consumption performance delay EDP baseline without apply DVFS spec cpu benchmark performance MD DVFS setup baseline setup increase cpu core frequency 2GHz 3GHz observation average consumption benchmark reduces MD DVFS consumption reduces evaluate workload workload  device discrete frequency bin normally LPDDR 6GHz 6GHz 8GHz default bin frequency perlbench cactusADM lbm summary impact MD DVFS baseline metric bottleneck analysis workload performance bound memory latency memory bandwidth non memory related memory bandwidth BW demand benchmark cactusADM lbm significant loss performance reduction frequency memory domain consumption varies widely across workload workload perlbench reduce consumption workload cactusADM lbm performance degradation MD DVFS consumption improves slightly increase bottleneck analysis workload evaluate plot performance bound memory latency memory bandwidth non memory related cactusADM lbm heavily memory bottleneck bottleneck cactusADM memory latency plot memory bandwidth demand benchmark memory bandwidth demand varies across workload overall core bound perlbench demand demand spike lbm constant demand cactusADM moderate demand MD DVFS hurt performance conclude workload memory latency bandwidth bound voltage frequency memory IO domain significantly reduce consumption minimal performance observation mobile socs employ budget redistribution mechanism soc component within domain cpu core graphic compute domain mobile socs dynamic redistribution across domain performance impact increase cpu core frequency MD DVFS setup 2GHz 3GHz reassign average budget IO memory domain compute domain performance perlbench improves significantly baseline MD DVFS workload limited compute bandwidth cactusADM lbm performance improvement baseline core frequency conclude voltage frequency IO memory domain demand domain redistribute budget domain improve performance workload compute bound observation mobile socs multiple component IO display controller isp compute cpu core graphic domain widely memory bandwidth demand illustrates memory bandwidth demand spec cpu workload 3DMark graphic workload varies workload typically memory bandwidth memory bandwidth demand display isp graphic  configuration workload display widely memory bandwidth demand display quality HD display consumes approximately peak memory bandwidth dual channel LPDDR 6GB 6GHz dram frequency display display quality consumes peak memory bandwidth memory bandwidth BW demand spec cpu benchmark  graphic benchmark average memory bandwidth demand display isp graphic  configuration workload conclude typical workload modest demand soc IO memory demand provision exist mobile socs inefficient typical workload memory bandwidth demand intel broadwell without voltage frequency domain component observation optimize MRC dram configuration register important improve multi domain DVFS efficiency impact unoptimized MRC overall performance consumption MD DVFS setup microbenchmark peak memory bandwidth dram isolate impact unoptimized MRC performance memory subsystem unoptimized MRC greatly degrade average performance optimize MRC avg inc perf  average performance impact unoptimized MRC consumption performance memory  microbenchmark observation conclude holistic management approach mitigate management inefficiency mobile socs holistic approach redistribute budget soc domain actual demand workload domain simultaneously frequency voltage domain optimize separately domain minimize inefficiency DVFS mechanism optimize MRC dram interface SysScale architecture SysScale goal reduce consumption dynamically voltage frequency soc domain performance demand domain improve throughput redistribute budget across soc domain performance demand SysScale achieves goal component component management responsible multiple voltage frequency IO memory domain reconfiguring dram interface optimize MRC dram frequency component SysScale demand prediction mechanism configuration dedicate performance counter predict static dynamic performance demand soc domain component important mispredicting actual demand workload IO device improper DVFS operating significantly degrade workload performance violate quality service requirement IO device component SysScale holistic management algorithm responsible voltage frequency IO interconnect memory subsystem dynamic performance demand management algorithm additional budget DVFS IO memory domain increase performance compute domain cpu core graphic improve overall throughput maintain average within thermal limit component SysScale orchestrate voltage frequency soc domain significantly reduce overall consumption mobile soc detail subsection management SysScale management implement pmu responsible adjust frequency voltage IO interconnect memory subsystem depict SysScale demand prediction mechanism described sec initiate frequency target frequency voltage soc domain demand prediction mechanism decides increase decrease IO memory domain frequency increase decrease voltage actual increase decrease pll dll frequency subsequently drain IO interconnect traffic core graphic memory domain llc traffic memory controller safely interconnect outstanding request request interconnect request dram enters refresh mode load optimize MRC dram frequency chip SRAM memory controller DDRIO dram configuration register SysScale frequency lock phase lock loop  delay lock loop dlls IO interconnect memory subsystem frequency finally dram exit refresh mode IO interconnect llc traffic memory controller release resume soc execution frequency voltage soc domain optimize dram interface dram frequency demand prediction mechanism SysScale demand prediction mechanism peripheral configuration register active display camera performance counter propose predict performance demand soc domain performance demand category static dynamic performance demand performance demand static related configuration active display camera configuration typically millisecond normally software OS driver therefore pmu increase frequency demand prediction mechanism drain IO interconnect llc traffic MC target frequency voltage dram enters refresh mode load optimize MRC MC DDRIO dram   dlls frequency increase voltage SA IO decrease frequency reduce voltage SA IO dram exit refresh mode release IO interconnect llc traffic MC SysScale management DVFS soc domain  configuration transition bandwidth operating SysScale without affect performance quality service transition within microsecond dynamic performance demand related workload phase frequently cycle explain performance demand prediction perform demand category static performance demand estimation estimate static performance demand SysScale maintains inside firmware management pmu configuration peripheral processor IO memory bandwidth latency demand firmware obtains configuration status register  peripheral laptop display panel display panel active bandwidth display panel bandwidth demand nearly depict active display resolution refresh rate display available  display enables accurate estimation static bandwidth demand solely peripheral configuration bandwidth demand peripheral configuration deterministic dynamic performance demand estimation categorize bandwidth latency demand workload dynamic instance spec cpu workload demand amount memory bandwidth illustrate similarly mobile workload dynamically memory latency demand exist performance counter predict dynamic bandwidth latency demand workload reduce frequency performance counter predict dynamic IO memory bandwidth latency demand internal processor performance counter initial selection intuition empirically prune selection iterative correlation performance counter workload performance degradation closer target target stage initial internal performance counter related memory request domain soc compute IO memory subsequently representative mobile workload setup baseline multi domain DVFS MD DVFS workload setup multiple dram frequency baseline MD DVFS setup examine performance addition performance counter actual versus predict performance impact reduce dram frequency baseline frequency frequency MD DVFS setup workload correlation coefficient prediction performance counter performance counter prediction algorithm  llc MISSES  llc due graphic  performance counter indicative bandwidth requirement graphic llc occupancy tracer cpu request data return memory controller counter indicates cpu core bandwidth limited llc  stall due llc indicates workload memory latency limited IO  IO pending queue occupancy stall due IOs counter indicates workload IO limited threshold correspond performance counter perform offline phase representative workload performance counter selection phase bound performance degradation operating MD DVFS performance degradation bound correspond performance counter calculate standard deviation threshold performance counter threshold prediction algorithm performance counter predict performance degradation workload bound operating MD DVFS algorithm performance counter threshold workload comprise representative performance productivity workload spec sysmark  computer graphic intensive workload  reduce dram frequency 6GHz 8GHz reduce dram frequency 6GHz 6GHz reduce dram frequency 3GHz 6GHz cpu thread cpu multi thread graphic norm perf norm perf norm perf norm perf norm perf norm perf norm perf norm perf norm perf workload workload workload workload workload workload workload workload workload actual predict bound correlation coefficient correlation coefficient correlation coefficient correlation coefficient correlation coefficient correlation coefficient correlation coefficient correlation coefficient correlation coefficient actual predict performance impact reduce dram frequency workload examine dram frequency 6GHz 8GHz 6GHz 6GHz 3GHz 6GHz performance normalize dram frequency correlation coefficient actual predict performance impact counter threshold algorithm soc DVFS operating otherwise algorithm decides IO memory domain DVFS operating prediction algorithm accuracy thread cpu multi thread cpu graphic workload respectively prediction algorithm false positive prediction prediction algorithm decides soc DVFS operating actual performance degradation bound holistic management algorithm SysScale implement distribution algorithm pmu firmware manage multi domain DVFS redistribute domain pmu executes algorithm periodically configurable interval evaluation interval default pmu sample performance counter  configuration status register multiple evaluation interval average counter distribution algorithm pmu switch performance DVFS operating predict performance demand distribution algorithm switch soc operating performance operating performance operating satisfied aggregate static demand memory bandwidth predefined threshold static BW thr graphic bandwidth limited  llc  thr cpu core bandwidth limited llc occupancy tracer core thr memory latency bottleneck llc  lat thr IO latency bottleneck IO  IO thr none pmu performance operating SysScale operating algorithm decides adjacent operating dedicate threshold soc performance operating pmu reduces budget IO memory domain increase budget compute domain compute domain budget management algorithm PBM distributes budget cpu core graphic accord characteristic workload additional budget increase frequency thermally limited compute domain PBM average consumption compute domain within allocate budget interaction cpu graphic DVFS cpu core graphic independent DVFS mechanism DVFS  OS graphic driver normally initiate DVFS request cpu core graphic respectively request handle PBM algorithm inside pmu firmware PBM attempt obey DVFS request within compute domain budget constraint request violates budget PBM  request requestor frequency domain within budget compute domain DVFS mechanism independently directly SysScale SysScale interacts compute domain DVFS mechanism via budget management SysScale redistributes budget IO memory domain compute domain PBM initiate DVFS compute domain utilize budget increase domain frequency similarly SysScale reduces budget compute domain due IO memory demand PBM adjusts compute domain DVFS domain within budget implementation hardware SysScale implementation component inside soc SysScale implementation performance counter sec implementation counter soc straightforward SysScale implementation hardware firmware management enables transition frequency voltage operating another summarize implement capability interconnect drain enables seamless transition frequency configure memory controller DDRIO relevant MRC frequency multiple optimize dram frequency MRC reset perform MRC calculation frequency inside SRAM retrieve SRAM transition MRC update dedicate approximately KB SRAM corresponds intel skylake additional capability pll dll lock voltage adjustment socs capability exist inside skylake processor finally actual demand prediction management algorithm implement inside pmu firmware additional firmware code approximately KB correspond intel skylake SysScale transition overhead actual latency SysScale latency component voltage transition approximately SA IO voltage regulator approximately voltage regulator slew rate drain IO interconnect request buffer exit dram refresh training load optimize dram configuration register SRAM configuration register firmware latency overhead evaluation methodology evaluate SysScale employ intel broadwell intel skylake socs distinct methodology motivational data evaluate SysScale fully hardware implementation however management normally error prone silicon tune implement within  firmware  demonstrate potential benefit SysScale previous generation soc broadwell target skylake soc implement skylake soc methodology motivational data motivational data broadwell emulate crude version SysScale static behavior multi domain DVFS setup MD DVFS sec attain MD DVFS setup reduce dram frequency 6GHz bios setting boot optimize MRC dram interface explain sec exist bios memory controller IO interconnect voltage SA proportionally reduce IO interconnect frequency 4GHz align voltage IO interconnect memory controller reduce voltage DDRIO voltage SA IO approximately respectively voltage frequency curve component voltage configure voltage frequency target probe ITP hardware debugger explain methodology evaluate SysScale implement SysScale intel skylake soc parameter baseline measurement disable SysScale soc soc memory parameter socs broadwell microarchitecture skylake microarchitecture cpu core frequency 2GHz graphic frequency mhz cache llc MB thermal TDP technology node memory LPDDR mhz non ecc dual channel 8GB capacity target probe ITP ITP silicon debugger connects intel soc JTAG ITP breakpoints soc halt specify occurs configure soc status register  model specific register MSRs measurement consumption national data acquisition NI  NI pcie sample rate mega sample per MS differential cable transfer multiple signal motherboard NI  host computer measurement NI  channel simultaneously measurement channel voltage regulator soc measurement accuracy NI pcie workload evaluate SysScale workload widely evaluate mobile socs evaluate cpu core performance spec cpu benchmark spec cpu benchmark performance metric evaluate computer graphic performance  benchmark frame per fps performance metric evaluate battery workload typically evaluate battery mobile device web browsing video conferencing video playback average consumption battery evaluation metric methodology comparison prior SysScale relevant prior MemScale CoScale unfortunately available implement technique MemScale CoScale technique average consumption without ability redistribute excess domain cannot boost performance compute domain apply DVFS memory domain therefore comparison useful assume MemScale CoScale redistribute memory domain increase compute domain budget SysScale improve version MemScale CoScale MemScale  CoScale  respectively sometimes abbreviate MemScale CoScale project performance improvement MemScale CoScale baseline estimate average saving MemScale CoScale per component measurement skylake measurement performance model increase budget compute domain increase cpu core graphic frequency model increase compute budget increase core frequency mhz model performance measurement skylake multiple cpu core graphic frequency performance scalability workload cpu frequency project actual performance improvement workload MemScale  CoScale  performance average benefit obtain SysScale implement intel skylake soc soc SysScale disabled SysScale prior MemScale CoScale SysScale performance average benefit  CoScale  project explain define performance scalability workload respect cpu frequency performance improvement workload increase frequency efficiency delay EDP improves proportionally performance average consumption SysScale improves performance within fix budget average consumption within fix performance requirement sec evaluate workload category cpu sec graphic sec battery workload sec analyze sensitivity soc thermal  TDP dram frequency sec evaluation cpu workload report performance improvement  CoScale SysScale baseline observation SysScale improves performance average significant obtain SysScale performance improvement MemScale CoScale respectively SysScale holistic account soc domain component domain whereas MemScale CoScale memory DVFS coordinate cpu memory subsystem DVFS respectively MemScale CoScale dynamically optimize dram interface configuration register voltage DVFS recall performance improvement MemScale CoScale project estimate average reduction technique sec whereas SysScale improvement improvement performance benefit SysScale correlate performance scalability workload cpu frequency highly scalable workload bottleneck cpu core namd performance gain contrast workload heavily bottleneck memory bwaves milc almost performance gain highly scalable workload benefit SysScale workload bottleneck memory reduce memory frequency reduces consumption without affect performance workload bottleneck cpu performance redistribute budget memory IO cpu increase workload performance fourth workload execution phase bottleneck soc domain compute versus memory SysScale dynamically adjusts frequency multiple domain improve performance astar execution phase memory bandwidth demand 1GB memory bandwidth demand 0GB illustrate SysScale significantly improves performance conclude SysScale significantly improves cpu core performance holistically apply DVFS soc domain dynamic performance demand dynamically redistribute excess budget domain carefully optimize memory interface DVFS transition evaluation graphic workload typically performance graphic workload highly scalable graphic frequency perf improvement MemScale  CoScale  SysScale performance improvement MemScale  CoScale  SysScale spec cpu workload graphic workload budget management algorithm PBM pmu normally allocates compute domain budget cpu core graphic consumes budget mobile graphic workload cpu core normally efficient frequency maximum frequency minimum functional voltage vmin moreover TDP effective cpu frequency reduce hardware duty cycling HDC performance improvement  CoScale SysScale baseline 3DMark graphic workload observation SysScale improves performance 3DMark 3DMark 3DMark vantage respectively SysScale improves performance boost graphic frequency redistribute budget across soc domain 3DMark 3DMark 3DMark vantage perf improvement MemScale CoScale SysScale performance improvement   SysScale computer graphic workload SysScale approximately performance improvement MemScale CoScale MemScale CoScale performance improvement average saving technique identical workload cpu core frequency therefore CoScale applies DVFS cpu core addition memory subsystem cannot cpu frequency conclude budget IO memory domain frequency graphic improve graphic performance hardware duty cycling soc duty cycling implement coarse grain duty cycling gate contrast gate evaluation battery workload unlike cpu graphic workload benefit performance battery workload characteristic performance demand fix video playback frame per frame displayed display panel within millisecond idle phase enters idle accord measurement active residency workload soc idle remain execution workload typically compute domain cpu core graphic operates frequency compute domain idle  gate soc average reduction representative battery workload  video conferencing  HD display panel laptop display active observation web browsing video conf video playback avg reduction MemScale CoScale SysScale average reduction MemScale  SysScale representative battery workload SysScale reduces average consumption web browsing video conferencing video playback workload respectively SysScale approximately reduction MemScale CoScale MemScale CoScale average reduction benefit battery workload cpu core frequency therefore CoScale cannot reduce cpu core frequency SysScale significant saving battery workload soc dram active refresh video playback workload soc transition processing video frame residency respectively graph dram active dram refresh therefore SysScale applies DVFS IO memory domain video playback workload conclude battery workload fix performance requirement apply SysScale holistic DVFS mechanism soc domain significantly reduces average soc consumption sensitivity analysis investigate parameter SysScale performance gain soc thermal TDP evaluation soc skylake TDP soc configurable TDP skylake architecture TDP desktop average performance improvement spec cpu workload SysScale  violin plot distribution density performance improvement across workload TDP baseline observation constrain TDP SysScale improves performance average TDP increase SysScale performance benefit reduces becomes ample redistribute across domain average median perf improvement SysScale performance benefit TDP spec cpu workload evaluate battery workload SysScale average saving affected TDP workload compute domain typically operates frequency cpu core graphic regardless TDP soc conclude SysScale significantly improves performance TDP constrain socs improves battery consumption across entire TDP dram frequency previous experimental dram frequency 6GHz evaluate dram device frequency evaluation SysScale dram frequency observation SysScale dram device dram frequency average saving freed budget dynamically utilized boost compute domain obtain SysScale ddr operating 6GHz 3GHz approximately LPDDR operating 6GHz 6GHz SysScale multiple operating dram device 8GHz DVFS operating memory subsystem however 8GHz operating efficient 6GHz due agent voltage SA already minimum functional voltage vmin ddr frequency 6GHz therefore reduce dram frequency beyond 6GHz significant benefit SA voltage remains average performance degradation trace reduce dram frequency 6GHz 8GHz reduce 6GHz 6GHz implement operating 6GHz 6GHz finer grain DVFS soc domain increase benefit SysScale instance additional ddr frequency 6GHz 8GHz increase performance average workload memory demand exist frequency unfortunately commercial ddr device frequency LPDDR 6GHz 6GHz 8GHz conclude benefit SysScale dram frequency achieve recommend dram vendor enable  ddr frequency future generation increase efficiency mobile socs related knowledge enable coordinate highly efficient DVFS across soc domain increase efficiency mobile socs multi domain DVFS mobile soc intel skylake mobile benchmark compute domain DVFS prior propose DVFS compute domain cpu core graphic DVFS operating compute domain typically manage OS graphic driver cpu core graphic respectively mechanism optimize voltage frequency assume fix budget compute domain unlike SysScale enable optimization distribution budget across soc domain limited efficiency benefit mobile socs memory DVFS coordinate DVFS recent memory DVFS socs focus improve efficiency memory domain   MemScale limited component domain CoScale qualitatively quantitatively SysScale closely related prior MemScale CoScale SysScale significantly increase performance reduces consumption mechanism due SysScale holistic account soc domain component domain whereas MemScale CoScale memory DVFS compute domain DVFS MemScale CoScale dynamically optimize dram interface configuration register voltage DVFS memory DVFS approach drawback inefficient mobile socs prior directly optimize mobile soc architecture integrate component soc domain thermally constrain environment target server architecture structure constraint workload mobile domain limited benefit mobile socs accounting relatively DVFS transition benefit diminish dynamically optimize dram interface configuration register degrades performance negate potential gain conclusion propose SysScale enable coordinate highly efficient DVFS across soc domain increase efficiency mobile socs SysScale introduces ability optimize efficiently redistribute budget across soc domain accord performance demand domain SysScale implement intel skylake soc mobile device significantly improves performance cpu graphic workload respectively TDP reduces average consumption battery workload intel skylake conclude SysScale effective approach balance consumption performance demand across soc domain sophisticated heterogeneous mobile soc improve efficiency performance