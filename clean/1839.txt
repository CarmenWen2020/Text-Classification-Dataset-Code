vision accelerate algorithm domain genomic data analysis propose framework genesis genome analysis contains interface implementation genomic data efficiently framework deployed exploit FPGAs service paradigm efficient secondary dna analysis propose conceptualize genomic associate attribute relational database extend sql domain specific construct query various data manipulation operation accelerate query genesis hardware library consists primitive hardware module compose construct dataflow architecture specialized query proof concept genesis framework architecture hardware implementation genomic analysis stage secondary analysis pipeline correspond software analysis toolkit GATK workflow propose institute construction genomic data analysis operation sequence sql style query genesis hardware library module utilized construct hardware pipeline accelerate query exploit parallelism data reuse utilize dataflow architecture along chip scratchpad non apis manage accelerator concurrent execution accelerator host accelerate deployed fpga performs GATK commodity multi core xeon server obtains saving software algorithm mapped onto hardware library utilize underlie accelerator already standardize software interface sql efficient mapping interface primitive hardware module demonstrate expedite acceleration domainspecific algorithm easy adaptation algorithm index genome sequence genomic data analysis hardware accelerator fpga sql introduction democratization wet lab sequence technology sequence runtime data analysis become significant genome project release genome assembly sequence genome fold data replicate national genome research institute survey genome sequence depict price sequence genome decrease outpace moore july veritas genetics announce price reduction genome sequence predicts reduction motivate investment precision genomic medicine knowledge individual genome prevention treatment disease enable genomic research project data across individual article publish  biology quantitatively claimed genomics project  sequence data per surpass generator data youtube  twitter petabyte aforementioned data generation challenge genomic data acquisition storage distribution analysis focus effort address efficient analysis genomic data identify genomic variant individual genome computationally complex demand pipeline genomic data processing algorithm compose mixture specific algorithm generic data manipulation operation popular genome sequence workflow institute genome analysis acm annual international symposium computer architecture isca doi isca toolkit GATK consists stage implement specific algorithm alignment variant stage perform generic data manipulation duplicate quality recalibration prior focus hardware acceleration specific algorithm utilized genome sequence darwin GenAx others accelerate algorithm alignment stage accelerate hmm algorithm utilized variant stage specialized accelerator target specific implementation genome sequence pipeline stage demonstrate multiple magnitude speedup efficiency improvement specific algorithm acceleration remain accelerate analysis stage generic data manipulation operation become bottleneck portion genomic analysis execution target acceleration  amdahl important aspect genomic data analysis algorithm refine propose hardware acceleration   performance bottleneck deprecate GATK hardware accelerator target stage propose however GATK utilize stage update variant algorithm render proposal largely suitable legacy pipeline similarly accelerator target hmm algorithm variant stage GATK likely replace dnn algorithm stage rapid specific algorithm argue accelerator generic data manipulation portion pipeline important accelerator specific algorithm aim address computational challenge genomic data analysis introduce genesis flexible acceleration framework target generic data manipulation operation commonly genomic data processing ample similarity operation perform genomic analytics traditional data analytics propose treat genomic data traditional data extend sql domain specific genomic analytics conceptualize genomic data relational database allows algorithm transform genomic data processing stage extend sql style query query genomic analysis stage construct genesis facilitates translation query hardware accelerator pipeline genesis hardware library accelerates primitive operation database genomic data processing deploy genesis generate accelerator amazon EC instance proof concept genesis framework accelerate data preprocessing phase GATK multiple stage preprocessing phase extend sql style query demonstrate accelerate target query significant performance improvement commodity cpu hardware platform contribution genesis hardware acceleration framework generic data manipulation operation genomic data processing pipeline framework user genomic data manipulation operation standardize sql user custom operation genesis aid rapid translation representation performant deployment hardware accelerator specifically genesis hardware library contains configurable hardware module accelerate operation relational database genomic data specific operation hardware library user easily stitch hardware module construct pipeline target specific query hardware automatically augment parallelism efficient memory access easy user interface host accelerator proof concept implement deploy hardware accelerator stage preprocessing pipeline GATK duplicate metadata update quality recalibration genesis accelerate deployed amazon web service aws fpga achieves speedup reduction software commodity multi core cpu platform II background brief background genomics reader understand proposal genome genome organism DNAS genome contains information chromosome sex chromosome chromosome sequence dna express dna nucleotide typical sequence chromosome genome contains roughly billion genomic analysis genomic analysis genomic feature dna sequence identify variation biological sample dna reference genome focus genomic analysis generation sequence  technology facto technology genome analysis fragment dna sample  wet lab raw sensor data equipment specific proprietary software hardware output data multiple fragment sequence sequence quality quality machine confidence correspond measurement measurement analysis primary analysis outcome primary analysis input secondary analysis secondary reference    CA TA cigar alignment metadata 1D alignment analysis identify genomic variant computationally demand computer software hardware research focus genomic variant identify analyze specific characteristic dna disease risk genomic data align data important data preprocessing phase genomic analysis align data contains chromosome identifier align within chromosome mapped sequence sequence quality addition align contains metadata alignment cigar concise idiosyncratic gapped alignment report cigar summarizes alignment information integer operation integer operation align insert delete clipped cigar indicates align insert reference align align mismatch reference actual cigar 1D indicates aligner clipped portion alignment deletion reference sequence addition cigar align flag mapping quality information etc hardware handle appropriately omit detailed explanation implementation description conciseness genesis framework overview genesis framework enables user rapidly deploy hardware accelerator data manipulation operation genomic data analysis workload observation genomic data conceptualize relational database data manipulation operation genome sequence express database operation genesis adopts extend sql style interface allows user express target data manipulation operation important aspect sql representation query series relational operator logical query genesis framework facilitates hardware accelerator query configurable hardware module directly relational operator aggregate etc genesis hardware library user easily configure dataflow architecture stitch highlevel hardware description chisel augment framework parallelism performant memory access apis enable user easily manage data communication host commodity xeon server hardware accelerator deployment evaluation compile verilog synthesize rout fpga image image deployed local fpga aws instance user genomic analysis pipeline extend sql query module genesis hardware library assemble construct hardware accelerator pipeline target query user utilize apis manage accelerator host user extend framework custom computation module genesis sql interface genomics data  data remark READS chr uint chromosome identifier POS uint leftmost align ENDPOS uint rightmost align cigar uint  array cigar operation seq uint len sequence qual uint len sequence quality reference ref chr uint chromosome identifier  uint reference seq uint  len sequence snp bool  len correspond site variation representation genesis utilizes sql domain specific target genomic analysis operation acceleration genomic reference data schema attribute associate evaluate data illumina sequencer specific len reference sequence fragment reference configure reference  reference snp  polymorphism bitmap representation site variation del del 1D   POS cigar seq qual ReadExplode POS BP qual ReadExplode operation across individual reference fragment locus location identify snp site mismatch locus therefore error quality recalibration algorithm described IV partition data manipulation operation genomic data processing sequence correspond reference sequence operation helpful pre partition reference multiple chromosome identifier chr READS POS ref  correspond reference fragment easy partition chr POS nth partition chromosome interval   partition reference nth partition chromosome reference sequence interval   len assign unique partition ID pid partition partition scheme simply obtain relevant reference sequence fragment inspect reference pid sql style operation genesis sql operation groupby limit subset sum addition additional operation  ReadExplode  col  convert array col multiple extra POS  POS incremented explode  operation already exists hive QL spark sql ReadExplode genomics specific operation explain lastly iteration clause oracle PL sql ReadExplode operation convert READS multiple contains correspond quality operation ReadExplode ReadExplode POS cigar seq qual optional READS input operation convert individual correspond quality utilize alignment information cigar explain II leftmost correspond cigar clipped output correspond quality extract reference partition  POS ENDPOS cigar seq READS partition  POS seq ref partition      seq  POS  declare  int iterate     ENDPOS  POS ReadExplode convert multi  ReadExplode  POS  cigar  seq  inner correspond   seq  seq  inner  limit  POS   POS  POS sum insert output sum  seq  seq  loop query within partition reference sequence sql query organize initialization query POS POS cigar seq MI  MI  SM  POS seq    POS seq POS seq POS ref seq RD seq cnt  explode inner POS execution query assign appropriate output insert reference marked reference delete reference output quality marked delete del query illustrate construct query genomic data analysis operation execution query diagram reference partition ID constant user operation sequence sql query essentially execution depict relevant reference GGA TAT queue queue selector index data data data output queue output queue queue inner joiner reducer sum alu output queue data data data queue queue sort seq filter output queue vector filter data queue comparator vector data comparator genesis data manipulation computation module partition ID pid extract relevant reference sequence expand multiple   convert multi ReadExplode inner ReadExplode subset  reference subset obtain limit offset clause obtain allows extract information identical reference compute insert output genesis hardware module overview genesis framework configurable hardware module assemble accelerate genomic data manipulation operation genesis adopts dataflow execution model multiple independent module via hardware queue hardware module operates sequence data consists data item multiple data item multiple flit flit atomic data communication operation sequence data item multiple sequence flit module consumes inspects flit input queue generates output flit output flit insert output queue input queue module genesis hardware module discus module detail data manipulation computation module joiner joiner merges flit input queue output module flit input queue consist data addition flit input queue ascend cycle module flit input queue output discard flit intact flit input queue data merge concatenation specifically module configure perform inner discard flit without discard flit queue queue outer discard flit filter filter input data queue specify comparison across constant output item item satisfies specify reducer reducer sequence data performs reduction operation sum max min reduction module flit multiple reduction utilized obtain reduction throughput flit per cycle module reduction across multiple flit reduction item granularity masked reduction mask per apply reduction subset data alu alu input data input queue input queue constant item performs relatively unary binary alu operation sub cmp etc data queue module item queue performs binary operation output item item contains multiple unary binary operation perform wise manner reducer module mask sequence conditionally perform unary binary operation memory scratchpad memory spm access module memory reader memory reader reading contiguous data memory data module address amount data memory continuously sends memory request memory memory access granularity internal prefetch buffer module return data memory module throughput flit per cycle flit granularity memory access granularity memory writer memory writer data input queue memory flit previous module per cycle temporarily internal buffer internal buffer memory access granularity specific termination sends request memory pre configure address spm reader spm scratchpad memory reader simply address input queue output scratchpad output queue configure interval address address module drain content output queue drain signal spm updater spm updater address input queue update scratchpad memory module operating mode memory writer performs sequential writes spm buffer address memory reader READS seq memory reader READS cigar memory reader READS POS memory reader READS ENDPOS memory reader  seq memory spm updater spm spm reader  filter ref inner joiner reducer memory writer ref construct hardware pipeline query memory reader READS seq memory reader READS gar memory reader READS POS memory reader READS ENDPOS memory reader  seq spm updater spm spm reader  ter ref inner joiner reducer memory  ref memory reader READS seq memory reader READS gar memory reader READS POS memory reader READS ENDPOS memory reader  seq spm  spm spm reader  ter ref  ner reducer memo ter ref memory reader READS seq memory reader READS cigar memory reader READS POS memory reader READS ENDPOS memory reader  seq spm updater spm spm reader  lter ref inner joiner reducer memory iter ref memory reader READS seq memory reader READS cigar memory reader READS POS memory reader READS ENDPOS memory reader seq spm updater spm spm reader   ref inner joiner reducer memory  ref local arbiter local arbiter memory local arbiter local arbiter global arbiter parallel configuration genesis hardware pipeline pipeline replicate configure perform random spm simply writes address finally configure perform modify update modify function constant configure perform modify update hardware ensure flit address pipeline stage modify avoid raw hazard purpose hardware buffer address pipeline stage incoming flit address buffer address hardware prevents incoming flit stage genomic data processing module  module ReadExplode operation explain module sequence cigar POS seq optionally qual input queue ReadExplode cycle module output tuple reference correspond quality reference insert similarly quality del delete construction hardware pipeline genesis pipeline genesis accelerates user query construct hardware pipeline multiple genesis hardware module chisel sql query translate hardware pipeline hardware pipeline memory reader reader data READS POS READS ENDPOS READS cigar READS seq  seq memory reader reading READS POS READS seq READS cigar  module generates sequence flit flit correspond reference generate sequence input joiner configure perform inner unlike data relevant reference data mapped chip spm facilitate data reuse memory reader reading  seq spm updater module initialize spm data memory content spm retrieve spm reader input memory reader reading READS POS READS ENDPOS spm content correspond interval data reference joiner joiner input sequence another reference performs inner sequence filter data reference output item lastly reducer module accumulates outcome memory writer outcome memory construct pipeline fully pipelined per cycle pipeline construction framework assumes translate sql style query hardware pipeline manual however envision automate future sql query easily parse graph node leaf node relational computational operator non leaf node genesis hardware library various module relational operator genomics specific operator hardware pipeline correspond query graph specifically node graph mapped genesis hardware module graph mapped hardware queue module resource allocation user hint translator frequently allocate chip  instead chip memory parallelism pipeline insufficient fully utilize available memory bandwidth fully utilize available memory bandwidth achieve throughput exploit abundant parallelism genomic data processing operation multiple pipeline genesis exploit parallelism multiple pipeline genesis treat pipeline independent memory interface command interface separation allows utilization hardware pipeline target operation input output hardware pipeline memory module arbitrate local arbiter arbitrate global arbiter memory channel structure applies command interface genesis application programmer interface genesis generate hardware pipeline user configure hardware memory reader writer function void configure mem void addr int  int len  int  configuration function invoked memory reader writer reading specific function argument addr address data host address  len  query lastly  specify pipeline multiple pipeline execute parallel invoked function data accelerator memory memory reader configures correspond memory reader writer execution completion memory reader writer specific pipeline configure user execute non void genesis int  execution user another non bool genesis  accelerator execution void genesis  accelerator execution accelerator execution completes user void genesis flush  data accelerator memory host memory address configure configure mem existence non host cpu perform useful accelerator extend genesis custom operation standard sql clause genesis hardware library module expressive data operation genomic analytics workload data manipulation operation benefit capability custom operation genesis allows user custom module performs desire computation custom module user chisel module interface input multiple output data output user invoke module sql style interface exec     user define function procedure semantics sql implementation IV  genome  genesis GATK data preprocessing pipeline GATK recommendation genome variant discovery analysis secondary analysis GATK genome variant discovery phase phase data preprocessing phase sequence associate quality sequence input refines alignment duplicate duplicate metadata update metadata update BQSR covariate construction BQSR quality update BQSR GATK data preprocessing GATK data preprocessing alignment accelerator runtime breakdown GATK data preprocessing pipeline aws core alignment accuracy phase variant discovery phase identifies filter variant difference genome reference genome phase pipeline precedes variant discovery phase phase variant discovery pipeline target variant genome  variant somatic variant variant etc focus accelerate data preprocessing phase phase substantially amount variant discovery phase regardless variant discovery however propose utilized data manipulation operation variant discovery pipeline data preprocessing phase consists stage alignment duplicate metadata update quality recalibration alignment stage sequence associate quality sequence appropriate reference sequence alignment duplicate happens mapped duplicate dna fragment remove duplicate addition sort metadata generate metadata information difference correspond reference sequence lastly quality recalibration BQSR stage refines quality stage sub stage covariate construction quality update covariate construction stage algorithm error rate mismatch reference sequence across potential source bias lane sequence measurement quality update stage algorithm adjusts quality empirical error rate across quality empirical quality runtime breakdown GATK data preprocessing pipeline evaluation II depict runtime spent stage core stage alignment however recent hardware accelerator GenAx achieves throughput alignment stage assume throughput alignment memory reducer sum memory writer memory reader READS qual hardware duplicate stage stage portion spent alignment stage shrink merely core consequently duplicate metadata update quality recalibration stage account majority runtime proof concept genesis library accelerator target various operation within stage duplicate metadata update quality recalibration accelerate duplicate algorithm goal duplicate stage identify originate fragment dna duplicate pcr polymerase chain reaction amplification dna sample preparation identify duplicate algorithm generates specifically  prime obtain cigar inspect clipped POS compute algorithm identifies duplicate sum quality marked duplicate addition duplicate stage sort align acceleration stage focus acceleration sum quality computation hardware qual input computes sum quality host core simply utilizes sum quality duplicate hardware composition hardware performs straightforward task compute sum quality hardware pipeline task genesis pipeline simply data input memory reader performs computation sum reduction reducer memory memory writer benefit hardware acceleration parallelism across quality across accelerate metadata update algorithm metadata update stage GATK  calculates specific metadata NM metadata MD metadata UQ metadata NM metadata mismatch sequence technology generate per concatenate construct reverse clipped ENDPOS obtain  prime memory reader READS qual memory reader READS seq memory reader READS cigar memory reader READS POS memory reader READS ENDPOS memory reader  seq memory spm updater spm spm reader  joiner reducer memory writer filter   UQ reducer sum MD memory writer NM memory writer qual ref hardware metadata update stage reference MD metadata specifically format enables recovery reference sequence inspect metadata sequence MD metadata sequence contiguous output reference mismatch delete insert reference MD tag information insertion MD CA mismatch ninth lastly UQ metadata sum quality mismatch reference metadata essentially likelihood erroneous update metadata utilized latter genomic data processing pipeline acceleration genesis hardware POS ENDPOS cigar seq qual data relevant  seq reference data input compute NM MD UQ metadata output metadata attach file software task reference pre partition software explain invocation pipeline handle partition accelerator invoked multiple processing entire data hardware composition genesis hardware pipeline stage pipeline specifically NM metadata computation almost identical query mismatch insertion deletion joiner configure perform instead inner preserve insertion deletion information UQ metadata computation pipeline stage NM metadata computation instead counting mismatch performs sum reduction filter quality MD metadata computation perform passing outcome joiner custom module  generate MD tag custom module simply output joiner input performs reference increment counter output counter reference delete along reference deletion accelerate quality recalibration algorithm genome sequence quality identifies quality probability sequence machine correctly however empirical error rate average quality translates error rate error however due various source systematic bias lane sequence machine data error rate empirical obtain manually counting mismatch sequence reference sequence reduce deviation empirical quality machine generate quality quality recalibration BQSR stage categorizes bin BQSR algorithm entry error bin error report correspond reference mismatch snp site variation specifically binning policy GATK BQSR bin lane machine report quality relative within cycle policy bin report quality precede context error bin compute algorithm adjusts correspond quality statistic covariate adjust quality BQSR empirical quality acceleration stage accelerates binning BQSR covariate construction stage hardware accelerator inspects mismatch correspond reference non snp site hardware increment observation counter error counter correspond bin increment observation counter binning GATK software construct covariate adjusts quality accordingly quality update stage stage reference pre partition software metadata update stage partition POS partition pipeline invocation handle partition hence multiple invocation processing entire data memory reader READS seq memory reader READS cigar memory reader READS POS memory reader READS ENDPOS memory reader  seq memory reader  snp memory spm spm reader  inner joiner  filter snp spm updater filter ref spm updater spm updater spm updater spm updater ref spm  spm  spm  spm  spm reader mem writer spm reader mem writer spm reader mem writer spm reader mem writer BQSR covariate construction hardware hardware composition genesis hardware pipeline BQSR stage pipeline hardware pipeline however genesis hardware library module utilized implement functionality custom module  calculates BQSR bin IDs  module joiner module module sequence quality input quality output bin ID cycle cycle output another bin ID context context ID context context ID assign AA AC AG CA TT significant functionality addition pipeline snp stage spm ref seq output  module reference data output spm POS seq snp inner joiner POS input outcome filter filter data snp output filter spm  configure perform  associate   input address respectively outcome filter cascade another filter output item reference mismatch empirical error finally spm  update   update hardware pipeline error belonging bin across binning address scheme  within partition handle content  drain associate spm reader memory memory writer module apply genesis genomic data processing operation genome sequence pipeline previous IV IV IV explore genesis accelerate data manipulation stage data preprocessing phase target data cycle hence relative additional cycle assign reverse GATK pipeline however genesis genesis accelerate genomic data manipulation operation phase pipeline preliminary analysis indicates genesis portion GATK genome sequence pipeline FM index bwa mem aligner active determination  joint  intersection training truth resource  variant quality recalibration  essentially consist data consolidation filter operation furthermore genesis framework accelerate sequence analysis genome sequence susceptible specific disease perform relational database query  gemini genesis generate accelerator applicable variant GATK pipeline independent genome sequence pipeline data manipulation operation independent choice alignment algorithm   aligner variant algorithm    applicable variant GATK pipeline moreover data manipulation operation across genome sequence pipeline pipeline   berkeley adam perform task slightly algorithm specific stage alignment variant genesis generate accelerator applicable pipeline evaluation methodology II hardware CONFIGURATIONS aws EC instance machine configuration aws instance component xlarge host processor intel xeon broadwell genesis HW ghz turbo ghz host memory GiB host storage GB ssd fpga xilinx virtex ultrascale VUP logic DSPs fpga memory GB xlarge processor intel xeon platinum skylake SP GATK SW 5GHz ghz turbo boost memory GiB storage TB ssd compute storage demonstrate genesis capability accelerate data manipulation operation genomic data analysis implement hardware accelerator hardware pipeline construct algorithm accelerator avoid confusion data manipulation operation data preprocessing phase GATK genesis framework deploy commercial amazon EC xlarge instance II instance contains xilinx virtex ultrascale VUP fpga mhz accelerator configure pipeline resource limit fpga performance limit accelerator longer speedup parallelism due memory communication bottleneck pipeline duplicate pipeline metadata update pipeline quality recalibration software implementation GATK version aws xlarge instance II memory optimize memory crucial obtain performance genomic data analysis workload addition TB ssd volume machine software SSDs input data characterize illumina sequence patient NA obtain institute public dataset  reference genome  snp site data construct reference evaluation performance speedup genesis accelerator accelerate various stage GATK data preprocessing phase GATK software implementation carefully configure core aws EC instance duplicate stage speedup GATK pipeline data chromosome sort happens duplicate stage metadata update quality recalibration stage  speedup overall speedup genesis achieves overall speedup duplicate stage metadata update BQSR covariate construction stage genome execute assume metadata update perfectly genesis reduces computation gene roughly runtime breakdown breakdown genesis framework runtime stage GATK data preprocessing phase duplicate achieves speedup approximately others accelerate software portion stage runtime bottleneck hardware achieves significant speedup metadata update BQSR speedup partially limited  communication runtime  interface bandwidth aws instance host communicates fpga via pcie dma interface approximately GB custom microbenchmark generation communication interface metadata update stage baseline implementation singlethreaded conservatively assume baseline software implementation perfectly core performance comparison genesis accelerator baseline GATK data preprocessing stage pcie  bandwidth dma controller performance improve accordingly speedup metadata update BQSR improve significantly respectively GB pcie interface assume technology speedup genesis ASIC domain specific accelerator target specific mostly compute intensive algorithm achieve magnitude speedup unlike accelerator accelerator target data manipulation operation performance bottleneck limitation host fpga communication interface memory storage furthermore relatively speedup data manipulation operation important importance accelerate data manipulation operation becomes  stage pipeline significantly accelerate IV importantly genesis speedup deployability flexibility fpga significant drawback ASICs performance consumption notable advantage easy deploy adapt genesis programmability productivity sql orient software interface composable accelerator construction approach utilize genesis hardware library genomic data processing workload exhibit plethora parallelism relatively increase amount resource scenario meaningful metric raw speedup considers amount resource utilizes accelerate stage aws configuration II genesis reduces genomic data processing achieves efficiency performance per software baseline fpga resource usage IV fpga resource consumption genesis accelerator genesis accelerator tend utilize fpga resource algorithm communication memory bound comparison genesis baseline SYSTEMS stage genesis reduction genesis speedup normalize performance duplicate metadata update BQSR construction IV fpga resource usage genesis available utilization duplicate clb lookup clb register brams MB MB metadata update clb lookup clb register brams MB MB quality recalibration clb lookup clb register brams MB MB pipeline exceeds threshold implies improvement fpga memory interface adoption HBM recent xilinx ultrascale FPGAs speedup exploit utilized configuration multiple genesis accelerator target operation fpga user multiplex accelerator avoid reprogramming VI related hardware accelerator genomics substantial prior focus accelerate genome sequence signify importance however prior attempt accelerate specific algorithm generic operation accelerator target alignment algorithm pre alignment filter variant algorithm  alignment algorithm achieve exceptional efficiency architecture highly specialized specific algorithm contrast approach leverage primitive sql sql extension wider  data manipulation operation genomic data processing hardware specific algorithm genomics domain accelerate spent generic data manipulation operation becomes genesis successfully accelerate processing genomics DBMSs exist framework gemini  others conceptualize genomic data database DBMS sql style query data efficient software adopts sql query software interface utilizes specialized hardware accelerate database operation popularity database usage genomic data processing genesis interface effectively utilized bridge gap  hardware designer hardware accelerator data intensive application closely related  sda attempt accelerate database operation ASICs FPGAs hardware library partial overlap hardware module propose framework however challenge impossible utilize prior accelerate genomics data manipulation operation efficiently  sda program model assumes specific processing naïve efficiently complicate dataflow complex processing approach decompose complex operation multiple operation memory communication operation extremely inefficient similarly utilizes scratchpad memory buffer cannot implement dataflow pipeline exploit data reuse addition accelerator specialize relatively subset sql operation sort groupby sufficient genomics data manipulation operation sql operation  genomic data specific operation ReadExplode  data aim accelerate database operation exploit specific characteristic memory processing architecture finally genesis inspiration accelerator focus efficient data movement   softbrain graphicionado  exploit abstraction target completely domain proprietary commercial illumina  fpga proprietary accelerates genomic secondary analysis pipeline GATK however recently collaboration institute release developed  pipeline addition nvidia proprietary gpu acceleration GATK compatible pipeline acquisition  december  speedup traditional cpu nvidia  speedup core cpu gpus comparison proposal  utilizes slightly pipeline report experimental setup furthermore   endto speedup computation orient stage alignment variant stage genesis focus data manipulation stage industrial performance exist stage pipeline micro architecture  gpu optimization strategy  public addition genesis approach allows highly productive accelerator development modify algorithm thanks composability vii conclusion propose genesis flexible acceleration framework genomic data analysis genesis consists software interface sql style query data manipulation operation genomic data processing hardware library accelerator management api demonstrate deployability flexibility composability genesis implement multiple GATK preprocessing stage genesis achieves notably performance efficiency GATK software commodity xeon cpu server addition genesis allows  expedite research analysis leverage domain specific hardware platform generally easy program interface already widely adopt data analysis sql