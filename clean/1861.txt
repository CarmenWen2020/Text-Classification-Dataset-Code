compile quantum program machine constrain limited quantum constrain limited quantum operation challenge strategic quantum ancilla reuse compilation infrastructure tackle allocation reclamation scratch qubits ancilla modular quantum program core strategically performs uncomputation opportunity qubit reuse noisy intermediate quantum NISQ computer fault tolerant FT quantum computer fundamentally constraint data locality instruction parallelism communication overhead heuristic ancilla reuse algorithm balance consideration computation resource constrain NISQ FT quantum machine throttle parallelism precisely capture workload program propose improve metric active quantum volume metric evaluate effectiveness algorithm improves average rate NISQ application surprisingly additional gate uncomputation ancilla locality substantially swap gate gate overall achieves average reduction active quantum volume FT machine index quantum compute compiler optimization reversible logic synthesis introduction thanks recent rapid advance physical implementation technology quantum compute QC surge hardware prototype academia phase QC development commonly refer noisy intermediate quantum NISQ era quantum computer perform quantum operation gate quantum qubits modest NISQ machine reliable perform computational task beyond NISQ era quantum computer ultimately  FT era quantum error correction correspond author   edu implement ensure operation fidelity met arbitrarily computation challenge however QC community substantial resource gap quantum computer hardware quantum algorithm classically intractable typically resource quantum computer extremely constrain constrain limited qubits available complicate connectivity qubits constrain qubits suffer decoherence gate successive operation qubits program rate due constraint critical efficient compile program program circuit minimize qubits sequential operation circuit depth option propose option approach coordinate allocation reclamation qubits optimal reuse load balance reclaim qubits however substantial operational obey quantum computation recycle qubit additional gate operation apply undo computation propose automate compilation framework strategic quantum ancilla reuse modular quantum program readily apply NISQ FT machine compiler automatically determines program perform uncomputation manage offs qubit saving gate optimize overall resource consumption optimally reclamation program crucial minimize resource consumption reclaim significant due gate dedicate uncomputation likewise reclaim seldom qubits fail program machine qubit usage modular  acm annual international symposium computer architecture isca doi isca tion shor algorithm unfortunately optimal program reclaim qubit extremely complex efficient qubit reuse strategy pivotal role enable execution program resource constrain machine precisely estimate workload computational task propose resource metric active quantum volume AQV evaluates liveness qubit lifetime program formally introduce inspire concept quantum volume introduce ibm computational capability quantum hardware device parameter qubits gate error probability AQV metric volume resource program execute target hardware therefore minimization objective allocation reclamation strategy contribution heuristic compilation framework optimize qubit allocation reclamation modular reversible program leverage knowledge qubit locality program modularity parallelism introduce resource metric active quantum volume AQV calculates liveness qubits lifetime program metric allows quantify effectiveness various optimization strategy characterize volume resource consume computational task approach computation resource constrain NISQ machine strategically reuse qubits surprisingly gate uncomputation improve fidelity program impair creates ancilla locality substantially swap gate gate improves rate NISQ application average approach applicability NISQ FT machine achieves average reduction active quantum volume FT organize II briefly discus quantum computation compilation reversible arithmetic quantum circuit related classical quantum compilation illustrate central allocation reclamation ancilla tackle IV describes detail technique propose algorithm evaluates performance algorithm array benchmark NISQ FT architecture finally VI summarizes highlight challenge await satisfactory max qubits machine coherence qubits gate qubits qubit usage modular exponentiation shade curve corresponds active quantum volume application curve balance qubit reclamation uncomputation option II background related quantum compute quantum computer device harness quantum mechanic information highlight derive principle quantum mechanic superposition quantum qubit quantum linear combination complex amplitude satisfy transformation computation qubits accomplish apply unitary quantum logic gate quantum another reversible deterministic measurement measurement readout qubit collapse quantum classical outcome probability probability irreversible probabilistic reversibility constraint potential compute quantum computer posse impose strict constraint quantum computation transformation implies quantum logic gate apply qubit reversible classical gate reversible cannot recover input solely output reversible introduce scratch ancilla gate toffoli gate terminology ancilla limited error correction ancilla physical logical qubits scratch computation arithmetic complexity tackle computational quickly extensive usage ancilla circuit due reversibility constraint gate toffoli gate circuit diagram irreversible gate reversible toffoli gate synthesize reversible arithmetic arithmetic logic algorithm exist directly synthesize reversible circuit truth desire function template typically combinational function function internal complexity arithmetic algorithm modularity quickly becomes convenient construct arithmetic modular subroutine reversible logic synthesis optimization besides circuit reversible function gate minimize amount scratch memory ancilla circuit fortunately recycle ancilla later reuse circuit extensive scratch memory manage allocation reclamation ancilla becomes critical efficient implementation function role reversible arithmetic quantum algorithm reversible arithmetic pivotal role quantum algorithm advantage quantum algorithm stem ability pas superposition input classical function whereas classical algorithm evaluate function input quantum algorithm involve compute classical function embed reversible arithmetic subroutine quantum circuit shor factor algorithm classical  arithmetic grover algorithm implement underlie oracle subroutine HHL algorithm linear equation contains expensive reciprocal reversible arithmetic subroutine typically resource demand computational component entire quantum circuit compile quantum circuit target architecture option obtain synthesize classical reversible circuit compile sequence instruction quantum machine recognizes natively resolve architectural constraint aspect instruction quantum logic gate device architecture gate clifford gate comprise cnot gate gate gate hadamard gate gate gate gate quantum hardware prototype  machine code error correction classical reversible circuit replace gate quantum counter gate cnot gate directly implement quantum gate toffoli gate algorithm exist decompose sequence clifford gate instruction propose target hardware qubit communication multi qubit quantum gate implement interact operand qubits another physical building quantum machine qubit connectivity extremely challenge effort  machine fully qubits trap ion technology superconducting machine instance ibm rigetti typically connectivity scalable proposal involve architecture limited qubit connectivity model resolve distance interaction consequence interact qubits directly induce communication difference NISQ FT machine topology architecture model resolve qubit interaction communication context NISQ machine frequently approach resolve distance qubit gate swap physical qubits closer perform chain swap gate connects swap gate consists cnot gate swap chain proportional chain FT machine logical qubit encode physical qubits logical operation specify sequence physical operation physical qubits instance code implementation physical qubits 2D grid data qubit stabilizer  essence logical operation define specify stabilizer  interact data qubits logical qubit gate define braiding creates logical qubits   along interact although extend arbitrary constant braid refer interested reader excellent tutorial although propose approach optimize compile quantum algorithm onto medium qubits demonstrate NISQ machine benefit focus braiding scheme lattice surgery exists resolve qubit interaction code expose communication tradeoff optimization significantly sweep qubits assume architecture appropriate communication model swap braiding difference swap braid swap chain proportional swap whereas braid proportional crossing braid reclaim ancilla qubits via uncomputation reclaim qubits return future reuse due entanglement costly ancilla qubits entangle data qubits alter data qubits reset fortunately uncomputation introduce bennett undo computation remove entanglement relationship ancilla qubits data qubits previous computation pane illustrates circuit diagram denotes circuit computes classical function garbage output elsewhere undo computation uncomputation approach potential limitation firstly uncomputation appropriately additional gate secondly circuit implement classical reversible logic implement toffoli gate alone optionally gate cnot gate quantum algorithm non classical gate hadamard gate phase gate gate focus quantum algorithm computes classical function usually arithmetic implement without gate II classical reversible logic quantum algorithm related optimization qubit allocation reclamation reversible program date propose reduce qubit via grain uncomputation expense increase characterize complexity reclamation program complex modular structure recent structure operation identify eligible cleanup recent improves reclamation strategy  program algorithm emphasizes identify reclamation opportunity program whereas focus coordinate multiple reclamation modular program reclaim qubits via measurement reset ancilla qubits already disentangle data qubits directly reclaim perform measurement reset qubits measurement program reuse qubits measurement computation prior extensively propose algorithm discover opportunity measurement reset approach limitation firstly challenge NISQ hardware qubit reset without reuse qubits measurement costly unfeasible technique reset qubit NISQ architecture qubit decoherence naturally typically millisecond superconducting machine significantly longer average gate around nanosecond FT architecture logical measurement overhead roughly gate operation amenable approach secondly qubit  introduce measurement program rare quantum algorithm measurement absent program arithmetic subroutine somewhere circuit qubit entangle longer whereas uncomputation partially subcircuit unlike uncomputation approach actively qubit reuse opportunity related classical compilation similarity register allocation classical compute assign program variable limited register cpu access variable register ram register spill analysis variable register reuse qubits instance heuristic methodology inspire register allocation gpu distribute communication minimize technique  reduces register pressure register recomputing variable instead memory offs qubit allocation reclamation unique introduce recursive recomputation qubit reservation optimal strategy register allocation similarly qubit reuse luckily transfer insight classical register allocation optimization qubit allocation reclamation connection qubit reuse classical register allocation allows inherit intuition wealth classical literature nonetheless uncomputation reuse locality offs fairly unique indeed  qubit reclamation aim active register qubits expense computation exhibit exponential recomputation increase variable recomputing qubit reservation  ancilla qubit reclamation via uncomputation horizontal qubit solid contains reversible gate qubits highlight duration garbage illustration eager lazy strategy respective issue recursive recomputation qubit reservation dash denotes function enclose gate allocation reclamation marked circuit gain insight numerous technique code schedule thread parallelism motivation focus primarily reuse qubits via uncomputation discus significance propose strategy noisy intermediate quantum NISQ future fault tolerant FT architecture prior strategy eager cleanup lazy cleanup illustrate baseline eager recursive recomputation eager reclaims qubits function eager performs uncomputation reclaim ancilla qubits program nest function uncompute caller everything inside callee callee uncompute hierarchical structure consequently computation callees marked formally hierarchical program recomputation increase factor exponential blowup phenomenon recursive recomputation program roughly circuit factor crucial role heuristic baseline lazy qubit reservation lazy reclaims qubits function  lazy sometimes prefer strategy avoids waste recomputation sometimes beneficial temporarily garbage callees uncompute garbage caller equivalent inlining callee caller caller handle reclamation ancilla qubits however benefit avoid recomputation exception recursive fourier sample recomputation cannot avoid correctness qubit reservation ancilla qubits callee reserve reuse caller garbage qubit garbage almost whereas eager away overview algorithm exist qubit reuse algorithm emphasize asymptotic qubit saving commonly ideal assumption machine qubit connectivity locality constraint qubits identical straightforward qubits maintain global pool sometimes refer ancilla heap ancilla qubits heap reclaim popped allocate instance  manner ideal model simply qubit usage counting qubits allocate lifetime program however proposal NISQ FT quantum architecture stricter locality constraint strategic quantum ancilla reuse algorithm highly motivate lesson communication determinant factor qubit allocation reclamation NISQ architecture novel observation firstly algorithm strategy machine connectivity benchmark  detail prefers eager strategy lattice topology swap lazy strategy fully topology without swap secondly counter intuitively uncomputation gate improve overall circuit fidelity properly careful allocation reclamation expense additional uncomputation gate compensate reduction communication uncomputation allows ancilla strategic quantum ancilla reuse compilation input scaffold program sample code executable simulates dynamic qubit allocation reclamation gate schedule optimize schedule quantum gate instruction locality constraint desire reclamation strategy synthetic benchmark  active quantum volume define  performs lattice machine eager strategy prefer lazy operating fullyconnected machine locality swap gate overall gate discus strategy allocation reclamation locality aware allocation LAA locality aware allocation LAA heuristic algorithm prioritizes qubits accord location machine LAA chooses qubits ancilla heap balance consideration communication serialization expansion qubits allocate reuse heuristic algorithm assigns priority qubits priority communication overhead qubit interaction potential impact parallelism program reuse qubits data dependency program serializes computation reuse register false data dependency serialization reuse qubits expands active qubits increase communication overhead recall II communication tradeoff NISQ FT architecture distinction heuristic clearer IV effective reclamation cer effective reclamation cer heuristic uncomputation decision benefit analysis potential reclamation estimate quantity uncomputation reclaim ancilla qubits uncomputation garbage qubits cer balance recursive recomputation qubit reservation II efficient accurately estimate quantity decision function affect function function decides uncompute additional gate duplicate uncompute illustrate phenomenon recomputation function account decision uncomputation express    active qubits  gate uncomputation function function program graph communication factor detail IV suppose function  reclaim ancilla reclaim function  estimate ancilla uncompute execute approximate       function gate function uncompute function capture expansion discus detail IV active quantum volume accurately estimate workload program define active quantum volume AQV program VA qubits sequence corresponds qubit usage denote allocation reclamation kth qubit respectively AQV qubits execution AQV costly execute target machine metric active exclude reclaim qubit spends heap volume calculation restore suffer decoherence hence AQV serf minimization objective practical advantage AQV resource metric AQV exposure error metric qubits circuit depth qubit susceptible surroundings AQV yield rate unlike qubit gate circuit depth AQV allows accurately model liveness qubits machine qubits actively information perform computation oppose unused prefer subset qubits boost program rate ibm quantum volume QV characterizes amount computational resource quantum device AQV portion resource actively utilized program device compilation nutshell compilation algorithm input scaffold program optimize schedule quantum instruction accomplish instrumentation driven approach allows pre simulate quantum program input compile quantum program simulate resource usage illustrates detail compilation consists component  syntactical construct compatible within scaffold qubit allocation heuristic qubit reclamation heuristic hood input program initial compilation allocate instruction replace classical function implement heuristic algorithm quantum gate replace classical function resolve connectivity constraint operand qubits schedule gate obtain executable classical quantum program compiler maintains ancilla heap pool reclaim qubits reclaim ancilla qubits future allocation therefore pop ancilla heap initialize brand qubits contribution heuristic decision complexity heuristic greedy algorithm allocation reclamation decision program linearly reclamation program program nest function decision callees prior caller caller function uncomputation deterministic easy estimate flip suboptimal situation callee decision neglect potential burden  caller computational complexity qubit reclamation via uncomputation program linear sequential dependency graph reversible pebbling approach however optimal program hierarchical structure PSPACE program callees per function reclamation combination reclamation decision clearly ıve optimal strategy exhaustively enumerate decision efficient IV implementation DETAILS implementation detail component algorithm expressive syntactical construct scaffold program expose optimization opportunity instrumentation driven llvm translates quantum program classical executable detail  allocation heuristic effective reclamation heuristic syntactical construct express opportunity qubit allocation reclamation optimization augment scaffold program additional syntactical construct compute uncompute code keywords allocate express location qubit allocation reclamation  void qbit qbit qbit anc allocate anc compute toffoli cnot anc toffoli anc cnot anc uncompute invoke inverse explicitly toffoli anc cnot anc toffoli anc int qbit declare allocate allocate qubits return format compute uncompute construct qubit allocation reclamation function allocates reclaims ancilla qubit respectively enable automation optimization compiler additional information code structure compute code program explicitly specify instruction belong computation optionally programmer automatically generate content uncompute invoke inverse hood compiler replace allocate instruction invocation heuristic algorithm reclamation decision execute skip uncomputation accordingly instrumentation driven compilation illustrate advantage instrumentation approach conventional  approach quantum compiler traditional pas driven approach compile optimize quantum program quantum program multiple layer transformation completes task instance transformation resolve classical structure loop unroll module inlining explore circuit optimization commutativity parallelism satisfy architectural constraint qubit connectivity assign qubit mapping perform gate schedule etc potential limitation approach transformation performs independently conflict jointly optimize correlate mapping schedule algorithm description eager reclaim qubits whenever lazy reclaim qubits program graph combine locality aware allocation LAA effective reclamation cer compiler configuration technique feedback loop instrumentation driven approach purpose dynamic optimization compilation scalability recall compilation executable allows dynamically optimize allocation reclamation qubits reversible program parallel modular structure illustrate detail heuristic algorithm integrate compilation allocation policy detail allocation policy concerned communication overhead qubit operation program NISQ architecture communication qubits accomplish qubit another via series swap swap distance locality distance longer chain swap concept locality trickier FT architecture communication accomplish via braiding braid arbitrary average braid average braid strongly correlate braid crossing reduce communication overhead interact qubits closer non interact qubits apart qubits available request due maximum qubit constraint shortage ancilla heap allocation pending proceed schedule non dependent parallel computation reclamation allocation request fulfil sufficient ancilla qubits reclaim reclamation policy detail reclamation policy dictate ancilla qubits recycle decision rely heavily consideration qubit saving uncomputation gate communication overhead balance qubit saving gate detail estimate communication factor equation NISQ architecture average swap chain per gate estimate obtain swap chain compile simulation average swap gate schedule estimate subsequent gate module fault tolerant FT architecture average braiding conflict per gate estimate communication latency due braid rout estimate similarly factor average braid average braid crossing qubit reservation active qubit expand communication overhead multiplicative factor    aim estimate swap braid increase due expansion algorithm pseudo code implement LAA cer respectively procedure namespace llvm function llvm IR interact qubits obtains qubits allocate qubits interact ahead code gen uncompute uncompute conditionally expands deletes code uncompute closest qubit heap closest qubit available qubits reuse heap qubits respectively function return candidate qubits calculate communication serialization expansion described sec IV qubits minimum request qubits allocate algorithm allocate locality aware allocation input qubits output qubits llvm interact qubits closest qubit heap closest qubit algorithm effective reclamation input qubits qubits uncomputation uncomputation llvm gen uncompute heap llvm uncompute llvm transfer evaluation benchmark II QC benchmark brief description benchmark reversible arithmetic function description RD input function input output sym function input output output input adder addition  shallow instance synthetic benchmark  elsa shallow instance synthetic benchmark elsa  shallow instance synthetic benchmark  adder addition adder addition mul multiplier mul multiplier  modular exponentiation function sha cryptographic hash function salsa cipher core function   nest synthetic function elsa workload  nest synthetic function  workload deeply nest synthetic function II characteristic benchmark program application ancilla qubits ancilla qubits expensive NISQ FT architecture crucial reuse ancilla qubits improve rate program benchmark RD sym adder arithmetic function suitable execute NISQ qubits benchmark medium function demand computational resource NISQ qubits instance benchmark construct random synthetic circuit  elsa  characteristic program structure benchmark parameterized program graph variable nest max callees per function max input qubits per function max ancilla qubits per function maximum gate per function experimental setup compilation intel core 3GHz 4GB ram implement quantum compiler framework  version simulation intel core 4GHz 4GB ram perform ibm qiskit software ancilla reuse algorithm eager lazy baseline commonly prior strategic quantum ancilla reuse algorithm adder  adder modular exponentiation important subroutine shor factor algorithm sha contains multiple modular addition rotation implementation oracle grover algorithm hash collision efficiently thereby reduce security hash function salsa involves parallel module module modifies modular addition xor operation rotation salsa cipher salsa core function encrypt data salsa function popularly adopt TLS chrome browser  qubits gate randomly assign QC architecture boundary experimental NISQ architecture 2D lattice physical qubits  connectivity commonly NISQ FT boundary architecture architecture model benchmark FT architecture code error logical qubits NISQ although improve performance application reclaim ancilla reduces program footprint swap due communication NISQ machine analytic simulation quantify fidelity gain reduce swap simulation tractable focus benchmark introduce version synthetic benchmark II AQV analysis NISQ benchmark characteristic compile QC program compile policy eager compile policy program qubits gate reuse ancilla qubits balance qubit gate AQV comparison AQV reduce apply LAA allocates closest qubits reduce swap apply AQV reduce reduction uncompute program rate analytical model program rate evaluation estimate analysis qubit  gate error qubit qubit gate rate probability qubit coherence IV average improvement eager lazy strategic  program qubits improve overall reality analysis neglect program structure cancellation positive perform simulation simulation simulation evaluation ibm qiskit aer simulator model qiskit provider aer library depolarize qubit qubit gate benchmark policy  qubits circuit depth swap lazy RD eager lazy sym eager lazy eager lazy adder eager lazy  eager lazy elsa eager lazy  eager gate swap gate NISQ benchmark compilation qubits ibm sup  trap simulation IV error rate device model simulation thermal relaxation relaxation account qubit decoherence IV parameter simulation device simulation data obtain shot noisy circuit simulation variation distance measurement outcome noisy circuit ideal QC achieves distance almost benchmark eager lazy applicability NISQ machine impact uncomputation circuit fidelity balance qubit saving gate strategically  function surprisingly lazy additional gate uncomputation reduces operation thanks substantial reduction swap gate ancilla qubits locality actively reclaim reuse uncomputation dis  garbage qubits output qubits prevent propagate furthermore retains qubit saving eager overall achieves rate qubits lazy NISQ FT boundary boundary NISQ fault tolerant architecture completeness analyze performance algorithm assume  machine qubits built without error active quantum volume AQV analytical model rate realistic simulation ibm qiskit aer simulator variation distance impact optimization NISQ application benchmark qubits strategy substantially qubits maintain application rate AQV medium non error quantum correspond normalize AQV algorithm AQV fault tolerant quantum correction AQV compile policy normalize  label significant AQV saving reduce AQV factor average lazy policy fault tolerant FT FT benchmark NISQ FT braiding communication integrate braid simulator precisely calculate communication overhead execute program code error architecture prior assume logical qubits laid array sufficient distance qubits separation qubits serf channel qubits braid simulator associate site per qubit channel qubit braid furthermore qubit gate substitute swap chain generation procedure gate scheduler braid generation procedure cnot gate schedule route operand qubits ongoing braid queue route significantly reduces AQV application FT environment lazy policy achieve AQV reduction average reduction VI conclusion automate compilation manages allocation reclamation qubits reversible program modular structure dynamic heuristic approach tackle challenge knowledge qubit locality program structure advantage efficiently compile highlevel arithmetic resource constrain machine accomplish via effective uncomputation introduce resource metric AQV quantifies amount resource utilized computational task allows effectiveness various compiler optimization core optimization allocation reclamation heuristic predict uncomputation information qubit saving gate overhead potential reuse decision module program graph methodology effective suite benchmark arithmetic function synthetic program arbitrary structure evaluate NISQ FT practical NISQ device future FT bridge qubit reclamation classical register allocation allows adapt heuristic classical literature remains explore intuition classical compilation optimize qubit allocation reclamation relies heuristic seek balance minimal ancilla usage minimal gate complexity remains strategy achieve information theoretical bound asymptotically asymptotic analysis explore gate multi gate arithmetic function adder extension asymptotic behavior various uncomputation strategy communication