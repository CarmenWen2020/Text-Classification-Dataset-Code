memory consistency model MCMs specify legal visibility memory access parallel program traditionally instruction architecture ISA MCMs assume relevant program visible memory behavior memory interaction user program instruction assumption fails account virtual memory VM implementation additional memory interaction user program instruction operation address  translation lookaside buffer invalidation initiate hardware operation hardware dirty update user program execution additional memory interaction impact observable memory behavior user program memory transistency model MTMs coin superset MCMs additionally articulate VM aware consistency however prior enable formal MTM specification automate analysis gap transform framework transform feature axiomatic vocabulary formally specify MTMs transform synthesis automate generation litmus enhance MTM feature enhance litmus ELTs transform MTM specification formally define estimate MTM intel processor elt observation elt evaluation intel MTM implementation prior available public documentation elt synthesis bound program input transform synthesis successfully ELTs within instruction bound relevant curated ELTs prior plus index memory transistency memory consistency enhance litmus synthesis axiomatic model introduction programmer designer rely interface specification coordinate software execution hardware instruction architecture ISAs feature memory consistency model MCMs specify legal ordering visibility memory access parallel program implementation ISA define behavior fundamental return software load memory specify incorrectly implement ISA MCMs bug program significant effort devote specify verify implementation author contribute equally transform feature axiomatic vocabulary specify MTMs synthesis generate ELTs MTM specification however address observation traditional ISA MCMs fail capture relevant memory interaction therefore relevant memory behavior transistency MCMs assume program visible memory behavior memory interaction user program instruction MCMs abstract away processor virtual memory VM implementation additional memory interaction user program instruction operation address  translation lookaside buffer tlb invalidation initiate hardware operation hardware dirty update user program execution along involve non user instruction additional memory interaction via memory typically outside  MCMs transistency entry PTEs virtual  address VA PA mapping modifiable operating OS pte status dirty modifiable directly hardware tlb entry cache VA PA mapping core evict OS via inter processor interrupt IPIs load hardware VM specific behavior negatively impact concurrent program execution acm annual international symposium computer architecture isca doi isca ISA specification MCMs failure incorporate VM aware feature ISA mcm specification subsequent hardware mcm verification implicitly erroneous assumption underlie VM implementation negatively impact program correctness augment MCMs VM aware feature prior propose memory transistency model MTMs superset memory consistency model capture address translation aware likewise ISA mcm behavior typically specify validate diagnostic program litmus MTMs enhance litmus ELTs mechanism encode VM operation parallel program execution ELTs parallel program comprise user ISA ISA instruction micro ops hardware execute behalf interleave user instruction explain II ELTs contrast standard mcm litmus hardware operation access program visible transistency unfortunately prior formally define MTMs essential enable automate elt generation elt validation verification MTM implementation furthermore ELTs prior largely generate therefore incomplete transform framework transistency formalize development formally specify MTMs automate synthesis ELTs validate transform consists axiomatic vocabulary formally define arbitrary MTMs synthesis automatically generate ELTs ISA MTM specification define transform vocabulary transform axiomatic vocabulary extends beyond standard axiomatic mcm vocabulary construct model MTM specific feature VM relevant memory additional MTM relevant hardware operation transistency operation interact user program instruction via additional transform synthesis mechanism automate elt synthesis axiomatic MTM specification formal MTMs automate elt synthesis specification subsequent verification validation complex hardware software scenario bug amd  opteron processor invlpg instruction instruction evict tlb entry described fail invalidate designate tlb entry bug detect transform synthesize ELTs stale address mapping prior automates insertion ghost instruction  ELTs user define define elt estimate MTM intel processor observation elt evaluation intel MTM implementation prior available public documentation elt input transform synthesis generate elt suite evaluate model efficacy summarize contribution transform transform framework formally define MTMs synthesize ELTs MTM specification MTM verification validation axiomatic MTM vocabulary knowledge prior effort formally specify MTMs  augments MCMs transistency operation relation articulate memory interaction transistency operation user instruction elt synthesis transform automates elt generation formal MTM specification transform vocabulary synthesize ELTs automate MTM verification validation ultimately inform designer software visible VM implementation define estimate MTM intel processor elt publicly available documentation prior elt evaluation elt transform synthesizes ELTs satisfy define criterion minimality stress behavior model transform synthesis successfully ELTs within instruction bound relevant curated ELTs prior plus evaluation constitutes  ELTs validate intel MTM implementation II background motivation MCMs fundamental component parallel program correctness significant prior formally specify  declarative specification legal execution program logical axiom axiom encode execution define mcm II overview axiomatic ISA mcm specification standard vocabulary define II highlight limitation vocabulary capture MTM relevant program behavior extends vocabulary II incorporate transistency operation axiomatic vocabulary specify memory model primary refer location basis define ISA MCMs micro ops typically memory synchronization operation program execution location memory location refer estimate conveys elt comply suite generate ELTs available public documentation ambiguous prior mcm user representation litmus core return respectively wdb VA PA rptw VA PA rptw VA PA wdb VA PA rptw VA PA rptw VA PA ptw ptw ptw ptw mapped elt outcome remains permit wdb VA PA rptw VA PA invlpg rptw VA PA WPTE VA PA invlpg wdb VA PA rptw VA PA rptw VA PA ptw ptw ptw ptw remap remap mapped elt outcome forbidden due vas aliasing PA illustrates sequentially consistent execution litmus traditional mcm annotation mapping ELTs annotation representative MTM vocabulary user instruction highlight buffering litmus location MemoryEvent subset micro ops access memory via reading MemoryEvent MemoryEvent subset micro ops memory respectively MemoryEvent related exactly location address relation litmus notation mem addr data indicates mem related addr address relation address relation denote label address encodes label MemoryEvents location program execution graph sequence relationship baseline mcm relation others derive baseline sequence program related relation earlier instruction related subsequent  instruction denote additionally MemoryEvents access memory location related  relation relates writes source relates writes writes later coherence address writes relates writes successor refer union communication com relation location along address relation defines program com relation distinguish execution program defines candidate execution dynamic sequence program memory reference mcm relevant operation synchronization operation fence barrier litmus depicts candidate execution essence com relation encode outcome litmus program outcome consists return program memory transform outcome candidate execution symbolically however feature concrete pedagogy mcm specification defines consistency predicate render candidate execution consistent inconsistent respect specification tso mcm intel processor tso define consistency predicate compose conjunction axiom predicate evaluate per loc rmw atomicity causality define per loc loc indicates disjunction acyclic loc subset relates address MemoryEvents transitive closure operator rmw atomicity intervene address writes  rmw operation intersect rmw relation rmw relates rmw correspond operator causality rfe ppo fence acyclic preserve program ppo corresponds subset sequence denote maintain architecture fence relates explicitly architecturally enforce presence fence barrier external rfe subset relates thread limitation ISA memory model MCMs commercial hardware fundamental precisely specify legal visibility memory access parallel program insufficient central ISA memory synchronization operation fetch decode issue user instruction operation affect outcome user program encompasses typical consistency feature transistency feature MTMs additionally capture memory interaction  instruction transistency operation systemlevel hardware operation operation instruction address  tlb invalidation initiate hardware operation ghost instruction hardware PT dirty update furthermore model MTM specific memory interaction expand notion data MCMs beyond program variable transistency specific data transistency dirty VA PA mapping transistency impact program execution motivates augment MCMs transistency feature MCMs essentially commercial processor litmus execution perfectly legal feature sequentially consistent execution however accounting transistency render litmus execution illegal virtual address vas physical address PA transistency feature affect legality execution program execution enhance transistency feature ELTs explain ELTs assumption litmus typical litmus memory location ELTs initialize involve relation initial program mcm convention program variable initialize furthermore ELTs assume initial mapping PTEs vas VA VA PA VA VA PA respectively memory symbolically transform concretely pedagogy vas pas finally per core TLBs empty feature augment execution related transistency  invokes ghost instruction wdb wdb access memory location dirty pte corresponds effective VA memory invoked causal relationship user writes correspond dirty writes denote prior encompasses transform operation address  tlb invalidation initiate coarser grain remap function  numerical subscript explain MemoryEvent invokes PT ghost instruction VA PA mapping correspond effective VA mapping algorithmic translation expands user instruction ghost instruction execute behalf execution legal essentially commercial MCMs another augmentation however elt illegal execution virtually commercial processor illegal behavior stem operation WPTE core modifies VA PA mapping VA vas aliasing PA WPTE operation address remapping behalf user program WPTE access memory location  PA mapping modify address remapping elt feature coherence violation violation per loc render illegal tso define II ELTs illustrate candidate execution legality cannot necessarily solely information traditional mcm litmus relationship related VM implementation account ELTs impact correctness interaction user candidate execution elt permit forbidden MTM evaluate candidate execution MTM transistency predicate formal MTM specification prior propose ELTs additionally transistency aware framework COATCheck specify verify microarchitectural MTM implementation COATCheck facilitates specification hardware along VM relevant OS amenable analysis formal technique however COATCheck conduct verification respect user suite elt program curated improve microarchitectural MTM verification coverage thoroughly verify execution behavior automatically systematically generate relevant ELTs MTM formal specification ISA MTM basis automate elt synthesis MTMs formal semantics transform formally specify MTMs  whereas COATCheck demonstrate importance formal MTM verification microarchitectural broadly formally specify ISA MTM precise interface COATCheck conduct verification hardware implementation program target implementation extend proof MTM correctness future towards MTM II baseline vocabulary MCMs  propose additional rptw VA PA ptw user additional memory reference PT operation rptw wdb VA PA rptw VA PA ptw user writes PT rptw additionally writes trigger dirty update wdb correspond pte VA PA mapping ISA instruction invoke additional ghost instruction execute VM ghost instruction access pte address update tlb relation essential define MTMs synthesize ELTs detail transform transistency vocabulary reference hardware operation ghost instruction user code hardware execute ghost instruction hardware PT behalf memory access MemoryEvent ghost instruction fetch decode issue program instruction invoked behalf user instruction pipeline interact user instruction via memory modify pte status tlb entry ghost instruction fetch issue user instruction related thread instead define ghost relation relate user instruction ghost instruction invoked behalf elt ghost relation exists user instruction ghost instruction numerical subscript illustrates ghost instruction rptw invoked user instruction ghost instruction transform currently PT MemoryEvents effective vas specify access data VA address relation II memory access VA processor hardware identify correspond PA physical address mapping user MemoryEvent already issue core tlb PT walker traverse mapping pte load tlb entry data cache subsequent access mapping access mapping tlb evict PT memory access tlb implement hardware PT walker performance assume grammar applicable software PT illustrates transform model PT program behavior subfigure rptw PT load address mapping VA VA PT rptw tlb entry user instruction ptw relation introduce model relationship relates PT load mapping tlb entry user MemoryEvents specific tlb entry ptw differs location access PT address mapping whereas location access user instruction data location PT related user instruction ghost trigger related user instruction ptw tlb entry MemoryEvents resp related PT operation ghost tlb resp eviction address mapping tlb tlb address mapping subsequent memory access MemoryEvent tlb invoke PT load mapping tlb refer MemoryEvent access distinct VA invoke PT ELTs feature PT relationship via ptw user MemoryEvents invoke dirty update instruction writes memory address data typically propagate cache physical memory pte contains dirty physical correspond pte modify therefore update PT ghost associate dirty update user relation wdb dirty access dirty pte VA user wdb namely numerical subscript likewise dirty writes related ghost highlight user writes dirty update typically perform rmw operation however transform model dirty update operation conservative reduces instruction transform synthesize program writes user dirty dirty user dirty furthermore transform explicitly model OS update dirty synonym vas PA assume OS synonym dirty evict swap assumption  OSs linux relaxed future implementation transform operation instruction instruction coordinate software execution hardware implement VM OS ability modify VA PA mapping invalidate tlb entry user program execution impact execution user program instruction influence PA ultimately access user MemoryEvent user mcm relation traditionally define assume memory location access program unique PA unique VA synonym furthermore user mcm relation  PA mapping program execution exist mcm vocabulary articulate PA access VA extension vocabulary model synonym arise transform MTM vocabulary solves issue transform enables express OS ability alter VA PA mapping via introduce instruction PTEs transform com II relate MemoryEvents effective vas vas PA com relate PA MemoryEvents transform account OS ability alter tlb introduce instruction evict specify address mapping tlb invlpg address mapping  VA PA  MTMs potential modification VA PA mapping PTEs program execution implication address  cannot assume MCMs specific VA mapped specific PA throughout entirety program execution transform communication relation PA access  MemoryEvent model VA PA  user program behavior deduce interaction MemoryEvents effective vas potentially effective PA adapt mcm com relation II transform adaptation com relation described program data transform pas vas symbolically relates pte VA PA MemoryEvents access PA via VA relates pte writes VA PA VA PA creation alias PA relates MemoryEvent access PA via VA successor pte rptw VA PA rptw VA PA WPTE VA PA invlpg rptw VA PA WPTE VA PA invlpg rptw VA PA elt pte writes various mapping location program throughout user instruction ghost instruction rptw VA PA rptw VA PA WPTE VA PA invlpg rptw VA PA WPTE VA PA invlpg rptw VA PA ptw ptw ptw ptw remap remap elt execution correspond illustrate address mapping usage vas access mapping alias PA relates MemoryEvent access PA via VA successor pte relation transform derive com relate MemoryEvents access PA vas II notably already capture respectively program user access VA pte instruction WPTE WPTE invoked remap PA WPTE WPTE invoke invalidation invlpg invlpg respectively tlb entry correspond remapped vas prevent stale mapping access rptw VA PA ptw ptw address mapping tlb PT source thread instruction rptw VA PA invlpg rptw VA PA ptw ptw PT invlpg evicts tlb entry invlpg insert access VA enforces reload tlb entry via PT illustrates remapping operation relate user program instruction described pte writes via fundamentally legality mcm litmus outcome WPTE mapping VA PA vas PA WPTE related via WPTE address mapping access PA candidate execution feature illegal coherence violation described II tlb entry eviction tlb modify via PT discus transform handle tlb modification tlb eviction tlb entry evict correspond pte spurious eviction OS tlb capacity eviction address scenario multicore address mapping modify invalidate TLBs core cache mapping core perform mapping mechanism invoke invalidation core varies architecture transform model tlb entry invalidation ipi invlpg instruction instruction ISA operation exist ISAs related pte via remap relation remap relates pte correspond INVLPGs core invalidate tlb entry render stale pte WPTE invokes INVLPGs invlpg invlpg respectively denote remap relation invalidate appropriate tlb entry due address mapping memory access VA affected invlpg address mapping mapping VA access PA currently invlpg ipi model transform however additional IPIs future transform extension OS initiate tlb eviction pte modify  invoke invlpg instruction invlpg invoked OS correspond pte  instantiate remap MemoryEvents spurious INVLPGs unchanged pte mapping mapping tlb PT illustrates VA mapping tlb PT rptw intervene invalidation invlpg VA invokes PT rptw previously evict mapping tlb synthesize elt candidate execution transform synthesis spurious INVLPGs insert thread affect thread execution finally tlb capacity eviction tlb entry evict entry due capacity conflict transform model eviction invocation PT  MemoryEvent explain load tlb entry PT indicates tlb tlb occurs address mapping entry evict OS invlpg tlb capacity eviction ELTs feature PT access address mapping prior PT issue mapping simultaneously feature OS eviction address mapping tlb invlpg address mapping PT tlb capacity eviction transform automatic synthesis explores possibility tlb simplify assumption ELTs mcm litmus presence additional operation relevant memory interaction ELTs ELTs become significantly instruction complex potential interaction elt operation therefore ELTs feature simplify assumption enumerate assumption sacrifice generality approach improve performance ELTs analyze synthesize transform VI thread elt assume execute distinct processor core therefore thread access private storage private tlb transform hyperthreading ELTs individual multi thread mcm analysis prior execution elt assume VA unique PA without assumption pte along correspond INVLPGs explicitly model elt VA access program appropriately derive correspond pas access additional MTM description instruction micro program MemoryEvent memory access program address relates MemoryEvent location access program thread sequence relates source relates writes coherence relates successor ghost relates user MemoryEvent induced ghost instruction ptw relates PT user MemoryEvents load tlb entry relates pte user MemoryEvents access address mapping relates pte subsequent pte writes PA coherence relates user MemoryEvent successor pte address mapping relates user MemoryEvent subsequent pte address mapping access VA remap relates pte invoked INVLPGs summary MTM vocabulary baseline mcm transform instruction unnecessarily degrade performance elt synthesis transform model recursive stem choice model ghost instruction pte writes reality pte writes modify VA mapping PA another pte address translation model illustrative vocabulary usage summarizes transform MTM vocabulary illustrates transform MTM vocabulary observable program behavior complex elt elt feature mcm litmus consist user instruction instruction induced WPTE mcm relation ambiguity reading although reading constitutes valid program execution tso ambiguity MTM relation extends elt formulation illustrate MTM relation augment INVLPGs invoked via OS issue IPIs core invlpg invlpg related WPTE via remap relation ghost instruction user MemoryEvent invlpg invlpg evict tlb entry load rptw rptw rptw rptw update address mapping VA tlb access respectively insert ghost instruction addition appropriate relation access mapping VA WPTE WPTE VA PA user VA address mapping address WPTE VA PA mapping ambiguous data access rptw VA PA wdb VA PA WPTE VA PA rptw VA PA invlpg invlpg wdb VA PA rptw VA PA rptw VA PA elt program rptw VA PA WPTE VA PA invlpg wdb VA PA rptw VA PA wdb VA PA rptw VA PA invlpg rptw VA PA ptw ptw ptw ptw remap remap elt illustrate program program ambiguous mcm relation mapping elt transistency candidate execution relate WPTE similarly initial address mapping VA relate WPTE fourth finally relation effective pas access MemoryEvent derive appropriate com elt execution due relation access PA propose MTM vocabulary facilitates model transistency encompass consistency issue beyond traditional MCMs vocabulary automate elt synthesis transform synthesis MTM vocabulary  define inputted MTM synthesize candidate execution alloy prune  unique elt program relation placement relaxation implicit input define apply broadly across IV  elt synthesis transform feature synthesis automatically generate suite ELTs formal axiomatic MTM specification vocabulary transform synthesis performs bound elt synthesis conceptually elaborate subsection transform synthesizes elt execution user specify instruction bound candidate execution prune execution feature transistency behavior finally subset candidate execution  output suite unique elt program candidate execution synthesis synthesize candidate elt execution formal MTM vocabulary axiom define vocabulary articulate valid elt synthesize traditional mcm litmus relatively axiom legal program execution mcm feature uniquely define mcm candidate execution address axiom acyclic valid program execution another summarize mcm litmus virtually constraint location related MemoryEvents via address relation individual within program thread address instruction interact via com relation transform performs synthesis axiom specify MTM placement synthesis regard operation ghost instruction insert transform augment MTM vocabulary synthesize candidate ELTs complex axiom legal program execution com relate MemoryEvents access PA pte writes induce INVLPGs core likewise program feature invlpg MemoryEvent invlpg access address mapping evict local tlb invlpg reload mapping tlb PT moreover litmus writes address address mapping program cycle candidate execution violates tso axiom described II therefore vector ELTs however satisfy minimality criterion remove program satisfiable tso remove remain minimal transform synthesize elt described ghost instruction correspond relation ghost ptw specific dictate legal behavior candidate execution legal elt formulation transform synthesize conceivable ELTs user specify bound program instruction prune minimal subset span prune transform synthesis defines generates span ELTs linear algebra vector vector linear combination vector span transform synthesizes span ELTs relevant MTM behavior realizable user instruction bound capture ELTs transform criterion inclusion ELTs vector relevant MTM behavior elt requirement enables multiple outcome execution elt elt outcome violate transistency predicate user MTM ensures synthesize ELTs potential expose forbidden MTM behavior verification validation prune legal candidate ELTs belong vector MTM behavior ELTs evaluate inclusion span minimality criterion minimality elt execution forbidden outcome becomes legal accord transistency predicate isolated relaxation elt program transform synthesis depicts relaxation implicit input synthesis prune stage relaxation corresponds removal described dependency elt relaxation apply candidate elt vector satisfies minimality criterion simplify candidate elt user minimality criterion relaxation perform transform synthesis evaluate minimality removal conceptually relaxation intend remove isolated however removal elt render elt invalid ghost instruction permit exist elt correspond user MemoryEvent invokes alternately user MemoryEvents invocation ghost instruction due requirement perform relaxation intend remove transform remove additional maintain legality elt transform permit removal ghost instruction correspond user MemoryEvent remove likewise INVLPGs invoked pte remove pte remove spurious INVLPGs pte however remove isolation unlike restrict relaxation user mcm litmus synthesis prior permit relaxation remove arbitrary litmus isolation alloy implementation unique elt prune alloy relational model domain specific DSL specifically alloy encode axiomatic MTMs transform vocabulary implement synthesis described alloy relational model backend  enables transform elt synthesis fed shelf solver  solver transform synthesis determines ELTs eligible inclusion span alloy output xml xml ELTs deduplication built prior return unique elt program evaluation rmw dependency model relation relate rmw operation synthesize ELTs via instruction bound MTM axiomatic vocabulary define develop MTM elt estimate MTM intel processor public information analysis prior transform synthesis automatically generates suite ELTs encode span elt MTM behavior define elt consistency predicate tso transistency predicate elt consists conjunction axiom transistency superset consistency axiom comprise elt transistency predicate subset axiom comprise tso consistency predicate II identify evaluate additional elt transistency axiom axiom invlpg capture software visible transistency implementation tlb causality diagnostic axiom aid hardware designer localize transistency bug incorrect tlb implementation invlpg remap acyclic tlb causality ptw source com acyclic remainder describes derivation MTM axiom analysis public documentation prior identify forbidden MTM behavior transform vocabulary define axiom prevent invlpg invlpg enforces MemoryEvent VA PA mapping associate effective VA invlpg access VA MemoryEvents access PA via VA address mapping remains intact local tlb remaps VA PA pte invokes INVLPGs remap relation core previous mapping VA PA render invalid MemoryEvents INVLPGs relation  relates user MemoryEvent pte writes remap effective VA PA remap architecturally enforce pte INVLPGs invokes furthermore enforce architecturally MemoryEvent access tlb entry evict invlpg earlier cannot access address mapping specifically elt enforces MemoryEvent invlpg access VA access VA  mapping successor mapping invalidate acyclicity union remap tlb causality tlb causality prevents causal relationship MemoryEvent MemoryEvent correspond PT source tlb entry access MemoryEvents VA  mapping tlb local core ptw architecturally enforce MemoryEvent PT populates tlb entry access furthermore elt model assumes  user MemoryEvent invokes related ghost PT user MemoryEvents core access tlb entry PT relationship derive ptw source relate  MemoryEvent invokes PT  MemoryEvents related PT ptw MemoryEvent MemoryEvent ptw source cannot related MemoryEvent causal communication relationship tlb causality elt purpose diagnose hardware bug tlb implementation architecturally visible tlb causality violation already subsume violation another elt axiom specifically causality hence convention however tlb causality enables transform specifically identify ELTs hardware verification engineer localize transistency bug incorrectly implement TLBs unique ELTs transform synthesizes elt VI attribute violation tlb causality synthesis approach elt define input transform synthesis generates suite elt program synthesize ELTs constitute forbidden program execution accord elt transistency predicate becomes permit relaxation synthesize ELTs forbidden outcome identify axiom comprise elt per loc rmw atomicity causality invlpg tlb causality axiom violate render synthesize elt execution forbidden synthesize elt violates axiom directly corresponds synthesize forbidden elt execution synthesize elt suite correspond violation elt axiom bound instruction suite minimum instruction bound instruction instruction interaction violate respective axiom constitute span synthesis bound instruction increase specify bound VI RESULTS elt MTM consist axiom transform synthesis instruction bound ELTs per loc rmw atomicity causality invlpg tlb causality plot ELTs synthesize suite instruction bound suite corresponds minimum instruction synthesize suite instruction bound runtime per loc rmw atomicity causality invlpg tlb causality plot runtimes synthesize suite instruction bound although synthesis runtimes super exponentially instruction bound elt optimization enable instruction synthesis bound useful ELTs within practical runtimes future symmetry reduction optimization accelerate synthesis statistic synthesize ELTs plot instruction synthesize suite plot runtimes synthesize evaluate transform ability synthesize span ELTs elt increase instruction bound instruction axiom synthesis minimal instruction ELTs axiom instruction axiom axiom transform synthesizes ELTs bound refer per axiom suite detail synthesis observation transform generate ELTs baseline generate COATCheck elt suite synthesize ELTs overview synthesize suite summarizes elt program synthesize per axiom suite increase instruction bound correspond execution synthesize instruction bound data instruction restrictive synthesize ELTs satisfy span criterion due variability evaluate axiom variable minimal instruction bound non empty elt span ELTs generate automatically instruction bound per loc suite component synthesize suite per loc axiom specifies constraint instruction transform model user ghost translates possibility violate axiom therefore ELTs qualify criterion vector inclusion IV prior automate mcm litmus synthesis report per loc suite saturates tso mcm richer interaction MTMs generate correspond synthesis elt overall transform elt synthesis fold automatic synthesis minimal MTM ELTs programmer transistency verifier methodology foundational definition completeness specify synthesis bound designer understand comprehensiveness verification approach transform synthesis approach generates suite ELTs instruction synthesis bound comparison prior reference transform synthesize elt suite elt handwritten suite ELTs ELTs relevant comparison IPIs presently transform others transform span criterion ELTs contrast transform synthesizes unique ELTs across per axiom suite instruction synthesis bound facilitate comparison prior handwritten ELTs category ELTs pas minimality criterion synthesize verbatim transform ELTs minimal superset minimal elt extraneous instruction latter ELTs remove expose minimal elt transform synthesize automate elt comparison via transform synthesize elt verbatim synthesize suite category subsequently category remove subset instruction elt minimize  bound comparison instruction experimental synthesis bound WPTE VA PA invlpg rptw VA PA ptw remap illustrates forbidden  elt COATCheck suite transform synthesize WPTE VA PA invlpg rptw VA PA wdb VA PA rptw VA PA ptw ptw remap illustrates permit  elt COATCheck suite reduce program minimality criterion synthesize transform illustrate COATCheck ELTs synthesize transform verbatim remove extraneous instruction respectively ELTs COATCheck suite category synthesize verbatim ELTs synthesize elt program recall output elt program whereas ELTs typically program outcome elt execution synthesize elt program correspond elt execution COATCheck suite additionally ELTs COATCheck suite category ELTs reduce minimal elt synthesize transform minimal ELTs synthesize transform unique ELTs explicitly handwritten COATCheck suite finally addition previously remain elt handwritten elt COATCheck suite instruction bound synthesize ELTs synthesize transform ELTs elt COATCheck suite synthesize ELTs synthesize ELTs illustrates elt synthesize transform category  WPTE VA PA invlpg invlpg rptw VA PA remap remap ptw illustrates forbidden candidate execution synthesize elt COATCheck suite outcome violates per loc invlpg forbidden illustrates handwritten dirty elt COATCheck suite category ELTs comparison meaning minimal handwritten transform automatically synthesizes reduction elt comparison identifies reduction subset extraneous instruction remove elt specifically removal render minimal transform synthesize illustrates synthesize elt handwritten suite pte WPTE invoked remaps VA WPTE mapping update induces INVLPGs invlpg invlpg invlpg precedes VA execution forbidden outcome invlpg access stale address mapping execution violates invlpg cycle remap forbidden elt transform framework specify MTMs automatically synthesize ELTs pave programmer perform verification validation MTM implementation future synthesize ELTs empirically validate elt realworld operating processor implementation vii related formal mcm specification MCMs extensively program MCMs formalize java OpenCL additionally formal ISA mcm specification exist tso armv armv RISC  tso nvidia ptx mcm specification effort verify compiler mapping scheme java mcm primitive armv armv ISAs recently mcm linux kernel formalize transform assist programmer compiler writer develop code VM implementation offering specification verification verification hardware mcm implementation formal ISA mcm specification prompt research verify correctness hardware mcm implementation prior conduct bound verification suite mcm litmus proof COATCheck propose mechanism verify MTM implementation however rely handcraft ELTs formally MTM generate contrast transform generate ELTs expand coverage hardware MTM verification expand scope concurrency specification variety research effort formally define concurrency specification beyond memory consistency crash consistency propose behavior file update across crash memory persistency coin nonvolatile memory NVRAM writes persist memory recently persistency model formalize context release consistency tso armv MCMs conclusion transform framework formally specify MTMs synthesize ELTs programmer hardware designer verify MTM behavior MTMs central assure consistency behavior intricate VM interaction transform vocabulary formally specify MTMs automate synthesis approach correspond ELTs evaluate transform vocabulary specify elt estimate MTM processor MTM transform automatically synthesize correspond ELTs transform synthesis automatically ELTs relevant curated ELTs prior plus transform source publicly available github com  transform git overall showcase potential impact transform brings MTM verification