multicore speculative non speculative parallelism speculative parallelism easy crucial challenge application non speculative parallelism efficient allows parallel irrevocable action parallel unfortunately prior technique goal hardware transactional memory htm speculative transactional non speculative non transactional lack coordination mechanism limited unordered parallelism prior extend HTMs avoid limitation speculative execution escape action nest transaction mechanism incompatible exploit parallelism parallelize broader application easy contribute technique enable seamlessly compose coordinate speculative non speculative context parallelism task execution model efficiently coordinate concurrent speculative non speculative task task data speculative task invoke software manage speculative action avoid hardware version management conflict detection contribution improve efficiency enable capability across benchmark dynamically execute task speculatively  avoid needle conflict speculative task speculative task safely invoke irrevocable action index multicore speculative parallelism parallelism grain parallelism transactional memory  speculation speculative synchronization introduction speculative parallelism  speculation TLS transactional memory TM benefit non speculative simplify parallel program uncover abundant parallelism parallelize application however application speculation execute non speculatively task synchronize speculatively overhead needle abort moreover non speculative parallelism perform irrevocable action parallel ideally composition coordination speculative non speculative task task data unfortunately prior technique goal prior hardware technique combine speculative non speculative parallelism hardware transactional memory htm htm speculative transactional nonspeculative non transactional code htm lack synchronization mechanism speculative non speculative code cannot easily access data moreover HTMs unordered execution semantics opportunity parallelization recent instead focus speculation parallelism parallel task execute program specify partial parallelism abundant unordered parallelism parallelize transactional database classic htm database transaction execute thread memory transaction contrast parallelism allows database transaction task exploit abundant intra transaction parallelism classic TLS leveraged speculation parallelize sequential program HTMs programmer define commit recent swarm architecture execution model parallelize algorithm TLS TM task efficiently however disallow non speculative parallelism task active execute speculatively goal benefit non speculative execution parallelism merely adapt htm technique unordered speculation address mechanism sec II goal contribute technique contribution espresso expressive execution model speculative non speculative parallelism sec espresso happens within task speculatively non speculatively task task mode espresso efficiently grain task instruction task access data task exploit espresso synchronization mechanism coordinate speculative non speculative task efficiently moreover espresso task speculatively non speculatively reap efficiency non speculative parallelism plentiful exploit speculative parallelism annual acm international symposium microarchitecture doi micro   code highlight non task graph shortest distance underlined task execute task vertex      dijkstra source shortest algorithm    speedup usa cage speedup version core graph cache queue capacity core sec VI superlinear speedup usa contribution capsule technique speculative task avoid hardware manage speculation enable scalable service concurrent sec IV prior htm propose escape action nest transaction achieve goal unfortunately mechanism incompatible speculative specifically incompatible speculative allows speculative task data uncommitted task critical parallelism task lose data integrity sec II capsule implement mechanism transition hardware manage speculation memory speculative access unlike prior technique capsule apply speculative speculative task lose data integrity contribution improve performance efficiency enable capability implement espresso capsule atop swarm sec evaluate diverse challenge application sec VI core espresso outperforms non speculative execution gmean speculative execution gmean capsule enable efficient implementation important service scalable memory allocator improves performance speculative task issue concurrent fetch data disk II background motivation combine speculative non speculative parallelism espresso subsumes prior speculative execution model htm TLS swarm espresso implementation sec penalize program feature speculation benefit input dependent dijkstra algorithm source shortest  illustrates tradeoff speculative non speculative parallelism shortest distance source vertex vertex graph task vertex task execute distance source task vertex distance creates task later task vertex code sequential priority queue task illustrates admits non speculative distance parallelization task unprocessed distance task distance task distance core barrier collectively unprocessed distance multiple  task vertex task synchronization ensure safety non speculative graph shallow vertex distance source however graph vertex per distance non speculative barrier exploit parallelism processing task across multiple distance simultaneously task independent dependent vertex task incorrect hence exploit parallelism speculative execution task commit swarm architecture task active speculatively neither strategy speedup non speculative non spec fully speculative  version graph usa graph eastern cage graph arise dna  version leverage espresso hardware accelerate task schedule locality aware execution sec VI methodology core usa spec faster non spec barely vertex per distance consistent prior contrast cage shallow graph vertex per distance non spec outperforms spec incur overhead speculative execution programmer speculation undesirable parallelize hybrid strategy  task non speculatively rely cheaper synchronization mechanism mutual exclusion distance task speculatively exploit parallelism task runnable mode espresso mechanism hybrid strategy sec synchronization mechanism timestamps locale consistent semantics across speculative non speculative task speculate amount available parallelism espresso version achieves performance graph speculative parallelism non speculative parallelism insufficient combine speculative non speculative task application speculative parallelization task non speculatively discrete simulator digital circuit adapt galois task evaluates toggle gate input simulated gate output toggle task creates task gate output speculation enables core extend waveform intermediate signal feature logic simulator simulation task toggle creates task writes per core memory simulation task speculation task speculate trivial synchronize prior architecture parallelism however task speculatively abort cascade simulation task abort task abort task later abort strategy speculative simulation task launch non speculative task task commits avoid  abort discard espresso enables approach speedup espresso spec speedup core speculative non speculative task speedup speculative non speculative speculative needle abort limit performance beyond core core non speculative faster prior htm propose transaction register commit handler transaction commit espresso generalizes task speculative non speculative additionally espresso implementation requirement unordered HTMs commit transaction immediately task speculative cycle software manage speculation improves parallelism speculative task output immediately non speculative task sec II however speculative task action allocate memory without hardware speculation prior htm propose escape action purpose escape action transaction temporarily hardware conflict detection version management arbitrary code escape action register abort handler  enclose transaction abort transaction escape action allocate memory conventional thread allocator avoid conflict allocator metadata escape action abort handler allocate memory unfortunately escape action mechanism nest transaction incompatible architecture parallelism recent HTMs architecture perform speculative task access data earlier uncommitted task speculative crucial task commit without speculative algorithm poorly core however task access uncommitted inconsistent data lose data integrity dereferencing perform indirect invalid pointer escape action unsafe mispeculating task malformed escape action escape action temporarily  data escape action perform action cannot  abort handler speedup capalloc tcmalloc speedup core allocator without escape action prior speculative memory allocation routine speculatively suffer spurious conflict allocator metadata performance link tcmalloc memory allocator  structure poorly tcmalloc achieve speedup core decline significantly core overwhelmed abort capsule sec IV access software manage speculation program  capsule function guarantee speculative task disable hardware speculation invoke function prevents mispeculating task invoke arbitrary action moreover capsule function access memory conflict checked access speculative task performance capalloc memory allocator tcmalloc implement allocation routine malloc capsule function lock synchronization capalloc outperform tcmalloc core espresso execution model espresso program consist task speculatively non speculatively task access memory arbitrary espresso synchronization mechanism timestamps convey requirement locale convey mutual exclusion locality information task optionally timestamp locale TLS terminology software TMs lack speculative refer opacity without speculative stall abort task access uncommitted data void timestamp dist vertex distance unset distance dist vertex espresso MAYSPEC timestamp dist locale void graph initial espresso MAYSPEC source source espresso listing espresso implementation dijkstra algorithm timestamps locale semantics speculative non speculative task task mode coordinate access data espresso task speculation spec task speculatively NONSPEC task non speculatively MAYSPEC task mode task task expose feature api task task inlined function espresso  timestamp locale args task task function  argument register timestamp locale task synchronize accord semantics espresso program initial task espresso espresso return task listing implementation described sec II explain espresso semantics program creates initial task source vertex espresso semantics espresso speculative task atomically speculative task interleave moreover espresso atomicity speculative non speculative task speculative task invisible non speculative task speculative task commits containment non speculative writes mid speculative task non interference espresso guarantee atomicity non speculative task atomicity implication concurrency task creates speculative execute speculative creates non speculative commits sec II atomicity guarantee non speculative task programmer ensure non spec task  avoid espresso synchronization mechanism executes task timestamps enforce task locale enforce mutual exclusion timestamps locale consistent semantics speculative non speculative task concurrency described summarize timestamps timestamps integer specify partial task task distinct timestamps espresso synchronization  task mode synchronization mechanism timestamps locale non speculative barrier mutual exclusion speculative commits reduce conflict ensures execute timestamp avoid priority inversion timestamped task assign timestamps non timestamped task cannot timestamped timestamps impose barrier semantics non speculative task non speculative task timestamp task timestamp commit however speculative task speculate barrier timestamps constrain commit speculative task hence speculation increase parallelism algorithm listing timestamps action task timestamp corresponds distance source vertex task NONSPEC instead MAYSPEC code implement non speculative distance  version sec II task spec code implement fully speculative version locale locale integer specify denotes data task access locale enforce mutual exclusion task locale espresso guarantee concurrently task acquire lock locale efficient alternative conventional memory lock moreover espresso hardware locale task likely access data chip tile exploit locality non speculative task locale mutexes parallel code speculative task locale task already execute atomically locale useful reduce abort exploit locality across speculative non speculative task listing locale action task ID vertex locale non speculative task implement mutual exclusion task access vertex speculative non speculative task approach sends task vertex chip tile improve temporal locality optimization avoid cache ping  apply technique prior cache vertex locale synchronization mechanism important exhaustive locale lock semantics task acquire multiple lock task memory lock resort speculative execution task spec espresso multiple locale per task complex comparison execution model espresso generalizes swarm htm swarm program consist timestamped spec task espresso extends swarm non speculative task timestamps optional locale extend swarm spatial hint mutual exclusion non speculative task espresso subsumes htm htm program consist transactional speculative non transactional non speculative code equivalent non timestamped spec NONSPEC task MAYSPEC task speculate espresso task speculatively however programmer task spec NONSPEC MAYSPEC MAYSPEC mode task useful task speculatively  dispatch MAYSPEC task cannot non speculatively task speculatively NONSPEC MAYSPEC affect performance correctness NONSPEC MAYSPEC task already synchronize speculatively task expensive speculatively task sec II NONSPEC otherwise MAYSPEC listing MAYSPEC action task tag MAYSPEC mode locale enforce mutual exclusion vertex task implement strategy sec II task unprocessed distance non speculatively non speculative parallelism insufficient distance timestamp task speculatively exception model espresso restrict action task perform beyond access memory speculative nonspeculative task invoke irrevocable action cannot  versioned memory task mode arbitrary code code trigger exception invokes precise exception semantics enforce atomicity speculative task trigger exception yield becomes active task promote non speculatively guarantee promote task strongly atomic promote task concurrently non speculative task sec previous TLS technique precise exception promotion expensive rare avoid frequent expensive promotion task frequently invoke irrevocable action NONSPEC capsule reduce promotion finally espresso introduces promote instruction expose mechanism speculative task promote trigger exception absence conflict eventually promote task non speculative task promote promote invoked task detect inconsistency abort transactional retry promote code perform expensive action avoid speculatively listing sec IV IV  although hardware version management efficient software equivalent hardware speculation serialization espresso irrevocable action speculative task promote non speculatively expensive limit parallelism irrevocable action cannot hardware speculation hardware cannot undo limit speculative task invoke parallel legitimate beyond task perform  speculative action exploit application specific parallelization strategy commutativity sec II prior propose escape action achieve goal escape action incompatible parallelism speculative speculative task lose data integrity impossible software  undo speculative action specifically escape action suffer mispeculating task lose integrity malformed invalid code initiate escape action performs unintended overwrite file exit program cannot  mispeculating task  escape action misbehave uncommitted data escape action allocates memory mispeculating task temporarily  escape action return invalid data crash address issue capsule technique enable software manage speculative action speculative capsule powerful programmer escape action capsule avoid overhead hardware conflict detection perform irrevocable action undo speculative action register abort handler capsule enable programmer guarantee safety mispeculating task attempt capsule incorrectly mechanism untracked memory mispeculating task  interface guarantee integrity within capsule instruction ISA capsule capsule ret capsule abort handler explain semantics untracked memory memory application address classify untracked untracked memory neither conflict checked versioned hardware eliminate speculation overhead access untracked data standard virtual memory protection mechanism prevent speculative task access untracked memory without capsule sec analogous OS kernel memory userspace code software manage speculative maintain untracked memory avoid overhead hardware conflict detection ensure corrupt speculative task access untracked data synchronize conventionally lock ensure safety safely capsule speculative task lose integrity capsule guarantee integrity capsule code achieve  interface capsule code wrap capsule function untracked memory capsule vector untracked memory contains pointer capsule function speculative task cannot access untracked memory capsule function capsule instruction capsule ordinary instruction index capsule vector operand instead function address capsule index vector index within bound correspond function disables hardware speculation index bound trigger exception capsule ret return capsule function  interface retains safety speculative task lose integrity task capsule capsule instruction capsule function capsule execution capsule access untracked memory perform irrevocable action without trigger promotion typically operates untracked memory access tracked memory data file content available non capsule speculative task access tracked memory normal conflict detection resolution mechanism ensures load tracked memory return valid data capsule  enclose task eventually abort capsule invalid data speculatively capsule function cannot trust caller behave caller mispeculating speculatively capsule invalid data argument tracked memory due  handle register abort handler compensate action capsule abort handler instruction function pointer argument operand function non speculatively capsule enclose task abort capsule function speculatively ensure performs action safely compensate argument data tracked memory data unsafe avoid perform rare action expensive unsafe perform speculatively promote instruction non speculatively enclose task abort speculative immediately exit capsule code promote instruction non speculatively guaranteed consistent abort handler register void malloc byte stack promote byte promote byte capsule ret  void ptr alloc byte capsule abort handler  ptr capsule ret ptr listing malloc implement capsule function capsule program listing malloc capsule function malloc stack pointer valid sufficient promote otherwise malloc request allocation promote program allocate MB avoids waste excessive satisfy request mispeculating task malloc alloc allocates request chunk finally malloc capsule abort handler register  abort handler alloc  thread function conventional synchronization lock perform allocation deallocation heap memory allocator metadata untracked memory task abort  allocate memory implementation implement espresso capsule extend swarm recent architecture speculative parallelization swarm baseline already mechanism espresso efficiently grain task implement scalable speculation timestamps performs  execution however espresso implement classic TLS capsule technique apply speculative htm TLS swarm espresso swarm feature prior detail extend implement espresso finally implementation capsule baseline swarm microarchitecture swarm microarchitecture introduces modest tile cache coherent multicore tile core private cache core tile cache tile slice fully cache tile augment task queue dispatch commits task  RUH RUH RUH RUH      HP HP HP HP  core chip tile configuration LPH speculative creates speculative abort non speculative creates speculative nonspeculative locally commit speculative creates speculative commits RUH swarm espresso enqueue protocol local task  remote task  task creates unlike espresso swarm program consist exclusively speculative timestamped task swarm uncovers parallelism execute task speculatively uncover parallelism swarm speculate task ahead active task swarm efficiently grain task speculation technique hardware task management task queue scalable speculation throughput commits locality aware execution hardware task management task queue runnable task speculative task commit task task descriptor contains function pointer timestamp argument task task instruction argument register local task asynchronously enqueues task remote tile speculative enqueued enables commit abort notification abort notification abort discard commit notification permit mechanism relieve queue pressure uncover parallelism task dispatch task core speculative core dequeue task execution timestamp priority local task successful dequeue initiate speculative execution task function pointer task argument available register core stall task dequeue minimizes task creation dispatch enable task instruction creates task argument register without stack access task queue task structure task queue task descriptor task tile commit queue speculative task execution cannot commit queue implement task reorder buffer task commit queue speculative task per core task queue entry commit queue entry per core implement speculation task core chip nevertheless task commit queue action ensure progress specifically task commit notification spill memory task queue entry task spill queue resource exhaustion handle stall task creation abort timestamp task scalable speculation swarm enhances previously propose speculation mechanism speculative task swarm eager undo version management eager conflict detection bloom filter LogTM SE swarm speculative data later task task abort swarm selectively abort descendant data dependent task swarm detects conflict cache granularity leverage cache hierarchy substantially reduce conflict cache manage conflict checked cache manage conflict checked task tile directory maintains metadata conflict checked tile uncommitted task access cache perform speculative commits swarm dynamically task task unique virtual VT dispatch VTS integer extend programmer assign timestamp unique  swarm allows task access speculative data VT task commits task VT preserve correctness throughput commits swarm adapts virtual algorithm achieve commit throughput tile periodically communicate arbiter cycle discover VT VT active unfinished task task VTS commit scheme hierarchical min reduction commit task per cycle core task instruction locality aware execution finally swarm leverage technique spatial hint perform locality aware execution hint optional integer locale abstractly denotes data task likely access swarm exploit hint hint task tile serialize hint task descriptor core creates task task hash hint tile ID enqueues task tile hint task tile task without hint enqueued random tile dispatch logic tile serializes hint task avoid conflict espresso microarchitecture espresso generalizes swarm microarchitecture non speculative task handle interaction speculative task implement exception task hardware task descriptor format swarm additional spec NONSPEC MAYSPEC dispatch queue speculation mechanism commit protocol spec task unchanged swarm sec non speculative task dispatch queue logic NONSPEC task non speculative commit timestamped timestamp active task locale locale task satisfy promotion tile dispatch logic performs local timestamp task available excludes NONSPEC task runnable locale regulate task dispatch spatial hint task locale enqueued tile serialize mutual exclusion non speculative task task queue entry dispatch commit queue entry reduces queue pressure task abort notification reduces traffic allows non speculative task unbounded spill memory non speculative speculative task dispatch conflict detection commit mechanism speculative NONSPEC enqueue speculative task creates NONSPEC destine remote tile cannot commits task buffer locally enqueued remote tile commits avoids needle abort commit notification MAYSPEC dispatch MAYSPEC task speculatively runnable exploit non speculative execution efficiency dispatch logic task NONSPEC task task executes non speculatively otherwise executes speculatively conflict non speculative task  however implement atomicity access conflict checked speculative task non speculative access conflict speculative task abort speculative task non speculative task conflict speculative task unsafe abort recall tile periodically communicate virtual VT active task task VTS precede active VT commit tile locally active VT commit arbiter VT declare commit arbiter handle stall arbiter fate rare commit protocol tile active VT arbiter timestamps non speculative task consideration prevents speculative task timestamp commit  speculative task commit exception attempt speculative task perform irrevocable action segmentation fault speculative exception speculative exception task legitimately execute irrevocable action mispeculating task perform incorrect execution whereas TLS scheme stall core  task espresso leverage commit queue avoid core  task immediately core becomes available another task writes task aborted discard espresso task active commit queue detects conflict earlier task  task mispeculating becomes runnable speculative execution however task becomes active task without suffer conflict legitimately perform irrevocable action  task becomes active task promote non speculatively proceeds task tile sends promotion request virtual arbiter arbiter forbids tile dispatch non speculative task promote task speculative isolated task currently non speculative task  task promote although promote task cannot concurrently non speculative task speculative task execution promote task expensive happens rarely summary espresso extension swarm return substantially improves performance programmability sec VI capsule implementation capsule extend implement untracked memory  interface capsule function untracked memory implementation untracked memory extension standard virtual memory protection mechanism addition standard execute permission untracked permission entry tlb entry access untracked speculative task capsule memory protection exception program request tracked untracked memory mmap permission mprotect alternatively untracked memory implement virtual memory task capsule core capsule depth counter initialize zero task task capsule capsule increment capsule depth counter capsule ret decrement allows capsule function capsule function task finally exit outermost capsule safely capsule capsule vector contains pointer capsule function fix location untracked memory cumbersome manually assign unique IDs capsule function vector however linker loader automate similarly handle independent code capsule abort task abort register abort handler non speculatively abort enqueue abort handler NONSPEC task timestamp handle abort task execute capsule normally task immediately detect conflict capsule however cannot arbitrarily abort handler guarantee consistent untracked memory nonetheless avoid priority inversion implementation handle conflict immediately upon detection task capsule aborted task tracked memory immediately task proceed recover tracked memory abort notification capsule marked doom execution doom capsule writes tracked memory perform enqueues access untracked memory perform normally core becomes available another task doom capsule exit VI evaluation evaluate espresso capsule diverse application non speculative execution brings modest performance efficiency gain non speculative parallelism plentiful non speculative execution NONSPEC dramatically hurt parallelism contrast MAYSPEC achieves apply indiscriminately without hurt parallelism easy capsule yield magnitude speedup important memory allocation disk experimental methodology model cycle execution driven simulator pin model core parameter II swarm parameter prior detailed core cache network memory model simulate task speculation overhead task traffic mispeculating task abort simulate conflict rollback delay traffic etc core configuration   simulate II configuration core core core tile core tile ghz ISA issue  stall cache KB per core split cycle latency cache KB per tile inclusive cycle latency cache MB static NUCA MB tile inclusive cycle latency coherence MESI cache directory noc mesh link rout cycle hop cycle tile mem controller chip cycle latency queue task queue entry core commit queue entry core conflict kbit bloom filter hash function tile cycle bloom filter cycle per timestamp commit queue virtual virtual tile update virtual arbiter cycle spill spill task task queue BENCHMARKS source   average task serial relative performance core application input core cycle core perf per task serial cage usa movielens mat kmeans netflix bfs  mat astar germany genome   mesh tornado silo tpc   mesh tile core task non speculatively per core queue capacity constant across capture performance per queue cache capacity sometimes superlinear speedup benchmark report benchmark input evaluate espresso capsule allocator unordered benchmark benchmark swarm fractal benchmark task synchronize timestamps locale bfs astar application genome kmeans unordered transactional application bulk synchronous collaborative filter counting ligra task synchronize perform lock atomic update barrier replace timestamps sec VI espresso version declare synchronize task spec NONSPEC MAYSPEC source code otherwise identical swarm task speculatively equivalent espresso spec evaluate software parallel version prior genome kmeans lack non transactional parallel version astar software parallel version yield speedup benchmark significant amount dynamic memory allocation genome  silo sec VI allocator spec swarm version application report speedup relative tune core swarm implementation due hardware task management core swarm version competitive faster tune software serial implementation benchmark parallel entire parallel perform achieve confidence interval memory allocation benchmark sec VI genome allocate memory within task concern impact allocator speedup cage usa genome kmeans speedup bfs astar   speedup swarm spec NONSPEC MAYSPEC software benchmark variant core sec VI ideal memory allocator sec VI ideal allocator implement within simulator allocates  heap memory per core pool zero overhead memory freed speculative task reuse task commits fairness software implementation allocator espresso evaluation performance swarm espresso NONSPEC MAYSPEC variant software parallel version core application parallelize MAYSPEC outperforms software version poorly cage software version scheme swarm poorly sacrifice performance genome NONSPEC cage genome kmeans bfs performs poorly application  opportunity exploit speculative parallelism MAYSPEC performs insight core cycle network traffic breakdown core swarm NONSPEC MAYSPEC version breakdown application height execution relative swarm breakdown core cycle execute non speculative task speculative task later commit later abort spill task memory stall task commit queue idle task available report byte inject noc relative swarm broken category memory access task memory abort traffic abort notification rollback memory access task enqueues commit notification virtual update commits barrier sec II neither swarm NONSPEC perform across input MAYSPEC outperforms swarm NONSPEC speculation execution SNM SNM SNM SNM SNM SNM SNM SNM SNM SNM SNM cage usa genome kmeans bfs astar non spec spec commit spec abort spill stall task breakdown core cycle noc data transfer SNM SNM SNM SNM SNM SNM SNM SNM SNM SNM SNM cage usa genome kmeans bfs astar mem acc abort task virtual breakdown noc data transfer breakdown core swarm spec espresso NONSPEC MAYSPEC variant normalize swarm  shallow graph cage MAYSPEC almost task non speculatively meanwhile graph usa MAYSPEC almost task speculatively overlap processing vertex multiple distance extract parallelism NONSPEC MAYSPEC cycle execute task swarm commit cycle nonspeculative execution efficient reduces cache pressure undo network traffic cache pressure abort commit notification difference swarm espresso variant application plentiful non speculative parallelism task task speculatively bloom filter yield false conflict whereas task prevent task commit queue NONSPEC MAYSPEC faster swarm network traffic genome sequence kmeans cluster vertex bfs breadth trend cage genome phase parallelism nonspeculative execution faster phase reduce task stall stamp kmeans nominally transactional locale timestamps non speculatively synchronize NONSPEC MAYSPEC perform equally nearly traffic virtual update locale effectively localize access data rate benchmark trend maximal independent astar  non speculative parallelism nearly task safely declare NONSPEC therefore NONSPEC performance terrible swarm NONSPEC dominate task stall timestamp task MAYSPEC address pathology swarm espresso improves performance efficiency aid programmability across NONSPEC achieves gmean speedup core swarm spec MAYSPEC without MAYSPEC programmer nonspeculative parallelism available NONSPEC spec MAYSPEC declare task non speculatively without performance concern capsule dynamic memory allocation scalable speculation friendly memory allocator capsule sec II simply memory allocation routine within speculative task introduces needle conflict limit parallelism prior propose allocator software TM htm accelerate allocator non speculative parallel program TMs without avoid false conflict allocator metadata escape action nest transaction memory allocator implement speculative implement capalloc memory allocator built capsule allocation malloc  etc capsule function implement listing avoid reuse memory freed task later abort deallocation  creates nonspeculative timestamp perform deallocation memory deallocated caller commits capalloc internal mimic tcmalloc stateof widely memory allocator allocation KB implementation per core software cache cache limited amount memory allocate central  allocation centralize heap prioritizes efficiency central  heap allocator  avoid data difference capalloc tcmalloc capalloc metadata untracked memory tcmalloc implement  link non spec spec commit spec abort spill stall task execution CT CT CT CT genome  silo core CT CT CT CT genome  silo core normalize execution implementation dynamic memory allocation ideal capalloc unmodified tcmalloc chunk chunk cannot untracked memory speculative task explain sec VI evaluate capalloc swarm application frequent dynamic allocation capalloc tcmalloc ideal allocator core examine efficiency without concern parallelism execution application normalize ideal allocator capalloc tcmalloc perform similarly gmean slowdown respectively core tcmalloc suffers spurious conflict task access allocator metadata gmean ideal allocator contrast capalloc gmean ideal allocator overhead core demonstrate capalloc scalability capalloc gmean faster tcmalloc  silo capsule disk previous capsule avoid needle conflict benefit speculative task perform parallel implement  ycsb benchmark KB tuples query query within speculative task tuples memory request tuple memory fetch disk another tuple evict disk dirty implement handle strategy spec performs disk fetch eviction directly speculative task without capsule possibly task suffer promote serially capsule performs fetch capsule function invoked within speculative task performs eviction non speculative task capsule perform parallel rate bandwidth MB capsule spec MB MB disk bandwidth usage spec capsule query sec performance rate disk utilization spec capsule variant evaluate strategy core nvme ssd disk bandwidth grows rate memory footprint spec MB disk bandwidth due serialize contrast capsule fully saturates disk bandwidth achieve MB rate variant bound capsule achieves throughput spec concurrent highly beneficial capsule successfully unlock benefit speculative task vii additional related espresso closely related swarm prior htm TLS IV summarizes capability task schedule synchronization prior investigate hardware schedule synchronization speculative non speculative task speculative prior technique enable thread speculate barrier avoid abort dependence stall pipelining nonspeculative prior propose hardware accelerate task steal dataflow scheduler lack synchronization mechanism hinders htm transactional conventional synchronization unsafe prior craft software primitive bypass transactional mechanism toggle transactional lock synchronization contrast espresso timestamps locale facilitate coordination across speculative non speculative task MAYSPEC allows dynamically execute task speculatively  moreover timestamps locale performance non speculative task memory barrier lock timestamps essentially  barrier locale handle task dispatch logic efficient  lock eliminate spin within task locale enable locality aware task mapping restrict unrestricted speculative task TLS unrestricted task arbitrary code although active task exception handler HTMs restrict forbid transaction invoke irrevocable action hinders programmability  TCC permit unrestricted transaction promotion technique  serialize pause thread  thread memory metadata unbounded contrast espresso speculative task promotion TCC TLS non speculative parallelism code speculatively transaction commit permission model samsung pro IOPS random KB writes minimum latency IV comparison prior SYSTEMS espresso capability htm TLS swarm espresso parallelism non speculative parallelism synchronization mechanism locality aware unrestricted speculative code HTMs unordered sec vii HTMs restrict sec vii nest transaction speculative task perform operation expensive incompatible hardware speculation mechanism escape action sec II prior HTMs nest transaction within another transaction commit immediately enclose transaction commits capsule nest transaction ordinary conflict detection preserve atomicity access data transaction escape action capsule  transaction abort handler undo unfortunately nest transaction unsafe speculative nest transaction lose data integrity perform harmful writes commit transactional memory hardware software TMs programmer commit transaction bridging gap TM TLS TMs transaction internally avoid pathology implement conflict serializability however controllable programmer conclusion technique benefit non speculative parallelism speculation espresso execution model efficiently speculative non speculative task synchronization mechanism task adaptively task speculatively non speculatively achieve capsule speculative task safely invoke software manage speculative action bypassing hardware version management conflict detection technique improve performance enable capability memory allocation speculative task safely perform parallel