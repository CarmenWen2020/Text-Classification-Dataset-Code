available lose centimeter pcb microprocessor chip due inherent inefficiency delivery subsystem  compute series stack multiple voltage domain eliminate explicit voltage conversion reduce loss along delivery voltage stack VS novel configuration improve delivery efficiency pde however VS suffers aggravate imbalance stack layer prevent practical adoption mainstream compute throughput centric manycore architecture gpus intrinsically exhibit balance workload suffer pde ideal platform implement voltage stack layer approach practical voltage stack implementation gpus combine circuit voltage regulation distribute recycle integrate voltage regulator CR  architecture voltage smooth theory propose voltage stack gpus eliminate PDS loss achieve delivery efficiency improvement conventional layer PDS circuit layer approach significantly reduces implementation voltage stack reduction overhead without compromise reliability scenario across benchmark addition demonstrate layer complement chip CR  transparently manage imbalance restore stable layer voltage serf seamless interface accommodate optimization technique traditionally incompatible VS configuration introduction computer consume non trivial proportion electrical globally due demand data intensive service  manycore processor graphic processing gpus increasingly deployed computer generally exhibit rating watt suffer delivery efficiency pde due load examination pde behavior reveals  transmit distribute electricity across grid outlet incurs loss whereas deliver across centimeter pcb gpu chip waste indicates improve gpu pde yield tremendous economic saving environmental benefit carbon footprint however loss delivery subsystem PDS eliminate inefficiency directly associate delivery voltage conversion loss convert voltage voltage microprocessor delivery network PDN loss transfer electron chip source distribute onchip compute inefficiency worsen voltage increase density rating although various technique propose prior reduce PDN loss voltage regulation closer load fail address inefficiency simultaneously unable fundamentally efficiency gap voltage stack recycle multi delivery novel PDS configuration allows efficient delivery voltage source multiple voltage domain stack series due inherent voltage voltage domain voltage stack VS obviates voltage conversion reduces PDN ideally load voltage domain perfectly balance input voltage evenly fluctuation theoretical pde unfortunately realistic workload VS severe limitation due exacerbate imbalance stack voltage domain prevent adoption practical compute consistent reliable operation propose layer approach enable practical voltage stack gpus deliver improve pde guaranteed reliability addition reliability hurdle overcome voltage stack implementation due overhead incompatibility optimization technique dynamic frequency dfs gate PG research demonstrates hurdle effectively address gpu platform thanks program multiple data SPMD execution model multiprocessor naturally exhibit balance consumption propose layer approach  steep overhead associate circuit VS complement recycle integrate voltage regulator CR IVR theory driven architectural analysis voltage smooth technique dynamic issue width fake instruction injection effective suppress frequency alleviate regulate capacity CR IVR precious silicon newly architectural layer intermediate interface accommodate optimization technique dfs PG previously incompatible voltage stack configuration summary contribution evaluation demonstrates delivery efficiency achieve voltage stack gpu across various gpu benchmark eliminate PDS loss improve conventional pde layer practical VS  annual acm international symposium microarchitecture doi micro  gpus leverage theory driven voltage smooth architecture suppress frequency complement CR  regulate frequency  approach effectively stabilize layer voltage guarantee reliability overhead layer incorporates VS aware hypervisor seamlessly interface optimization enable compatible collaborative operation VS management technique dfs PG saving II background brief overview delivery subsystem compute theart implementation introduce concept voltage stack survey recent development  finally due critical importance reliability VS review research reliability conventional delivery setting delivery subsystem due technology voltage processor chip typically whereas standard standard delivery subsystem PDS consists voltage regulation module  motherboard socket package offchip decouple capacitor electrical connection package chip pcb trace socket bump bump conventional PDS voltage conversion   happens digital microprocessor directly deliver chip primary loss due inherent inefficiency   lose voltage conversion lose consume processor voltage resistive  along PDN loss resistive heating processor load voltage across PDN parasitic resistance refer IR inefficiency account combine loss available  inefficiency worsen load processor rating peak operation suffer degradation pde besides affect efficiency PDS determines reliability due impact notably non ideal dynamic fluctuation chip voltage largely induced parasitic resistance inductance capacitance RLC PDN detail later II emerge PDS layer IVR PDS improve efficiency enhance integrity voltage conversion closer load employ integrate voltage regulator IVR conventional PDS IVR enables IR responsive flexible voltage extra  voltage stack voltage stack VS recycle multi delivery alternative delivery approach potential fundamentally address voltage conversion loss PDN loss simultaneously concept series stack computational core contrast layer conventional PDS layer IVR PDS VS intuitively understood electron recycle stack layer series benefit VS fold eliminates conversion entirely avoids conversion loss VS reduces PDN loss layer IVR PDS deliver chip voltage load along PDN ideal core compute exactly balance activity hence transient demand efficiency achieve voltage stack although pde demonstrate hardware prototype microcontroller core synthetic benchmark practical VS compute spatial temporal activity mismatch remains extremely challenge aggravate activity mismatch across voltage stack layer  obstacle prevent VS adoption mainstream compute reliability refers fluctuation chip voltage fundamentally stem electron cannot deliver instantaneously voltage source immediately satisfy load various chip component static IR dynamic ldi resonance contribute fluctuation investigate impact reliability characterize contribution generally static IR contribution effectively tame circuit technique load regulation whereas dynamic ldi contribution prof dominant intractable insight inspire various mitigation strategy checkpoint recovery voltage emergency detect error execute suitable frequent multi core execution involve complex interaction detection throttle monitor signature sensor measurement prediction microarchitectural throttle processor activity mitigate voltage droop finally compiler runtime explore eliminate voltage emergency optimize static dynamic code however previous focus layer conventional PDS directly apply multilayer PDS voltage stack apply VS gpus additional reliability challenge intricate voltage behavior emerge gpu spatially local global temporally due interaction multiprocessor SMs voltage stack gpu correlate interaction exaggerated voltage fluctuation series connection vertically stack SMs evident empirical characterization voltage stack microcontroller core array exist research resort circuit incorporate multi output recycle integrate voltage regulator CR IVR stabilize layer voltage consumes significant rigorously evaluate imbalance scenario                  ZD ZD ZD ZD ZD ZD                 ZD ZD    ZD      HU HU HU HU implementation voltage stack gpu physical layout voltage stack domain correspond electrical circuit model configuration circuit voltage stack gpu configuration perform rigorous examination  implement reliable voltage stack gpu implementation detail voltage stack gpu realistic configuration fully account potential performance degradation overhead extend effective impedance analysis rigorous characterize reliability VS finally impedance analysis derive parameter guarantee circuit reliable gpu VS operation reveal practical limitation circuit voltage stack implementation important motivation explore VS gpu program multiple data SPMD execution model homogeneous architecture naturally exhibit balance synchronous workload activity highly heterogeneous architecture asynchronous workload cpu simd core execute code microarchitectural balance trace across core voltage stack appeal delivery voltage evenly layer balance layer activity pde achieve without frequent intervention chip voltage regulator quantitatively evaluate conjecture construct voltage stack gpu realistic configuration incorporate detailed VS implementation gpu VS throughout baseline gpu voltage stack validation evaluation configuration gpu model nvidia fermi typical manycore gpu architecture multiprocessor SMs cache chip dram SM shader core load function KB memory cache architecture detail summarize implement voltage stack voltage source chip component partition voltage domain SM SM vdd vdd domain SM SM vdd vdd domain SM SM vdd vdd domain SM SM vdd gnd domain cache interface SMs partition layer strategy previous SRAM voltage stack grid SMs voltage stack cache voltage stack focus SM grid voltage  gpu CONFIGURATIONS configuration configuration pcb voltage SM voltage SMs SM freq mhz thread per SM thread per warp register per SM KB mem controller FR FCFS memory KB mem bandwidth 2GB memory channel warp scheduler  vdd vdd SM vdd vdd SM vdd vdd SM vdd gnd SM technology PDN parameter  peak average account gpu PDS configuration novel VS PDS configuration illustrate physical layout processor correspond electrical circuit model simulate fluctuation behavior adopt previous convention model SM ideal source circuit parameter model package chip decouple capacitance parasitic resistance inductance although 3D IC implementation VS investigation focus 2D implementation planar technology comparison conventional delivery subsystem illustrate 2D planar chip voltage domain vertically stack minimal modification topology chip rout rerouting modify grid layer conventional topology multi layer VS topology layer connection bump local grid physical  underlie largely intact assume minimally invasive rout derive correspond electrical circuit model VS PDN typical RLC circuit equivalent parameter previously manycore depicts electrical circuit model delivery network propose  gpu chip regulation VS implementation illustrate regulation mechanism stabilize layer voltage remedy employ recycle integrate voltage regulator CR  chip CR IVR circuit model symmetric ladder topology introduce earlier VS prototype operation intuitively understood shuffle extra electrical voltage layer                distribute recycle IVR CR IVR sub  output directly SM VS layer voltage layer capacitor consecutive layer alternate switch phase prior distribute  delivers regulation therefore implement distribute CR IVR sub  maximize suppression illustrate shift interface important implementation detail capture voltage stack interface distinctive voltage domain voltage domain resides voltage conventional  circuit readily apply interface account voltage domain VS gpu worth SMs directly communicate gpu instead message SMs access cache memory interface chip dram therefore shift interface reside input output memory controller previous characterization estimate shift overhead transistor memory cache evaluates suitable shifter circuit stack architecture implement switch capacitor topology 1GHz signal transition delay tradeoff reliability characterization reliability  importance VS implementation hardware demonstrate reliable operation guarantee constrain scenario although empirical benchmark synthetic microbenchmarks simulate transient waveform context conventional PDS insufficient reliability arbitrary load circumstance address reliability rigorous manner analytical framework effective impedance analysis characterize obtain sufficient guarantee reliability effective impedance analysis PDS model pure passive RLC network electrical network circuit impact load variation frequency voltage delivery network characterize reliability examine impedance profile describes PDS frequency sensitivity circuit effective approach guarantee reliability suppress peak effective impedance entire frequency load concentrate peak frequency peak voltage fluctuation confine within allocate voltage guardband leverage effective impedance analysis characterize voltage stack gpu impedance plot obtain apply load frequency mhz impedance zeff zeff ST zeff layer zeff layer frequency medium frequency frequency frequency mhz impedance zeff zeff chip zeff ST zeff chip zeff layer zeff chip zeff layer zeff chip frequency medium frequency frequency effective impedance plot voltage stack gpu without CR IVR CR IVR reduces impedance peak fix frequency magnitude voltage electrical circuit model VS PDS however unlike conventional PDS exist multiple effective impedance VS PDS load stimulus voltage due multi layer topology illustrate  eff refers effective complex impedance load evenly distribute across SMs define global effective impedance  eff refers impedance load evenly distribute across stack stack effective impedance ZR  define residual effective impedance refers impedance load reside SM SM stack global stack component rigorous derivation impedance circuit theory previous impedance plot reveals important unique characteristic voltage stack manycore without chip regulator circuit VS gpu exhibit impedance peak around mhz peak  eff peak effective impedance layer conventional PDS contributes resonance peak happens DC ZR eff curve associate residual imbalance SMs stack effective impedance component combination stimulus generate  eff peak ZR eff peak magnitude hence contributes dominant component behavior corroborates earlier empirical qualitatively discus role mismatch disturb layer voltage VS suggests guarantee reliable VS operation tackle imbalanced layer impact chip regulation regulate chip CR IVR intuitively explain impact effective impedance  layer voltage layer CR IVR behaves additional parallel impedance  IV previous effective impedance  eff  eff ZR eff parallel impedance reduces combine impedance suppresses clearly impedance peak suppress CR IVR CR IVR  IV peak limitation circuit effective impedance analysis allows derive sufficient impedance rigorously bound magnitude VS gpu voltage guardband CR IVR suppress impedance peak serious drawback circuit challenge voltage stack becomes conspicuous PDS configuration deliver gpu guaranteed reliability VS onchip CR IVR gpu despite enjoy delivery efficiency pde circuit VS implementation consumes prohibitively overhead practical quantitative rigorous discussion evaluation VI summarize IV architectural VS analysis suggests although  achieve reliable operation impractical VS implementation gpus due overhead important insight reveal impedance peak VS happens frequency contributes fluctuation scenario possibility architecture technique suppress frequency explore opportunity propose theory driven architectural VS motivation leverage theory  technique guarantee behavior stability unlike conventional PDS counterpart voltage stack conventional layer PDS induced repetitive execution sequence trigger peak resonance impedance execution activity cycle predict rearrange compile runtime predictability readily apply voltage stack however impedance profile exhibit plateau frequency due imbalanced residual component span cycle intractability imbalance misalignment gpu resort theory approach stabilize layer voltage voltage stack theoretic formulation propose architectural VS model layer voltage dimensional linear dynamic discus available voltage smooth technique identify dynamic issue width DIWS fake instruction injection fii dynamic compensation dcc suitable actuation mechanism finally detailed implementation account voltage margin commercial gpu tolerate simplify circuit VS gpu VS stack potential performance impact overhead propose technique theoretic formulation apply theory mitigate severe voltage droop imbalance stabilize layer voltage model chip grid  gpu linear dynamic formally derive strategy response illustrates simplify chip grid gpu VS configuration simplify PDS neglect  impedance assume ideal voltage vdd simplify model voltage correspond stack array ignore parasitic chip inductance assume equilibrium layer voltage evenly equilibrium initial differential equation layer voltage DD  absolute voltage layer assume vdd ideal voltage source vdd constant equation depict express matrix vdd ΔI ΔI ΔI SM ith layer replace SM layer voltage across SM dynamic relation voltage vdd  ΔI ΔI ΔI assume voltage disturbance linearize around equilibrium linear dynamic equation classic vdd ΔI ΔI ΔI AX BU ΔF linear dynamic matrix input matrix SM input ΔF capture disturbance incurs classic proportional feedback controller  illustrative effective stabilization technique computational advantage satisfactory regulation proportional feedback controller SM function SM voltage  proportional feedback coefficient hence feedback AX  ΔF BK ΔF stability performance delay important role stability performance application express delay sensor actuator delay communication computation latency along feedback loop discretize sample BK ΔF BK discretization matrix BK sample rate model depict suggests controllable vdd matlab simulink examine dynamic response coefficient voltage deviation disturbance ΔF disturbance frequency within discrete sample frequency voltage deviation guaranteed suppress within fix formal proof obtain analyze bode plot discrete described rigorously scheme stable guaranteed constrain within bound predetermine voltage margin addition theoretical proof experimentally verify stability performance disturbance representative benchmark workload VI essence formulate chip VS grid discrete linear dynamic allows employ rigorous voltage smooth mechanism VS sample rate discretized account various latency introduce implementation detector controller actuator implementation effectively mitigate dominant frequency plateau exhibit effective impedance VS gpu latency frequency peak safely within detailed choice actuation mechanism implementation consideration voltage smooth scheme UHTXHQF LPH XV XV QV QV          UHTXHQF  RZHU   RZ UHTXHQF  UHTXHQF ljk UHTXHQF    timescales actuation mechanism voltage smooth actuation described equation consumption SM VS layer input suggests mechanism actively modulates SM voltage smooth actuator survey typical management technique gpu respective response achieve effective actuator response generally magnitude faster relevant disturbance voltage stack gpu earlier impedance analysis suppress architecture technique associate frequency impedance residual component therefore maximum response voltage smooth actuator cycle around mhz technique thread migration gate content migration longer cycle dynamic frequency lock digital phase lock loop  typically survey technique identifies promising candidate voltage smooth actuation dynamic issue width fake instruction injection dynamic compensation dynamic issue width DIWS fermi architecture SM  cycle issue width warp instruction warp dispatch cycle execution within fermi SM core function sfu load lsu reduce SM warp issue width reduce later restore warp cycle voltage smooth longer appeal advantage DIWS performance penalty dynamically warp issue warp scheduler scoreboard warp marked scoreboard issue therefore although SM  cycle issue width warp issue cycle varies runtime benchmark rodinia nvidia cuda sdk average issue rate warp per cycle due data dependence memory stall compute stall idle cycle DIWS apply peak issue rate reduce throttle performance cycle warp accumulate warp pool accumulate warp issue opportunistically later fully occupy issue width offering speedup partly compensates performance loss previous issue warp cycle issue without DIWS cycle DIWS issue width                dks                                   dks             dks SM microarchitecture operation dynamic issue width cycle issue width fake instruction injection fii insert fake instruction issue width slack introduce extra consumption DIWS fii operates warp issue response fii leverage exist gpu architecture extra circuitry implement availability limited difference valid instruction maximum issue width cycle already valid instruction warp pool extra instruction inject dynamic compensation dcc finally dummy digitally source chip extra balance layer refer dynamic compensation dcc implement oscillator circuit employ binary ladder circuit widely digital analog converter DACs DACs digitally runtime compensate layer imbalance cycle DIWS fii deploy dcc extra consumes leakage  avoid penalty input temporally suitable actuation mechanism merit drawback linear combination DIWS fii dcc exert input equation therefore actual input express PSM   max     respective component DIWS fii dcc  dynamic SM execute instruction significant lsb dcc DAC  fake instruction inject   digital code  DAC implement dcc formulate input sum allows explore propose voltage smooth sweep combination optimal strategy optimization objective    ĐŽƌĞ    ŶƐƚ        ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ    ĐŽƌĞ    ŶƐƚ        ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ    ĐŽƌĞ    ŶƐƚ        ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ    ĐŽƌĞ    ŶƐƚ  ŶƐƚ        ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ ĐŽƌĞ                           implementation propose layer VS gpu architectural voltage smooth VS aware PM hypervisor II voltage detector  sensor latency resolution output cycle detect indicator cpm timing variation adc digit signal implementation consideration circuit microarchitecture gpu accommodate propose theory driven voltage smooth technique illustrates overall architecture implement scheme consists detector actuator circuit voltage smooth controller VS aware management hypervisor detector actuator monitor spatial temporal voltage fluctuation voltage detector SM RC pas filter apply voltage detector filter frequency cutoff frequency filter mhz implement  resistor capacitor occupy chip voltage detector circuit implement droop detector critical monitor cpm analog digital converter adc approach II voltage inference compatible detector requirement propose scheme actuator consist instruction issue  embed warp scheduler SM DIWS fii binary DAC load distribute CR IVR dcc instruction issue  arbitrates instruction issue width issue fake instruction exert actuation SM issue instruction per cycle adjust instruction issue cycle achieve finer grain resolution instruction per cycle average instance issue width instruction per cycle adjust counter arbitrates instruction issue reset cycle voltage smooth controller voltage smooth controller executes boundary trigger algorithm voltage detector sends update issue width instruction issue  algorithm algorithm multiprocessor controller input voltage voltage sensor output issue width  fake rate ake SM procedure controller voltage     calculate SM voltage vsm vsm  enable SM active NSM NSM   vsm ake SM vsm  SM vsm proportional factor calculation return  ake SM  SM implementation proportional algorithm reduce negative voltage smooth performance controller trigger measurement voltage detector  voltage droop threshold detect evaluate performance overhead voltage smooth controller accurately implement controller SM instruction issue  VHDL synthesize VHDL code synopsys  TSMC technology comparable nvidia fermi gpu voltage smooth controller SM instruction issue  consume occupy operating gpu frequency mhz finally account latency component detector response controller computation actuation delay communication delay detector actuator controller obtain detector response previous calculate controller computation actuation delay synthesize circuit model estimate communication delay  delay model taper inverter buffer chain assume controller situate voltage stack layer SM VS aware management hypervisor due voltage stack unique topology constraint layer imbalance previous VS thoroughly explore compatibility optimization technique dynamic frequency dfs gate PG implication collaborative management voltage stack propose voltage stack aware hypervisor layer interface technique hypervisor interface operating layer gpu architecture layer illustrate voltage smooth actuation mechanism DIWS fii dcc layer orthogonal optimization mechanism frequency gate technique accommodate mechanism longer framework significant http github com  git algorithm VS aware management hypervisor input command OS FSM  output command SMs SM gate SM procedure command mapping operation command FSM FSM         calculate   SM  FSM FSM   SM  SM  SM  update  SM  SM   SM increase frequency SM  SM min FSM  SM  SM  SM gate SM return SM gate SM impact management via frequency gate voltage stack inadvertently introduce imbalance due gate action SM performance optimization strategy reliability management induced imbalance exceed imbalance analyze previously reliability guaranteed theory driven approach however imbalance undesirable loss associate chip CR  performance penalty associate throttle action voltage smooth mechanism propose heuristic optimization algorithm constrain layer imbalance alleviate performance penalty algorithm  hypervisor actively maintains balance across voltage stack prevent frequency gate request optimization technique exceed maximum imbalance budget budget dynamically adjust accord SM performance loss gauge instruction throttle due voltage smooth evaluation methodology evaluate layer approach develop integrate hybrid simulation infrastructure combine spice gpgpu sim  spice simulates circuit model VS PDS distribute CR IVR illustrate gpgpu sim simulates architecture specify integrate simulation infrastructure interface spice gpgpu sim enables simulate synchronously gpgpu sim generates trace SM cycle spice trace simulates transient voltage node accord netlist depicts VS PDS gpu functional model voltage smooth controller built simulation infrastructure compute input accord simulated transient voltage accounting various delivery efficiency breakdown across benchmark delivery subsystem configuration latency input gpu simulator dynamically configures instruction issue  source modify issue width issue fake instruction compensate extra integrate hybrid simulation infrastructure allows gpu benchmark evaluation twelve representative benchmark scientific computational domain benchmark suite rodinia nvidia cuda sdk evaluate compatibility propose layer VS optimization technique implement simplify version theoretic dynamic frequency strategy grape gate strategy warp gate grape frequency mhz decision cycle dynamic frequency implement mask gpgpu sim warp gate idle execution inside SMs alu sfu lsu gate eliminate leakage implement gate aware warp scheduler  blackout gate scheme evaluate gate benefit idle detect cycle cycle technique manner VI evaluation RESULTS quantitatively evaluate efficiency overhead reliability layer voltage stack gpu leverage theory examine delivery efficiency alternative PDS configuration layer  PDS practical deliver efficiency improvement conventional PDS without incur prohibitive overhead evaluate behavior synthetic scenario benchmark verify sustain specify voltage margin guarantee perform sensitivity exploration reveal potential performance efficiency tradeoff voltage stack gpu finally demonstrate collaborative management operation combine layer VS framework  optimization technique yield overall efficiency individual alone efficiency delivery efficiency pde evaluate gpu benchmark integrate hybrid simulation infrastructure layer VS alternative conventional  PDS voltage regulator module  comparison delivery  PDS PDS configuration pde overhead layer  layer IVR gpu VS circuit gpu VS layer gpu voltage circuit gpu circuit gpu circuit gpu layer gpu imbalance transient voltage waveform imbalance scenario layer IVR PDS chip switch capacitor integrate voltage regulator without voltage stack circuit implement VS aid chip recycle IVR CR IVR normalize breakdown across benchmark average voltage stack PDS configuration circuit layer deliver efficiency layer  conventional baseline layer IVR IVR VS outperforms IVR layer PDS former shuffle imbalanced load usually layer whereas latter delivers summarizes comparison besides efficiency highlight PDS configuration overhead although VS exhibit pde circuit approach consumes excessive gpu CR IVR capacity imbalance contrast layer approach leverage  imbalance practical consistently achieve efficiency reliability construct synthetic scenario verify reliable operation propose VS gpu manually SMs layer simulate extreme imbalance circuit VS voltage droop worsens CR IVR decrease gpu stabilize voltage budget  voltage latency cycle latency cycle latency cycle latency cycle latency cycle voltage gpu gpu gpu gpu response imbalance function CR IVR latency voltage  bfs  hotspot pathfinder sard blackscholes      layer circuit distribution across benchmark imbalance instead layer incurs overhead achieve similarly stable transient SM voltage nearly reduction perform sensitivity impact CR IVR latency reliability  VS gpu plot voltage droop response synthetic imbalance function  latency plot latency cycle voltage droop becomes highly sensitive  similarly plot  voltage droop becomes highly sensitive latency architecture voltage smooth scheme fluctuation minimal CR IVR handle imbalance sensitivity analysis CR IVR cycle latency controller optimal parameter implement layer VS default simulate distribution across benchmark summarizes distribution SMs benchmark distribution layer circuit CR IVR benchmark modest reduction voltage magnitude theoretic voltage smooth outlier pathfinder   due choice parameter boundary transition voltage excursion bound satisfy specify voltage margin rightmost plot distribution indicates although architecture voltage smooth occasionally  regular benchmark essential guarantee ensure reliability performance tradeoff due throttle voltage smooth mechanism DIWS layer approach inevitably incurs performance penalty evaluate efficiency gpu performance penalty longer execution consumption threshold voltage performance penalty backprop bfs  hotspot pathfinder sard blackscholes      performance penalty varies controller voltage threshold net performance penalty DIWS fii dcc DIWS dcc fii     performance penalty tradeoff  bfs  hotspot pathfinder sard blackscholes      net performance loss performance penalty across benchmark leakage account performance penalty increase leakage saving calculation normalize performance penalty net saving propose layer VS gpu normalize performance conventional PDS layer  performance penalty distribute within across benchmark extend execution increase leakage account voltage stack gpus layer enjoy net saving improve efficiency due delivery efficiency perform another sensitivity voltage threshold  voltage smooth controller determines DIWS throttle trigger across benchmark threshold performance overhead  reliability default  cycle affected voltage smooth benchmark execution layer voltage previous evaluation DIWS voltage smooth mechanism performance penalty throttle performance penalty desire layer approach flexibility incorporate mechanism input specify explore combination performance penalty net saving pareto frontier net desire DIWS generally voltage smooth mechanism fii dcc deliver performance penalty due extra overhead leakage dcc usually inferior mechanism fii apply achieve performance collaborative management finally demonstrate collaborative operation voltage stack dynamic frequency dfs gate PG optimization previous dfs optimal SM operating frequency minimize computational performance apply dfs conventional propose voltage stack gpu apply PG conventional propose voltage stack gpu goal apply dfs strategy examine gpu consumption without VS normalize gpu operating peak performance delivery inefficiency account VS aware management hypervisor modify optimal frequency setting ensure bound layer imbalance negative VS dfs slight increase computational layer VS gpu however delivery loss slight penalty experienced VS gpu compensate superior pde overall saving apply dfs gpu conventional PDS combine PG technique warp gate VS although minimum imbalance requirement VS gpu disrupts optimal PG compensate improve pde favorable dfs PG understood carefully examine distribution imbalanced vertically stack SMs across cycle normalize imbalance peak SM plot distribution lifetime benchmark execution management apply benchmark imbalance backup benchmark uniformity  distribution average benchmark imbalance peak magnitude peak perform dfs PG apply distribution percentage  average  average  hotspot average  pathfinder average   average  imbalance imbalance imbalance imbalance PM dfs dfs dfs PG distribution imbalanced normalize magnitude management PM dfs performance goal gate apply VS gpu evaluate imbalance distribution average benchmark suggests SM activity overwhelmingly uniform synchronize balance across stack optimization dfs PG fundamentally disturb balance activity vii related feasibility voltage stack demonstrate previously proof concept circuit silicon prototype microcontrollers methodology  placement developed facilitate implementation overcome VS prototype resort employ integrate voltage regulator  actively balance mismatch however limited assembly uncorrelated core density mask fundamental limitation prohibitively overhead circuit approach voltage stack built upon prototype novel approach propose advantage VS scenario 3D IC tsv onchip decouple capacitance package parameter optimal partition unfold cpu core gpu  operation threshold voltage compensate variation offering voltage stack previous rigorously address practical implementation voltage stack realistic manycore gpu mature technology reliability guarantee scenario address compatibility VS optimization technique theoretic approach propose dynamic resource management reactive voltage emergency mitigation compute  leverage synergistic collaboration faster circuit voltage regulation  voltage smooth knowledge explore previously conclusion propose layer practical voltage stack implementation gpus achieve delivery efficiency reduction PDS loss across realworld benchmark guaranteed reliability scenario benchmark eliminate overhead circuit compatible collaborative operation VS optimization technique saving