precision medicine rely frequent genomic analysis patient undergo cancer treatment suffer rare disease sequence alignment invoked multiple stage genomic analysis pipeline recent project introduce accelerator GenAx darwin generation sequencer respectively improve upon GenAx increase parallelism reduce memory bandwidth demand achieve combination hardware software innovation integrate cache operator prior GenAx memory hierarchy augment cache peripheral circuit additional operator structure sequence alignment algorithm leverage cache operator exploit genomic datasets bloom filter reduce futile access maximize data reuse within organize memory hierarchy baseline GenAx accelerator batch nearly saturate GB memory bandwidth propose GenCache architecture batch improve efficiency demand GB average memory bandwidth hardware software technique interact synergistically target memory compute bottleneck affect output application principle GenCache exploit generation sequence  CCS CONCEPTS apply compute computational genomics computer organization purpose keywords genomics hardware acceleration sequence alignment cache operator CISC instruction cache partition introduction precision medicine promise revolutionize healthcare future rely heavily genomic information diagnosis treatment genome analysis useful understand cancer mutation craft optimal drug cocktail target cancer minimal thanks reduce genome sequence genomic database enable confidence hypothesis significant discovery newborn sequence sequence multiple monitor progression genetic health growth tumor structural variation however introduces significant computation storage challenge infrastructure hospital fed genomic analysis query per patient patient per analysis software package consume cpu perform computation micro october columbus usa nag genomic accelerator potential dramatically execution task multiple accelerator emerge magnitude improvement extend accelerator primarily augment memory hierarchy tailor algorithm hardware potential impact beyond domain genomic analysis generic sequence alignment pipeline involves genomic partition sub sub index hash identify potential location reference genome filtration heuristic narrow candidate location location assign alignment dynamic program critical parallel operation memory fetch pressure compute intensive dynamic program prior accelerator GenAx darwin tile dedicate chip scratchpad SRAM reduce memory bandwidth overhead impose propose GenCache architecture combination hardware software innovation employ concept cache operator computational capability within SRAM array introduce operator leveraged perform parallel filter operation multi phase algorithm reduces redundant appropriate cache operator phase manages scratchpad allocation tile maximize reuse parallelism algorithm characterization align genomic promote parallelism reuse data structure cacheability data structure negatively impact alleviate bloom filter reduces cache pollution bandwidth overhead algorithm modification alone cache operator alone yield relatively speedup combination additive speedup algorithm shift bottleneck compute accelerate cache operator GenCache hardware software technique reduce data movement magnitude generation sequence pipeline execution reduce efficiency improve output genomic algorithm unchanged GenCache architecture imposes overhead relative GenAx cache operator leveraged generation pipeline yield improvement generation filter background generation sequence significantly decade due generation device illumina   device typically genomic throughput mba min machine introduce machine artifact error generate additionally genome differs genome difference reference reconstruction genome reconstruction uniquely align reference genome perform inexact accommodates error mismatch insertion deletion  align statistical downstream analysis perform machine artifact machine multiple sufficient statistical guarantee machine generates multiple genome redundancy computational demand error rate generation data useful discover variant genome genomic variant structural variant span across variant easily detect generation generation sequence device  oxford   throughput mba min effective capture structural variant however raw error rate machine induced significant computational overhead alignment gen sequence technology tandem identify variant initial hybrid pipeline developed information gen alignment improve gen alignment accelerator sequence alignment therefore integral gen gen hybrid pipeline generation pipeline GATK pipeline institute define standard generation pipeline GATK stage pipeline sequence alignment reference genome stage consume cpu throughput mba min throughput sequence machine stage output alignment stage variant distinguishes variant mutation machine artifact execution breakdown stage GATK pipeline comparison alignment breakdown stage pipeline thread intel xeon GB GenCache leverage cache operator efficient sequence alignment micro october columbus usa memory roughly spent sequence alignment bwa mem algorithm sam cleaning variant sam cleaning typically bottleneck address ssd compression focus compute intensive task pipeline sequence alignment impact stage portion stage sequence alignment genomic pipeline  sequence rna sequence etc computational overhead alignment grows gen gen alignment typical alignment algorithm partition subset index hash location reference genome potential candidate location align candidate location inexact candidate location perform inexact perform filter promising candidate advance  inexact perform candidate identify alignment typical alignment pipeline heuristic implement  SMEM shift ham distance myer vector algorithm shortly discus offs introduce significant memory bandwidth compute operation primarily improves reduce memory bandwidth  parallel compute operation eliminate redundant location fourth fourth compute intensive inexact algorithm fourth usually variant smith waterman local alignment SWA reference fragment matrix trace pointer alignment trace matrix parallel implementation algorithm propose FPGAs systolic array GenAx darwin GenAx darwin hardware architecture accelerate generation alignment respectively GenAx darwin custom processing accelerate compute intensive SWA alignment GenAx serf baseline SMEM algorithm operation accelerate cam array reduce memory bandwidth burden GenAx scratchpad tile reuse subset hash darwin scratchpad counter filtration technique noisy tile mechanism manage memory footprint trace pointer later discus detail GenAx darwin cache compute compute hardware technique perform situ computation SRAM array wordlines activate parallel bitline  bitwise bitline BL bitwise extra decoder simultaneous activation reconfigured differential amplifier BL  separately BL  combinational circuit xor SU etc multi access corrupt data wordline voltage lower slightly increase access latency situ vector operation unlock data parallelism sub array improve performance due reduce data movement genomic kernel selection selection stage optimizes candidate location  algorithm fetch frequency selects batch non overlap minimum aggregate frequency lightweight dynamic program SMEM algorithm super maximal extend  lesser error slightly candidate location SMEM error demand memory bandwidth filter within filtration involves significant amount compute filtration kernel perform vector computation estimate similarity amenable cache operation therefore overview filtration kernel target ham distance suitable  shift ham distance introduces non trivial false positive rate myer computationally expensive kernel combine reduce compute false positive combination shd myer phase micro october columbus usa nag ham distance ham distance indicates mismatch ham distance sequence candidate location reference indicates mutation dis regard shift insertion deletion ham distance indicates shift ham distance shd shd effective identify error insertion deletion error ham distance compute shift indicative insertion deletion algorithm shift ham mask compute vector ham mask amend heuristic combine wise operation estimate candidate location filter shd successfully filter error without false negative false positive rate algorithm shift ham distance procedure shd HM ham mask FM mask amend HM amend mask FM FM HM return pas loop error tmp HM tmp amend HM FM FM tmp HM tmp amend HM FM FM FM return pas return  procedure amend mask mask mask mask mask mask return MM MM MM myer vector edit distance algorithm calculate edit distance mismatch  calculate dynamic program SWA myer algorithm particularly amenable cache operator bitwise operation algorithm calculates occurrence vector algorithm myer vector algorithm levenshtein distance procedure edits    vector  vector  vector edits loop  edits edits edits edits return edits occurrence vector algorithm scan reference calculate dynamic program matrix essentially algorithm calculates difference consecutive  vector update edits apart addition operation bitwise operation myer algorithm cache cache addition shift operation minor transformation myer algorithm calculate edit distance filter error reduces computation calculate diagonal proposal architecture overview without loss generality model baseline resembles GenAx architecture propose architecture GenCache component shade operates processor gpu equip significant memory bandwidth accelerator SRAM array cache operator array input accelerator align reference genome input fed lane execute selection filtration heuristic central controller filtration command cache operator SRAM array response candidate location SWA perform location alignment processor GenCache modify SWA algorithm memory access GenCache leverage cache operator efficient sequence alignment micro october columbus usa diagram GenCache architecture overview bitlines logic subarray additional component GenAx architecture expose parallelism cache operator algorithm eliminates redundant SWA GenAx reduce retain balance pipeline preserve output quality baseline GenAx introduce false negative focus generation alignment approach apply generation alignment GenCache operator propose compute capability scratchpad genomic accelerator potential amount distribute compute local wiring local data movement addition genomic workload benefit cache operator subsection describes operator role genomics subsection describes algorithm modify leverage cache operator operator compute cache principle  situ operation perform wordline vector subsequently compute within bitline peripheral circuit SRAM array perform operation xor non trivial adder circuit iteratively perform addition multiplication convolution operation neural network operator useful various kernel addition introduce RISC operator efficiently implement shd myer algorithm operator ham mask HM computes ham vector shd algorithm myer algorithm ham distance HD ham vector shd algorithm myer algorithm shift SL shd myer shift SR shd addition myer operator version genomic workload input operand   peripheral circuit GenCache micro october columbus usa nag additional peripheral logic operator extra logic implement adjacent bitline amp overhead extra logic quantify later synthesize bitline peripheral circuit bitline wordlines activate emerge amp fed gate xor introduce connection adjacent bitlines useful perform shift perform operation introduce gate numbered bitlines xor consecutive bitlines decides signal HM ham mask latch perform shift operation finally bitline operation adder aggregation ham mask bitlines ham distance adder implement adder assume input odd numbered bitlines array critical latency technology addition prior granularity addition addition perform bitline operator implementation incur overhead data iteratively perform addition cycle instead implement dedicate adder adjacent subarray adder receives input operand consecutive cycle operand buffer register allows addition myer cycle later operator modest overhead addition RISC operator introduce introduce CISC operator perform filtration kernel mention shd shd ERS ERS shd performs shd filter error shd error ERS performs myer algorithm CISC instruction multiple RISC operator parameterized error shd myers rom sequence RISC instruction CISC instruction local circuit receives command central controller implement RISC CISC api addition buffering address command perform operation return data response fix cycle local controller  CISC instruction RISC  parameter rom sequence RISC instruction translate signal mux demux logic peripheral circuit synthesize local controller circuit footprint gen alignment introduce various cache operator gen alignment algorithm modify unlock potential GenCache SRAM allocation GenAx GenCache alignment reference genome hash repeatedly access structure cache prior GenAx tile approach alleviate memory bottleneck partition reference genome MB slice hash construct slice hash capacity MB GenAx allocates chip storage MB reference MB hash entire batch input slice reference hash storage organize scratchpad hash exhibit computation byte ratio reference genome involve majority computation reference genome occupies MB chip storage leverage cache operator limit potential speedup therefore resource allocation slice MB reference genome scratchpad compute capability remain chip storage manage cache correspond hash hash rate cache potential bottleneck alleviate bottleneck structure alignment software pipeline described error aware algorithm error encounter per align reference genome popular software package bwa mem snap align reference error align error error remain error distribution consistent across generation datasets genome typically observation efficiency extract treat error differently alignment profile bwa mem snap extend algorithm GenAx chunk access hash fetch location occurs reference genome return location reference location potential candidate potential candidate extend GenCache leverage cache operator efficient sequence alignment micro october columbus usa GenAx computation pipeline GenCache computation pipeline load MB ref slice MB hash 8GB load MB ref slice MB hash 9GB load MB ref slice MB hash 1GB MB ref scratchpad MB hash scratchpad load MB ref slice MB bloom demand MB hash 8GB phase MB ref scratchpad MB hash cache MB bloom scratchpad phase phase longer processing cache scratchpad load MB ref slice MB bloom demand MB hash 4GB GenAx GenCache computational pipeline fetch location hash creates potential memory bottleneck assume frequency occurrence reference genome array fetch frequency pointer correspond location GenAx fetch location scratchpad intersection location per non null GenAx declares perfect GenCache multi phase approach pigeon principle error error zero error  therefore frequent alignment location GenCache creates fetch hash location frequency focus location performs cache perfect location MB slice reference genome already pre load fetch memory location frequency perform handful parallel cache whereas GenAx scratchpad location intersection operation similarly align error mismatch  narrow infrequently therefore employ phase algorithm phase error scenario phase phase error error fourth phase handle error phase algorithm identify efficient operation perform data structure summarize detail phase  algorithmic avoids memory fetch error hardware cache operator perform highly parallel filter operation exploit bloom filter bottleneck hash ups potential cache rate chip allocate reference genome sub futile non useful ups hash phase filter bloom filter architectural comparison architecturally contrast GenAx GenCache summarize reference genome billion structure encode MB GenAx partition reference MB slice hash specific slice slice hash GenAx scratchpad alignment perform entire batch perfect aside subsequent slice shrink gradually GenAx iterate slice pipeline increase reuse reference hash computational overhead bandwidth demand fetch approximate SWA futile redundant computation perfect discover later instead GenCache reference genome partition MB slice slice phase vast majority handle quickly computational overhead unlike GenAx perfectly redundant SWA micro october columbus usa nag remain phase iterate reference slice perform slightly expensive error operation iteration perform phase phase computation per reference genome therefore fetch memory incur memory access hash hash cache GenAx fetch perfect iteration perfect GenCache fetch perfect iteration phase trading memory bandwidth reference hash memory bandwidth input computational burden worthwhile overall cycle memory fetch compute detail phase algorithm sub detail algorithm mapping hardware phase described gen alignment phase alignment algorithm exploit cache operator selection phase solver identifies favorable algorithm phase concerned identify frequently min module various occurrence hash ups minimum frequency phase  algorithm performs lightweight dynamic program operation per SWA GenAx phase SMEM algorithm tailor error scenario GenAx bwa mem GenAx TCAM array perform SMEM operation hardware implement solver phase handle phase leverage cache operator phase perfect reference genome location therefore specific cache subarrays perfectly align candidate reference genome location split across subarrays ham distance HD cache operation perform location central controller receives response perfect discover advance subsequent phase subsequent reference genome slice phase ham mask shift version RISC operation SL SR HM phase phase  identify candidate location reference genome cache operation filter location shd CISC operation perform location filter location error shd false positive ERS CISC operation described perform identify positive positive SWA phase phase hardware SMEM already GenAx identify candidate location reference ERS operation perform location edit distance advanced SWA reduce hash access SRAM allocation data structure phase demand various data structure potential efficiency chip storage allocate across data structure phase phase handle benefit parallelism afford subarrays whereas phase performs ups location SMEM algorithm phase reference genome scratchpad MB phase hash cache MB therefore array MB SRAM cache operator central controller configure load array phase SRAM allocation data structure phase improve hash cache reference genome slice grows hash grows proportion allocation hash cache address insight hash reference slice highly skewed distribution zero occurrence reference genome occurrence occurrence occurrence useful phase occurrence cannot perfect processing phase occurrence HD operation location discover perfect phase described leverage observation improve hash cache efficiency bloom filter detail bloom filter occurrence reference genome slice easy bloom filter phase fetch bloom filter entry bloom filter GenCache leverage cache operator efficient sequence alignment micro october columbus usa distribution occurrence reference genome slice occurrence hash hopefully cache hash entry empty occurrence perfect skip hash entry occurrence perform cache ham distance operation identify perfect bloom filter structure phase bloom filter implementation storage efficient identify frequency skewed hash crucial phase novel application bloom filter unlike prior cache policy bloom filter cache prediction bloom filter chip efficient structure identify candidate location without approach hash entry zero occurrence pressure bandwidth cache capacity cache operator methodology software alignment err  dataset GenAx alignment accuracy modify pipeline GenAx bwa mem GenCache accuracy GenAx phase algorithm eliminates redundant SWA computation impact GenAx output technique phase  shd myers false negative complex alignment GenCache GenAx SMEM heuristic GenAx GenCache variance bwa mem output GenAx SWA GenCache  comparison mechanism software bwa mem algorithm circuit model synthesize bitline peripheral circuit adder adder solver circuit bloom filter hash circuit central controller synopsys compiler muxes peripheral circuit gate standard library circuit consists analog component amp driver digital component circuit analog component SRAM reduce variability due digital component bitline peripheral numbered bitline across bitlines mux easily however flip flop occupies peripheral circuit SRAM array consists digital component fourth bitline bitlines validate   route central controller logic scratchpad allocation index finite machine manage response cache operation generate gate  convert spice netlist  technology node model delay model GenCache integrate circuit estimate within cactus subarray cache model model scratchpad modify version cactus within  toolset memory fetch assume ddr component GenCache architecture summarizes performance operator GenCache peripheral circuit overhead cache subsystem accommodate bloom filter MB SRAM GenAx additional SRAM overhead conventional SRAM array whereas compute enable access GenCache adder adder occupy negligible overall GenCache chip peak average GenAx component peak subarray peripheral adder adder SRAM memory GenAx scratchpad MB GenCache scratchpad MB GenCache cache MB solver min finder  bloom hash SMEM central SWA GenAx chip GenCache chip component GenAx orange GenCache orange architecture model GenAx already magnitude improvement thread cpu baseline nvidia titan gpu architecture GenAx GenCache architecture cycle accurate simulator model latency bandwidth component cache  cache subarray queue instruction issue width lane etc scratchpad micro october columbus usa nag operation cycle throughput 0GHz  HD shd shd shd myers myers myers GenAx SWA comparison latency peak throughput GenCache ops granularity MB scratchpad GenAx SWA slice MB slice equip bandwidth GenCache appropriate subarrays leakage subarray bitline peripheral circuit numbered bitline offering parallelism wise operation per subarray lane reverse lane buffer overlap processing tolerate hash access latency cam array SMEM algorithm phase cache lane phase temporarily location RESULTS throughput improvement innovation incrementally introduce cache operator MB reference slice GenAx algorithmic marginal improvement due limited parallelism reference slice allocate MB cache operator GenCache speedup GenAx operator parallelism bottleneck memory access hash frequent cache fourth introduces phase algorithm eliminate redundant computation baseline GenAx architecture without cache operator yield speedup iteration limited parallelism filtration phase approach GenCache yield speedup due fetch account memory bandwidth parallelism GenCache operator therefore speedup cache operator algorithm sum algorithm alone cache operator alone addition bloom filter alleviates remain memory bottleneck hash phase yield speedup baseline GenAx comparison per memory fetch configuration reduction reduction memory access cache operator reduce memory access increase memory access cache rate hash ups reference slice throughput improvement GenCache hardware software fifth sixth memory fetch per improvement phase algorithm bloom filter due reduce memory access runtime improvement memory fetch GenCache hardware software memory access across phase data structure baseline GenAx memory access fetch GenCache memory access eliminate redundancy hash access fetch hash access tend critical reduce impact performance consume phase phase parallelism cache operator HD shd phase amount bottleneck cam lookup SMEM filtration phase phase consume memory fetch cam lookup respectively bloom filter false positive rate reference genome slice SRAM allocation phase data reduction rate hash cache hash GB MB cached MB bloom filter approximately frequency entry GB bloom filter reduces futile memory bandwidth capture yield cache rate avoid pollution important chip storage apportion compute friendly data structure GenCache leverage cache operator efficient sequence alignment micro october columbus usa breakdown program phase breakdown memory access program phase data structure bloom filter reference slice false positive rate reduction rate phase bloom filter false positive rate iso analysis HBM sensitivity analysis reduce chip SRAM allocation GenCache MB iso comparison GenAx spite reduce parallelism cache hash speedup GenAx HBM interface GB bandwidth instead bloom filter improve performance phase algorithm hardware thread hide latency memory access application RD generation alignment GenCache operator useful genomic operation   GATK pipeline potential context generation kernel baseline assume darwin baseline filtration multiple non overlap bin reference genome bin bin chosen anchor iteratively align reference extend SWA anchor tile cache filtration leverage observation false per easily prune thresholding operation throughput gen workload SWA tile instead SWA operation propose ERS operation tile filtration amenable acceleration GenCache approach advance darwin SWA impact accuracy methodology simulated kbp coverage  various gen sequence error profile  mimic error rate pacific  device  2D  1D mimic error rate oxford  device respectively darwin MB scratchpad counter algorithm reference bin bin allocate MB cache hash prefetch location allocate MB counter remain MB cache operator slice MB reference genome MB slice reference consists bin MB counter MB allocation counter parallel improvement  filtration GenCache improves performance gen alignment MB scratchpad additional throughput  myers edit distance along  throughput darwin SWA cache hash counter increase throughput counter update alignment task faster rate SWA chip darwin chip estimate whereas GenCache estimate related effort improve sequence alignment variety approach hardware acceleration distribute bioinformatics runtimes accelerator GenAx darwin focus sequence alignment effort  accelerates shd filter FPGAs accelerate    FPGAs alignment variant fpga approach accelerate filter alignment downside comparison GenCache micro october columbus usa nag parallelism comparison cache operator incur additional bandwidth penalty fetch reference remain GenCache incur frequent cache due SRAM cache explore logic perform SWA operation encode information timing delay circuit distribute persona adam  approach combine phase cluster throughput bioinformatics framework recent exploit opportunity data processing embed operator memory array SRAM operation accelerator promise analog digital circuit matrix multiplication operation machine workload nand net architecture focus SRAM dram implementation binary neural network architecture  ambit dram operation accelerate neural network database application respectively isaac prime architecture implement analog dot operation within resistive crossbar accelerate neural network compute cache proposes compute enable cache evaluates kernel accelerate genomic workload GenCache leverage cache operator significant speedup sequence alignment CONCLUSIONS cache operator leveraged significant speedup sequence alignment filtration operation access datasets prior overcome bottleneck tile  operator configure memory hierarchy potential parallelism analyze sequence alignment workload identify redundant  phase pipeline GenCache architecture algorithm alone cache operator alone yield speedup combination yield additive speedup introduce bloom filter structure reduce futile access data structure offering chip capacity cache operation boost speedup improvement parallelism memory fetch elimination redundant reduction memory access important future security privacy penalize chip access circuit analysis additional cache logic overhead significant benefit exploit cache operator gen pipeline alleviate significant memory bottleneck recent genomic accelerator GenAx darwin introduce operator exploit stage genomic pipeline additional improvement future reference compression   variant protein sequence combination cache operator algorithm structure propose SRAM allocation cache bloom scratchpad apply workload rely bitwise operator manage irregular memory access therefore evidence cache operator useful application