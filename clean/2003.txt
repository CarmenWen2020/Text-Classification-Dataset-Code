important workload machine graph analytics application heavily involve sparse linear algebra operation operation sparse matrix compression effective avoid zero perform unnecessary computation zero however compression technique compress sparse csr widely introduce significant instruction overhead expensive pointer chase operation discover non zero identify discovery index non zero bottleneck sparse matrix workload greatly reduces benefit compression propose smash hardware software cooperative mechanism enables highly efficient index storage sparse matrix smash explicitly enable hardware recognize exploit sparsity data devise novel software encode hierarchy bitmap encode efficiently compress sparse matrix regardless extent structure sparsity bitmap encode directly interpret hardware lightweight hardware bitmap management  buffer scan bitmap hierarchy perform highly efficient index sparse matrix smash expose expressive ISA communicate  enables accelerate sparse matrix computation demonstrate benefit smash sparse matrix kernel graph analytics application evaluation smash average performance improvement sparse matrix vector multiplication sparse matrix matrix multiplication csr implementation variety matrix characteristic smash incurs modest hardware overhead cpu core keywords sparse matrix compression hardware software cooperation accelerator memory efficiency specialized architecture linear algebra graph processing introduction sparse linear algebra operation widely application recommender neural network graph analytics performance compute matrix involve operation highly sparse vast majority zero matrix facebook youtube social network connectivity non zero respectively highly sparse matrix significant inefficiency storage computation unnecessarily amount storage largely occupy zero computation highly sparse matrix involves unnecessary operation addition multiplication zero traditional inefficiency compress matrix non zero non zero prior approach compression scheme approach devise compression format encoding csr coo  csr format essentially non zero within matrix additional data structure encoding encoding applicability highly efficient storage compression ratio however approach involves reposition pack non zero matrix significant computation overhead diminish overall benefit non zero compress encode index series pointer chase operation memory demonstrate highly inefficient processor memory hierarchy approach prior leverage structure sparse matrix avoid discover non zero sparse matrix dia format highly effective matrix non zero concentrate along diagonal matrix specialize compression scheme sparsity efficient computation storage highly specific micro october columbus usa matrix inapplicable structure extent sparsity priori goal enable efficient sparse matrix computation technique satisfies requirement computation storage efficiency operating non zero minimal overhead compression scheme efficient discovery non zero generality applicability sparse matrix regardless structure extent sparsity hardware software enable hardware recognize exploit compression encode software sparse matrix allows hardware highly efficient storage retrieval non zero sparse matrix avoid overhead software index requirement software encode maintain storage requirement requirement generally applicable sparse matrix without assumption structure extent sparsity requirement propose smash sparse matrix software hardware hardware software cooperative mechanism efficiently compress operates sparse matrix construct smash efficiently encode hierarchical bitmap express sparsity non zero bitmap recognize hardware software software sparse matrix flexibly encode hierarchical bitmap representation smash adapts matrix sparsity characteristic multiple compression granularity throughout bitmap hierarchy hardware bitmap representation allows lightweight hardware bitmap management  perform highly efficient scan bitmap hierarchy  hardware enables index avoids expensive  lookup efficient sparse matrix computation enable applicability smash expose instruction enable software communicate bitmap management instruction enable efficient lookup non zero matrix sufficiently express variety operation sparse matrix evaluate smash sparse matrix kernel sparse matrix vector multiplication spmv sparse  multiplication SpMM graph analytics application pagerank betweenness centrality BC collection sparse matrix structure sparsity characteristic smash compression format csr  smash improves average performance spmv SpMM across matrix pagerank BC csr implementation software version smash sparse matrix framework hardware smash bitmap encode outperforms csr implementation contribution discover non zero index bottleneck sparse matrix computation demonstrate efficient index boost performance sparse matrix operation significantly introduce smash hardware software cooperative mechanism enables hardware recognize exploit compression encode software smash consists novel software encode hierarchy bitmap efficiently compress sparse matrix hardware enable highly efficient index sparse matrix compress smash software encode smash efficiently compress sparse matrix diverse structure sparsity characteristic hierarchical bitmap encode demonstrate effectiveness bitmap management  efficiently buffer scan bitmap hierarchy hardware identify non zero matrix introduce expressive ISA enables flexible smash variety sparse matrix operation evaluate smash important sparse matrix kernel graph analytics application collection matrix diverse structure sparsity smash significant performance improvement csr implementation incur modest overhead cpu motivation sparse matrix operation widely variety application sparse linear algebra graph processing convolutional neural network cnns machine ML application involve matrix sparsity zero compression scheme straightforward approach avoid unnecessarily zero perform computation variety sparse matrix representation format propose compress sparse matrix widely format compress sparse csr csr format demonstrate inefficiency compress storage format compress sparse csr format widely library involve sparse matrix operation consists dimensional array ptr col ind matrix ptr array non zero per col ind array indicates index non zero array non zero discover non zero col ind col ind ptr col ind ptr discover index illustrates compress matrix csr format discover non zero col ind index col ind ptr col ind ptr variant csr compress sparse csc csc instead col ptr array non zero per ind array index non zero array non zero smash software compression hardware accelerate index efficient sparse matrix operation micro october columbus usa ptr col ind compress sparse format matrix non zero non zero compute ptr ptr col ind index non zero csr significantly reduces amount memory sparse matrix matrix sparsity however csr scheme csr structure requirement non zero matrix correspond index retrieve ptr col ind data structure access data structure additional instruction series indirect datadependent memory access overhead reduce benefit avoid computation zero hence csr format reduce storage requirement avoid needle computation discover non zero unsolved challenge performance efficiency overhead sparse matrix vector multiplication spmv spmv kernel sparse matrix dense vector output vector naive 2D implementation spmv kernel involves perform computation dimensional matrix incurs computational storage overhead code listing csr implementation algorithm iterates non zero avoids unnecessary zero computation however introduces pointer chase operation col ind load index load appropriate vector col ind complex index operation perform multiplication correspond non zero matrix code listing ptr ptr col ind code listing csr spmv implementation index perform multiplication vector sparse matrix matrix multiplication SpMM SpMM traditionally perform inner multiplication series dot operation matrix matrix matrix naive SpMM implementation prohibitively expensive due unnecessary computation operation zero csr implementation SpMM code listing avoids unnecessary computation SpMM matrix compress csr matrix csc SpMM iterates code listing non zero col ind matrix ind matrix discover dot index code listing index non zero matrix non zero matrix perform dot correctly index perform dot operation csr SpMM implementation operation non zero index mechanism critical role performance efficiency non zero col ind ind val val code listing csr inner SpMM implementation index perform multiplication col ind ind col matrix matrix matrix index index SpMM col ind matrix ind matrix index index remain zero index limitation exist compress storage format compress storage format csr  csr effective reduce storage avoid redundant computation zero matrix however described additional computation indirect memory access index non zero increase computation burden memory traffic hence lower potential gain compression scheme understand impact index overhead sparse matrix processing conduct csr implementation idealize version access non zero incur additional computation memory access micro october columbus usa speedup normalize execute instruction ideal index scheme baseline csr average across sparse matrix sparse matrix addition spmv SpMM methodology speedup execute instruction idealize csr regular csr eliminate index csr format significantly improves performance sparse matrix addition spmv SpMM performance benefit reduce execute instruction respectively eliminate expensive pointer chase lookup memory approach sparse matrix compression approach aim maximize efficiency sparse matrix computation specialize matrix trading generality approach assume leverage specific matrix structure assume diagonal matrix compression scheme around assumption non zero along matrix diagonal assume matrix unique non zero compression scheme approach applicable important application cnns graph processing algorithm assumption smash overview introduce smash hardware software cooperative mechanism enables highly compress storage avoids unnecessary computation significantly reduces overhead impose compression scheme enables efficient discovery non zero generally across diverse sparse matrix sparse matrix operation smash enable hardware recognize exploit compression encode software devise construct recognize hardware software compress sparse matrix efficiently hierarchy bitmap bitmap hierarchy efficiently encodes sparsity denote presence absence non zero matrix varies bitmap hierarchy adjust software representation assume structure matrix efficiently compress diverse sparse matrix demonstrate enables hardware exploit sparsity data hence perform highly efficient index sparse matrix challenge smash involves address challenge challenge efficiently encode bitmap matrix denote sparsity highly inefficient storage computation hence efficient bitmap representation effective regardless matrix sparsity location distribution non zero hardware flexibly interpret leverage bitmap encode challenge flexibility expressiveness express diverse sparse matrix operation application layer interface application underlie hardware allows software flexibly manipulate index sparse matrix encode hierarchical bitmap encode enables hardware easily interpret sparse matrix operation application effectively accelerate operation smash component hierarchy bitmap address challenge non zero sparse matrix hierarchy bitmap maximum hierarchy hierarchy encodes presence non zero configurable compression ratio compression ratio software sparsity distribution non zero matrix representation zero matrix bitmap encode bitmap hierarchy bitmap encodes presence non zero consecutive bitmap hence compression ratio bitmap encodes presence non zero consecutive bitmap hence compression ratio selection compression ratio tradeoff computation efficiency storage efficiency compression ratio encode presence absence non zero perform unnecessary computation zero compression ratio compute non zero incur storage overhead non zero matrix data structure non zero array  granularity memory depends compression ratio bitmap hierarchy bitmap bitmap hierarchy bitmap encodes non zero  compression ratio hierarchical bitmap compression mechanism enables efficient representation matrix sparsity distribution non zero adjust bitmap representation granularity compression ratio bitmap hierarchy flexibly efficiently interpret hardware bitmap management  hardware buffer efficiently scan bitmap hierarchy quickly non zero  responsible efficiently quickly calculate index non zero