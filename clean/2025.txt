transactional memory TM promising alternative exist synchronization operation stumble unleash parallelism application efficient implementation TM however challenge due tension lower performance overhead avoid unnecessary abort reachability optimistic concurrency transactional memory ROCoCoTM novel scheme offloads concurrency CC algorithm central building TM reconfigurable hardware reduce abort rate innovative formalization mainstream CC algorithm developed reveal restriction unnecessary abort restriction resolve rococo algorithm centralize validation phase efficiently pipelined hardware thanks performance offload implement reconfigurable hardware rococo algorithm decrease abort rate reduce performance overhead implement intel harp platform evaluate stamp benchmark suite geomean speedup TinySTM htm intel tsx respectively deployment commodity cpu fpga platform ROCoCoTM pave software programmer exploit heterogeneous compute resource transactional abstraction effectively extract parallelism application CCS CONCEPTS hardware hardware accelerator compute methodology parallel program computer organization reconfigurable compute keywords fpga hardware accelerator transactional memory introduction prevalence parallel compute facility ability expose inherent parallelism application reduce program effort become increasingly critical transactional memory TM promising objective attract extensive attraction program architecture community TM concise framework variety essential parallelize program unknown dependence achieve grain synchronization without manage lock extract concurrency legacy code achieve durability non volatile memory program perspective TM devise semantics construct programmer identify atomic code alleviate burden coordinate concurrent access implementation TM realize software runtime stm hardware architecture htm approach extract parallelism proactively orchestrate transaction maximize parallelism abort transaction unsafe enforce correctness numerous dedicate develop efficient stm htm intel ibm already release commodity processor incorporate htm however empirical evaluation TM commodity demonstrate limited performance improvement speedup unsatisfying benchmark transaction processor modest core stm performance overhead manipulation inspection transactional metadata resolve conflict concurrent transaction htm alleviates overhead architectural micro october columbus usa liu transaction intel tsx equip hardware instruction identify transactional modify cache coherence protocol conflict detection however HTMs suffer spurious abort introduce architectural limitation cache capacity summary tradeoff reduce performance overhead avoid spurious abort central challenge TM TM notoriously concurrency CC algorithm achieve transactional semantics schedule interleave transaction previous investigate effectiveness CC algorithm argue anomaly restriction false alarm resolve manner complexity operation transaction modification CC algorithm hamper correctness prevalence commodity cpu fpga platform opportunity resolve tension performance overhead abort rate TM formalize transactional semantics formalization analyse mainstream CC algorithm identify restriction unnecessary abort relieve restriction propose novel CC algorithm centralize validation scheme algorithm efficiently pipelined FPGAs reduces performance overhead contribution establish axiom transactional semantics basis theory discern ambiguity around choice CC algorithm formalization identify transactional semantics mainstream CC algorithm sufficient correctness propose novel rococo algorithm reachability optimistic concurrency serializability algorithm reduces abort PL TOCC algorithm synthesize benchmark rococo algorithm implement hybrid TM ROCoCoTM validate phase offload core fpga evaluation stamp benchmark suite intel harp heterogeneous cpu fpga platform ROCoCoTM enables geomean speedup TinySTM stm TOCC htm PL intel tsx respectively structure introduces background related proposes  transactional semantics rococo algorithm ROCoCoTM implement heterogeneous cpu fpga platform report experimental intel harp platform concludes  transactional semantics simplify program model transaction operation code snippet executes thread manipulate transaction computation practical execute multiple transaction concurrently performance transaction access concurrently classic definition transaction asserts atomicity isolation roughly atomicity transaction completes commits abort  update isolation suggests transaction interfere concurrent transaction definition vague concept isolation accurate interpretation isolation concurrently execute thread transaction visible executes transaction commit writes visible counter intuitive transaction successfully transaction execute serially thread transactional semantics specify concurrent execution transaction intuitive expectation TM substantially semantics enforce aforementioned isolation semantic snapshot isolation SI suffers skew anomaly majority TMs serializability concurrent transaction identical execute serially serializability intuitive SI avoid serializability SI concurrency concurrency CC algorithm enforces specific semantic schedule concurrent operation avoid violation execution optimistically execute transaction validate memory footprint commit transaction serializability CC classify optimistic CC occ pessimistic CC pcc approach empirically pcc unnecessary abort occ transactional semantics compositional enforces whenever enforces proven fpga accelerate optimistic concurrency transactional memory micro october columbus usa SI compositional serializability SI correctness easy guarantee multi version almost database TMs contrast resolve target semantics serializability insight previous CC algorithm non compositional semantics rely centralize scheduler additional restriction insight exploit CC algorithm serializability pcc algorithm exemplify phase lock PL lock transaction execution phase cannot access another release commit phase transaction restriction degrade PL performance forbids concurrent access PL aborted access lock related previous occ rely centralization restriction enforce serializability validation phase launch optimistic execution phase commit phase centralization backward occ  occ  algorithm validation conduct broadcasting update validate commit transaction transaction algorithm efficient broadcast friendly HTMs snoop protocol otherwise serialize broadcast significantly drag overall performance endeavour attempt conduct validation centralize thread bookkeeping prone become bottleneck restriction sufficient serializability concurrent transaction regard dependence acyclic sufficient approach maintain acyclicity abort transaction incoming outgo dependence validation implementation conservative dependence transaction actually within cycle reduce unnecessary abort restriction recent serializability TM database resort timestamped occ TOCC minimize centralization monotonic increase timestamp unique timestamp associate transaction execution validation phase transaction stamp update commit phase transaction aborted timestamps transaction serialize timestamps nevertheless TOCC sufficient serializability demonstrate propose novel CC algorithm rococo balance performance overhead abort rate motivation advent heterogeneous architecture profitable offload centralize validation phase occ core accelerator FPGAs purpose massive parallelism dependency transaction axiom BASED semantics transactional semantics essential guarantee correctness avoid unnecessary abort TM although previous phantom ordering formalize transactional semantics theory formalization distinguishes previous apply interval analyse restriction TOCC algorithm TOCC sufficient unnecessary serializability acyclicity serializability semantics avoid motivate formalization propose demonstrate restriction phantom ubiquitous TOCC phantom transaction TOCC acquires monotonically increase timestamp validate conflict concurrent transaction relation transaction deduct conflict logical transaction transaction update denote transaction writes previous version transaction overwrite timestamped TOCC algorithm enforce serializability abort transaction violate timestamps equivalent serial execution transaction predicate timestamps however restriction arises aborted transaction commit reorder timestamps assume transaction acquires timestamp acquires timestamp TS abort update version TX update although commit phantom induced timestamp acquisition prevents reorder overcome restriction lazy snapshot algorithm LSA postpones acquisition timestamps validation phase commit timestamp phantom persists trace serialize micro october columbus usa liu transactional semantics incrementally built axiom accord dependency timestamps forbid abort aware false alarm TM rely complex timestamps nevertheless formalization phantom haunt CC algorithm global primitive criterion validation formalization gist mention restriction definition serializability existence serial execution without achieve serial execution although monotonically timestamping transaction sufficient necessity challenged phantom avoid serializability introduce  transactional semantics transaction semantic axiom dependency CC algorithm sufficient semantic abort transaction dependency violate correspond axiom nomenclature nomenclature discussion largely theory generalizes intuition binary relation specify axiom relation strictly partial relation  asymmetric transitive strictly linear strictly partial plus related generally transaction relation denote tuple indicates behaviour transaction visible relation transaction concurrent related arbitrarily schedule concurrent transaction dependent transaction incomprehensible transactional semantics overview axiom semantics arrow semantics indicates semantic strengthens axiom arrow addition axiom additional axiom semantic another restrictive abort notion strengthen semantics capture extend relation relation transaction confuse visible extend relation indicates interpretation atomicity isolation snapshot isolation extend semantics axiom serializability equivalent serial execution concurrent transaction extend linear pcc algorithm PL enforce serializability solely schedule operation partial unnecessary abort execution occ algorithm generates execution phase commit transaction abort transaction validation phase linearly extend understood extend linear acyclic finite acyclic minimal linear construct iteratively minimal acyclicity sufficient serializability axiom serializability acyclicity compositional although dependency regard acyclic individually compositional trace acyclic strict serializability interval TOCC algorithm associate commit transaction unique timestamps correspond equivalent serial execution timestamps acquire transaction serializable strict serializable serial equivalence compatible apparently TOCC enforces strict serializability strict serializability limit concurrency unnecessary abort serializability TOCC unnecessary serializability analyse  phantom strict serializability timestamp timestamps acquire anytime transaction transaction interval axis precedence relation interval axis transaction characterize interval theory definition partial interval subset isomorphic linearly related transaction commit TOCC exists phantom unrelated dependency strict serializability compositional semantic acyclicity non compositional axiom cannot accord extension principle relation extend linear partial proof acyclicity serializability construct linear serial execution acyclic topological sort acyclicity serializability assume cyclic transitive closure exists distinct transitive relation contains linear transitive contains linear extend asymmetric counter definition linear therefore acyclic fpga accelerate optimistic concurrency transactional memory micro october columbus usa infer interval transaction operates interval transaction sufficient acyclicity compositional semantic linearizability rococo algorithm rococo algorithm avoids restriction TOCC validate acyclicity without timestamps although detect cycle dependency graph extensively transaction processing detection approach incur computation complexity apply offline analysis adapt kahn topological sort algorithm equivalent TOCC without timestamps rococo detect abort transaction cycle ino validate suitable online validation occ centralize validation mechanism rococo efficiently pipelined fpga reduce overhead rococo rococo algorithm inspire warshall algorithm compute transitive closure reachability graph intuitively acyclic transaction cycle transaction exists  graph transaction another rococo  warshall algorithm iteratively construct bitwise matrix reachability transaction occ essence validate acyclicity probe extend linear incomplete  relation transitive closure powerful describes subset transitive binary relation contains terminology theory graph theory transaction vertex related dependency acyclic relation acyclic graph dag precede succeed reachable interchangeably formally transitive closure finite binary relation construct iteratively transitive relation induced relation correspond graph  reachable finally warshall algorithm transitive closure simplifies procedure distinct iff exists distinct transitive closure construct iterate vertex dag however performance warshall algorithm unacceptable relation transaction  asymmetric  interval indicates transitivity transaction relation partial acyclic linearizability heavily overload TM community linearizability definition strict serializability transaction restrict consist operation apply rococo algorithm serializability validation TM moreover algorithm cannot handle cyclic graph abort procedure address exploit reachable distinct iff exists distinct dual mention warshall algorithm direction relation warshall backward direction dual propose rococo algorithm detect abort transaction cycle calculate transitive closure rococo conflict detection adjacent vector dag vector   related transaction previous commit  generate indicates indicates manager validates transaction inspect discard cycle detect exploit cycle detection cycle exists distinct transaction detect cycle within transitive closure intermediate commit transaction dag transitive closure maintain manager reachability matrix rij indicates commits vertex validate accord warshall proceed vector indicates calculate dually succeed vector calculate boolean algebra accord cycle detection cycle detect cycle detect commit update transitive closure future validation purpose append respectively previous update accordingly transitivity equivalent micro october columbus usa liu pipelined rococo fpga slide transaction manipulation parallel rococo validate iteration mention procedure deficiency rococo greedily commits transaction cycle regard previous transaction without future transaction exists commit transaction future transaction abort optimization rococo validation phase global rococo allows transaction commit previous algorithm topological sort although kahn topological sort linear transaction plus relation suffers phantom presumes linear dag traversal contradicts intuition transitive closure dag disjoint sub graph dag disjoint rococo fpga rococo algorithm exploit parallelism validation transaction however commodity CPUs inefficient manipulation computation involves transposition matrix consume ram architecture rococo impractical commodity CPUs simd instruction FPGAs arise due  intensive algorithm commercial FPGAs massive LUTs register brams DSPs exploit various parallelism task parallelism moreover emerge cpu fpga platform equip latency interconnection accommodate grain cpu fpga interaction heterogeneous requirement rococo implement rococo algorithm fpga bound transaction finite hardware resource bound employ slide transaction implementation technique adapt task insight technique transaction rely snapshot prone abort serializability slide ofw transaction rococo algorithm fpga transaction commit transaction neglect update abort fpga transaction ensure transaction eventually commit irrevocability evaluation chosen spawn thread ROCoCoTM intel harp pipelined rococo implementation transaction commit bloom filter signature succeed proceed vector bookkeeping bookkeeping discard commits conflict detector detects conflict incoming transaction address historical signature choice signature detailed reachability matrix implement 2D register manager commits 2D register shift update accordingly although multiple transaction concurrently validate fpga atomicity validation phase guaranteed transaction commit transaction immediately broadcast signal commit accordingly speculative conflict detection previously undecided transaction detector ensure reaction commits cycle transaction commits atomically non pipeline maintain implementation  ROCoCoTM TM rococo algorithm ROCoCoTM deployed tightly couple  architecture overview ROCoCoTM highlight important choice involve offload validation phase fpga choice bloom filter signature algorithm cpu elaborate respectively ROCoCoTM overview ROCoCoTM feature hierarchical meta pipeline stage compose pipeline transaction architectural  across cpu fpga transaction execute executor commit committer cpu conflict detect detector manage manager pipeline fpga stage transactional execution cascade via asynchronous message queue queue cpu fpga meta pipeline communication latency amortize overlap transaction core fpga deployed detection conflict respective validation detector manager fully pipelined without pressure queue avoid stall transactional execution cpu exclusive validation dedicate thread previous centralize validation scheme pipelined validation fpga significantly reduce amortize validation overhead per transaction decouple validation transactional processing ROCoCoTM adopts lazy version management strategy hybrid conflict detection scheme eager conflict detection fpga accelerate optimistic concurrency transactional memory micro october columbus usa transaction architectural meta pipeline across cpu fpga ROCoCoTM timing diagram validate transaction exclusive core hardware pipelined module cpu lazy detection detector fpga purely global metadata thread executor committer status transaction execution transaction  address tentative writes private redo respectively sends fpga verdict execution approve committer iterates redo update actual location ensure transaction remains consistent execution transaction intersects signature signature commit transaction abort conflict eagerly detect detect conflict execute transaction commit transaction construct without atomic operation transaction abort without incur core latency ROCoCoTM prefers global metadata  signature per location metadata lock timestamps per fpga detect conflict without incur latency access memory location detailed algorithm cpu implementation ROCoCoTM serializability transaction slide fpga transaction strict serializability guaranteed eager conflict detection abort cpu transaction violate timestamped transaction within transaction incur concurrent thread ROCoCoTM semantic transaction commit TOCC progress deadlock freedom guaranteed commit lock resource lock transaction commit however ROCoCoTM cannot guarantee livelock freedom thread exceeds slide transaction continuously aborted due overflow slide skewed workload extreme transaction flood overwhelm transaction suffer livelock configuration livelock parallel bloom filter signature parallel partition bloom filter widely HTMs compute signature unbounded false positivity query intersection bloom filter signature parameter approach introduction false positivity signature compute parallel filter hash insertion membership query union intersection operation wise operator ROCoCoTM parallel bloom filter signature implement hardwired logic fpga avx instruction cpu adapt architecture approximate universal hash shift scheme signature address compute avx instruction concern bloom filter signature appropriate signature acceptable false positive rate attain establish probabilistic model analyse false positivity query intersection bloom filter signature respective false positivity bloom filter signature depict chosen implementation avx instruction CPUs false overlap intersection frequent false positivity ROCoCoTM perform intersection operation signature concern false overlap intersection bitwise signature disjoint indicates non empty intersection micro october columbus usa liu  transaction load global timestamp local timestamp transaction update validate timestamp conflict transaction trace update  conflict transaction abort attempt update  executor   commit transaction  commit transaction  commit transaction  transaction fpga   redolog    executor    redolog TempSet overlap executor    redolog TempSet executor    redolog  addr TM abort LSA strict serializability bloom filter signature coincidentally cacheline exactly address algorithm cpu decouple validation maintain opacity  ROCoCoTM performs eager conflict detection commit transaction adapt LSA TinySTM unlike TinySTM per location metadata ROCoCoTM relies thread local bloom filter signature detect collision operation bloom filter gist algorithm transaction incrementally maintains valid snapshot memory commit transaction commit transaction creates snapshot indexed incremental global timestamp  execute transaction acquires  local timestamp  validate timestamp  transaction address signature   temporary TempSet attempt extend  intersect TempSet overlap update  collision  otherwise address update transaction consistent execution algorithm transactional load ROCoCoTM procedure TM var addr  query addr var redolog addr return  query addr  TM abort memory addr TempSet   acquire TempSet unite        TempSet   unite TempSet  query addr TM abort  insert addr procedure TM var addr  insert addr redolog insert var addr  TempSet future commit transaction update  transaction address cannot maintain valid snapshot abort algorithm detailed algorithm transactional execution phase corresponds various scenario intersection bloom filter signature feature false positivity summarizes signature subset address signature overlap TempSet transaction iterates signature sub accurate intersection TempSet conflict resolution conduct complexity overhead empty intersection TempSet non empty transaction execution transaction commit directly transaction non empty validate core fpga ensure transactional semantics regard transaction transaction sends along  fpga validation transaction transfer address signature query operation signature minimize possibility false positivity conflict detection fpga fpga commit transaction signature per transaction upper bound resource priori fpga accelerate optimistic concurrency transactional memory micro october columbus usa fpga decides transaction commit commit transaction queue commit transaction publishes signature update serf commit lock update address algorithm therefore isolation commit execute transaction preserve partial commit transaction multiple transaction commit concurrently conflict detect fpga transaction increment release  commitment atomicity cpu guaranteed transaction update become visible transaction commits cpu specialized speculation loop parallelization program model stamp benchmark suite atomicity obviate code parallelize loop inside transaction modification stall non transactional code ROCoCoTM atomicity prefer nevertheless rococo algorithm fpga accommodate program model TM evaluation report evaluation ROCoCoTM rococo algorithm attain abort rate mainstream CC algorithm ROCoCoTM perform stamp benchmark suite commodity establish STMS HTMs centralize validation mechanism fpga constitute bottleneck ROCoCoTM overhead ROCoCoTM fpga resource micro benchmark CC algorithm isolate impact concurrency component TM memory trace extract synthetic micro benchmark  concurrency algorithm PL TOCC rococo algorithm propose functionality micro benchmark emulate transaction random array access array consists memory location transaction access memory location transaction possibility collision memory location correspond collision rate fifty trace generate random collision rate assume transaction execute concurrently tentative update transaction commit visible transaction approximate sixteen concurrent thread respectively experimental PL TOCC rococo achieves abort rate scenario thread rococo slightly reduction TOCC possibility transaction abort rate collision rate CC algorithm concurrent thread neglect update concurrent transaction dependency hence transaction rearrange timestamped thread thread nevertheless occ algorithm enables considerable reduction abort rate PL thread simulation target modest core rococo abort regard PL TOCC respectively collision rate medium collision rate amount concurrency serialization introduce timestamped strict serializability negligible occ algorithm effectively circumvent rococo algorithm collision rate increase possibility dependence cycle thread abruptly algorithm perform similarly experimental setup harp evaluate performance ROCoCoTM stamp benchmark intel harp platform experimental server feature package integration ghz core haswell xeon processor concurrent thread hyperthreading arria fpga  processor fpga interconnect  cache coherent interface interface greatly reduces communication latency increase bandwidth cpu fpga cache llc cpu latency transfer cacheline cpu fpga latency channel built upon QPI magnitude latency fpga discrete pcie accelerate package integrate platform preferable application grain cpu fpga interaction TM stamp benchmark suite TinySTM baseline stm outperforms stm htm stamp recent evaluation configuration ROCoCoTM commit lock lazy conflict detection tentative commit lazy version management evaluation TinySTM harp significant difference commit around llc fpga llc fpga contract facto pcie interconnect ASIC accelerator incur latency micro october columbus usa liu speedup solid axis regard sequential execution abort rate dash axis thread xaxis stamp benchmark suite abort rate attribute fpga ROCoCoTM drawn dot lock default encounter lock implement htm intel tsx tsx trigger abort various  micro architectural transaction global lock abort fallback due effort tsx individually tune retry policy benchmark performance impractical constant retry policy retry performs harp benchmark program compile gcc respective input dataset performance stamp speedup abort rate execute stamp benchmark application TinySTM tsx ROCoCoTM respectively speedup depict axis relative sequential baseline stamp abort rate calculate ratio aborted transaction execute transaction depict axis axis abort rate invert core validation contributes abort ROCoCoTM abort rate fpga explicitly depict dot exclude bayes benchmark due variability observation ROCoCoTM TinySTM tsx thread ROCoCoTM outperforms TinySTM tsx geomean respectively thread ROCoCoTM achieves geomean speedup TinySTM tsx respectively centralize validation mechanism fpga impact performance cache thrash due hyper thread tsx avalanche abort concurrency threshold application thread ssca attribute tsx eager conflict detection eager version management aborted transaction transaction abort chain although tsx attains performance thread due boom abort rate performance fails thread addition cache thrash thread thread ROCoCoTM TinySTM exhibit memory footprint bloom filter signature ROCoCoTM TinySTM exhibit abort rate ROCoCoTM adopts tsa algorithm TinySTM cpu dot aborted transaction fpga abort ROCoCoTM fails cpu without validation fpga besides transaction empty account percentage transaction genome intruder commit directly cpu optimization successfully reduce performance overhead ROCoCoTM ROCoCoTM TinySTM abort rate alter default barrier stamp pthread barrier enable thread modification slightly performance loss TMs thread ceiling tsx abort rate transaction retries acquire global lock fallback fpga accelerate optimistic concurrency transactional memory micro october columbus usa particularly workload labyrinth yada transaction friendly involve pointer chase concurrent data structure non negligible conflict rate conflict resort transaction whereas conflict induced atomic counter dynamic buffer kmeans intruder resolve program construct ROCoCoTM achieves noteworthy abort rate TinySTM labyrinth yada ROCoCoTM outperforms TinySTM contentious application reduce abort rate another ROCoCoTM incurs performance penalty TinySTM thread thread application TinySTM outperforms ROCoCoTM factor TinySTM resolve conflict validate transaction thread ROCoCoTM validate transaction core fpga communication latency dominates overhead however overhead becomes prominent transaction increase increase thread concurrent transaction trigger conflict resolution validation frequently TinySTM ROCoCoTM ROCoCoTM resolve conflict bloom filter signature offloads validation fpga amortize overhead TinySTM thread exception trend ssca feature enormous transaction contention rate accordingly scalability limited overhead maintain transaction contentious memory access ROCoCoTM maintains metadata amortize overhead transaction increase core communication overhead ssca poorly ROCoCoTM amortize overhead validation quantitatively potential bottleneck centralize validation TinySTM ROCoCoTM report spent validation TinySTM configure commit lock dedicate validation phase transaction commit cpu timestamped amortize validation overhead per transaction benchmark  overhead micro ROCoCoTM safely conclude centralize validation bottleneck avoid pipelining fpga execution labyrinth incurs amortize overhead TinySTM ROCoCoTM hardwired bloom filter validate mechanism amortize overhead ROCoCoTM insensitive resource consumption fpga implementation ROCoCoTM harp fpga component clocked mhz bloom filter critical ROCoCoTM fully pipelined consumes register ALMS DSPs hash bram bram mainly historical signature per transaction validation overhead micro stamp benchmark accurate bloom filter resource consumption however extend bloom filter signature frequency noteworthy improvement abort rate prof quantitative analysis bloom filter incoming  fpga device feature pipeline register ROCoCoTM frequency core validation overhead conclusion transactional semantics CC algorithm formalization theory formalization mainstream occ algorithm strict serializability propose centralize occ algorithm rococo implement ROCoCoTM hybrid TM core hardware validation  platform extend direction program perspective vast semantics besides rigorously relaxed consistency model reside quiescent sequential consistency multi processor appeal formalize semantics axiom semantics insight transactional algorithm intrigue non greedy CC algorithm avoidance sub optimal abort implementation worth apply rococo transactional centralize directory HTMs