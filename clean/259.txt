recently rapid growth network resource cybersecurity issue become rigorous due rapid progress internet IoTs integrate network resource enhance defense capability effectively urgent inspire friendly worm network novel concept worm compute decentralize compute platform worm compute model integrate useful information resource cooperative defense achieve resource utilization refresh compute capacity improvement network security enhancement blockchain platform fundamental decentralization collaborative data deliver private chain solves data trust compute traditional collaboration model decentralize credible service ensure unchangeable modification transaction conduct resource utilization collaborative defense malicious URLs validate effectiveness propose worm compute model improve resource utilization network security previous keywords worm compute blockchain resource cooperative defense introduction recently development internet IoTs promotes explosive growth global data volume enormous challenge traditional data analysis processing technology limitation PC architecture cannot fulfill demand compute capacity user obtain performance compute without hardware upgradation various demand network resource user imbalance network resource distribution incomplete utilization network resource requirement performance compute era data compute apply resource however resource compute deployed data network delay due transmission distance user request data network data transmission amount network resource broadband slows response rate user request decline user proliferation network user data challenge traditional data processing technology generate serious cybersecurity approach propose cope cybersecurity however cybersecurity incident reduce firstly dynamic data management depends central node traditional network defense structure data destroyed network defense structure  secondly another challenge traditional network defense structure data trust compute participant cybersecurity defense reliable platform defense information untrusted environment reliable platform ensure credibility defense node addition traditional network defense lack effective incentive increase enthusiasm network participant expand network defense improve network defense capability traditional network worm computer attack program code intelligence automation automatically scan attack node host vulnerability computer network without intervention rapidly computer node network however traditional network worm benign worm actively defend network worm network patch transform worm benign worm reduce network threat maximize extent retain intelligence automation rapid propagation characteristic traditional network worm positive impact network security benign worm defend malicious worm repair computer node vulnerability replication propagation host host vulnerability host vulnerable defend worm attack host automatically transfer benign worm defense code host repair vulnerability cure malicious worm infection authorize interface therefore benign worm autonomous ability propagation ability traditional network worm accord prior feature description benign worm mainly posse characteristic autonomic defense benign worm autonomously defend malicious worm resist malicious virus infection controllability behavior benign worm controllable benign worm cannot attack host traceability route transmission benign worm traceable resource scatter network effective integrate resource data service integrate scatter computer resource data resource network positive impact improve utilization rate resource network enhance ability network defense therefore goal beneficial influence computer network integrate resource information moreover goal characteristic benign worm widely distribute actively positive internet inspire positive influence benign worm computer network proposes concept worm compute focus attention benign worm widely distribute controllable worm compute model distribution worm node network quickly integrate effective resource computer resource collaborative defense information addition blockchain technology introduce distribute collaboration framework model ensure stability traceability worm compute model application blockchain centralization data traditional defense network blockchain propose nakamoto attract attention due application bitcoin node participate blockchain communicate peer peer PP verifiable manner without mutual trust intermediary node participate enables cybersecurity defense user communicate various resource information manner PP furthermore consensus tamper proof blockchain technology participant blockchain network validate data accord smart contract data accepted data chronological validation tamper tamper proof blockchain resource information security defense information construct private chain reference formulation incentive mechanism selection defense contribution summarize propose concept worm node worm compute respectively worm compute model efficient information internet quickly integrate worm node resource collaborative defense service introduce blockchain technology construct distribute architecture worm compute model smart contract deliver private chain define collaboration user ensure transaction data tamper construct framework worm compute model analyze implementation strategy conduct validate effectiveness propose worm compute model organize II introduce research related blockchain resource network security definition worm node worm compute construct blockchain worm compute model IV introduces implementation strategy blockchain worm compute model conduct VI concludes future related discus blockchain resource blockchain network security technique analyze difference worm compute model traditional model blockchain resource emerge blockchain application resource apply centralization traditional resource compute application     project crowdfunding whitepaper  blockchain decentralize compute  supercomputer organize network mining architecture coin resource task allocation recently docker achieve lightweight mechanism virtual machine adam possibility application container blockchains propose hybrid hash data chain container auxiliary hash achieve purpose application safely user blockchain network security blockchain technology allows peer communicate verifiable maintain anonymity data integrity without mutual trust intermediary blockchains apply various collaboration internet distribute trust framework device iot construct blockchain technology decentralize platform collaboration mode therefore trust equipment collaboration iot blockchain technology trading ensure privacy security transaction microgrid blockchain regulate voltage loss trading combination traditional commerce economy introduce commerce platform  blockchain technology ensure fairness transaction privacy transaction data public perspective distribute database  construct function exist database blockchain technology  implement data management blockchain interacts data query storage blockchain transaction achieve automatic access management without participation blockchain technology combine compute achieve credible efficient data management  blockchain technology medical data data collaboration addition blockchain privacy protection intrusion detection construct distribute collaborative intrusion detection smart grid  consensus mechanism blockchain rodrigues propose novel architecture combine blockchain DDoS defense deploy exist public distribute infrastructure blockchain promote whitelisted blacklist IP address  introduce reputation collaboration scheme blockchain  promote cooperation service provider consumer reputation incentive improve preventive ability DDoS reduce malicious behavior rodrigues conduct global performance evaluation effectiveness propose  scheme deploy geographical location collaborative anomaly monitoring framework construct noisy sensor data industrial internet combine blockchains blockchain technology  building distribute cooperative defense framework blockchain enhance defense ability stability blockchain etc built blockchain distribute data storage traditional wireless sensor anti attack capability enhance sensor data avoid tamper steal difference worm compute model traditional model propose framework resource mention forego mostly adopt style compute achieve goal resource improve compute task distribution integration however worm compute model directly contributes resource directly autonomous improve resource utilization malicious defense worm compute framework emphasizes intelligence attention participation internet enthusiasm participant mobilize concise manner increase defense ability comparison worm compute model traditional model    autonomy traditional     worm compute  application  internet   worm compute model blockchain introduce blockchain worm compute model application scenario worm node worm compute related concept introduce worm compute model worm node regard sharer effective information user effective information blockchain technology node orderly active manner achieve purpose improve resource utilization enhance network security application scenario application scenario user user participant worm compute model negatively efficient utilization resource increasingly serious threat network security image KB image application scenario blockchain worm compute module participant worm compute model smart contract resource security defense information participant resource information blockchain smart contract addition participant detects malicious threat information malicious threat via smart contract participant resource establish connection resource information blockchain distribute resource otherwise participant update defense information integrate security defense information blockchain achieve goal cooperative defense definition worm compute benign worm widely network replication autonomy rapid coincide requirement model public actively contribute effective resource network addition characteristic defense traceability controllability benign worm inspiration strategy model concept benign worm application scenario propose definition worm compute definition worm node computer node network user positive internet valid information characteristic emphasize initiative distribute usefulness definition worm compute decentralize computer model worm node active contribution network resource cooperative defense improve resource utilization enhance network security blockchain worm compute model propose architecture blockchain worm compute model underlie architecture worm compute model blockchain private chain contains multiple worm node conduct peer peer communication private chain worm compute model functional module resource cooperative defense worm node participate module jointly maintain blockchain data architecture built principle helpfulness worm node deliver effective information without negative impact network controllability behavior worm node controllable traceability data node traceable image KB image blockchain worm compute model accord principle module worm compute model detail resource module worm node resource resource sharer reward node satisfy compute requirement user resource security defense module security defense information detect node integrate blockchain technology data information node formulate defense strategy data trust calculation traditional framework integrates wisdom unknown public internet collaborative defense improve network security addition consensus layer private chain blockchain worm node participate consensus upload data blockchain worm compute model smart contract ensure integrity unforgeability data architecture resource module security defense module blockchain resource module  module functional resource reward data respectively rsharer resource sharer initiator  module ruser user resource  reward resource paid ruser rsharer  resource usage information transaction information data  express data resource    software resource hardware resource respectively resource  asset image KB image blockchain resource module blockchain security  module  module mainly compose malicious url collection malicious url update malicious url defense respectively  cybersecurity defense information sharer  user security defense information   treat worm node  security defense benefit aggregation defense information integrate worm compute model acquire participant reap security benefit via pre warn collaborative defense  identify cybersecurity defense information  regard asset  formalize  virus software  trojan  indicates malicious website image KB image blockchain security defense module blockchain trust update module underlie architecture worm compute network built blockchain unlike traditional social network data communication node conduct peer peer manner involve trust transfer node however worm compute model user identity sharer user prevent malicious behavior worm node effective information sharer prevent malicious resource steal user data effective resource user valid information user prevent maliciously evaluate effective resource sharer worm compute model introduces bidirectional trust update mechanism behavior worm node identity valid information sharer user trust update module blockchain compose quality assessment error calculation trust calculation quality assessment reflect quality resource determines trust sharer error calculation reflect accuracy evaluation directly affect trust user trust calculation mainly calculate update trust effective resource image KB image blockchain trust update module propose model workflow workflow propose model building worm compute network blockchain deploy smart contract   mainly rsharer uploads information usage resource blockchain smart contract ruser correspond resource blockchain smart contract establish connection accord usage mode ruser evaluates resource completes payment pre define incentive mechanism model update trust accord behavior resource uploads resource data transaction data data smart contract  mainly node uploads security defense information blockchain smart contract blockchain integrates defense information submit node participate node obtain defense information aggregation formulate security defense strategy interact smart contract participate node evaluate obtain defense information upload blockchain model update trust accord node behavior image KB image blockchain worm compute model workflow blockchain technology underlie architecture model blockchain node worm node worm node participate worm compute model perform mining confirmation worm compute model therefore worm compute model blockchain node scalability addition worm compute model widespread internet public integrate effective information define correspond smart contract model scalability analyze workflow propose model mainly effective resource information upload effective information retrieval resource evaluation trust update integrate effective information blockchain worm compute model consumption blockchain node mainly effective information retrieval therefore combine storage structure blockchain complexity blockchain node respectively implementation strategy worm compute model introduce strategy worm compute model resource strategy propose resource resource module trust update strategy propose dynamically regulate behavior worm compute participant authority allocation strategy limit usage scope resource user enhance security sharer incentive strategy motivate resource sharer docker resource strategy docker lightweight linux container deployed continuously docker container packaging application image LXC technology portable isolated application docker container performance vms docker container lighter quantitative virtualization mechanism docker container apply worm compute model lightweight application mechanism resource docker container  application traditional virtualization mechanism linux operating without graphical interface therefore desktop gui application docker protocol image KB image docker resource schematic firefox browser introduce graphical interface linux operating regard application linux environment graphical interface linux environment protocol protocol consists   role  manage hardware configuration related graphical display computer  display screen inform  input action  responsible program logic correspond input action ruser firefox browser ruser firstly resource  informs  resource action mouse  obtains correspond firefox image meanwhile  transfer firefox image  finally  display interface firefox browser screen protocol essential application scenario   host therefore ssh protocol rsharer resource ruser docker image resource participant SR module resource pack resource correspond resource image ruser rsharer establish link ssh protocol ruser resource correspond resource image docker container memory response virtualization vms moreover multiple docker image server timely multi access requirement resource worm compute model lightweight resource bidirectional trust update mechanism quality assessment error calculation worm compute model node initial trust percentage model adjusts trust accord normalize behavior node trust node normalization behavior worm node trust update resource module explain trust update mechanism resource sharer trust update mechanism participant worm compute model initial trust rsharer resource  resource evaluate resource accord personal assume rating ruser conform criterion accord evaluation resource trust rsharer adjust evaluation trust increase evaluation trust reduce malicious resource trust malicious resource sharer reduce zero ruser resource resource evaluation rsharer trust simultaneously displayed resource improve quality resource security defense module trust update defense information sharer roughly resource module however security defense module evaluation behavior defense information user aim threat malicious evaluation threat malicious computer attention paid user query collaborative defense information collection malicious evaluation displayed correspond threshold evaluation node integrate security defense information worm compute model adopt accord threshold basis node formulate defense strategy dynamic growth rsharer trust sti trust rsharer sti variable   upper limit sti  indicates trust rsharer ruser assessment  increment rsharer trust calculate express  assessment rating  resource variable computer user register participant worm compute model initialize trust subsequent resource  trust worth update dynamically accord resource  barely  rsharer trust remain unchanged ruser trust rsharer increase resource quality rsharer trust reduce extent rsharer behavior malicious resource rsharer trust directly zero resource user trust update mechanism firstly comprehensive evaluation resource calculate ruser resource assessment obtain comprehensive evaluation deviation comprehensive evaluation ruser malicious behavior evaluate resource ruser trust decrease deviation comprehensive evaluation primary factor ruser trust increase security defense module trust update collaborative information user comprehensive assessment resource asi comprehensive assessment resource  trust ruser  dynamic growth ruser trust  indicates trust ruser resource    upper limit   increment ruser trust calculate deviation ruser evaluation comprehensive evaluation variable minor ruser rating standardize ruser trust increase ruser maliciously assessment ruser trust decrease calculation trust update mechanism algorithm resource module algorithm bidirectional trust update mechanism quality assessment error calculation input trust sharer ST resource comprehensive evaluation resource asr evaluation ruser evaluation resource WR trust user UT output update ST UT asr WR calculate trust increment rsharer accord update trust ST rsharer accord calculate comprehensive evaluation asr resource accord calculate error evaluation comprehensive evaluation asr accord calculate trust increment  ruser accord update trust UT ruser accord return ST UT asr WR multi role authority allocation strategy linux resource module prevent ruser malicious behavior resource adopt security mechanism security stability rsharer multi role authority allocation strategy linux adopt linux multi user operating allocates private machine linux user file private message rsharer resource automatically creates linux user  user  restrict access resource allocation mechanism ruser resource establish connection  acquire permission resource linux permission allocation mechanism isolates rsharer resource resource ensure rsharer robustness resource blockchain incentive strategy resource module rsharer obtain revenue compute resource model blockchain technology ethereum client perform transaction rsharer ruser transaction model timing rsharer ruser establish connection timing connection disconnect model convert resource amount ethereum paid preset incentive mechanism incentive mechanism model ethernet coin deliver rsharer ruser behalf ruser resource     reward gain frequency memory resource usage contribute rsharer computer respectively sti trust rsharer allocation resource user fairly calculate payment situation ruser comprehensive consideration computer configuration resource usage adopt frequency memory resource usage calculate separately resource disconnect function transfer transaction function usage data execute finally transaction blockchain node pow mechanism experimental analysis accord strategy described implement worm compute blockchain technology evaluate propose worm compute linux goal worm compute model improve resource utilization usage cpu memory evaluation metric resource reflect resource utilization increase cpu memory usage illustrate effectiveness worm compute model improve resource utilization worm compute model regulate behavior node dynamically adjust trust node avoid malicious behavior node apply influence node behavior trust experimental impact node behavior trust combine influence trust resource utilization previous effectiveness trust mechanism regulate user behavior another goal worm compute model enhance ability network security defense malicious web detection experimental scenario illustrate effectiveness collaborative defense access rate malicious web node cooperation model addition demonstrate effectiveness trust mechanism malicious website access rate trust threshold illustrate enthusiasm trust mechanism reduce defense error resource module mainly experimental data software eclipse firefox spotify  setup participant resource   computer configuration participant remain resource user security defense module participant computer configuration participant resource security defense analyze performance model participant computer configuration resource module   participant   ruser participant   ruser participant   ruser participant   ruser participant   ruser participant computer configuration security defense module   participant    participant    participant    participant    participant    resource utilization purpose resource module worm compute improve utilization participant computer resource usage resource unique participant computer configuration therefore computer configuration participant comparative conduct aspect cpu utilization increase rate memory utilization increase rate cpu usage increase rate participant increase rate cpu usage user user user computer configuration architect resource user cpu growth rate user user user apply configuration besides cpu kernel resource cpu usage user increase relatively due cpu performance discover cpu usage eclipse firefox increase rate obvious cpu consumption spotify  image KB image resource usage increase rate participant memory usage increase rate participant user memory user user resource memory usage increase rate user user user memory obvious memory usage increase rate memory eclipse firefox evident resource image KB image memory usage increase rate participant resource usage increase rate resource cpu memory utilization increase rate relatively insignificant docker resource additionally eclipse firefox obvious others resource mode completely previous image KB image resource usage increase rate resource summary resource resource operating configuration significant increase cpu utilization faster processing computer cpu kernel memory obvious increment cpu memory utilization therefore resource docker container resource mode resource convenient consumes computer resource resource multiple multi mode worm compute model addition docker resource resource computer diversity worm compute model interaction trust resource utilization resource module bidirectional trust update mechanism introduce regulate participant behavior worm compute  conduct mutual influence trust resource utilization influence user behavior trust interaction trust resource utilization resource sharer resource utilization user trust assume resource quality trend resource basically eclipse firefox sharper resource limited participant trend resource stage gradually resource sharer user willing resource eclipse firefox previous improve processing efficiency improve resource sharer resource utilization image KB image resource usage trust  resource sharer display trust resource user initial trust trust eclipse obvious upper limit  spotify resource utilization resource utilization roughly trend trust  apparently  spotify upper limit slowly resource therefore resource user assume resource quality resource utilization proportional trust declares increase trust quickly intensive resource interaction trust resource utilization resource sharer resource usage trust user user user resource firefox initial trust respectively resource utilization participant upward trend user trust obviously due trust participant bellow crossover usage resource resource utilization user user user trust image KB image resource sharer trust trust participant apparently resource utilization proportional increase trust participant trust positive resource utilization resource utilization promote increment trust user behavior trust impact resource user assessment behavior trust model judge malicious evaluation behavior accord deviation user evaluation comprehensive evaluation regulates evaluation behavior adjust user trust impact evaluation behavior trust user resource assume resource quality deviation user evaluation resource resource comprehensive assessment user trust deviation user evaluation inversely proportional increment trust deviation trust deviation user trust decrease sharply image KB image impact resource user assessment behavior trust impact resource quality sharer trust prevent resource sharer resource trust mechanism introduce regulate behavior resource sharer quality resource resource sharer directly affect trust affect overall utilization resource impact resource quality user trust assume malicious evaluation spotify quality resource user assessment user user trust quality resource participant proportional increment trust spotify evaluation indicates spotify quality malicious behavior hence trust participant dramatically image KB image impact resource quality resource sharer trust summary comparative clearly trust resource utilization mutually influential regulate participant behavior effectively increase availability resource module trust reflect trustworthiness resource participant behavior intuitively regulate participant behavior trust parameter analysis trust calculation formula bidirectional trust update mechanism apply regulate behavior resource participant meanwhile trust calculation formula propose bidirectional trust model analyze accuracy error propose trust model evaluate worm compute model contrast trust calculation formula randomly parameter resource trust module resource usage trust module error experimental parameter resource trust module analyze  experimental parameter resource usage trust module analyze  accord prior description validate propose trust model parameter however parameter selection trust calculation formula satisfy principle parameter selection resource sharer illustrate principle parameter selection trust calculation resource user increment trust cannot trust loses effectiveness regulate behavior resource sharer trust peak quickly avoid lose trust mechanism malicious behavior decrease trust increase trust worm node malicious behavior verify reliability trust resource randomly experimental parameter comparison randomly calculation parameter comparison  user  resource parameter user trust within trust user peak quickly parameter hence user loses representativeness trust quality resource error trust mechanism regulate behavior resource sharer trust increment trust resource sharer similarly decrease trust  trust increase quickly user therefore propose trust model loses effective response malicious behavior error resource user behavior trust mechanism therefore illustrates trust propose trust model efficiently regulate behavior resource usage participant user trust within  trust security defense purpose security defense module integrate cooperative defense information internet blockchain generate cooperative defense via intelligence aspect influence detection efficiency malicious URLs influence detection efficiency participant influence threshold detection improve efficiency consensus blockchain difficulty mining access malicious URLs random conduct average detection regard participant access URLs overall malicious url access rate participant efficiency comparison cooperative defense  defense website malicious participant cooperative detection clearly access rate malicious URLs unstable fluctuate cooperative access rate malicious URLs significantly non cooperative apart malicious url access rate cooperative likely reduce zero easy distinguish malicious URLs collaborative situation image KB image efficiency comparison cooperative defense  defense detection efficiency malicious URLs avoid contingency experimental collaborative detection detect continuously increase malicious website participant cooperative detection website malicious URLs malicious url access rate situation gradual downward trend ups overall access rate malicious URLs malicious URLs malicious URLs obviously reduce malicious URLs malicious URLs access rate easy reduce non cooperative trend indicates collaborative detection effective malicious URLs worm compute model elastic compatible malicious image KB image detection efficiency malicious URLs detection efficiency participant detection rate participant respectively URLs malicious overall trend malicious url access rate gradually decrease situation apparently access rate participant cooperative detection experimental increase participant reduces risk detection efficiency malicious URLs image KB image detection efficiency participant detection efficiency threshold worm compute model effective malicious information threshold comprehensive evaluation reduces possibility inaccurate security defense information  worm node comprehensive evaluation malicious web exceed threshold defense malicious web address detection efficiency threshold URLs malicious experimental malicious URLs detect without threshold threshold detection efficiency however detection efficiency malicious web worm compute model tolerate error detection information extent threshold guarantee accuracy malicious information uploaded worm compute model efficiency cooperative defense achieve situation defense scope defense efficiency image KB image detection efficiency threshold performance analysis worm compute architecture propose model blockchain technology configure underlie framework analyze impact worm node network traffic consumption define communication message assume data confirm data authentication communication data upload authentication  communication authenticate data node architecture communication synchronization data confirmation traditional framework data authentication transmit node scheme data confirm synchronize node automatically mutual authentication node broadcasting authentication message unnecessary greatly reduce traffic consumption communication efficiency pow technology blockchain determines data authentication propose model analyze delay node data authenticate simultaneously mining difficulty define delay data submission data upload submit data worm node mining confirmation data data authentication mainly related performance ethereum delay transaction propose model mining difficulty average confirmation data mining difficulty confirmation increase difficulty increase therefore data loss rate particularly update model data meanwhile node increase delay data reduce reduce negative impact increase concurrent meeting requirement propose model influence mining difficulty performance mining   consumption   addition mining difficulty memory consumption mining difficulty confirm memory consumption data experimental illustrate memory consumption decrease increase mining difficulty however increase mining difficulty relatively prolongs transaction confirmation goal propose framework improve security defense capability transaction confirmation situation security defense information update timely concurrent operation therefore valuable exchange relatively memory consumption faster data authentication mining difficulty conclusion future propose concept worm node worm compute related formal description effective information internet timely resource collaborative defense service elaborate scheme worm compute model blockchain technology transaction data cooperative information deliver private chain finally conduct resource utilization collaborative defense respectively performance propose worm compute model effective enhance resource utilization cybersecurity future direction focus reduce compute consumption improve consensus secondly intend hardware resource resource finally implement response defense strategy identify malicious security defense module