amount spatio textual geo tag tweet generate unprecedented variety application location recommendation sponsor application spatio textual subscription tourist issue subscription advertisement publish nearby unfortunately exist monitor spatio textual subscription static subscription boolean subscription article propose novel lamp location aware pub sub continuously monitor relevant spatio textual spatio textual subscription simultaneously knowledge location aware pub sub exist continuous subscription processing lamp employ concept monitor however unlike exist assume static update trigger newly generate continuously monitor massive subscription efficiently propose SQ novel index filter subscription moreover reduce expensive evaluation develop novel approximation technique construction experimental datasets lamp achieves performance baseline approach introduction prevalence social network gps enable mobile device amount spatial textual information refer spatio textual generate fashion popularity location aware pub sub application location recommendation sponsor user register keywords location spatio textual subscription delivers spatio textual geo tag tweet coupon advertisement generate publisher restaurant relevant subscription various location aware pub sub propose focus boolean thereby user overwhelmed volume situation subscription useful unfortunately exist focus static subscription cannot subscription efficiently application subscription tourist advertisement publish nearby location subscription location continuously motivate none subscription propose novel location aware pub sub lamp continuously monitor relevant spatio textual spatio textual subscription simultaneously specifically subscription spatial textual similarity continuously maintain generation expiration movement user location aware pub sub delivers coupon potential consumer user subscription restaurant publisher continuously generate coupon restaurant generate multiple coupon delete generate coupon user register subscription monitor relevant coupon timestamp assume coupon publish user coupon spatial textual similarity subscription closest location keyword sushi coupon publish user user update becomes closer location keywords keywords furthermore thereby becomes closer location aware pub sub newly publish user tip arrow challenge challenge efficiently monitoring subscription spatio textual generate expires subscription monitor date massive subscription spatio textual user varies monitor date subscription movement user monitor subscription straightforward approach spatio textual generate subscription calculate kth becomes moreover expires subscription contains evaluate expiration invalidates thereby evaluate straightforward approach access calculates approach computationally expensive subscription spatio textual frequently generate frequently expire monitor subscription movement user straightforward approach calculates update whenever however approach incurs expensive computational avoid unnecessary computation propose technique subscription evaluate user exit however fail function newly generate user exit moreover evaluate construction algorithm incurs evaluation propose location aware pub sub underlie subscription filter simultaneously  newly generate challenge achieve optimization pub sub focus boolean subscription boolean subscription concept threshold filter moreover affected expire affected generation expiration user movement threshold subscription therefore challenge monitor subscription efficiently overview propose lamp employ novel index namely SQ integrates quad effectively maintain spatio textual subscription SQ filter subscription generate besides propose efficient algorithm retrieve become expires user exit reduce expensive evaluation furthermore develop novel approximation technique construction contribution summarize contribution address monitoring spatio textual spatio textual subscription tackle propose novel lamp develop novel approximation technique construction reduce evaluation propose novel index quad SQ efficiently filter subscription generate conduct datasets lamp achieves performance baseline approach organization preliminary information lamp introduce experimental review related conclude preliminary formally concept throughout introduces technique subscription definition define spatio textual spatio textual  subscription issue user definition spatio textual spatio textual generate publisher define location keywords timestamp generate definition  subscription  subscription define location user keywords tmax request preference parameter function evaluate relevance calculate dist text sourcewhere dist spatial proximity text textual similarity subset abbreviate respectively ambiguity compute spatial proximity utilize euclidean distance dist    euclidean distance  maximum distance spatial subscription exist dist textual similarity widely similarity function namely jaccard dice cosine similarity lamp employ similarity function uniquely determines textual similarity subscription jaccard similarity default function usually similarity text verify performance lamp dice cosine similarity employ within statement  subscription dynamic spatio textual subscriber randomly movement user publisher insert newly generate generation remove generate expiration aim continuously monitor subscription generation expiration movement user throughout register subscription generate moreover newly generate assume specifically spatial textual similarity generate newly generate technique lamp employ concept monitor therefore define relevant concept dominant definition SourceRight click MathML additional feature location definition dominant dominant sourcewhere location dominant lemma literature lemma  local efficiently compute literature propose local LSR subset monitor evaluate user exit LSR model radius text dist LSR compute compute ellipse intersection ellipsis  dist dist sourcewhere max dist parameter approximate ratio obviously ellipse focus intersection LSR LSR shade mathcal cap mathcal cap LSR LSR shade radius become inside inside dist inside become compute compute dominant intersection dominant  inside become contains therefore compute dominant intersection compute LSR theorem complexity LSR construction algorithm calculate intersection polygon dominant proof proof appendix computer society digital library http doi org ezproxy auckland TKDE approximate local construction compute dominant exist thereby incurs evaluation avoid propose novel technique compute approximate asr regardless distribution LSR asr subset partial therefore monitor evaluate user exit asr compute technique dist  lemma lemma dist  lemma compute dominant therefore compute compute ellipsis intersection propose technique compute asr reduce evaluation moreover asr necessarily subset LSR max dist dist  asr superset LSR compute asr quickly update later refer asr ambiguity asr timestamp therefore compute dist compute exit become therefore compute asr asr shade becomes asr becomes shade theorem complexity asr construction algorithm approach obtain subset SR faster framework framework lamp assume subscription pre register lamp lamp subscription update issue delete discus procedure subscription newly issue delete input lamp generation expiration movement user introduce efficiently lamp employ subscription index generation generate identify subscription candidate subscription subscription index update index subscription update user subscription index update expiration expires evaluate subscription obtain subscription index maintains subscription update index subscription evaluate index user subscription index update movement user recall user maintain therefore exit user exit report location lamp lamp expiration framework lamp introduce detail generation expiration recall lamp user exit expiration summarizes mathematical notation throughout summary notation summary notation generation generate identify subscription efficient approach achieve maintain subscription spatial index quad however location subscription unknown cannot simply maintain spatial index lamp employ novel index namely SQ index maintains  subscription quad filter subscription without request location propose novel filter technique detailed SQ introduce algorithm generation update SQ filter technique newly generate identify subscription denote kth subscription  update  spatio textual text filter technique performance propose novel filter technique filter subscription keywords assume assumption remove later keywords compute bound text  lemma  lemma equation derive spatial proximity threshold   sourcethe theorem immediately derive equation theorem newly generate become dist theorem safely prune dist assume however without request location user filter function  safely prune regardless modify filter technique  upper bound  compute  lemma   equation lemma derive spatial proximity threshold   SourceRight click MathML additional feature theorem derive equation theorem newly generate become dist dist minimum spatial proximity theorem safely prune update dist SQ structure SQ maintains  subscription quad exploit filter technique introduce filter subscription without request location node SQ maintains subscription centroid node moreover unlike conventional spatial index SQ maintains subscription leaf node non leaf node illustration SQ node SQ information subscription maintain invert file  spatial proximity threshold filter subscription equation  srn subscription maintain subtree non leaf node additional information trn keywords subscription srn λrn spatial proximity threshold filter  srn equation assume subscription exist indicates centroid subscription SQ construct invert file keywords srn keywords λrn introduce detail spatial proximity threshold λrn define minimum spatial proximity dist definition dist dist dist SourceRight click MathML additional feature location boundary denotes subscription maintain however fully denote partially denote centroid maintain dist dist  define additional spatial proximity definition   sourcewhere  spatial proximity farthest boundary  spatial proximity boundary inequality dist dist SourceRight click MathML additional feature λrn respectively define max source λrn max srn sourcewhere indicates spatial proximity threshold subscription λrn indicates spatial proximity threshold subscription srn trn complexity node SQ invert file subscription maintain node complexity SQ construction function spatial proximity textual relevance desirable subscription index maintains subscription factor however spatial index quad focus spatial factor regardless textual factor SQ maintains subscription leaf node non leaf node textual factor non leaf node maintains subscription node subscription maintain subtree srn decrease thereby spatial proximity threshold λrn becomes tight tends prune introduce algorithm determines node maintain subscription subscription maintain node dist dist generate keywords  update calculate   dist SourceRight click MathML additional feature moreover assume distribution keywords define trn definition trn SourceRight click MathML additional feature contains keyword tmax tmax generate tends prune  subscription satisfy maintain leaf node verify accuracy algorithm algorithm describes insert subscription node SQ update srn trn λrn leaf node update furthermore node capacity maximum subscription leaf node maintain node distribute subscription  node recompute upon subscription distribute leaf node distribute subscription  node  update  recursively execute insert node algorithm insert input srn srn update trn λrn leaf node update node capacity node distribute subscription node recompute distribute subscription node  update insert filter introduce filter subscription maintain node SQ filter perform node filter subscription filter assume generate node subscription filter focus filter subscription maintain node imin dist imin indicates minimum keywords become subscription theorem theorem newly generate imin become imin theorem safely prune subscription imin update assume generate dist imin therefore subscription update therefore candidate subscription node filter filter subscription subtree recall trn keywords srn min trn tmax theorem theorem λrn dist newly generate become srn theorem safely prune update subscription srn λrn dist assume generate keyword trn dist λrn dist therefore prune subscription srn update algorithm  input candidate subscription node SQ node popped min trn tmax λrn dist leaf node srn imin min dist imin imin  algorithm generation algorithm describes SQ algorithm generation filter verification paradigm obtain candidate subscription SQ verify candidate subscription specifically initialize candidate subscription heap node SQ prune node SQ node popped calculate prune node filter leaf node node srn addition execute subscription filter subscription obtain imin imin imin subscription subscription prune therefore iff imin imin filter execute  algorithm describes update subscription user issue location update calculate  update becomes kth update becomes  update necessarily execute  introduce detail later compute asr construction algorithm algorithm  input update calculate  kth  compute asr theorem complexity algorithm generation average keyword SQ maintenance subscription update update SQ node maintains information node centroid update maintains update information ancestor node otherwise remove SQ insert update expiration iqf expires evaluate subscription obtain subscription index maintains subscription evaluate subscription retrieve kth retrieve efficiently lamp employ index namely iqf compose invert file quad frequent keyword recall keyword subscription become therefore iqf maintains invert file keyword however consume PL employ concept invert linear quad creates quad keyword index spatio textual quad keywords however incur memory therefore quad frequent keyword frequent keywords define keywords appearance frequency percent keywords non frequent keyword incurs memory therefore empirically complexity iqf maintains invert file complexity iqf iqf iqf algorithm expiration focus retrieve recall calculate asr obtain retrieve bound  calculate  SourceRight click MathML additional feature checked theorem theorem  theorem safely prune becomes  algorithm describes retrieve likely become descend keyword execute QF frequent keyword otherwise PL QF closer unchecked terminate retrieval algorithm  input compute invert file  frequent keyword QF PL return assume exist frequent keywords iqf construct moreover assume expires calculate keywords  keywords keywords closer keywords PL finally checked becomes theorem complexity algorithm expiration  subscription expire average keyword 6Discussion spatial proximity function euclidean distance spatial proximity function network distance compute subscription  network version maintain subscription filter subscription newly generate textual similarity function jaccard similarity textual similarity function dice cosine similarity lemma definition appendix available online supplemental verify performance similarity function procedure subscription issue deletion subscription issue compute algorithm retrieve compute asr centroid insert SQ subscription delete remove SQ update information node maintain ancestor node conduct extensive verify efficiency lamp algorithm implement conduct PC ghz intel core processor GB ram typical pub sub assume index memory response experimental setup monitoring spatio textual spatio textual subscription exist therefore lamp naive adopt function lamp lamp asr lamp SQ lamp iqf lamp asr LSR instead asr subscription exist index maintain subscription lamp SQ access subscription update generate lamp iqf adopts IQ instead iqf maintain IQ hybrid structure invert file quad IR datasets datasets simulate  consists geo tag tweet inside united  consists public inside united entry  geo location keywords statistic datasets summarize dataset statistic dataset statistic trajectory datasets synthetic trajectory simulate movement user trajectory gps osm timestamp capture periodicity location update extract trajectory trajectory contains sequential synthetic trajectory generate trajectory intersection united sus trajectory contains sequential subscription workload generate  subscription datasets default subscription randomly picked keywords tweet entry subscription keywords trajectory subscription randomly chose trajectory extract generate trajectory subscription addition preference parameter randomly chosen random kmax throughout kmax unless otherwise specify workload  initial generate default  timestamp generate update generation expiration default percentage expiration update generation expiration expiration application introduce rare generation therefore default report update average update subscription generation expiration movement user per update generate processing gop expire processing eop movement user processing  tune tune percentage frequent keywords keywords recall keyword appearance frequency percent keywords report retrieval average retrieve memory datasets although memory increase increase retrieval almost constant therefore default strike retrieval memory impact impact experimental comparison LSR asr report computation average compute user exit per LSR asr datasets parameter default subscription exit per asr slightly LSR asr tends LSR however asr compute avoid computation dominant intersection timestamp asr computation become overhead update subscription exit comparison LSR asr comparison LSR asr accuracy verify accuracy dataset subscription report average error average calculate node filter sufficiently accurate average error regardless accuracy overall performance update parameter default lamp regardless trajectory datasets  update longer  vocabulary    subscription tend keywords thereby subscription newly generate increase keyword mention asr performance LSR therefore lamp faster lamp asr moreover lamp faster lamp SQ lamp filter subscription SQ generate average update lamp faster lamp iqf advantage aspect memory memory osm lamp memory lamp iqf recall lamp iqf adopts IQ instead iqf maintain IQ incurs memory node IQ creates invert file keywords maintain subtree node memory GB memory GB lamp lamp SQ examine impact frequency update lamp iqf competitor moreover osm trajectory dataset update dataset almost impact kmax examine impact kmax lamp consistently update faster lamp SQ longer update kmax increase kmax increase possibility expire subscription becomes recalculation increase eop increase kmax increase moreover average  subscription becomes newly generate likely affect subscription kmax gop lamp increase gop lamp SQ constant lamp SQ subscription generate therefore difference update lamp lamp SQ becomes slightly kmax increase impact subscription examine impact subscription lamp update faster lamp SQ longer update increase difference update lamp lamp SQ becomes increase plot lamp SQ subscription generate lamp filter subscription difference subscription update becomes increase difference update becomes impact initial examine impact initial  lamp update faster lamp SQ longer update  increase  increase newly generate affect subscription possibility expire subscription becomes however user exit checked recalculate increase therefore update slightly increase impact frequency update examine impact frequency update lamp winner moreover longer update increase newly generate expire gop eop increase linearly impact percentage expiration examine impact percentage expiration recall generate update timestamp generation expiration lamp winner lamp lamp iqf efficiently update SQ gop update increase increase gop lamp SQ eop lamp SQ access subscription update generate update lamp SQ decrease increase impact max kmax impact kmax impact impact impact  impact impact impact epsilon impact related review exist spatio textual pub sub query processing spatio textual query spatio textual query widely propose combine spatial index quad textual index invert file summary spatio textual query processing available text filter technique performance addition propose invert linear quad IL quad creates quad keyword IL quad index spatio textual query employ concept IL quad index lamp recently variety spatio textual query reverse spatio textual query spatio textual query aware spatio textual query however pub sub recently location aware pub sub boolean AP subscription location newly generate keywords keywords propose moreover literature similarity query pre threshold monitoring literature address monitoring spatio textual subscription propose maintain subscription index quad filter subscription generate however assume location user subscription static cannot simply maintain subscription query processing address monitoring spatio textual query propose compute query evaluate user issue exit however literature generation propose compute whenever generate incurs evaluation literature impact newly generate become user propose however focus query conclusion application pub sub query processing attract attention address monitoring spatio textual spatio textual subscription tackle propose novel lamp lamp employ novel index namely SQ maintains subscription quad filter subscription generate moreover propose efficient algorithm retrieve become expires user exit furthermore developed novel approximation technique construction evaluate lamp datasets lamp achieves performance baseline approach