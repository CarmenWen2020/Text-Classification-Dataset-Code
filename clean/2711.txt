graph data unlocked explore topology metric network computational approach exploration perform global computation graph ingest graph processing digital representation extract information graph involves processing globally machine approach hardware usage distribute homogeneous heterogeneous machine dedicate performance compute hpc focus processing bulk graph consist execute algorithm vertex rank community detection insight graph structure relevance distribute flink spark library  graphx built enable task improve performance achieve technique classic load balance gear reduce communication overhead explore offs delay computation relax accuracy survey firstly familiarize reader graph datasets application overview aspect graph processing landscape dimension dimension detail encompass paradigm express graph processing coordination communication model distribute graph processing partition technique definition related potential graph update survey aim experienced software engineer researcher graduate understand landscape limitation graph processing introduction graph data almost everywhere analyse structure web bio informatics data representation via  graph metagenomics  relationship chemistry structure distribute computation massive parallel ensemble parallel topic model academic research centre collaboration player facebook microsoft google graph processing contribute development source framework graph facebook graph billion vertex billion domain domain activity described relation graph social network portion social interaction internet facebook billion monthly active user december twitter monthly active user linkedin monthly active user december network vertex user friendship follower relationship furthermore user message message functionality graph associate web estimate existence billion website october become host  commercial educational recreational activity facet daily internet advent business model built reachability reputation website google yahoo bing application graph theory web structure mature decade technique enable analysis massive network telecommunication network decade enable communication structural graph approach vertex network user phone relevant telecommunication ass closeness relationship subscriber calculate churn rate enact efficient marketing strategy foreign signal intelligence  activity recommendation graph approach recommendation heavily explore decade amazon ebay suggestion user user profile similarity increase conversion rate target advertising structure underlie analysis graph transport smart iot graph layout information transport network comprise circulate transport internet iot device 5G  iot device engage collaborative purpose implement security framework graph epidemiology analysis disease propagation model transition health infection recovery important public health ensure standard traveller population graph apply localize health related topic reproductive health sexual network transmission infection epidemic forefront application graph theory health preservation recent covid data graph illustrate magnitude graph focus web graph web domain web crawl graph datasets available laboratory web  web data web graph domain crawl image motivation survey highlight firstly recent positive tendency related graph processing aspect explore optimize paradigm propose proliferation multiple survey contribution systematize graph processing towards consensus terminology offering discussion establish hierarchy concept inherent effectively vast contribution capture maturity challenge graph processing correspond response developed academia proposition document therefore identification dimension relevant respect graph processing complex merely listing graph processing architecture communication coordination within distribute graph processing dimension interconnect deepen individual overlap others eventually distribute distribute graph across machine necessity partition graph distribute afterwards consequence define coordination synchronous versus asynchronous node orthogonally relation data computation graph processing define vertex graph social network dictate follower relationship specify computation solely vertex exclusively component graph definition component herein cornerstone aspect graph processing individual exist survey dimension definition secondly exhaustive graph processing debut distinctive feature explore exist machine simply  amount memory instead employ compression technique graph processing orthogonal machine configuration processing graph important challenge technique rely heuristic graph improve execution advantage graph structure specific popular algorithm increase louvain community detection heuristic inform vertex community decision information specific vertex assign colour scheme vertex colour parallel without adjacent vertex concurrently approach heuristic differentiate processing vertex vertex rely application partition technique enable processing graph machine memory capacity multi machine distribute cluster machine homogeneous heterogeneous purpose performance compute hpc coordination literature principle influence granularity parallelism coordination perform purpose data processing library graph processing detail graph structure data focus graph processing enable grain technique increase performance scope meta analysis discus structure exist survey complement highlight important relation graph processing concept chronological analysis graph processing document roadmap organize around graph algorithm highlight relevant aspect graph processing task graph algorithm computational representation detail important computational representation graph typically compression technique graph processing computational model analysis graph conceptually manipulate contribution granularity dimension partition approach decompose graph data computational parallelism distribution showcasing model granularity dimension dynamism enumerates scenario definition dynamism graph processing graph temporal data manipulate graph representation constantly update information dimension workload discus graph processing workload scope analytics storage machine memory parallel approach architecture describes important performance compute focus multi core multi processor architecture distribute graph processing enumerates focus distribute graph across machine enable processing conclusion remark graph algorithm aspect inherent graph processing task graph extrapolate specific algorithm compute important vertex arbitrary function pagerank community choice algorithm relevant definition relevancy algorithm graph oppose localize information query express graph query previously typically execute parallel fashion resource parallelism available implement algorithm developer manually implement parallelism merely functionality underlie framework apache spark apache flink challenge graph processing developed goal improve manipulate extract graph data technique achieve become refine aspect graph structure gain prominence challenge comment challenge parallel graph processing identify previous data driven computation graph vertex establish computation perform algorithm graph application data driven observation shift focus data elementary computation survey multiple literature computation perspective vertex sub graph irregular distribution vertex usually constitute uniform graph embarrassingly parallel benefit parallelism easy achieve define computation graph assign graph processing skewed data negatively impact load balance unless tailor approach undertaken account graph locality locality optimization processor apply inherently irregular characteristic graph due locality computation important mention manifest distribute cluster graph mitigate technique replicate specific vertex specific graph partition strategy vertex centric approach data access computation ratio author portion graph processing usually dedicate data access graph algorithm memory disk fetch consume phase relative actual computation vertex approach focus balance network storage latency computation minimize impact underlie data access compute algorithm graph algorithm execute globally graph distinct graph query scope computation drastically respect computational resource satisfy however graph database neoj extension neoj  library cypher algorithm global computation graph query previous survey scalability graph processing framework sec defines categorization graph algorithm reproduce traversal node employ recursive exploration neighbourhood termination criterion met desire node depth instance calculate source shortest hop neighbourhood breadth bfs graph analysis algorithm scope aim understand structural topology graph execute grasp diameter distance vertex density ratio respect maximum distribution component identification concept component subset graph vertex vertex component relevant detect  network graph connection component bridge remove component community detection community consist vertex within community outside technique compute minimal label propagation others centrality calculation importance vertex respect network definition exist pagerank betweenness centrality heuristic relevance span betweenness related algorithm aim recognize graph context graph anonymization graph structure entity vertex identifiable anonymization procedure neighbourhood anonymity underlie computation graph specific task granularity vertex graph building bridge mathematically define byte computer computational representation detail concept graph theory preliminary notion basis familiarize reader scientific document graph application processing novel technique literature graph usually define vertex vertex sometimes refer node link undirected graph unordered graph vertex usually graph multigraph graph vertex direction necessarily multigraph multigraphs application graph database neoj model relation vertex additionally graph vertex commonly underlie extract information graph digital representation important understand operation perform graph choice representation approach adjacency adjacency matrix choice adjacency matrix usually depends amount graph graph maximum graph sustain dense graph adjacency matrix performance wise however graph sparse node efficiently storage wise adjacency matrix consumes adjacency allows constant access representation graph computational representation sample graph image sample graph adjacency matrix correspond adjacency adjacency matrix outgo vertex vertex literature subscript notation refer presence specific matrix notation relevant theoretical purpose another representation vertex target vertex otherwise matrix configuration graph undirected later explicit source target symmetry matrix implementation graph processing undirected graph graph undirected vertex direction efficient graph become necessity explore realm graph choice adjacency matrix bound density graph justify representation factor graph storage limitation performance requirement focus compress sparse csr yale format matrix array non zero extent index representation format omit array array non zero index zero array index array pipe belong index index therefore index array array index array per matrix non zero array variation without encodes index index array matrix index index array matrix index access index index array return index index array inclusive index index exclusive index array index inclusive exclusive index index exactly generally matrix index access index index array return dictate inclusive exclusive index interval index array interval index array contains index index reader detail representation construction compress sparse csc focus suggests approach advantage domain specific graph  exploit web graph increase compression important exploit locality link within domain web graph lexicographically link another similarity lexicographical likely neighbour perform  highlight similarity concentrate previously  regard web graph technique exploit author obtain compression social network  extensive analysis data available online laboratory web  another data structure employ efficiently graph static graph binary relation binary relation web graph social network rdf data internally compress vector conceptually recursively subdivide graph adjacency matrix individual matrix MX quadtree strategy sec matrix assign contains zero contains sample adjacency matrix correspond representation decomposition representation adjacency matrix actually height  node contains data internal node leaf node leaf adjacency matrix data structure efficiently sparseness cluster web graph sample adjacency matrix correspond representation image another proposal graph graph representation combine compression ratio overhead enable competitive processing performance compression achieve compression ratio  speedup author achieve apply logarithm approach graph application adjacency array basis graph vertex IDs offset information theory author storage bound instance entity meaning distinguish awareness adjacency array incorporate vector author library development analysis comparison graph representation compose scheme described relevant technique graph compression literature graph compression  framework recently structure later focus cast graph compression update furthermore possibility dynamism data graph longer static analyse factor representation choice graph hardware storage purpose efficient access   approach concept efficient representation incorporate summary graph structure reduce perform computation context graph update dynamic version structure propose purpose compact representation dynamic vector implement data structure compact representation dynamic graph however representation dynamic compact vector suffers bottleneck compress dynamic index suffers logarithmic slowdown adopt dynamic vector recent comparative graph operation implementation perform innovative implement dynamic graph employ data structure document collection  technique avoid bottleneck compress dynamic index graph processing computational model detail relevant paradigm computational express computation graph processing program model graph processing document literature define granularity computation distribute across cluster communication perform synchronize computational across machine vertex centric  vertex centric paradigm vertex  debut google pregel source implementation model apache giraph public model graphlab powergraph  computation vertex user algorithm logic express perspective vertex vertex local function information vertex incoming neighbour perform computation potentially update vertex message outgo vertex vertex parallelization vertex program receives graph vertex function input extend concept vertex scope adjacent vertex vertex centric model scatter apply scatter model superstep paradigm superstep user function execute vertex parallel status active terminates vertex message user define function model scatter scatter vertex centric message message update application scatter phase vertex execute user define function sends message along outgo phase vertex message applies user define function update vertex model apply scatter sum apply scatter introduce powergraph aim limitation encounter vertex centric scatter operating graph discrepancy ratio vertex imbalanced computational load superstep vertex computationally become straggler consists decompose vertex program phase computation evenly distribute across cluster achieve parallelize computation graph phase user define function apply adjacent vertex parallel centric  centric approach refer  popularize chaos specify computation paradigm optimize usage secondary storage network communication machine graph sub graph centric  previous model communication overhead due grain sub graph structure reduce overhead component centric category denotes sub graph centric approach partition centric neighbourhood centric partition centric instead focus collection  vertex considers sub graph graph information vertex freely propagate within physical partition oppose vertex centric approach vertex access information immediate neighbour allows reduction communication overhead ultimately partition becomes parallel execution sub graph expose user function sub graph centric approach graph  neighbourhood centric allows physical partition sub graph update exchange information sub graph partition replica message sub graph partition completion refer reader analysis distribute algorithm sub graph centric graph platform model mega mega model introduce  graph computation machine model compose function define user exchange function apply adjacent vertex apply function synchronize vertex replica global sync function perform computation update partition mini batch function execution sequence function graph processing model achieve parallelism harness multiple machine cluster define graph overview employ graph processing dimension partition graph partition important graph processing importance manifest format user domain application goal splitting graph relevant data partition hyper algorithm employ graph across computational infrastructure typically within distribute coordination layer across processing core within machine machine load distribute graph processing computational distribute across worker communication depends replicate partition approach partition cyclical scope distribute processing execute graph partition distribute domain specific however graph algorithm execute graph data incurs partition distribution underlie distribute computational infrastructure graph partition recent gain additional depth decade factor optimization partition increase complexity graph processing explore partition relevant dimension classify graph processing approach enable parallel computation graph approach becomes distinctive feature graph partition aim node graph mutually exclusive minimize partition effectively node graph minimization communication partition partition assign specific worker distribute partition task node node achieve partition exist literature cluster community detection interchangeable cluster algorithm graph cluster necessarily cluster community execute cluster algorithm social network graph cluster cluster necessarily cluster community community detection algorithm density interconnection within community cluster community detection aim identify similarity node underlie assumption graph proposal task graph cluster similarity graph partition node however objective function define differently constraint graph partition focus partition beforehand typically constraint earlier balance graph partition defines balance partition vertex graph component almost constant balance partition literature partition challenge enable distribute processing goal distribute vertex model EC vertex model VC graph across machine perform detail formulation vertex furthermore combination computational model vertex vertex centric centric partition graph computation vertex specific specific depiction vertex sample graph image EC balance partition define partition associate vertex centric  computational model graph processing reproduce definition sec graph partition partition pairwise disjoint union  max𝑖 application objective partition perform adapt machine characteristic load machine maximum compute graph structure secondary memory balance partition sequential storage access decrease longer focus vertex VC vertex model goal distribute across partition partition vertex partition adjacent balance per partition minimize vertex objective formulate   vertex achieves performance graph web structure social network hybrid HC hybrid strategy employ perform heuristic vertex  allocates incoming vertex worker vertex vertex vertex partition partition vertex graph analyse succession placement decision online vertex decision location previous assumption information vertex rely partition random heuristic linear deterministic greedy gemini chunk assume adjacency model  vertex partition grid heuristic powergraph greedy heuristic  partition  consideration vertex aspect approach regard achieve parallel distribute execution partition choice load graph fully load memory partition distribute partition distribute partition algorithm label propagation variation specific label vertex influence neighbour influence label global representation graph constraint minimum maximum partition  performs vertex centric graph partition reinforcement assigns agent vertex agent assign vertex partition probability distribution refine feedback author approach partition multi objective multi constraint achieve phase distribute partition partition perform calculation repeatedly perform dynamic graph partition graph longer static vertex remove social network implies graph perform computation evolve partition become inefficient predictable algorithm runtime characteristic becomes feasible vertex supersteps graph traversal algorithm monitor load communication machine migrate vertex appropriate technique propose purpose others  repartition massive graph adapt structural gps reassigns vertex communication pregel reduction message exchange dynamic  dynamic partition advantage output load balance communication reduction due heterogeneous hardware runtime characteristic partition summary employ graph partition strategy offering performance impact factor active vertex influence machine load communication expensive replication vertex perform partition balance communication machine load partition challenge vertex centric relevant due widespread model author approach graph partition partition graph serially pas permanently assign partition vertex assign partition distribute dynamic adapt partition monitoring load communication machine algorithm execution distribution achieve data factor beyond eval loop scope dynamic basis develop described depth analysis partition vertex model relation dynamic data invite reader decompose graph cornerstone efficient distribute computation graph equally important aspect determines approach computation dynamism graph static graph perform analytics scenario maintain graph available query susceptible update dimension dynamism dynamism relevant dimension graph processing due exist meaning associate literature attribute static graph completely unrelated dynamism relation due processing graph processing ingest unbounded update statistic update processing static graph processing approach static graph perspective chaos centric approach target graph immutable static obvious graph processing classify however dimension actually spectrum immutable perspective static graph graph structure memory secondary storage machine across cluster node discard proxy criterion simply update mathematical graph recent information spectrum author definition literature temporal graph essence static graph annotate temporal information allows recreate domain graph structurally valid timestamps constraint computation introduces temporal graph representation encode temporal data graph retain temporal information data metric temporal graph representation explore dynamic temporal data graph algorithm without data driven simulation  storage execution temporal graph achieve efficiency database graph query  schedule bulk operation maximize benefit memory data locality explores relation locality parallelism incremental computation enable mining task temporal graph information topic temporal graph reader graph algorithm scenario empty graph without fix vertex algorithm insert graph remove desire algorithm developed minimize parameter graph data structure storage recover exist graph computation reader recent framework aim dynamism  data structure graph sketch dynamic graph sketch technique apply incidence matrix input graph approximate structure connectivity consume generate probabilistic data structure graph multi pas graph algorithm algorithm update approximate computation quality additional complexity emerge model behaves manipulate across sort dynamic graph algorithm focus cast approximate combinatorial graph connectivity shortest distance spectral processing insertion deletion objective algorithm quickly integrate graph update  machine analytics dynamic graph partition dynamism relevant aspect scope graph processing academia execute workload dimension workload workload perform graph processing important role classify task perform graph database global algorithm concept analyse graph context user graph scope data analysis usually category retrieve instance domain specific relation graph multi hop query usually graph database emphasis optimization data query storage online transaction processing scenario accompany graph query  execute query return graph potentially execute algorithm graph pagerank component detect community shortest task performance wise aim achieve performance computational throughput distribute machine configuration focus lean data analytics aspect former scenario graph database neoj  others database graph query usually  cypher gremlin built graph sharding horizontal distribute graph across storage computational infrastructure outsource storage medium database technology hbase cassandra others centralize server cluster node specific purpose redundancy employ scheme graph efficiently offering transaction mechanism graph perform query latter graph data processing spark graphx library flink  library mention distribute processing framework advantage multi core machine cluster library expressive computation graph code graph algorithm composition workflow abstract away detail programmer regard distribute computation orchestration internal implementation graph algorithm important definition regard computational task online analytical processing olap online transaction processing OLTP olap approach enable multi dimensional analytical query quickly instance task business reporting sale management reporting business management financial reporting others OLTP refers enable manage transaction orient application transaction meaning computational context atomic database OLTP retail sale financial transaction application tend throughput update insertion intensive availability recoverability concurrency earlier graph processing task associate OLTP goal representation graph quickly ingest information efficiently regard consumption access execute update acid subset task numerous graph database description semantic representation graph model specific purpose latter task associate olap focus extract data task typically graph processing database olap task  graph due dynamism considerable overlap OLTP task graph database overlap olap task graph processing distinction olap OLTP task dimension perfectly graph processing landscape distinction future taxonomy graph processing landscape dimension dimension account influence graph processing architecture exist exhaustive specific machine parallel processing cluster storage tailor graph database machine memory parallel approach graphlab publish framework implement parallel machine later extend distribute setting retain data consistency guarantee author evaluate amazon EC outperform equivalent mapreduce implementation performance specifically craft mpi implementation graphlab graph program reside ram chromatic adjacent vertex colour enable efficient network bandwidth processor author evaluate application netflix movie recommendation video segmentation entity recognition source apache license grace synchronous iterative graph program model separation application logic execution policy implementation parallel execution synchronous user specify asynchronous execution policy grace graph model computation express perform pregel additional flexibility user relax synchronization computation achieve user define function update schedule priority vertex message vertex computation within iteration grace target memory distribute scenario initial prototype focus memory source code available ligra lightweight graph processing framework target memory parallel multi core machine graph traversal algorithm framework primitive logic vertex   data traditional graph described earlier another subset vertex interface enable processing situation oppose pregel giraph code ligra array vertex partition target vertex source vertex array partition source vertex target vertex author achieve performance mention ligra algorithm modify input graph available mit license  approach multi core machine memory configuration performance interactive analytics python scalable parallel graph hash node execution exploratory interactive offering graph algorithm transformation input data graph  source available bsd license polymer numa aware graph analytics multi core machine source apache license implement innovate differentially allocate topology data application define data mutable graph accord access minimize remote access polymer random access convert random sequential remote access lightweight vertex replication across numa node built hierarchical barrier increase parallelism locality orient balance partition skewed graph adaptive data structure function active vertex ligra galois core intel machine hyper thread core amd machine algorithm across data polymer consistently almost achieve execution graphmat framework aim bridging user friendly graph analytics native optimize code vertex centric framework without sacrifice performance vertex program exclusively sparse matrix performance operation graphmat graph algorithm express vertex program performs generalize sparse matrix vector multiplication achieve performance framework faster graphlab galois  achieve multi core scalability faster thread implementation core machine source available specific intel mosaic heterogeneous machine storage medium nvme SSDs massively parallel processor xeon phi developed enable processing trillion graph explicitly graph processing component goal compact representation graph hilbert tile locality load balance compression hybrid computation model vertex centric operation host processor centric operation processor mosaic source mit license performance compute hallmark performance compute apply graph processing merit encompass algebraic decomposition graph operation implement translate across homogeneous layer parallelism across core across CPUs mention knowledge relevant parallel boost graph library  extension boost graph library distribute graph computation library offering abstraction communication medium mpi graph adjacency distribute across multiple processor  vertex processor vertex outgo processor vertex  evaluate compose compute node via infiniband available custom boost software license  parallel graph distribute memory library offering linear algebra primitive sparse array graph analytics considers adjacency matrix graph sparse matrix data structure  matrix computation define decouples parallel logic sequential computation mpi however mpi implementation advantage flexible memory operation author target hierarchical parallelism supercomputer future available custom license  technique processing graph distribute memory handle graph partition vertex hub dummy vertex reduce communication  allows algorithm designer define vertex centric procedure distribute asynchronous visitor queue queue asynchronous visitor tackle load imbalance memory latency  target supercomputer cluster local NVRAM available gnu lesser public license distribute graph processing previous detailed perform analytics enable execution graph algorithm focus specific hardware distribute memory relevant graph processing scope analytics olap architecture local commodity cluster execution flexibility deployment scenario differentiate previous relevant literature giraph source implementation pregel approach graph processing spark flink source distribute processing graph processing apis apache giraph source java implementation pregel tailor graph algorithm model license apache license efficient scalable fault tolerant implementation cluster commodity hardware hiding implementation detail underneath abstraction extend giraph vertex  model graph  hadoop mapreduce implementation graph giraph allows computation sharded aggregator relevant compute comprise intermediate data node orient input core computation limited partition memory partition local disk cluster compute setting core partition across disk giraph attempt vertex memory network transfer message improve giraph performance optimize message overhead machine memory  highlight message overhead avoid distribute processing scheme  source apache license dataflow processing offering complexity abstraction programmer allows programmer implement graph algorithm weakly component approximate shortest others achieve performance  implement allows programmer apis express algorithm logic api performance concept important benefit offering tiered program abstraction  primitive combination dataflow primitive  flink finer grain iterative computation extension flink architecture detailed enrich ability framework user apache flink formerly  framework built iteration delta iteration efficiently aid graph processing machine algorithm license apache license graph processing api  package algorithm pagerank source shortest community detection others flink java python scala explicitly vertex program model vertex  described generic model arbitrary computation message vertex scatter logic message production logic update vertex typically program memory requirement concurrent access   vertex potentially non intuitive computation sum apply scatter scatter phase parallelizes computation message phase distributes computation vertex vertex exclusively neighbourhood previous model vertex message vertex identification hadoop file amazon google storage others delta iteration flink relevant advantage computational dependency improve performance flexible windowing mechanism incoming data windowing mechanism user specific logic researcher extend  construct application incoming data graph apache spark graphx graph processing library license apache license graph processing framework built spark framework java python scala enable fault tolerance author target graph processing express graph specific optimization distribute optimization graph maintenance graphx graph reduce collection author compose graph collection distribute dataflow framework operation additional vertex naturally express collection vertex graph computation comparison analyse collection  evolve graph processing framework spark java scala computation evolve graph consistent resilient graph snapshot operator manipulate  fault tolerant graph snapshot batch data arrives periodically load data graph database reuses operator graphx spark algorithm label propagation resilient graph  introduce online rectification model error underlie graph modification online fashion minimal api programmer implement graph snapshot generation windowing operator differential computation mechanism source code available  library distribute temporal graph analytics built flink java scala focus interval graph associate author graph information facebook wikipedia evaluate framework  defines temporal graph model available online although information pertain licensing knowledge currently flink spark widely distribute processing framework  although code available built spark dataflow program dataflows grant flexibility program implementation execution decouple program logic translate worker cluster graph library efficient graph update processing semantics maintain graph structure computation update graph batch processing apis dataflow graph become excessively dataflow optimizers lock phase explore optimization execution graph periodically secondary storage avoid progressively execution flink  library  source apache license distribute graph analytics research framework active development operation  extends  additional specialized operator graph operator abstract query graph operator implement composition filter transformation flink dataset  adopts cypher query typically graph database neoj express logic translate relational algebra underlies flink dataset spark graph processing library graphx built batch processing api flink  suffer previously mention limitation api extend functionality graphx harness spark dataframe api  source apache license library implementation reveals operation  effectively without simulate  api equivalent program graphx lend conceptual  due lack syntactic display parallel flink spark graph processing ecosystem built  equivalent spark graphx implement scala vertex manipulate spark resilient distribute datasets RDDs conceptual precursor flink dataset spark dataframe api enable tabular manipulation data  another graph processing library spark interoperability overlap functionality graphx integrates tabular perspective spark dataframe api perform traversal query graph via SparkSQL  graph analytics capability spark  flink contrast flink spark distribute dataflow ecosystem graph processing image chaos grouped relevance centric  model employ explore novel balance network latency SSDs increase performance alternative traditional vertex centric approach computation perspective instead vertex optimize storage locally source introduce concept centric graph processing via partition expose centric scatter program model motivate lack access locality traverse obtain performance maintain vertex partition ram secondary ssd magnetic disk storage iterate update vertex sequential access vertex random access decrease performance innovative enforces sequential processing centric improve performance available apache license chaos foundation  secondary storage perform graph processing chaos achieves scalability multiple machine cluster compute functionality load balance randomize steal sequential access storage adaptation partition enable parallel execution chaos compose storage sub computation sub former exists concretely storage machine concern vertex update computation sub previous highlight primary resource bottleneck storage device bandwidth chaos storage computation communication storage device optimize bandwidth bottleneck release apache license graph processing grouped improvement propose important concern aware graph processing  graph computation adopts partition compute strategy vertex author approach pregel graphlab focus hiding latency evenly distribute vertex machine resource locally accessible imbalanced computation communication vertex frequent graph another powergraph graphx focus evenly parallelize computation partition machine incur communication vertex  release apache license  combine snapshot processing background explicit alternative custom function besides assess update impact apply incrementally propagate outcome across graph distribute capture relation incoming data built maintain timely update continuous data architecture ingest node register graph update operation identifiable transaction distribute graph node node latter distribute memory  performs computation static snapshot simplify algorithm source code online tornado iterative analysis evolve data implement apache storm asynchronous bound iteration model offering grain update ensure correctness observation loop usually converge quickly iterative closely related approximation error execution model built loop continuously incoming data instantly approximates whenever request model creates loop loop loop recent approximation algorithm source code online  debut runtime technique trim approximation subset vertex impact deletion removal invalidate convergence approximate pertain monotonic algorithm  identify impact deletion adapt network impact computation achieve despite focus monotonic graph algorithm scope narrow selection algorithm update vertex implies neighbour criterion   recent license mit license generalize incremental program model enable development incremental version complex aggregation  graph scalable recommendation pinterest user specific pin pinterest user pin pin combination image text  chooses pin related query billion candidate pinterest execute custom  random algorithm graph billion vertex billion server around recommendation request per millisecond latency author deployment  benefit ram machine cluster amazon aws xlarge machine 4GB ram prune pinterest graph billion vertex billion around 0GB ram setup yield advantage random machine increase performance multiple execute graph parallel parallelize machine cluster relevant apply graph theory recommendation scalable processing graph bias random algorithm user specific preference graph prune technique disregard diverse diffuse random non prune graph billion vertex billion source code available online  proposes syntax detect temporal graph introduces novel data structure efficiently graph computation unification graph data processing graph offering api satisfy temporal source code available gps source bsd license scalable graph processing java fault tolerant easy program algorithm execution graph adopts pregel vertex centric api extends feature global computation easy express efficient dynamic  scheme reassign vertex worker computation message distribution vertex adjacency across computer node improve performance something powergraph  later adopt cluster machine amazon EC author gps initial version amazon EC instance graph vertex billion source available bsd license  sub graph centric program abstraction framework distribute persistent graph storage graph analytics commodity cluster aim combine scalability vertex centric  approach flexibility memory sub graph computation  java  sub graph vertex remote vertex sub graph partition sub graph partition definition merge sub graph evaluate cluster node core intel xeon CPUs GB ram TB SATA hdd author execution  worker per node giraph default worker per node achieve faster execution algorithm pagerank component source shortest source code available information pertain licensing source code available information regard licensing  backward sweep execution accelerate propagation asynchronous graph processing asynchronous graph processing vertex maintains asynchronously update iterative fashion  relies observation propagate faster processing vertex sequentially along graph achieve execution analyse graph algorithm across datasets powergraph graphlab source available graph graph processing java vertex graph partition consideration diversity vertex traffic heterogeneous network relies strategy adaptive migration reduce frequency communication across expensive network link author focus vertex partition graph distribution graph partition technique load initial partition graph cluster worker load local memory adapt distribute migration algorithm address dynamic heterogeneity aware partition evaluation graph outperform powergraph vertex partition algorithm respect communication source code available information licensing  built ligra interface maintain collection bucket vertex insertion bucket deletion evaluate bucketing algorithm breadth core approximate author bucketing algorithm maintain vertex unordered bucket algorithm extract vertex bucket perform computation update bucket extract vertex neighbour breadth vertex contains vertex distance source vertex multi core machine core CPUs 4GHz TB memory achieve performance improvement data galois ligra galois source code available  core inspire pregel target efficient graph processing cluster commodity machine gigabit ethernet contrast core focus specialized hardware author focus vertex centric program data intensive cpu compute message network transmission  mask disk overhead message transmission parallelism computation communication eliminates expensive external memory operation chaos evaluate pagerank source shortest component  evaluate distribute core   chaos machine graphchi representative memory pregel giraph achieve performance scenario source available  graph analytics exploit external memory without compromise efficiency introduce abstraction nest windowed achieve scalability increase efficiency processing neighbourhood centric analytics neighbourhood around vertex exceed available memory budget model regard sequence vertex adjacency goal efficiently neighbourhood query graph query define author enumerate computation fix memory model user computation define update sequence update generate vertex update target vertex ID update  goal balance workload across machine balance vertex machine focus balance vertex machine memory budget source code available online  dynamic graph analytics framework propose handle evolution graph aim improve approach processing dynamic graph repeatedly static graph analytics snapshot  proposes adaptation apply scatter enables implementation incremental graph processing algorithm across multiple cpu core introduces optimization heuristic static dynamic execution built user define graph native benchmarking code implement experimental evaluation graphmat  heuristic computation  faster fix strategy source code available focus specific technique specific hardware SSDs gpus framework propose instruction multiple data simd capability gpus graph processing  performance parallel graph program framework achieve billion traverse per gpu graph compress sparse csr data structure chooses schedule strategy frontier vertex active iteration encapsulates complexity gpu architecture enable dynamic runtime decision optimization strategy user sequential code framework  available source project license apache license integrate former  available online  cuda graph processing framework motivate negative impact irregular memory access compress sparse graph csr representation  overcomes organize graph autonomous shard representation shard  gpu hardware resource mapped fully coalesce memory access accounting input graph sparsity sparser graph computation avoid gpu utilization concatenate CW framework allows user define vertex centric algorithm graph gpu source available mit license gunrock source apache license cuda library graph processing target gpu implement data centric abstraction focus operation vertex frontier graph algorithm achieve magnitude speedup powergraph performance gpu graph library operation bulk synchronous manipulate frontier subset vertex within graph relevant computation gunrock couple performance gpu compute primitive optimization strategy program model quickly develop graph primitive evaluate breadth depth source shortest component pagerank lux distribute multi gpu graph processing exploit aggregate memory bandwidth multiple gpus locality memory hierarchy multi gpu cluster proposes dynamic graph  strategy enable balance distribution workload minimal overhead improve performance performance model insight optimal node gpus optimize performance lux aim graph program iterative computation vertex iteration update become visible iteration execution model optimizes performance gpus enables optimization cache locally aggregate update gpu memory optimizes algorithmic efficiency maintains frontier queue performs computation vertex frontier source code available apache license frog asynchronous processing framework author colour algorithm suffer parallelism due colour graph billion vertex frog vertex processing colour distribution propose efficient hybrid graph colour algorithm rely relaxed pre partition vertex classification colour without adjacent vertex assign colour execution frog scan graph colour vertex colour update parallel gpu graph processing partition data transfer overlap gpu kernel function execution minimize pcie data transfer overhead source license gnu public license aspen graph extension ligra interface graph update author developed data structure achieves cache locality lower operation efficient theoretical perspective applies chunk scheme multiple node scheme relevant node remain associate node employ compression parallelism author evaluate publicly available graph billion multi core server TB memory source code available online albeit license information  introduce approach distribute memory graph analytics heterogeneity partition policy processor gpu cpu program model  programmer implement application memory program choice interface application  enable execution heterogeneous cluster  optimizes communication advantage temporal structural invariant graph partition policy memory numa platform nvidia gpus program model program implement library concurrent data structure scheduler memory allocator runtime executes program parallel parallelization strategy optimistic execution  available clause bsd license  data structure efficient computation dynamic sparse graph matrix gpus platform independent implement memory allocation operation instead standard function implementation internal data manager array adjacency reclaim empty memory manage evaluate nvidia tesla gpu target update rate algorithm breadth bfs sparse matrix vector multiplication  available clause bsd license  introduce fully dynamic graph data structure perform autonomous memory management gpu enables reuse memory reduces memory requirement fragmentation implementation vertex centric update scheme allows update lock reuses vertex index achieve efficient vertex insertion deletion restart update  benchmarked  nvidia geforce gtx titan gpu algorithm pagerank counting source code available online without specify license  cache centric optimization framework enable highly efficient graph processing gpus motivate random memory access generate sparse graph data structure increase memory access latency author conventional cache suffers access processing graph gpus propose throughput orient cache scheme   applies scheme direction coordinate load balance strategy sparsity sub graph technique apply traversal algorithm benefit overhead iteration evaluation  achieve average execution pagerank iteration gunrock  source code available information gpu graph processing approach reader  graph processing implement user ssd file IOS parallelism vertex memory SSDs latency hidden overlap computation concept chaos access request application SSDs  vertex centric  interface reduce cpu overhead increase throughput conservatively merge request author demonstrate  semi external memory executes algorithm performance memory implementation outperform powergraph source apache license  semantic aware ssd framework access execute graph analytics instead storage account graph structure graph layout access update mechanism   vertex mapping scheme advanced knowledge flash reduce access api development application access graph native data evaluation showcased average performance gain graph data fetch function breadth component random maximal independent pagerank source available summarize distinguish feature license graph processing detailed reference source code repository available    contains multiple machine computation typical cluster scenario instead characterize specific machine performance compute summary graph distinctive feature conclusion survey explores aspect graph processing landscape highlight vector research dimension enable classification graph processing accord  data dynamism modality task workload focus efficient storage swift computation transient data data associate compute agent distribute via partition thread cpu CPUs machine machine cluster dimension constitutes graph processing herein recent literature survey relationship graph processing focus storage graph database commercial graph category graph database graph database along decade continued refine efficiency execute traversal global graph algorithm graph representation database novel approach extract graph data graph aware data compression technique scalable distribute potentially abstraction establish graph data representation data distribution transmission architecture target graph generic graph processing desire generic dataflow processing abstraction computational primitive graph exchange  tune graph aware optimization exhaustive analysis exist contribution domain graph processing storage link source code repository github whenever available reader delve implementation contribution link contribution source code repository bibliography researcher developer without engage error prone date documentation source code systematic analysis foster additional comment regard data processing data abundant evolve paradigm compute evolution internet reshape relationship data increase smart device computational capability become ubiquitous daily vehicle smart graph data mapping interaction purpose become available implies continuous trend increase data dimension dynamism across enumerate document gain renew importance faster advent 5G technology alternative possibility internet private initiative spacex  jeff  origin steve vision smartphone become closer reality temporal aspect become granular speculate device generate data frequently graph processing dimension enumerate document relevant role building handle scenario