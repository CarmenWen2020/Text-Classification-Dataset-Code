internet social medium platform amount digital data generate source sensor mobile device wearable tracker security camera data commonly refer data challenge storage processing analysis capability model algorithm developed effectively analyze data recent survey global analysis phase data management generation acquisition storage query visualization data differently analyzes review parallel distribute paradigm analyze data scalable computer depth analysis parallel program paradigm mapreduce workflow BSP message passing sql program data analysis hadoop spark storm furthermore discus highlight feature diffusion community developer user advantage disadvantage implement data analysis application goal designer developer identify appropriate program hardware availability application domain purpose developer community introduction development internet growth social network widespread diffusion mobile device enormous amount digital data generate source instance data sensor webcam vehicle infotainment mobile device gps device wearable tracker social network web service drastically amount data commonly refer data characterize complexity variety format challenge storage processing analysis capability opportunity extract useful information valuable knowledge economy health society volume overwhelm ability extract valuable information analysis data novel architecture program model developed address complexity velocity scenario data mining machine grown decade research technology technique algorithm automatically extract hidden unknown potential massive repository however sequential data analysis algorithm feasible extract useful model volume data reasonable performance computer multi core multi cluster along parallel distribute algorithm data scientist tackle data issue structure overview program model data analysis important phase data cycle management data generation acquisition storage analysis account popular parallel program model data analysis mapreduce workflow bulk synchronous parallel message passing sql analyze feature framework implement framework code snippet scheme data analysis application implement framework accord aspect program feature diffusion advantage disadvantage program feature comparison criterion ass suitability framework parallel distribute program parallelism describes allows express parallel operation abstraction refers program capability hiding detail application describes application domain analyze popularity framework diffusion analysis aspect describes status potential industrial api describes available program develop application community stack overflow footnote popular site program commits official  repository finally comparison analyzes technical advantage disadvantage framework analysis comparison program feature manuscript developer useful identify hardware availability application domain purpose developer community manuscript extends aspect focus attention widespread user around analyze characteristic peculiarity data analysis diagram code snippet framework comparison framework principle program aspect developer community diffusion strength weakness framework reminder organize related related contribution program model describes widespread program model data analysis introduces software framework implement feature program discus framework program model application comparative analysis depth comparison described remark concludes related data analysis survey review research report review challenge data extensive analysis technology related data compute internet data author address challenge data concern data representation reduction cycle management scalability focus chain data data generation data acquisition data collection transportation preprocessing data storage distribute nosql database data analysis concern data analysis author analyze mpi hadoop mapreduce dryad focus data mining footnote excel  footnote weka footnote  finally data apply text web data network data analysis without program data challenge management cleaning aggregation analysis mostly focus hadoop ecosystem distribution author layer software data storage hdfs hbase data processing mapreduce yarn query pig hive data ingestion  footnote  storm spark management deployment layer zookeeper   technology orient tutorial data analytics systematic framework decompose data chain involve data generation acquisition storage analytics approach mechanism research community program model associate framework mapreduce hadoop acyclic graph dryad storm apache scalable footnote graph pregel graphlab parallel machine analyze data technology batch data processing related strength weakness data analysis technique data mining web mining machine social network analysis emerge technology granular compute bio inspire compute quantum compute semantic web etc singh  survey data analytics distinguish horizontal vertical platform former PP network hadoop spark latter performance compute cluster multi core gpu fpga review comparison platform parameter scalability data performance fault tolerance processing data iterative task finally development cluster analyze platform analyze infrastructure data service architecture collection storage massive data analyze nosql database data processing framework mapreduce dryad storm spark flink footnote pregel characteristic framework analyze scalability processing reliability data persistence multi program memory program processing batch compute interactive query finally focus data compute service application scenario recommendation smart grid emotional analysis without presentation discussion code snippet generalize data model mapreduce bulk synchronous parallel BSP memory model distribute file distribute machine mahout spark mllib  author investigate hadoop spark flink comparison highlight advantage limitation finally interactive analytical processing hive  footnote  data ingestion    graph processing graphx spark  flink data analytics decision framework machine spark hadoop mahout  analyze similarly focus data analytics framework platform data mining machine algorithm hadoop hdfs storage  analytics mention exist survey data global analysis framework phase data management data generation acquisition storage analytics however address data analysis machine framework detail significant difference classify framework model category extensive analysis widespread discus application scenario diagram code snippet programmer developer understand structure data analysis application comparison principle feature program aspect developer community diffusion strength weakness identify program model discus popular program model data analysis associate software framework mapreduce workflow bulk synchronous parallel BSP message passing sql goal highlight feature issue benefit program model software mapreduce mapreduce program model inspire functional program parallel execution reduce function data intensive application specifically distribute execution mapreduce application delegate mapper reducer mapper executes function reading chunk input data generate intermediate shuffle sort basis assign reducer hence reducer executes reduce function merges associate generate possibly reducer generate output data input data partition chunk horizontally mapreduce data partition processing horizontally image mapreduce model specially data intensive application social medium analysis image retrieval scientific simulation website crawl application complexity mainly link volume data mapreduce computation data avoid bottleneck data access allows exploitation data parallelism enable efficient execution distribute environment addition adapt compute environment multi core core multi cluster dynamic platform performance compute nowadays important parallel program model distribute processing google amazon footnote  ibm footnote source framework mapreduce program model apache hadoop footnote purpose framework amount data infrastructure distribute machine enables development distribute parallel application program relieve developer classical distribute compute issue load balance fault tolerance data locality network bandwidth minor implementation mapreduce model propose implement phoenix  none achieve hadoop phoenix implementation leverage multi core chip memory multi processor runtime automatically manages thread creation dynamic task schedule data partition fault tolerance  mapreduce framework data processing facilitates batch transmission mapper reducer improve performance abstraction file data aggregation adapt model efficiently batch data multiple node workflow workflow another important paradigm adopt framework data processing workflow define possibly repeatable achieve transformation data usually programmed graph workflow developed graph compose finite vertex model complex data analysis scenario distribute data mining machine analysis application workflow task compose loop pipeline parallel construct enable efficient model execution application input output task task comprehensive collection workflow focus description dependency task described workflow cycle refer acyclic graph dag program structure workflow management adopt apache  popular framework workflow paradigm relies dag structure commonly develop application exploit memory computation iterative machine algorithm cache data ram memory execution hadoop furthermore powerful robust library built application involve machine sql analytics graph computation spark purpose distribute compute data processing exist framework specifically developed specific application domain instance apache  source distribute processing capable cop amount unbounded data infrastructure storm highly scalable fault tolerant ensure data processing tuples per per node latency response storm application outline topology dag spout bolt graph vertex apache  another source processing volume data flink dag dataflow paradigm processing finite infinite datasets dataflow operation simply individual information across stateful processing core flink distribute dataflow runtime alternative hadoop mapreduce apis thanks user friendly feature flink business purpose workflow application domain scientific simulation data analysis machine parallel distribute framework propose application execution exploit distribute computational storage resource efficiently workflow framework  program execution runtime development scientific data analytics workflow distribute environment user sequential application java python execute remotely  runtime manages parallel execution application relieve user infrastructure classical distribute compute issue synchronization data transfer data mining framework  another software execute distribute data analysis workflow integrates visual workflow allows user model complex workflow without worry aspect parallel runtime software service SaaS model execute runtime parallelize execution workflow task exploit maximal concurrency accord data dependency visual workflow management kepler YAWL another workflow  kepler graphical user interface scientific workflow user workflow analytical component data source kepler scientist analyst execute model analysis built component focus statistical analysis task parallelism multiple thread machine YAWL instead model workflow petri net formalism enrich construct multiple instance concise model handle complex data transformation integration resource external application framework execution graphical editor  handler finally  technology execute workflow application environment manage execution complex application model visual workflow mapping onto available distribute resource enable user express workflow abstract exploit distribute compute execute complex workflow swift  specifically swift parallel script scientific data analytics workflow across distribute functional syntax implicit data driven task parallelism workflow model program invocation associate input output file runtime allows parallel execution swift script account data dependency availability external resource regard  workflow management mostly scientific community evidence gathering involve text data mining combine distribute web service local complex analysis application exploit pipeline parallelism pipeline execute local desktop machine infrastructure supercomputer multi cluster environment bulk synchronous parallel bulk synchronous parallel BSP parallel computation model bridging model parallel hardware software define BSP computer abstract compute model compose processor communication local asynchronous computation network communication synchronization mechanism BSP application parallel computation sequence supersteps processor perform local computation exchange data synchronize barrier nowadays BSP model adopt model execute massive computational task graph matrix machine network algorithm context apache  BSP source framework complex task involve matrix graph computation infrastructure mainly develop highly iterative graph processing application graph analysis machine exploit BSP model source processing framework BSP program model  apache giraph footnote  easy implementation BSP thread model giraph iterative graph computation develop scalable application rely hadoop resource manager  communication giraph data parallelism improves performance eliminate reduce operation giraph mainly academia graph processing application infrastructure message passing application computational structure paradigm mapreduce workflow BSP express structure computation efficiently exploit underlie distribute resource achieve performance ensure flexibility express computation application message passing model mechanism communication distribute compute paradigm program operating library data communication distribute memory message passing data private memory address another basically operation destination message source message although message passing paradigm widely parallel program model recently exploit implement scalable data application mpi message passing interface facto standard message passing interface purpose distribute memory paradigm parallel program commonly develop iterative parallel application node data exchange synchronization mpi implementation application related performance compute bioinformatics biology physic model mpi primitive communication broadcasting barrier reduce ability communicate accord specific tag implementation extend researcher emerge challenge data analysis  data mpi runtime enables efficient core execution distribute memory parallel program leverage mpi semantic orchestrate execution distribute compute enable development efficient core application avoid complexity associate cod multiple however traditional mpi communication exascale highly parallel compute capable  hence issue mpi release mpi propose collective sparse communication reduce data exchange limited processor alternative mpi propose literature aim data locality abstraction leverage feature alternative consist parallel program upc julia framework data processing tensorflow footnote  extension exist  upc sql nosql sql database address issue manage data relational database ensure horizontal continuous operation distribute server instead acid model atomicity consistency isolation durability nosql database typically another alternative model namely availability eventual consistency release requirement consistency transaction processing instance server simultaneously although nosql enable effectively volume data application acid compliant user security privacy manage financial transaction personal data health information consequently relational database oracle mysql microsoft sql server postgresql widespread popular nosql mongodb redis cassandra footnote moreover nosql database suitable data analytics development mapreduce query analyze data productive manner sql combine effectiveness query capability hadoop sql development efficient data analysis application widely overcome complexity mapreduce application hadoop task aggregation selection maintain performance query scalability application domain data manipulation ETL operation data query reporting repository context popular apache hive footnote data warehouse software built hadoop reading manage data infrastructure allows scalable fault tolerant management amount data declarative sql namely hive query HiveQL hive data manipulation query automatically translate mapreduce allows easily data without complex mapreduce program apache  another hadoop framework exploit sql execute data application infrastructure originally developed development data analysis application programmer develop data analysis application script procedural data pig latin script contains sequence operation define sql syntax data manipulate although hive pig develop application goal pig programmer sql background amount unstructured data hive data warehouse software manage amount structure data distribute manner slightly apache  massively parallel query hadoop data processing environment  latency concurrency analytic query hadoop circumvents mapreduce model directly access data distribute query offering RDBMS indeed sql query combine performance traditional database scalability hadoop feature program review model data analysis parallel discus program detail illustrate advanced data analysis mining application framework introduce previous selection program model chosen hadoop mapreduce spark storm workflow hama BSP mpi message passing hive pig sql model representative widely data analysis research business sector apache hadoop apache hadoop widely develop batch application adopt yahoo ibm amazon yahoo develop web however suitable batch processing inefficiency highly iterative application repeatedly perform operation data due disk processing distribute file compute intermediate mapreduce model nevertheless project user community diffusion link program constant update bug fix massive source community hadoop abstraction programmer define application apis powerful easy compute infrastructure understand execution environment issue related distribute file networked computer distribute program develop application hadoop code development effort abstraction spark pig hive code generally efficient fully tune hadoop exploit data parallelism reduce input data partition chunk machine parallel data chunk replicate node ensure fault tolerance along checkpoint recovery however partition strategy guarantee efficiency access amount file addition mapreduce program model hadoop project module hadoop distribute file hdfs distribute file fault tolerance automatic recovery portability across heterogeneous commodity hardware operating throughput access data reliability yarn framework cluster resource management schedule hadoop utility hadoop module thanks introduction yarn another resource negotiator hadoop batch processing reference platform program storm data analysis hama graph analysis hive query datasets  random access data non relational model  footnote manage hadoop  provision manage monitoring hadoop cluster  maintain configuration information distribute synchronization service program application discus hadoop mapreduce exploit invert index web document invert index contains index specifies IDs document occurrence document invert index data structure central component index dataflow component mapper combiner reducer propose application architecture propose hadoop application image mapper  par text input document emits     identifier document  listing processing nlp punctuation removal lemmatization stem handle serialization lighter programmer specific hadoop text  instead integer respectively information easy abstraction byte array mapping combine function exploit aggregate intermediate data mapper passing reducer listing combiner sum occurrence multiple document emits   reducer document occurrence document specifically listing    emit output generate reduce function invert index input document finally listing application programmer specify mapper combiner reducer input output format data input output apache spark apache spark commonly develop memory application interactive query batch processing powerful robust library built spark flexible application spark  sql query  scalable machine application  graph parallel computation spark  analysis execution generic spark application cluster driven central coordinator application cluster manager apache mesos footnote yarn spark standalone cluster manager embed spark distribution  provision manage monitoring spark cluster spark distribute storage data source distribute file hdfs storage amazon openstack swift nosql database cassandra comprehensive software stack spark software stack image spark production quickly extract insight data analysis purpose ebay amazon alibaba ebay data machine spark aggregation target enhance customer user community development constantly expand effort orient towards mllib library advanced data analytics parallel machine algorithm spark abstraction programmer define application apis powerful advanced program hadoop develop application spark code spark built operator filter   easy code parallel application exploit transformation action distribute datasets moreover spark faster hadoop thanks memory compute easy specially scala program orient functional program interface costly hadoop limit file spark alternative hadoop application limitation complementary hadoop reduce execution datasets memory ram critical resource spark suffer lack automatic optimization aim maximize memory compute minimize probability data spill performance degradation spark application define independent stage pool worker node dag stage task execute code partition input data data parallelism input data chunk parallel compute node spark task parallelism independent stage application execute parallel program proposes spark batch application mllib library additionally despite purpose framework spark library specially task structure data analytics processing graph computation pointwise comparison task specific library spark correspond purpose framework comparison spark application implement storm express spark library comparison spark graphx discus BSP application propose hama model spark graphx library comparison spark sql pig query spark sql library program propose application exploit spark implement customer churn prediction customer switch another identify potential churners engage machine algorithm behavioral already churn customer promptly detect customer risk churn due volume historical data churn customer exist periodically analyze customer retrain model distribute parallel framework spark employ benefit architecture propose application architecture propose spark application image spark preprocessing historical data training prediction model forecast customer another specifically mllib package employ handle data organize RDDs resilient distribute datasets classification model dataset training prediction model consists telecommunication customer activity data customer service etc along churn label specify customer cancel subscription overall generic tuple dataset compose feature firstly client node spark cluster via spark session spark currently authentication rpc remote procedure channel secret configure authentication via spark authenticate however accord cve vulnerability exposure database footnote version spark version earlier security issue standalone deploy mode access remotely without rpc specially craft application resource spark cluster execute command host machine node data retrieve batch file uploaded rdd scala code listing user define parse rdd data cached performance purpose afterwards data properly machine algorithm tuple convert  feature local dense vector label data categorical feature encode numerical standardize remove variance preprocessing phase listing  function exploit assign numerical categorical feature preprocessing data partition training decision model evaluate performance decision configure hyper parameter impurity compute split information gain maximum depth terminate algorithm maximum bin discretizing continuous feature training phase invoke  output model disk classification unclassified customer subsequently evaluate model unseen compute error binary metric precision recall empty  indicates feature continuous code described listing worth scenario customer continuously evolve retrain classification model discover date churn purpose machine algorithm spark mllib aim incrementally update model data arrives however model currently incremental newly generate training retrain model scratch classification model exploit periodically monitor customer potential churners react appropriately integrates structure data data warehouse apache hive feature extraction module model infer churn customer listing query hive warehouse express HiveQL spark sql library apache hive apache storm apache storm widely analytics twitter  spotify twitter developer storm processing terabyte data filter aggregate content apply machine algorithm data user community relatively thanks user friendly feature flexibility storm adopt medium business purpose customer service security analytics threat detection typical storm online machine continuous computation distribute rpc program paradigm storm abstraction unbounded sequence tuples parallel standard  integer custom spout data source data external source social network apis sensor network queue  kafka footnote  application bolt processing entity specifically execute task algorithm data cleaning function query topology generic topology configure dag spout bolt graph vertex forever storm adopts default stateless processing semantic ensures message failure guarantee message programmer implement stateful operation  library processing semantic storm medium abstraction programmer easily define application spout bolt topology storm apis developer application local mode without cluster storm mainly clojure program multi protocol allows implement bolt spout java python data parallelism thread execute parallel code chunk task parallelism spout bolt parallel pipeline parallelism data propagation topology program propose application leverage storm implement network intrusion detection network intrusion detection critical network management security quality service detection network intrusion malicious activity anomaly detection technique AIDS anomaly intrusion detection storm application define entity spout bolt topology propose topology compose spout bolt  data source spout connection firewall file tuple bolt connection described feature duration protocol service etc  receives tuples spout performs preprocessing specifically convert categorical feature numerical performs standardization machine model  performs classification vector machine svm model offline file analysis training phase perform offline python scikit library storm native machine library churn prediction spark program program periodically retrain classification model discover date malicious connection however scikit library leveraged online svm training overcome limitation linear svm approximate stochastic gradient descent sgd classifier partial option model standard scaler numerical feature label encoder categorical feature svm model dumped file pickle module hence storm multi protocol adopt model topology implement jvm architecture propose application architecture propose storm application image storm topology java code listing topology submit production cluster storm client specify jar file argument shuffle ensures tuples randomly distribute bolt receives tuples data model storm tuple spout node specify collector emit tuples emit tuple  declare output tuples emits  listing tuple emit spout subsequent bolt declare topology  listing proxy python bolt define listing tuples apply transformation model load disk encoders categorical feature scaler numerical feature multi protocol bolt specifies script execute listing application logic python script listing finally  listing similarly  application svm model offline scikit library predict connection  buffer overflow password etc allows network security infrastructure react mitigate threat comparison spark spark library apache spark scalable throughput fault tolerant processing data ingest service apache kafka amazon  tcp source advanced algorithm machine graph processing spark abstraction continuous data  discretized internally sequence RDDs rdd  data operation perform  underlie RDDs listing intrusion detection application storm cod spark  entry operation data ingest  text data tcp socket specify source host worth developer explicitly data ingestion processing invoke operation context processing manually due error via  operation furthermore assume model previously mllib load disk inference mode processing data emerges code similarly storm spark windowed operation apply transformation slide data slide source  associate RDDs combine windowed  operation specify duration interval operation perform advantage spark storm integration mllib allows easy algorithm offline native machine algorithm simultaneously predict data scala program orient scalable functional program feature compact readable code apache hama apache hama mainly develop iterative graph processing application graph analysis BSP model graphic processing gpgpu acceleration  chinese adopts hama compute pagerank relevance importance user community april apache  apache project hama java built hadoop distribute file hdfs thereby fully compatible hadoop cluster however limited hdfs distribute file architecture hama worker model consists component BSP responsible schedule assignment task groom server role monitoring superstep sequence cluster error maintain groom server heartbeat message groom server groom server worker component BSP architecture responsible execution task assign BSP heartbeat message periodically report important information BSP status metric available memory server maximum task capacity zookeeper responsible efficient management BSP peer synchronization mechanism barrier typically BSP node social medium platform drawn attention scientific community graph abstract data structure suitable social network content connection context propose efficient computation massive graph BSP model google pregel scalable purpose compute aim implementation algorithm arbitrary graph distribute environment inspire google pregel hama vertex centric graph computation user program intensive iterative application google pregel style program interface specifically hama outperforms mapreduce framework avoid processing overhead sort shuffle reduce vertex due message passing interface thanks BSP superstep faster mapreduce execution highly iterative application involve graph computation hama abstraction programmer define application BSP primitive computation communication distribute file addition hdfs explicit message passing interface mpi BSP model enables hama avoid conflict deadline communication due synchronization mechanism BSP superstep contrast hama apis input output data data partition operator easy parallel application BSP failure hama data parallelism execute code parallel portion data program propose application exploit hama address influence maximization social medium platform increasingly convey advertising campaign service goal identify user social network namely maximizes influence user application bio inspire technique numerical optimization artificial bee abc belongs swarm intelligence focus organize ant bee flock complex action derives collective intelligence technique genetic algorithm ant optimization particle swarm optimization differential evolution artificial bee glowworm swarm optimization cuckoo algorithm differently ant optimization exploit local abc relies global strategy compose entity source characterize goodness quantity nectar distance hive employer bee nectar detail source hive  bee currently nectar category scout bee source  bee source accord information hive employer bee goal maximize nectar collection adapt influence maximization described specifically user social network source employer bee identify opinion leader network scout bee explore neighborhood employer bee  bee influence user execution propose application implement vertex centric model hama graph computation architecture propose hama vertex centric application image involve hama graph application extend predefined vertex specify vertex message template argument java code listing user encode override compute behavior vertex operation execute active node superstep furthermore built  msg  vertex message vertex inspect associate setup phase node initialize data structure elect role coordinator compute behavior vertex simply associate vertex behavior vertex listing depends message phase sends rank notify vertex sends message specify activation probability propagation phase message node maximum influence probability chosen aggregator evaluates fitness finally vertex receives signal vote halt execution suspend behavior listing described iterative phase elect scout bee rank notify influence evaluation scout bee sends influence message along outgo evaluate fitness aggregator evaluation determines proceed role switch scout employer communicate node iterates entire scout bee evaluate convergence minimum percentage increment subsequent iteration threshold consists influencers influence within network comparison spark graphx graphx extension spark rdd apis graph parallel computation graph abstraction multigraph vertex addition graph query algorithm subgraph sample component identification pagerank etc optimize version google pregel graph processing specially express graph parallel iterative algorithm vertex recomputed iteratively internally pregel operator BSP message abstraction performs series supersteps vertex receives aggregation neighborhood message previous superstep computes finally sends message neighborhood superstep differently pregel message compute parallel user define message function moreover vertex message neighborhood message skip within superstep listing abc algorithm influence maximization model pregel api graphx sake brevity report message communication vertex operation fitness evaluation pregel operator argument partition initial message trigger application maximum iteration direction message user define function compute merge message output graph remain message propose vertex characterize  unique identifier network  model internally information vertex role neighborhood message model  internal vertex update message passing similarly hama framework efficient implementation pregel model BSP paradigm however unlike hama graphx developer user define function specify message exchange graphx advantage memory computation ability express efficient query graph data built operator compactness code derive scala program message passing interface message passing interface mpi define forum compose industrial academic organization widely academia medium infrastructure develop parallel distribute application mpi user community medium project engages contributor version mpi message primitive function enable fully express parallel program advanced function mpi parallel program compose processor mpi function message passing accord SPMD program multiple data model mpi exploit data parallelism mpi compose parallel program execute code data mpi communication primitive mpi msg leng rank tag comm mpi recv msg leng source tag comm status communication implement primitive mpi     comm mpi       comm mpi reduce   comm primitive mpi init mpi finalize initialize terminate program respectively mpi abstraction develop efficient portable iterative parallel application performance limited communication latency processor mpi programmer cannot exploit construct manually cope complex distribute program issue data exchange distribution data across processor synchronization deadlock issue debug application program task easy user parallel application simplify developer task however thanks portability efficiency program model mpi largely implement parallel sequential architecture  workstation network cluster grid worth mention mpi provision creation introduce later mpi version version mpi extension hybrid program model fault tolerance program application parallel counting text file  implementation input file byte worker rank chunk  byte private data structure rank receives partial within specify tag aggregate architecture propose mpi application image listing application code primitive mpi init finalize initialize terminate program  broadcast message worker recv communication worker application source code compile  command execute  command per node allocate node program execute mpi init primitive within additional worker parallel  command identify mpi integer ID rank incremented rank   perform operation establish split chunk worker aggregate partial worker communication handle default communicator mpi comm enable message exchange distinct version program split broadcast worker assign data chunk occurrence private structure partial counter finally worker sends partial counter compute apache hive apache hive commonly data analyst data query reporting datasets adopt facebook netflix yahoo airbnb netflix hive hoc query analytics architecture hive comprise component user interface user interact hdfs via web UI cli  relational database metadata persistent relational entity mapped hdfs HiveQL handle communication hive  HiveQL query convert mapreduce execution bridge component HiveQL mapreduce executes mapreduce translation HiveQL query hdfs underlie distribute file data storage hive abstraction programmer develop data processing application HiveQL relies traditional concept relational database addition hive user define function udf data manipulation sum average explode really easy custom hive user community however online analytical processing olap online transaction processing OLTP access data unlike sql server hive data parallelism allows execution query portion data complex query parallel query compose starve computational resource cope issue hive optimizer cbo performs optimization series decision query parallel query program propose application implement roi mining application hive widespread social medium location service extract useful information understand behavior social medium information analysis geo reference data user social medium useful user tourist attraction shopping centre park PoIs poi generally identify geographic coordinate useful define roi geographic boundary poi roi mining technique aim precisely discovery application data flickr social network photo initial goal assign generic geo localize flickr correspond poi analysis textual content metadata tag description assign poi geographical coordinate   aggregate DBSCAN density spatial cluster application density cluster algorithm exploit information density identify cluster representative roi cluster significant subregion poi belongs characterize density 2D identify geographical coordinate overall structure application structure propose hive application image flickr data firstly filter analysis latitude longitude information related geographical coordinate description contains description  contains date username contains user tag contains tag comma additional information listing data load hive flickr tuple correspond poi define udf allows custom java code within hive script regular udf output  listing tag description keyword file load input return roi colosseum    etc function hive query listing rank RoIs  function clause return roi user data grouped roi clause sort visitor clause descend data cluster analysis launch DBSCAN algorithm implementation  user define aggregate function applies function multiple implement init initializes evaluator actually implement  logic iterate whenever aggregate  partial aggregation return encapsulates aggregation merge combine partial aggregation another terminate aggregation DBSCAN launch belonging roi roi obtain previously define  function listing DBSCAN cluster chosen return   markup finally  hive script HiveQL query detailed listing apache pig apache pig commonly develop data query data analysis ETL extract transform load application gathering data source hdfs file organization pig production linkedin paypal  linkedin professional online social network hadoop ecosystem pig native mapreduce sometimes performance thanks pig latin script pig medium abstraction hadoop pig developer complex lengthy code pig adopt development goal link prediction target recommendation pig latin statement relation relational database define relation bag bag collection tuples tuple data tuples bag correspond although unlike relational pig relation tuple contains pig script operator development task data load filter sort pig script invoked application program actually java python javascript exploit custom user define function UDFs advanced analytics pig script translate mapreduce automatically optimize pig built optimization reduce unused statement apply filter data load addition exploit multi query execution entire script batch statement pig data parallelism exploit partition data chunk processing parallel task parallelism multiple query parallel data program pig application pig implement sentiment analyzer pig built library sentiment analysis exploit external associate sentiment semantic orientation opinion associate positive negative sentiment sentiment text review tweet comment calculate sum positive negative text calculate average rating structure propose pig application image hive developer advanced analytics script define UDFs udf listing aim processing tuple remove punctuation preprocessing functionality exec implement java listing code  sentiment analyzer register udf define java dataset review load hdfs review tokenized accord function define listing sentiment assign token rating review calculate average token comparison spark sql spark sql module structure data management processing differs rdd api extends spark optimization information structure data computation perform developer interact spark sql via sql statement dataset api execution addition sql query execution spark sql data exist hive environment spark program program spark sql abstraction namely dataset dataframe dataset distribute collection data benefit RDDs resilience lambda function along optimization perform spark sql execution dataframe dataset structure relational database optimization  structure file hive database exist RDDs data automatically infer developer explicit schema via  structure dataframe spark sql vast majority hive feature UDFs dataframe operation listing sentiment analysis application previous implement spark sql dataset api worth spark sql execute query regardless api adopt sql dataset api uniformity brings benefit developer easily switch apis suitable express transformation query dedicate tokenization text easily express sql statement listing register UDFs  temporary global  comparative analysis summarizes classifies feature program framework diffusion advantage disadvantage feature programmer another choice factor budget service easy expensive parallelism data format data source amount data performance indeed specific data analysis task implement program model comparative analysis scholar developer program parallel model budget application domain community user developer feature summarizes feature framework accord program model parallelism abstraction  code application feature abstraction classify category category hadoop spark mpi hama powerful apis primitive distribute program development effort code efficiency fully tune medium storm pig developer implement parallel distribute application construct program development effort abstraction hive limited program developer rapidly data analytics application visual interface script parallelism classify data parallelism hadoop spark storm mpi hama hive pig automatically manage input data split chunk parallel compute node task parallelism parallelism exploit spark storm pig parallel independent task without data dependency pipeline parallelism storm allows partial output task task parallel stage workflow framework exploit pipeline parallelism regard  classify program hadoop category code instruction application mapreduce application hadoop definition mapper reducer application complex lengthy medium storm hama implement specific interface codify application storm implement interface spout bolt override   framework spark mpi hive pig code compact programmer specific construct code usually easy style program HiveQL pig latin regard application programmer exploit purpose hadoop spark mpi developed specific application domain hama develop graph processing application hive pig data query storm processing diffusion summarizes diffusion popularity user developer perspective data stack overflow github access december diffusion classify parameter considers user community refers diffusion stack overflow indicator user towards average per capture trend user adoption spark diffuse user community hadoop hive mpi pig storm lastly hama register per github commits indicator developer community contribute development maintenance code refer commits official github repository grasp developer fix error bug introduce feature diffusion user spark framework involve contributor hadoop precede mpi programmer application hive storm pig hama github indicator popularity reusability exists relationship popularity user perceive quality therefore reuse positive correlation fork analyze popular java repository github popular reuse spark hadoop storm hive mpi pig hama api indicates program available develop application hadoop spark storm mpi embrace developer program background thanks provision apis popular specifically python java accord  index available http  github  html access december conversely pig hive  HiveQL diffusion popularity advantage disadvantage summarizes advantage disadvantage described program data analysis application pro con outline feature emerge description application code snippet propose feature program advantage disadvantage advantage related specific feature related functionality library integration framework spark leverage memory compute model enable efficient data intensive application furthermore emerge comparison purpose framework hama storm pig spark highly flexible leveraged application domain library graph processing machine structure data analysis disadvantage mainly related lack weakness limitation hadoop suffers iterative application whereas suitable batch processing disadvantage storm data computation concern lack message hama framework program model gpu however BSP failure critical issue mpi generally efficient debug due program model hive distribute data query however OLTP operation finally pig easy program interface data analysis application debug complex remark internet social medium platform novel program model propose analyze amount data reasonable leverage performance computer parallel distribute algorithm however ability generate data increase constant drastic series challenge aim processing analyze data due framework constantly improve cop challenge effective extraction useful knowledge application domain furthermore novel exascale requirement address architecture compose core future exist framework address issue related consumption schedule data distribution access communication synchronization enable scalable implementation data analysis application structure analysis comparison widespread program model data analysis feature software framework implement accord criterion concern aspect feature diffusion advantage disadvantage furthermore analysis discussion program code snippet potential limitation aim user designer developer identify accord program capability knowledge hardware availability application domain purpose software community concern availability multi apis project maintenance github repository availability platform stack overflow memory exception