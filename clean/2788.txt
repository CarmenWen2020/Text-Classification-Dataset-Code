resource description framework rdf model owe flexible structure increasingly link data amount link data knowledge graph increase volume rdf data rdf model metadata social medium domain data link plethora rdf data source available web scalable rdf data management becomes tedious task muse efficient distribute rdf storage scheme query rdf data hadoop mapreduce muse rdf data triple SPARQL query muse considers frequently triple optimizes rdf storage triple minimum access sufficient triple instead scan rdf dataset extensive synthetic rdf datasets LUBM watdiv muse outperforms framework query execution scalability introduction semantic web outcome vision WC web link data link data easily understood access semantic web semantic web access information available web format understandable machine semantic web information retrieval semantic web technology building vocabulary data handle data web technology web ontology owl rdf SPARQL protocol rdf query SPARQL empower link data foundation publish link data rdf SPARQL commonly accepted query semantic web semantic web data structure interoperable easily reuse heterogeneous application across web semantic web establish rdf standard model data interchange flexible rdf underlie graph model popular standard choice data interchange semantic web rdf data representation format maintain data semantic web structure rdf serf format integrate structure semi structure data across various application rdf format earlier data semantic web presently quality data link rdf format standard data rdf information express uniform structure manner link data lod movement increase amount rdf data publish web representation data link enables knowledge discovery popular rdf data google bing etc link data integrate data domain distribute data link domain knowledge graph popular knowledge graph dbpedia freebase YAGO etc rdf data social medium platform twitter linkedin facebook etc rdf widely data spatiotemporal data domain semantic web approach increasingly academic research data rdf metadata web web yahoo google microsoft facebook maintain metadata structure rdf website mostly semantic web technology medium british broadcasting corporation bbc application rdf data source standard format data integration application lod bbc cup dbpedia etc dbpedia link data version wikipedia rdf format integrate analyze biomedical datasets rdf datasets  WC data sensor sensor observation available link sensor data billion triple rdf data storage processing machine become challenge continuously increase dataset semantic web data era web data initiative semantic web initial approach rdf data management centralize architecture scalability overhead centralize rdf rdf jena    etc although suffer limitation centralize approach later focus shift towards distribute rdf improve performance exist overcome limitation scalability research divert towards distribute rdf management overcome semantic web data challenge scalability ability handle amount data without compromise performance distribute rdf  cluster tdb    etc distribute rdf database efficient overcome challenge centralize rdf advancement distribute rdf database increase amount rdf data drawback distribute rdf database become evident researcher towards improvement existent distribute rdf building distribute scratch limitation prerequisite dedicate infrastructure effective constitute scalable framework owe requirement resource hence effort towards leverage commodity grade machine generic platform rdf data processing development mapreduce framework gain popularity building scalable rdf management manage rdf data overcome exist challenge propose motivation exist rdf data storage generally rdf data hadoop framework account triple SPARQL query framework related hence framework suffer incur SPARQL query processing framework scan VP rdf storage LUBM dataset VP rdf predicate contains  motivate storage scheme minimizes reduces scan query processing muse another storage consideration structure triple SPARQL query contains subtables directly scan generate intermediate predicate bound triple hence minimum scan data scan thereby reduce query execution muse contribution multi rdf storage scheme processing rdf data  rdf data hadoop contribution propose efficient scalable muse rdf data hadoop distribute file hdfs SPARQL query convert suitable format mapreduce rdf data muse hadoop extensive rdf datasets conduct verify query performance scalability rdf data storage average muse outperforms magnitude organize framework storage query rdf data describes propose storage query processing architecture implement muse rdf data extensive experimental finally conclude discus future SPARQL query LUBM datasets  related discus exist distribute framework query rdf data propose  distribute rdf framework apache spark evaluate SPARQL query  SPARQL query execute data across multiple node cluster  translates SPARQL query scala code directly execute spark api framework vertical partition architecture propose rdf data rdf data entry triple rdf dataset assign predicate correspond entry advantage storage architecture reduces evaluation triple SPARQL query predicate constant triple SPARQL query triple constant predicate vertical partition storage strategy suitable rdf data reduces dataset  rdf data  suffers drawback reading entire dataset compute statistic dataset query structure account data related query additional overhead compute statistic prior query processing propose distribute data   rdf data storage approach vertical partition strategy  scheme layout rdf data storage correlation triple variable correspond correlation SS OS OO basis correlation subset VP VP inner pre compute correlation objective  storage model minimize operation input data SPARQL query evaluation  approach input data minimize rdf predicate predicate rdf datasets contains vertical partition rdf dataset  split predicate distinct predicate goal  minimize input data rdf predicate triple SPARQL query rdf predicate correspond variable propose storage approach storage longer data load architecture propose HyPSo hybrid partition strategy processing SPARQL query rdf data HyPSo combine vertical partition strategy rdf storage hash partition propose strategy improves SPARQL query performance avoid scan vertical partition compute belonging eliminate overhead reading entire partition SPARQL query execute accord hybrid partition schema data file hdfs convert SPARQL query pig latin query execute rdf data pig query internally execute mapreduce HyPSo rdf data architecture drawback rdf data belonging vertical partition node inter node communication increase query processing degrade query performance efficient SPARQL query  propose  scalable rdf framework processing SPARQL query hadoop rdf data parquet columnar layout hadoop  sql query query execution  rdf data unified efficiently query storage schema rdf dataset thereby reduce query query drawback framework efficient query query propose  scalable rdf management efficient SPARQL query propose introduces storage index query processing rdf data processing SPARQL query rdf data propose  rdf data triple  triple indexed across satisfy triple SPO POS osp accord triple component osp triple ID predicate index scan SPARQL query situation  suffers limitation replicate data multiple exploit index data storage architecture index multiple propose shard performance massively scalable distribute mapreduce framework information persists graph data rdf triple SPARQL query respond query shard evaluate LUBM benchmark dataset benchmarking rdf triple motivation shard ability persist rapidly query data graph file shard triple associate shard rdf data easy format shard limitation rdf data file hdfs scan entire dataset SPARQL query processing dataset scan multiple query contains multiple clause propose  partition rdf spark rdf data hybrid scheme combine popular rdf storage technique binary vertical partition processing query split sub subquery execute suitable storage approach subqueries obtain  rdf data rdf storage scheme PT VP occupies storage  occupies   propose PigSPARQL complex SPARQL query mapreduce cluster PigSPARQL vertical partition data storage model framework observation typical SPARQL query bound predicate triple generally variable vertical partition rdf data approach reduces amount rdf data load query execution strategy rdf triple belonging predicate file predicate file mapreduce advance consume disk approach effective improve SPARQL query performance author extend improvement multi rdf storage scheme muse architecture introduce storage strategy propose approach muse processing SPARQL query rdf data muse hdfs detail SPARQL query implement hadoop mapreduce hdfs depicts architecture muse depict rdf data input user hdfs hadoop muse input data II improve SPARQL query performance muse vertical partition VP storage scheme rdf data triple bound predicate SPARQL query II processing triple predicate bound variable triple muse simplifies vertical partition scheme reduce predicate bound triple SPARQL query muse architecture image muse rdf storage architecture muse observation SPARQL query generally predicate bound bound unbound triple SPARQL query triple SPARQL query implement II accord observation muse data pre user pre data triple format hdfs muse data implement individual triple SPARQL query processing vertical partition VP storage scheme rdf data multiple input rdf triple vertical partition predicate correspond format triple SPARQL query implement muse advantage VP scheme reduces scan processing SPARQL query thereby improve query performance reduce scan improve SPARQL query performance motivate propose muse storage model II muse storage model fulfils requirement reduce scan SPARQL query triple predicate bound unbound SPARQL query triple easily implement II lesser additional reduces scan triple SPARQL query split vertical partition predicate distinct predicate II entry belonging predicate storage model muse minimize amount scan processing SPARQL query triple bound predicate implement correspond predicate predicate triple SPARQL query access triple correspond firstly bound predicate pas pas entry predicate triple SPARQL query retrieve scan instead scan entire predicate entry triple firstly predicate retrieve pas pas amongst subtables access subtable entry retrieve intermediate triple similarly triple SPARQL query exists triple predicate bound intermediate retrieve predicate correspond VP storage scheme beneficial SPARQL query query multiple triple muse enable SPARQL query minimum execution storage model triple rdf data input transform subtables II rdf data hdfs predicate rdf data limited vertical partition strategy storage input rdf data multiple storage II subtables triple bound predicate bound predicate earlier triple predicate bound implement strategy data access execute triple rdf data file muse beneficial rdf data rdf data triple format handle muse storage structure muse prior SPARQL query bound triple query analyze load correspond subtable query execution accordingly subtable load bound predicate triple query bound triple correspond subtable load firstly load predicate triple VP subtable load correspond predicate triple available subtables predicate hdfs triple SPARQL query addition II muse storage scheme issue scan predicate predicate rdf rdf datasets subtables access data data scan reduce minimize query response advantage muse storage scheme easy implement suitable SPARQL query entry retrieve intermediate implement triple bound predicate SPARQL query similarly triple SPARQL query intermediate retrieve query SPARQL query benefit storage scheme query unbound predicate bound query distinct predicate input rdf dataset subtables distinct distinct predicate input dataset distinct predicate datasets watdiv dataset contains distinct predicate LUBM dataset built dataset distinct predicate suppose distinct distinct predicate subtables built subtables II complexity algorithm occupy muse depends subtables amount generate II depends predicate input rdf dataset bound predicate query entire rdf dataset file load query processing algorithm equivalent input rdf data complexity algorithm complexity muse storage depends generation load firstly consume generate subtables load subtables respective triple input query distinct predicate distinct predicate query complexity algorithm average generation load subtables load complexity happens entire rdf dataset file load bound predicate query complexity algorithm depicts storage muse muse SPARQL query processing muse implement hadoop mapreduce framework SPARQL query processing input rdf data transform muse storage model hdfs SPARQL query mapreduce rdf data SPARQL query input user SPARQL query processing module module SPARQL query input transform format suitable hdfs SPARQL query cannot directly hadoop transform input SPARQL query apache pig format query pig latin format internally execute sequence mapreduce pig query data II scan accord triple SPARQL query triple rdf  subtable scan statement rdf load usr local hadoop input  rdf  USING  pig query entry subtable  retrieve variable unbound denote scan VP triple rdf statement rdf load usr local hadoop input  rdf USING  pig query entry VP rdf retrieve unbound denote SPARQL query bound triple directly execute scan correspond subtables reduce data scan hence access hence muse improve SPARQL query performance apt storage model accord triple query subtable scan correspond predicate entry subtable retrieve intermediate triple upon triple SPARQL query subtables VP access intermediate triple internally pig query hdfs later retrieve user purpose triple SPARQL query variable denote triple muse executes triple SPARQL query sub query subqueries execute series triple operation variable triple retrieve binding input rdf dataset triple algorithm SPARQL query processing muse algorithm complexity algorithm predicate variable uncommon scenario entire input file triple format hdfs scan generate intermediate triple query input file source modify translation triple treat muse storage model consume degrades SPARQL query performance accord assumption triple SPARQL query bound predicate scenario unlikely subtable retrieve access predicate predicate triple VP hdfs triple subtables previously VP subtables II muse rdf dataset distinct distinct subtable scheme subtables  handle bound predicate SPARQL query query variable triple complexity algorithm depends intermediate IR generate triple input query triple query complexity IR IR IR  complexity algorithm depends scan subtables processing triple query muse triple algorithm scan subtables complexity average scan subtables average complexity entire rdf dataset file scan complexity complexity algorithm summarize discussion discus conduct rdf datasets performance muse extensive popular rdf benchmark datasets LUBM watdiv verify efficiency scalability muse shard PigSPARQL framework muse hybrid partition technique HyPSo HyPSo partition rdf data partition rdf data hdfs rdf data input user transform muse hadoop distribute file hdfs experimental setup datasets conduct cluster machine equip 6GB ram TB disk intel xeon processor cluster hadoop pig ubuntu lts operating  benchmark LUBM dataset  SPARQL diversity suite watdiv watdiv dataset generate watdiv binary suite watdiv dataset generate model file triple format specify factor triple generate factor approximately generates triple generate watdiv datasets approximately triple respectively LUBM data generator generate datasets random data generation evaluation LUBM LUBM dataset statistic datasets evaluation dataset generate LUBM data generator owl format data convert triple format  toolkit jena LUBM query evaluation appendix query complex SPARQL query LUBM query query input hadoop framework source framework distribute processing datasets cluster computer hadoop mapreduce MR program model software framework distribute storage processing data data hadoop framework massive datasets analyze quickly parallel distribute file hadoop hdfs data storage hdfs split data sends various node cluster mapreduce application data hdfs hadoop cluster comprises node node upon cluster cluster mapreduce processing node node hadoop mapreduce framework muse accord requirement storage query processing rdf data application muse hdfs rdf data storage mapreduce program model retrieval rdf data LUBM datasets information related academic domain LUBM synthetic dataset benchmark dataset developed evaluate performance semantic web repository systematic standard manner benchmark  bench ontology ontology describes department activity watdiv dataset generator generate synthetic benchmark watdiv datasets execute generator watdiv datasets generate factor diverse workload generate watdiv extension incremental linear mixed linear stress watdiv dataset evaluate diverse workload query available dataset focus wider aspect query evaluation rdf data rdf data refers rdf datasets rdf datasets cannot handle centralize rdf  centralize rdf processing rdf datasets machine experimental datasets mostly centralize rdf architecture handle rdf data centralize rdf fail data processing rdf datasets volume rdf data centralize rdf effective datasets belong data dataset statistic performance evaluation generate datasets available LUBM watdiv dataset generator data generator generate datasets query watdiv categorize linear query query  query exist template query watdiv efficiency muse basis query execution scalability muse various LUBM watdiv datasets efficiency LUBM watdiv datasets input user pre processing load hdfs query execution shard PigSPARQL rdf data PigSPARQL VP HyPSo PigSPARQL framework rdf data text file vertical partition storage strategy rdf data query response LUBM datasets respectively depict query response watdiv datasets triple respectively query execution comparison muse shard PigSPARQL rdf data PigSPARQL VP HyPSo architecture LUBM watdiv datasets respectively illustrate execution comparison muse LUBM datasets respectively comparison muse watdiv datasets triple respectively average query execution muse framework datasets muse executes average gain shard PigSPARQL rdf data PigSPARQL VP HyPSo architecture respectively LUBM datasets watdiv datasets average gain PigSPARQL rdf data PigSPARQL VP HyPSo architecture respectively parser shard framework watdiv query muse PigSPARQL comparison shard muse performs framework query LUBM datasets watdiv datasets performance degrades query PigSPARQL VP muse performs PigSPARQL PigSPARQL VP query watdiv datasets SPARQL query  linear watdiv dataset muse query increase increase data watdiv dataset overhead increase increase dataset response query query triple triple predicate bound query cannot leverage benefit storage muse VP muse access generate intermediate query overall average query response muse rdf data PigSPARQL VP HyPSo watdiv datasets comparatively performance framework attribute standard storage query architecture leverage advantage triple SPARQL query muse considers account advantage architecture muse prune invalid input data utilize rdf embed triple SPARQL query  prune rdf bound SPARQL query II reduce postpone cartesian operation PigSPARQL prune prune rdf bound SPARQL query shard performs prune simply rdf data file hash shard cannot evaluate multiple triple mapreduce HyPSo structure SPARQL query consideration SPARQL query average performance muse storage triple algorithm muse framework prune amount invalid rdf data prior query processing query execution LUBM datasets respectively image query execution millisecond LUBM datasets respectively shard PigSPARQL VP HyPSo muse query execution watdiv datasets triple respectively image query execution millisecond watdiv datasets triple respectively PigSPARQL VP HyPSo muse data scalability LUBM datasets query respectively image data scalability watdiv datasets query respectively image scalability muse PigSPARQL VP HyPSo scalability comparison various LUBM watdiv datasets dataset increase LUBM watdiv query increase muse scalability comparison muse LUBM watdiv datasets respectively depict scalability comparison LUBM datasets query respectively similarly depict scalability comparison watdiv datasets query respectively datasets increase query PigSPARQL VP HyPSo increase dramatically contrast muse growth rate query slightly extensive various LUBM datasets LUBM LUBM LUBM LUBM  scalability watdiv datasets triple conduct query LUBM watdiv query shard performs query performance muse almost query maintains  architecture increase watdiv datasets confirm muse rdf data data conclusion future propose muse multi storage scheme rdf data mapreduce storage scheme efficiently triple SPARQL query rdf data mapreduce propose advantage mostly predicate bound triple SPARQL query muse rdf storage component data hadoop SPARQL query processing component translate SPARQL query mapreduce extensive rdf datasets verify efficiency scalability outperforms shard PigSPARQL HyPSo architecture muse easily implement deployed across hadoop cluster future investigate SPARQL query optimization strategy performance improvement muse triple reorder optimize SPARQL query muse improvement SPARQL query performance