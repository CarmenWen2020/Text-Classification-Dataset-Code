similarity preserve hash core technique similarity randomly data metric discrete sketch ham traditional hash technique binary sketch recent integer sketch preserve various similarity however similarity binary sketch inefficient integer sketch moreover inapplicable inefficient dynamic datasets although datasets update propose dynamic filter trie dyft dynamic similarity binary integer sketch extensive experimental analysis datasets dyft performs  respect scalability performance memory efficiency dataset data dyft performs similarity faster reduce  memory access auckland library introduction similarity vectorial data database fundamental task recent data analysis various application duplicate detection collection web context retrieval image functional analysis recent database application become vectorial data database become dimensionally apply exist similarity database therefore develop powerful similarity analyze database efficiently similarity preserve hash powerful technique approximates similarity randomly mapping data metric discrete sketch ham similarity various similarity approximately ham distance sketch computation correspond integer sketch hash technique binary sketch developed review accordingly similarity binary sketch propose decade recent hash technique intend integer sketch developed various similarity  hash jaccard similarity consistent sample cws min max kernel cws generalize min max kernel locality sensitive hash curve develop efficient ham distance binary sketch integer sketch however similarity propose data analysis situation data generate interval accordingly similarity data dynamic update data structure data structure similarity update insert delete data data structure without rebuild data structure scratch similarity dynamic update application image social medium transaction database spatial data similarity sketch propose drawback dynamic update data structure poorly applicability limited binary sketch consequently important challenge develop scalable dynamic similarity integer sketch contribution propose dynamic filter trie dyft dynamic similarity binary integer sketch dyft performs similarity traverse label trie trie dynamic data structure enables dynamic update insert delete trie standard implementation trie pointer consumes amount memory although efficient developed similarity necessarily efficient model similarity optimizes trie structure enable similarity sketch maximum integer sketch dyft determines structure model performs similarity optimize trie achieve performance efficiency sketch nonnegative integer research trie conduct processing byte integer text processing representation gap sketch similarity text processing generates difficulty implement dyft modify adaptive radix mart efficient implementation dyft sketch nonnegative integer enables data structure adaptively configuration dyft node perform extensive dyft performs  similarity binary integer sketch concern scalability performance memory efficiency dataset sketch dyft performs similarity faster hwt reduce  memory version detail experimental algorithm implementation dyft organization sect formulate similarity sect review similarity sect introduce trie similarity implementation issue address sect dyft mart respectively sect extensive experimental analysis sect conclude statement sketch dimensional vector nonnegative integer alphabet alphabet denote ham distance sketch correspond formally define assume compute logσ perform logσ bitwise xor popcount operation database dynamic consist sketch insertion sketch deletion sketch ham distance sketch radius sketch ham distance sketch database sketch sketch sketch literature review summary similarity verification candidate obtain similarity similarity ham distance propose decade recent focus static setting theoretical aspect argue briefly review similarity binary integer sketch applicable dynamic datasets summarizes seminal binary sketch multi index hash mih developed mih multi index approach enables similarity observation sketch mih partition sketch sketch hash sketch similarity obtains candidate retrieve hash radius remove false positive compute ham distance offering performance configuration dataset empirically demonstrate performance mih achieve logn apart logn significantly degrades performance mih unsuitable dynamic setting database varies ham hwt developed similarity issue mih instead hash hwt construct ham binary sketch however similarity  logn slows dramatically database addition similarity binary sketch necessarily suitable integer sketch  developed multi index similarity integer sketch  reduces ham distance radius radius tune  candidate hash however approach  candidate consumes amount memory amount update   propose defines radius bypass  candidate hash variant  refer GV similarity perform algorithm mih GV modification mih integer sketch issue mih inefficiency dynamic setting variable moreover GV  experimentally demonstrate sect despite importance dynamic similarity ham distance efficient rely multi index approach hash appropriate variable parameter although hwt attempt address issue structure inefficient datasets inapplicable integer sketch trie similarity similarity dyft trie data structure trie enables similarity successful static application introduce data structure algorithm discus implementation issue dynamic similarity data structure trie label sketch node associate prefix subset sketch leaf associate sketch integer organize sketch label outgo inner node label distinct integer  leaf corresponds sketch associate leaf leaf associate sketch trie database sketch dash arrow traversal online image trie data structure database sketch sketch associate fourth leaf reorganize concatenate label leaf algorithm sketch traverse trie node integer leaf trie correspond sketch obtain extension implement similarity radius similarity traverse trie node integer error error node traversal exceeds traverse descendant sketch associate leaf reachable within error similarity prune unnecessary portion quickly perform radius complexity although   derive complexity assume perfect binary trie illustrates similarity query sketch radius traverse trie node depict dash arrow integer label error label error exceeds traversal dash arrow longer drawn leaf associate obtain implementation issue inner node trie implement mapping label pointer trie database maintains pointer consumes amount memory technique substantially reduce memory consumption omit node around leaf memory efficient trie data structure developed leverage technique however data structure inefficient similarity trie data structure employ reduction technique briefly trie trie node around replaces node hash trie hash traversal performs similarity however entry hash efficient trivially data structure replace non branching node however approach equivalent reduction approach fix threshold described sect inefficient dynamic datasets demonstrate sect another efficient implementation trie node exist implementation byte traditionally text processing application however parameter similarity preserve hash recommend  hash recommend cws consequently dynamic scalable trie data structure similarity integer sketch issue address scalability node reduction technique similarity generality node implementation technique integer sketch parameter issue realize efficient similarity dynamic dyft similarity issue efficient node implementation dyft node issue dyft dyft dynamic similarity trie data structure scalability issue introduce optimization approach finally complexity analysis dyft database traverse node along dash arrow obtain verify online image insert split leaf image false positive trie node around dyft exploit trie algorithm filter dissimilar sketch aim obtain candidate dyft database trie dyft node decrease leaf sub sketch associate sketch leaf associate sketch leaf associate sketch denote similarity traverse dyft node aforementioned manner leaf within error sketch verify algorithm algorithm insertion algorithm dyft structure empty consists empty sketch traverse dyft node deepest reachable node inner insert leaf associate leaf append dyft determines leaf split longer threshold leaf split disjoint insert algorithm insertion algorithm deletion algorithm symmetrical insertion remove leaf becomes empty remove leaf dyft optimal threshold performance dyft affected threshold verification becomes dyft defines node traversal becomes reasonable reasonable accord configuration parameter however impossible reasonable dynamic setting address issue construct model assume sketch uniformly distribute ham optimal threshold minimize fix probability node probability within error random sketch uniform distribution traverse node sketch sketch reachable within error cardinality sketch probability node define node random sketch probability computational inner node similarity descend algorithm algorithm occurs sketch cardinality occurrence probability computational fin inner node cin fin leaf verify sketch associate  logσ fix optimal threshold model append sketch split maintain split  split leaf cin  assume node   logσ splitting maintain fin logσ optimal threshold pre computable optimal threshold various parameter optimal threshold various parameter image exception address exception divisor becomes zero occurrence exception intuitively traverse node splitting leaf generates redundant node locally fix zero cannot instead incrementally compute dyft define    vin  inner node leaf dyft respectively phase  computational linear logσ  perform linear avoid redundant node traversal otherwise perform algorithm algorithm modify algorithm switch approach enables faster algorithm configuration dyft factor computational cin  implementation dyft configuration compute machine address gap theoretical practical introduce factor inner node adjust inner node cin synthetic dataset random sketch generate uniform distribution complexity simply assume constant derive complexity similarity consists traverse dyft node access verify candidate traverse node bound assume ary trie traversal access bound constant therefore complexity   verification obtain candidate insertion perform traverse dyft node splitting deletion perform traverse dyft node remove leaf update memory complexity node bound multi index variant dyft similarity dyft inefficient complexity exponential relax multi index approach manner mih define dyft structure multi index variant dyft similarity perform dyft structure threshold complexity   verification obtain candidate update memory complexity dyft implementation dyft node node implementation significant enhance performance dyft modify adaptive radix mart efficient node implementation dyft observation node implementation scheme implement mart subsequently data structure mart observation implementation scheme data structure inner node label pointer data structure refer array pointer array pointer label array directly obtain pointer array baseline observation node implementation observation binary sketch array memory efficient inner node array chunk binary sketch suppress height dyft reduce cache node node traversal enhance performance prior observation integer sketch inner node around around leaf array inefficient node array empty memory efficiency improve introduce data structure prior although adaptive radix successful data structure approach byte label lack generality scheme assume practical setting similarity preserve hash technique mart reorganizes integer sketch byte sketch suppress dyft height observation dyft node byte sketch modify data structure observation former latter approach respectively byte pack computation efficiently handle integer sketch byte sketch pack logσ integer byte  manner convert integer sketch byte sketch denotes ham distance integer sequence packed byte respectively pack dyft structure byte sketch perform similarity byte sketch inner node correspond algorithm inner node byte label radius byte label byte label denote unpacked format image label approach  computes ham distance label bruteforce generates byte label label mart performs approach accord configuration inner node sect quickly perform approach without unpack byte label introduce  ham distance byte label bruteforce byte label sort ascend simply generate scan encounter implement byte precomputed contribute quickly KB memory without unpack byte label alphabet integer packed byte label integer packed integer packed enables  compute ham distance without unpack label label consist integer label hence label label hence subsequent label scan enables bruteforce quickly generate mart representation node pointer label ptr  ptr idx  ptr  image adaptive data structure inner node although efficient data structure inner node byte label standard trie structure redundant dyft compression technique dyft mart simply modifies inner node dyft mart data structure inner node data structure illustrate algorithm algorithm  node sparse data structure node constant parameter consists array ptr byte array label ptr pointer array ptr pointer label maintain array perform  CPUs quickly simd instruction parallel  algorithm  node dense data structure node consists array idx ptr idx byte array ptr ptr pointer array ptr idx pointer label idx indicates pointer perform bruteforce idx  algorithm  node data structure consists pointer array ptr ptr pointer label data structure identical array perform bruteforce ptr  algorithm data structure header byte  consumes  consumes  consumes  memory efficient   memory efficient  respect  efficient  efficient define   inner node   inner node  adaptive selection allows pointer efficiently compact implementation leaf finally briefly compact implementation leaf leaf pointer compress pointer sparse address pointer concatenate reduces pointer factor leaf sparse address access correspond identifier dyft perform access constant implementation detail sect extensive experimental analysis approach sect issue trie similarity sect data structure performs  similarity respect scalability performance memory efficiency evaluate performance dyft dyft vector datasets  consists pre continuous vector english wikipedia fasttext vector vector dimension mnistm consists image handwritten digit image vector dimension  consists review english amazon review dimensional binary fingerprint dimension presence absence cpm consists compound protein stitch database dimensional binary fingerprint binary integer sketch datasets convert vector  mnistm binary sketch charikar  algorithm integer sketch  algorithm former algorithm preserve cosine similarity latter algorithm preserve generalize min max similarity convert binary vector  cpm binary integer sketch  algorithm algorithm preserve jaccard similarity construct index similarity insert sketch dataset random elapse insertion memory usage construction query randomly sample sketch dataset average similarity per query evaluate integer sketch practical consideration evaluate dyft hwt without multi index approach sketch radius evaluate dyft mih  GV multi index approach sketch radius fix dataset random sketch frequency occurrence integer sketch dataset percentage statistic related skewness dataset binary integer sketch respectively sort skewness easy image frequency occurrence integer sketch dataset statistic related skewness dataset cpm dataset closest uniformly distribute sketch frequency almost  mnistm skewed dyft assumption uniformly distribute sketch statistic important analyze performance dyft conduct core quad core intel xeon cpu clocked ghz machine GB ram version centos linux implement data structure compile source code version optimization flag march native code available http github com  dyft implementation detail appendix optimal threshold fix threshold mnistm cpm average millisecond sketch plot logarithmic image various threshold analyze dyft performance optimal threshold fix threshold mnistm cpm skewed dataset mnistm although assume random sketch uniform distribution effectiveness fix threshold reverse accord faster faster demonstrate efficient dynamic setting varied maintain similarity varied node reduction ratio dyft   ratio dyft node trie node percentage image node reduction analyze performance node reduction dyft reduction ratio trie without node reduction   dyft node almost trie node dyft significantly reduce redundant node memory efficiency radius reduction ratio become becomes increase within reduction ratio implementation node performance mart array array evaluate data structure implement inner node dyft array apply byte pack technique aim comparison effectiveness byte pack technique hence implement unnecessary technique compression node implementation  insertion memory usage  demonstrate validity observation sect mart array mart faster binary sketch faster integer sketch suggests suppress dyft height byte pack technique retrieval observation similarly insertion mart binary sketch due byte pack technique although array integer sketch due simplest data structure respect memory usage array binary sketch integer sketch observation mart integer sketch observation overall mart achieve relevant offs binary integer sketch dyft binary sketch performance dyft hwt hwt dynamic similarity binary sketch implement hwt source code available http github com  hwt dyft hwt average millisecond sketch insertion memory usage GB plot logarithmic image insertion memory usage increase dyft become faster hwt consistent complexity dyft hwt hwt complexity contains factor logn dataset cpm dyft faster hwt although hwt insertion complexity  dyft complexity insertion significant although memory complexity dyft hwt dyft memory efficient hwt node omit approach mart comparison dyft mih hsv binary sketch average millisecond radius average millisecond insertion memory usage GB input sketch hsv cpm plot construct index within GB memory plot logarithmic image dyft binary sketch performance dyft mih hsv binary sketch mih similarity multi index approach implement mih source code available http github com  mih hsv variant  optimize binary sketch implement hsv applicable dynamic setting std unordered dyft mih performance difference dyft mih dyft hash structure implement index insertion memory usage hsv competitive dyft mih focus average dyft mih sketch dataset insert dyft mih perform  dataset focus average review sect performance mih significantly degrade accord mih dyft maintain faster insertion memory usage mih significantly demonstrate dyft excellent similarity dataset dynamic comparison dyft GV HSD integer sketch average millisecond radius average millisecond insertion memory usage GB input sketch HSD cpm plot construct index within GB memory plot logarithmic image dyft integer sketch performance dyft GV HSD integer sketch GV modification mih HSD variant  optimize integer sketch implement GV HSD applicable dynamic setting std unordered difference dyft GV dyft hash structure implement index fairly dyft GV dyft manner GV insertion memory usage focus average GV competitive dyft HSD dyft outperform HSD focus insertion memory usage HSD competitive dyft GV review sect insertion GV data structure memory usage dyft node omit approach mart demonstrate dyft scalable dynamic similarity integer sketch summary experimental sect approach implementation issue trie similarity introduce sect although memory efficiency dyft improve node reduction reduction approach fix threshold decrease performance dataset meanwhile optimal threshold dyft maintain similarity addition mart enhance performance dyft prior data structure sect dyft outperform prior respect scalability concern binary sketch performance hwt mih decrease dataset dyft maintain addition update memory efficiency dyft concern integer sketch dyft achieve memory usage although GV update GV dyft accordingly dyft scalable achieve similarity memory usage remark dyft uniformly distribute sketch assumption uniform distribution similarity random sketch mih hwt assumption reasonable maintain datasets datasets without assumption performance dyft guaranteed conclusion dynamic similarity dyft multi index variant dyft ham distance dyft employ trie structure similarity omit dyft node reduce memory consumption maintain similarity model efficient node implementation mart achieve memory efficiency experimental analysis datasets demonstrate dyft dyft outperform similarity dyft efficiently ham distance sketch uniform distribution ham distance important text data text data necessarily uniformly distribute directly apply dyft ham distance text data future develop similarity text data arbitrary distribution leverage dyft