information centric networking ICN content replace traditional IP address data becomes independent location application storage transportation due complex structure variable content efficient content lookup algorithm becomes challenge propose efficient lookup structure ICN bloom filter lookup combine recurrent neural network rnn standard bloom filter improve lookup efficiency scheme rnn non obtain pre filter moreover content backup bloom filter reduce false negative generate model addition evaluate performance propose algorithm experimental simulation bloom hash  reduce false positive rate improve accuracy furthermore memory bloom hash  previous keywords information centric networking bloom filter lookup recurrent neural network introduction rapid increase network information content user mainly concerned content location content information internet undergone tremendous host centric model conducive development information publish subscribe affect efficiency information acquisition network architecture information centric network ICN propose traditional IP network ICN transmits data packet content improve transmission efficiency directly protects content improve security information issue ICN architecture rout cache congestion due increase user demand information improve rout efficiency information greatly satisfy user hence rout becomes urgent unlike IP network ICN data content request content publishing content network responsible return request content router component ICN content CS information fib pending pit rout node retrieves content package contains desire content IP address router identify interface content prefix fib rout technology cannot ICN structure complicate due diversity varies fix IP address therefore lookup quickly accurately becomes challenge improve efficiency lookup reduce memory usage bloom propose binary data structure bloom filter efficiency mitzenmacher bloom filter efficient lookup scheme bloom filter hash function detect member however standard bloom filter cannot delete entry propose CBF lookup strategy delete insert entry dynamically reduce memory consumption increase rate propose  stage counting bloom filter CBF reduces memory access complexity propose strategy combine bitmap bloom filter strategy memory prefix trie   propose lookup strategy efficiency memory footprint bloom filter propose architecture bloom filter machine model improve query efficiency structure significant false negative conflict hash function bloom filter false negative machine bloom filter construct lookup ICN leverage layer model bloom filter obtain pre filter model layer layer accurate lookup recurrent neural network rnns significant propose lookup algorithm rnn model algorithm extend generate false negative layer structure backup bloom filter layer lookup propose insertion algorithm lookup structure overview lookup traditional bloom filter analyze false positive probability bloom filter analysis lookup mathematical analysis false positive rate moreover multiple comparative contribution summarize novel lookup bloom filter model backup bloom filter construct model analyze false positive probability generate structure construct function instead multiple hash function reduce conflict propose algorithm insertion lookup reduce false positive probability validate performance propose various simulation organize discus related outline lookup structure lookup traditional bloom filter analyze false positive probability bloom filter analysis lookup mathematical analysis false positive rate devise insertion algorithm lookup algorithm simulation conclude outlook related due important role lookup ICN rout become topic research combine machine standard bloom filter bloom filter optimize lookup efficiency trie scheme IP rout prefix IP packet rout interface associate prefix target IP address content ict IP address due variable content variation therefore prefix scheme prefix ICN sort content prefix determines content query prefix LPM trie propose trie lookup trie lookup packet ndn packet rout trie analyze exist entry packet promising reduces memory footprint improve lookup   propose architecture BF exist data sort lookup performance reduces precision lookup extent lookup depth increase performance greatly ICN due indefinite structure depth increase affect performance lookup cannot apply network environment bloom filter variant trie lookup another lookup bloom filter propose bloom filter prefix bloom filter data structure adjust accuracy member adjust false positive rate efficient accurate content propose bloom filter pre prefix improve efficiency probability false positive depends amount content filter array filter hash function calculation improve accuracy lookup researcher developed variety standard bloom filter ICN propose lookup adaptive prefix bloom filter decomposes ndn prefix bloom filter decompose prefix lookup dynamically adjust popularity reduce memory occupy standard bloom filter cannot delete content memory footprint increase addition content hence counting bloom filter CBF propose counter delete propose stage CBF strategy optimize data structure bloom filter CBFS reduce memory access however exist lookup strategy improve performance fail resolve conflict neural network scheme optimize propose index traditional model content signal effectively predict existence data distribution highly optimize content lookup environment data fully workload dedicate data however machine correlation data efficient content lookup architecture neural network powerful machine model largely replace traditional lookup architecture bloom filter replace model predicts content exists content content built directly exist bloom filter model hash function optimize efficiency statement model bloom filter ICN bloom filter lookup content replaces multiple hash function machine model basis standard bloom filter content model lookup structure content lookup standard bloom filter finally propose data structure bloom filter query lookup structure overview bottleneck standard bloom filter technology multiple hash function improve lookup accuracy reduce false positive rate lookup generate memory footprint bloom filter billion content false positive rate gigabyte false positive rate gigabyte therefore propose structure reduce memory usage due continuous development machine technology flexible application scenario machine ICN improve efficiency content lookup node reduce memory consumption bloom filter lookup structure rnn model instead standard bloom filter model content however model defect experimentation lookup false negative therefore backup bloom filter reduce false negative generate model model increase data structure becomes stable accuracy lookup increase overview bloom filter lookup structure query content bloom filter IP lookup bloom filter propose applicable rout ICN processing membership inquire performance bloom filter false positive probability probability wrongly report bloom filter array bloom filter hash function compute correspond array array calculates hash independent hash function correspond hash address multiple content bloom filter hash function compute correspond member exist false positive ICN content url bloom filter lookup rout insert URLs bloom filter content contains com baidu image prefix com baidu com URLs insert bloom filter parameter url compute hash hash function correspond array already content insertion bloom filter accord bloom filter false positive probability probabilistic analysis relationship false positive probability independent content array hash function affect false positive probability illustrate conclusion content false positive probability server bloom filter hash function false positive probability reduce conflict improve query accuracy filter increase content therefore bloom filter ICN lookup rout memory statement ICN perform lookup chip memory fib maximum packet  assume chip memory mbytes maximum allowable LPM prefix perform efficient lookup ICN issue formal description summary notation define request rout interval prefix pre fib assume router receives packet within interval packet request content request rate memory footprint generate entire architecture summary notation   request  prefix entry fib  non model training  data structure  algorithm memory false positive rate  interval  definition formalize entire lookup suppose request packet packet content rout node content prefix algorithm successful correspond hop interval shorter generate prefix return default interface however algorithm generate false positive rate define false positive rate generate lookup aim minimize memory occupy lookup optimize lookup algorithm improve accuracy lookup reduce false positive rate generate lookup express acceptable threshold false positive probability structure bloom filter novel structure ICN lookup improve efficiency minimize lookup false positive index structure machine standard bloom filter reduce index recurrent neural network rnns model query predict model construction bloom filter binary classification task frame index denote corresponds bloom filter previous denote non training neural network logistic sigmoid function probability belongs probability estimate therefore probability predict sample output probability predict sample output accord maximum likelihood estimation combine joint probability density loss function structure ICN lookup replace standard bloom filter model firstly query index model belongs output prefix hop belong model backup bloom filter bloom filter backup bloom filter prefix hop otherwise data purpose backup bloom filter avoid false negative model framework lookup bloom filter due model false negative rate generate ensure false negative rate threshold backup bloom filter reduce false negative rate exists false negative backup bloom filter bloom filter false negative rate model false negative rate model hash function array sigmod function mapped define function hash function bloom filter backup bloom filter false negative model model hash function farther otherwise closer structure experimental backup bloom filter insertion analyze false positive probability false positive probability important indicator accuracy lookup analyze false positive probability model backup bloom filter architecture compose model non false positive rate largely false positive backup bloom filter related analysis formal definition false positive probability generate lookup structure consists model bloom filter model non query query satisfies judge false positive model via model return false negative false positive backup bloom filter false positive probability depends data query data formally define false positive probability bloom filter false positive probability query model false negative probability generate false positive probability backup bloom filter backup bloom filter  depends false negative definition false positive probability bloom filter structure backup bloom filter false positive rate random variable varies depends false negative generate model therefore expectation false positive rate backup bloom filter assume budget backup bloom filter false positive probability bloom filter described perfect hash function bloom filter backup bloom filter derivative formula minimum bloom filter rnn predict false positive probability sufficient data query query false positive probability concentrate expectation false positive probability predict infinitely false positive rate definition denote false positive rate generate bloom filter false positive accord definition combine chernoff bound propose motwani  theorem azuma hoeffding inequality obtain bound false positive rate generate structure theorem bloom filter query random variable correspond false positive rate random variable correspond false positive rate query proof false positive rate bloom filter probability distribution bound formula summary important suitable probability false positive probability expectation lookup propose algorithm detail bloom filter ICN lookup insertion algorithm architecture consists layer layer model generate false negative backup bloom filter reduce false negative model structure insert backup bloom filter improve lookup accuracy insertion algorithm backup bloom filter facilitate lookup algorithm insertion entry backup bloom filter input threshold calculate accord calculate accord backup bloom filter backup bloom filter backup bloom filter apply insertion algorithm bloom filter treat insert backup bloom filter standard bloom filter insert reduce conflict standard bloom filter combine multiple hash function hash function correspond backup bloom filter algorithm hash function function variable hash function mapped non mapped approach greatly reduces memory footprint conflict algorithm entry bloom filter input non threshold output invoke rnn construction calculate accord output hash hop backup bloom filter backup bloom filter output hash hop lookup algorithm construct backup bloom filter lookup algorithm bloom filter structure denote non neural network rnns algorithm lookup via bloom filter structure model threshold demarcate model satisfies database output prefix correspond hop avoid false negative backup bloom filter filter prefix hop otherwise data package model preprocess query data entry fib reduces memory efficiency model rnn preprocess rnn memory function predict occurrence previous therefore improve lookup efficiency avoid unnecessary memory consumption experimental finding data accuracy training lookup limited data therefore appropriate data accuracy lookup false negative transfer backup bloom filter analysis improve accuracy algorithm experimentally demonstrate clearly emphasize relevance bloom filter ICN scenario simulation ICN content content request user actual distribution prefix prefix uniform dynamically data blacklist domain information url obtain network randomly extract data data calculate distribution information prefix content concentrate content prefix prefix distribution evaluate efficiency model structure bloom hash rnn comparison mainly metric false negative probability false positive probability memory URLs web algorithm implement software python device configure 8G ram intel core TM core 7GHz cpu crawl URLs positive negative randomly extract data positive insert positive fib randomly assign interface conduct query simulate lookup ICN false negative probability bloom filter lookup contains layer architecture model layer false negative layer reasonable threshold reduce false positive probability entire model data false positive rate comparison hidden layer neural network respectively false negative probability generate situation almost false negative probability generate model false positive probability approach false negative rate hidden approach false negative rate hidden closer tends accurate output model false positive rate verifies previous analysis comparison influence threshold rate selection false negative rate false positive rate false positive probability hidden layer neural network false positive rate generate situation almost false positive rate hidden rate epoch bloom filter  false positive rate increase memory footprint decrease bloom filter rate epoch false positive rate false positive rate memory footprint  model bloom filter model false positive rate memory footprint generate model model memory footprint false positive rate reduce rate data training decrease rate rnn false negative rate generate model reduce false positive rate verifies previous analysis memory rnn rate epoch memory database insert fib increase correspond memory footprint  bloom filter comparison memory footprint generate structure increase increase rate epoch model model memory footprint increase model amount memory memory footprint increase memory footprint generate  around model memory footprint bloom filter lookup consumption lookup hash structure bloom filter  model lookup increase prefix prefix consumption generate bloom filter bloom filter lookup multiple hash function calculate content generate conflict therefore handle conflict  lookup structure consumption average lookup stable average hash stable increase content consumption increase rapidly model content lookup consume implies lookup content efficient component processing lookup average summary model performs data preprocessing rnn backup bloom filter reduces false positive rate bloom filter although  obvious advantage memory usage false positive rate lookup increase average consumption becomes closer hash growth rate consumption decrease parameter rnn internal structure efficiency achieve processing amount data memory footprint achieve conclusion outlook lookup architecture ICN propose bloom filter lookup contains layer structure model backup bloom filter firstly predictability rnn preprocess ICN bloom filter achieve accurate efficient lookup bloom filter architecture memory usage false positive rate standard bloom filter structure architecture direction deployment actual ICN ICN router deployment future model optimize improve performance efficiency training data conduct architecture lookup