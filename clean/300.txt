software define networking sdn enables flexible network management define abstraction data operator issue policy counting rate limit enforce data however multiple active policy priority potentially trigger conflict policy overlap explosion contrast local switch conflict resolution scheme propose previous tackle angle resolve policy conflict coordinate switch global centralize specifically propose conflict razor cora tremendously reduces storage conflict policy leverage global network information obtain controller cora migrate policy explosion across network semantics equivalence cora NP hardness propose heuristic efficiently optimal policy migration strategy demonstrate cora effectively reduce storage occupation averagely within efficient previous keywords software define networking compression policy conflict introduction software define network sdn decouples switch data offering enhance programmability via abstraction intent bound interface  operator intent native code python program ryu controller domain specific DSL snap script intent firstly compile distribute policy associate packet correspond action underlie switch policy translate hardware specific load device prefix entry ternary content addressable memory TCAM however policy issue controller  specify action overlap network device policy conflict resolve perform combination action conflict resolution potentially incur performance penalty resource inefficiency underlie network illustrate conflict resolve qos function monitoring function coexist network former policy switch limit bandwidth mbps packet dstport latter policy packet dstport switch policy conflict due action overlap straightforward cooperate policy switch split sub policy non overlap limit mbps limit mbps limit mbps intuitively fragment policy inevitably generate resolve conflict policy switch conflict others sub policy fragment addition multi dimension conflict entry scenario conflict aggravates heavily context sdn switch traditional tuples extra generate policy reflect overhead costly translate policy hardware specific packet dstport TCAM switch convert prefix entry expansion entry dstport literature investigate mechanism efficient conflict resolution efficient policy overlap priority retain priority avoid fragment policy fully priority redundant eliminate memory however technique extra policy inevitably generate fully another attempt reduce minimize expansion specifically TCAM device however optimization address policy conflict indexed policy consume TCAM entry although openflow specification proposes pipeline mitigate aftermath policy conflict simply employ pipeline dramatically increase width network slice individual network function isolate conflict actually disables multiple network function traffic function manage disjoint nowadays sdn resource constraint syntax compilation adopt generate efficient placement policy mitigate conflict beforehand however global operator intent violates assumption intent issue individual operator controller cannot cooperate policy explosion ascribed overlap migrate conflict policy local switch reduce overlap decrease policy entry prerequisite ensure network function semantics modify policy destination along action apply rewrite mirror controller etc sdn global information data policy utilized guarantee requirement recall aforementioned conflict eliminate counting policy switch adjacent switch along rout behavior remains counting action apply switch along insight propose conflict razor cora efficiently resolve policy conflict sdn policy network function migrates conflict maker switch feasible switch relieve conflict equivalent semantics nutshell cora efficient conflict elimination cora leverage switch information data dramatically decrease conflict optimal cora applies effective heuristic conquer NP worth cora focus efficiently eliminate conflict global network cooperate exist reduces minimizes policy switch specific transfer enables possibility cooperate local conflict resolver combination improve optimization performance transfer specific switch local conflict resolver maximize extension preliminary contribution explore potential benefit technical challenge migrate policy across network propose semantics preserve migration mechanism address challenge retain rout slice endpoint action etc formally define optimal policy placement policy conflict NP hardness heuristic generate optimal placement implement prototype cora synthetic policy configuration topology evaluate performance experimental cora reduce conflict overhead within acceptable retain intent contribution typical local optimization cora demonstrate compatibility exist local switch compression algorithm cora exist approach pack local resolve demonstrate optimality reminder organize demonstrates policy conflict proposes semantic preserve transfer retain intent defines optimal placement global heuristic algorithm obtain optimal within acceptable aggregation optimization local switch demonstrates compatibility cora evaluates cora performance discus extension cora related concludes transfer policy  conflict policy conflict sdn specify category operator intent rout intent endpoint intent rout intent specify ingres egress packet driven traffic engineering goal endpoint intent focus packet behavior counting mirror controller modify header etc controller scenario intent issue  controller compose compile distribute policy policy switch properly prioritize however advocate multiple controller coexist network hypervisor ability combination controller application therefore policy controller overlap priority trigger policy conflict due barrier  exist hypervisors cannot reconcile policy resolve local switch formally policy denote switch policy priority policy  action applies policy conflict iff resolve conflict naive fully decouple overlap continuous fragment performs combination action correspond policy conflict policy decouple policy expand continuous transform policy policy conflict policy naive decouple policy increase complexity policy illustrates policy conflict dimension  srcip qos policy limit bandwidth packet sub fully resolve conflict naive efficient conflict inclusion dimension conflict perspective axis srcip therefore axis instead retain policy priority overlap axis apply analysis axis extra policy resolve conflict solid shadow however priority efficient tame explosive growth policy inclusion commonly IP due prefix representation contrast dstport  overlap inclusion cannot resolve priority priority transform policy  prioritize overlap switch TCAM implement expands entry formally define encode entry internal expansion specifies consume entry TCAM policy conflict fragment overhead scenario beyond complexity squeeze limited TCAM resource policy conflict conflict policy policy decouple conflict cora exist technique focus minimize overhead decouple conflict contrast cora treat angle aim eliminate conflict migrate policy reduce conflict global network instead expand policy local switch linear topology switch policy switch sub policy fully decouple conflict naive priority respectively however transfer sub policy priority generates policy overall policy decrease performance gain significant TCAM switch potential benefit properly migrate policy however arbitrarily migrate policy intent operator recall network configuration prerequisite transfer cannot rout policy packet transfer packet transfer rout policy packet action cannot properly trigger carefully address retain intent challenge optimal policy placement acceptable policy network easily highly dependent conflict overlap  conflict simply exhaust policy placement obviously infeasible policy combination policy policy placement adjacent switch policy placement transfer summary cora address challenge semantics equivalence transfer operation semantics preserve guarantee fulfillment multiple network function optimal placement policy transfer satisfy constraint physical switch capacity minimal network semantics preserve transfer trivial correctly transfer policy arbitrary policy placement intent rout intent endpoint intent rout intent rout intent compile rout policy individual switch packet hop dependency policy transfer rout policy another switch modify related rout policy previous hop rout policy fulfill rout besides cannot guarantee traffic engineering requirement satisfied intent hidden compilation cannot reverse engineer policy therefore rout policy fix cora ensure semantics equivalence rout intent conflict rout policy  cora cannot packet hop conflict multiple controller rout individually resolve compose rout intent semantics assume rout intent handle controller application isolated rout application rout policy conflict endpoint intent endpoint intent perform specific action packet intent action trigger packet header endpoint intent compile endpoint policy partial intent split depends placement rout intent packet traverse switch intuitive transfer endpoint policy along rout target switch ability perform action specific principle transfer endpoint policy rout policy endpoint policy consistent transfer endpoint policy rout policy packet dstport endpoint policy packet dstport cannot directly transfer switch connects fail packet dstport policy transfer constraint endpoint policy slice endpoint policy switch transfer exists rout policy switch transfer exists rout policy switch connects backward transfer discus transfer pre hop multi hop transfer combination multiple principle ensures semantics endpoint intent dependency endpoint intent constrain placement endpoint policy endpoint policy modifies vlan packet vlan another policy packet vlan trigger policy reflect intent trigger policy script otherwise verify correctly assume initial placement already satisfied intent therefore trigger policy cannot violate generally depends packet maintain intent dependent policy cannot endpoint policy conflict header modify policy transfer ingres egress header modify policy constraint forbids transfer header modify policy rout policy definitely header modify policy transfer hop modification rout rout policy handle unmodified header hop likewise pre hop infeasible rout policy modify header switch summary policy slice policy transfer switch satisfies constraint rout policy restriction critical action definition define semantics preserve function policy adjacent switch input output policy specifically neither slice transfer transfer switch slice denote transfer switch notation replace optimal placement formulation optimal policy placement placement switch minimize previously optimal policy placement model policy assign switch assignment policy switch profit switch capacity goal maximize profit assure switch capacity model capture assignment gap NP however gap assumes fix dependent placement policy scenario depends policy previously assign switch varies conflict policy switch define extend placement policy optimal placement dependent  address  sub combination policy dcp assign combination switch ACS sub independent dcp considers penalty policy determines policy network ACS focus optimal placement combination satisfy capacity constraint define variable involve  address sub respectively variable notation variable  policy assign denote however cannot directly endpoint policy policy cannot assign switch slice policy transfer switch due semantics preserve transfer restriction address utilize semantics preserve function policy fragment independently assign switch fragment policy illustrate algorithm variable  straightforward switch network capacity denote policy decouple decouple policy expand dcp policy assign model dcp expand candidate policy assume policy candidate combination policy denote goal subset denote satisfy requirement switch policy combination pairwise disjoint union minimal goal constrains switch cannot assign switch independently goal seek disjoint goal minimize policy analysis formulate dcp integer linear program maximize profit policy profit define reciprocal policy restricts policy exactly constrains switch defines variable dcp representation disjoint NP ACS assign policy switch optimal policy dcp assign switch goal ACS ensure assignment exceed capacity switch assume policy switch network formulate ACS integer linear program introduce parameter assign switch specifically policy transfer switch policy cannot transfer switch ACS reduce gap assume profit assign policy therefore ACS NP summary due complexity dcp ACS  cannot polynomial heuristic optimal placement  computationally intuitive utilize exist approximate algorithm optimal however model dcp expand policy combination candidate largely impact complexity dcp exponentially increase therefore exist approximate algorithm propose heuristic approach optimal policy placement acceptable consumption specifically optimal placement satisfy requirement switch beyond capacity switch minimize entire network standard deviation switch minimize likely overflow policy greedily conflict maker policy endpoint policy iteratively semantics transfer target switch profit policy decrement switch remove conflict maker straightforward traverse policy heuristic optimization apply conflict policy instead precise reduce TCAM switch pre compute policy beforehand transfer impact switch compute policy switch accelerate conflict maker conflict maker transfer profit specifically denote switch exceeds capacity placement denote exceed network define standard deviation switch denote placement policy notation define profit placement otherwise seek profit semantics preserve transfer conflict maker transfer policy placement placement optimal illustrate algorithm acceptable due exceed capacity report operator incremental placement update optimize placement incrementally adjust delete policy policy delete switch remove sub policy reduce due removal recompute profit adjacent switch additional transfer profit policy switch compute conflict exist increase limited policy transfer obtain optimal placement policy modification combination delete policy policy policy update entire rout perform cora batch update cooperation local optimization nutshell cora decides worthy transfer adjacent switch compute profit potential transfer performs transfer profit compute profit cora employ local conflict resolver reveal benefit transfer factual overhead transfer another switch computation profit extensible cora architecture cora cooperate exist local conflict resolvers adopt computation typical local optimization policy aggregation demonstrate compatibility cora optimization local TCAM compression algorithm category algorithm algorithm former algorithm aggregate prefix format convert decision traverse optimal aggregation apart prefix ternary aggregate algorithm aggregate specific relation compression fib aggregation algorithm typical compression specifically fib aggregation transforms entry prefix binary compose binary aggregate entry hop insert delete combine binary node sibling node algorithm traverse cardinality node hop sibling node node delete node hop subsequence prefix node insert traditional dimension scenario openflow assume dimension srcip   dstport extend algorithm cooperate sdn specific scenario specifically focus entry dimension aggregate fourth building cardinality dimension none aggregate dimension policy   dstport srcip binary srcip sibling node binary aggregate entry entry aggregate others compression algorithm prefix specify prefix contrast TCAM combine entry TCAM ternary algorithm weave aggregate ternary specific dimension entry adjacent TCAM entry decision ham distance merge entry replace improve aggregation efficiency optimization swap merge apply performance evaluation evaluation setting evaluate semantics equivalence optimization performance migrate operation cora implement cora python code topology capacity switch policy placement input placement output cora topology stanford backbone fattree switch respectively topology slice global network address switch topology assign network switch host IP simulate abundant intent topology specifically  generate packet classification srcip mask  mask   action regard endpoint intent action integer endpoint action specific denote header modify action modifies srcip  randomly simulate nat function default mask remove mapping srcip  switch obtain correspond rout intent shortest generate srcip  split intent IP network generate rout policy switch accord rout intent randomly endpoint policy along rout endpoint intent endpoint policy header modify policy adjust rout policy switch maintain evaluation capacity switch setting generate configuration evaluation expand policy priority entry TCAM switch cora heuristic optimize pre generate configuration obtain fix optimize cora perform cora report average performance policy configuration evaluation topology expand policy  deviation overflow switch stanford fattree fattree stanford fattree fattree stanford fattree fattree semantics equivalence header analysis HSA verify semantics equivalence cora specifically pairwise connectivity generate topology policy internal ID action traverse network trigger action perform cora semantics preserve transfer cora retains intent placement optimization apply heuristic algorithm propose reconcile optimal placement global network metric evaluate performance cora global policy standard deviation policy placement priority optimize policy switch assume data TCAM switch demonstrate significance policy expand policy decrement perform cora policy topology average policy eliminate properly transfer policy decrement severe conflict policy placement depicts improvement standard deviation obtain cora decrement achieve average respectively performance cora factor  policy standard deviation placement profit distribution fattree deviation fattree significant decrement policy optimization efficiency cora dependent target switch transfer policy target achieve optimal due connectivity policy stanford topology obtains decrement fattree topology average switch cora exist approach pack rectangle refer pack local conflict resolver refer local cora reduce pack local respectively boost cora mainly ability arbitrary flexible transfer contrast local optimizes local pack transfer rectangle finally gap cora optimal however due extremely complexity cannot obtain optimal placement feasible configuration instead configuration consists switch endpoint policy cora achieve optimality quantify optimality cora configuration future aggregation compatibility exist local conflict resolvers apply aggregation algorithm enhance cora profile policy  naive priority optimization policy aggravate aggregation compression combine policy policy policy migration efficient standard deviation decrease apply local optimization prof cora performs local conflict resolver overhead perform cora policy configuration ensure optimization within acceptable overhead optimization within impact factor cora optimization efficiency distribution policy connectivity topology  connectivity achieve placement fattree topology fattree deviation relative connectivity contrast policy distribute evenly fattree connectivity therefore topology feature improves scalability cora handle topology simulate scenario policy update intent specifically randomly policy delete policy optimize placement optimal placement cora modify policy fattree topology due incremental update algorithm cora limited policy switch involve recomputation stable depict minor additional consume aggregation optimization benefit incremental update strategy discussion transfer endpoint policy rout policy fix ensure semantics equivalence rout intent limit transfer rout policy rout policy account migrate flexible global optimization optimize policy separable global optimization transform policy switch policy assume entire assumption simplifies optimization suffers performance transformation entire policy hardly decrease storage however splitting correspond policy sub policy translate switch explosion extremely decrease global optimization modify optimal besides sdn scenario transfer minimize storage conflict policy policy distribution situation entire network related efficient policy placement network however limitation aspect briefly classifies detail although compress IP lookup firewall traditional network widely limited mostly tuples involve sdn scenario switch data unbounded realize grain drastically increase complexity apply traditional compress phenomenon infer approach broader sdn architecture global sdn benefit gain properly transfer policy besides mention exist optimization switch  employ cora previous literature related policy conflict resolve   local compressor compress  effective handle dimension conflict sdn network slice isolate  operation traffic DSL resolve conflict  assume policy described DSL another attempt avoid policy conflict slice network isolated network function tenant however technique address policy conflict application engage application issue policy resource overlap sdn propose facilitate compose network individual program correspond controller carefully prioritize generate policy conflict resolve future conflict cannot completely avoid detect policy sdn program unified perfect multiple controller coexist network none handle conflict priority policy previous efficiently endpoint policy priority suitable scenario due ref closest address endpoint policy placement recursively effective rectangle overlap switch switch reduce however ref selects rectangle pack cora arbitrary traditional placement reduce gap exist approximate algorithm leveraged obtain optimal however involve policy conflict assign policy switch independent cannot transform version gap investigate gap dependent assume pairwise dependency assignment employ global dependent variable contrast  introduces complex dependency assignment dependent previous assignment conclusion propose cora conflict razor policy sdn contrast policy conflict resolution local switch previous cora distribute specifically detects significant conflict maker migrates local switch switch retain semantic equivalence centralize controller grasp global entire network global coordination feasible identify cora NP hardness propose heuristic approach optimal within acceptable bound demonstrate cora effectively reduce storage occupation within cora collaborate exist local conflict resolver