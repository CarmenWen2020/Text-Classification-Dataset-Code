ongoing telecommunication softwarization role played virtual network function deployed environment interconnect software define network separation data service logic capitalize enables elasticity flexibility efficiency ict ecosystem however dedicate reliable monitoring advantage software telecommunication effectively combine metric various asset global infrastructure offload monitoring task improve scalability seamlessly integrate exist interface propose monitoring module requirement impose softwarization reference architecture propose along fundamental assumption upon proof concept implementation standalone virtual network function fully decouple exist feature freedom available adaptability heterogeneous softwarized infrastructure modification exist software hardware component propose modular architecture interface integrate variety statistic asset relieve burden computational intensive monitoring task carefully validate propose unified standalone monitoring module numerous scenario address various aspect potential impediment series internal testbeds auxiliary public environment obtain monitoring significant advantage respect exist integrate therefore cooperate sophisticated traffic steer management mechanism operating combine network compute resource furthermore demonstrate easily portable instance public environment keywords monitoring module unified NFV sdn universal ict softwarization introduction ongoing softwarization telecommunication network capitalize software define networking sdn network function virtualization NFV compute outstanding trend separation network service function underlie physical infrastructure feature concept catalyst others foster transition ict ecosystem software network function nfs intend dynamically deployed virtual machine vms container interconnect via sdn within environment architecture flexible easily scalable reliable efficient however reliable resource monitoring advantage softwarization adjust infrastructure convergence sdn NFV compute technology monitoring metric typical network domain variety compute asset moreover impact performance exist integration related heterogeneous component thoroughly fortunately aforementioned challenge confirm recent survey advantage feature softwarized environment global combine resource demand resource provision integration domain enable demand unified standalone monitoring propose monitoring module standalone virtual network function VNF compatible generic sdn NFV infrastructure deployed environment exist component measurement asset decouple monitoring module standalone VNF spare critical controller additional workload brings advantage feature freedom modular architecture enables flexible integration variety component gathering metric behalf propose platform modification exist software hardware purpose integration widely implement protocol interface finally update monitoring module trigger component propose standalone monitoring module monitoring information service orchestrator traffic steer mechanism operating complex infrastructure comprise network compute resource additionally useful discover limitation performance virtualized infrastructure manage provider propose implement deployed thoroughly validate experimental environment testbeds openstack OS platform built container technology furthermore public environment automation portability organize network compute resource monitoring integrate monitoring reference scenario combine sdn NFV discus background unified standalone resource monitoring module architecture unified monitoring module propose whereas implementation propose described detail report analysis experimental validation perform numerous scenario concludes related comprehensive survey network data collection propose numerous propose purpose monitoring sdn network survey isolated NFV monitoring framework widely analyze literature recent survey address issue additionally popular virtualized infrastructure manager VIMs hypervisors comprise meter module information utilization host machine vms furthermore purpose public compute infrastructure detailed monitoring resource utilization mandatory feature provider ensure precise billing granularity however scope unified approach monitor NFV sdn infrastructure concentrate purpose sdn NFV entity instead refer approach suitable NFV sdn infrastructure important challenge recent survey network compute originate metric approach however contrast assume solely network compute metric network monitoring compute monitoring respectively integrate monitoring generic framework aim construct service chain NFV sdn infrastructure unified monitoring networking compute resource however due tutorial implementation detail concept useful practical furthermore author assume monitoring module integrate NFV manager sdn controller deteriorate performance monitoring framework closest propose release source project architecture author assume sdn important enablers virtual network function chain  regard monitoring module assume candidate monitoring framework limit amount information exchange offload scalability crucial issue NFV data centre DC environment monitoring effective accurate utilize mechanism lightweight however despite mention similarity significant architectural difference exist framework dedicate widely implement sFlow protocol network metric instead gathering openflow statistic network overload openflow statistic accuracy efficiency strongly network load impose utilization sdn controller switch difference regard author deployment monitoring agent module within VNF instance VNF specific metric addition exist platform monitoring facility openstack ceilometer module challenge deployment integration exist infrastructure limited experimental slightly extend project deliverable evaluation perform focus aspect load reduction channel accuracy anomaly detection implement monitoring module differently detailed comprehensive experimental effectiveness framework data interconnect sdn network openstack host VNFs dedicate probe assume instal server report VNF specific parameter vim sdn controller information network utilization software switch vim aspect proof concept poc prototype propose however approach engages sdn VNF monitoring activity impose additional resource utilization drawback network monitoring solely network metric suffer NFV specific metric neglect monitoring module propose integrate component floodlight sdn controller performs periodical network measurement openflow statistic aim monitor bandwidth usage identify congest link network metric VM migration perform vim accord propose algorithm neglect information cpu ram utilization action significant limitation VM deployment additionally architecture overhead network layer differently proposal monitoring function integrate orchestration sdn network monitoring mention core function orchestrator important DC environment complex traffic however important limitation mention regard solely network measurement perform specific metric neglect negative impact optimization perform disadvantage related validation perform simulation technique differently poc prototype realistic experimental environment propose finally author developed distribute network monitoring framework leverage information software switch identify bottleneck tier application measurement perform compute domain collector integrate component imposes additional resource utilization aspect propose monitoring framework compute infrastructure author described dedicate data network focus efficient orient counter despite significant difference respect approach worth mention due similarity monitoring module entity scalability independence sdn architecture compute monitoring similarly report nova project partially framework architectural similarity exist aim sdn monitoring propose detect report abnormal NFV infrastructure purpose cpu memory utilization function traffic handle VNF analyze however network metric significant limitation issue regard technical detail limited conversely thoroughly report experimental assessment framework realistic testbed recent publication nova project summarizes project achievement novel concept related metric monitoring framework propose probe network infrastructure aim information originate layer assume valuable NFV however fundamental network metric neglect furthermore emerge network service header nsh protocol recently define ietf unfortunately production implementation nsh node limited contrary approach widely deployed protocol sFlow universal communication interface unified monitoring sdn NFV infrastructure principle sdn summarize data user data traffic decouple management functionality logically centralize perform entity sdn controller sdn infrastructure effectively programmed controller northbound interface application layer NFV adopts virtualization technique network function NF deployment numerous nfs virtualized specific service deployed infrastructure VNFs desire accord service provision defines  service function chain sfc VNFs deployed environment compute storage networking resource provision demand manage orchestration controller entity feature sdn NFV compute paradigm enhance potentiality others mutual advantage building network softwarization summarize specifically demand resource provision elastically deploy VNFs sdn component preserve multi tenancy capability approach allows allocate resource accord requirement ensure performance reliability eliminate provision expensive dedicate hardware reduction additionally sdn advantage global network infrastructure easily implement sophisticated programmable traffic steer mechanism reduce overall load environment ensure efficient connectivity VNFs finally NFV enables development application aware architecture combine compute networking function environment elasticity efficiency softwarized building allows integration cooperation image KB image mutual advantage sdn NFV compute paradigm respective monitoring capability building sdn NFV compute monitoring capability regard infrastructure monitor specific physical virtual machine deployed host VNFs additional monitoring agent report detailed metric specific VNF rate packet inspect average finally sdn infrastructure data network load aware manner mapping relevant  however fully benefit described ecosystem monitoring module conduct unified measurement distribute heterogeneous resource monitoring effectively combine metric formulate comprehensive conclusion resource usage furthermore fully decouple monitoring task monitoring sdn VNF controller orchestrator VNF advantage virtualization capability enable infrastructure finally monitoring module utilize protocol seamless integration exist infrastructure introduce redundancy unified monitoring propose aforementioned requirement advantageous perspective feature freedom exist monitoring module enable feature optimization complex infrastructure global automation service deployment combine capability react data demand placement VNFs dynamic modification  combine sdn enable traffic steer mechanism ensure desire quality service qos furthermore aware issue joint online resource provision effectively address approach extend fog compute paradigm latency aware traffic management global knowledge networking compute resource unified monitoring architecture description propose unified monitoring report describes architecture fundamental assumption highlight advantage respect previously exist report describes poc implementation description compatibility generic sdn NFV infrastructure emphasizes usage exist protocol monitoring additionally versatility portability proven deployment environment testbeds public feature achieve improvement demonstrate experimental validation described significant propose unified standalone monitoring module separation monitoring function management component monitoring module software deployed VNFs advantage choice implies decouple management component independent specific network controller technology interaction management northbound interface majority sdn controller ryu ONOS  orchestrator virtual network function manager  VIMs openstack kubernetes complex consume technology dependent integration specific moreover approach offloads exist monitoring task consequently decisional burden action additionally perspective commercial implementation update monitoring module integration effort customer sdn controller VNF orchestrator thanks unified approach standalone monitoring module consistent information automatically trigger traffic steer mechanism jointly account network compute resource interact network controller orchestration software coordinate manner finally modularity facilitates potential extension monitoring module version propose focus passive monitoring however active monitoring feature component responsible active monitoring orchestration deployment traffic generator configuration infrastructure handle monitoring traffic setup network deploy VNFs measurement schedule exist component monitoring extend interface communicate component architecture propose unified monitoring sdn NFV infrastructure interaction sdn controller vim component belong management whereas refer data module latter vms implement VNFs virtual switch vswitch OvS instance interconnect within physical host machine HM hardware switch interconnect physical host unified standalone monitoring module monitoring data source VNF orchestrator sdn controller respective northbound application program interface apis directly network infrastructure exist widely standard protocol sFlow image KB image architecture monitoring module data vim virtualized infrastructure manager api northbound api  protocol VM virtual machine OvS vswitch HS hardware switch solid dash dot denote communication related monitoring module sdn controller northbound  vim respectively modular propose monitoring additional freedom data source query instance infrastructure rely detailed statistic sdn controller openflow sample data physical virtual switch sFlow granularity monitoring information load impose therefore whenever data directly sdn NFV infrastructure sufficient monitoring module understand resource corrective action propose approach allows offload management burden operation redundancy advantageous uninterrupted statistic gathering malicious behavior aim disrupt monitoring infrastructure byproduct monitoring module programmed react trigger controller orchestrator perform corrective action aim avoid performance deterioration prototype implementation developed prototype unified standalone monitoring module deployed experimental setup implement architecture displayed discus technical detail prototype experimental environment subsection focus environment specific monitoring module developed software application python due suitability prototyping purpose implementation api monitoring module aggregate information multiple source prototype module implement data collection openstack ceilometer  sample directly network device sFlow collector sFlow protocol statistic gathering custom implement python application plugin monitoring module alternative netflow protocol deem suitable layer OSI model another choice sFlow widespread network device OvS readily available openstack virtual switch eliminate install sFlow agent purpose protocol parameter tune behavior sFlow sample ratio sample aggregation interval sample ratio denotes average packet handle node sFlow agent sFlow collector purpose statistic gathering communication computational overhead however increase measurement available delay sensitivity actually default sFlow agent sends byte sample packet sFlow collector indication packet byte packet header statistical purpose collector whereas packet payload content without meaningful information monitoring purpose sFlow protocol overhead reduce without impact statistical accuracy sample aggregation interval denotes interval individual sFlow sample aggregate meaning sample within combine treat measurement entry aggregation aim attribute asynchronous sample achieve tunable quantization axis similarly sample ratio increase sample aggregation interval reduces monitoring overhead deteriorates monitoring capability measurement sensitivity obtain monitoring data monitoring module equip api information sFlow ceilometer regard resource utilization vms data implementation define source destination IP address instantaneous data rate estimate exponential average EWMA accord recursive formula EWMA compute instantaneous sample coefficient EWMA introduce smooth measurement robust load fluctuation coefficient express historical measurement lose importance heavier instantaneous sample important quantify overhead monitoring protocol sFlow amount additional signal traffic exchange network node sFlow collector perform monitoring operation sFlow packet collector define relative overhead ratio sFlow packet  amount data packet refers latter quantity sFlow packet plus sample data packet sFlow packet plus data packet sample sample packet assume average non sample packet sample packet approximate relative overhead packet sample sFlow packet sample packet generic sFlow packet variable depends sample meta data associate sample sample header recall sFlow packet transport udp datagrams ethernet network  ethernet header hip IP header  udp header  sFlow header  sample header sample data sFlow suitable purpose prototype sufficient perform detailed monitoring task thanks modular architecture monitoring sFlow protocol replace data monitoring testbed private platform experimental evaluation prototype perform testbed private environment software platform chosen implement sdn NFV infrastructure openstack newton version popular compute platform deploy NFV recent version neutron openstack networking module natively integrate sdn increase flexibility improve performance data therefore platform ideal playground propose unified monitoring module openstack cluster implementation consist controller node service endpoint relevant apis openstack controller vim architecture compute node VNFs implement dedicate vms manage kvm hypervisor  library network node networking service external connectivity traffic filter feature telemetry facility natively openstack meter monitoring alarm functionality ceilometer component responsible polling monitoring data notify openstack service publishing data suitable data message queue experimental setup ceilometer metric related  vms resource directly compute service  chosen metric storage service series index aggregation data ceilometer api monitoring module retrieve monitoring data VNF orchestrator ceilometer define specific metric target specific parameter monitoring application interested default ceilometer measurement define metric min however monitoring purpose reduce analyze sdn controller adopt experimental setup ryu choice ryu openflow controller natively integrate openstack compute node manage virtual network infrastructure customization ryu instance openstack neutron expose northbound api enable interaction monitoring module ryu northbound api allows retrieve data network topology meter statistic virtual switch deployed openstack deploy external sdn controller openflow monitoring data physical switch detailed representation prototype monitoring module interaction monitoring component depict sFlow agent OvS sample packet OvS data network define source destination traffic sample packet assemble comprise sFlow collector sFlow datagram packet rate arrival sFlow datagram packet sFlow collector steady predictable depends intensity data traffic sample ratio therefore synchronization sFlow agent sFlow collector collector aggregate sFlow datagrams temporal span aforementioned sample aggregation interval generate measurement entry closing temporal visualizes parameter affect delay measurement available sensitivity measurement entry sFlow collector combination recent sFlow sample recent previous EWMA detailed parallel sFlow data sample collection component monitoring module ceilometer  periodically poll series database  ceilometer module openstack controller retrieve data generates measurement entry measurement database along entry generate sFlow image KB image inside prototype monitoring module representation mechanism data packet oval diamond traffic sFlow datagrams rectangle measurement entry refer  testbed container technology container technology gain immense popularity introduction owe diverse benefit vast application service containerization enables lightweight scalable deployment service function network facilitate dynamic service provision management inclusion container technology meaningful thorough evaluation capability monitoring module propose therefore evaluate prototype testbed container technology container management software chosen docker popular container management automation management containerize resource availability apis valuable experimental validation monitoring approach scenario docker vim handle request deployment VNFs manage networking oversee lifecycle container testbed consist physical machine equip CPUs intel ghz GB ram local private network management network additionally machine directly machine via physical sdn switch openflow enable HP  8G switch machine host instance monitoring module sdn controller ryu source endpoint generate traffic machine host container management software docker virtual switch OvS desire overall logical topology fourth machine host destination endpoint generate traffic link machine physical capacity gbit however link logical topology limited evaluation purpose address depiction physical testbed along representation intend logical topology image KB image containerize testbed topology physical upper logical setup public environment evaluation environment prototype vms deployed public infrastructure  service aws VM medium instance vcpus ghz intel scalable processor GB ram allocate monitoring module vms others endpoint generate traffic provider documentation instance eligible generate traffic burst gbit however baseline data rate gbit contrast testbed environment deployed research public exhibit restriction typical service networking virtualization orchestration layer expose subset feature user manage core component remain fully transparent solely provider circumstance monitoring module discover performance parameter network demonstrate user public usually define interface web console command program interface additional simplify infrastructure  chosen define deploy testbed component accordance infrastructure code concept representation described scenario image KB image public testbed topology experimental validation carefully validate propose unified standalone monitoring module sdn NFV infrastructure numerous scenario address various aspect potential impediment series prototype implementation environment described sec subsection refer scenario quantitative analysis advantage exist protocol outside sdn iperf software generate traffic data throughput VNF instance quantitative statistical accuracy iperf session stable rate monitoring module measurement calculate confidence interval ensure statistical correctness performance evaluation readability instead discus accuracy validation campaign subsection throughput iperf refers transport layer payload report link rate iperf suitable corrective constant iperf chosen stability computation resource utilization private testbed endpoint generate traffic virtual machine within network traffic external network container testbed physical machine network machine host VNFs endpoint generate traffic prof generality approach employ monitoring technology specific hardware network configuration choice monitor device communication agent collector monitoring module independent technology network presentation focus crucial feature monitoring module subsection traffic monitoring perform data sFlow strictly correlate compute resource consumption openstack telemetry facility ceilometer  prof module actually unified capable monitoring sdn NFV metric infrastructure feasibility sdn NFV infrastructure constraint related measurement latency ceilometer module subsection whereas subsection sFlow ceilometer data collection capability traffic granularity message exist protocol outside sdn jointly modular architecture significant advantage feature freedom respect exist integrate sFlow openstack telemetry facility solely easily replace thanks loose couple assume subsection potential advantage propose apply suitable traffic steer measurement monitoring module therefore monitoring module cooperate employ sdn controller vim react utilization monitor resource fundamental feature propose monitoring deployed public described subsection monitoring traffic steer monitoring public justify portability module effortless integration variety networking virtualization due popularity sFlow subsection focus assess quality specific data monitoring adopt impact sFlow configuration parameter accuracy measurement overhead sensitivity sFlow auxiliary subsection prof statistical correctness whereas discussion monitoring parameter report subsection sake clarity summarizes conduct environment correspond subsection reporting summary evaluation environment correspond subsection  unified monitoring NFV  ceilometer response  traffic  monitoring traffic  monitoring public  sFlow protocol  unified monitoring NFV sdn infrastructure aim unified monitoring approach NFV sdn resource demonstrate feasible effective traffic respectively scenario assumes periodical traffic spike intensity tcp session unlimited throughput unlimited application limit saturation link bandwidth scenario considers traffic spike increase intensity tcp session throughput limited application generates traffic limit gbit respectively span typical transmission rate tcp session throughput unlimited image KB image amount byte histogram percentage cpu VNF stress traffic spike intensity image KB image amount byte histogram percentage cpu VNF stress traffic spike increase intensity byte histogram cpu utilization VNF byte aggregate sFlow sample correspond data switch VNF attach cpu load metric percentage cpu specific machine VNF VNFs virtual machine dedicate resource cpu denotes virtual cpu associate instance refer guest cpu unified monitoring aware network compute resource utilization usually strongly correlate indeed metric function network traffic VNFs report literature aim analyze specific VNF behavior cpu load originate handle packet operation generate approach demonstrates monitoring module load NFV compute sdn network infrastructure unified similarly cpu load unified monitoring compute metric ceilometer memory storage utilization expose data orchestrator unified coordinate monitoring traffic load resource utilization ensure optimization global ceilometer response monitoring data ceilometer drawback response due multiple layer interaction obtain measurement openstack platform prototype implementation increase update frequency metric ceilometer available monitoring module actually significant latency probably excessive queue delay introduce data accumulator dispatcher openstack component latency data accessible ceilometer apis function default configuration ceilometer measurement min parameter continuous increase latency latency increase linearly slope displayed graph however initial latency sample reflect openstack controller basically reboot measurement suffers almost additional latency latency increase curve difference latency scenario openstack controller reboot controller operational slope latency curve depends processing server host openstack controller overall resource utilization however independently slope offset latency issue ceilometer useless purpose monitoring NFV environment therefore monitoring data ceilometer statistic purpose image KB image ceilometer data available collection prof deployment monitoring standalone instance modular architecture reasonable thanks approach easily integrate monitoring module metric underlie NFV infrastructure furthermore integrate monitoring source ceilometer variety available metric latency agnostic analysis purpose lightweight cpu ram network utilization purpose traffic steer network traffic domain sFlow adopt carefully poc implementation traffic granularity implement monitoring module outside enables freedom integration external important advantage exist however fully benefit accord therefore aim difference granularity traffic measurement monitoring sFlow ceilometer sFlow agent configure sample ratio sample aggregation interval EWMA coefficient activate network fix delay consecutive throughput generate mbit respectively however scenario exchange vms measurement sFlow ceilometer actual network load sFlow configure parameter reflect traffic faster slightly precise image KB image granularity ceilometer sFlow actual network load vms however traffic scenario difference sFlow ceilometer granularity scenario assumes aforementioned vms sFlow distinguish IP address endpoint ceilometer monitor traffic granularity network interface distinguish cumulative monitoring module numerous orchestrator manner therefore important conclusion cumulative interface monitoring effective distinguish vms conversely modular architecture monitoring module advantage feature freedom NFV infrastructure multiple VNFs machine image KB image granularity ceilometer sFlow actual network load vms monitoring traffic steer testbed employ perform proof concept ability propose monitoring module constructively interact sdn controller dynamic steer traffic network aim optimize utilization physical virtualized networking compute resource traffic generate iperf tcp specific throughput target examine VNF traffic steer perform mitigate congestion VNF instance thanks monitoring capability propose module NFV domain desire action distribute traffic replica VNF location network perspective aim traffic steer avoid network congestion measurement perform network node sdn domain desire action scenario traffic distribute load network link objective achieve maximum overall throughput source destination respect service policy requirement VNF achieve VNF scenario VNF replica sufficient compute resource traffic network contrary goal achieve alternative network link sufficient resource destination node therefore monitoring module trigger traffic steer measurement perform NFV sdn domain unified advantage involve cooperate paradigm logical topology aim testbed load distribution scenario generate load monitoring module configure VNF traffic replica VNF network function traffic packet inspection intrusion detection transcoding multimedia traffic poc traffic load interface VNF strongly correlate load compute delay service packet function perform simplification function compute resource packet therefore reasonable assume measurement network insight computational burden VNF justify action optimize load iperf session launch src dst tcp aim throughput mbit session activate sequentially interval configure baseline ass behavior steer apply generate traffic replica VNF evolution data rate traffic source host destination host fourth traffic saturate capability VNF instance compete resource throughput limited capacity link VNF mbit potential deterioration avoid advantage propose monitoring module traffic steer replica VNF monitoring module increase resource utilization VNF verify traffic predetermine warn threshold mbit threshold exceed monitoring module interact vim location replica monitoring module instruct sdn controller steer traffic accordingly replica compete resource overall throughput achieve image KB image VNF load VNFs without traffic steer upper traffic steer monitoring NFV domain aim highlight benefit dynamic traffic steer multiple network switch overload utilized optimally similarly previous iperf session launch src dst tcp aim throughput mbit session activate sequentially interval configure traffic upper reference logical topology link capacity mbit similarly examine temporal evolution data rate source destination traffic baseline without traffic steer link become saturate traffic combine throughput limited capacity link capacity mbit bottleneck impact fourth practically invisible propose monitoring module enables avoid service degradation monitoring module increase network resource utilization load switch predefined threshold exceed monitoring module trigger traffic steer mechanism instruct sdn controller steer traffic alternative traffic congest throughput longer limited overall throughput maximum sum throughput image KB image load switch interface without traffic steer upper traffic steer monitoring sdn domain monitoring public fundamental aim deployment module public versatility portability confirm feature reveal additional advantage valuable module application public successfully deploy module understood seamlessly migrate towards purpose environment fully manage validate module verify traffic properly sample measurement obtain renowned sFlow collector sFlow RT sFlow RT sFlow protocol widely numerous source project sFlow RT reliable justify steady traffic periodic burst correctly module carefully validate additional advantage monitoring module research scenario conduct traffic identical generate private testbed rationale ensure correspondence deployment environment reminder scenario assumes periodical traffic spike intensity tcp session unlimited throughput unlimited application limit impose public environment scenario considers traffic spike increase intensity tcp session throughput limited application generates traffic limit gbit respectively span typical transmission rate tcp session throughput unlimited accuracy module scenario respectively investigate generate load important conclusion measurement module correctly generate traffic scenario prof applicability propose public environment similarly report private testbed public environment creates opportunity balance tradeoff measurement accuracy additional resource utilization detailed issue smoother precise measurement monitoring becomes demand image KB image accuracy monitoring module scenario sample ratio generate load image KB image accuracy monitoring module scenario sample ratio generate load additionally thanks formulate insight regard public environment platform limit throughput iperf session namely virtual machine eligible generate traffic burst gbit fully compatible specification virtual instance however persistent traffic burst limited bitrate gbit plot impact maximum bursty traffic generate bitrate limit apply however difference limitation impose provider proprietary limitation publicly reveal comprehensive investigation conclusion amount credit virtual machine traffic maximum throughput declare specification grant credit consume restrictive limit apply credit  rate unknown user longer interface idle traffic burst longer eligible generate traffic rate graph conduct idle credit available certainly graph transmission rate throughput mbit clearly traffic impose public infrastructure provider eliminate idle introduce however intentionally performance public network sophisticated predictable performance experimental environment completely validate finding conduct extensive sake brevity scenario confirm existence bitrate limit impact allowable duration traffic burst additionally conclude burst throughput directly affect credit consumption rate mechanism intuitively allows longer burst throughput burst monitoring module discover performance network traffic obtain amount credit available instance credit renewal pace impact transmission rate credit consumption important provider usually vague document available network resource consumer interested actual limitation SLA fulfilment deploy poc   configuration  prof module integrate widely aim automation deployment various environment public hybrid private regard sFlow protocol prototype implementation sFlow protocol gathering statistic sample directly network device choice already justified however due popularity sFlow reasonable carefully ass quality specific data monitoring impact sFlow parameter experimental scenario aim investigate fundamental sFlow protocol function parameter sFlow sample ratio sample aggregation interval coefficient EWMA generate traffic iperf data respectively generate throughput mbit stepwise increase load curve impose accuracy EWMA sFlow sample generate load instantaneous sFlow sample report measurement EWMA variability sFlow sample affected temporal traffic fluctuation furthermore generate load wider fluctuation sample ratio adjust accuracy absolute traffic load stable load mbit load increase mbit significant fluctuation sample aggregation interval reduces sFlow sample smooth curve obtain measurement therefore sensitive load fluctuation responsiveness relatively static sample packet converge sufficiently reliable monitoring sFlow sample significant load marker incorrect aggregate affected historical increase sample aggregation interval reasonable almost static network load furthermore accuracy significantly sample ratio conclusion statistic gathering adjustable load image KB image accuracy sFlow EWMA sample ratio instantaneous sFlow sample generate load image KB image accuracy sFlow EWMA sample ratio instantaneous sFlow sample generate load conclusion regard delay measurement available sufficiently credible delay critical monitoring dynamically  network configuration delay comprises communication monitoring module delay introduce monitoring module former component depends infrastructure negligible monitoring module introduces significant delay depends configuration parameter intuitively increase factor interval sample generate sFlow collector density sFlow sample bound delay introduce module sFlow counter necessarily useful perform network  namely sFlow counter increase traffic load report worthless stale trigger  network EWMA increase issue important sample packet accurate inject network testbed longer network load accurately firstly implementation sFlow collector software sub optimal unnecessary load research infrastructure secondly monitoring traffic amount data traffic communication handle testbed finally testbed computational limit virtualized infrastructure anyway scenario sample packet potential  monitoring infrastructure unrealistic defeat purpose apply packet sample demonstrate sake completeness prof sFlow choice objective carefully analyze packet circumstance widely adopt sFlow protocol monitoring requirement mechanism demand application impose strict delay jitter measurement observation confirms inter component independence assume propose monitoring significant valuable advantage respect exist integrate already EWMA introduce alternative counter sample mechanism aim measurement sensitive temporal load fluctuation sFlow EWMA accuracy assume respectively EWMA converge load historical sample significantly inaccurate scenario load however parameter adjust substantial improvement comparison sFlow sample heavily affected load fluctuation without harmful degradation responsiveness choice scenario analyze obtain measurement average EWMA sFlow counter sample mechanism practically unaffected temporal traffic variation sFlow sample aggregate counter sample mechanism converge slowly load EWMA effective sFlow sensitive temporal load variation responsiveness adjustment sFlow parameter specific traffic load dynamic assign sFlow counter sample mechanism aggregate sample conclusion generally valid EWMA algorithm similarly monitoring module universal integrate sFlow image KB image accuracy sFlow EWMA average instantaneous sFlow sample generate load image KB image accuracy sFlow EWMA average instantaneous sFlow sample generate load evaluation sFlow protocol overhead sFlow sample ratio affect accuracy described overhead sFlow measurement compute network node collector exchange sample packet overall traffic plus sFlow protocol header sample header report additional parameter define packet sample sFlow packet parameter directly affect overhead processing perform sFlow collector sample however amount traffic analyze extraordinary sFlow configuration therefore byte sample packet sample aggregation interval parameter impact overhead sFlow protocol affect sample collector amount data network node collector therefore overhead function sFlow sample ratio parameter sFlow overhead evaluate sufficient traffic namely iperf session mbit throughput virtual machine absolute amount sFlow signal traffic exchange network node sFlow collector sFlow protocol signal decrease sample ratio image KB image absolute amount sFlow signal traffic mbit iperf session report relative overhead percentage traffic exchange relative overhead obtain capture traffic output virtual switch reporting percentage sFlow traffic traffic capture estimate relative overhead instead obtain apply assume traffic parameter generate iperf session configure packet byte data packet sample sFlow byte sFlow collector sFlow protocol version data sample meta data amount sample header  byte therefore sample sFlow packet byte packet sFlow packet sample standard protocol header  byte hip byte  byte  byte sFlow packet  byte obtain  capture sFlow packet sample sample estimate relative overhead report average  approximate formula underestimate relative overhead capture traffic packet due background traffic byte increase actual overhead however formula capture behavior overhead function sample ratio approximation error easily estimate overhead accuracy properly configure monitoring suitable requirement sdn NFV infrastructure applicability usefulness propose formula increase adjust data monitoring theoretically estimate monitoring overhead estimate relative overhead introduce sFlow protocol sample ratio  relative  relative overhead validate conclusion traffic scenario confirm amount traffic exchange network impact absolute signal traffic affect relative overhead sensitivity previously mention counter sample parameter increase reduce sFlow overhead however careful consideration due impact sensitivity analyze perform generate traffic mbit duration traffic spike mbit respectively accuracy EWMA apply sFlow sample measurement respectively instantaneous sample sFlow partially affected aggregation perform protocol spike intensity spike duration longer apparent overshoot data correspondence traffic spike actual traffic exceeds mbit however another mention aggregation directly affect interval sample presence abrupt variation traffic protocol associate quantity sample sample closest traffic variation associate quantity sample apparent overshoot data smooth sample moreover spike hardly detect EWMA parameter allows detect traffic spike although reduce accuracy measurement sensitive increase sample aggregation interval historical sample significant longer aggregation spike intensity report measurement configuration sFlow instantaneous sample monitoring granularity sample express parameter carefully properly detect traffic spike therefore allows balance accuracy overhead sensitivity sFlow protocol EWMA computation image KB image accuracy sFlow EWMA additional traffic spike average instantaneous sFlow sample image KB image accuracy sFlow EWMA additional traffic spike average instantaneous sFlow sample statistical correctness quantitative report previous ensure statistical correctness performance evaluation data obtain calculate repetition calculate confidence interval readability instead namely statistical correctness sFlow measurement displayed former assumes variable latter assumes variable scenario respectively combination parameter intend extreme correspond curve confidence interval validate sFlow anomaly image KB image statistical consideration sFlow EWMA sample ratio instantaneous sFlow sample generate load image KB image statistical consideration sFlow EWMA average instantaneous sFlow sample generate load statistical consideration measurement originate ceilometer cpu utilization network load metric respectively scenario traffic spike increase anomaly cpu utilization originates cpu additionally load operating activity related traffic handle image KB image statistical consideration ceilometer measurement cpu VNF stress traffic spike increase intensity image KB image statistical consideration ceilometer measurement network load VNF stress traffic spike increase intensity sum repetition quantitative experimental scenario however thanks stability obtain narrow confidence interval credible justified conclusion drawn discussion sum multidimensional evaluation sFlow protocol purpose efficient sdn NFV infrastructure monitoring formulation  limitation reveal issue concern maximum acceptable signal overhead demonstrate tolerate additional traffic channel increase sample ratio sample aggregation interval aim limit signal overhead accuracy sensitivity limitation described sFlow saturation invasive originates architectural constraint sFlow protocol poc implementation issue regardless sample aggregation interval network load performance compute infrastructure host sFlow software minimal sample ratio sample aggregation interval avoid sFlow saturation traffic rate increase increase delay credible measurement available immediate measurement detailed analysis packet instance due strict delay jitter requirement network monitoring protocol configure sFlow parameter network load precisely approximately constant typical static core network highly variable typical data network programmable infrastructure numerous freedom static scenario sample ratio sample aggregation interval easily increase accuracy sensitivity deteriorate signal overhead limited overload sFlow infrastructure poc choice dynamic network load interdependent offs concern monitoring respond traffic directly affected interval report measurement measurement perform online traffic engineering analyze delay packet maximum reasonable sample aggregation interval sample ratio reasonably assign identify limitation signal overhead fluctuation sample traffic poc choice brings significant reduction signal overhead reasonably stable measurement sufficient response traffic related transient network traffic spike detect sFlow coefficient properly adjust detect spike traffic volume width measurement overshoot measurement traffic engineering mechanism granularity metric critical achieve sensitivity although EWMA approach objective sample aggregation interval parameter significant difference EWMA compute monitoring module instead sFlow protocol parameter affect signal overhead simplify dynamic adjustment sensitiveness network furthermore module EWMA computation integrate network monitoring protocol equip configuration option analogous sFlow poc reasonable apply propose monitoring module deployed evaluation environment without modification purpose easily integrate source platform container technology public environment furthermore successfully integrate widely infrastructure automation portable universal thanks modular architecture easily combine variety external monitoring capability testbed private platform whereas testbed container technology monitoring module apply traffic steer mechanism avoid potential service disruption research scenario NFV sdn domain advantage unified measurement finally performance public network discover propose monitoring module conclusion propose verify unified standalone monitoring module monitor combine sdn NFV infrastructure environment module communicates universal interface module easily integrate variety controller aim metric specific asset propose approach impose significant load exist component due independence possibility deploy module VNF propose deployed validate testbeds public environment numerous scenario address various aspect potential impediment regard accuracy granularity sensitivity overhead latency versatility portability prototype implementation feasibility effectiveness various sdn NFV infrastructure although analyze detail specific sFlow network monitoring protocol finding generalize specific technical confirms modular architecture significant advantage feature freedom respect exist integrate limitation overcome configuration sFlow adjustment load others replace component ceilometer module monitoring easily enable loosely couple architecture furthermore deployment public environment prof versatility portability compatibility infrastructure automation additional advantage usage scenario propose module reveal virtualized infrastructure manage provider perform container environment propose measurement data traffic steer mechanism aim avoid congestion improve service provision  ict infrastructure therefore future deploy virtual network function packet inspection wan accelerator traffic conditioner propose monitoring module optimization algorithm aim improve infrastructure utilization avoid congestion another research avenue develop mechanism adaptive adjustment monitoring parameter finally extend monitoring module component orchestrate active measurement sdn NFV infrastructure