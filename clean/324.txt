compute compute model challenge network security develop rapidly due limited performance node distribute intrusion detection DIDS relies performance device compute improve load detect packet nearby network proposes load DIDS task schedule algorithm reinforcement dynamically adjust schedule strategy accord network compute environment overall load DIDS maintain balance contradictory indicator load packet loss rate simulation propose load performance schedule indicator malicious feature detection rate significantly reduce previous keywords reinforcement intrusion detection task schedule introduction computer network traditional compute CC transmits data network server centralize processing however rapid development internet iot 5G various sensor device network explosive growth sensor generate data scenario requirement compute resource model compute longer security consumption data processing therefore compute EC compute compute resource closer information generation source reduce network latency bandwidth usage generally associate compute however transfer data node easy physically couple complexity compute mode multi source heterogeneity data limited resource terminal traditional security protection mechanism compute environment longer applicable compute environment breadth difficulty access threat protection compute environment increase significantly compute environment intrusion detection IDS security protection surge complexity network traffic intrusion behavior traditional host IDS cannot requirement efficient accurate detection distribute intrusion detection DIDS widely DIDS consists scheduler multiple detection scheduler distributes traffic multiple detection detection accord improves detection efficiency prevents overall paralysis due failure however DIDS compute relies performance hardware device compute processing node limited directly detection fail detect network traffic exceeds detection capability detection network network traffic malicious information escape security detection security threat entire network resolve compute develop healthy manner premise limited performance detection DIDS scheduler optimizes task location performance limited detection becomes important issue reasonable optimization decision scheduler reduction overall PLR DIDS although research related task schedule compute IDS framework compute environment propose concerned scheduler scientific decision distribute detection task detection reasonably load entire load DIDS adapt compute environment processing performance detection DIDS network likely load capacity detection objectively evaluate scheduler scientific decision load packet loss rate PLR conflict indicator balance contradiction DIDS load environment PLR within acceptable DIDS randomly network traffic machine algorithm unsuitable reinforcement RL action environment maximize benefit scholar random model dynamically environment achieve meaningful model algorithm reinforcement QL algorithm optimal strategy model establish markov decision MDP gradually gain attention basis markov decision model reinforcement conduct research rigorous mathematical theoretical contribution task schedule propose load optimization goal optimal policy DIDS load function scheduler performs reasonable schedule detection performance packet accord policy avoid excessively load PLR increase establish adjustment mechanism allows scheduler adjust probability detection efficiency assign task PLR thereby achieve balance contradictory indicator scientific evaluation processing performance detection load generate packet propose organize discus previous related detailed introduce describes balance load packet loss experimental discussion propose finally concludes related review related research IDS task schedule reinforcement compute environment IDS task schedule effectively utilize resource constrain terminal device literature task schedule resource allocation environment related compute improve efficiency resource allocation resource limitation node propose resource allocation mechanism deterministic differential equation model  obtain existence uniqueness stability positive model  stability theory propose  allocation algorithm principle dominant resource fairness allocate available resource max min allocate remain resource propose task invocation traffic distribution sensor assign specific sensor DIDS research focus load balance LB propose distribute intrusion detection model data lossless partition balance allocation implement local load balance data allocation strategy capacity workload propose load balance technology authenticate data EDC EDC load task distribution propose cluster scheme achieves load balance IDSs propose multi objective evolutionary algorithm decompose  achieve efficiency latency bandwidth focus efficiency reinforcement IDS action explosion budget constraint kaur propose multi objective evolutionary algorithm  decomposition handle data compute environment achieve efficiency latency bandwidth propose dynamic deterministic finite automaton PSO algorithm secure efficient rout wireless sensor network eliminate intruder reduce consumption ensure efficiency IDS propose intrusion detection model theory autoregressive model obtain optimal defense strategy balance detection efficiency consumption propose schedule framework distribute intrusion detection heterogeneous network architecture minimize public compute although scholar obtain research direction difference DIDS traffic schedule detection load environment compute cannot deploy traditional DIDS rely performance equipment network cannot deploy traditional DIDS rely performance equipment network however research aim optimize load PLR DIDS compute difference comparison DIDS IDS   MEC  random disturbance resource  EC  multiple resource allocation multiple  WSN  optimal configuration  SN  improvement overall performance  BD  traffic distribution strategy  fog  task  sdn  distribution rout information data    WSN  improvement overall  PSO   WSN  consumption  theory CC  public    load  reinforcement reinforcement important machine maximize return strategy interaction agent environment network environment randomness scheduler fix strategy schedule achieve optimum index combine reinforcement schedule scheduler network environment stimulation reward punishment network environment scheduler gradually anticipation stimulus habitual behavior obtain benefit various research reinforcement schedule research aim reduce response schedule distribute compute DC randomness network task arrival execution MDP model dynamic schedule subsequent research propose QL HEFT task schedule algorithm compute reduce response schedule propose perform predictive task schedule environment shorten response formulate resource management MEC iot device auction reinforcement purpose research reduce consumption equipment maintain balance performance consumption propose algorithm task schedule improve vector machine wireless sensor network optimize application performance consumption network propose joint computation offload multi user schedule algorithm NB iot compute minimizes average sum delay consumption stochastic traffic arrival schedule resource allocation dynamic user request resource requirement goal generate optimization strategy RL minimize overall consumption reduce network delay wireless sensor network improve network lifetime propose schedule scheme RL algorithm wireless sensor network although research related schedule RL optimization goal mainly response schedule consumption load suitable load environment however propose RL schedule overall load maintain balance load PLR avoid increase PLR load difference comparison RL   metric   convergence   speedup efficiency etc     makespan   price   performance residual NB   delay consumption  consumption response  consumption response  consumption network  consumption network lifetime throughput delay  load  load PLR detection rate memory usage etc concerned although various literature usually heuristic algorithm meta heuristic algorithm task schedule task offload algorithm disadvantage heuristic algorithm tend local minimum obtain global optimal meta heuristic algorithm parameter reuse calculation parameter adjustment cannot perform quickly efficiently model MDP quickly obtain global optimum function iteration contradiction exist load capacity measurement DIDS improve load capacity detection CPUs disk capacity memory usage network bandwidth usage basis cpu processing capacity subdivide cpu model cpu frequency cpu cache combine memory frequency disk reading reflect compute capacity detection although parameter positive correlation processing capacity detection evaluation obtain reasonable basis exist load capacity measurement DIDS improve scientifically evaluate performance detection load generate packet conduct distribute intrusion detection load environment reinforcement model model workflow multiple detection performance DIDS detection randomly packet load workflow model described reference model workflow DIDS performance detection evaluate performance packet arrives detect scheduler performs load evaluation load scheduler decision decides performance detection detect packet detection completes detection scheduler reassign detection task temporarily idle detection assign detection task immediately another detection task assign scheduler detection request arrives idle detection DIDS scheduler detection request queue queue packet discard idle detection DIDS packet queue incoming packet load uncertain queue limited DIDS fix detection optimal decision minimize overall load maintain PLR acceptable evaluation performance load objectively evaluate performance detection detection traffic advance detection DT memory usage MU information traffic ratio performance index detection detection detection performance accord specific difference within classify although propose combine related parameter cpu disk memory bandwidth calculate detection performance device computer contribute resource DIDS therefore calculation positive correlation detection performance cannot accurate measurement however evaluation propose obtain calculate actual traffic rigorous reasonable DIDS spends execution instruction execution load evaluation traffic mainly depends proportional detects load generate packet packet capture DIDS ratio packet maximum transmission MTU byte obtain load generate packet preprocessing stage parameter definition DIDS performance detection load packet detection exponential distribution arrival packet regard independent poisson evaluation criterion adopts average load criterion packet arrives detection embed chain markov chain parameter setting later parameter setting NotationDescription  detection  detection detect packet  detection allocate  rate detection packet  packet arrival rate  load packet detection  load packet detection  packet detect  detection packet arrives scheduler allocate detection detection scheduler decision execute correspond behavior similarly detection completes detection packet execution behavior transfer another DIDS status detection without detection task assign limit queue define typical idle detection exactly packet arrives packet load evaluation detection available express idle detection packet detect express idle detection packet detect action scheduler detection assign packet packet queue detect idle detection choice action define action decision action indicates idle detection packet indicates detection detect packet function optimal policy minimum load packet brings detection depends load packet detect average load  depends performance detection load packet distribution detection usually exponential load action scheduler load expectation reward denote reward denote attenuation coefficient reward sum reward gain express denote function policy expectation gain obtain policy express denote action function policy expectation gain obtain perform specific action express optional schedule policy optimal schedule policy minimizes load generate DIDS maximizes cumulative gain optimal action function generate express conversely optimal strategy formula define expectation equation formula evaluation improvement policy optimal policy policy evaluation quality strategy policy improvement policy policy evaluation obtain function policy policy obtain accord policy improvement calculate obtain policy relevant termination met pseudocode algorithm evaluation improvement policy algorithm evaluation improvement policy input policy function output optimal policy optimal function initialization arbitrarily policy evaluation temp max temp positive policy improvement policy stable  temp temp policy stable false policy stable return policy evaluation algorithm algorithm  reinforcement algorithm capability scheduler optimal action accord historical firstly construct correspond action action action benefit sarsa algorithm reinforcement policy action update action function policy timing difference strategy action greedy update policy greedy difference TD combine monte carlo sample bootstrapping dynamic program function subsequent estimate function TD suitable model algorithm update faster accord TD function calculate formula TD target TD deviation accord derivation calculate update formula pseudocode algorithm minimum load schedule algorithm algorithm minimum load schedule algorithm input action discount rate rate output policy random initialization initialize action policy derive action terminal convergence balance contradictory indicator although action function strives minimize overall load DIDS load PLR contradictory indicator excessive load increase PLR surge network traffic therefore indicator balance achieve goal calculate relevant parameter balance related parameter task assign detection average packet  allocate scheduler detection calculate formula probability detection assign task probability detection assign detection task scheduler obtain formula parameter adjust PLR described detail efficiency formula conclude efficiency detection efficiency detection scheduler adjust decision traffic iteration similarly accord  overall efficiency DIDS obtain balance contradictory indicator efficiency detection performance ranked balance principle PLR increase scheduler increase probability assign task efficiency detection conversely overall load DIDS scheduler reduces probability assign task inefficient detection achieve parameter threshold TL threshold TH PLR specific balance situation PLR TL formula probability task assign detection scheduler performs task schedule accord principle load priority PLR exceeds TL overall efficiency DIDS efficiency detection probability assign detection task conversely efficiency detection probability assign detection task scheduler performs task schedule accord principle load packet loss PLR task assign detection overall efficiency DIDS processing limit PLR TH inefficient detection pressure return scheduler performs task schedule accord principle PLR therefore adjust balance load PLR probability detection assign task summarize analysis propose DIDS simulation environment propose algorithm   LB recent literature purpose overall load DIDS effectively reduce propose increase PLR detection performance assign task scheduler propose increase detection rate malicious feature experimental environment simulation built  DIDS framework  simulation dedicate compute propose   cloudsim  module core simulation networking load generator mobility orchestrator module  configuration role module role module  core  core simulation responsible simulate compute environment  networking responsible detection processing transmission queue  orchestrator scheduler packet load evaluation module load  generator responsible data simulate environment network medium environment core network traffic data data NSL kdd data NSL kdd dataset improve version kdd dataset remove redundant data therefore data kdd reduce overhead sample NSL kdd dataset consists dimensional feature dimensional label attack data probe dos RL UR compute environment attack WSN terminal reflect NSL kdd data addition attack feature dataset WSN DS data correspondence attack WSN NSL kdd attack  NSL kdd wormhole  tamper cheat replay  flood UR resource consumption   kdd dataset distribution data      WSN DS data generate NS simulate WSN environment traffic data data characteristic WSN DS dataset attack flood dispatch attack exclusively IDS research compute terminal environment addition attack feature dataset WSN DS data distribution data   training evaluation index analysis load load obtain average load detection simulate environment network medium environment core network traffic propose QL load advantage traffic network network mbps   LB QL achieve load reduction traffic scheduler gradually tilt towards principle packet loss load advantage gradually disappears load  emphasizes lightweight task schedule addition network increase PLR increase DIDS gradually approach performance limit load increase gradually slows memory usage load memory usage ratio balance load PLR propose accord schedule processing principle network threshold TL tolerant PLR PLR scheduler performs task schedule accord principle load PLR scheduler performs task schedule accord principle account load PLR PLR approach processing limit detection scheduler reverts principle PLR therefore memory usage detection performance perform typical network namely mbps packet loss occurs mbps packet loss mbps PLR mbps mbps processing limit stage accord optimal policy detection performance processing efficiency assign task detection occupy memory network although difference memory usage detection performance difference network PLR mbps threshold TL memory occupancy difference detection performance significant network increase performance detection approach performance limit proportion task allocate performance detection increase memory usage increase difference shrink stage network memory usage detection increase stage network stage propose QL memory usage algorithm lightweight  however  algorithm occupies memory complexity confirm propose advantage algorithm memory usage task assign detection simulation environment QL detection performance respectively efficiency network proportion task assign detection performance difference network increase detection performance task assign processing efficiency PLR threshold scheduler switch allocation principle difference performance detection assign task gap increase threshold performance detection limit proportion task assign performance detection increase difference narrow difference PLR proportion task assign detection propose increase PLR comparison algorithm actual PLR ratio detect packet packet obtain undetected packet packet data DIDS load generator respectively threshold TL tolerant PLR actual PLR QL focus principle load network environment advantage PLR PLR PLR exceeds network mbps balance propose account principle PLR PLR decline network inclined principle PLR advantage PLR mbps  LB compute memory reduce PLR propose phase threshold TL detection rate pre calculate malicious feature data malicious feature detection rate DR obtain detect malicious feature malicious feature data DIDS load generator respectively scheduler focus load principle malicious feature detection rate propose QL algorithm algorithm network exceeds mbps threshold scheduler switch PLR principle detection rate algorithm exceed LB detection rate conclusion aim limited processing performance device environment scientifically evaluates processing performance DIDS detection load generate packet proposes DIDS task schedule algorithm DIDS balance contradictory indicator load PLR finally verifies propose simulation platform propose load performance schedule algorithm due limitation algorithm sometimes update future neural network simulate combine reinforcement task schedule DIDS compute environment