compute data technology combination yield benefit challenge significant challenge traffic data intensive within data manage traffic optimize placement virtual machine VM host however vms compactly reduce communication negatively impact aspect host utilization load balance aim balance optimize host utilization communication load balance investigate VM placement model minimum vertex induced subgraph NP hardness propose novel phase strategy vms host phase balance traffic workload rack rank rack fuzzy inference linear program model phase introduce novel greedy algorithm assign VM host regard propose communication metric evaluate approach cloudsim simulator phase strategy balance host utilization network traffic percent traffic rack local reduces average network link saturation almost percent variance besides host increase linearly increase vms host utilization previous keywords compute data virtual machine placement traffic aware VMP host utilization fuzzy logic introduction data intensive application image processing machine increasingly important role domain business scientific research efficiently analyze amount data data data analysis data parallel strategy efficient approach amount data cluster compute machine data processing host cluster private maintenance feasible majority institute therefore utilize public infrastructure acceptable virtual machine data intensive application transfer amount data data analytical public highly network traffic cisco global index data significant driver data traffic responsible percent traffic within data percent inefficient management traffic various undesirable data transfer latency completion network failure etc addition popularity platform kubernetes virtual cluster vms specific service data analyze importance communication vms increase optimize VM placement improve network scalability reduce communication extent nevertheless majority  placement schema model vms independent assign physical machine without consumption network resource propose reduce communication assumption impractical others essential aspect infrastructure management resource utilization load balance contrary previous predefined traffic virtual machine elimination assumption predict traffic virtual machine beforehand environment simplify assumption due dynamic interaction virtual machine alternatively assume amount traffic unknown cluster host link maximum available bandwidth however assumption suboptimal communication vms neither therefore optimal placement achieve vms majority previous addition communication improve host utilization optimization objective concern service provider address traffic within data data processing batch data inside vms exchange network traffic mapping assignment vms host previous placement schema assign vms host reliability host failure vms application host scope research future therefore reliability vms belonging application host summary virtual machine placement VMP investigate improve data network performance resource usage aim host cluster virtual machine traffic local balance inside rack rack data host utilization specific data regard objective host specify target ideal rack resource network traffic combination minimum rack likely handle request efficiently distance refers hop source destination data contribution summarize metric namely networking define calculate communication host considers traffic hop host fuzzy inference fis rank rack resource intra rack traffic linear program LP model define minimum rack rank traffic uplink greedy implement assign vms host inside rack metric networking balance traffic data remainder organize review related introduce VM placement NP hardness characteristic strategy solves phase evaluation analyze conclude research discus future related data challenge newly request vms autonomously goal VM placement load balance minimize network traffic reduce SLA violation briefly review related considers network traffic objective improve alongside criterion multi objective model traffic aware bandwidth aware proposal domain proposes traffic aware virtual machine placement improve network scalability instead network architecture rout protocol author switch rout vms communication model placement quadratic assignment QAP VM mutual traffic host connection although approach reduce traffic extent model limited homogeneous environment host specific slot moreover assign virtual machine host failure tolerance reduce extend mapping VM rack basis instead mapping vms individual server basis reduce inter rack traffic besides introduce rout algorithm optimize consumption reduce switch however amount resource rack vms without resource utilization rack another extends algorithm pseudo slot occupy pseudo vms adapt heterogeneous environment besides situation request vms dependency exist vms nonetheless assume vms application exist another aim reduce communication overhead dependency across virtual machine propose affinity aware algorithm analyze virtual machine dependent define assign minimal host bin pack exist heuristic algorithm however suggests reassignment vms migration bin pack independent location vms introduce virtual machine host respect resource constraint host cpu host memory network minimizes maximum network load propose algorithm mathematical program apply network topology propose algorithm greedily related virtual machine available host traffic minimize maximum load without host utilization besides author propose approach suitable reassign vms propose algorithm virtual machine placement exploit user hint bandwidth reduce network resource consumption opportunistic algorithm communicate vms host available resource host available anti collocation request resource demand VM available PM nearby PM accommodate vicinity algorithm fitting neighborhood previous algorithm vms addition limited  approach host maximum available resource host utilization decrease communication service orient application author model data undirected graph switch host virtual machine role instance transmit data amount link capacity propose algorithm appropriate host virtual machine placement accord service limited specific service depends application qian qian optimize network traffic satisfy reliability requirement multi tenant develop function abstraction model demonstrate relation vms VM serf function define function calculate distance inside network formalize VMP formula function considers subscription ratio link balance traffic within data however subscription ratio rout actual traffic greedy algorithm phase partition trace driven simulation algorithm effectively optimize network traffic various circumstance nevertheless approach limited hierarchical network resource utilization aim avoid network bottleneck minimize maximal link utilization model VM request undirected graph vertex vms communication vms traffic vms request host split graph bridge vms maximal link utilization minimal ignore distance host model assume host request vms uniform propose approximation algorithm balance network traffic reliability define reliability model determines vms host accord reliability available resource request vms distinct partition communication min approach finally vms mapped correspond host communicate partition closest host model vms homogeneous mapping host partition vms partition propose aim reduce network traffic analyzes resource host minimum host belonging minimum rack request vms concentrate resource future request vms accord host traffic vms finally assign intend host propose assumes vms homogeneous resource slot besides request vms rack extra rack without distance literature limited mapreduce program model architecture   suppose already location data introduce algorithm assign subset deployed virtual machine data node minimize data access latency satisfy constraint additional constraint inter virtual machine communication consideration threshold inter VM distance model graph clique heuristic algorithm specific scenario   location data node dns access latency node fix aim assign VM DN minimizes maximum access latency vms data node propose approximation algorithm employ threshold technique subsequently improve introduce approximation algorithm propose virtual cluster mapreduce application distance minimize goal decrease network traffic model integer linear program model greedy algorithm virtual machine host virtual machine chosen randomly assume host specific virtual machine purpose optimize topology virtual network mapreduce balance data transmission latency data processing rate communication agent transfer data chunk introduce performance optimization model mapreduce workflow goal minimize task execution evaluation phase centralize architecture deploy physical cluster host switch another scenario suppose network node sink virtual machine dependent scenario tendency transmit massive traffic sink important factor efficiency virtual machine scenario satisfaction metric define host appropriate VM metric calculate host sink along virtual machine demand vector introduce approach namely greedy assigns VM demand host satisfaction heuristic considers minimum performance degradation remain vms propose mention author approach vms  optimization proposal aim improve virtual machine placement mechanism software define data network objective traffic balance SLA violation reduction propose combination efficient qos aware mechanism VMP vms partition vms balance minimize vms assign host resource utilization priority host finally advantage software define networking achieve transmission network without congestion propose approach efficient calculate ignore distance host vms host  propose multi objective formulation optimal VM management data reduce resource usage consumption optimization objective namely load balance traffic minimize migration minimize introduce multi joint VM placement migration  algorithm partition vms community detection algorithm subset sum algorithm community finally placement migration parallel apply algorithm vms minimum host optimization iteration approach distance host besides reorganizes vms costly migration   optimize quality service consumption application account communication traffic vms model VM assignment mixed integer program model objective function consists variable namely communication delay vms server consumption overflow rack hierarchical heuristic algorithm model tabu propose approach complexity unsuitable scenario comparison review approach   objective  prior info    failure      hop hop optimization define define optimization define optimization hop reliability guarantee hop optimization hop optimization metric aim minimize overall server accordingly data consumption network traffic formulate integer linear program ILP model optimization propose phase greedy heuristic algorithm jointly minimizes consumption network traffic phase allocates traffic network topology aware fashion phase data communication vms cpu utilization memory requirement slot vms information along data network topology allocate migrate vms highly data correlate vms highly cpu load correlate vms apart propose approach assumes homogeneous data tight dependency workload prediction technique propose genetic meta heuristic algorithm minimize consumption resource wastage bandwidth usage data define mathematical model objective merge multi objective communication aware optimization model reduce communication vms volume data transfer host minimum hop connection genetic algorithm chromosome request vms contains index assign host fitness function mention objective function propose approach approach vms summary mention valuable contribution domain basis nonetheless assume communication vms request arrival limited specific scenario majority traffic vms input others prediction limit specific workload user hint practical scenario actual vms traffic reassignment costly migration furthermore vms compactly host traffic consumption technique vms possibly availability HA replica virtual cluster node concern respect host failure finally availability service addition although review vms communicate relation host account host individual factor resource guarantee suitable selection host guarantee resource suitable host request vms optimize comparison propose subset related highly cite recent VM placement model model define metric networking compute communication host considers hop exist traffic route source destination balance traffic within data network exploit metric define VM placement graph theory explain model  source host traffic destination host traffic host host networking average normalize saturation percentage hop source node link destination node link saturation percentage link node node normalize bandwidth link node node minimum bandwidth data link request virtual machine undirected graph data graph node available host graph route host node resource utilization networking vertex induced subgraph neighborhood networking metric scenario user request service cluster virtual machine goal data intensive application transfer amount data distance virtual machine network traffic important role data scalability efficiency review previous hop networking host therefore host distance host traffic host traffic increase link saturation addition due data batch usually throughput bound preferable host traffic route closer traffic connection besides network traffic instead predefined traffic newly request virtual machine actual traffic generate VM placement impact future VM placement decision accordingly introduce metric networking host host data transfer hop host encode distance average normalize saturation percentage link node switch host host host simply average saturation lose impact distance host saturation percentage link without average prefer shorter traffic longer traffic accord increase traffic route distance vms impact image KB image networking various diagram depicts function behavior distance average traffic increase diagram average saturation percentage traffic closer host networking traffic difference notable host traffic connection prefer closer host traffic connection normalize saturation percentage link link bandwidth gbps link traffic gbps link traffic calculate define rout host host saturation percentage link calculate traffic link bandwidth link normalize calculate suppose minimum bandwidth data link bandwidth link subsequently define average normalize saturation percentage route host accord network topology node link minimum traffic packet VM placement definition host hop network traffic host host utilization idle host priority traffic link cpu load host balance graph theory formulate virtual machine placement VMP primary objective host minimum networking traffic distance secondary objective achieve maximum cpu utilization data undirected graph host resource VM host utilized percentage host cpu core metric networking request virtual machine vertex induced subgraph resource request maximum resource utilization summation networking minimize sample data related graph graph contains node host data compute compute proof NP hardness NP hardness decision version NP define decision minimum average resource utilization request vms host utilized resource summation networking host available resource host correctness verify polynomial belongs NP NP hardness quota prize collection steiner PCST NP decision version quota prize collection steiner definition graph non negative non negative vertex prize prize quota subtree graph graph quota PCST amount prize quota utilized resource respectively prize subgraph similarly prize arbitrary span accord link positive induced subgraph span arbitrary span graph polynomial decision NP decision version NP optimization placement NP phase VM placement strategy analysis define VM placement NP therefore introduce phase VM placement  strategy described phase aim optimal subarea data fulfill define objective host traffic rate resource utilization avoid idle host phase introduce greedy algorithm namely traffic distance balance tdb algorithm vms host belonging subarea reduce networking primary objective flowchart propose strategy neighborhood selection algorithm define neighborhood rack datacenter therefore suitable neighborhood evaluate rack fuzzy inference fis assign rank regard resource idle host intra rack traffic linear program LP formulate objective function suitable rack VM placement rank uplink traffic assume host VM mode reduce consumption host mode idle host VM active host fulfill optimization objective definition host utilization communication consist traffic distance resource utilization downlink traffic rack switch rank uplink traffic constraint LP model LP model selects minimum rack vms belonging request distribute rack rack deploy request rack LP model cannot guarantee closest rack overcome drawback data zone avoid rack zone zone define data topology data prefer locality traffic algorithm selects target neighborhood apply fis LP model rack limited zone maximum rank image KB image complexity algorithm evaluate rack host zone evaluate host compute rank rack plus zone rack plus LP model simplex algorithm although overall complexity polynomial simplex algorithm polynomial complexity smooth analysis fuzzy inference definition fuzzy inference fis developed calculate rank rack metric input fuzzy variable VM rank output illustrate fuzzy contains fuzzy minimum membership output aggregate max rank achieve apply sum COS defuzzification technique fis described detail fuzzy membership function input fis define metric average percentage host processor ape optimize host utilization rack utilization percentage  avoid idle host average percentage link saturation  traffic subarea fuzzy variable calculate ape processor processor host inside rack  active host host inside rack  saturation percentage intra rack link membership function attribute along output membership function ape membership function analyzes cpu utilization threshold consumption qos aim avoid idle host define  variable priority assign rack resource already active host utilization rack active host zero percent utilization rack active host percent  membership function define saturation link utilization link average utilization network besides link utilization mostly link traffic situation situation invalid rack utilization resource besides situation host communicate rate host workload resource medium rack activate idle host resource active host traffic calculate rank rack COS defuzzification technique apply formulate regard output fuzzy membership function fuzzy           aggregate medium respectively subsequently respective rack host situation percentage core average link saturation utilized host percentage rank rack calculate membership parameter function apply fuzzy logical operation medium finally output membership function COS technique  rank rack compute formula situation rack host  cpu  cpu  saturation fuzzy rack   medium medium linear program model definition linear program LP model minimum ranked rack bandwidth uplink request VM cluster explain rack bandwidth uplink average saturation percentage link threshold bandwidth evaluation fis percent linear program  status rack selection percentage rack rank rack calculate fis host resource rack average bandwidth rack uplink threshold network link saturation newly request virtual machine rack data model rack selection data rack define host rack resource request VM define rank rack status compute fuzzy inference previous phase finally define objective variable percentage host inside rack maximization objective tendency increase increase rack define minimization objective rack minimal therefore minimize summation instead maximize summation propose LP model aim minimum rack maximum rank constrains constraint exactly host request vms minimum rack resource request vms constraint rack uplink traffic threshold constraint avoid situation host zone active constraint guarantee logical selection without negative model popular algorithm polynomial complexity rack host neighborhood phase traffic distance balance tdb VM placement algorithm subarea data outcome previous phase assign individual VM specific host host minimum traffic link implement adjacency matrix related graph networking metric described host selection compute  metric communication candidate host host minimum communication candidate host host subsequently assign VM request resource host resource VM host resource summation communication host minimum complexity algorithm request vms candidate host communication matrix plus host VM assignment plus host assignment vms therefore overall complexity tdb VM placement data adjacency matrix neighborhood candidate host request vms algorithm host communication host minimum host minimum communication host host minimum summation communication host simulation analyze performance propose VM placement strategy  described cloudsim package org  cloudsim network datacenter toolkit model simulate compute generate workload communication stage flexible independent code extend simulation dynamically submit vms various interval dataset json format dataset explain performance evaluate data topology ary layer tiered spine leaf simulated data architecture explain contains host data load regard workload dataset investigate host utilization network traffic approach algorithm greedy vms belonging request target data randomly uniform distribution approach minimum network traffic without host utilization BF VM host minimum resource VM approach maximum host utilization without network traffic roundrobin RR VM available host host index approach balance workload distribution addition implementation host switch sequential index request vms random VM available host randomly although approach optimization objective due scalability computational environment setup simulated network topology ary layer data consists host equally rack pod rack switch aggregation switch aggregation switch switch switch aggregation switch switch bandwidth link host switch gbps link capacity gbps data zone zone pod simulated network topology tiered spine leaf cisco tier switch leaf layer tier switch spine layer mesh topology data host simulated topology host leaf switch spine switch leaf switch host rack bandwidth link host leaf switch gbps link capacity gbps spine leaf topology distance rack fix hop data zone heterogeneous environment host HP  server configuration academic private configuration data physical host   GB proportion core core core workload structure cloudsim possibility define various application application contains applet consist processing data transfer stage workload realistic information execution resource consume data transfer dataset mention information generate approach virtual cluster kvm virtual machine resource capture deployed fully distribute apache hadoop apache hbase apache hive spark installation cluster data intensive batch achieve realistic outcome data benchmark described cluster information resource consumption data transfer database generate dataset chose  purpose hadoop virtual cluster capability  GB storage GB OS            contains workload evaluation hadoop benchmark batch statistical workload  mapreduce facebook yahoo yahoo benchmark ycsb contains hbase related workload spark benchmark contains logistic regression workload hive benchmark contains hive query workload  cloudsim assigns cloudlet VM considers cloudlets communicate application simulation request application vms information specific slot timestamp IP vms distinguish resource consumption network traffic cloudlets application performance validate approach indeed improve data performance evaluation regard resource utilization network traffic evaluate approach data resource utilization active host cpu memory utilization rate examine capability traffic vms local inside rack finally investigate traffic distribute data link besides investigate scalability propose algorithm increase utilization data reduce consumption data host accommodate vms remain host idle mode besides increase host cpu utilization decrease consume per VM depicts active host submit vms gradually increase subsequently illustrate cpu memory utilization rate BF policy regard optimal host utilization  policy vms request cluster specific application achieve optimal nevertheless contrary policy greedy RR random almost host active  policy stepwise increase priority deploy newly request vms already active host intelligently contains active host image KB image active host data host topology image KB image average cpu utilization active host topology image KB image average memory utilization active host topology addition characteristic resource utilization workload subsequently illustrates average cpu utilization rate distribute active host RR random uniformly distribution  greedy acceptable distribution diverse BF recent schema propose  rearrangement vms improve random policy percent surpasses random policy around percent load situation vms however detailed information resource utilization workload minimize inter rack traffic unavoidable video application consume bandwidth beyond switch batch data intensive resource investigate inter rack communication traffic gradually increase request vms amount exchange data within data greedy policy regard optimal inter rack network traffic  policy already active host reduce inter rack traffic minimum nevertheless inter rack traffic percent traffic spine leaf topology around percent ary topology RR acceptable inter rack traffic host index probability host policy BF random amount inter rack traffic ignore communication vms placement decision image KB image amount inter rack data transfer host data host topology surpasses random policy around percent achieves percent traffic random placement reduce probability network link congestion reduce probability packet loss network failure traffic balance data link prevent link congestion therefore analyze impact placement policy traffic distribution inside data maximum saturation percentage network link simulate distribution boxplot diagram indicates  policy saturation percentage selects traffic rack phase traffic host phase greedy policy saturation percentage host distributes traffic link however prioritize network traffic vms phase median  policy greedy policy behavior RR random network topology addition greedy link transfer amount data due compact vms host achieve maximum utilization BF maximum saturation percentage diverse image KB image distribution data link maximum saturation percentage investigate scalability propose algorithm scalability runtime algorithm increase linearly fix amount hardware resource examine scalability algorithm cloudsim simulator macbook ghz intel core processor GB mhz ddr memory host data defines domain image KB image scalability propose algorithm host data vms topology configuration examine scalability   leaf   rack investigate scalable algorithm behaves increase simulated data computational placement algorithm fix vms express millisecond data configuration topology ary topology increase increase host rack generate situation spine leaf topology increase leaf switch spine switch leaf switch growth host rack computational grows linearly spine leaf topology reduction host spine leaf topology happens due increase host rack increase rack capacity neighborhood phase mostly rack mostly rack reduces domain conclusion future novel strategy VMP intend decrease inter rack balance intra rack traffic utilize infrastructure resource subarea rack data fulfill optimization objective host subarea optimize objective reduce communication evaluate cloudsim simulator desirable tradeoff traffic management resource consumption approach majority traffic rack local without lose host utilization besides traffic workload balance inside data nonetheless propose strategy improve direction assign vms host mapping although approach host failure tolerance improves service reliability benefit consolidation advantage host local traffic therefore tradeoff reliability consolidation objective evaluate host fuzzy logic inference expert knowledge opportunity improve reinforcement technique therefore future involves extend strategy optimization objective reinforcement technique furthermore implement propose strategy openstack practical