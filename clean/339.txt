emergence software define network sdn centralize flexible approach route network due technical economic challenge upgrade fully sdn enable network hybrid sdn partial deployment sdn switch traditional network prevail network architecture meanwhile traffic engineering TE  sdn attract attention academia previous TE hybrid sdn traffic oblivious consume rout scheme fail respond dynamically traffic rapidly intelligently therefore propose reinforcement RL learns traffic splitting agent address dynamically traffic achieve link load balance hybrid sdn specifically rapidly intelligently rout scheme traffic demand traffic splitting agent learnt offline exploit RL algorithm establish relationship traffic demand traffic splitting policy traffic splitting agent learnt effective traffic splitting policy traffic splitting ratio sdn switch generate rapidly additionally interactive requirement traffic splitting agent reasonable simulation environment propose construct avoid rout loop traffic splitting policy extensive evaluation topology traffic demand demonstrate propose achieves comparable network performance performs superiority rapidly generate satisfy rout scheme previous keywords traffic engineering hybrid software define network rout optimization reinforcement introduction increase popularity internet everything IoE various emerge internet application explosive network traffic massive requirement traffic transmission internet service provider isp expand investment establishment network infrastructure guarantee bandwidth latency network meanwhile urgent requirement develop technology network management traffic engineering TE efficient network management dedicates achieve load balance improves network performance optimize traffic rout scheme therefore research TE attract attention software define network sdn emerge network architecture decouples data novel architecture component sdn controller sdn switch sdn controller global network status traffic information sdn switch data centrally manage grain behavior dispatch entry sdn switch refers aggregation traffic identify source destination address accord openflow protocol sdn controller flexibly split aggregate outgo link split modify entry sdn switch shortest rout traditional distribute rout protocol shortest ospf sdn controller exhibit potential flexible efficient intelligent rout customize benefit sdn ISPs increasingly perform transition legacy network sdn enable network however migrate traditional distribute network fully sdn enable network encounter technical economic challenge network specifically sdn hardware software fully concern stability reliability sdn device upgrade entire network infrastructure customize sdn device potential risk security instability moreover upgrade fully sdn deployed network inevitably impose expenditure purchasing sdn device mitigate challenge ISPs tend incrementally deploy sdn device upgrade entire network therefore hybrid sdn partially deploy sdn switch traditional network generate hybrid sdn traditional legacy router sdn switch coexist robustness traditional distribute network flexibility centralize sdn enable network recent hybrid sdn become prevail network architecture moreover TE hybrid sdn attract widespread attention academia rout scheme previous TE traffic oblivious centralize specifically ospf protocol shortest rout ignore load balance utilization entire network rout scheme moreover cannot adaptive adjustment rout scheme encounter fluctuate traffic demand rout adopt flexible centralize rout manner handle various traffic demand dynamically rout scheme however determination dynamic rout centrally optimization consume obtain failure centralize rout respond traffic burst promptly recent breakthrough reinforcement DRL promote tremendous progress various processing automatic etc essential machine ML reinforcement RL attempt decision continuous interact environment trial error manner procedure generalize situation RL agent establishes mapping representation environment decision policy mapping establish efficient decision policy rapidly moreover advent neural network NN enables massive data encode compact effective representation integration RL NN complex scenario exhibit superior performance realize adaptive decision advantage RL exhibit potential realize intelligent TE dynamic traffic demand handle timely hybrid sdn however leverage RL adaptively optimize rout scheme hybrid sdn challenge firstly existence legacy router sdn switch hybrid sdn rout constraint device RL agent specifically traffic legacy router hop accord rout entry ospf protocol enable flexible traffic splitting traffic sdn switch hop accord entry dispatch sdn controller rout constraint legacy router sdn switch challenge effective RL approach RL agent secondly RL agent gradually repeatedly interact environment flexibility traffic sdn switch unnecessary rout loop reasonable emulation environment establish RL agent thirdly achieve intelligent rapid generation rout scheme RL agent carefully handle dynamically traffic demand promptly mainly focus TE hybrid sdn propose RL roar rout optimization reinforcement conduct rout optimization achieve link load balance hybrid sdn specifically formulate TE hybrid sdn math program hybrid sdn construct traditional distribute network incrementally upgrade legacy router sdn switch link distribute rout protocol traffic splitting agent traffic demand construct simulation environment offline traffic splitting agent learns relationship network traffic splitting policy finally learnt traffic splitting agent intelligently rapidly generate rout scheme traffic demand hybrid sdn demonstrate superiority propose roar extensive evaluation comparative conduct various topology traffic datasets contribution summarize TE hybrid sdn propose roar intelligently rapidly conduct rout optimization traffic demand dynamically specifically satisfy rout scheme adapts traffic demand intelligently rapidly RL algorithm introduce traffic splitting agent hybrid sdn learnt agent establish relationship traffic demand rout policy interactive requirement traffic splitting agent propose construct reasonable simulation environment construct environment acyclic graph DAGs built avoid rout loop traffic splitting policy RL agent additionally rout constraint legacy router sdn switch satisfied construct environment reminder organize related TE formulates TE hybrid sdn construction hybrid sdn traditional network detail propose roar TE hybrid sdn report extensive experimental evaluates performance propose roar traffic datasets network topology finally conclude remark hint plausible future research related introduce related TE network architecture traditional distribute network ospf intermediate intermediate widely interior gateway protocol  ospf protocol link traffic hop accord shortest link improve network performance traditional distribute network heuristic propose optimize link setting minimize network maximum link utilization MLU however rout flexibility greatly constrain shortest rout beneficial improve network performance emergence sdn architecture enables flexible rout dispatch entry sdn switch deploy sdn device network wan microsoft google achieve network utilization flexibly rout traffic accord priority upgrade traditional isp network hybrid sdn legacy node deployed sdn node built hybrid sdn FPTAS propose optimal splitting ratio sdn node improve overall network throughput minimize MLU hybrid sdn attempt heuristic rout algorithm optimize splitting ratio traffic sdn node achieve throughput maximization rout hybrid sdn integrate depth randomize mechanism optimize rout improve network performance hybrid sdn propose jointly optimize ospf link splitting ratio sdn node minimization MLU reduce abundant entry instal sdn switch cardinality constraint optimize network performance hybrid sdn improve network performance TMs hybrid sdn TM calculate exploit reflect fluctuate TMs advent data era machine ML DL apply various computer vision autonomous processing etc recent researcher attempt ML DL TE network minimize MLU network propose introduce reinforcement RL strategy link rout scheme TE improve network performance RL scheme rerouting policy intelligently route critical balance network model dimensional continuous network reinforcement DRL integrates RL DL exploit intelligently optimize rout scheme exhibit comparable performance throughput reduce transmission delay leveraged pin theory critical link developed DRL algorithm optimize setting critical link dynamically guarantee quality service qos hybrid sdn DRL algorithm propose model multi splittable rout DRL framework achieve TE partially deployed rout SR network propose WA SRTE DRL optimizer optimizes link offline online rout scheme obtain complex linear program LP previous RL TE attempt treat RL offline optimizer however exploit RL traffic splitting agent offline learnt agent directly deployed sdn controller promptly intelligently generate traffic splitting policy online network model network model TE hybrid sdn dynamic traffic network topology undirected graph device compose sdn switch legacy router link capacity link denote historical traffic matrix TMs denote coefficient TM traffic demand device device link configuration ospf protocol variable denotes splitting ratio traffic sdn switch related notation summarize definition notation undirected graph node link capacity traffic matrix TMs traffic demand node node  coefficient TM ingoing link node destination node outgo link node destination node  link configuration link split traffic link destination node TM  sdn switch  legacy router MLU TM TMs goal TE hybrid sdn improve network performance minimize maximum link utilization MLU TM hybrid sdn link configuration splitting traffic sdn switch MLU therefore formulate TE hybrid sdn optimization goal attempt minimize wei  sum  TMs TE hybrid sdn aim rout scheme performs TMs conservation constraint guarantee traffic originate sdn node traffic node implies traffic demand met link capacity constraint load link capacity restricts sum coefficient link MLU split traffic respectively link  fix TE hybrid sdn multi commodity NP hybrid sdn construction preparation TE hybrid sdn construct hybrid sdn traditional distribute network construction hybrid sdn consists sdn node deployment link optimization sdn node deployment traditional distribute network historical TMs sdn deployment ratio sdn ratio hybrid sdn construct incrementally deploy sdn node switch upgrade inspire link load indicator legacy router upgraded specifically node TM calculate node load link  link utilization TM rout ospf protocol denotes source node maximum link utilization node outgo TM secondly calculate accumulate  node TMs compute reflect overall maximum link utilization node outgo TMs thirdly prefer node outgo link link utilization sdn node node outgo link link utilization treat bottleneck node possibility reduce MLU bottleneck node deployed sdn node therefore greedily node generate sdn node sdn ratio sdn node hybrid sdn generate upgrade node sdn switch link optimization construction hybrid sdn conduct upgrade legacy router sdn switch incrementally however behavior legacy router cannot centrally sdn controller therefore link carefully ensure stable effective rout scheme legacy router additionally stable rout scheme legacy router benefit avoid information flood transient rout loop therefore previous propose DRL introduce optimize link offline obtain stable effective rout scheme legacy router specifically cluster multiple TMs cluster treat cluster centroid representative TM additionally representative TM TMs correspond cluster TMs linearly combine representative TMs obtain TM reflect average dynamic traffic demand finally TM link optimize apply DRL optimization propose propose methodology illustrate propose roar TE hybrid sdn contains stage offline stage online rout stage offline stage network topology hybrid sdn traffic information construct acyclic graph dag ensure hybrid sdn environment loop rout interaction RL agent construct dag traffic splitting agent establish relationship network environment rout scheme leverage RL framework online rout stage deploy traffic splitting agent effective rout scheme quickly calculate traffic demand image KB image workflow propose roar dag construction RL allows agent continuously interact environment automatically policy depends environment reasonable environment construct interactive requirement RL agent propose roar agent deploy traffic splitting policy sdn node loop rout guaranteed hybrid sdn therefore propose construct DAGs avoid rout loop construct environment definition  link denote  link  consists node adjacent link legally traffic destination node specifically legacy node  contains node adjacent link shortest node destination node sdn node besides node adjacent link shortest  contains node outgo link link rout loop DAGs  node hybrid sdn dag destination node construct node destination node construct DAGs hybrid sdn illustrate procedure dag construction node hybrid sdn exploit floyd algorithm obtain shortest destination node link shortest dag additionally sdn node evaluate remain adjacent link iteratively iteration examine rout loop graph link dag loop link dag  link node dag destination node construct construct dag multiple rout source node destination node multiple rout multiple choice traffic assist achieve link load balance sequence outgo link sdn node construct dag generate DAGs exhaustively stochastically optimal satisfied sequence guarantee rout construct DAGs image KB image procedure dag construction purple sdn node legacy node respectively node destination node link denotes link topology hybrid sdn link shortest destination node dag dag obtain sdn node adjacent link addition rout loop offline traffic splitting agent construct DAGs interactive environment propose traffic splitting agent intelligently quickly distribution traffic hybrid sdn traffic splitting agent aim obtain optimal policy split traffic sdn node assist achieve link load balance enable agent decision network scenario introduce efficient RL algorithm deterministic policy gradient DDPG propose roar policy actor critic model algorithm DDPG decision policy continuous action continuous instead handcraft training data supervise DDPG allows agent gradually accumulate decision repeatedly interact environment agent environment interaction propose roar tuple hybrid sdn network traffic splitting action agent hybrid sdn network agent action reward agent action policy probability distribution action optimal policy maximizes cumulative discount reward discount factor prevents infinite sum accumulate reward goal agent within environment DDPG traffic splitting agent learnt therefore detail notion action reward propose roar traffic distribution hybrid sdn attempt link utilization therefore define vector denotes utilization link link utilization calculate TM computes traffic link TM distribution traffic link TM traffic splitting policy deployed sdn node action action consists traffic splitting policy sdn node traffic splitting policy traffic splitting ratio link sdn node link sdn node adjacent link construct dag specific destination node traffic splitting policy deployed sdn node respectively accord traffic splitting policy traffic sdn switch split link destination node formally denote vector traffic splitting ratio link sdn node destination node   link node destination node image KB image illustration apply traffic splitting action hybrid sdn accomplish transmission traffic demand traffic router router traffic legacy router hop accord ospf protocol arrow traffic sdn switch split accord traffic splitting policy arrow traffic splitting policy sum splitting ratio link sdn node traffic splitting policy constraint sum splitting ratio link sdn node however actor neural network output action cannot guarantee constraint therefore constraint transformation output actor neural network obtain traffic splitting policy parameter readily validation actor neural network output clip threshold reward goal TE hybrid sdn minimize MLU hybrid sdn therefore enable traffic splitting agent efficiently optimal policy minimal MLU MLU introduce reward MLU hybrid sdn TM respectively baseline minimize MLU compute hybrid sdn traffic splitting policy deployed traffic accord ospf protocol ratio reflect improvement network performance traffic splitting policy deployed additionally reward calculate encourages agent positive reward traffic splitting action generates MLU penalizes agent negative reward traffic splitting action generates MLU algorithm procedure traffic splitting agent DDPG specifically input algorithm hybrid sdn historical TMs  link PL algorithm actor critic adopt DDPG neural network critic net actor net actor net output action correspond critic net output reward effectiveness action net consist subnets online net target net architecture layer net sigmoid layer neuron critic net consists input layer hidden layer output layer actor net consists input layer output layer hidden layer neuron depends topology hybrid sdn critic net actor net iteratively transition replay buffer finally algorithm output online actor network traffic splitting agent propose roar subsection detail algorithm explain algorithm traffic splitting agent DDPG input PL output initialize online actor network online critic network random initialize target actor network target critic network initialize replay buffer initialize   episode ospf policy PL reward    minibatch sample transition   update online critic actor update target critic actor return image KB image architecture critic net actor net algorithm execute initialization specifically online actor network online critic network initialize random respectively target actor network target critic network assist stable initialize copying parameter correspond online network replay buffer transition agent initialize circular array fix   OU noisy initialize action exploration model velocity brownian particle friction additionally balance action exploration exploitation ensures OU noisy initialize initialization actor net critic net historical TM TM training procedure perform episode episode episode initial calculate ospf function function ospf function output traffic splitting policy deployed hybrid sdn function computes MLU hybrid sdn umax obtain action obtain output online actor net discount OU action execute reward traffic splitting policy obtain policy function computes obtain deploy traffic splitting policy reward obtain reward function computes afterwards transition  replay buffer  indicator indicates agent reward remain finally critic net actor net update minibatch randomly sample  replay buffer specifically transition accumulate reward obtain comb reward reward estimate target critic net discount factor accumulate reward online actor critic net update online critic net parameter update minimize loss accumulate reward estimate reward online critic net parameter update sample policy gradient target actor critic net parameter  update smooth update target net finally offline procedure DDPG terminates output algorithm online actor traffic splitting agent online rout scheme generation obtain rout scheme online deploy traffic splitting agent sdn controller sdn controller generate TM hybrid sdn network traffic report sdn switch network traffic report network monitoring netflow sFlow instal sdn switch accord generate TM traffic splitting agent generates correspond traffic splitting policy algorithm procedure generate traffic splitting policy input algorithm consist hybrid sdn  link PL learnt traffic splitting agent TM algorithm traffic splitting agent obtain traffic splitting policy TM traffic splitting policy obtain rout traffic legacy node accord ospf protocol splitting sdn node accord traffic splitting policy ospf protocol allows legacy node along shortest rout link link optimize link optimization described traffic splitting policy implement openflow sdn switch specifically traffic splitting policy splitting ratio   splitting ratio correspond output action openflow bucket modify entry openflow openflow bucket splitting ratio output action  algorithm traffic splitting policy generation input PL output ospf policy PL reward return experimental evaluation demonstrate performance propose roar TE hybrid sdn conduct extensive topology traffic datasets experimental extensive experimental analysis deployment ratio sdn node construct hybrid sdn generate traffic splitting policy demonstrate comparable performance propose roar minimize MLU datasets finally superiority propose roar reduce calculate rout scheme experimental network topology experimental evaluation implement network topology abilene cernet geant specifically abilene cernet geant network topology america research education network china education research network europe research education network respectively network link node traffic datasets TMs abilene cernet geant traffic datasets  project zhang  respectively concretely abilene cernet TMs min TMs obtain abilene cernet uniformly sample TMs TMs training datasets respectively additionally geant TMs min TMs generate geant uniformly sample TMs TMs training dataset dataset respectively DDPG setup offline stage episode additionally minibatch replay buffer respectively discount factor respectively adam optimizer optimize loss function rate online actor critic net exhibit superiority propose roar conduct comparative ospf ospf rout traditional distribute network ospf protocol ospf allows rout shortest source destination shortest calculate accord link WA SRTE WA SRTE rout optimization hybrid IP srv network DDPG algorithm link deploys SR node offline solves LP obtain traffic splitting ratio SR node online although hybrid IP srv network hybrid sdn network comparison migrate WA SRTE TE hybrid sdn rout link rout mcf mcf formulates TE multi commodity mcf assumes split fractionally arbitrary proportion node network mcf treat theoretical optimal minimize MLU network parameter analysis deployment ratio sdn node construct hybrid sdn traditional distribute network sdn deployment ratio sdn ratio determines placement sdn node described iteratively node upgraded sdn node TMs training datasets compute node procedure sdn deployment terminates node upgraded analyze influence sdn deployment ratio performance propose roar plot curve MLU varies deployment ratio topology MLU roar decrease sdn deployment ratio increase demonstrates sdn node deployed assist propose roar minimize MLU hybrid sdn sdn node flexibility split traffic hybrid sdn addition MLU rapidly decrease deployment ratio MLU slightly decrease deployment ratio therefore reduce investment purchasing deploy sdn device recommend deployment ratio sdn ratio reap benefit image KB image MLU propose roar varies sdn deployment ratio education topology important parameter generate traffic splitting policy learnt RL agent analyze impact performance propose roar MLU propose roar configuration demonstrate network performance sample cumulative distribution function cdf curve MLU topology plot cdf curve network topology increase increasingly affect network performance network topology action traffic splitting agent traffic splitting agent optimal traffic splitting policy network topology image KB image cdf curve MLU topology addition network performance increase decrease demonstrates influence traffic splitting agent optimal policy moreover computation traffic splitting agent policy therefore introduce cdf curve WA SRTE mcf reference appropriate topology concretely accord cdf curve tradeoff compute network performance abilene cernet geant respectively network performance roar topology datasets propose roar traffic splitting agent training sample demonstrate convergence training procedure propose roar plot curve training loss online critic net geant although loss curve fluctuates training procedure training episode increase gradually decrease finally stabilizes loss loss curve demonstrates training procedure propose roar converge training procedure converges obtain agent generate traffic splitting policy online image KB image training loss online critic net varies episode geant demonstrate performance propose roar reduce MLU hybrid sdn conduct comparison ospf WA SRTE mcf link ospf WA SRTE mcf obtain described  sdn node incrementally deployed MLU deployment ratio cdf curve roar cdf curve ospf demonstrates ospf roar exhibit superior performance achieve load link balance traffic splitting agent propose roar effectively generate traffic splitting policy traffic split permissible link moreover cdf curve roar cdf curve WA SRTE overlap conclude performance roar comparable WA SRTE relationship traffic demand effective traffic splitting police successfully establish learnt traffic splitting agent additionally cdf curve roar cdf curve mcf indicates gap propose roar theoretical optimal optimize network performance image KB image cdf curve MLU topology image KB image cdf curve MLU topology image KB image cdf curve MLU topology ass performance roar exhibit analyze quantitative evaluation built datasets deployment ration ospf average MLU roar reduce abilene cernet geant respectively meanwhile abilene cernet geant average MLU roar deviate WA SRTE respectively quantitative evaluation performance roar minimization MLU superior ospf approximates WA SRTE prof roar exhibit ability mapping network traffic splitting policy assist achieve link load balance average MLU topology  ospf WA SRTE mcf roar processing online rout generation simulation execute workstation intel core ghz ram GB tesla gpu addition conduct comparison cod python execute thread offline stage training traffic splitting agent abilene cernet geant respectively online rout stage processing rout generation datasets TMs abilene TMs cernet TMs geant calculation roar TMs datasets abilene cernet geant respectively average roar TM abilene cernet geant respectively demonstrates propose roar quickly adapt dynamically traffic demand rapidly generate rout scheme exhibit potential propose roar achieve online intelligent rout moreover mcf WA SRTE propose rout generation instead LP roar directly network traffic splitting policy simply implement convolution operation addition although ospf cannot effective rout dynamically traffic demand improve network performance processing rout generation datasets  ospf WA SRTE mcf roar conclusion roar implement TE hybrid sdn propose roar traffic splitting agent traffic demand offline learns relationship traffic demand traffic splitting policy RL algorithm traffic splitting agent learnt rapidly intelligently generate rout scheme traffic demand extensive evaluation topology traffic datasets demonstrate propose roar achieve optimal network performance hybrid sdn moreover calculation rout generation TM exhibit potential propose roar achieve online intelligent rout propose promising attempt exploit RL algorithm directly behavior sdn switch although simulation evaluation demonstrate superiority propose implement TE hybrid sdn future evaluate propose production network actually propose roar module network traffic splitting policy isp network adopt strategy deploy sdn device implement evaluate generalization propose strategy sdn deployment topology hybrid sdn source code datasets available http github com  roar