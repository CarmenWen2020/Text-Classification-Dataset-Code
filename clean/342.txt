novel task mechanism preference worker requester propose blockchain crowdsourcing exist blockchain crowdsourcing framework worker task allocation mechanism metric location worker reputation requester requirement however worker task mechanism requester bias consideration worker preference worker reject neglect allocate task propose preference task mechanism blockchain crowdsourcing namely SenseChain gale shapley GSM propose mechanism utilize preference worker propose quality task QoT metric preference task quality information QoI metric ensure autonomous reliable transparent execution mechanism integrate exist blockchain crowdsourcing framework implement smart contract mechanism framework implement solidity private blockchain evaluate dataset benchmarked NNM mechanism propose mechanism demonstrate performance benchmark worker QoI payment satisfaction confidence demonstrate mechanism performance demand context worker QoI confidence minimum payment propose mechanism outperform others demand ratio finally propose mechanism stable feasible chain reasonable execution previous keywords preference blockchain crowdsourcing smart contract gale shapley introduction digital connectivity individual worldwide shift employment strategy crowdsourcing alternative traditional employment worker member employ individual task lieu payment task apply domain environment monitoring healthcare transportation commercial crowdsourcing application upwork uber amazon mechanical turk mturk successfully utilized perform requester task successful exist crowdsourcing platform suffer drawback instance application centralize platform hinder due security threat denial service privacy leakage  execution addition crowdsourcing platform incorporate centralize task allocation mechanism platform upwork mturk rely worker available task cannot guarantee task completion quality outcome platform uber deploy centralize worker task allocation mechanism responsible worker task criterion however cannot guarantee allocation worker instance uber allocation mechanism deem bias towards requester additionally uber incorporates rating passenger unlike platform feature necessarily consideration user reduce utility overcome drawback centralize deployment exist crowdsourcing application blockchain propose deployment platform multiple vehicular hoc NETWORKS VANET blockchain distribute immutable ledger transaction organize confirm independent miner network fee introduction smart contract program deployed built function become trust immutable traceable execution transaction blockchain crowdsourcing application arcade replacement uber  replacement mturk blockchain crowdsourcing framework overcome central deployment drawback worker task allocation mechanism requester bias without worker preference worker reject neglect allocate task preference incorporate mutually upon beneficiary apply multiple domain vehicular fog compute uavs business crowdsourcing crowdsourcing centralize platform task mechanism preference reduce motivation worker reject allocate task preference task mechanism consequently research challenge tackle task allocate worker trust manner preference worker requester blockchain crowdsourcing framework ensure stability allocation abbreviation throughout contribution preference task mechanism propose blockchain crowdsourcing framework preference worker calculate propose quality task QoT metric preference task calculate exist quality information QoI compute preference blockchain mechanism host execute consequently trust centralize platform performs overcome blockchain reliable traceable execution abbreviation    task  manager  manager contract  detailed  shapley   service provider   virtual machine propose mechanism namely SenseChain gale shapley GSM worker task submit preference multiple worker task requirement SenseChain worker declare preference preference task declares preference mechanism task prefer worker declare preference stable GSM worker task declare preference mechanism worker preference propose prefer available task worker task accepts propose worker preference ensure stability propose mechanism integrate blockchain crowdsourcing framework smart contract integration overcomes centralize crowdsourcing platform manages overall moreover blockchain user identity privacy pseudonym address execution transparency chain execution payment guarantee cryptocurrency smart contract user manager contract UMC user information task manager contract TMC task information task detailed contract TDC task TMC task preference implement propose task mechanism propose mechanism framework implement solidity deployed private blockchain ganache evaluate dataset  platform NNM mechanism NNM chosen impact introduce sort preference framework NNM worker task acceptable closest QoT QoI SenseChain GSM significantly improve performance requester worker NNM improvement propose worker requester propose mechanism outperforms demand task worker ratio DSR therefore mechanism suitable crowdsensing context stability propose mechanism efficiency indeed mechanism stable feasible chain deployment contribution improvement comparison percentage allocate  requester worker therefore contribution summarize introduce preference worker requester task blockchain crowdsourcing QoT QoI propose quality task QoT metric worker evaluate available task propose SenseChain mechanism SenseChain modify incorporate worker preference introduce gale shapley mechanism GSM stable task blockchain integrate propose task mechanism blockchain crowdsourcing framework smart contract overcome limitation centralize platform organization remainder organize background related model QoI QoT metric described along preference computation algorithm propose consist mechanism blockchain crowdsourcing framework blockchain implementation performance evaluation analysis concludes background related crowdsourcing crowdsourcing introduce jeff howe define task user source member crowdsourcing model entity requester worker framework described requester individual organization interested issue task payment worker worker user interested fulfil available task framework intermediary platform deployed organization manage crowdsourcing requester worker traditional crowdsourcing model sequence crowdsourcing although framework generally deployed centralize architecture suffer various challenge availability non repudiation verifiable execution service availability threaten denial service dos attack easily launch april uber china user service prevent update status opaque mechanism execute platform prevent member verify outcome execution doubt challenge motivate integration crowdsourcing blockchain technology transparency trust elaborate image KB image traditional crowdsourcing model entity requester worker framework sequence typical depict numerical sequence arrow blockchain smart contract blockchain introduce nakamoto establish trust distribute bitcoin exchange user distribute immutable ledger transaction stamp organize maintain distribute member miner verify mining mining consensus mechanism proof proof stake ensure significant effort spent miner verify transaction append chain hence reduce possibility maliciously inject ethereum extension bitcoin blockchain allows execution built program smart contract addition cryptocurrency exchange smart contract digital agreement program built function autonomously invoked ethereum smart contract enable deployment decentralize application ethereum execute verify transaction decentralize transparent trust autonomous manner additionally fault tolerant highly available immutable censorship resistant blockchain propose multiple application domain finance healthcare business logistics focus incorporation blockchain crowdsourcing related incorporate blockchain crowdsourcing framework introduce  secure incentive exchange  framework incentivizes worker participate task trace reputation secure autonomous anonymous manner anonymity worker enable bitcoin wallet address interaction preserve identity worker however worker obtain certificate centralize authority eligible submit chain data collection server DCS DCS evaluates submission worker quality reputation update payment calculation blockchain extend secure incentive evaluate submission worker transparently miner propose framework blockchain miner calculate quality worker submission entitle reward evaluation accord criterion requester transparently however miner assume additional layer computational capability calculate contribution reward additionally framework relies chain server task publishing payment coordination server untrusted  propose blockchain crowdsourcing framework maintains user identity privacy  platform identity privacy maintain pseudonym address interact smart contract requester permit exchange submit correspond reward user requester worker without compromise data identity privacy contract reward policy submission addition budget task however correspond reward submission calculate chain calculation proof submit verification zero knowledge proof decentralize crowdsourcing framework built ethereum blockchain propose CrowdBC framework allows requester worker interact without intervention trust smart contract requester task worker acceptance criterion evaluation function contract task handle operation contract worker eligibility evaluates submission payment transfer worker cannot differentiate task metric budget however budget sufficient distribute contribute worker decentralize blockchain crowdsensing framework propose SenseChain propose framework integrates crowdsourcing function allocation evaluation payment within smart contract worker submit reservation QoI available task smart contract allocate maximum QoI worker perform task evaluation payment integrate within smart contract reputation requester propose utilized worker reserve task blockchain crowdsensing framework propose identity privacy optimization interaction crowdsensing provider user orchestrate smart contract internet service provider isp isp identifies relevant user task creates temporary account maintain identity privacy submit bid auction smart contract auction within smart contract assign user task accord bid reputation location optimize payment provider framework assumes requester issue task worker cannot preference requester furthermore worker unfairly ignore isp relevant worker crowdsourcing node selection mechanism deployed twice consensus blockchain consensus node utilized intermediary task publisher user framework publish task determines user task user reputation  task selection user consensus stage requester worker submission evaluates limitation consensus node assume trust centralize entity however exploit attack calculation blockchain crowdsourcing platform propose searchable encryption task  platform permit requester encrypt task authorize worker mechanism within smart contract return static worker invoke accepted reject pre establish authorization worker task assume lastly quality stability discussion summarizes exist blockchain crowdsourcing framework limitation majority effort rely chain component centralize platform complement functionality crowdsourcing framework user certification worker allocation submission evaluation exist requester criterion accept worker worker location reputation QoI perform task neither quality generate stability furthermore none exist perform allocation preference worker requester fully decentralize manner comparison exist blockchain crowdsourcing  chain    preference   requester CrowdBC requester  contract SenseChain criterion QoI smart contract    worker bid criterion requester   encryption   model requester preference smart   model preference task mechanism blockchain crowdsourcing propose metric preference worker task preference selection algorithm utilize propose metric illustrate propose task mechanism compute preference detailed finally stability propose mechanism summarizes notation throughout notation  available  available task worker task completion worker task preference worker task location worker task distance worker task reputation worker task publisher submission slot task quality information worker task quality task worker budget task minimum payment task allocate  reservation request task allocate worker task quality information QoI quality task QoT QoI QoT metric propose spatial crowdsourcing task environment nevertheless update introduce additional relevant metric application specific QoI QoT quality information QoI standard metric crowdsourcing reflect worker capability perform task combine various metric distance reputation completion task multiple available worker task allocation crowdsourcing QoI evaluate worker QoI metric context spatial crowdsourcing task geo tag alternative QoI metric context task platform concerned QoI metric combine worker reputation reflect reliability distance task worker reflect proximity task reflect timeliness task completion parameter assume contribution QoI metric consequently QoI formulate reflect proportional contribution parameter efficient manner chain execution QoI worker task calculate accord worker task euclidean distance task worker location global worker reputation associate task completion rate allocate task maintain update smart contract management decentralize trust traceable hence reputation mechanism reflect reliability worker efficient propose reputation mechanism inspire transmission protocol tcp timeout calculation consideration historical reputation sample reputation initialize default update task status submission accord accordingly worker reputation completion distance task worker preferable task quality task QoT metric propose worker evaluate available task QoT combine task requester reputation reflect commitment issue task minimum payment incentive distance task reflect proximity QoI parameter assume contribution incorporate QoT function reflect proportional contribution efficient chain execution QoT task worker calculate accord distance worker task payment worker task impact worker preference worker perform task payment task payment calculate accord budget task worker task associate task cancellation rate task issue reputation update task cancel reputation mechanism initialize default upon registration update accord accordingly task requester reputation guaranteed minimum payment distance worker assign hence preference worker task worker preference computation algorithm task preference computation task requester calculates euclidean distance task location location available worker within acceptable requester calculate worker ID QoI task preference available worker requester sort descend worker  sort preference available worker task algorithm worker preference worker calculates euclidean distance location location available task within acceptable worker calculate task ID QoT worker preference lastly worker sort preference descend task QoT sort preference worker task perform image KB image image KB image propose task mechanism preference task mechanism propose blockchain crowdsourcing exist effort focus preference requester worker preference propose mechanism worker preference essential role fulfillment task preference compute accord therefore objective task mechanism improve quality worker requester increase satisfaction worker perform task task mechanism within decentralize blockchain crowdsourcing framework hence optimize ensure efficiency SenseChain improves allocation scheme propose SenseChain assume worker reserve task prefer task SenseChain reserve allocate mechanism worker identifies available task calculate QoI worker submits reservation request QoI task prefer task task accepts QoI worker submit reservation scheme worker sequentially reserve task update preference decision reserve task SenseChain assumes worker reserve task QoI metric however worker deviate assumption reserve task preference quantify QoT context SenseChain overcomes limitation worker reserve preference accord QoT metric acceptance worker QoI task preference worker task algorithm illustrates SenseChain mechanism image KB image mechanism preference worker requester pre smart contract smart contract task preference worker reservation request task prefers smart contract evaluates sufficient accept reservation reservation accepted update accordingly otherwise reservation sort descend quicksort algorithm prefer worker task accepted worker QoI zero task remove worker update location task smart contract reservation task worker reserve additional task update location mechanism accepts worker reservation task available worker interested task lemma task allocation SenseChain perform proof allocation task sort reservation request descend quicksort algorithm complexity therefore SenseChain gale shapley GSM allows user submit preference mechanism GSM adaptation gale shapley algorithm stable quality propose GSM worker requester preference construct QoI QoT metric preference constant execution mechanism algorithm illustrates worker allocate task GSM mechanism image KB image mechanism preference worker requester pre smart contract smart contract SenseChain worker submit preference GSM preference worker sequentially unallocated worker proposal worker task preference task preference reject zero accepts ID append temporarily allocate worker otherwise algorithm currently allocate worker another worker prefers replace worker proposal worker update location allocate task addition task remove lastly task append worker submit preference location nevertheless iteration gale shapley independent accepted proposal iteration cannot revoke afterwards analysis GSM mechanism worker proposal available task lemma proposal GSM algorithm proof worker proposes task worker propose task proposal worker propose task cannot additional proposal lemma proposal GSM perform proof achieve mapping data structure maintain information proposal index constant proposal GSM algorithm abstract propose task mechanism SenseChain evaluates reservation submit task GSM iterative approach worker allows broken preference mechanism stability stability mechanism reflect ability generate without worker task broken worker stable alternative task accept prefers currently task task stable task interested worker prefers currently allocate worker image KB image task mechanism overview propose mechanism stable SenseChain guarantee stability generate worker sequentially reserve task accord preference worker request reservation task mechanism worker task preference worker preference available task stable task worker alternatively worker submit subsequent task preference accepted worker preference task GSM ensures stability preference worker sequentially task  worker mechanism sort preference worker propose task task accept reject worker preference worker task receives proposal evaluates worker previously worker worker preference worker slot accept  preference worker accepts proposal accepts preference worker stable mechanism propose prefer task unmatched worker worker preference task accept blockchain crowdsourcing framework proposes blockchain crowdsourcing framework preference task mechanism deployed allocation worker task framework integrates propose mechanism implement smart contract fully deployed ethereum blockchain worker requester interact transparent smart contract opaque centralize platform propose crowdsourcing framework architecture deployed ethereum framework assumes existence requester worker within interact framework smart contract structure user manager contract UMC task manager contract TMC task detailed contract TDC perform functionality blockchain crowdsourcing framework implementation detailed framework worker requester register UMC maintain information requester issue geo tag task within TMC along preference worker task worker radius preference available task TMC TMC executes propose task mechanism allocate task worker allocation worker requester contact task TDCs submit retrieve task TDC responsible evaluation submit distribution incentive data structure user address ethereum address role reputation uint accepted cancel request uint request uint task requester ethereum address requester reputation uint TDC address ethereum address due date uint minimum reputation uint minimum payment uint status data location uint budget uint worker ethereum address completion uint QoI uint submission submission quality uint payment uint blockchain implementation data structure data structure propose crowdsourcing framework information user register framework address variable user ethereum address role conveys role user within framework requester worker reputation reflect historical reliability user previous interaction framework reputation update task accepted cancel request request variable propose information task publish framework requester address reputation worker computation preference task TDC address task contract explain due date reflect deadline task minimum reputation reputation filter eligible worker requester requirement maximum worker task budget minimum payment budget assign requester task minimum payment worker task respectively minimum payment calculate budget data identifies data requester lastly status indicates status task accept worker information worker submission address allocate worker completion worker metric submission variable data submit worker task submission quality payment evaluation worker submission relative worker submission task smart contract user manager contract UMC maintains user requester worker register framework user information array user contract function permit user register framework ethereum address intend role appends submit parameter user default parameter construct append array user internal function explicitly TMC TDC update user reputation update worker reputation evaluation submission accepted submission reject update requester reputation status task cancel task manager contract TMC responsible maintain task publish requester framework task information array task addition TMC responsible allocate worker task integrate task mechanism allocation mapping task address array allocate worker address contract function within user manager contract UMC variable user user  ethereum address role user address user evaluation task status permit requester publish task submit attribute transfer task budget TMC address budget ensures worker upon payment fulfill task requirement otherwise budget transfer requester creates TDC correspond task task budget transfer TDC address task information encapsulate append task function return task interested worker function worker requester submit preference array address reflect preference worker address available task reflect preference perform requester address available worker preference worker task function component contract allocates worker task function utilizes preference submit worker requester allocation task mechanism within function allocation task TDC worker perform task task guarantee evaluation submission function progress task task worker allocate worker besides task submission requester decides cancel task detailed contract TDC responsible task addition information task contract receives allocate worker creates worker submit task worker allocate task cannot submit TDC function function invoked TMC inform TDC worker address allocate task TDC creates worker address function allocate worker correspond lastly function invoked submission task due date evaluates quality respect another determines correspond payment worker TDC task budget transfer correspond payment worker task manager contract TMC variable task task allocate task address worker address  task attribute budget task address address allocation status task detailed contract TDC variable task information task task  worker address data quality uint payment uint framework scenario scenario propose crowdsourcing framework interaction worker requester smart contract constitute framework user registration user requester worker register UMC information ethereum address role location UMC information worker initializes user reputation default registration allows user publish task fulfill exist role user assume ethereum address associate identity prevent biasing framework submission image KB image framework scenario UMC user manager contract TMC task manager contract TDC task detailed contract requester task creation requester interested publishing task task information TMC function task budget location worker requester address sender address subsequently TMC creates TDC task task budget TDC address append task information available task requester preference declaration requester submit task preference algorithm requester query UMC identify available worker information reputation average completion location requester calculates preference algorithm submit function TMC worker preference declaration worker interested fulfil task query function TMC function return available task location requester reputation minimum payment worker identifies task within radius subsequently worker determines preference accord algorithm submit function TMC allocation iteration propose task mechanism execute TMC implement propose preference task mechanism algorithm function considers submit preference worker requester TMC worker accord deployed mechanism allocation TDCs worker submit task worker submission worker completes assign task worker submits function task correspond TDC TDC allocate worker submit evaluates quality quantitative manner evaluation determines payment TDC transfer worker task accomplishment payment calculate minimum payment addition payment quality submission incomplete task requester update preference task worker preference task availability mechanism allocate interested worker task performance evaluation propose preference task mechanism blockchain crowdsourcing aim generate consideration preference worker requester efficient evaluation conduct performance propose task mechanism evaluate mechanism without preference evaluation criterion maximum achievable allocation task worker iteration achieve  worker task minimum payment worker quality worker satisfaction task confidence worker evaluation execution propose task mechanism confirm feasibility efficiency benchmark exist blockchain crowdsourcing proposes task preference important contribution focus accuracy task execute framework function advantage dependency declare information worker allocation mechanism introduce however hinder stability completion task propose framework allocation mechanism improve performance worker task requester declare preference propose mechanism benchmarked modify version NNM mechanism ensure evaluation fairness NNM relies propensity acceptable member propensity calculate exist observation predict outcome generate propensity consistency propose mechanism propensity replace propose QoI QoT metric QoI QoT normalize task worker NNM algorithm illustrates NNM mechanism image KB image acceptable available task compute algorithm respective requester framework similarly preference interested worker compute algorithm framework framework identifies unallocated worker worker task closest afterward remove update zero remove worker checked mechanism terminate location worker update update preference iteration mechanism evaluation setup mechanism implement compile solidity version solidity program ethereum   library java application ethereum network interact contract implement mechanism ganache client deploy local blockchain address worker requester interact framework dataset radiation reading approximately worker evaluation worker dataset attribute parameter task within worker parameter mechanism performance evaluation parameter worker dataset attribute worker latitude longitude data   completion worker reputation maximum task per worker task generation parameter task location latitude longitude task budget slot per task worker radius task worker algorithm parameter maximum maximum maximum iteration  maximum preference maximum worker satisfaction evaluation analysis percentage allocate task propose task mechanism GSM SenseChain outperform NNM task varied GSM SenseChain worker task sort preference permit worker perform prefer task maximizes percentage allocation NNM percentage allocation worker iteration iteration acceptable preference addition percentage allocate task task increase mechanism due available worker increase task assumption worker perform maximum task iteration propose mechanism maximize allocation percentage iteration terminate task worker interested available task NNM iteration SenseChain GSM SenseChain GSM worker task sort preference hence worker task reject SenseChain allows worker reserve preference within iteration relies reserve allocate scheme alternatively GSM allows worker submit task preference increase probability hence difference iteration maximize percentage allocate task iteration NNM consequence similarity therefore worker repeatedly task iteration mechanism increase task NNM SenseChain contrarily GSM almost constant iteration scalable average QoI worker task GSM outperforms task mechanism SenseChain assumes worker reservation preference task accept worker pool GSM indeed worker GSM submit preference worker reject task preference task NNM QoI consequence mechanism generate construct quality later furthermore task mechanism QoI worker increase GSM task available SenseChain NNM QoI fluctuate margin difference remain GSM image KB image overall mechanism performance average minimum payment worker acquires task worker interested payment acquire preference computation GSM worker minimum payment SenseChain NNM furthermore minimum payment per worker increase task model due availability task willing worker submission addition worker ability perform additional task satisfaction worker worker satisfaction tws tws satisfaction deviation task worker task ranked preference calculate accord available task worker task maximum worker satisfaction occurs rank task penalization factor deviation task worker iteration calculate accord task preference worker rank task preference worker task task worker image KB image worker performance GSM achieves worker satisfaction NNM SenseChain maximize tws SenseChain performance NNM worker sort preference however worker reserve task probability worker reserve task increase limited slot worker reject reserve task lose prefer task due submission reservation increase deviation rank task worker preference GSM satisfaction increase worker preference task increase probability worker assign task adhere rank confidence worker worker confidence  context confidence inversely proportional rank allocate task worker preference  calculate accord available task worker task rank task preference worker  defines confidence worker task apply propose mechanism metric mechanism conform preference worker compute allocation  implies task assign worker preference evident  SenseChain GSM NNM  former implies preference worker confidence NNM attribute neglect rank task worker SenseChain GSM analysis submit preference execute propose mechanism ethereum blockchain ass feasibility efficiency analysis evaluation metric fix task available task smart contract function execute consume transaction consumption convert ether price ether gwei average transaction confirmation algorithm min convert monetary USD currency ether june summarizes acquire function task requester execution fee smart contract preference submission function user worker requester preference preference task mechanism varies SenseChain per task GSM per task difference consequence difference mechanism iteration framework function    task creation preference submission  gale shapley GSM SenseChain GSM sequential worker preference feasibility task GSM indeed longer preference SenseChain latter suffers due iteration worker submit task GSM worker preference reduce redundant entry conclude mechanism feasible chain reasonable execution maintain scalability mechanism environment geographical zone task worker mapped zone reduce task worker location dependent task mechanism zone individually execution environment discussion conduct performance evaluation analysis propose mechanism strength weakness derive propose mechanism framework indeed improve performance framework requester worker standpoint framework maximize percentage allocate task reduce mechanism allocate available task requester improves QoI allocate worker perform task reduce payment worker worker improves satisfaction task completion confidence improve demonstrate performance mechanism delay tolerant task task delay introduce preference execute mechanism acceptable sensitive task exploration ensure performance appropriate blockchain usability context evaluation performance propose mechanism depends available task worker define demand task worker ratio DSR DSR reflect competition worker DSR indicates competition DSR implies competition illustrates performance SenseChain GSM DSR ratio DSR varied increment worker task DSR QoI worker SenseChain performs GSM DSR GSM outperforms DSR worker confidence trend SenseChain DSR GSM performance mechanism minimum payment alike DSR however GSM exceeds SenseChain trend SenseChain outperform DSR attribute worker preference task due competition worker update preference constantly availability preference DSR worker pool task preference task worker preference constant update SenseChain mechanism performance task worker ratio outperform mechanism bold transition performance highlight conclusion preference task mechanism SenseChain GSM propose blockchain crowdsourcing preference worker compute propose QoT metric task compute QoI metric despite mechanism metric distinct algorithm worker task SenseChain considers reserve allocate scheme worker submits preference decision alternatively GSM worker submit preference mechanism deployed within blockchain crowdsourcing framework implement multiple smart contract mechanism evaluate private blockchain dataset benchmarked NNM similarity worker task NNM SenseChain GSM superior performance requester percentage allocate task worker  confidence worker perform task demonstrate performance worker payment satisfaction propose mechanism NNM maximizes performance context worker task moreover mechanism feasible efficient deployed ethereum satisfy desire blockchain crowdsourcing indeed introduce QoT metric along QoI metric ensure fairly balance preference worker task furthermore incorporate preference contribute improve performance crowdsourcing framework without preference NNM stability guaranteed propose task mechanism user declare preference future extend enable framework recommend task available worker previous task allocation framework information worker increase task completion rate