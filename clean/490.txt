trend towards  3GPP lte mobile network architecture emergence federate infrastructure alternative service delivery strategy improve user efficient resource utilization propose  tailor environment broader applicability allows mobile user via optimal data anchor mobility gateway service deliver via optimal service inside infrastructure applies markov decision algorithm effective performance optimize service migration decision alternative scheme ensure service continuity disruption operation propose software define networking technology locator identifier separation protocol numerical analytic model testbed alternative implementation developed demonstrate quantitatively qualitatively advantage introduction cope explosive growth mobile data traffic challenge core network mobile operator towards architectural decentralize user network approach involve data anchor gateway towards network carefully IP traffic via access network node mobile data offload technique computation offload heterogeneous wireless network infrastructure attracts attention availability compute resource service delivery compute content service provider deploy regional data DCs furthermore dependence content provider cps internet service provider ISPs another efficient content service delivery disruption network operation dynamic shift traffic demand creates content provider internet service provider cooperation incentive joint deployment network aware content service delivery infrastructure compute technology implementation importantly efficiently address mobile user geographical coverage proximity data cooperative service deployment emerge networked federate involves allocate virtual resource data disperse specific geographical infrastructure potentially heterogeneous federate provider transparent manner availability regional resource flexibility virtualization technology upon federate built particularly important trend  mobile network infrastructure offering mobile service elastic manner user demand presence context generation partnership project 3GPP evolution evolve packet lte eps decentralize mobile network architecture core network gateway packed data network gateway  gateway  operating virtualized network function VNF instance necessarily specialized dedicate hardware important ensure user mobile core network generation partnership project eNodeB non generation partnership project access enjoy acceptable quality qoe guarantee optimal connectivity service federate entire service consumption challenge address user connectivity mobile data anchor gateway optimal necessarily mobile service delivery user service suboptimal data physical location challenge introduce concept  tailor  decentralize mobile network federate architecture allows content service mobile user ensure latter optimal data anchor mobility gateway access service optimal data geographical network topological proximity service network metric load service delay etc realize vision service continuity sophisticated scheme service migration decision across data critical article framework define architectural algorithmic implementation perspective explore alternative scheme ensure service continuity locator identifier separation protocol lisp software define networking sdn technology propose markov decision MDP algorithm optimally perform service migration decision account user mobility information address tradeoff migration user testbed implementation propose architectural alternative couple analytic performance evaluation demonstrate feasibility advantage shed practical aspect deployment remainder article structure overview related concept entity functionality introduces analytic model capture tradeoff benefit due service migration markov decision scheme building model locator identifier separation protocol software define networking implementation analytic testbed performance conclude article related service continuity mobile user mobile networking context challenge maintain service continuity user importantly service mobility approach decouple session location identifier protocol separation explicit locator identifier separation protocol apply   networking stack service access layer cater user service mobility identifier location separation service identifier however modification legacy application propose functionality research openflow hide IP address openflow scalability challenge wrt setup rate bandwidth channel etc reduce packet  creation controller switch propose distribute function enhance scalability approach software define networking service migration federate context geographically distribute data resource pool management procedure service request optimal data satisfy resource quality constraint respective criterion constraint service migrate across data   propose management middleware migrate user service virtual machine data site response data workload variation application component geographically closer user  automatic service placement scheme geographically distribute data iterative optimization algorithm performs service migration detect data capacity user location   propose data selection algorithm virtual machine VM model subgraph selection demonstrate service information retrieve application layer traffic optimization  server mainly focus virtual machine migration virtual machine mobility management integrate IP mobility management directly hypervisor interacts virtual machine migration update IP address virtual machine rout invokes mobile IP functionality virtual machine destroyed migrate perform virtual machine migration expense potentially downtime achieve  downtime modify version locator identifier separation protocol rapid traffic redirection contrary approach scheme modification hypervisor deployment issue locator identifier separation protocol location identity traditionally couple IP mobility becomes challenge task locator identifier separation protocol rout locator  endpoint identifier  locator identifier separation protocol impose constraint endpoint identifier rout locator identifier format IP address typically rout locator packet internet endpoint identifier local IP subnet data locator identifier separation protocol endpoint identifier address rout locator encapsulates packet IP packet IP transit usually locator identifier separation protocol site manage tunnel locator identifier separation protocol router  functionality IP packet encapsulation packet terminal ingres functionality itr  packet network egress functionality etr guarantee endpoint identifier reachability locator identifier separation protocol mapping resolver MR server MS cache tunnel router packet transmit endpoint identifier remote destination address ingres tunnel router itr latter encapsulates transmit packet header locator identifier separation protocol udp IP fix source rout locator destination rout locator locator identifier separation protocol header source destination tunnel router rout locator respectively mapping endpoint identifier correspond destination tunnel router rout locator local cache lookup fails request message resolver responds mapping otherwise redirects request server server local database tunnel router correspond endpoint identifier exists otherwise negative server receives register message  register endpoint identifier rout locator mapping mapping database mobile IP locator identifier separation protocol avoids triangular rout thanks decouple location identifier another location without endpoint identifier rout locator update server resolver furthermore modification locator identifier separation protocol achieve virtual machine migration downtime prior article extends generalizes refines concept evolve target generic decentralize mobile network architecture heavier NFV technology service closer user complement locator identifier separation protocol implementation scheme update evolve software define networking finally theoretical extend service migration decision algorithm capture 2D mobility scenario algorithm analytic model completeness concept concept functionality optimize disruption service mobile user architecture component scheme controller  DC GW mapping entity independent architectural component functional entity collocate exist node software data underlie architecture federate distribute mobile network environment generation partnership project evolution evolve packet architecture generic apply decentralize mobile network access scheme assume data mapped data anchor router gateway evolution context router packed data network gateway user roam across federate hotspot  network data anchor router access router internet service provider public access mobile access architecture option data gateway mapping criterion location hop distance mapping static dynamic latter topology information exchange service provider mobile network operator mno alternatively mobile network operator function update service information reactive proactive manner furthermore controller manage distribute data instance preclude decentralize organize implementation distribute data coordination advantage virtualization technology data anchor extends version architecture capability user directly data anchor router service closer user distinguish data macroscopic core macro data data origin server microscopic cache implement data anchor gateway microdata mobile user efficiently focus  persistent service virtual machine storage service instantiation functionality implement user equipment ues microdata responsible service identification migration procedure mapping  mapped microdata mapped data anchor router data anchor implement virtualized network function host federate collocate correspond microdata allows various strategy virtual machine cache microdata service component migrate replicate another data anchor user mobility however strategy outside scope simplicity presentation clarity assume service deployed data anchor router user attach upon service initiation migrate replication user unless otherwise data refer microdata data service migration IP address user equipment data anchor router packed data network gateway relocation generation partnership project evolution evolve packet mobile network architecture potential service migration detect microdata service migration worthwhile depends service requirement ongoing video service strict qos requirement migrate delay sensitive measurement task emergency warn machine communication service migrate optimal data content movie user packed data network gateway relocation user equipment application layer decides initiate service migration user migration decision relies potentially conflict criterion related user expectation service qos qoe network provider policy load balance maximize data resource utilization microdata capacity etc user equipment microdata appropriate migrate service plugin available microdata request controller optimal microdata initiate service migration service consist multiple cooperate component potentially reside location decision service fully partially migrate service migration associate initiation replication virtual machine target microdata release resource source data bandwidth consumption due traffic exchange data controller estimate benefit federate traffic distribution user qoe analytic model propose analytic model establish relationship relevant tradeoff service migration benefit user model insight upon markov decision algorithm derive optimal migration policy markov model markovian model aim derive user equipment wrt data predict evolution focus discussion generation partnership project evolution mobile network environment generation partnership project network typically hexagonal sake simplicity assume microdata data anchor router packed data network gateway collocate  implementation microdata mapped packed data network gateway mapped pool  typical 3GPP cellular network typical 3GPP cellular network random mobility model user equipment probability residence user equipment exponential distribution service service migration data anchor gateway relocation trigger user equipment location hop away data assume collocate  denote distance user equipment data hop continuous markov chain  chain explosion address reduce aggregate behavior obtain chain user equipment probability user equipment host data probability distance data probability increase distance data probability consequently aggregate regard user equipment probability therefore obtain aggregate aggregate aggregate rationale apply obtain aggregate identifier aggregate within proven aggregate chain derive initial markov chain markovian transition diagram aggregate markov chain service migration trigger user equipment hop away data derive steady probability aggregate simplicity aggregate label superscript identify aggregate balance equation source source sourcewhere  sourceand source sourcewhere otherwise source sourcewhere otherwise SourceRight click MathML additional feature SourceRight click MathML additional feature markov chain markov chain average user equipment data distance probability optimal data dist denote average distance user equipment data dist depends distance hop user equipment data anchor router collocate data recall user equipment remains anchor data consequently rout latter service migration trigger therefore average distance express dist  sourcethe probability user equipment optimal data lifetime average delay data define delay delay user equipment data packet data dist delay depends user equipment distance hop data anchor router data average delay denote   sourcewhere delay UE distance belonging service migration MC denotes migrate component session compose service data optimal depends migrate amount signal message exchange controller user equipment data signal message trigger service migration service migration   sourcewhere  signal message hence MC derive MC  source service migration duration service migration duration transfer service data optimal mainly depends transfer rtt tcp connection data convert virtual machine appropriate format data hypervisor service cannot service disruption SDT assume data transfer ftp application empirical tcp latency model service disruption compute SDT plo rtt  plo rtt plo  rtt tvm conversion sourcewhere plo denotes packet loss rate packet transfer wmax maximum congestion tvm conversion convert virtual machine plo rtt plo plo plo rtt plo rtt  MSS maximum tcp connection MDP scheme service migration model service migration decision markov decision capture tradeoff reduce maintain satisfactory user model decides service consume user distance data migrate optimal data decision controller formulate service migration decision policy define continuous markov decision  associate action correspond transition probability reward evolution denote assume cellular network topology model belongs TA belongs service SA anchor gateway packed data network gateway access router continuous markov decision dimensional 1D mobility model mobile user destination service probability service probability user data illustrates 2D mobility model described previous vector describes action available controller epoch user equipment performs handoff enters another service action service migrate optimal data action user equipment data available action differs sake simplicity demonstrate markov decision service migration 1D mobility apply 2D model albeit simplicity 1D model appropriate vehicular networking environment user along predefined trajectory highway railway continuous markov decision service migration procedure 1D mobility model continuous markov decision service migration procedure 2D mobility model 1D mobility model residence user service exponential distribution hence define thr thr maximum distance service service migrate optimal data controller observes network associate action upon arrival previous action instantaneous reward associate transition another correspond formal representation continuous markov decision source action reduces subset policy associate action transition matrix denote transition rate due action scenario user equipment service another service construction define policy function actual decision migrate service actual markovian sojourn service exponential distribution markovian resolve markov decision equivalent discrete markov decision  define continuous markov decision finite argue finite distance thr data service automatically migrate optimal data finite action discrete markov decision derive  discretization initial transition rate matrix bound sojourn exponential bound parameter therefore sup exists constant sup SourceRight click MathML additional feature denotes probability define equivalent  independent exponential sojourn parameter transition probability source transition probability discrete markov decision procedure define thr aor thr aor thr  sourceit important thr available action user equipment another service distance exceeds threshold thr service migration automatically trigger remainder discrete markov decision version denote action reward discrete markov decision procedure respectively denote transition probability denote reward associate transition policy mapping action denote accordingly policy sequence decision decision epoch restrict deterministic policy implement user equipment service another service controller migrate service action migrate action transition reward obtain reward function migrate service zero migration quality obtain migrate service define cma sourcewhere denotes migrate service therefore reward function sourcewhere quantifies quality perceive user source data quality inversely proportional hop distance source data maximum quality user equipment enjoy optimal data quality function express denotes predetermine factor discount factor initial define discount reward policy  limn      continuous markov decision explicitly depends transition reward function obtain SourceRight click MathML additional feature transition rate action predetermine parameter formulation reward function  continuous markov decision discount model discrete model resolve   denote maximum discount reward initial optimality equation   SourceRight click MathML additional feature optimality equation correspond maximum discount reward optimal policy worth mention optimal policy indicates decision network data user equipment attach respectively algorithm optimization optimality equation iteration policy iteration noticeable former implementation alternative breadth available option realize architecture explore alternative enable technology implementation identify candidate approach software define networking locator identifier separation protocol protocol however integrate mobile ipv protocol openflow architecture software define networking scheme built nox openflow controller openflow architecture mobile user access service mobile wireless client network traffic openflow capable access router AR traffic federate location data inside virtual machine instance interconnect via virtual switch manage local hypervisors rout openflow microdata router DC core architecture nox controller component architecture communicate controller assume aware virtual switch instance data identifier physical openflow switch virtual machine identifier namely IP mac address location IP address default gateway topology openflow switch identifier data router client network IP address manage DHCP server client DC network location distribute data operator network autonomous domain functionality software define networking controller location management correctly instal openflow switch client virtual machine link location IP address allocation gateway setting location client client network maintain traffic client virtual machine network correspond location controller update status entity network location location management responsible appropriate microdata location virtual machine client utilize information geographic location data characteristic client virtual machine data network average delay network load congestion mobility detection service migration actual virtual machine migration infrastructure software detail proof concept implementation sequence message service migration procedure software define networking implementation service migration procedure software define networking implementation user attachment openflow access router network sends packetin openflow message controller notify mobility initiate user performs DHCP message exchange network controller executes service migration decision algorithm migration installs appropriate openflow access router network launch virtual machine migration openflow router microdata host migrate virtual machine traffic latter openflow switch network switch session management functional requirement controller preserve ongoing user session virtual machine migrate implies configuration IP address gateway configuration virtual machine furthermore private IP address manage data overlap hop consistent across subnet boundary address tunnel within network tunnel operates rewrite IP address within packet IP header outgo packet virtual machine external network IP header restore packet hop network technique apply incoming traffic virtual machine achieve modify openflow instal network experimental setup developed experimental testbed implement software define networking architecture setup data implement  ESXi hypervisor ESXi host equip ethernet management openflow traffic network virtual network topology define inside ESXi host  switch physical NIC switch instance ESXi host manages XP virtual machine virtual machine configure virtual NICs  virtual network switch  management traffic  openflow traffic storage data access standard iSCSI protocol data remotely manage   software WLANs client connectivity linux host hop router client traffic assign client address DHCP linux traffic characteristic delay available bandwidth congestion network simplify setup data host role microdata mapped data anchor router WLAN hop router client network respective router nox controller specify linux router ESXi host   host  IP openflow switch physical openflow switch perspective virtual switch vlan separately traffic data client network controller manages behavior vlan monitor characteristic data client network resource management optimization trigger virtual machine migration across data  infrastructure technology proprietary api   traffic mapped management network active communication virtual machine remote user manage openflow network locator identifier separation protocol architecture architectural alternative locator identifier separation protocol protocol microdata internet tunnel router client mobile network domain contains IP subnets interconnect tunnel router architecture locator identifier separation protocol resolver server locator identifier separation protocol entity resolver server tunnel router implement VNFs deployed virtual machine tunnel router mobile transport network domain VNFs built directly data anchor router hardware architecture controller VNF envision locator identifier separation protocol architecture scenario mobile user access service host microdata subnet subnet tunnel router subnet notifies resolver server mobility resolver server update cache informs controller location user controller executes service migration decision algorithm migrate user service virtual machine host service microdata correspond location user decision positive controller request hypervisor launch migration procedure virtual machine migrate hypervisor tunnel router subnet inform migration latter informs resolver tunnel router subnet tunnel router involve communication virtual machine accordingly finally resolver server resolver update cache notifies controller locator identifier separation protocol architecture service continuity ensure service continuity locator identifier separation protocol assist service migration mechanism capable maintain virtual machine endpoint identifier migrate data target update rout locator target tunnel router virtual machine endpoint identifier inform resolver server tunnel router involve communication migrate virtual machine update rout locator migrate virtual machine inform tunnel router erase virtual machine endpoint identifier cache assume virtual machine endpoint identifier IP address obtains rout locator IP address correspond tunnel router furthermore virtual machine endpoint identifier register initial tunnel router IP subnet prefix endpoint identifier mapped rout locator source tunnel router resolver cache tunnel router communicate virtual machine virtual machine migrate target hypervisor endpoint identifier migrate virtual machine maintain destination tunnel router inform migration approach exist achieve approach tunnel router become aware virtual machine latter initiate communication tunnel router detects source IP address migrate virtual machine endpoint identifier belonging IP subnet although signal message virtual machine connection ensure service continuity virtual machine packet transmit tunnel router communicate virtual machine rout locator alternative approach propose locator identifier separation protocol inform source target tunnel router successful virtual machine migration priority CP locator identifier separation protocol message introduce allows target hypervisor inform target tunnel router migration virtual machine target data virtual machine endpoint identifier update cache rout locator endpoint identifier mapping tunnel router however modify hypervisor implement deploy hypervisor software independent operator locator identifier separation protocol domain article propose another approach controller informs tunnel router handle involve data domain virtual machine rout locator controller integrate locator identifier separation protocol domain already communicates resolver server user location easily aware tunnel router handle data domain obtain message resolver server tunnel router handle data IP domain service migration procedure locator identifier separation protocol implementation tunnel router becomes aware migration virtual machine local data notifies resolver server update rout locator migrate virtual machine endpoint identifier endpoint identifier migrate virtual machine initial IP address prefix therefore rout locator target tunnel router mapped subnet prefix virtual machine endpoint identifier prefix furthermore former tunnel router era endpoint identifier rout locator entry cache traffic redirection source tunnel router locator identifier separation protocol message inform tunnel router communicate concerned virtual machine latter accordingly update virtual machine rout locator tunnel router maintain tunnel router involve active connection experimental setup VNFs correspond entity locator identifier separation protocol scheme implement click modular router framework ClickOS virtual machine deployed xen hypervisor data emulate kvm advantage virtual machine migration option kvm migrate ram content involve data hypervisors storage via nfs emulate mobile user IP domain whenever user enters domain service virtual machine migration trigger virtual machine ubuntu GB ram core processor data kvm manager ubuntu GB ram emulate latency data controller tunnel router linux performance evaluation quantitative performance evaluation propose scheme numerical analytic model measurement testbed implementation software define networking locator identifier separation protocol model performance numerical obtain resolve markov model define evaluate performance probability user equipment optimal data average distance user equipment optimal data user equipment connection latency service migration service disruption service migration assume reliable connection data zero packet loss service migrate respective virtual machine GB data assume hypervisor virtual machine conversion migrate service corresponds situation concept unrealistically service typically limited modest probability user equipment optimal data average distance respectively probability decrease function probability obtain service migration trigger user equipment handover ensure user equipment optimal data delay service migration longer distance average distance increase function indeed service migration delayed user equipment likely distance hop average distance exceeds hop probability optimal data average distance plot average latency user equipment connection latency lat hop distance data intuitively average latency increase significant difference delay average latency service migration migrate percent service decrease function service relocation launch user equipment handover furthermore migrate service critically depends migrate service migration depicts service disruption assume rtt proportional hop distance data RTTI service migration migrate percent service clearly service disruption increase function attributable longer distance concerned data increase rtt addition service disruption migrate service mainly due transfer notably difference important service disruption highly dependent rtt accelerate data transfer FDT mandatory rtt service disruption rtt proportional distance service migration policy tradeoff migration user improvement identify demonstrate construction service migration policy obtain matlab implementation iteration algorithm thr service migration automatically trigger user equipment distance service source data factor quality function arbitrarily introduce metric ratio maximum quality scenario quality obtain service migration launch service migrate indicates negligible quality obtain service migration launch illustrate optimal policy construction aforementioned scenario intersection action continuation migration service controller distance data probability remark optimal policy construction threshold beyond distance recommend action service migration distance inversely proportional probability optimal policy construction instance propose policy recommends service migration scenario respectively user equipment data user equipment likely remain vicinity data service data furthermore remark impact optimal policy construction service migration intuitive incur negligible achieve gain migrate service random scenario optimal policy recommends service migration distance exceeds tradeoff quality testbed openflow implementation obtain software define networking testbed described focus evolution service latency migration demonstrate advantage emulate increase service latency due user suboptimal data introduce delay client network suboptimal data linux rtt optimal data client originally suboptimal data monitor rtt user terminal virtual machine host service ping client  along duration approximately rtt active service migration trigger instability increase latency latter converges upon migration completion increase delay mainly installation openflow traffic arrives controller implies scalability issue centralize deployment therefore decentralization scheme propose locator identifier separation protocol implementation locator identifier separation protocol testbed described metric service downtime duration virtual machine available rtt mobile user remote virtual machine migration duration instantaneous rtt migrate virtual machine mobile user ping linux introduce rtt data rtt controller tunnel router approximately rtt controller tunnel router user data enjoys service quality rtt user another network rtt increase approximately controller trigger service migration data optimal migration overall service downtime visible due duration downtime mainly due controller notify involve tunnel router virtual machine endpoint identifier migration kvm hypervisor data virtual machine active migration virtual machine icmp echo location data migration user data optimal brings rtt rtt migrate virtual machine mobile user rtt migrate virtual machine mobile user quantify dependence service downtime duration latency entity architecture downtime duration virtual machine migrate data data rtt controller data testbed configuration RTTs controller tunnel router tunnel router respectively RTTs controller tunnel router tunnel router respectively downtime duration function latency iteration downtime duration proportional rtt controller target data longer information data virtual machine migration longer accordingly inform tunnel router router redirect traffic tunnel router conclusion impact rtt controller tunnel router downtime service downtime mainly locator identifier separation protocol mobility management capacity rapidly inform tunnel router migration virtual machine impact downtime kvm activates virtual machine data migration confirms observation importantly maximum downtime experienced noticeable impact service quality non interactive application another conclusion duration service migration becomes practically independent rtt data latter increase migrate virtual machine data data rtt data data increase beyond virtual machine migration tcp impact link bandwidth rtt conclusion vision towards enhance delivery service mobile user tackle mobility related challenge offering optimize user framework enables service user perform sophisticated decision migrate service resource appropriate infrastructure location define analytic model behavior propose markov decision algorithm service migration decision capture tradeoff migration user developed alternative architecture software define networking technology locator identifier separation protocol protocol numerical model software define networking locator identifier separation protocol testbeds demonstrate potential approach optimize mobile service delivery feasibility deployment