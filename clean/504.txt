container compute steadily increase emergence kubernetes management application inside container pod simplify kubernetes allows automate action heal update application management security threat evolve attack pod perform malicious action recent malware cryptomining emerge serious threat hijack server resource cryptocurrency mining application deployment execution pod cryptomining hidden malware executable background detect malicious cryptomining software inside kubernetes pod feasible strategy machine ML identify classify pod cryptomining addition detection administrator explanation ML classification outcome explanation justify disruptive administrative decision pod removal restart image article implementation ML detection anomalous pod kubernetes cluster monitoring linux kernel syscalls cryptominers image container within anomalous pod ML model built detect pod presence numerous healthy workload explainability shap lime novel auto encode scheme lstm model evaluation metric contrast explainable model propose ML cryptomining detection introduction compute container operating virtualization abstraction isolated host kernel container image lightweight alone executable package sufficient component code library setting application container compute grown significantly service elasticity timely response various commercial service provider amazon google ibm microsoft invest micro service instantiation containerize environment renowned containerize docker kubernetes  kubernetes source automate deployment management application inside container capability load balance storage orchestration automate rollback batch execution heal horizontal vertical container advancement container technology trigger cyber security threat counter cyber attack detection scheme available secure application container approach assume underlie container image healthy botnets inject fault container unfortunately attacker replace healthy container image infect undetected traditional cyber security detector recent report  image maliciously cryptocurrencies docker image access without authentication attacker deploy cryptojacking malware infect docker image subsequently remove docker repository miner hijack container compute resource cpu memory deployed application miner extreme mining operation pod compute resource resource available legitimate application performance necessarily degrade  malware protection software report miner attack microsoft mac OS mining attack increase percent fourth quarter quarter  campaign server belonging healthcare telecommunication medium sector hijack cryptomining per kaspersky lab cryptomining attack increase percent respect previous cryptominers prevent deployed application container resource deploy booting desire application therefore crucial perform health container image ML cryptomining container detection framework syscalls monitoring mechanism cryptomining anomaly detection principle establish application behavior baseline evaluate subsequent baseline anything baseline regard anomalous investigate statistical ML algorithm detection explainability investigate ML outcome ML algorithm performance metric cryptomining signature cryptocurrency mining malware refers software developed computer resource cryptocurrency mining without user explicit permission attacker attempt profit cryptocurrency mining harness processing computer smartphones electronic device detection cryptocurrency malware perform generate signature consumption network traffic behavior operating hardware performance counter anatomy browser cryptomining attacker  web javascript code auto executes web load victim browser attacker advantage browser activate javascript mining module illegal leverage javascript maximally  privilege without victim consent mining operation unauthorized execution javascript therefore signature cryptomining malware scenario browser behavior profile metric syscalls processor memory metric instruction per cycle cpu utilization virtual memory fault context switch etc definite metric marked legitimate healthy operation browser hijack mining operation significant deviation profile metric deviation mining signature browser operating mining executable file memory establishes alteration registry scenario monitoring registry signal presence malware network signature extraction mining program contact central botnet server register presence relevant file architecture victim network transaction generate significant network traffic actual cryptomining trace traffic relatively easy communication unencrypted cryptominer signature extract consumption iot device consumption various victim processor monitor differentiate malicious miner non malicious application performance counter victim processor assist profile various mining algorithm generate signature performance counter profile perf fault execute instruction cache mining algorithm completely cpu gpu signature mining non mining application finding signature implementation mining algorithm overlap signature various miner despite implement proof algorithm claimed unique signature miner apart healthy workload spec cpu cloudsuite parboil rodinia motivation public compute service access hardware resource typically available customer instead linux kernel operating proxy signal possibility threat container syscall fundamental interface application linux kernel syscall generate application interacts linux kernel cryptominers repeatedly core proof pow algorithm currency occurrence syscalls monitoring unanticipated application signal presence threat container scenario unusual syscall alert cryptomining prior research syscalls behavioral model detection mechanism research neural network model anomaly detection model information return user regard anomaly classification information transparent administrator explainable classification model appropriate action explainable model generates auditable explanation factor associate prediction recommend critical signal carefully monitor recommend specific action increase sample frequency finer grain detail responsible anomaly explain association signal manage false prediction rate association fault trace impact pod due another pod cascade manner pod explanation obtain machine model trace feature sequence eventually detect methodology formulate implement detect cryptominer anomaly proxy mining explainable machine ML model cryptomining detector statement contribution analyze syscall available accuracy across cryptominers identify along explanation identification described histogram syscalls distribution distinct syscalls another semantics syscall interpret detect infect pod graph analysis deduce relationship syscalls generate application signature markov chain mostly graph syscalls sequence probability depends attain previous similarly graph built syscalls android malware detection graph malware signature container syscalls graph detect anomaly suffer disadvantage significant amount manual intervention analyze interpret syscall semantics analysis application distinct syscalls platform dependent image version operation ubuntu debian  prediction model explore explainable ML syscalls classify anomalous container machine model ability handle data syscalls model comparatively graphical remove intervention interpret syscalls opcode analysis effective signature anomaly detection detection continuous syscalls sub sequence extract cryptominers signature anomalous pod signature extraction extensive computational resource instead signature anomaly standard MLs capable sub signature comparatively compute resource sub signature baseline boundary sufficient precisely classify anomalous pod behavior normal sub signature explainable reasonable justification ML classification outcome machine model capable pursue progressive classification platform container model progressively characteristic version maintain classification accuracy version fulfill requirement methodology anomaly detection kubernetes pod propose implement depict cryptominer image creation anomalous pod proxy linux kernel syscalls extract healthy application exhibit domain behavior cryptominers ML algorithm classify pod crypto hijack normal pod algorithm accuracy runtime resource utilization diagram cryptominer pod detection conduct thorough comparison methodology literature summarize literature comparison specific contribution implementation novel automate cryptomining pod detection kubernetes cluster development implementation syscall extraction kubernetes pod implementation statistical ML model detect anomalous pod implementation statistical explainability mechanism ML model source component another grown software comparative analysis explainable ML implementation difference quantify define performance metric organization describes methodology cryptominers workload explain along detail syscall collection container platform implementation propose methodology datasets perform feature extraction ML implementation validation accuracy described explainable outcome ML model summary ML accuracy performance tabular format syscalls unique cryptomining normal application verify ML classification operation finally concludes propose methodology setup implement kubernetes  node kubernetes cluster ubuntu virtual machine cryptomining container bitcoin  dash litecoin ethereum zcash ripple  miner chosen account variety mining algorithm detection framework instance sha cryptonight  equihash maximum coverage across proof algorithm cryptominers cpu intensive verify inspect cpu usage mining container command docker stats container detect cryptominers cpu usage usage rate although metric healthy application cpu intensive significant cpu usage false alert trigger disable important healthy workload syscalls metric enable environment cpu intensive healthy application pod container dedicate computational load classification mysql performance cassandra stress workload apache spark cloudsuite reduce model node hadoop cluster docker bench security graph analytics benchmark medium benchmark workload application benchmark scientific compute AI simulation data mining graph analytics internet miner benign application infect healthy container framework avoid inference related data imbalance syscalls healthy application pod along cryptomining hijack pod syscalls pod convert frame gram standard approach principal component analysis pca extract ML feature syscalls sequence malware detection pca computationally intensive therefore unsuitable detection reduce complexity data format feature extraction gram gram frame split training validation per standard ML convention ratio frame sample gram feature ML model input model setup  ML vanilla neural network feedback recurrent neural network rnn decision xgboost ensemble neural network model statistical formulation model decision xgboost formulation model MLs frequently anomaly detection coverage machine therefore cryptomining detection framework explainable model building algorithm information model effective mining malware detection information developer administrator analyze confidence accuracy ML predict anomaly understand rationale pod classification vanilla neural network decision model explanation lime local interpretable model agnostic explanation feedback rnn  ensemble model python package shap shapley additive  source widely image recognition text identification sentiment analysis banking fraud detection application however container anomaly detection knowledge diagram syscalls processing machine learning upon detection cryptomining hijack pod provision explanation regard pod classification administrator methodology performs automate action disable delete rollback restart previously specify restart pod inspect mining operation remove restart action rollback image container rollback failure confirms image infect action temporary disable pod permanent removal cluster likewise generate account cluster management constraint business decision application host application manager implement manage action legacy business operation ML inference manage infect container important topic future research focus machine explainability aspect cryptomining detection framework syscalls collection anomaly detection challenge collection kubernetes linux performance profile perf syscalls trace script syscall collection docker container easily available literature information available regard collection syscalls kubernetes pod explain script docker kubernetes context syscalls collection linux kernel distinct syscalls execution program docker image miner application described kubernetes yaml file deployed cluster kubernetes api kubectl yaml file deployment perf raw syscalls syscall collection docker platform kubernetes extra script platform appendix attach computer society digital library http doi org ezproxy auckland tpds script anyone extract syscalls kubernetes pod source perf apart perf  ptrace syscalls collection script perf standard  consistently researcher syscalls container primarily kubernetes cluster microservice monitoring however  completely source premium version license installation source perf  ptrace pre instal linux operating effectively without incur additional issue syscalls collection syscalls collection issue encounter relation performance detection framework deployed cluster issue scalability storage overhead runtime overhead security monitoring scalability propose container scalability monitoring approach potential concern syscalls periodically robin fashion container syscalls collection container linearly proportional container cluster container monitor container syscalls sample interval  syscalls polling pod   sourcethe polling interval pod increase linearly mining activity usually oppose malware sample interval typically sufficient moreover polling interval  sufficient detect mining activity polling policy accelerate syscalls collection pod interleave random pod sample driven monitoring storage overhead syscall monitoring significant storage overhead researcher heuristic minimize storage overhead bloom cuckoo filter overhead depends workload quantify aspect syscalls sample interval across legitimate mining application raw syscalls file syscalls sequence dynamic merit specifically bitcoin  cassandra significant storage overhead propose miner detection framework significant amount storage workload accommodate network storage resource cluster storage decrease syscalls sample dynamic policy storage define outside scope related execution perf consumes significant amount memory memory usage mitigate cluster node apply dynamic resource provision policy container raw syscalls file generate sequence runtime overhead syscalls monitoring significant runtime overhead overuse perf execution container slowdown completion limit syscalls extraction subset another knob increase monitoring span  aspect quantitatively workload randomly completion twice without syscalls syscalls collection difference runtime overhead percentage implementation runtime overhead syscalls approximately percent advantage miner detection container overhead reasonable runtime overhead syscalls collection security monitoring container monitoring perf host server container deployed host server cluster container security compromise opening internet traffic traffic access credential compromise credential access credential compromise attacker tunnel container another host server perf attacker malicious code host server perf syscalls generate container per setup syscalls fix sample interval across container cluster robin fashion within sample syscalls generate data ML model inference ML model idle alert administrator inspection container none container generate syscalls active application deem confirmation monitoring faulty alert hijack monitoring therefore automate action detail container management policy alert mapped account cluster management constraint business decision anomaly detection challenge anomaly detection effective administrator platform monitor analyze improve behavior however complex architecture resource platform severe challenge accurate anomaly detection elaborate challenge specific context virtual machine container virtual machine virtual machine vms ensure security mainly isolation operating OS vms bulky core application VM storage compute security enhancement network firewall VM image implement account superset application activity broader VM core application anomaly detection framework complex machine spectrum feature complex model consume tune hyper parameter comparatively longer training model susceptible rate false positive container unlike vms container lightweight ample resource core program VM container OS therefore container image collection package binary container monitor reduce binary package anomaly detect simply verify previously exist binary execute container capture activity application per container ML model feature extract training detection training detection runtime relatively shorter vms ML model compact rate false positive false negative likely VM typically challenge effectively define application application container define minimal marker automate interaction kubernetes grain related service service message additional indicator distinguish malicious benign behavior detect violation security policy summary container amenable anomaly detection VM machine implementation various ML model pod classification feature extraction ML feature generation raw syscall sequence syscall sequence python pod syscalls duration robin fashion miner healthy workload syscalls monitoring span  raw file syscall sequence pod average elapse syscalls occurrence pod differentiate mining benign application interval timing information feature ML training confuse model detection accuracy furthermore timing information extend feature vector increase detection computational complexity increase training therefore syscall sequence argument timing information stack memory address kernel generate ML feature syscalls sequence non overlap gram described syscalls sequence non overlap gram frame extract frame frame frame frame overlap gram frame frame frame frame overlap gram frame across sequence repetition increase training complexity without significant improvement model accuracy redundancy dataset model overfitting longer training memory disk storage without advantage model performance non overlap gram exemplary feedback rnn model model performance metric remains approximately constant representative therefore maximum recall rate behavior corresponds central challenge machine namely fitting gap training error validation error indeed fitting alter neuron hidden layer model excess neuron memorize training validation anomaly local maximum loss function model error peak disappears feedback rnn model evaluation validation gram illustrates difference ML evaluation metric frame generate overlap non overlap gram rnn model training overlap gram without significant improvement ML evaluation metric difference overlap non overlap gram rnn model difference overlap non overlap gram rnn model label assign normal application frame label cryptominer frame frame concatenate python dataframe dataframe transform matrix matrix feature matrix label matrix training validation ratio machine evaluation metric evaluation model standard machine metric accuracy percentage correctly classify  dataset loss average difference model output label training phase across training data sample metric statistical ML model precision exactness quality model prediction mathematically precision   sourcethe positive data sample classify positive model actually positive correctly classify false positive data sample classify positive model actually negative incorrectly classify recall completeness quantity model prediction mathematically recall    negative data sample classify negative model actually positive incorrectly  harmonic precision recall metric combine precision recall insight balance false negative false positive classification model mathematically precision recallprecision recall  false positive false negative zero precision recall closer hence fscore model perform classification cohen kappa statistical metric agreement classifier respect agreement due metric effectively handle multi imbalanced datasets cohen kappa evaluate ML model performance frame miner normal application unbalanced mathematically sourcewhere agreement agreement performance classifier simply random accord frequency dataset random classifier ML model ML model useless roc auc roc receiver operating characteristic auc curve roc cumulative probability distribution auc separability auc ML model predict ML model decision decision commonly classification regression training model architecture structure node data feature link decision leaf outcome categorical label classification analog regression training model training  consist miner healthy application model parameter default python sklearn library training training data achieves classification accuracy percent validation data achieves accuracy percent model evaluation detail machine evaluation summary validation ML model ensemble statically tune ensemble machine  predictive accuracy model  learner built data model compute ensemble outcome learner ensemble data subset drawn training subset learner classifier learner parameter training subset ensemble adaboost xgboost powerful  model xgboost python library independent xgboost installable  module decision model training experimentation  model parameter default python xgboost library classification accuracy obtain model percent training percent validation model evaluation detail ML model vanilla artificial neural network artificial neural network ann model vanilla architecture ann network loop output insert input feedback information direction shallow hidden layer layer shallow layer advantage ann hyper parameter tune accurate model perform python kera tensorflow hyper parameter obtain training accuracy percent validation accuracy percent evaluation metric hyper parameter hidden layer input hidden layer respectively initialization uniform optimization adam activation hidden layer relu activation output sigmoid source neural architecture NAS  http  com ann hyper parameter  hidden layer node along hyper parameter correspond accurate model within model engineer tune neuron hidden layer separately plot hyper parameter constant tune neuron hardly noticeable accuracy evaluation metric ann model perform poorly decision xgboost ensemble vanilla ann model performance validation versus neuron hidden layer vanilla ann model performance validation versus neuron hidden layer vanilla ann model performance validation versus neuron hidden layer fourth ML model feedback recurrent neural network dynamic series syscalls recurrent neural network framework specifically embodiment memory  indeed syscalls sequence series data obvious lstm rnn model proof algorithm miner syscalls relationship extract lstm rnn model apply lstm rnn cryptomining training accuracy percent validation accuracy percent hyper parameter hidden layer input lstm hidden layer initialization uniform optimization adam activation lstm layer relu activation output sigmoid  rnn strategy custom script built model sequentially sweep node hidden layer activation function optimizers evaluation metric standard  google automl  performs hyper parameter tune architecture script intent devote another publication exploration comparison architecture performance lstm model lstm hidden layer swept hardly noticeable accuracy evaluation metric hyper parameter sweep conclusion lstm rnn vanilla ann model performs poorly comparison decision xgboost ensemble model feedback rnn model performance validation lstm hidden layer machine explainability various derive rational explanation ML outcome context explainability ML classify pod miner syscalls sequence pod another feature impact miner prediction visualize ML outcome apart plot evaluation metric explainability attempt address shap xgboost shap software explain output ML model shap explain classification xgboost  shap additive feature attribution explanation express linear regression feature indicator function shap convert ML feature binary variable feature input dataset interpretable dataset feature mathematically  sourcewhere training sample surrogate model ML model loss function explanation regression reflect contribution feature output unlike traditional linear regression compute theoretical shapley graphically shap plot training dataset feature ML model output away plot quantifies relationship dataset feature ML output training sample output typically average model output entire training dataset plot sample cryptominer normal application denotes feature within dataset dataset feature model output label cryptominer normal feature outcome towards illustrate difference cryptominer normal application classification sample randomly chosen  cryptominer mysql application syscalls frame plot generate sample stack horizontally rotate clockwise reveal explanation graph  mysql respectively intersection  cryptominer mysql database model explanation shap model explanation shap  cryptominer data frame along axis model output along axis profile output across frame intersection curve plot descend output across frame model explanation shap mysql application scenario sequence syscalls unknown pod classify pod normal versus cryptominer proceed frame extract syscall sequence ML model classification typically threshold percent frame classification declare entire frame sequence cryptomining aggressive threshold percent translates accurate robust prediction pod category demonstration purpose displayed shap xgboost shap explainability ML model accordingly lime neural network decision lime another explain ML classification apply ML model lime perturb input data model prediction shap lime interpretable cod data feature actual feature classification model cod mining classification binary vector presence absence syscall denote classification ML model input feature vector representation prediction outcome explain associate binary interpretation vector component presence absence feature explanation vector associate explainable model binary model built uniform sample neighborhood sample vector denote perturbation interpretable variable localize model built recover vector representation obtain label explanation proximity distance representation denote loss function approximate expression loss function sourcewhere  linear regression interpretation vector lime extensively illustrate image datasets illustrate cryptominer anomaly detection lime available independent python installable package http github com  lime code classifier data input return probability distribution label apply lime approach ann decision model python library scikit vanilla multi layer perceptron ann decision model per detail prediction fed lime deduce explanation feature lime probabilistic algorithm computes probability selects interpretation probability plot cryptominer normal application classification ann model decision model feature contribution prediction probability label normal application orange label cryptomining plot feature explanation vanilla ann model lime label normal application cryptominers explanation decision model lime label normal application cryptominers explainability solely dependent machine outcome input data sample fed machine model shap lime explainability promising approach specific explainability neural network model node sensitivity hidden layer relevance criterion approach implement image datasets layer wise relevance propagation algorithm  org generate explain classification image category currently investigate context anomaly detection decision model explanation classification mostly obtain visualize binary structure model node split incoming data accord feature variable decision widely adopt explainable model easily interpretable useful feature raw data visualization  generate graphical representation decision split however gram technique generate frame syscalls sequence ML feature syscalls therefore graphic representation decision representation meaningful anomaly detection cyber security network trace ML feature definition relevance networking domain justification ML obtain trace leaf node decision extract networking feature autoencoder feedback recurrent neural network autoencoder generative neural network model learns representation encode dataset unsupervised fashion encode data fed decoder recreate input dataset encoder decoder autoencoders propagation apply tune target input neural network classification autoencoder hidden layer input layer generally midpoint model reconstruction input data output hidden layer compress representation input lstm rnn encoder decoder generate model explainability rnn probe output hidden layer rnn creates encoder rnn structure input output encoder classifier combine rnn vector feature none none creates composite lstm rnn model encoder decoder reconstruction input classification structure lstm rnn classifier structure lstm autoencoder performance autoencoder model evaluate model ability recreate input sequence validation autoencoder model validates upstream classifier model strengthens trust classifier outcome flowchart lstm classification explainability training phase reconstruct output decoder signature   mining healthy application respectively signature explainability batch syscalls frame unspecified pod fed composite model classifier predicts frame miner pod classify miner  explainability output reconstructor denote  evaluate output miner signature      align composite model treat precisely explanation miner prediction   flowchart classification explainability composite lstm model composite rnn model per specification hidden layer input lstm hidden layer initialization uniform optimization adam activation relu mini batch epoch autoencoder loss curve epoch training convergence issue autoencoder dataset centroid various significant variance convergence achieve local minimum loss function difficulty impact quality explainability detail improve autoencoder explainability future publication sequence reconstruction lstm rnn autoencoder autoencoder training loss function autoencoder sequence reconstruction machine performance comparison ML model accuracy training prediction compute resource usage compute resource cpu memory model built core memory optimize amazon EC instance xlarge cpu memory usage obtain linux command  command  profile code therefore output percentage cpu memory overhead however relative overhead ML model training inference model perform platform operating program experimental environment utilization sample cpu memory usage maximum attain training phase cpu usage percent instance multi core sample refers percentage usage CPUs metric across ML model decision xgboost model shorter runtimes ann rnn model resource usage model compute intensive complex algorithm stochastic gradient descent propagation model extensive memory resource training evaluation suggests model accurate statistical model explainability shap lime recommend pending research autoencoder explainability relation autoencoder convergence optimality machine performance comparison syscalls analysis discussion syscalls analysis workload denote unique syscalls miner normal healthy workload wminer wnormal respectively union individual syscalls mining application normal application wminer wminer wminer wminer source wnormal wnormal wnormal wnormal SourceNote syscalls wminer wnormal miner syscall signature similarly syscalls wnormal wminer healthy syscall signature theoretic difference syscalls signature denote  wminer wnormal SourceRight click MathML additional feature  wnormal wminer SourceRight click MathML additional feature signature non empty greatly contribute accuracy machine model classify normal anomalous pod syscalls miner healthy application pod notation  wminer wnormal  confuse machine model syscalls miner capture similarity proof algorithm miner similarly syscalls healthy application capture similarity syscalls sequence healthy application workload similarity denote  wminer wminer wminer source  wnormal wnormal wnormal  syscalls python script syscalls accordingly cardinality wminer wnormal      source  suggests benchmark  suggests similarity proof algorithm miner machine model achieve precise classification administrator viewpoint ML explanation disruptive decision disable delete image theoretic analysis additional input management policy action perform kubernetes api kubectl mention syscalls define     reader refer detailed description syscalls discussion  indicates syscalls execute miner without sequence legitimate healthy workload syscalls  profile pod mechanism whereby attempt  syscalls typically container container container kubernetes pod specific  profile syscalls application inside container tenant decent security hygiene  profile limit syscalls designate workload execute likelihood generic malware cryptominers execute syscalls mining  profile cryptominers effectively detect  policy terminate without MLs approach   mining yaml file usage fix command miner ultimately mapped subset syscalls however highly sensitive production environment rely pre define mining detection policy sufficient profile legitimate workload workload syscalls  subset  profile miner detection healthy application terminate detrimental service production environment situation attacker cryptominer correspond proof algorithm syscalls likely encounter possibility wminer wnormal   scenario syscalls sub sequence differentiates miner healthy application sub sequence effectively extract machine algorithm precise classification model anomaly detection framework adversary random syscalls obfuscate malicious mining classifier ML model anomaly detection legitimate anomaly define syscalls sequence adversarial attack adversary manager mining signature syscalls simply introduce random syscalls workload affect machine inference counter adversarial attack important training randomize syscalls sequence mimic confusion obfuscation attack operation deployed ML continuously syscalls sub sequence cryptominers continuously update inference machine capable progressively algorithm task model remain intact counter adversary apply within framework ideally data training sample distribution rare data sample newly encounter benign minor application variance training environment application dynamic monitoring signal dependent syscalls emerge become highly frequent syscalls active become occasional disappear application syscalls remain steady circumstance data syscalls frame training maintain model detection accuracy detection update dynamically progressive algorithm instead discard model training model scratch syscalls syscalls frame update exist model pursue comparatively shorter training brand model scratch progressive inference accuracy training data remains preserve helpful application earlier behavior reader refer illustrate progressive synaptic intelligence paradigm cyber security attack classification conclusion automate pod anomaly detection setup demonstrate kubernetes cluster detect cryptomining application explainable ML model explainability aspect important administrator grasp rationale disruptive administrative decision pod removal cluster cryptomining algorithm launch anomalous pod cryptomining feature facilitate anomalous pod identification discrimination cpu intensive application mysql cassandra  etc explainable ML model implement syscall gram data feature syscalls frame gram achieve aggregate anomaly prediction accuracy percent comparative ML explainability model perform decision model precise achieve accuracy percent shap lime efficient lstm autoencoder amenable automate explanation extraction longer training convergence instability