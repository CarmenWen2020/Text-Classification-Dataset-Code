crowdsourcing utilize intelligence complex task gain considerable adoption recent however majority exist crowdsourcing rely central server weakness traditional trust model failure vulnerable distribute denial service DDoS sybil attack due malicious user involvement addition service fee crowdsourcing platform hinder development crowdsourcing address potential issue research substantial conceptualize blockchain decentralize framework crowdsourcing CrowdBC requester task worker without rely trust institution user privacy guaranteed transaction fee introduce architecture propose framework concrete scheme implement software prototype ethereum public network dataset feasibility usability scalability propose crowdsourcing introduction crowdsourcing gain considerable adoption coin jeff howe distribute model nowadays crowdsourcing web mobile development shirt numerous crowdsourcing application upwork amazon mechanical turk uber style significantly generally intelligence crowdsourcing consists role requester worker centralize crowdsourcing requester submit task challenge computer easy crowdsourcing worker interested task compete submit crowdsourcing requester usually solves task grant correspond worker reward freelancer marketplace upwork client requester deposit milestone payment escrow account client interview hire freelancer worker freelancer focus expertise compete winner obtain reward model traditional crowdsourcing however despite prosperity crowdsourcing weakness traditional trust model brings inevitable challenge traditional crowdsourcing vulnerable DDoS attack remote hijack  attack service unavailable   upwork presently service worker due DDoS attack majority crowdsourcing business centralize server suffers failure inherently april service outage emerge due hardware failure uber china passenger service user sensitive information email address phone task database crowdsourcing risk privacy disclosure data loss prevalent crowdsourcing freelancer report breach privacy uncover user identity contains IP address active account dummy account australian information commissioner  december fourth requester worker dispute crowdsourcing subjective arbitration behavior false reporting lastly crowdsourcing interested maximize benefit requester service increase user currently crowdsourcing demand slide service fee percent mention issue crowdsourcing encryption differential privacy DP data privacy reputation mechanism propose address false reporting rid behavior distribute architecture prevent failure bottleneck however majority research built traditional triangular structure crowdsourcing model suffer breakdown trust none exist issue simultaneously research motivate decentralize crowdsourcing reliability fairness security service fee propose blockchain decentralize framework crowdsourcing framework advantage increase user security service availability enhance flexibility crowdsourcing turing program lower therefore framework potential disrupt traditional model crowdsourcing nutshell specific contribution conceptualize blockchain decentralize framework crowdsourcing CrowdBC central accomplish crowdsourcing CrowdBC guarantee privacy user register without identity encrypt distribute storage identity deposit participation effectively thwart attack DDoS sybil false reporting attack moreover user costly service fee traditional crowdsourcing platform anymore amount transaction fee framework enhances flexibility crowdsourcing turing program depict complex crowdsourcing logic concrete scheme propose framework smart contract perform crowdsourcing task contains task task reward assignment etc introduce standard smart contract scheme user register contract  user summary contract usc requester worker relationship contract RWRC crowdsourcing functionality achieve task without rely central authority traditional useful feature evaluation task via smart contract subjective construction impactful useful implement propose scheme verify feasibility software prototype ethereum public network dataset usability scalability propose crowdsourcing furthermore illustrate discussion future improvement scheme remainder organize related preliminary blockchain smart contract model threat model security assumption technical challenge description propose framework concrete crowdsourcing scheme framework analyze security series demonstrate finally conclude discus future related research crowdsourcing become emerge trend explosive growth internet mobile device mainly review primary centralize crowdsourcing distribute crowdsourcing blockchain crowdsourcing centralize crowdsourcing crowdsourcing developed centralize crowdsourcing service worker selection incentive mechanism truth discovery centralize crowdsourcing upwork waze crowdsourcing platform requester efficiently hire worker obtain task traffic jam accident waze however user detailed information waze freelancer user information task data centralize platform suffer privacy leakage DDoS sybil attack issue failure propose auction mechanism eft dft propose reputation incentive mechanism tackle rid false reporting attack crowdsourcing traditional parity model scheme besides exist incentive mechanism rely crowdsourcing task reward risk  inherently distribute crowdsourcing exist research distribute crowdsourcing protocol distribute crowdsourcing delay tolerant network dtn author aim computation task collaborative achieve minimal makespan propose task allocation scheme utilize social relationship crowdsourcing concentrate load balance distribute model introduce asynchronous distribute task selection mobile crowdsensing focus task completion distribute actually centralize service consistent requirement crowdsourcing decentralize blockchain crowdsourcing propose  blockchain crowdsourcing application court processing  related approach detail crowdsourcing protocol blockchain crowdfunding specific crowdsourcing alternative protocol employ blockchain tackle issue transaction crowdsourcing addition research blockchain crowdsourcing gain considerable recently  gem mention limited specific application  court  whilst comparison conceptualize blockchain decentralize framework broader goal direction designer decentralize protocol crowdsourcing background blockchain bitcoin decentralize currency attract attention transaction file contains hash previous eventually hash chain blockchain essentially public immutable distribute ledger user compute resource compete transaction blockchain winner reward coin transaction fee blockchain technology direction reduce role  society easily associate blockchain financial sector bitcoin innovative potential blockchain application application micropayment scheme storage health blockchain technology transaction define data structure transaction consists input output digital signature valid coin transaction input unspent previous transaction transaction link structure merkle miner confirm transaction anymore consensus protocol consensus protocol aim miner append blockchain generally miner afford valid proof confirm miner challenge computational puzzle bitcoin consensus blockchain chain refers exist consensus protocol proof pow proof stake PoS network blockchain peer peer PP network distribute application architecture unlike traditional client server mode node PP network privilege without central coordination server stable host supplier consumer resource blockchain paradigm blockchain transaction machine information nonce account balance data express information physical etc update genesis transaction scheme focus smart contract execution transition description blockchain paradigm simplify transaction depicts smart contract execution transaction activate code execution smart contract valid transition via denote refers arbitrary computation blockchain arbitrary transaction smart contract smart contract refers blockchain propose nick  depicts complex logic program code implementation contract agreement essentially execute digital contract secure environment intervention verify network peer realize smart contract secure environment decentralize  programmable advent blockchain technology perfectly currently exist blockchain platform smart contract ethereum hyperledger smart contract without fraud downtime interference model model workflow blockchain crowdsourcing model formulate threat analyze technical challenge formulate notation within notation explanation decentralize crowdsourcing model exist role model propose framework requester worker  miner model CrowdBC requester identify task transfer task description program stimulate worker participate prevent unfair amount reward monetary penalty deposit  cannot redeem deadline worker identify community compete task reward worker tuple reliability    refers reputation  denotes worker task  submit category task evaluation worker deposit  blockchain thwart DDoS sybil attack upon evaluation assign correspond reward define submit worker CrowdBC client medium bitcoin core locally user personal computer agreement transaction CrowdBC miner mainly transaction valid proof reward transaction fee mining security underlie blockchain built miner miner participate mining scheme register credential obtain service       private user category task utilize  sends transaction blockchain category task java software development logo pre define program category category  authenticate worker reliability satisfies minimum task turing program blockchain agreement upon evaluation assign correspond reward threat model potential malicious requester worker specifically goal maximize profit define threat model illustrates potential threat malicious behavior malicious requester malicious requester aim useful without lose deposit false reporting attack essential achieve goal  evaluation worker contribute quality addition deny obtain besides requester deposit protocol benefit protocol malicious requester attempt fork chain malicious worker malicious worker attempt obtain reward without sufficient effort rid attack malicious requester benefit lock deposit protocol malicious worker fork chain evaluation task submit discourage requester participate crowdsourcing deny quality exist audit trust besides reputation expertise data vital role verify qualification task improve data task malicious miner malicious miner attempt earn virtual coin fork chain collude malicious requester worker normal execution program blockchain formalize security fully fraud resistant definition definition fully fraud resistant crowdsourcing fully fraud resistant none happens requester reward worker effective worker redeem deposit submit contribute quality security assumption majority honest security security crowdsourcing task CrowdBC related security blockchain requester worker mining assume attacker malicious requester worker miner cannot fundamental security blockchain namely attacker majority resource blockchain network majority miner honest network latency message synchronous honest miner assume exist miner crowdsourcing requester worker participate maintain miner percentage malicious miner fork chain advantage miner pow probability hash computation computation function parameter reflect hash honest miner denote  similarly  hash malicious miner malicious miner violate blockchain protocol withholding broadcasting network honest miner accept generate probability honest miner probability honest miner  denote bound probability  source secure transfer wallet traditional crowdsourcing reward exchange virtual coin blockchain coin obtain mining transfer others assume user secret securely posse transfer client wallet secure encryption algorithm assume encrypt leverage secure public encryption algorithm worker correspond requester public encrypt requester decrypt successfully secret specifically cipher text distribute database technical challenge traditional crowdsourcing relies centralize task essentially model blockchain technology promising trust issue multiple simply adopt blockchain technology crowdsourcing smart contract depict task crowdsourcing requester task task reward smart contract worker operating contract task worker requester chain however threat model requester worker benefit requester evaluate quality worker effort deny obtain worker arbiter worker effort submit sake task reward task submit digital currency transfer bitcoin complicate numerous malicious behavior discourage requester worker participate blockchain crowdsourcing therefore ensure fairness requester worker decentralize crowdsourcing challenge challenge utilize blockchain technology enhance crowdsourcing lack efficient scheme ensure fairness requester worker fully decentralize framework blockchain infinite extend ledger continuously improper data blockchain however crowdsourcing task data image tag task image label impossible data data message synchronization disk mining node bitcoin occupy 6G disk synchronize network crowdsourcing data blockchain crowdsourcing challenge challenge perform crowdsourcing atop blockchain technology limited data storage CrowdBC blockchain decentralize framework crowdsourcing overview CrowdBC combine advantage blockchain formalize decentralize crowdsourcing framework CrowdBC allows user crowdsourcing logic encrypt data foremost  user interface logic locally user personal computer without central server importantly  allows worker requester interact underlie blockchain requester worker agreement blockchain achieve eventual consensus task operation crowdsourcing registration task task layer architecture inspire CrowdBC layer application layer blockchain layer storage layer layer application blockchain layer logic layer storage layer data worker query compete task requester application layer blockchain layer task input achieve consensus worker requester exist data requester worker limited data storage capacity blockchain logic layer data layer separation improve CrowdBC data storage significantly task metadata data owner hash pointer blockchain layer raw data storage layer user trust data data layer verify integrity authenticity data logic layer architecture CrowdBC underlie blockchain without loss generality blockchain adopt execution arbitrary program turing program smart contract assume blockchain platform compiler compile program compiler scope depict user interface module client worker requester interact program blockchain machine construction framework construct machine depict task processing depicts task cycle global status task task trigger user valid input application layer task transfer task generates machine global task update successfully exist pending  claimed evaluate cancel user query task machine model task CrowdBC layer architecture CrowdBC contains logic data logic consists application layer blockchain layer user management task management requester worker data responsible task data storage mainly refers storage layer application layer application layer mainly refers  user entrance crowdsourcing task contains module user manager UM task manager TM program compiler client correctly without rely central server exist fail node service crowdsourcing affected CrowdBC improve security crowdsourcing clearly introduce module function respectively UM registration user information management user register crowdsourcing task identity register public address meanwhile identification related default reputation upon worker behavior cannot update user personal information refers mainly description client creates program blockchain module program compiler built convert program executable blockchain layer program blockchain user register successfully task TM task management module crowdsourcing task depict program blockchain task task submission reward assignment remarkably satisfactory requester allows qualify worker minimum reputation task detailed description decentralize crowdsourcing protocol blockchain layer blockchain layer tier serf purpose consensus program machine program blockchain layer compile blockchain confirm miner propose framework defines logic transition program via cryptographically secure transaction machine valid input application layer trigger task blockchain layer ultimately generally blockchain layer data otherwise network synchronization disk reduce data blockchain metadata owner stamp pointer data hash etc actual storage data detail task attachment data blockchain distribute database data pointer consists query blockchain data storage layer besides hash data blockchain guarantee data storage layer data storage capacity framework increase obviously storage layer storage layer tier mainly actual data task adopt storage framework instead multiple storage provider coexist IPFS distribute hashtable  data private owner user data storage layer authenticity integrity data data hash digital signature blockchain layer addition worker submits requester public encrypt requester decrypt ensure data security prevent data leak irrelevant user task data outside blockchain CrowdBC allows arbitrary satisfies actual demand crowdsourcing crowdsourcing CrowdBC framework  framework consists requester worker register CrowdBC  transfer user information input program transaction blockchain register user assign public update program transaction confirm miner related depicts data status blockchain permanently perform requester task requester reward advance payment deposit blockchain meanwhile worker requester ensure qualify worker ultimately task evaluation function evaluate miner blockchain instead requester crowdsourcing register worker task interact  worker receives task deposit coin reputation ensure quality task worker submit task deadline task encrypt requester public distribute storage meanwhile hash pointer blockchain requester pointer decrypt private collection reward assignment task evaluation worker requester  publishing transaction blockchain reward automatically assign worker accord evaluation reward obtain related effort effort performance reward improve reputation concrete implementation CrowdBC crowdsourcing smart contract concrete scheme CrowdBC blockchain smart contract adopt denote program smart contract implement smart contract user register contract user summary contract requester worker relationship contract contract structure relationship structure smart contract CrowdBC data reference basically user information information detailed information information contains address global  contract latter user profile expertise reputation task usc update task processing usc simultaneously user successfully register  besides agreement RWRC depicts constraint task processing specially exist important algorithm coin processing algorithm  reputation update algorithm  evaluation algorithm  algorithm lock deposit blockchain deadline assign reward worker upon algorithm algorithm manage worker reputation reputation expertise automatically update task CrowdBC evaluates blockchain automatically execute smart contract respect algorithm assume exists trustful truth discovery algorithm evaluate submit define function  program exist emerge technology  obfuscation homomorphic encryption appropriate evaluation mechanism decentralize crowdsourcing framework important issue extend future reward assignment reliability update rely output  simplicity output effort effort traditional crowdsourcing focus detect cheat malicious behavior worker submit contrast CrowdBC selects trustworthy worker reputation reliability smart contract effectively improve quality achieve goal combine expertise aware reputation worker RWRC worker associate attribute contains crowdsourcing task category  reliability  category  task calculate  verify worker somehow topic expert category user register contract  upon registration requester worker submit identity assign public private global  contract user address generate hash public address contains information user user privacy user traditional crowdsourcing meanwhile usc contract correspond register user mention user pseudonym transaction however worker register identity authenticate certify institution increase probability task CrowdBC besides  contract register identity recognize mapping user update update contract transaction fee paid publishes transaction fee miner confirm transaction CrowdBC persistently user summary contract usc contract personal statistic information evaluation requester worker accord behavior establish multi metric evaluate worker requester usc sake reduce subjective judgment profile reputation task description activity profile mainly describes user information profession etc specially user register identity profile contains digital signature certificate authority user authenticate identity public metric user register update reputation important parameter initialize default update completion task framework reputation incentive mechanism described reputation reflect user performance task description refers summary information task statistic task evaluation task activity describes activity extent user proportion task delay  activity depicts task worth metric cannot easily automatically update related task worker uncompleted task query requester task usc task usc status task pending  illustrate accept qualify worker task verify task signature requester public usc contains task address user previous task requester worker relationship contract requester worker relationship contract RWRC requester worker relationship contract depicts agreement requester worker task task evaluation reward assignment requester task publishes task information desc  coin    requester task transaction private worker correspond public task RWRC contains validation function  worker reputation reliability satisfy minimum limited generally minimum reputation reliability avoid worker meanwhile requester defines fix worker pool  worker address worker pool correspond worker worker satisfies validation function address  worker qualify update RWRC publishing blockchain task successfully RWRC contract cannot worker  exceed requester cannot assign task worker smart contract publish network miner verify mention data blockchain due limited storage task metadata blockchain RWRC detail information distribute storage layer moreover prevent requester behaving false reporting worker behaving rid pursuit maximization lock deposit protocol construct depict deposit processing crowdsourcing task unique feature framework guarantee fairness user worker submits effective confirm miner deposit return otherwise coin deduct requester worker reputation reduce traditional model evaluate requester crowdsourcing CrowdBC evaluate miner evaluation function  RWRC requester miner verify without detail data storage allocate RWRC storage layer task attachment correspond hash blockchain guarantee unaltered source data privacy worker requester public encrypt requester decrypt verify integrity data blockchain layer pointer worker submits successfully RWRC requester lock deposit protocol crowdsourcing requester worker obtain atop blockchain without rely central crowdsourcing platform prevent false reporting rid attack participant lock deposit guarantee regulate behavior deposit fund reputation worker assign designate entity accord pre define smart contract achieve lock blockchain deposit protocol protocol enable payer exchange parity payee lock coin guarantee blockchain prevent  attack cannot redeem deposit deadline secret however protocol cannot directly apply crowdsourcing scenario worker explicit requester deposit assume payee honest perform malicious behavior CrowdBC inspire illustrate RR RR refund reward lock deposit protocol crowdsourcing adversary punish monetary reputation penalty abort task crowdsourcing protocol pre define RR honest compensate adversary deposit RR allows requester coin worker verify submit worker satisfy pre define requirement  define RR scheme tuple phase lock deposit protocol crowdsourcing reputation management CrowdBC incentive mechanism user behavior requester demand task mainly focus worker reputation worker assign reputation important reference requester worker reputation reflect behavior task otherwise limited participate task unlike traditional crowdsourcing reputation management implement define protocol implement decentralize blockchain worker tag reputation integer finite   max average reputation worker update depends outcome  RWRC miner confirms positive evaluation worker reputation increase blockchain worker cannot update reputation miner confirm transaction refer output evaluation function effort action effort action reputation compute min    sourcewhere denotes threshold social strategy social norm worker behavior worker reputation receives feedback evaluation function reputation cannot task task positive feedback reputation propose decentralize crowdsourcing protocol formalize decentralize crowdsourcing protocol adopt notational reader understand construction without understand precise detail formal model consists algorithm register       user interact blockchain  clearer elaborate contract CrowdBC crowdsourcing CrowdBC smart contract update register requester worker register CrowdBC identity mainly refer public private public address via  contract       worker initial reputation average reputation worker  update contract transaction confirm blockchain miner verify effectiveness transaction worker requester participate blockchain miner contribute resource achieve trustworthy chain model confirmation transaction execution define blockchain  BC  previous BC BC  txc  timestamp    address miner txc contract confirm user ensure contract  blockchain algorithm task input requester task description task reward coin   limited worker  confirm  maximum worker usc address  output RWRC contract  validation function  update  unregistered register goto   coin     deposit reward blockchain fail goto       coin           return    registration requester task CrowdBC sid    coin TI  task limited minimum correspond worker task worth data affect participant refers worker task avoid denial payment requester specify requester deposit RR algorithm illustrates implementation task  worker uncompleted task requester usc contract receives task satisfies requester function    task worker    besides sake worker  worker deposit coin reputation task chooses coin coin deposit function   coin   otherwise reputation reduce  within task task worker submits worker  ensure correctness task reward assignment algorithm illustrates implementation task algorithm task input RWRC contract  worker worker deposit coin coin  worker deposit reputation  worker  output update RWRC contract  usc contract  unregistered register goto     satisfy goto   task cannot accepted anymore goto coin    coin    deposit reward blockchain succeed       deposit reputation blockchain succeed deposit blockchain fail goto  digital signature             coin  TI coin  TI redeem    return    worker submit requester completes task algorithm task encrypt requester public  worker private  distribute database IPFS hash pointer blockchain requester pointer decrypt private algorithm submit input RWRC contract  task worker requester output pointer  hash   cannot submit timeout goto leftarrow digital signature mathsf encrypt leftarrow encrypt lbrace rbrace hash leftarrow mathsf encrypt  leftarrow mathsf  encrypt TI submit leftarrow RWRC leftarrow lbrace hash  TI submit rbrace mathsf  RWRC addr usc mathsf  RWRC addr usc return  hash  submit worker demand task evaluation reward payment requester  assume evaluation evaluation function miner blockchain confirm algorithm task reward paid worker quality contingent payment performance reward evaluation automatically synchronize worker usc contract update reputation security analysis CrowdBC fulfills security discus fully fraud resilient majority honest security assumption discus fully fraud resilient CrowdBC theorem assume geq delta delta probability CrowdBC violates fully fraud resilient parameter omega delta proof CrowdBC fully fraud resilient happens malicious requester malicious worker succeed building fork chain finally accepted honest miner define malicious chain requester worker violate fully fraud resilient normal chain requester worker probability diverge omega delta probability malicious miner delta compensate omega delta ast leq delta honest miner adversary chain prime geq malicious chain accepted honest miner malicious miner honest miner ast prime honest become orphan denote honest miner denote adversary ast prime prime ast geq delta accord chernoff bound align leq delta cdot delta leq omega delta delta omega delta nonumber geq delta cdot delta leq omega delta delta omega delta align SourceRight click MathML additional feature algorithm evaluate task reward input RWRC contract RWRC requester worker social strategy output update RWRC contract RWRC usc contract usc usc reward related worker  leftarrow coin lambda TI submit leq TI deadline mathsf verify hash signature fail  leftarrow mathsf   hash  leftarrow beta rep  geq  equiv beta leftarrow min lbrace beta max  rbrace  leftarrow coin  geq  equiv beta leftarrow  rep  leftarrow coin  equiv  equiv beta leftarrow  leftarrow coin  beta leftarrow   leftarrow coin  leftarrow  leftarrow beta leftarrow beta rep  leftarrow mathsf   mathsf  usc beta mathsf  RWRC addr usc mathsf  RWRC addr usc mathsf  cdot return RWRC usc usc  overwhelm probability align geq delta cdot delta geq delta delta cdot delta nonumber delta delta cdot delta delta align sourcewhich contradicts assumption malicious miner obtain maintain advantage however whenever honest miner honest miner consent tilde denote adversary delta tilde denote honest miner chernoff bound align tilde geq delta delta cdot leq omega delta nonumber tilde leq delta cdot leq omega delta align sourcewith overwhelm probability align tilde geq delta cdot geq delta delta cdot nonumber delta delta cdot tilde align  conclude probability exponentially security false reporting rid attack CrowdBC evaluate automatically pre define smart contract assumption majority miner honest malicious requester cannot tamper smart contract launch false reporting attack addition malicious requester limited probability fork chain respect rid attack worker deposit RR task automatically assign reward accord evaluation function contribute quality reward failure  failure obvious blockchain decentralize architecture geq miner crowdsourcing lfloor rfloor miner honest available CrowdBC majority honest security assumption accord peer peer architecture remains miner requester worker access crowdsourcing service normally CrowdBC exempt  pseudonymity unlike traditional crowdsourcing identity registration phase risk user sensitive information leakage CrowdBC utilizes pseudonymous bitcoin address denote requester worker enables privacy preserve without submit identity crowdsourcing task trust requester worker directly crowdsourcing task data without intervention CrowdBC task data distribute storage utilizes lock deposit protocol monetary penalty ensure fairness requester worker user authorize task tamper resistant smart contract cannot refute behavior DDoS sybil attack resistant CrowdBC deposit requester worker thwart DDoS sybil attack addition user transaction fee miner maintain blockchain network therefore malicious attacker launch attack deposit mechanism threat attacker coin launch attack concern currently trustworthy worker selection reputation expertise statistic important factor worker task reputation reliability probability task CrowdBC update worker really completes crowdsourcing task RWRC contract usc contract cannot worker mathsf  cdot function usc invoked RWRC contract RWRC contract deposit transaction fee therefore malicious worker brush reputation reliability anticipate requester worker reputation reliability worker honestly  evaluation analysis primary goal CrowdBC secure decentralize crowdsourcing implement software prototype ethereum public network propose scheme depict complex crowdsourcing smart contract evaluate accuracy CrowdBC worker tag image label multi label task extension arbitrary task evaluation function evaluate accordingly CrowdBC implement official ethereum public network  program solidity java javascript roughly code implement smart contract solidity solidity orient program smart contract ethereum besides CrowdBC interacts ethereum  lightweight library java application ethereum network construct   mention register user task contract task information input mathsf CrowdBC client developed javascript transform contract compile  reduce storage requirement local IPFS proxy image IPFS peer IPFS currently complexity evaluate utility security performance CrowdBC conduct image tag task cifar dataset consists image airplane automobile cifar dataset contains training batch batch batch image randomly image training batch recognize image furthermore worker requester register register user assign eth coin task worker randomly image training batch identify task task task task task task encrypt requester public data storage malicious user decrypt evaluation function majority voting verify belong image moreover price average price wei wei  eth eth compute ethereum formula eth price deployed  usc RWRC contract  average mining  consist transaction average transaction confirmation execution mathsf CrowdBC client task task submission respectively namely transaction confirm sim complexity task crowdsourcing  transaction fee contract transaction confirm transaction pool average data upload execution mathsf CrowdBC client  task submission positive correlation data however data submission upload almost addition data multiple node simultaneously IPFS data task exist task relevant upload data specify within IPFS tag image accuracy image tag worker image task average accuracy percent image error image really unclear utility CrowdBC besides miner offline affect crowdsourcing user normally task demonstrates feature decentralization framework task average transaction fee eth per image accord amt reward policy paid image tag identify task worth february eth price acceptable eth price eth accord eth price unpractical amt platform eth price february image quantity cheaper transaction fee CrowdBC image increase amt percent therefore conclude CrowdBC applicable task reward comparison growth rate CrowdBC amt comparison growth rate CrowdBC amt sum conduct crowdsourcing practical CrowdBC illustrates blockchain framework feasible however realize public blockchain CrowdBC hyperledger blockchain fabric future framework consumption data upload IPFS conclusion future CrowdBC blockchain decentralize framework crowdsourcing analyze traditional centralize crowdsourcing suffers privacy disclosure failure service fee formalize CrowdBC handle centralize meanwhile enhance flexibility crowdsourcing smart contract depict complex crowdsourcing logic series algorithm smart contract propose construct concrete scheme framework besides evaluate approach ethereum implement component decentralize crowdsourcing service stage blockchain technology identify meaningful future implement crowdsourcing currently exist complex scene handle efficient evaluation mechanism crucial CrowdBC resume requester evaluation function task however requester efficient evaluation function become