federate secure multi machine ML data maintain owner device update model aggregate secure protocol however assumes trust centralize infrastructure coordination client trust central service byproduct client data addition malicious client harm performance model poison attack response propose biscotti fully decentralize peer peer PP approach multi ML blockchain cryptographic primitive coordinate privacy preserve ML peer client evaluation demonstrates biscotti scalable fault tolerant defends attack biscotti privacy individual client update maintain performance global model percent adversary requirement machine ML application collection massive amount training data data frequently distribute hospital device iot deployment however training ML model multi user potentially sensitive information centralize service problematic user willing trust pharmaceutical compete drug discovery rarely data internet user increasingly aware data retain data avoid directly sensitive data federate prominent secure multi ML client model trust aggregator without reveal underlie data computation introduces subtle threat client previously passive data contributor actively involve training privacy security challenge multi ML prior demonstrate adversary attack model poison attack adversary contributes adversarial update model parameter adversary attack privacy client federate information leakage attack adversary honest data provider attempt infer sensitive training data target client observation target model update poison information leakage attack individually defend prior centralize anomaly detection differential privacy secure aggregation knowledge private decentralize solves threat concurrently exist furthermore approach inapplicable decentralize context lack trust central authority focus decentralize PP enables data ownership model distribute ML ML consensus consistency converge traditional consensus protocol byzantine fault tolerant bft protocol overly restrictive machine workload distribute ledger blockchains emerge appropriate facilitate private verifiable source computation publicly verifiable proof eventual consistency ledger consensus blockchains decentralize multi setting currency management archival data storage financial audit privacy preserve computation iot computation federate relies trust aggregator unsuitable peer peer PP ML setting propose biscotti decentralize public PP privacy preserve multi ML blockchain ledger contrast blockchain layer ML application propose proof federation PoF layer blockchain consensus protocol combine defense federate applicable decentralize PP setting biscotti coordinate ML training peer weigh stake PoF inspire prior biscotti consistent hash PoF combination verifiable random function  role peer coordinate privacy security model update PoF prevents collude peer overtake without sufficient stake ownership biscotti primary contribution adapt prior technique coherent secure private multi machine highly distribute PP setting biscotti prevents peer poison model multi krum defense privacy differentially private shamir secret secure aggregation evaluate biscotti azure performance scalability churn tolerance ability withstand attack biscotti mnist softmax model peer image dataset withstand percent adversarial peer addition biscotti resilient information leakage attack knowledge client sgd update biscotti resilient poison attack prior biscotti fault tolerant cop node churn model training converges node churn challenge contribution challenge PP multi ML biscotti resolve challenge sybil attack consistent hash vrf PoF PP adversary collude generate alias increase influence sybil attack biscotti consistent hash protocol hash verifiable random function vrf appendix computer society digital library http doi org ezproxy auckland tpds subset peer responsible stage PoF protocol update validate update securely aggregate update mitigate sybils PoF selects peer proportional stake peer stake reputation peer acquires positively contribute model ensures adversary cannot increase influence multiple peer without improve model evaluate security vrf mechanism PoF appendix available online supplemental poison attack update validation multi krum multi ML peer posse disjoint private subset training data mention adversary exploit private PP stealthily execute poison attack multi setting assume baseline validation model available peer biscotti validates sgd update evaluate respect update submit peer biscotti validates sgd update byzantine tolerant aggregation scheme multi krum multi krum algorithm biscotti others median trim bulyan although multi krum related aggregation scheme poison attack effective attack biscotti generally aggregation scheme operates model update multi krum reject model update heavily direction majority update implementation multi krum described committee validation peer majority vote member committee multi krum remove anomalous update multi krum guarantee convergence byzantine adversary client demonstrate multi krum biscotti handle poisonous update percent malicious client information leakage attack vrf verifier peer differentially private update pre commit peer model update verification adversary perform information leakage attack recover detail victim training data appendix available online supplemental background biscotti prevents attack update verification hash verifier ensure malicious peer cannot deterministically verify victim gradient peer differentially private update verifier peer gradient verifier pre commit differentially private update mask peer gradient individual peer influence model update appendix available online supplemental detail verify model update verifier peer biscotti verify update others without directly counterpart utility loss differential privacy secure update aggregation cryptographic commitment blockchain ledger model update allows audit transparency counter goal privacy preserve multi ML ledger trivially leak information sgd update directly differentially private update verification technique preserve data privacy biscotti another technique secure aggregation biscotti update individual peer aggregate obfuscates peer contribution biscotti verifiable secret scheme aggregate update individual update remains hidden cryptographic commitment appendix available online supplemental background however secure aggregation differentially private update update choice privacy utility tradeoff model aggregate differentially private update ledger model utility illustrate experimentally appendix available online supplemental aggregate model update utility guarantee performance federate furthermore evaluate  information leakage attack appendix available online supplemental probability successful attack biscotti negligible assumption threat model federate biscotti assumes public ML peer anytime biscotti assumes user willing collaborate training ML model unwilling data assumption proof federation peer biscotti proof federation PoF consensus model training PoF consensus protocol secure private federate recently propose blockchain consensus mechanism proof stake PoS consensus PoS delegate consensus responsibility subset peer assign proportionally stake appendix available online supplemental background cryptocurrencies stake peer refers amount peer PoS relies assumption subset peer significant stake subvert biscotti PoF define stake peer contribution peer acquire stake beneficial model update facilitate consensus stake peer  training proportional contribution model assume stake ownership peer publicly available blockchain addition assume percent stake honest properly bootstrapped initial stake distribution derive online data marketplace reputation compete agency auxiliary information social network blockchain topology peer subset peer topology allows flood dissemination eventually peer random mesh topology flood dissemination bitcoin peer rejoin offline training recreate blockchain peer machine assume information PP training disseminate peer model hyperparameters optimization algorithm objective non adversarial peer local datasets private peer sample data compute model update assume uniformly independently ensures multi krum accurate biscotti assume stochastic gradient descent sgd optimization algorithm sgd algorithm variety model neural network attacker assumption adversarial peer perform poison attack malicious update information leakage attack target peer update assume adversary multiple peer sybil attack percent stake although adversary increase peer assume adversary cannot artificially increase stake valid update pas multi krum adversary perform poison attack assume goal harm performance global model defense relies filter malicious update sufficiently honest client global model towards sub optimal objective purpose limit adversary poison attack data  model misclassify poison attack leverage unused model topology backdoor attack attack gradient ascent adaptive attack knowledge poison defense however biscotti compatible aggregation approach sgd update future approach handle backdoor gradient ascent attack adversary perform information leakage attack assume aim victim local dataset specifically privacy protects anonymization user dataset due vulnerability secure aggregation information leakage attack information attack privacy attempt entire target biscotti biscotti goal converge optimal global model model without adversary federate prevent poison verify peer model update peer training data private prevent information leakage attack prevent collude peer gain influence without acquire sufficient stake biscotti goal custom blockchain overview peer biscotti collaboratively global model distribute ledger iteration sgd ledger contains global model iteration overview biscotti illustration happens  iteration generate iteration biscotti algorithm local sgd generation iteration peer locally compute sgd update sgd update private peer mask update differentially private peer unique client vrf masked update validate verification committee defend poison member verification committee commitment peer unmasked update multi krum majority committee update update shamir secret aggregation committee aggregation committee secure protocol aggregate unmasked update peer contribute update along peer chosen verification aggregation committee additional stake aggregate update global model newly disseminate peer append ledger update global model stake peer bootstrap training initialize training biscotti peer initialize training information genesis assume trust authority facilitates bootstrap training publicly distribute genesis peer authority trust entrust individual sgd update peer potentially leak private information peer data peer obtains information genesis initial model iteration public PK commitment sgd update appendix available online supplemental public pki peer verify signature verification pre commitment differentially private sgd iteration peer appendix available online supplemental initial distribution stake peer stake update function executes append content iteration compute  global model iteration verifier iteration peer commit structure contains commit peer contains potential iteration commit iteration peer execute vrf request  peer blockchain distribute ledger construct append chain structure disseminate gossip protocol pointer previous cryptographic hash content biscotti contains addition previous hash pointer aggregate sgd update multiple peer snapshot global model iteration newly append ledger aggregate update δwi multiple peer verify aggregate honestly compute individual update however individually leak information individual private training data polynomial commitment polynomial commitment sgd update elliptic curve appendix available online supplemental detail commitment peer update comm δwi privacy verifiability aggregate commitment privacy hiding individual update homomorphically combine verify update global model aggregator δwi compute honestly equality commit update aggregate sum comm δwi  δwi SourceRight click MathML additional feature training specify iteration peer extract global model stake role selection iteration biscotti consistent hash peer stake designates role  verifier aggregator peer PoF ensures influence peer bound stake adversary cannot trivially increase influence sybils peer assign multiple role iteration cannot verifier aggregator verification aggregation committee peer committee unique peer initial sha hash repeatedly hash hash mapped onto hash portion proportionally assign peer stake hash verifier aggregator committee obtain stake algorand peer probability lottery proportional stake adversary cannot predict future cannot speculate output consistent hash strategically perform attack unlike verification aggregation committee peer additional privacy peer unique committee via consistent hash initial hash hash compute random globally verifiable peer biscotti peer computes hash execute secret ski sha hash verifiable random function vrf appendix available online supplemental virtue peer secret hash compute unique peer distinct committee peer vrf hash accompany proof combine peer public pki peer committee peer iteration peer consistent hash protocol aggregator verifier peer verification aggregation committee contribute update peer aggregator verifier computes committee obtains hide update protocol protocol prevent information leakage attack peer differential privacy hide update verification sample normal distribution ensures differentially private appendix available online supplemental formalism pre commit thwart poison attacker maliciously protocol execute poison information leakage attack peer poisonous update   update resemble honest update  honest update verification poisonous update  apply model remove aggregate information leakage attack peer verifier collude victim peer peer commit zero hide gradient victim peer sends gradient verifier perform information leakage attack client gradient reconstruct training data prevent attack biscotti peer pre commits vector future iteration genesis iteration private vrf peer victim secret adversary cannot pre specific verification victim cannot pre peer committee malicious analyze probability appendix available online supplemental probability information leakage negligible sufficient peer protocol description ML workload specific iteration peer generates vector commits vector ledger peer contribute update iteration vrf contact peer request vector pre commit genesis comm peer verifier vrf verifier peer mask update submits verifier masked update commitment commitment unmasked update submits vrf proof  verifier source peer vrf verification protocol verifier peer multi krum update filter malicious update accept majority update verifier receives peer masked sgd update δwi  commitment sgd update comm δwi commitment comm comm comm vrf proof confirm identity peer verifier receives masked update another peer confirm masked sgd update consistent commitment unmasked update homomorphic commitment masked update legitimate equality comm δwi  comm δwi   source verifier receives sufficiently update proceeds update multi krum peer verifier calculates sum euclidean distance update closest update δwi    sourcewhere denotes   belongs closest update δwi  peer reject verifier comm δwi public accepted update prevent malicious verifier accept update  stage peer obtain signature majority verifier update accepted disseminate aggregation aggregation protocol peer sufficient signature verification stage submit sgd update aggregation global model update equation sgd appendix available online supplemental  SourceRight click MathML additional feature δwi verify sgd update peer global model iteration aggregation protocol enables aggregator predetermine consistent hash compute  without individual update biscotti technique preserve privacy individual update aggregator participate honestly aggregation phase guarantee consistent hash selects majority honest aggregator likely majority stake honest biscotti achieves guarantee polynomial commitment described appendix available online supplemental verifiable secret aggregation individual update detail aggregation protocol appendix available online supplemental blockchain consensus subset consistent hash globally observable peer rely sha hash chain ledger fork rarely biscotti update ledger iteration verification aggregation committee aggregator fork ledger frequently bitcoin peer observes gossip protocol verify computation perform consistent hash protocol verify signature designate verifier aggregator biscotti verification aggregation occurs specify duration update successfully propagate biscotti append stale update model compete commit ledger synchronous sgd model acceptable ML workload tolerant bound asynchrony however stale update leveraged future iteration rate decayed optimization future implementation implement biscotti python release source project handle networking distribute aspect pytorch generate sgd update training building purpose api pytorch biscotti model optimize sgd python library interface python python incompatible python limited python implementation   library implement cryptographic  implement vrf function  implement commitment scheme public private mechanism bootstrap client commitment public initial genesis curve api  generate commitment public basis aggregation protocol verifier signature signing update schnorr signature scheme instead ECDSA multiple verifier schnorr signature aggregate signature therefore remains constant verifier grows evaluation goal evaluation biscotti prototype demonstrate biscotti robust poison attack biscotti protects privacy individual client data biscotti scalable fault tolerant ML model distribute deployed biscotti across azure virtual machine cpu core GB ram deployed peer vms VM across location central india japan australia western europe execute iteration error global model evaluate biscotti defense mechanism information leakage poison attack federate prior effectiveness various attack scenario biscotti parameter evaluate performance implication isolate specific component biscotti across committee deployed biscotti parameter unless otherwise default parameter unless otherwise evaluate biscotti logistic regression softmax classifier evaluate logistic regression credit fraud dataset individual financial personal information predict default credit payment softmax classifier contains layer neural network binary entropy loss evaluate mnist dataset task involves predict digit image purpose pytorch api allows biscotti model arbitrary complexity optimize sgd structure mnist credit datasets training respectively fold validation training training parameter model credit logistic regression model batch rate momentum mnist softmax model batch rate momentum mnist credit model separately respectively training dataset equally peer unless otherwise client posse training mnist credit dataset detail datasets local training model credit mnist datasets accuracy percent respectively dataset model dataset model tolerate poison attack evaluate biscotti performance label flip poison attack investigate parameter setting biscotti successfully defend poison attack evaluate performs attack percent malicious node federate baseline biscotti peer verification committee sufficient sample update multi krum evaluate percentage update multi krum poison attack rate mnist evaluate multi krum effectiveness ensure uniformity eliminate latency collection update verifier update peer assign committee randomly sample specify update addition ensure verifier deterministically sample update hash random allows investigate multi krum performs decentralize ML biscotti unlike multi krum update client multi krum evaluate attack define attack rate target label incorrectly predict attack rate specifies successful attack zero indicates unsuccessful execution attack rate biscotti attack poisoner although theoretical guarantee ensures biscotti withstand poison attack percent poisoner biscotti performs percent poisoner beyond percent multi krum unable prevent poison attack impact model performance execution multi krum impact privacy parameter sample remove anomaly detail impact parameter multi krum poison  appendix available online supplemental biscotti performance mnist dataset poisoner percent execution attack rate maximum biscotti performance mnist dataset poisoner percent execution attack rate maximum biscotti versus federate baseline deployed biscotti federate poison attack training credit mnist datasets parameter biscotti sample percent update privacy budget introduce percent peer malicious dataset credit dataset label default non default mnist peer label error federate datasets poison federate deployment struggle converge contrast biscotti performs baseline poison federate deployment federate biscotti error  dataset percent poisoner federate biscotti error mnist dataset percent poisoner biscotti iteration converge poison federate convergence biscotti verification committee peer allows poison peer majority committee frequently accept update fellow malicious peer biscotti finally converges honest peer gain stake thereby reduce influence malicious peer constant stake update function stake honest client increase percent demonstrate committee convergence attack mnist dataset verification aggregation committee peer analytically protection adversary percent stake appendix available online supplemental peer verification aggregation committee contribute update node cannot generate percent update multi krum therefore increase node biscotti verification aggregation committee converges iteration  federate federate biscotti error mnist dataset node percent poisoner verification aggregation committee federate biscotti error mnist dataset node percent poisoner verification aggregation committee performance scalability fault tolerance evaluate overhead stage biscotti investigate peer increase biscotti performance committee performance federate finally evaluate client churn biscotti convergence performance overhead biscotti deployed biscotti peer training mnist softmax model capture amount spent stage algorithm client verification via multi krum signature collection secure aggregation sgd update average per iteration stage deployment node committee constant default breakdown spent mechanism biscotti deployment peer stage almost constant peer biscotti spends aggregation phase aggregator secret accepted update aggregate generate phase involves member committee verification stage involves predefined percentage percent update multi krum asynchronous manner node per iteration fairly constant node increase committee biscotti evaluate biscotti performance  verifier aggregator deploy biscotti azure mnist dataset fix peer  sgd update verifier verification committee aggregator secure aggregation perform isolation committee plot average per iteration execution average amount per iteration increase  verifier aggregator increase verifier aggregator increase per iteration iteration increase slightly committee additional peer contact increase aggregator overhead secret exchange peer recover aggregate coordination peer lastly verifier frequent timeouts aggregation stage verifier update update aggregator update initiate aggregate recovery increase verifier intersection update accepted majority verifier frequently verifier multi krum update hence aggregator update timeout timeout constant verifier overhead increase significantly increase verifier however decrease verifier overhead decrease update aggregator coordination baseline performance biscotti federate baseline execution  verifier aggregator analytically committee guarantee adversary percent stake unmask update appendix available online supplemental aggregation stage appendix available online supplemental committee ensure convergence poison attack percent node mnist dataset partition honest peer deployed azure vms VM host peer peer collaborate training mnist softmax classifier iteration biscotti federate approach global optimum ensure comparison update model federate update percent node random biscotti percent verify update convergence iteration respectively deployment biscotti longer federate versus achieves model performance percent accuracy iteration convergence biscotti federate baseline training mnist model node convergence biscotti federate baseline training mnist model node convergence biscotti federate baseline iteration training mnist model node convergence biscotti federate baseline iteration training mnist model node evaluate biscotti increase dataset model parameter appendix available online supplemental dataset increase mnist dataset training respectively replicate data available node despite increase dataset biscotti overhead increase model parameter model parameter fail biscotti model tune timeouts reduce communication overhead training node churn feature biscotti PP resilient node churn node failure failure biscotti node prevent converge evaluate biscotti resilience peer churn perform credit deployment peer fail peer random specify rate specify interval peer chosen randomly interval peer network maintain constant peer converge churn rate verifier aggregator fails biscotti default iteration timeout harm convergence introduce variance execution churn rate increase node converge likely minimum update setup churn biscotti progress towards global objective biscotti resilient churn rate node per node node fail impact churn model performance churn inject fail random node pre rate limitation future multi krum limitation multi krum effective honest sample decentralize node churn addition multi krum reject update peer non iid data peer posse model issue partition data uniformly however biscotti compatible sgd aggregation approach earlier version version RONI validate peer update biscotti currently model parameter due communication overhead previous federate address reduce model update restrict parameter compress model update extensive research outside federate training compact efficient neural network technique quantization network prune knowledge distillation resource constrain setting another strategy increase scalability involves improve communication efficiency achieve transfer restrict parameter partition rearrange tensor update application technique biscotti future leakage aggregate model update ledger biscotti vulnerable attack exploit privacy leakage model apart differential privacy attack mitigate regularization dropout stake limitation client stake significant role  verifier aggregator assume stake holder subvert accrue stake participate stake monetary reward training however malicious client honest accrue stake finally switch maliciously subvert related secure ML   alternative technique multi krum defend poison  propose model average cluster subset important feature detect anomaly  robust pca detector attacker anomaly detection model defense trim RONI filter poison data centralize training impact performance dataset trim model subset sample random identifies training sample outlier error fitting model sample threshold RONI model without data reject degrades performance classifier recent demonstrate performance robust aggregation scheme median trim defense federate however technique manipulate adversary finally employ data provenance poison attack training data remove information anomalous source poison attack apart label flip attack handle biscotti gradient ascent technique another popular generate poison sample sample optimization backdoor attack classifier  manipulate image pixel backdoor defend training attack privacy attack demonstrate membership inference attack shadow model training learns victim data model easy launch attack addition model inversion attack propose invert image model however attack privacy biscotti effective user privacy significant chunk data facial recognition privacy preserve ML although variety recent propose blockchain distribute biscotti address unique exist prior relies trust central authority address poison attack handle privacy attack actually layer blockchain machine application built exist blockchain ethereum summarize previous combine blockchains ML appendix available online supplemental rely blockchain multi computation trust execution environment encrypt model parameter training data perform multi ML biscotti rely technique privacy conclusion emergence multi ML workload distribute ledger scalable consensus rapid powerful trend biscotti confluence knowledge privacy preserve PP ML secure layer distribute blockchain ledger unlike prior rely centralize service trust execution environment specialized hardware defense adversary evaluation demonstrate biscotti coordinate PP ML across peer model utility federate illustrate ability withstand poison attack node churn node node prototype source commodity hardware interface pytorch popular framework machine http github com  biscotti