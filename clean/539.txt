integrate user ues server ESs compute EECC enhance utilization resource improve quality qoe however performance EECC significantly affected architecture article classify EECC compute architecture accord visibility accessibility ues hierarchical compute EECC horizontal compute EECC EECC ues offload task ESs resource ESs exhaust ESs request resource ues EECC ues offload task directly ESs article construct potential EECC environment UE selfishly minimizes payoff computation offload strategy optimization develop potential algorithm EECC EECC extensive data conduct demonstrate performance propose algorithm moreover scalability applicability compute architecture comprehensively analyze conclusion useful suggestion specific compute architecture application environment improve performance EECC qoe introduction motivation vigorous development internet everything IoE artificial intelligence technology intelligence era society  developed surveillance camera longer obtain video image ability recognize mobile phone huawei xiaomi evolve traditional communication device important carrier various application electronic payment management virtual reality intelligent application intelligent application powerful compute however resource possess user ues mobile phone internet iot device cannot intelligent application efficiently deploy compute resource network promising issue compute EC cannot latency service ues guarantee data security ues EC widely direction computation offload cache resource allocation privacy protection however ignores important server ESs ability handle computation intensive task although compute CC sufficient resource requirement computation intensive task cannot issue delay data transmission due shorter transmission distance transmission rate ues ESs EC reduce data transmission delay suitable service handle latency sensitive task therefore cooperation EC CC various user demand compute various however network unstable resource competition ues tight UE rely ability handle task therefore ues ESs integrate compute EECC cannot enhance utilization resource improve quality qoe ensure quality service qos although verify effectiveness EECC performance significantly affected architecture motivate reality classify EECC architecture accord visibility accessibility ues hierarchical compute EECC EECC tier architecture invisible ues EECC ues offload task ESs resource ESs exhaust qos demand ues cannot satisfied ESs task uploaded ESs service transparent ues illustration EECC horizontal compute EECC EECC tier architecture resource visible accessible ues ESs layer layer EECC rely ESs service ues ues request ESs directly accord preference illustration EECC investigate computation offload strategy optimization EECC EECC analyze impact architecture ues ESs comprehensively scalability applicability compute architecture consumption ues consumption ues resource utilization rate ESs application user contribution knowledge optimize computation offload strategy ues investigate performance EECC compute architecture contribution computation offload strategy optimization EECC EECC investigate impact compute architecture ues ESs analyze detail  ues construct potential EECC environment UE selfishly minimizes payoff develop potential algorithm accord characteristic compute architecture existence nash equilibrium convergence algorithm performance algorithm theoretically analyze detail extensive data conduct demonstrate performance propose algorithm scalability applicability compute architecture comprehensively analyze detail important conclusion specific compute architecture application scenario remain content outline related review model detailed EECC formulate potential computation offload algorithm described convergence performance algorithm theoretically demonstrate conduct extensive data verify propose algorithm theorem analyze compute architecture conclusion future related computation offload strategy optimization EC consistently research topic academia investigate extensively multi channel wireless interference environment propose distribute algorithm minimize delay ues optimize offload strategy minimize sum consumption ues constraint computation delay multi access orthogonal frequency multi access communication mode improve performance EC lyapunov optimization technique propose online algorithm without future information user demand propose greedy prune algorithm ues offload task ESs developed non cooperative iteration algorithm strategy however compute capacity EC limited relative integrate EC CC collaborative compute architecture improve performance architecture introduce flexibility various demand ues computation offload optimization compute architecture investigate computation offload optimization hierarchical compute architecture developed convex algorithm task strategy shah developed potential algorithm optimize strategy horizontal compute architecture communication resident non resident task algorithm obtain suboptimal strategy formulate queue model strategy maximize rate ues qos satisfied ues perform computation locally cope wireless network network disconnection instability moreover ues task emergency failure recovery sensitive delay computation offload strategy optimization EECC multi hop computation offload strategy optimization optimize offload strategy strength pareto evolutionary algorithm developed hierarchical heuristic approach offload decision investigate application EECC underwater acoustic sensor network effectiveness EECC improve overall performance compute architecture widely demonstrate however performance EECC architecture specifically investigates computation offload optimization compute architecture summarizes specific architecture EECC application scenario research gap develops potential algorithm UE optimize offload strategy performance analysis  application scenario analyzes impact various factor ues resource utilization ESs observation conclude useful suggestion improve qoe ues various requirement explains observation detail model model depicts scenario parameter definition assume ues ESs UEn esm nth UE mth ES respectively additionally compute resource ues however visibility accessibility UE EECC EECC demand UEn reduces request service delay deadline UE resource ESs limited demand ues satisfied requirement exceed resource capacity ESs EECC ues offload task ESs reduce task UEn offload esm UEn ES local execution however UEn deadline cannot guaranteed task uploaded esm service EECC transparent ues summary notation definition summary notation definition illustration scenario EECC ues offload task ESs accord requirement addition offload decision UE reduce ensure service delay deadline wireless communication technology continuous service ues mobility however distance communication entity become factor affect data transmission rate reflect reality assume service ith service moreover UEn esm service ES respond request UEn service scenario UE UE UE service initiate request ES EECC however ues initiate request EECC EECC heterogeneous characteristic ues ESs challenge optimize computation offload strategy UEn specify compute capability UEn cpu frequency quantify cycle per resource allocation parameter UEn task UEn consumption joule per UEn processing consumption per UEn upload respectively watt cpu execution data transmission UEn resource ES allocate proportionally ues denote proportion resource UEn obtain esm ues request ES payment UEn moreover UE task task UEn define data cpu cycle location UEn execute denotes maximum service delay UEn tolerate qos requirement UE esm specify compute capability ES quantify cpu cycle per data transmission rate esm location esm compute capability denote quantify cpu cycle per  UEn smi esm denote ues ESs ith service respectively moreover assume ESs within service esm esm smi however ESs service heterogeneous furthermore offload decision execute locally otherwise offload esm otherwise similarly execute otherwise EECC UEn  execute entity constraint esm   EECC esm  source computation model local computation model compute capability UEn quantify cpu cycle per local computation delay  sourcethe consumption UEn execute calculate classic model  sourcewhere obtain measurement approach computation model compute capability compute resource esm distribute proportionally ues request ES compute resource esm allocate UEn    sourcewhere   sum resource parameter ues request esm   resource proportion UEn obtain esm accord equation computation delay execute esm formulate   focus minimize consumption ESs therefore consumption UEn zero esm execute computation model ESs sufficient resource respond request ues assume server handle infinite task parallel computation delay execute formulate  SourceRight click MathML additional feature similarly consumption UEn zero processing communication model communication model UEn esm compute resource allocation policy communication resource data transmission rate esm distribute proportionally ues request ES data transmission rate ES allocate UE equation frac gamma sum mathcal gamma tilde lambda tilde frac gamma sum limit text UE text SN gamma tilde lambda tilde tag equation SourceBased equation communication delay UE ES formulate equation tilde prime frac delta tag equation sourcethe consumption UE offload ES equation tilde sigma prime tilde prime tag equation sourcewhere sigma prime obtain communication model UE service mode depends compute architecture EECC therefore formulate communication model UE EECC EECC respectively EECC UE cannot directly request ES request UE decides offload addition fiber communication link ESs infrastructure EECC ensures flexibility scalability ESs thereby ues quality service assume data transmission rate ESs communication delay ES offload formulate equation prime frac delta tag equation SourceTherefore transmission latency UE tilde prime prime EECC UE directly request moreover communication latency UE consists wireless communication delay communication delay assume communication resource sufficient data transmission rate allocate UE communication delay UE equation prime frac delta prime frac delta prime tag equation sourcewhere prime prime wireless data transmission rate data transmission rate respectively accordingly consumption UE offload task formulate equation sigma prime prime tag equation source model previous definition UE text SN delay EECC formulate align lambda sum mathrm ES text SM tilde lambda tilde tilde prime lambda tilde prime prime tag align sourcethe consumption UE EECC equation lambda sum mathrm ES text SM tilde lambda tilde lambda tilde tag equation sourceas equation consumption UE upload task tilde ESs upload task UE incur consumption delay EECC formulate align lambda sum mathrm ES text SM tilde lambda tilde tilde prime lambda prime tag align sourcethe consumption UE EECC equation lambda sum mathrm ES text SM tilde lambda tilde lambda tag equation source UE formulate sum consumption UE consumption therefore UE EECC equation phi phi tag equation SourceRight click MathML additional feature leq phi leq parameter delay individual preference consumption consumption similarly UE EECC formulate equation phi phi tag equation SourceRight click MathML additional feature potential formulation due limited resource ESs competitive relationship ues ues preference attempt beneficial strategy considerable challenge satisfy ues centralize fortunately theory efficient resolve issue construct ues ESs UE selfishly minimizes consumption consumption EECC mathcal player ues ues seek minimize nth player derives strategy ESs boldsymbol lambda lambda tilde lambda dot tilde lambda mathcal subseteq mathbb mathcal offload strategy UE lambda offload strategy ues lambda boldsymbol lambda boldsymbol lambda dot boldsymbol lambda mathcal mathcal ldots mathcal mathcal offload strategy ues lambda offload strategy mathcal ues UE lambda boldsymbol lambda dot boldsymbol lambda boldsymbol lambda dot boldsymbol lambda mathcal UE payoff function boldsymbol lambda lambda mathbb EECC boldsymbol lambda lambda UE adopt boldsymbol lambda lambda EECC offload task ES UE ensure reduce UE ass feasibility ES text SM feasibility ES UE assess theorem theorem UE text SN offloads task ES text SM ES available ES UE equation sum mathcal gamma tilde lambda sum mathrm UE text SN lbrace text UE rbrace gamma tilde lambda leq tag equation sourcewhere gamma equation frac tilde tilde omega bigl phi phi sigma bigl phi omega tilde delta tilde phi delta tilde sigma prime tag equation source proof UE offloads task ES tilde leq equation tilde phi tilde tilde prime phi tilde tag equation sourceand equation phi phi tag equation  equation tilde leq align phi bigg frac omega frac delta bigg phi sigma prime frac delta leq phi frac omega phi sigma frac omega tag align  align phi bigg frac omega sum mathcal gamma tilde lambda gamma tilde frac delta sum mathcal gamma tilde lambda gamma tilde bigg phi sigma prime frac delta sum mathcal gamma tilde lambda gamma tilde leq phi frac omega phi sigma frac omega tag align  inequality align frac sum mathcal gamma tilde lambda gamma frac phi omega tilde delta phi tilde phi delta sigma prime tilde tilde tilde leq frac phi omega phi omega sigma tag align  equation frac sum mathcal gamma tilde lambda gamma leq tag equation sourcewhere equation frac tilde tilde omega bigl phi phi sigma bigl phi omega tilde delta tilde phi delta tilde sigma prime equation  inequality easily obtain equation sum mathcal gamma tilde lambda sum mathrm UE text SN lbrace text UE rbrace gamma tilde lambda leq gamma tag equation SourceRight click MathML additional feature theorem definition potential introduce potential function transform EECC potential  potential potential function phi lambda boldsymbol lambda satisfies equation boldsymbol lambda lambda boldsymbol lambda prime lambda leftrightarrow phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime equation sourcefor UE mathcal boldsymbol lambda lambda mathcal lambda phi lambda boldsymbol lambda potential function boldsymbol lambda lambda equation offload strategy mathcal ues UE UE depends ES chooses gamma assume ESs within service tilde lambda request respond ES sum mathcal gamma tilde lambda UE theorem construct potential function EECC theorem theorem ESs ith service tilde tilde prime tilde tilde prime ES ES prime text SM EECC potential potential function align phi lambda boldsymbol lambda frac sum mathcal sum mathcal sum mathcal gamma gamma tilde lambda tilde lambda sum mathcal gamma lambda tag align SourceRight click MathML additional feature proof accord definition potential potential function increase decrease increase decrease boldsymbol lambda lambda demonstrate phi lambda boldsymbol lambda boldsymbol lambda lambda tilde lambda dot tilde lambda mathcal boldsymbol lambda prime lambda prime tilde lambda prime dot tilde lambda prime mathcal offload strategy UE boldsymbol lambda boldsymbol lambda prime suppose tilde lambda tilde lambda prime prime tilde prime tilde prime ues initiate request ES affect moreover adjust offload strategy ESs affect ues perform task locally sum mathcal gamma lambda sum mathcal gamma lambda prime equation tilde lambda tilde lambda prime prime lambda sum mathcal tilde lambda align phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime frac gamma tilde lambda sum mathcal gamma tilde lambda frac gamma tilde lambda sum mathcal gamma tilde lambda frac sum prime mathcal gamma prime tilde lambda prime sum prime mathcal sum mathcal gamma tilde lambda frac sum prime mathcal gamma prime tilde lambda prime prime sum prime mathcal sum prime mathcal gamma tilde lambda prime frac gamma tilde lambda prime prime sum mathcal gamma tilde lambda prime frac gamma tilde lambda prime prime sum mathcal gamma tilde lambda prime gamma sum mathcal gamma tilde lambda gamma sum mathcal gamma tilde lambda prime tag align sourceif tilde prime tilde equation align phi tilde prime prime prime phi prime phi tilde tilde prime phi tilde tag align  equation inequality align phi bigg frac omega prime frac delta prime bigg phi sigma prime frac delta prime phi bigg frac omega frac delta bigg phi sigma prime frac delta tag align  inequality align frac sum mathcal gamma tilde lambda prime gamma frac phi omega tilde prime delta phi tilde prime phi delta sigma prime tilde prime tilde prime tilde prime frac sum mathcal gamma tilde lambda gamma frac phi omega tilde delta phi tilde phi delta sigma prime tilde tilde tilde tag align SourceRight click MathML additional feature ESs ith service tilde tilde prime tilde tilde prime equation sum mathcal gamma tilde lambda prime sum mathcal gamma tilde lambda tag equation SourceRight click MathML additional feature gamma easily equation gamma sum mathcal gamma tilde lambda prime gamma sum mathcal gamma tilde lambda tag equation SourceTherefore phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime suppose lambda tilde lambda prime prime tilde equation equation phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime gamma sum mathcal gamma tilde lambda prime gamma lambda tag equation SourceBased theorem obtain phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime suppose tilde lambda lambda prime tilde prime easily obtain phi lambda boldsymbol lambda increase decrease increase decrease boldsymbol lambda lambda remark construct potential function EECC formulate specific potential function EECC EECC restrict potential theory potential theory server homogeneous however although assume ESs within service ESs service heterogeneous addition difference ESs account characteristic EECC EECC mention responds ues compute architecture UE SN UE temporarily ignore existence preliminary strategy ESs ES SM EECC deadline unsatisfied task UE uploaded ESs strategy satisfy qos demand obtain EECC preliminary strategy strategy processing strategy derive EECC nth player derives strategy ESs boldsymbol lambda lambda tilde lambda dot tilde lambda mathcal ues initiate request ESs service ues ESs within service construct potential function equation transform EECC potential regardless specific compute architecture accord theorem develop algorithm preliminary strategy ues characteristic EECC EECC develop algorithm COAHi COAHo readjust offload strategy obtain algorithm obtain strategy ues potential theory strategy optimization heterogeneous scenario potential potential function however potential potential function affect quality strategy therefore formulate potential function explore impact function performance propose algorithm compute architecture competitive relationship ues strategy UE affect ues strategy accepted ues nash equilibrium definition nash equilibrium  strategy lambda boldsymbol lambda boldsymbol lambda dot boldsymbol lambda mathcal nash equilibrium EECC UE unilaterally strategy reduce equation boldsymbol lambda lambda leq boldsymbol lambda lambda text boldsymbol lambda tag equation  UE mathcal definition nash equilibrium ues offload strategy nash equilibrium fortunately formulate potential nash equilibrium moreover accord finite improvement nash equilibrium obtain finite iteration motivates develop iteration algorithm nash equilibrium EECC algorithm analyze finite improvement potential algorithm EECC EECC algorithm EECC accord theorem develop iteration offload algorithm algorithm optimize offload decision ues ESs initialize strategy ues boldsymbol lambda dot mathcal UE mathcal calculate initial potential function UE iterate UE offload decision UE unilaterally strategy reduce strategy lambda regard nash equilibrium moreover complexity algorithm define maximum iteration limit iteration obtain acceptable strategy ues theorem analyzes convergence algorithm detail EECC UE offload decision reduce however tilde lambda delay ES exceeds ES offload execute incurs ES ES upload task define ES price paid task ES equation lambda sum mathcal frac omega bigg sum mathcal tilde lambda lambda bigg kappa tag equation sourcewhere kappa correlation parameter computation delay ES algorithm nash equilibrium calculate algorithm input gamma omega zeta delta sigma sigma prime UE mathcal tilde tilde kappa ES mathcal output lambda initialize lambda leftarrow dot dot dot mathcal calculate phi lambda boldsymbol lambda UE mathcal equation UE mathcal boldsymbol lambda leftarrow dot mathcal leftarrow zeta ES text SM ES available ES UE boldsymbol lambda prime leftarrow dot mathcal lambda prime leftarrow calculate phi lambda boldsymbol lambda prime equation phi prime lambda phi lambda boldsymbol lambda leftarrow boldsymbol lambda prime phi lambda boldsymbol lambda leftarrow phi lambda boldsymbol lambda prime update offload strategy UE ESs boldsymbol lambda leftarrow boldsymbol lambda leftarrow UE unilaterally strategy reduce return lambda boldsymbol lambda boldsymbol lambda dot boldsymbol lambda mathcal suppose UE UE request ES processing task furthermore deadline cannot satisfied ES task uploaded however ES uploads resource originally allocate UE release release resource service UE satisfy qos demand UE therefore ES optimize task uploaded reduce optimization objective ES formulate align mathrm min lambda lambda leq text UE mathcal sum mathcal tilde lambda lambda text tilde lambda lambda lbrace rbrace tag align sourcewhere ensures qos demand ues satisfied task execute entity NP remark EECC execute UE equation phi prime tilde prime phi tilde tag equation SourceBased equation offload inequality equation tilde phi tilde prime geq tag equation  qos demand UE cannot met therefore implicit requirement sufficient resource demand ues tilde hence tilde lambda offload task ES increase UE moreover offload equation sum mathcal gamma tilde lambda sum mathcal gamma tilde lambda tag equation SourceAccording equation easily offload ues request ES decrease algorithm deadline guarantee algorithm input offload strategy lambda obtain algorithm boldsymbol lambda dot mathcal gamma omega zeta delta sigma sigma prime UE mathcal tilde tilde kappa ES mathcal output offload strategy lambda boldsymbol lambda ES lambda mathcal leftarrow lbrace text UE text UE mathcal text tilde lambda text rbrace mathcal emptyset UE leftarrow arg max mathrm UE mathcal lbrace gamma rbrace arg min mathrm UE mathcal lbrace omega rbrace update offload decision lambda leftarrow update offload decision UE ESs boldsymbol lambda mathcal leftarrow mathcal lbrace text UE rbrace calculate UE mathcal mathcal prime leftarrow lbrace text UE tilde lambda text leq rbrace mathcal leftarrow mathcal mathcal prime calculate lambda equation return lambda boldsymbol lambda lambda accord remark ESs safely upload task propose algorithm greedy policy specifically algorithm  task omega gamma upload task gamma increase release resource ues demand satisfied addition upload task omega directly reduce ES obtain task offload reschedule scheme greedy policy scheme regard strategy simplicity boldsymbol lambda offload decision ues boldsymbol lambda lambda lambda dot lambda mathcal subseteq mathbb mathcal offload strategy ues algorithm reschedule scheme greedy policy iterate ES mathcal identify deadline unsatisfied task mathcal task maximum gamma UE mathcal offload however task offload resource qos demand deadline unsatisfied task update computation communication delay remain task mathcal remove ues demand satisfied mathcal iteratively mathcal emptyset lambda obtain reschedule processing similarly obtain reschedule scheme UE leftarrow arg min mathrm UE mathcal lbrace omega rbrace easy complexity algorithm mathcal algorithm computation offload algorithm EECC COAHi input gamma omega zeta delta sigma sigma prime UE mathcal tilde tilde kappa ES mathcal output lambda boldsymbol lambda obtain lambda algorithm initialize strategy ues boldsymbol lambda dot mathcal ES mathcal obtain lambda boldsymbol lambda algorithm UE leftarrow arg max mathrm UE mathcal lbrace gamma rbrace obtain lambda boldsymbol lambda algorithm UE leftarrow arg min mathrm UE mathcal lbrace omega rbrace update lambda boldsymbol lambda accord lambda boldsymbol lambda respectively geq update lambda boldsymbol lambda accord lambda boldsymbol lambda respectively obtain strategy ues ESs lambda leftarrow lambda obtain offload strategy ues boldsymbol lambda leftarrow boldsymbol lambda return lambda boldsymbol lambda develop algorithm preliminary decision ues ESs however algorithm aim minimize ues qos requirement ues decision obtain algorithm qos requirement task met develop algorithm upload unsatisfied task demand algorithm developed algorithm algorithm offload strategy EECC COAHi initial decision local processing offload ESs obtain algorithm reschedule task ESs algorithm finally update lambda boldsymbol lambda accord reschedule decision obtain offload strategy ues complexity algorithm derive corollary readjust decision obtain algorithm nash equilibrium ues broken remark although offload strategy obtain algorithm nash equilibrium EECC consists strategy ues algorithm EECC EECC ues directly offload task UE offload decision algorithm decision processing therefore offload strategy obtain mention contrast decision EECC UE directly determines offload strategy hence decision UE ensure reduce ensure qos demand guaranteed addition theorem feasibility ES UE checked theorem algorithm computation offload algorithm EECC COAHo input gamma omega zeta delta sigma sigma prime UE mathcal tilde tilde kappa ES mathcal output lambda boldsymbol lambda mathcal prime leftarrow mathcal obtain lambda algorithm initialize strategy ues boldsymbol lambda dot mathcal UE mathcal prime calculate lambda boldsymbol lambda equation lambda leftarrow boldsymbol lambda prime leftarrow dot mathcal calculate prime lambda boldsymbol lambda equation prime lambda leftarrow boldsymbol lambda leftarrow boldsymbol lambda prime mathcal prime leftarrow mathcal prime lbrace text UE rbrace update boldsymbol lambda UE mathcal prime algorithm obtain offload strategy lambda obtain strategy ues ESs lambda leftarrow lambda obtain offload strategy ues boldsymbol lambda leftarrow boldsymbol lambda return lambda boldsymbol lambda theorem ES text SM available ES UE text SN ES satisfies theorem inequality equation sum mathcal gamma tilde lambda leq prime tag equation sourcewhere equation prime frac gamma tilde tilde omega tilde delta tilde gamma tag equation source proof offload ES execute computation communication delay satisfy inequality equation tilde tilde prime leq tag equation  equation inequality equation frac sum mathcal gamma tilde lambda gamma bigg frac omega tilde frac delta tilde bigg leq tag equation  equation sum mathcal gamma tilde lambda leq frac gamma tilde tilde omega tilde delta tilde gamma equation sourcethus conclusion algorithm developed algorithm describes processing task offload strategy ues EECC COAHo although algorithm algorithm criterion availability ESs algorithm availability ESs checked theorem algorithm availability ESs checked theorem initial strategy lambda obtain algorithm UE execution UE execution decision UE reschedule task ues uploaded resource originally occupy ues ues therefore strategy update algorithm none ues benefit update algorithm COAHi readjust decision obtain algorithm nash equilibrium ues broken moreover although offload strategy obtain algorithm nash equilibrium EECC consists strategy ues performance analysis convergence algorithm finite improvement potential ensures approach nash equilibrium finite iteration analyze convergence propose algorithm gamma max triangleq max lbrace gamma text text UE mathcal rbrace gamma min triangleq min lbrace gamma text text UE mathcal rbrace max max lbrace text text UE mathcal rbrace furthermore gamma assume non negative integer theorem algorithm maximum iteration UE offload strategy equation max leq frac mathcal gamma max gamma min frac mathcal gamma max max gamma min tag equation source proof equation align phi lambda boldsymbol lambda leq frac sum mathcal sum mathcal gamma max sum mathcal gamma max max leq frac mathcal gamma max mathcal gamma max max tag align SourceLet boldsymbol lambda lambda tilde lambda dot tilde lambda mathcal boldsymbol lambda prime lambda prime tilde lambda prime dot tilde lambda prime mathcal offload strategy UE boldsymbol lambda boldsymbol lambda prime UE update strategy boldsymbol lambda boldsymbol lambda prime equation phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime geq gamma min tag equation  suppose tilde lambda tilde lambda prime prime prime accord equation align phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime gamma bigg sum mathcal gamma tilde lambda sum mathcal gamma tilde lambda prime bigg tag align SourceSince gamma assume integer equation sum mathcal gamma tilde lambda sum mathcal gamma tilde lambda prime geq tag equation sourceit easily obtain equation phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime gamma min tag equation source suppose lambda tilde lambda prime accord equation equation phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime gamma sum mathcal gamma tilde lambda gamma tag equation SourceSimilarly gamma assume integer obtain equation phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime geq tag equation  obtain phi lambda boldsymbol lambda phi lambda boldsymbol lambda prime geq gamma min equation maximum iteration UE offload strategy algorithm equation max leq frac mathcal gamma max gamma min frac mathcal gamma max max gamma min equation SourceBased analysis theorem accord theorem derive complexity algorithm corollary corollary algorithm algorithm algorithm twice easily derive complexity algorithm mathcal theorem algorithm maximum iteration UE offload strategy equation max leq frac mathcal gamma max gamma min frac mathcal gamma max max gamma min tag equation SourceRight click MathML additional feature proof algorithm obtain offload strategy ues ESs algorithm  task ESs obtain offload strategy algorithm UE performs algorithm mathcal offload strategy ues theorem conclusion performance algorithm although performance evaluation focus theory investigate performance potential algorithm analyze performance algorithm propose investigate price anarchy PoA quantifies efficiency ratio nash equilibrium strategy optimal strategy obtain centralize ues UE mathcal sum mathcal EECC sum mathcal prime EECC EECC PoA define equation text PoA frac sum mathcal boldsymbol overline lambda max boldsymbol lambda sum mathcal boldsymbol lambda tag equation sourcewhere boldsymbol overline lambda optimal offload strategy UE obtain centralize algorithm theorem EECC EECC PoA satisfies equation leq text PoA leq frac sum mathcal min lbrace tilde min min rbrace sum mathcal max lbrace tilde max max rbrace leq tag equation sourcewhere equation qquad qquad tilde max frac sum mathcal gamma gamma bigg phi bigg frac omega tilde frac delta tilde bigg phi frac delta sigma prime tilde bigg tag equation source align max frac sum mathcal gamma delta gamma tilde bigl phi phi sigma prime bigl phi bigg frac omega frac delta bigg tag align source equation quad qquad tilde min phi bigg frac omega tilde frac delta tilde bigg phi frac delta sigma prime tilde tag equation sourceand equation qquad quad min phi bigg frac omega frac delta tilde frac delta bigg phi frac delta sigma prime tilde tag equation source proof boldsymbol overline lambda optimal offload strategy boldsymbol lambda nash equilibrium easily leq text PoA leq UE resource allocate ES satisfied align frac gamma sum mathcal gamma tilde leq leq frac gamma tilde tag align source align frac gamma sum mathcal gamma tilde leq leq frac gamma tilde tag align SourceLet min gamma tilde sum mathcal gamma max tilde min gamma tilde sum mathcal gamma max tilde equation UE offload task ES UE satisfied align tilde leq phi bigg frac omega min frac delta min bigg phi frac sigma prime delta min frac sum mathcal gamma gamma bigg phi bigg frac omega tilde frac delta tilde bigg phi frac delta sigma prime tilde bigg tilde max tag align SourceRight click MathML additional feature align tilde geq phi bigg frac omega max frac delta max bigg phi frac sigma prime delta max phi bigg frac omega tilde frac delta tilde bigg phi frac delta sigma prime tilde tilde min tag align SourceRight click MathML additional feature UE offload task UE satisfied align leq phi bigg frac omega frac delta min frac delta bigg phi frac sigma prime delta min phi bigg frac omega frac delta bigg frac sum mathcal gamma delta gamma tilde bigl phi phi sigma prime bigl max tag align sourceand align geq phi bigg frac omega frac delta max frac delta bigg phi frac sigma prime delta max phi bigg frac omega frac delta tilde frac delta bigg frac phi delta sigma prime tilde min tag align sourcefor UE execute task locally UE phi omega phi sigma omega obtain equation sum mathcal boldsymbol overline lambda geq sum mathcal min lbrace tilde min min rbrace tag equation sourceand equation sum mathcal boldsymbol lambda leq sum mathcal max lbrace tilde max max rbrace tag equation SourceTherefore equation text PoA leq frac sum mathcal min lbrace tilde min min rbrace sum mathcal max lbrace tilde max max rbrace tag equation sourcethus conclusion EECC PoA define equation text PoA frac sum mathcal prime boldsymbol overline lambda prime max boldsymbol lambda sum mathcal prime boldsymbol lambda tag equation sourcewhere boldsymbol overline lambda prime optimal offload strategy UE obtain centralize algorithm theorem EECC EECC PoA satisfies equation leq text PoA leq frac sum mathcal min lbrace tilde min prime rbrace sum mathcal max lbrace tilde max prime rbrace leq tag equation source proof equation EECC execute equation prime phi bigg frac omega frac delta prime frac delta prime bigg sigma prime phi bigg frac delta prime frac delta prime bigg tag equation sourceas proof theorem minimum UE respond ES tilde min moreover maximum execute ES tilde max therefore equation sum mathcal prime boldsymbol overline lambda prime geq sum mathcal min lbrace tilde min prime rbrace tag equation SourceRight click MathML additional feature equation sum mathcal prime boldsymbol lambda leq sum mathcal max lbrace tilde max prime rbrace tag equation SourceRight click MathML additional feature inequality obtain equation leq text PoA leq frac sum mathcal min lbrace tilde min prime rbrace sum mathcal max lbrace tilde max prime rbrace leq equation sourcethus conclusion experimental evaluation extensive data conduct demonstrate convergence performance propose algorithm comparison developed algorithm COAHi COAHo actually comparison EECC EECC scalability applicability EECC EECC influence various factor comprehensively important conclusion specific compute architecture application scenario experimental analysis parameter configuration assume service mathcal ues ESs randomly service ues ESs generate evaluate propose algorithm parameter obtain specifically compute capacity UE randomly lbrace rbrace ghz compute ES randomly assign lbrace rbrace ghz furthermore compute resource ghz communication resource ES tilde mbps random integer variable reflect heterogeneity ESs communication resource mbps EECC without loss generality prime prime mbps addition sigma sigma prime phi randomly lbrace rbrace gamma randomly assign lbrace rbrace reflect heterogeneity ues assume ues execute task facial recognition video video transcoding directly obtain workload omega task introduce processing density quantify cycle per cpu cycle task calculate omega delta processing density task measurement data facial recognition cycle video cycle video transcoding cycle moreover data task randomly assign lbrace rbrace MB experimental analysis convergence algorithm average algorithm nash equilibrium average slot COAHi COAHo offload strategy compute architecture iteration algorithm UE update strategy ues UE offload strategy slot reality slot microsecond therefore ues mathcal increase average slot increase EECC resource ues obtain ESs limited ues increase competition ues  slot increase rapidly however ues obtain sufficient resource demand EECC therefore increase ues EECC average slot EECC explanation ESs mathcal affect convergence algorithm consistent theorem average obtain nash equilibrium average slot ues offload strategy compute architecture EECC EECC comparison COAHi COAHo task execute entity resource utilization rate ESs impact ues execute application locally local COAHi local COAHo upload task ESs ES COAHi ES COAHo respond COAHi COAHo compute architecture ues increase increasingly ues submit task addition EECC although ESs satisfy ues increasingly ues perform task locally moreover EECC EECC resource ESs limited resource ESs exhaust request ESs respond upper limit comparison resource utilization rate ESs compute architecture depict rate COAHi rate COAHo resource utilization rate ESs refers ratio ESs respond ues request ESs sum mathcal mathbb bigl lbrace sum mathcal tilde lambda geq bigl rbrace mathcal mathbb lbrace cdot rbrace lbrace rbrace indicator function mathbb lbrace cdot rbrace input parameter function otherwise mathbb lbrace cdot rbrace resource utilization rate ESs appropriate compute architecture application scenario thereby reduce overhead maintain ESs COAHi performs leq COAHo performs geq moreover COAHi performs leq COAHo performs geq latency data transmission offset resource shortcoming ESs however resource ESs unable cope user scenario discussion important conclusion delay consumption ues resource utilization rate ESs EECC suitable user scenario EECC suitable user scenario comparison COAHi COAHo delay consumption performance algorithm evaluate performance COAHi scheme baseline  ues randomly offload decision  ues task execute  ues request ESs execute task  ues offload decision ESs  ues request ESs task deadline unsatisfied task uploaded ESs difference   upload deadline unsatisfied task EECC baseline however difference ues deadline strategy ues directly request distinguish compute architecture relevant benchmark      ues offload decision ESs   decision algorithm nash equilibrium unique strategy   random difference delay consumption ues moreover mention comparison developed algorithm baseline actually comparison compute architecture EECC EECC EC CC compute performance algorithm scenario detail although algorithm   perform delay consumption ues qos demand cannot satisfied ESs scheme COAHi COAHo perform baseline propose algorithm perform delay consumption qos demand ues moreover EC CC EECC unique advantage ues handle task resource ESs ues latency consumption service latency sensitive task service ues computation intensive task complementary another flexibly adapt various user requirement comparison propose algorithm baseline delay consumption deadline unsatisfied ues compute architecture EECC EECC comparison ESs algorithm impact application equation omega affect computation delay task equation delta affect communication delay task data workload classify application communication intensive task computation intensive task reflect effectiveness algorithm evaluate adaptability compute architecture application introduce multiplier alpha beta increase data workload task respectively data expand alpha data performance COAHi gradually becomes COAHo mention EECC suitable user scenario user fix increase data directly prolongs transmission delay application distance transmission rate ues weaken advantage EECC ues originally initiate request request ESs perform task discussion important conclusion communication intensive task ues EECC ues EECC user scenario user scenario conclude EECC choice communication intensive task phenomenon communication delay dominates ues obviously upload task ESs closer ues ues demand comparison COAHi COAHo delay consumption ues respond entity alpha workload expand beta workload performance COAHi COAHo user scenario however performance COAHo COAHi user scenario discussion important conclusion computation intensive task conclude EECC choice ues user scenario EECC choice ues user scenario increase workload ues tend initiate request regardless compute architecture phenomenon computation delay dominates ues resource ESs unable demand user hence confirm EECC improve resource utilization ues ESs user demand comparison COAHi COAHo delay consumption ues respond entity beta conclusion future construct potential EECC environment UE selfishly minimizes payoff investigate computation offload strategy optimization ues EECC EECC accordingly develop potential algorithm COAHi COAHo offload strategy ues scalability applicability EECC EECC influence various factor comprehensively important conclusion specific compute architecture application scenario experimental analysis conclusion delay consumption ues resource utilization rate ESs EECC suitable user scenario EECC suitable user scenario communication intensive task user scenario ues EECC ues EECC EECC choice ues computation intensive task EECC choice ues user scenario EECC choice ues user scenario assumption ESs service homogeneous limitation issue future research moreover research topic EECC future impact mobility ues service mode EECC combination EECC EECC direction worthy investigation