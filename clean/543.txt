efficient application schedule critical achieve performance heterogeneous compute environment application schedule NP restrict importance extensively various algorithm propose literature mainly homogeneous processor although algorithm literature heterogeneous processor usually significantly schedule deliver quality schedule novel schedule algorithm bound heterogeneous processor objective simultaneously performance schedule heterogeneous HEFT algorithm critical processor CPOP algorithm HEFT algorithm selects task upward rank assigns task processor minimizes insertion approach CPOP algorithm summation upward downward rank prioritize task another difference processor selection phase schedule critical task onto processor minimizes execution critical task robust unbiased comparison related parametric graph generator generate acyclic graph various characteristic comparison randomly generate graph graph application schedule algorithm significantly surpass previous approach quality schedule mainly schedule ratio speedup frequency average schedule metric introduction diverse resource interconnect network compute platform heterogeneous compute execute computationally intensive parallel distribute application heterogeneous compute compile runtime execute application efficient schedule task application available resource factor achieve performance task schedule assign task application suitable processor task execution resource characteristic application execution task data communication task task dependency priori static model static task schedule application acyclic graph dag node application task  data dependency node label computation computation task label  communication communication task objective function task onto processor execution task precedence requirement satisfied minimum overall completion obtain task schedule NP restrict schedule task processor schedule task arbitrary processor importance performance task schedule extensively various heuristic propose literature heuristic classify variety category schedule algorithm cluster algorithm duplication algorithm random mainly homogeneous processor schedule algorithm task construct assign priority task task priority task schedule processor minimizes predefined function algorithm category quality schedule performance comparable category schedule cluster algorithm unbounded processor directly applicable cluster algorithm phase schedule module merge task cluster generate algorithm onto bound processor task execution within processor similarly task duplication heuristic practical significantly complexity complexity  algorithm  algorithm complexity  algorithm schedule task homogeneous processor genetic algorithm  widely random technique task schedule although quality schedule execution significantly alternative improvement GA percent GA approach around heuristic execution additionally extensive optimal parameter GA task schedule research heterogeneous algorithm assign parameter confront substantially schedule partition task dag dependency task schedule technique considers task subset task perform task additionally dynamic  initial schedule dag improves performance variant algorithm scope propose static schedule algorithm bound fully heterogeneous processor heterogeneous HEFT algorithm critical processor CPOP algorithm although static schedule heterogeneous offline practical schedule algorithm constraint therefore motivation algorithm deliver quality schedule output schedule schedule HEFT algorithm selects task upward rank define task assign processor minimizes insertion approach upward rank task critical task exit task computation task CPOP algorithm selects task upward rank downward rank algorithm target schedule critical task task critical dag onto processor minimizes execution critical task task  processor selection phase execution insertion schedule HEFT algorithm research parametric graph generator generate acyclic graph performance schedule algorithm graph generator target generation DAGs input parameter unbiased comparison task schedule algorithm comparison randomly generate task graph task graph application gaussian elimination algorithm fft algorithm molecular dynamic code comparison algorithm significantly surpass previous approach performance metric schedule ratio speedup efficiency occurrence metric schedule deliver output schedule remainder organize define research related terminology taxonomy task schedule algorithm related schedule heterogeneous introduces schedule algorithm HEFT CPOP algorithm comparison algorithm related randomly generate task graph task graph application introduce extension HEFT algorithm summary research future task schedule schedule model consists application target compute environment performance criterion schedule application acyclic graph task task task node interchangeably precedence constraint task execution task data matrix communication data  amount data transmit task task task graph task without entry task task without exit task task schedule algorithm entry exit task graph exit entry task zero pseudo exit entry task zero affect schedule assume target compute environment consists heterogeneous processor fully topology  communication assume perform without contention model assume computation overlap communication additionally task execution application assume  computation matrix estimate execution task processor schedule task label average execution average execution task define  source data transfer rate processor matrix communication startup processor dimensional vector communication transfer data task schedule task schedule define  kbm source schedule processor becomes zero assume  communication negligible  communication schedule average communication label average communication define  sourcewhere average transfer rate processor domain average communication startup objective function define est eft attribute derive partial schedule est eft execution execution task processor respectively entry task  est  source task graph eft est compute recursively entry task respectively compute eft task immediate predecessor task schedule est max avail  pred aft source eft est SourceRight click MathML additional feature pred immediate predecessor task task avail processor task execution assign task processor avail processor execution task execute another task  schedule policy inner max est equation return data processor task schedule processor processor actual ast actual aft task respectively task graph schedule schedule overall completion actual exit task  multiple exit task convention insert pseudo exit task apply schedule makespan define makespan max aft  source objective function task schedule assignment task application processor schedule minimize related static task schedule algorithm classify heuristic random algorithm former classify schedule heuristic cluster heuristic task duplication heuristic classification static task schedule algorithm schedule heuristic schedule heuristic maintains task graph accord priority phase task prioritize task selection phase priority task processor selection phase suitable processor minimizes predefined function execution modify critical MCP dynamic schedule mapping heuristic MH insertion schedule heuristic ETF dynamic critical dcp algorithm schedule algorithm bound fully homogeneous processor schedule heuristic generally practical performance schedule cluster heuristic algorithm task graph unlimited cluster task cluster task necessarily task iteration refines previous cluster merge cluster task assign cluster execute processor cluster heuristic additional generate schedule cluster merge merge cluster remain cluster processor cluster mapping mapping cluster available processor task mapped task within processor dominant sequence cluster DSC linear cluster mobility cluster schedule  task duplication heuristic duplication schedule algorithm schedule task graph mapping task redundantly reduces interprocess communication overhead duplication algorithm accord selection strategy task duplication algorithm usually unbounded identical processor complexity algorithm random technique random technique randomize technique random choice perform merely random random technique combine knowledge gain previous randomize feature generate genetic algorithm  popular widely technique flavor task schedule  generate quality output schedule however schedule usually heuristic technique additionally parameter genetic algorithm appropriately optimal parameter schedule task graph another task graph addition  simulated anneal local task schedule heuristic heterogeneous environment report task schedule heuristic heterogeneous processor dynamic schedule algorithm  min algorithm mapping heuristic algorithm dynamic schedule DLS algorithm algorithm selects node available processor maximizes dynamic DL  est computation task median computation task processor algorithm upward rank calculation communication heterogeneous environment difference task median execution processor execution processor DLS algorithm complexity task processor mapping heuristic MH algorithm computation task processor compute instruction execute task processor however computation task communication schedule processing homogeneous processor assume heterogeneity schedule algorithm static upward rank assign priority author communication delay rank algorithm processor task processor assign task execute MH algorithm schedule task idle slot task already schedule complexity contention task processor otherwise  min lmt algorithm phase algorithm phase task execute parallel attribute phase assigns task available processor task priority task within task computation priority task assign processor minimizes sum task computation communication task previous fully graph complexity task processor task schedule algorithm introduce detail HEFT CPOP algorithm introduce graph attribute task priority graph attribute HEFT CPOP algorithm task algorithm schedule priority upward downward rank upward rank task recursively define ranku  succ ranku sourcewhere succ immediate successor task average communication average computation task rank compute recursively traverse task graph upward exit task upward rank exit task  upward rank ranku   SourceRight click MathML additional feature basically ranku critical task exit task computation task algorithm literature compute rank computation static upward rank  similarly downward rank task recursively define   pred  SourceRight click MathML additional feature pred immediate predecessor task downward rank compute recursively traverse task graph downward entry task graph entry task  downward rank zero basically  distance entry task task exclude computation task heterogeneous HEFT algorithm HEFT algorithm application schedule algorithm bound heterogeneous processor phase task prioritize phase compute priority task processor selection phase task priority schedule task processor minimizes task HEFT algorithm task prioritize phase phase priority task upward rank ranku computation communication task generate sort task decrease ranku randomly alternative policy task immediate successor task upward rank alternate policy increase complexity prefer random selection strategy easily decrease ranku topological task linear preserve precedence constraint processor selection phase task schedule algorithm available processor task execution completes execution assign task however HEFT algorithm insertion policy considers insertion task idle slot already schedule task processor idle slot difference execution task consecutively schedule processor capable computation task schedule additionally schedule idle slot preserve precedence constraint HEFT algorithm appropriate idle slot task processor input data immediate predecessor task processor idle slot capable computation task HEFT algorithm complexity processor dense graph proportional task complexity illustration schedule obtain HEFT algorithm sample dag schedule shorter schedule related specifically schedule DLS MH lmt algorithm respectively upward rank task graph schedule task respect HEFT algorithm sample task graph task attribute HEFT CPOP  task graph attribute HEFT CPOP  task graph schedule task graph HEFT CPOP algorithm HEFT algorithm schedule CPOP algorithm schedule schedule task graph HEFT CPOP algorithm HEFT algorithm schedule CPOP algorithm schedule critical processor CPOP algorithm although algorithm CPOP algorithm task prioritize processor selection phase HEFT algorithm attribute task priority strategy processor task task prioritize phase phase upward rank ranku downward rank  task compute computation communication CPOP algorithm critical application graph CP sum computation task  communication along sum computation critical graph basically bound schedule generate task schedule algorithm priority task assign summation upward downward rank critical entry task priority entry task task marked critical task immediate successor task priority marked critical task exit node immediate successor priority maintain priority queue ranku  task binary heap implement priority queue complexity  insertion deletion task retrieve task priority task ranku  priority queue processor selection phase critical processor pcp minimizes cumulative computation task critical task critical schedule critical processor otherwise assign processor minimizes execution task insertion schedule policy complexity CPOP algorithm schedule obtain CPOP algorithm schedule critical critical task schedule respectively critical processor schedule task respect CPOP algorithm CPOP algorithm experimental discussion comparative evaluation algorithm related purpose graph workload algorithm randomly generate application graph graph numerical metric performance evaluation experimental comparison metric comparison algorithm metric schedule ratio slr performance schedule algorithm graph schedule makespan output schedule task graph normalize schedule bound schedule ratio slr slr algorithm graph define slr makespan  sourcethe denominator summation minimum computation task  unscheduled dag computation node minimum critical minimum computation  slr graph algorithm cannot denominator bound task schedule algorithm slr graph algorithm respect performance average slr task graph speedup speedup graph compute sequential execution cumulative computation task graph parallel execution makespan output schedule sequential execution compute assign task processor minimizes cumulative computation speedup   makespan SourceRight click MathML additional feature sum computation maximize speedup rank schedule algorithm efficiency ratio speedup processor another comparison metric application graph occurrence quality schedule algorithm quality schedule algorithm algorithm schedule algorithm execution obtain output schedule task graph metric basically average algorithm algorithm comparable slr minimum practical implementation minimization slr task processor conflict minimization randomly generate application graph randomly generate application graph random graph generator implement generate application DAGs various characteristic input parameter simulation framework allows assign parameter random graph generator framework executes random graph generator program construct application DAGs execution schedule algorithm generate output schedule finally computes performance metric schedule random graph generator random graph generator input parameter DAGs task graph parameter graph assume height depth dag randomly generate uniform distribution height integral generate randomly width randomly uniform distribution dense graph shorter graph parallelism generate generate longer graph parallelism node communication computation ratio ccr ratio average communication average computation dag ccr computation intensive application percentage computation processor basically heterogeneity factor processor percentage significant difference task computation processor percentage indicates execution task almost processor average computation task graph randomly uniform distribution   average computation graph randomly algorithm computation task processor randomly source parameter assign correspond parameter assign explicitly node graph generate fully graph      combination dag random DAGs generate dag DAGs around assign input parameter parameter generation diverse DAGs various characteristic diverse DAGs prevent biasing schedule algorithm performance performance algorithm respect various graph characteristic performance algorithm respect various graph slr performance rank algorithm HEFT CPOP DLS MH lmt rank algorithm respect comparison metric average slr HEFT generate graph CPOP algorithm percent DLS algorithm percent MH algorithm percent lmt algorithm percent average speedup rank algorithm HEFT DLS CPOP MH lmt average slr average speedup respect graph HEFT algorithm outperforms algorithm graph slr speedup CPOP algorithm outperforms related average slr various graph cannot speedup DLS algorithm respect average HEFT algorithm DLS algorithm slowest average HEFT algorithm faster CPOP algorithm percent MH algorithm percent DLS algorithm percent lmt algorithm percent average algorithm respect graph respect graph structure parameter graph generate graph depth parallelism performance HEFT algorithm CPOP algorithm percent MH algorithm percent DLS algorithm percent lmt algorithm percent average slr HEFT algorithm CPOP algorithm percent MH algorithm percent DLS algorithm percent lmt algorithm percent HEFT algorithm CPOP algorithm percent MH algorithm percent DLS algorithm percent lmt algorithm percent graph structure HEFT algorithm performance quality schedule generate algorithm respect various ccr another performance rank algorithm ccr HEFT DLS MH CPOP lmt ccr performance rank HEFT CPOP DLS MH lmt CPOP algorithm graph  graph  cluster critical processor quality schedule graph average communication average computation finally schedule algorithm schedule algorithm DAGs indicates comparison algorithm algorithm combine percentage graph algorithm performance algorithm combine rank algorithm occurrence HEFT DLS CPOP MH lmt however rank respect average slr HEFT CPOP DLS MH lmt although DLS algorithm outperforms CPOP algorithm occurrence CPOP algorithm slightly average slr DLS algorithm wise comparison schedule algorithm application graph addition randomly generate task graph application graph gauss elimination algorithm fourier transformation molecular dynamic code gaussian elimination sequential program gaussian elimination algorithm data graph algorithm dimension matrix pivot operation update operation critical maximum task gaussian elimination algorithm task graph matrix average slr efficiency comparison gaussian elimination graph gauss elimination application ccr percentage structure application graph parameter task parameter parameter matrix task graph task gaussian elimination graph average slr algorithm various matrix increment processor graph task task performance HEFT DLS algorithm increase matrix task critical increase makespan algorithm efficiency comparison processor varied incrementing ccr percentage parameter efficiency comparison gaussian elimination graph matrix HEFT DLS algorithm efficiency algorithm processor increase beyond HEFT algorithm outperforms DLS algorithm efficiency matrix fix increase processor decrease makespan algorithm algorithm respect various processor matrix fix DLS algorithm slowest algorithm although performs HEFT algorithm matrix processor DLS algorithm longer HEFT algorithm schedule graph performance HEFT algorithm efficient practical algorithm fourier transformation recursive dimensional fft algorithm task graph data array coefficient polynomial array output algorithm algorithm consists recursive butterfly operation task graph  task dash recursive task butterfly operation task input vector recursive task logm butterfly operation task assume integer task exit task fft task graph critical computation task communication consecutive fft algorithm generate dag fft fft related ccr percentage parameter parameter gauss elimination application data fft another parameter simulation varies incrementing average slr fft graph various input HEFT algorithm outperforms algorithm efficiency obtain algorithm respect various processor graph data processor varied incrementing HEFT DLS algorithm efficient schedule average slr efficiency comparison fft graph algorithm schedule fft graph respect data processor DLS algorithm algorithm processor input schedule algorithm fft graph molecular dynamic code task graph modify molecular dynamic code application performance evaluation irregular task graph task fix application structure graph ccr percentage parameter performance algorithm respect ccr processor average slr rank HEFT DLS CPOP MH lmt efficiency comparison schedule algorithm processor varied increment task processor bound processor DLS lmt algorithm almost longer algorithm HEFT CPOP MH combine HEFT algorithm practical efficient algorithm application task graph molecular dynamic code average slr efficiency comparison task graph molecular dynamic code alternate policy phase HEFT algorithm propose substitute policy task prioritize phase HEFT algorithm upward rank priority summation upward downward rank execution immediate predecessor task already schedule considers communication priority policy alternate percent priority ranku  priority ranku  pred aft priority ranku  pred aft SourceRight click MathML additional feature another extension improve performance immediate task account HEFT algorithm generates output schedule task graph task immediate task schedule processor minimizes task schedule decrease extension modify processor selection phase HEFT algorithm task immediate task marked critical policy immediate predecessor critical already schedule task critical schedule processor minimizes critical otherwise task schedule processor minimizes HEFT algorithm critical selection policy communication upward rank critical  succ critical  succ ranku critical  succ ranku SourceRight click MathML additional feature HEFT algorithm outperforms alternate ccr graph ccr graph benefit critical task account processor selection ccr policy slightly outperforms HEFT algorithm ccr policy outperforms algorithm others alternate percent schedule task graph HEFT algorithm alternative schedule task graph HEFT algorithm alternative conclusion algorithm HEFT algorithm CPOP algorithm schedule application graph onto heterogeneous processor experimental randomly generate application graph various characteristic application graph gaussian elimination fft molecular dynamic code HEFT algorithm significantly outperform algorithm performance metric average schedule ratio speedup frequency average robust performance ability stable performance graph structure HEFT algorithm viable dag schedule heterogeneous performance evaluation CPOP algorithm performance exist algorithm comparable alternative policy task prioritize processor selection phase HEFT algorithm introduce processor selection phase minimize critical task task future research analytically investigate quality schedule algorithm average makespan processor available extension bound degradation makespan processor available sufficient extend HEFT algorithm reschedule task response processor network load although algorithm assume fully network extent algorithm arbitrary network link contention