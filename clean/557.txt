storage increasingly adopt nosql database management DBMS generally superior availability performance traditional DBMSs detriment consistency guarantee nosql DBMSs eventual consistency operation confirm without node consistency operation adopt distinctly affect behaviour assessment account distinct consistency important develop storage proposes approach reliability diagram generalize stochastic petri net evaluate availability performance storage redundant node eventual consistency nosql DBMS experimental demonstrate configuration influence unavailability performance impact introduction decade storage played important role data access indeed mechanism become fundamental data access without restriction geographical barrier detail storage infrastructure conceal user storage adopt data application characterize generation manipulation amount data context traditional database technology relational database management DBMS performance issue data volume due performance nosql sql DBMSs adopt prominent service provider amazon offering database service  storage mechanism flexibility data schema horizontal scalability attribute facilitate adoption nosql storage nosql DBMSs cassandra footnote adopt eventual consistency improve performance availability temporary inconsistency redundant server node accepted eventually consistent node update accord cap theorem distribute guarantee consistency availability partition tolerance storage highly available scalable eventual consistency improves availability partition tolerance nosql DBMSs usually utilize quorum consistency allows eventual consistency associate operation minimum node choice consistency impact availability performance storage assessment account distinct consistency important evaluate storage service proposes technique evaluate availability performance storage service nosql DBMS approach utilizes reliability diagram RBD stochastic petri net spn estimate availability operation latency distinct consistency redundant node cluster model validate cassandra  DBMS experimental demonstrate consistency influence non functional attribute organize overview important concept introduces related sect describes adopt methodology propose model sect describes experimental finally sect concludes background fundamental concept understand storage storage online data management infrastructure compute paradigm data storage provider hide detail service architecture storage mechanism respective user indeed storage encompass data storage data service DaaS database service  multi tenancy important feature storage service compute resource multiple simultaneous tenant reduce service flexibility multi tenancy adopt layer instance service provider tenant DBMS isolated virtual machine resource virtualization another option allows tenant DBMS data tenant DBMS provider ensure service behave uniquely tenant access tenant data forbidden unless explicitly desire addition predict workload tenant important function  availability service failure performance degradation service interruption due unavailability request resource failure distinct source hardware software network interconnection failure impair user preference service compute service usually characterize massive user utilization assure availability challenge redundant server commonly utilized availability requirement availability probability function considers alternation operational  steady availability commonly adopt equation account MTTF failure mttr repair cumulative distribution function probability repair within reliability function probability perform function without failure downtime consistency nosql DBMS consistency DBMS define valid database instance redundant database server data performance affected DBMS confirm operation execute redundant server operation DBMS guarantee return data date similarly availability influence consistency policy performance availability nosql DBMSs usually adopt eventual consistency redundant server replica immediately data database replica return accessible data eventually redundant server consistent mitigate inconsistent interval nosql DBMSs adoption consistency define minimum redundant server confirm operation tune accord application requirement eventual consistency improve availability DBMS operational server consistency consistency database server enforce consistency DBMS compose redundant server consistency external request server responsible operation request coordinate communication redundant node server coordinator node assume function dependent load balance consistency image assume consistency confirmation operation server node confirm operation operation data server similarly confirmation node operation data guaranteed accessible consistency consistency equation redundant server server data due operation adopt server operation quorum consistency representative nosql DBMSs cassandra  amazon DynamoDB adopt quorum technique database consistency replica specifically DBMS confirms operation execution operation sufficient server quorum recognize successful completion operation quorum strongly related eventual consistency adopt quorum consistency operation assume RF redundant server replication factor quorum denotes quorum operational active server max instance operational storage tolerates simultaneous node failure related decade prominent research ass consistency performance nosql DBMS utilized storage despite importance availability usually account evaluate performance eventual consistency cassandra author queue considerably influence consistency nosql DBMSs quorum technique yao wang developed approach estimate probability access data despite relation consistency latency author verify availability author evaluate consistency mechanism nosql DBMSs redis cassandra mongodb neoj  simulator cassandra DBMS availability validate perform consistency workload ass impact performance cassandra nosql DBMS demonstrate distinct consistency significantly affect performance ideal depends workload availability assess technique data consistency social network cassandra DBMS experimental throughput improve failure author adopt petri net model cassandra cluster focus performance author propose colour petri net cpn model performance analysis nosql DBMS quorum consistency model estimate throughput account failure author data integration technique checkpointing fault tolerance nosql server demonstrate failure mitigate estimate availability  algorithm data replication nosql DBMS account consistency availability quorum technique availability obtain average availability node validate approach previous proposes RBD GSPN model evaluate availability performance storage nosql DBMS approach additional designer assess influence distinct consistency redundancy mechanism storage overview related technique account model model performance availability consistency comparison methodology adopt methodology assess storage propose model sect methodology image concern understand evaluation component interaction designer define metric availability assess implementation modification exist data collection prototype model parameter execution activity data collection feasible designer datasheets available adopt desire initial assessment afterwards model creation perform accord define metric instance designer interested availability RBD sufficient assessment model validation optional activity data without loss generality task verifies model estimate behaviour data obtain model estimate designer review model additional measurement finally perform ass configuration availability performability model availability performability model evaluate storage service RBD model adopt estimate availability storage service whereas GSPN model performs joint assessment availability latency performability reliability diagram RBD combinatorial model structural relation component utilized ass availability reliability graphically RBD component logical relation arc failure recovery component influence component RBD model adopt however RBD model constraint complex relation component adopts series arrangement evaluate equation generalize stochastic petri net GSPN model complex relation component specifically GSPN prominent petri net PN extension bipartite graph denote local transition depict rectangle action arc transition vice versa inhibitor arc arc depicts instead arrow usually denote unavailability token token reside denote PN semantic PN define token token consume accord transition firing GSPN allows association exponential distribution transition rectangle zero delay immediate transition depict rectangle transition concurrency server semantics infinity server semantics adopt parallel activity rate transition linearly increase accord enable rate constant model evaluation GSPN model translate continuous markov chain  model suffer explosion simulation technique adopt alternative markov chain generation reader refer detail operator adopt GSPN estimate probability inner expression exp denotes token average token besides propose model conceive stationary analysis transition adopt exponential distribution server semantics storage model approach considers storage nosql DBMS quorum consistency sect compose physical server host virtual machine VM VM DBMS relationship RF denotes nosql DBMS replica CONS consistency physical server execute VM server failure vms migrate server migration impact availability operational server CONS replica vms operational availability model depicts respectively RBD model physical server DBMS replica model adopt series arrangement available component operational assume component availability reliability estimate denotes availability reliability component RBD model physical server DBMS replica image physical server compose hardware HW operating OS hypervisor hyp DBMS replica model contemplates virtual machine VM nosql DBMS  component respective MTTF mttr component availability obtain equation described sect model reduce approximate MTTF mttr reduce denominate  availability similarly  availability obtain model arrangement availability reliability estimate denotes availability reliability component RBD model image physical server CONS RF database replica operational availability obtain performability model depicts propose GSPN model compose building availability client arrival consistency performability model image availability contemplates physical server physical DBMS replica replica  pup denote physical server replica operational respectively physical server replica RF transition   denote failure   maintenance transition delay MTTF mttr subsystem estimate RBD model depict besides transition adopt infinite server semantics  failure server similarly  denotes failure VM replica DBMS replica immediate transition  guard expression verifies physical server unavailable DBMS fails minimum amount physical server operational besides inhibitor arc   recovery DBMS replica unless physical server available model adopts constant CONS positive integer denote consistency immediate transition   failure operation due lack server guarantee consistency inhibitor arc perform verification client arrival periodic user request transition  queue client request accepted  consistency transition  coordinator communication node execute operation adopt infinite server semantics inhibitor arc guarantee transition enable operational server consistency whenever server fails consistency cannot guaranteed failure response return transition  amount DBMS node consistency perform operation successful response return transition  performability model adopt estimate availability latency successful operation propose model availability throughput estimate resp associate transition  successful response latency experimental experimental demonstrate practical feasibility propose model technique model validation related availability latency described adopt model evaluation mercury  former integrate model environment allows creation RBD fault markov chain spn model  specialized evaluate stochastic petri net model GSPN adopt mercury evaluate RBD model  GSPN model latter faster concern numerical evaluation model validation validation perform demonstrate accuracy RBD GSPN model adopt environment  platform virtual machine VM nosql DBMS client vms utilize debian operating OS dual core cpu regard ram memory client VM 4GB DBMS 8GB adopts cassandra DBMS RBD validation  DBMS GSPN validation DBMSs documentation feature feasible data DBMS adopt demonstrate conceive model utilized distinct DBMSs quorum consistency RBD model RBD model validation account series arrangement physical server DBMS adopt model fault injection depicts component respective   reduce factor validation purpose exponential distribution assume algorithm fault injection script component respective recovery failure randomly generate execution interrupt unavailable restore repair randomly generate distinct thread algorithm adopt physical server DBMS algorithm script monitor available loop performs periodic communication DBMS service equivalent roughly account acceleration factor execute utilized technique described calculate confidence interval availability mercury RBD model estimate availability confidence interval statistical evidence refute equivalence propose model MTTF mttr model component performability model sake validation model utilizes replication factor machine consistency server failure operation account yahoo benchmark ycsb utilized assume uniformly distribute workload client request sample operation sample related central limit theorem concerned depicts obtain activity transition GSPN model transition performability model validation model evaluate stationary analysis latency successful response estimate confidence interval obtain measurement statistical evidence model evaluate availability latency doe approach factorial rank response due factor rank descend account absolute besides considers interaction interaction usually negligible availability account factor consistency con replication factor physical server hardware MTTF hardware mttr hardware physical server due hardware component skilled maintenance crew regard software component depicts adopt fix MTTF mttr rank downtime DT visualization related availability variation assume span downtime rank interaction downtime factor con interaction responsible availability variation adopt although generate due violation quality service agreement loss user physical server significant impact availability almost adopt hardware MTTF mttr contribution min treatment downtime min availability considerably reduce consistency account redundant machine accessible replacement fail node additional physical machine improve availability treatment availability adopt consistency besides depicts plot availability consistency downtime approximately per plot availability image availability latency considers doe factor account operation consistency con successful response resp coordinator communication replication factor physical server MTTF mttr respectively DBMS replica MTTF mttr client request constant resp utilized validation reduction account denote capacity con ass influence consistency server performance rank interaction latency successful operation coordinator communication consistency con important contribution performance amount server operation prominent influence performance due importance con interaction interaction rank interaction latency replication factor interaction significant role performance however redundancy important availability depends consistency availability rank adopt model successful latency doe treatment associate consistency communication node execute operation visualization depicts plot performance consistency latency plot latency image reduce coordinator communication response improve latency adopt designer ass procurement machine component network capacity discussion experimental demonstrate importance assess availability performance distinct consistency storage unavailability consistency con replication factor influence direction specifically server improve availability consistency decrease availability another situation related physical server availability however unavailability besides model evaluation failure repair influence availability regard performance latency prominent requirement consistency important influence performance replication factor remarkable impact adopt associate parallel execution replica coordinator communication important factor server responsible request DBMS replica assist designer instance decision configuration implement modify storage conclusion storage service data access performance availability fundamental non functional requirement service nosql DBMS commonly adopt storage eventual consistency improves performance availability distinct consistency utilized differently impact behaviour storage service analytical model RBD GSPN evaluate storage service nosql DBMS model estimate availability latency distinct consistency DBMS replica propose model decision modify implement prototype costly limitation approach evaluation operation requirement obtain model parameter MTTF mttr data cannot designer adopt estimate perform desire experimental demonstrate consistency important factor cannot neglect storage unavailability performance impact future develop technique ass impact consistency consumption storage service indeed consumption concern due environmental sustainability therefore designer additional storage assessment