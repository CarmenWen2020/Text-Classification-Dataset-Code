recent dpdk data development kit data development intel focus performance processing data packet network application performance packet framework widely improve efficiency data transmission cluster polling dpdk waste cpu cycle consumption cpu usage impact performance application host although technology DVFS dynamic voltage frequency dynamically adjust operating frequency voltage chip accord compute application chip achieve purpose lpi idle technology circuit cpu core idle reduce consumption adjust cpu voltage frequency performance degradation application thread technology promising reduce cpu usage consumption however challenge appropriate thread duration cannot obtain accurately propose model optimal thread duration challenge model balance thread cpu usage transmission efficiency obtain optimal duration transmission performance threshold propose model significantly reduce thread cpu usage generally communication performance slightly reduce cpu utilization reduce introduction proven performance packet framework effectively improve data transmission performance network data packet processing due overhead memory interruption etc kernel network protocol stack performance packet framework netmap intel dpdk PF ZC network packet processing propose excessive overhead kernel network protocol stack framework bypass kernel network protocol stack directly access network data packet user mode technology zero batch processing polling achieve processing data packet achieve core processing data packet rate throughput latency characteristic performance packet framework suitable network intensive scenario software router switch middleboxes  performance packet framework cpu multi core multi NIC bandwidth popular data transmission host data cluster although performance packet framework maintain data processing capability cpu usage useless waste polling technology thread processing packet endless loop data data thread empty loop empty loop usage cpu core network intensive scenario cpu cycle consume polling data processing transmission data data amount extra cpu cycle consume polling useless cpu severely thereby affect performance cpu data cluster network traffic continuous load characteristic  data cluster performance packet framework waste communication  dpdk gpu cluster improve communication performance conclude interaction AI data continuously periodic propose mention cpu usage waste operating OS management technology dynamic voltage frequency DVFS idle lpi performance packet framework dpdk function dynamically adjust cpu frequency moreover intel propose heuristic algorithm cpu frequency dynamic adjustment technology reduce consumption although dynamically adjust cpu frequency reduce consumption cluster environment reduce host cpu frequency affect performance service application host moreover conversion adjust cpu frequency cannot adapt rapid network traffic appropriate cpu operating frequency consumption  influence data network traffic periodicity AI data interaction appropriately cpu data amount data communication useless waste operating thread later collectively refer thread delay function thread cpu idle choice data transmission host cluster data data transmit thread cpu service application reduce unnecessary waste cpu reduce cpu usage affect performance application host OS framework correspond function delay function reduce cpu resource occupation thread idle however actual cpu usage performance data transmission transmission packet loss rate delay appropriate delay balance cpu usage data transmission performance therefore  model establish challenge contribution analyze cpu usage thread delay function OS dpdk analyze implementation principle thread delay function OS dpdk verify impact usage cpu core function dpdk reduce cpu core usage relationship batch data packet duration transmission performance cpu core utilization model data packet processing dpdk conduct experimental analysis experimental duration maintain performance data transmission greatly reduce thread occupation cpu resource however appropriate duration related batch data packet hardware application etc cannot obtain directly propose cpu usage model algorithm dpdk difficulty obtain appropriate duration establish thread processing model dpdk propose estimation algorithm data packet data transmission dimensional kalman filter optimal duration dynamic algorithm estimate data packet data transmission analyze calculation algorithm algorithm correspond acceptable calculation verify performance approach scenario apply algorithm previously BPCM performance reduce cpu core usage maintain performance data transmission greatly reduces cpu usage dpdk reduces impact dpdk host application remainder organize sect introduce technical characteristic dpdk advantage disadvantage cpu management technology DVFS lpi OS thread delay function OS dpdk sect establish analysis model dpdk obtain relevant performance indicator thread empty polling rate parameter characterize actual cpu utilization discus relationship batch packet duration transmission performance cpu core utilization propose model algorithm optimal duration introduce detail sect sect evaluate performance propose cpu usage model algorithm finally conclusion discussion drawn sect background introduce technical characteristic dpdk reveal performance secondly related reduce cpu usage introduce DVFS lpi management function dpdk thread delay function OS dpdk discus underlie implementation principle performance finally experimental comparison conduct verify thread function greatly reduce cpu usage thread without affect transmission performance dpdk BPCM traditional kernel network protocol stack unnecessary interrupt due multiple user mode kernel mode reduces performance network recent dpdk performance packet framework flourish dpdk directly interacts hardware user mode bypass performance kernel network protocol stack increase network mainly technology data packet processing zero directly access dma data NIC user mode data copying kernel mode user mode reduce consumption cpu resource data copying reduce polling cpu interrupt NIC directly poll buffer data eliminate amount delay frequent interrupt however data thread poll continuously additional cpu overhead batch processing multiple data packet polling reduce spent data packet moreover batch processing improve cache rate prefetch efficiency prefetch accuracy thereby reduce cpu advantage dpdk developed BPCM previous research BPCM dpdk technology communication node gpu cluster gpu cluster server cpu participate compute task relatively idle intention BPCM idle cpu resource communication gpu cluster feature dpdk multiple cpu core multiple network communication model suitable scenario BPCM technical advantage dpdk technical characteristic realize ordinary network layer switch hardware physical bypass connection conflict traditional network architecture avoid inefficient traditional protocol stack customize efficient transmission protocol user bandwidth multiple physical network superimpose abstract bandwidth user technical characteristic dpdk polling cpu utilization similarly phenomenon inherit BPCM ensure data transmission reception data polling mechanism cpu realistic scenario amount data transmission continuously periodic therefore periodicity phenomenon optimize polling mechanism reduce cpu utilization DVFS lpi management dynamic voltage frequency DVFS technology essential feature almost computer hardware voltage accord cpu workload reduce generate cpu core adjust cpu operating frequency idle lpi technology circuit bus cpu core idle however switch suitable switch scene dpdk management function management function dpdk allows user application dynamically adjust cpu frequency dpdk governor configure user user application  prompt kernel adjust cpu frequency accord strategy define user application linux OS kernel  module cpu frequency logic core devote achieve DVFS lpi server management module intel dpdk reduces consumption adjust cpu operating frequency effective operating however applicable reduce cpu frequency achieve host data cluster reduce cpu operating frequency reduce cpu usage dpdk reduces performance service application server application thread function suitable scenario packet polling thread cpu cycle affect performance service application reduces cpu usage polling dpdk discus delay thread thread delay linux OS various delay function pthread thread model delay function usleep  alarm etc accurate usleep accurate microsecond  accurate nanosecond actual implementation  alarm linux implement kernel mechanism affected implementation linux kernel cannot achieve nanosecond precision description  accuracy linux linux alpha improvement cpu technology accuracy improve dpdk thread delay function rte pause rte delay rte delay rte delay rte delay  thread model dpdk implement basis pthread model OS therefore delay function OS dpdk environment newer version linux kernel dpdk relationship delay function implementation relationship delay function image delay function dpdk implement OS function pause timer precision OS alarm function precision  nanosecond newer OS version implementation usleep link  precision microsecond function dpdk rte pause rte delay rte delay rte delay implement pause OS implement delay spin thread cpu resource dpdk experimental function rte delay version  function OS cpu core version rte delay function therefore usleep function OS instead rte delay function dpdk implement  function cpu usage delay duration data image rte delay function dpdk usleep function OS experimental comparison dpdk environment cpu core receives data network function thread dpdk logic core data model physical network intel gigabit network specific experimental environment described detail sect usage cpu core correspond delay duration delay rte delay function dpdk usage cpu core remains realization logic underlie spin spin release cpu resource cpu however usleep function OS occupancy cpu core decrease duration increase cpu core usage rate usleep usleep due error usleep function experimental environment situation data data packet batch cpu core utilization rate packet loss rate receiver delay duration receiver usleep function packet loss occurs duration sender therefore sender delay interval transmission performance rte delay function dpdk usleep function OS statistical rte delay function dpdk statistical usleep function OS transmission performance dpdk delay function data image transmission performance OS function data image absence packet loss appropriate delay duration receiver affect transmission performance increase delay rte delay function dpdk usage rate cpu core decrease however usage cpu core usleep function OS decrease duration increase performance OS usleep function possibility cpu usage dpdk duration affect transmission performance usage rate cpu core greatly reduce useful reduce cpu usage impact performance host application delve function dpdk achieve cpu usage analytical model establish analysis model experimentally analyze impact duration cpu usage transmission performance analysis impact batch packet duration actual cpu usage transmission performance moreover propose indicator reflect actual efficiency cpu core actual cpu usage indicator obtain thread usage cpu core reference reduce cpu usage framework framework dpdk framework data node data node processing data node data node simulates communication actual communication node data packet thread dpdk logic core responsible data packet public buffer public another data packet thread dpdk logic core continuously data packet sends public buffer public thread fails fetch data packet public buffer public node packet thread dpdk logic core continuously receives packet RX buffer thread fails packet otherwise packet public buffer public recv another data packet consume thread dpdk logic core responsible data packet public buffer public recv release user communication application simulated data packet generate thread data packet consume thread occupation cpu core resource framework image model description analyze execution logic data thread dpdk logic core mathematical model establish loop approximately express consume dpdk batch function processing packet empty polling data thread dpdk logic core loop rte eth burst rte eth burst function consumption regardless data packet express consumption rte eth burst rte eth burst function data consumption rte eth burst rte eth burst function data loop data loop data related hardware platform hardware platform loop data thread dpdk logic core batch packet processing related actual business calculation processing batch data packet approximately express loop data loop loop data loop data satisfy relationship entire thread compose regard constant related specific hardware platform business logic useless consumption thread dpdk logic core assume fix entire thread reduce duration increase duration useless thread propose indicator empty polling rate dpdk parameter characterize actual usage cpu core indicator propose proven effective subsequent analysis batch packet average consumption data packet batch function dpdk batch packet consumption data packet batch function data batch consumption packet batch function packet batch function packet packet consumption increase batch increase reflect advantage zero address transfer dpdk batch affect previous model consumption batch image transmission performance OS thread function usleep duration affect transmission performance reveals relationship duration receiver transmission performance duration sender fix conclude packet loss appropriate duration receiver affect transmission performance discus relationship duration sender transmission performance receiver receiver usleep receiver function usleep transmission rate packet loss rate sender function packet duration sender receiver function although transmission rate packet packet loss duration packet loss sender moreover transmission important feasibility transmission performance duration sender data packet trend duration sender transmission performance data packet packet loss rate correspond duration sender zero data packet packet loss rate correspond duration sender zero transmission reduce duration sender increase transmission packet loss rate decrease trend duration transmission performance sender image cpu usage usleep cpu usage verify impact usleep transmission performance cpu usage receiver sender batch data packet usleep receiver sender reduce usage cpu core empty polling rate reduce although amount packet loss packet loss rate remains  usleep sender usleep receiver packet loss rate increase  however transmission decrease cpu usage rate greatly reduce inaccuracy usleep error experimental environment impact usleep transmission performance cpu usage transmission performance cpu usage sender discus impact sender duration transmission performance cpu usage usleep receiver cpu usage empty polling rate sender duration transmission packet loss rate data packet almost transmission decrease duration gradually decrease duration sender increase packet loss rate decrease decrease cpu usage empty polling rate sender decrease duration sender increase empty polling rate decrease faster cpu usage stage duration sender transmission empty polling rate faster phenomenon occurs duration sender duration correspond transmission performance threshold transmission performance cpu usage sender packet image transmission performance cpu usage sender packet image transmission performance cpu usage receiver explore duration receiver transmission performance cpu usage fix duration sender accord packet sender duration packet loss rate receiver without usleep zero packet sender duration packet loss rate receiver without usleep zero therefore packet duration sender packet duration sender constant transmission decrease duration gradually decrease duration receiver increase however packet loss rate increase duration receiver increase cpu usage empty polling rate receiver decrease duration receiver increase empty polling rate decrease faster cpu usage stage duration receiver transmission rate packet loss rate soar phenomenon occurs duration receiver duration correspond transmission performance threshold transmission performance cpu usage receiver packet image transmission performance cpu usage receiver packet image empty polling rate cpu utilization generally cpu usage thread percentage cpu occupy thread cpu cpu usage statistic cpu occupy user thread OS calculation amount moreover calculation accurate applicable thread waste cpu usage scenario within dpdk accord mathematical model establish sect thread dpdk logic core cpu usage rate approximately express empty polling rate model propose statistic useless empty polling thread reflect proportion useless cpu consume cpu thread cpu usage rate reflect actual cpu consume percentage cpu thread exclude empty polling rate intuitively reflect thread duration useless cpu consume thread cpu usage rate due error function error empty polling rate duration zero actual duration exists empty polling rate model calculate zero affect model reality probability duration zero efficient dpdk communication explore reduce useless consumption thread dpdk logic core impact application relationship duration transmission performance cpu usage obtain analysis sect combine actual application requirement cpu model algorithm apply dpdk introduce model algorithm detail duration empty polling rate visually relationship duration empty polling rate thread dpdk logic core timing diagram rectangular loop loop accord task batch processing packet rectangle rectangle deeper longer duration fix transmission arrival interval batch packet fix interval rectangle duration easy perform multiple empty polling packet batch equation satisfy duration express transmission performance threshold within reasonable increase duration reduce loop reduce loop reduce consumption empty polling appropriate duration research focus timing diagram image usleep sect experimental usleep receiver sender greatly reduce cpu usage thread increase packet loss rate however transmission hardly usleep OS error accuracy experimental platform error accuracy related hardware configuration host cannot calculate accurately usleep receiver sender reduce cpu usage dpdk optimal moreover empty polling rate thread therefore optimal duration dynamically optimal duration sect packet transmission performance threshold transmission performance threshold increase packet increase obtain optimal threshold specially dynamic algorithm algorithm stage estimate packet transmission dynamically optimal duration introduce algorithm detail packet estimation due network application packet transmit network packet batch processing dpdk packet batch moreover packet network correlate within therefore optimal estimation packet transmission network data affected factor parameter traditional linear kalman filter widely algorithm educate prediction uncertain dynamic various interference kalman filter actually moreover ideal kalman filter continuously advantage memory usage previous historical data kalman filter suitable therefore apply kalman filter prediction algorithm estimation algorithm packet scenario packet estimation determines memory characteristic estimation algorithm therefore suitable kalman filter packet estimation algorithm kalman filter algorithm cannot directly packet estimation scenario modify apply packet estimation scenario introduce detail packet estimation algorithm dimensional kalman filter estimate packet establish model packet processing thread loop rectangle thread loop rectangle packet processing darker longer duration packet estimation dimensional kalman filter image batch packet packet batch average packet variance packet respectively packet network correlate within define average define variance predict packet calculate dimensional kalman filter define kalman filter measurement kalman filter observation kalman gain kalman gain predict deviation related deviation finally update measurement deviation introduction mathematical model dimensional kalman filter packet estimation packet estimation algorithm kalman filter dimensional kalman filter algorithm combine statistical characteristic packet calculation described detail algorithm transmission estimation research goal reduce cpu usage useless waste maintain transmission performance therefore transmission packet loss rate crucial reference indicator dpdk directly obtain transmission packet loss rate conventional obtain calculate statistical establish mathematical model implement interface research however scene performance sample accuracy easy fluctuate error therefore establish model dimensional kalman filter estimate transmission sect transmission decrease packet loss rate increase moreover packet loss rate cannot obtain scenario transmission transmission performance transmission estimation dimensional kalman filter image define data transmission interval transmission network correlate within define average define variance transmission estimate dimensional kalman filter define define kalman filter measurement kalman filter observation kalman gain redefine transmission estimation algorithm longer accurate calculation transmission therefore deviation zero predict kalman gain predict deviation related deviation finally update measurement deviation introduction mathematical model dimensional kalman filter transmission estimation transmission estimation algorithm kalman filter dimensional kalman filter algorithm combine statistical characteristic transmission calculation described detail algorithm optimal duration dynamic conclusion sect appropriate duration reduce cpu usage useless waste maintain performance transmission appropriate quickly accurately appropriate define transmission performance threshold however hardware application environment appropriate duration therefore algorithm optimal duration dynamic hardware application environment packet correspond transmission performance threshold increase packet increase therefore establish packet assist transmission performance threshold packet byte detailed introduction actual packet related ethernet communication standard namely max packet actual query maximum duration correspond packet max transmission correspond query maximum duration neither although error likely although error estimate packet estimate transmission duration optimal duration dynamic image obtain max correspond accord estimate tolerance transmission estimate operation perform correspond otherwise max correspond correspond update operation perform otherwise finally correspond calculation described detail algorithm consume optimization optimal duration dynamic algorithm cpu model dpdk requirement performance calculation algorithm exceeds limit impact performance therefore meaningful optimize consumption algorithm propose introduce consume optimization algorithm detail packet estimation algorithm complexity batch generally fix dpdk complexity related theoretical bandwidth physical network packet gigabit network gigabit network secondly transmission estimation algorithm complexity complexity decisive role complexity packet estimation algorithm transmission estimation algorithm appropriate physical link affect accuracy algorithm reduces calculation algorithm finally optimal duration dynamic algorithm complexity complexity update update update content subsequent therefore update operation structure array structure update traverse remain entire array packet segmentation packet difference duration transmission packet merge reduce update operation combine link basis update operation remain link greatly reduces operation structure structure image evaluation evaluate performance algorithm propose sect apply algorithm previously BPCM performance environment BPCM extract data analyze verify performance propose experimental environment BPCM cluster construct server gigabit layer switch detailed server configuration information server core intel xeon  cpu intel gigabit ethernet network BPCM developed dpdk version configure 8G memory queue queue queue adjust server configuration information evaluation packet estimation algorithm verify performance packet estimation algorithm sample packet estimation thread BPCM estimate packet byte BPCM packet exceed byte data packet byte overall sample data predict filter prediction interference fluctuation observation variance zero predict observation reliable data variance variance zero variance credibility closer predict consistent core kalman filter evaluation packet estimation algorithm image evaluation transmission estimation algorithm verify performance transmission estimation algorithm sample transmission estimation thread BPCM estimation predict transmission variance predict closer evaluation transmission estimation algorithm image evaluation transmission performance threshold algorithm usually optimization theory direction decisive role performance optimal algorithm dynamic algorithm optimal duration direction gradually increase become factor affect performance accuracy moreover packet accuracy packet interval interval interval array affect accuracy affect increase gradually decrease packet increase decrease relationship optimal algorithm image accuracy algorithm optimal duration BPCM data packet byte byte proportion batch actual network environment proportion batch proportion acceptable influence accuracy optimal duration processing cycle optimal duration correspond byte infer maximum packet byte acceptable BPCM finally BPCM parameter byte parameter parameter parameter evaluation transmission performance cpu usage verify dpdk usleep performance cpu usage usleep somewhere environment BPCM packet byte byte byte byte byte correspond transmission cpu usage empty polling rate packet loss rate comparison transmission cpu usage sender image comparison transmission cpu usage receiver image comparison packet loss rate image cpu utilization dpdk maintain receiver sender however cpu usage cpu usage dpdk cpu usage reduce moreover empty polling rate thread reduces dpdk function cpu usage thread cpu consumption although transmission dpdk acceptable packet byte transmission packet byte transmission packet loss rate dpdk packet loss rate increase however packet loss rate magnitude   within packet loss rate  gigabit network ignore conclusion aim useless cpu resource waste dpdk popular performance packet framework cluster environment propose cpu usage model thread technology analyze implementation principle multiple thread delay function OS dpdk verify impact usage cpu core experimental thread technology promising however challenge obtain appropriate thread duration environment challenge conduct explore relationship batch packet duration transmission performance cpu core usage consumption establish model packet processing dpdk conduct experimental analysis experimental appropriate thread duration greatly reduce thread occupation cpu resource maintain data transmission performance however appropriate duration related batch packet hardware configuration application processing cannot directly accurately obtain aim appropriate duration cannot accurately obtain propose dynamic algorithm optimal duration algorithm performs dynamic packet transmission estimate dimensional kalman filter algorithm analyze calculation algorithm appropriate algorithm parameter setting finally apply algorithm previously BPCM verify performance experimental reduce cpu usage rate transmission performance slightly reduce particularly network idle data transmission valuable cpu resource cluster environment dpdk propose reduce useless waste cpu usage empty polling dpdk reduce adverse service cpu usage dpdk currently dpdk widely network traffic generator 5G network packet processor device consumption urgently research apply cpu model propose device useless consumption bypass parallel communication mechanism parallel communication technology multiple network cluster dpdk