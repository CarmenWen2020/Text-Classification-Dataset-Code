jpeg image compression algorithm requisite application video measurement digital cinema exist implement jpeg compression parallel gpu entropy cod variable cod sequential implementation however entropy cod essential jpeg compression typically proportion implement cpu tackle propose efficient parallel entropy cod EPEnt parallel jpeg compress propose conduct entropy cod parallel cod shift stuff specifically accord characteristic image component devise thread warp function cod stage improve efficiency guarantee image quality respectively apply propose parallel jpeg compression evaluate performance compute unified device architecture cuda experimental demonstrate sequential implementation maximum speedup ratio entropy cod without affect compress image quality meanwhile jpeg compression efficiency increase parallel speedup ratio introduction continuous development performance compute hpc application image compression gain considerable attention video measurement digital cinema occasion numerous image obtain rapidly source image quickly however directly transmit characterize amount data redundancy therefore jpeg compression algorithm irreplaceable role hpc application owe compression efficiency unfortunately sequential implementation image cannot guarantee performance hpc application explore increase image compression without affect compress image quality gpu launch thread simultaneously  suitable parallel compute significantly sequential algorithm hpc application parallel improve efficiency image representation recognition image reconstruction super image resolution parallel computation gpu become extensive cuda compute OpenCL technology become mature mainly cuda popular parallel computational framework owe convenient efficient operating platform therefore implement jpeg parallel algorithm cuda requirement hpc application realize jpeg compression algorithm conversion sample 2D discrete cosine transform dct quantization   scan entropy cod 2D dct entropy cod important consume remove spatial redundancy structural redundancy image data respectively diagram jpeg image compression algorithm image researcher concentrate parallelize jpeg algorithm gpu 2D dct promising achieve acceleration efficiency propose dct parallel algorithm accelerate data processing obtain satisfactory parallel dct algorithm jpeg algorithm parallel dct algorithm achieve speedup sequential dct algorithm developed optimize parallel implementation dct algorithm OpenCL parallel data transform propose replace parallel dct algorithm efficiency image compression quality parallel dct algorithm propose substitute parallel dct algorithm achieve faster however none approach completely realize parallel entropy cod bottleneck parallel jpeg image compression entropy cod indispensable role jpeg image compression aim remove structural redundancy image data jpeg algorithm execute cpu complex entropy cod inefficient storage compute resource therefore essential parallelize entropy cod improve performance jpeg compression however challenge due entropy cod complicate procedure classic algorithm adopt generate cod sequential implementation optimal parallel entropy cod strategy obtain cod quickly cod variable therefore entropy cod perform parallel output image data furthermore connection cod byte simultaneously possibility access collision fault due challenge mention researcher entropy cod cpu jpeg parallel algorithm employ however researcher focus aspect propose parallel entropy cod jpeg image compression cuda generate image data parallel utilize cod instead image image adopt verify performance limit application atomic operation fully variable encode limit gpu performance introduce parallel prefix sum algorithm realize parallel huffman encode encode improve significantly sequential implementation algorithm cod obtain quickly vast amount temporary memory consume calculate cod encode firstly complex therefore easy directly employ algorithm jpeg entropy cod developed efficient parallel codebook construction novel reduction encode scheme implement multi thread huffman encoder extensive datasets conduct evaluate superior performance data structure gap array accelerate huffman decode although algorithm realize parallel encode variable code challenge parallel entropy cod mention adequately address recently cuda powerful image parallel processing library nvidia performance primitive NPP version NPP already functional interface parallel entropy encode without source code sequential implementation performance improve however parallel entropy cod bottleneck parallel jpeg image compression focus overcome challenge develop efficient parallel entropy cod EPEnt propose mainly contains cod shift stuff cod phase image encode generate correspond cod moreover accord characteristic image component warp thread strategy improve cod stage efficiency shift phase appropriate shift operation cod ensure bitstreams seamlessly stitch image data finally shift stitch image data stuff phase propose EPEnt evaluate multiple achieves promising speedup image quality meanwhile performance jpeg image compression improves significantly propose employ overall contribution summarize propose efficient parallel entropy cod EPEnt improve performance jpeg image compression propose mainly consists phase cod shift stuff accord characteristic image component respectively warp thread strategy cod stage improve entropy cod efficiency apply propose parallel jpeg compression algorithm experimental demonstrate achieve competitive ratio image quality remainder organize describes entropy cod cuda background introduces propose experimental performance evaluation sect finally conclusion outline future sect background jpeg entropy cod 2D dct transforms image spatial domain frequency domain remove spatial redundancy entropy cod mainly adjusts code transform data improve compression ratio generate image data sequential entropy cod algorithm mainly contains stage differential pulse code modulation  encode RLE cod huffman cod detail procedure dimensional matrix transform dimensional array scan   dimensional array compose array DC coefficient remain alternate AC coefficient perform  RLE cod coefficient separately temporary code continuously huffman coder DC coefficient contains primary information generally immense however difference adjacent therefore  cod difference consequently define denotes image component described amplitude code obtain query DC huffman code obtain variable integer  described huffman code DC AC coefficient image code code constitute huffman code DC coefficient non zero AC coefficient described contains non zero AC coefficient code amplitude AC coefficient huffman code obtain query AC huffman code obtain employ  consequently entropy cod obtain encode DC coefficient AC coefficient huffman cod utilize huffman algorithm entropy cod stitch sequential image data cuda program model cuda gpu parallel compute architecture user easily program cpu gpu cuda cpu host responsible overall logic task schedule resource management cuda architecture gpu cpu device handle highly parallel compute task processing task parallel gpu kernel function subtasks parallel cuda thread thread equally amount thread warp warp contains thread execute instruction data therefore thread generally integral multiple organize grid fully utilize hardware resource cuda program consists multiple kernel function cpu sequential code cuda program model image cuda parallel entropy cod EPEnt algorithmic overview procedure jpeg compression perform aside entropy cod stage independently desirable parallel processing chiefly lack efficient strategy encode parallel owe variable cod thread correspond cod image data furthermore operation memory perform adjacent thread parallel implementation access violation therefore excellent parallel strategy cod image data address issue propose efficient parallel entropy cod EPEnt jpeg image compression fundamental EPEnt entropy cod conduct parallel cod shift stuff detail cod image encode parallel respective bitstream apparent contrast task load  component thread warp kernel function respectively efficient cod shift accord prefix sum algorithm PSA appropriate shift operation cod ensure adjacent bitstream seamlessly stitch image data stuff described shift stitch image data calculate via PSA illustration propose parallel entropy cod image noteworthy parameter offset calculate quickly phase EPEnt tackle PSA crucial role modify slightly implement task moreover detailed implementation sect pipelined execution scheme EPEnt encode transform data previously jpeg image contains component luminance component chrominance component  significantly specific contains primary information image pixel evidently affect perception image contrary chrominance component image information sensitive background attempt analyze difference cod task load component non zero coefficient directly determines task load target convert bitstream therefore typical standard image analyze task load functional relationship non zero coefficient image component summarize luminance component contains non zero coefficient workload thread perform nevertheless chrominance component  non zero coefficient efficiently encode thread distribution non zero coefficient image component image propose EPEnt cod strategy respectively devise  component difference strategy component encode cuda warp thread task  component algorithm detail warp cod strategy thread warp responsible encode adjacent coefficient thread performs  algorithm DC coefficient thread simultaneously RLE algorithm AC coefficient notably purpose RLE cod counting zero coefficient non zero coefficient instead counting zero directly introduce warp vote function ballot thread concert accomplish task afterward thread obtains bitstream correspond employ huffman algorithm RLE cod thread cannot obtain bitstream image data owe variable code EPEnt global memory  allocate bitstream temporarily memory adjust extra storage memory equivalent storage source image calculate bitstream  thread correspond allocate memory temp prefix sum adopt calculate bitstream   function avoid parallel conflict error mention utilize thread strategy encode  component algorithm cpu obtain counting zero coefficient obtain bitstream RLE huffman algorithm thread bitstream correspond  sequential therefore cod correspond  cod phase cod obtain kth output cod phase described cod visualization cod phase allocate temporary storage  cod correspond  image implementation shift cod correspond  parallel efficiency unfortunately cod integral multiple byte cod adjacent cannot stitch continuously incorrect image data therefore calculate offset cod appropriate shift operation ensure bitstreams stitch without separation obtain cod image data correspond offset easily compute cod calculate accumulate  output offset cod calculate inspire excellent parallel performance PSA introduce slightly modify obtain demand propose EPEnt detailed implementation PSA array generate output array perform inclusive exclusive scan respectively inclusive scan array prek sum described parallel prefix sum scan array image exclusive scan helpful propose prek compute exclusive scan contains sum previous define offset cod calculate exclusive scan furthermore entire image data parameter generate jpeg file obtain via inclusive scan therefore calculate parameter PSA output array inclusive scan parameter calculate merely output array algorithm shift cod utilize offset firstly offset cod calculate accord correspond  afterward perform shift operation cod byte accord related offset finally memory source affect shift shift byte cod newly generate byte byte temporary storage  therefore implement phase without extra storage addition xff byte jpeg file indicates identifier image data jpeg standard byte xff byte image data shift phase directly judge newly generate byte xff xff distinguish image data identifier noteworthy operation completes shift guarantee stitch continuously adjacent cod offset kth shift due xff byte shift similarly cod shift accord respective offset obtain visualization shift phase described shift bitstream shift cod xff byte image image data stuff cod  owe addition byte shift phase therefore conduct modify PSA compute image data obtain accord thread shift correspond location accurately image data allocate initialization however suppose adjacent thread bitstreams simultaneously access memory location  access violation error shift stitch image image component regard collection express image stuff parallel stuff operation perform generate image data shift collection  output parallel avoid access violation error parallel stuff operation already output AC DC coefficient zero shortest shift chrominance component luminance component therefore shift stuff operation byte access violation propose eventually image data parallel stuff phase transmit host memory storage besides image data transmit host generate jpeg file optimal strategy gpu tailor parallel compute parallel optimization strategy propose EPEnt efficiency choice thread significant impact execution kernel function optimal thread depends hardware therefore specify thread performance similarly previous thread automatically cuda api  function heuristically calculates achieves maximum occupancy function invoked thread cod shift stuff kernel respectively meanwhile image encode gpu apply compress format illustrates kernel execution versus achieve gpu occupancy thread varied  platform cuda api thread thread conversely trial error configuration thread yield minimum execution luminance component cod stuff kernel execute kernel perform thread however difference affect overall jpeg image compression performance  platform furthermore overhead cuda api noticeable impact performance employ cuda api selects optimal without trial error entropy cod kernel execution versus achieve occupancy thread varied image propose basically realize maximum parallel execution entropy cod parallel operation memory easy bottleneck cod attention balance usage memory memory optimization constant memory memory particularly cache broadcast characteristic constant memory propose huffman constant memory improve reading memory chip access memory access register memory PSA data transmission cpu gpu considerable influence performance heterogeneous bottleneck parallel algorithm achieve data transmission bandwidth  allocate lock memory host meantime multi technology utilized address transmission delay experimental experimental environment evaluate performance propose conduct comparison sequential implementation image quality consume sequential version source code  turbo implementation adopt modify comparison purpose jpeg library 2D dct implementation float implementation accuracy entropy cod highly optimize computer therefore image compression execute quickly cpu source code parallel implementation developed cuda mainly consists host program kernel code kernel code execute gpu jpeg image compression environment propose hardware software configuration heterogeneous platform consist multicore cpu gpu typical image employ compress jpeg image sample resolution format addition standard quantization image quality quantization coefficient experimental furthermore employ standard huffman entropy cod stage platform specification visual quality compress image parallel implementation sequential implementation cannot improve compression efficiency without quality compress image therefore evaluate efficiency propose EPEnt firstly image quality achieve parallel entropy cod sequential entropy cod respectively specific performance metric peak signal ratio psnr structural similarity index ssim introduce evaluation metric define image compress image respectively dimension image array pixel location donate image compress image respectively image standard deviation image  covariance image constant avoid error denominator psnr generally compress image distort ssim metric similarity image although calculation complicate ssim appropriate evaluate image subjective perception psnr psnr ssim compress image image previous image typical image datasets  pepper  image resize image obtain compress image apply propose sequential algorithm respectively correspond psnr ssim compress image compute evaluate image quality experimental image image compress entropy cod psnr significantly due image format information loss critical sample operation chrominance component however difference ssim indicates compression rate improve without affect subjective perception image image format employ importantly compress image quality obtain parallel sequential almost visualization sample format express therefore conclude compress image obtain propose quality sequential algorithm compress image quality comparison compress image image relationship consume image image directly affect consume entropy cod subsection unchanged merely image explore relationship image consume specifically source image compress sequential algorithm NPP reproduce EPEnt characteristic previous described sequential algorithm image compression standard jpeg implement cpu semi parallel version jpeg image compression algorithm implement entropy cod coordinate action gpu cpu NPP efficient classic parallel version jpeg image compression algorithm implement procedure gpu although achieve faster processing previous entropy cod stage performance bottleneck compression compression image precisely entire compression parallel implementation consists kernel execution data transfer host device execution entropy cod verify performance propose source image obtain compress image format summarizes compression image format image becomes compression sequential implementation increase significantly owe incomplete parallelization execution sequential implementation moreover transmission entropy cod intermediate data host device increase consumption affect overall performance although consume EPEnt NPP increase noteworthy NPP employ image compression execution entropy cod account proportion demonstrate execution significantly shorten propose adopt propose EPEnt complexity achieves performance advanced overall consume image format format parallel sequential consume image evaluate performance EPEnt cuda speedup relative sequential algorithm cpu calculate described sequential consume parallel consume cuda implementation firstly calculate parallel compression speedup compression kernel execution data transfer parallel entropy cod speedup calculate merely consume entropy cod performance improvement parallel NPP report calculate tpn TPE denote execution NPP respectively   ratio parallel relative sequential implementation compression gain cuda parallel program sequential cpu program image increase gpu achieve speedup apart due incomplete parallelization particularly encode image format speedup ratio format format EPEnt maximum speedup entropy cod obtain image format format format NPP speedup EPEnt increase format format format respectively therefore owe limitation entropy cod maximum speedup gpu merely achieve speedup perform jpeg compression algorithm entirely importantly jpeg compression efficiency increase NPP speedup ratio speedup cuda parallel entropy encode relative sequential algorithm image NPP improvement report image relationship consume image quality standard quantization image quality introduce quantization coefficient factor quality compress image increase quantization coefficient reduce image quality increase accordingly quantitatively analyze image obtain compress image propose sequential algorithm respectively image quality generate afterward calculate psnr ssim compress image illustrates compress image obtain guarantee quality unaffected variation image quality non zero coefficient grows increase cumbersome cod task prolong consumption entropy cod stage similarly sect evaluate obtain propose compression comparison involves sequential algorithm NPP execution comparison parallel sequential algorithm execution accumulate execution kernel data transmission cpu gpu graph format gpu implementation achieve significantly performance sequential cpu execution performance gpu promising propose EPEnt apply jpeg compression algorithm considerable reduction execution achieve prof propose effectively reduce complexity overall consume image quality format format parallel sequential consume image similarly compute speedup parallel utilize formula define performance boost relative NPP quantify formula report summarizes performance parallel regard entropy cod entire conclude speedup achieve parallel specific image encode format speedup invariably format format moreover maximum speedup compression achieve format propose EPEnt adopt NPP performance improvement achieve jpeg compression therefore propose parallel entropy cod influential role parallel jpeg image compression speedup cuda parallel entropy encode relative sequential algorithm NPP improvement report image impact cod efficiency sect cod kernel function respectively component  component conduct verify specific strategy encode image data format thread EPEnt warp EPEnt combination thread warp EPEnt cod regard execution propose EPEnt obtains performance EPEnt data feature luminance component chrominance component maximizes resource utilization gpu comparison strategy cod phase image conclusion efficient parallel entropy cod jpeg image compression cuda architecture propose phase cod phase shift phase stuff phase cod phase cod parallel characteristic component  component kernel function encode shift phase code shift ensure encode adjacent stitch continuously output stuff phase propose typical image format experimental propose achieve significantly performance consequently propose readily suitable processing application optimize parallel jpeg image compression algorithm image quality future afterward extend implement parallel compression algorithm cuda jpeg mpeg