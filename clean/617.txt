recent computational  distribute environment application execute parallel lately fog compute compute environment apply data device preprocessing processing compute crucial issue task schedule issue address reduce consumption aware introduce dynamic voltage frequency DVFS technique reduce consumption addition construct valid task sequence hybrid invasive weed optimization culture IWO CA evolutionary algorithm apply experimental reveal propose algorithm improves algorithm consumption keywords fog compute task schedule consumption meta heuristic algorithm DVFS introduction technology internet iot compute developed compute environment analyze processing data crucial challenge environment therefore fog compute technology apply along iot unlike compute fog compute minimizes latency device node device remote server fog compute important role compute analyze enormous information data consumption concern compute distribute application enormous amount data server decrease network traffic portion compute perform site therefore amount data task compute server estimate billion device network traffic network future compute task schedule challenge distribute compute issue NP heterogeneous distribute compute environment application acyclic graph dag task schedule task schedule primary stage task application valid sequence finally mapping task available compute resource distribute obtain execution makespan application minimize makespan consumption distribute furthermore limitation consumption affect increase makespan application usually voltage makespan application minimize processor maximum achievable entire execution application task schedule heuristic evolutionary algorithm apply schedule application heuristic algorithm exploit schedule faster evolutionary however NP discover optimize meta heuristic evolutionary algorithm optimum recent fog compute environment address task schedule issue reduce consumption data addition minimize makespan application important aim research invasive weed optimization IWO along cultural evolution algorithm CEA exploit contribution research hybrid IWO CEA algorithm evaluate aware task schedule approach apply dynamic voltage frequency DVFS technique reduce consumption fog node maximize resource utilization propose task schedule approach fog compute organize aware task schedule algorithm review related overview definition model task schedule propose algorithm described detail experimental propose algorithm reveal eventually article conclude related task schedule distribute heterogeneous compute environment compute article generally focus reduce execution makespan application sometimes parameter reliability etc author aware aware algorithm task schedule heterogeneous compute algorithm combine aware task schedule algorithm performance monitor user flexibly therefore user reduce consumption objective algorithm recently task schedule algorithm environment reduce consumption service agreement SLA violation improve resource utilization workflow task compute user task compute via aware efficiently dynamic voltage frequency DVFS exploit minimize operating frequency various voltage schedule algorithm resource allocation task perform compute environment via DVFS technique algorithm requirement task allocates available resource efficiently propose considers performance besides furthermore SLA resource utilization approach author focus issue task schedule non linear parallel task meteorological environment compute resource research forecasting model algorithm utilizes DVFS technique reduce consumption maximize completion task DVFS enable efficient workflow task schedule algorithm  propose relatively inefficient processor merge reclaim slack merge  slack constantly initial schedule task obtain obtains makespan deadline calculate heterogeneous HEFT algorithm finally DVFS technique distribute task idle slot voltage frequency enhance efficient schedule  algorithm enhance along service agreement SLA non critical slack depict algorithm meeting SLA mention minimize makespan important issue task schedule heterogeneous optimization NP complex therefore recent metaheuristic evolutionary algorithm propose author invasive weed optimization IWO algorithm optimize task schedule IWO evolutionary optimization algorithm accelerates convergence heterogeneous cluster IWO task schedule  algorithm  aim advantage meta heuristic heuristic algorithm gain optimize task priority obtain IWO meta heuristic algorithm task allocation compute resource heuristic eft finally author task schedule approach enhance  improve task cluster compute propose optimal merit load deviation consumption fog node meta heuristic algorithm definition model task schedule fundamental concept model  explain model apply application application model propose algorithm workflow application schedule dag refer task arc respectively item node task item data dependency node denotes communication precedence successor workflow task precedence entry task task successor exit task task compute computation communication respectively entitle entitle dependent task allocate compute resource processor communication terminology application dag node illustrate instance addition heterogeneous processor DVFS enable appropriate priority execution processor various frequency depict computation task processor exhibit maximum frequency frequency switch ignore terminology task dag computation task processor processor failure rate processor failure rate task processor alternative approach normalize alternative criterion   task  processor  task   processor entry task predecessor exit task successor succ immediate successor task pred immediate predecessor task average computational task amount communication task task processor task processor actual task processor actual task processor processor  population computation task  processor processor propose algorithm mainly algorithm attains feasible optimal priority queue task schedule appropriate voltage frequency server via DVFS technique requirement maximum minimum frequency hybrid invasive weed cultural evolutionary algorithm apply propose algorithm task application reduce consume propose algorithm exploit DVFS addition algorithm simulated fog compute environment function propose algorithm initial population initialize random population IWO CA algorithm cultural evolution inspire social evolution developed reynolds optimization affect prior information domain HEFT processor allocation apply obtain fitness hybrid invasive weed culture algorithm apply task DVFS schedule termination checked algorithm mention algorithm algorithm function propose algorithm initial random population mapping task processor algorithm evaluate fitness termination satisfied sort apply hybrid invasive weed cultural algorithm fitness DVFS technique return optimal encode initial population encode mechanism algorithm comprise gene node valid precedence constraint display valid task dag approach population contains valid generate random voltage relative frequency  processor processor    task processor mapping task assign available processor population initialization phase recommend approach HEFT apply task processor mapping function HEFT approach task processor priority minimize makespan actual  aft application firstly est task processor compute HEFT obtain via secondly actual task processor calculate avail processor slack handy compute task queue afterward task processor acquire finally actual task processor obtain actual function discovers processor task processor decrease execution achieve dynamic voltage frequency DVFS technique described function DVFS voltage frequency available processor dynamically DVFS endeavor appropriate voltage frequency processor execution application voltage frequency compute resource instance resource voltage frequency invasive weed cultural algorithm task schedule heterogeneous compute NP algorithm exploit topological apply invasive weed culture evolutionary algorithm introduce invasive weed optimization IWO IWO evolutionary algorithm inspire weed algorithm population phase initialization reproduction spatial dispersal competitive exclusion review detail initial population initial population  algorithm affect performance algorithm significantly dag workflow task population satisfy precedence constraint task height distribution apply firstly minimum height task calculate maximum height obtain dag height distribution dag initial population algorithm generate height height task exceed  successor respectively image KB image strategy code distance reproduction spatial dispersal generation population fitness minimum maximum acquire spatial dispersal stage apply generate offspring offspring global optimization code distance technique exploit diffuse offspring discrete contrast code distance local optimization height distribution task image KB image instance strategy code distance strategy code distance strategy aim diversity population node operation node random closest task  successor guarantee precedence constrains translation interval specify task moreover array tag construct task translation task initialize entry exit task task array incremented firstly chosen operation node correspond array incremented movement task hence task task depict therefore task task movement displayed operation node node respectively afterwards integrate code distance adjustment terminate code distance obtain task entirely illustrates instance strategy precedence constraint code distance assume strategy code distance goal strategy local optimization propose algorithm code distance  apply height task  task priority height  enable exchange task height without violate precedence constraint via phase determination task height critical task exchange task height specific height compute task precedence limitation dag task randomly task height specify highlight task exchange cultural algorithm propose algorithm population IWO CA algorithm cultural evolution inspire social evolution developed reynolds optimization affect prior information domain cultural algorithm behavior population information population generation unlike genetic algorithm CE approach apply accelerate society adaptation environment cultural algorithm contains population belief cultural information model belief individual population population evolve parallel affected demonstrate communication channel define CA accept channel individual adapt belief channel influence population CA firstly population evaluate fitness function generation influence acceptance function population afterward adjust belief accepted finally IWO operator apply population variation phase algorithm indicates pseudocode CA addition fitness acceptance function specify belief population technique belief dynamic exploit belief adjust dynamic iteration achieve image KB image illustration population belief cultural algorithm algorithm cultural algorithm generation counter initialize population initialize belief evaluate fitness adjust accept variate influence population experimental performance propose algorithm examine consumption resource utilization obtain algorithm recent HEFT HEFT   random DAGs evaluate performance various develop algorithm program employ intel core cpu GB memory furthermore processor apply compute performance metric propose algorithm described average resource utilization average ecr ratio random DAGs random DAGs task fare generate application computation communication obtain random analysis DVFS utilized improve performance propose algorithm heuristic algorithm HEFT HEFT regard consumption algorithm iterate task average plot processor DAGs task respectively average resource utilization algorithm evidently propose algorithm outperforms HEFT HEFT   approach various increase task utilization ratio improve average consumption ratio ecr illustrate ecr indicates schedule algorithm performance accord improve propose versus algorithm exploit DVFS technique task schedule performance others image KB image ratio processor ratio algorithm DVFS HEFT algorithm illustrate algorithm regard   addition outcome algorithm ratio application propose algorithm improves ratio nearly conclusion aim grid fog compute research aware approach DVFS technique fog compute DVFS enable processor fog compute task voltage frequency slack addition hybrid IWO CA evolutionary algorithm exploit task without violate precedence constraint accord experimental noticeable obtain compute application pre deadline future task offload fog compute load balance compute resource formal verification apply correctness finally important factor trust privacy metric future