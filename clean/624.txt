kernel matrix vector ubiquitous engineering application however naive operation becomes prohibitive reduce computation introduce parallel provably operation delivers approximate within prescribed tolerance distinct feature ability evaluate kernel function offering interface user parallel approach target multi core memory machine implement openmp numerical demonstrate speedup core application geo statistic parallel deliver principle component analysis covariance matrix keywords kernel matrix vector multiplication covariance matrix multipole memory parallelism introduction compute kernel matrix vector kernel function non oscillatory translation invariant sufficiently smooth  singular  function exp formulate mathematically evaluate target source data  domain respectively associate application overlap algebraically matrix vector multiplication vector matrix computation arises engineering kernel statistical machine data assimilation  particle simulation boundary integral computational physic dislocation dynamic simulation etc compute naive evaluation operation prohibitive related important instance data regular grid evaluate exactly error fourier transform fft operation although fft extend handle non uniform data distribution efficiency decrease highly irregular distribution dimension 3D multipole fmm framework successfully apply non uniform data distribution fmm partition domain hierarchically subdomains exploit multi decomposition evaluation evaluate exactly calculation associate adjacent subdomains evaluate approximately calculation associate non adjacent subdomains overall procedure operation provable accuracy fmm derive specific kernel frequently computational physic derivation tedious impossible arbitrary  kernel function therefore algorithm developed evaluation kernel function classify consists approximate kernel function away origin polynomial legendre polynomial chebyshev polynomial consists compute equivalent density skeleton subdomain efficiently source theoretically approach justified potential theory kernel function fundamental non oscillatory elliptic partial differential equation contribution parallel implementation evaluate memory computation lagrange interpolation construct approximation kernel function unlike algorithm developed specific kernel function applies function successful application dislocation dynamic simulation  characterization application algorithm exists kernel function function anisotropic elasticity isotropic exponential function routine evaluate kernel function integrate easily code package iso geometric boundary obtain solver complexity earlier version code elastic formulation displacement discontinuity simulation micro  evaluate fmm machinery domain partition hierarchical fashion partition associate data structure node subdomain hierarchy traversal perform multipole coefficient associate node compute compact representation source correspond subdomain contains upward pas hierarchy local coefficient node compute multipole coefficient interaction node interaction adjacent fourth pre traversal perform accumulate local coefficient node leaf downward pas finally contribution adjacent subdomains evaluate exactly leaf node technically multipole local coefficient terminology fmm adhere counterpart algorithm rigorously define image KB image hierarchical decomposition domain associate structure translation operator MM ML introduce subdomain fourth hierarchy interaction parallel algorithm observation procedure computation multipole coefficient local coefficient upward pas downward pas embarrassingly parallel node computation local coefficient multipole coefficient embarrassingly parallel node evaluation contribution adjacent subdomains embarrassingly parallel leaf node parallel algorithm exploit task parallelism usually runtime implement satisfactory parallel speedup summarize parallel fmm 3D PBBFMM3D compute kernel matrix vector multiplication  kernel algorithm provably memory operation parallel implementation openmp target multi core memory machine nowadays node parallelism become increasingly important adoption multi core architecture serf basis multi node distribute memory implement code local essential curve extension core architecture gpus scheme reduce memory movement improve arithmetic intensity flop ratio code publicly available http github com  wang PBBFMM3D outline organize describes algorithm focus data dependency parallelism describes software architecture user interface accuracy PBBFMM3D conclusion parallel algorithm algorithm evaluate focus data dependency illustrate parallel strategy although code 3D 1D 2D pictorial illustration hierarchical domain decomposition multilevel approach hierarchical decomposition domain achieve linear complexity specifically  domain subdomains binary partition along coordinate subdomain recursively data subdomain prescribed constant hierarchical domain decomposition naturally associate octree data structure entire domain node subdomains hierarchy subdomain node interchangeably hierarchical decomposition generally non uniform adaptive uniform data structure PBBFMM3D parallel implementation reasonably efficient distribution extremely irregular uniform leaf node data PBBFMM3D empty node skip algorithm overhead uniform adaptive processing node node naturally define define interaction node pictorial illustration definition interaction hierarchical structure adjacent node subdomains hierarchy generally spatial dimension non adjacent node subdomains hierarchy node interaction generally spatial dimension separation variable rank approximation algorithm approximate kernel function polynomial interpolation target source focus situation inside non adjacent subdomains respectively technically discussion interpolation node interpolation node 3D tensor 1D index 3D index grid respectively definition lagrange basis polynomial lagrange basis polynomial 1D lagrange basis polynomial 3D tensor lagrange basis polynomial 1D definition polynomial  denote polynomial  obtain lagrange interpolation respectively construct approximation evaluation kernel function PBBFMM3D code option interpolation node namely chebyshev node equally node chebyshev node approximation nearly optimal polynomial importantly error decay kernel function analytic bound bernstein ellipse focus   axis sum equally node matrix toeplitz toeplitz matrix reduce memory footprint apply fft lagrange interpolation equally node converge smooth function  phenomenon approximation sufficiently accurate application scheme lagrange interpolation uniform node stabilize fitting polynomial fmm algorithm evaluate algorithm stage upward pas traversal perform compute multipole coefficient subdomain encodes information source subdomain leaf node particle PM translation execute source interpolation node respectively non leaf node MM translation execute interpolation node respectively interaction local coefficient node compute multipole coefficient interaction node local ML translation execute interpolation node respectively downward pas pre traversal perform accumulate local coefficient leaf node effectively transpose upward pas node local local translation execute interpolation node respectively leaf node local particle LP translation execute target interpolation node respectively interaction contribution evaluate exactly leaf node particle particle PP translation execute target source respectively summarize contribution calculate exactly contribution interaction approximate polynomial  contribution remain leaf node approximate coarser diagram illustrate although algorithm scalar operation illustration implement blas blas subroutine image KB image dimensional fmm target source calculation PP translation PM ML LP translation interaction PM MM ML LP translation remain leaf node interpretation reader refer web version article theorem computational memory footprint algorithm primary focus complexity computational ML translation naive matrix vector estimate storage ML translation operator ML translation bottleneck fmm implement acceleration technique PBBFMM3D theorem computational memory footprint computational memory footprint fmm algorithm suppose leaf node typically leaf node node algorithm node constant amount independent stage upward pas PM leaf node MM non leaf node non leaf node 3D MM 3D tensor vector multiplication interaction ML node interaction node 3D downward pas node LP leaf node 3D tensor transpose tensor MM vector multiplication interaction PP leaf node node generally 3D therefore computational complexity entire algorithm regard memory footprint node multipole coefficient local coefficient sum kernel function translational invariant precompute ML translation operator structure memory therefore memory footprint parallel algorithm analyze parallelism stage fmm algorithm implement parallel algorithm openmp api memory machine upward pas earlier upward pas traversal parallel traversal openmp task implement PBBFMM3D interaction ML translation independent node addition translation typically amount node therefore openmp parallel directive employ loop node ML translation PBBFMM3D downward pas earlier downward pas pre traversal parallel pre traversal openmp task implement PBBFMM3D interaction PP translation independent leaf node however translation heterogeneous due non uniform distribution target source PBBFMM3D openmp parallel directive employ loop leaf node PP translation schedule policy prior knowledge distribution parallel algorithm focus parallelize stage fmm algorithm exploit concurrency across stage principle interaction stage others update heterogeneous PP translation prioritize furthermore ML translation node multipole coefficient compute however implement efficiently typically task runtime refer interested reader acceleration technique interaction interaction usually dominate entire computation introduce acceleration technique PBBFMM3D homogeneous kernel kernel function homogeneous typically integer homogeneous kernel function interpolation grid fix relative domain ML translation operator constant hence operator leaf symmetry skew symmetry kernel function symmetric skew symmetric application source target therefore kernel matrix becomes symmetric skew symmetric kernel function implies PP ML translation operator node interaction ML translation recall definition ML translation operator interpolation grid node interaction PBBFMM3D option interpolation grid chebyshev node equally node chebyshev node svd compression ML operator employ approach translation operator numerically rank equally node ML operator toeplitz toeplitz matrix matrix unique entry apply vector fft multiple application evaluate multiple vector associate source PBBFMM3D vector grouped matrix input fmm algorithm allows cache friendly blas operation algorithm software description briefly discus software architecture PBBFMM3D focus feature algorithm python interface detail documentation http github com  wang PBBFMM3D code openmp api standard linear algebra library blas   library boost python library python interface PBBFMM3D 3D parameter creates hierarchical partition domain parameter domain  domain hierarchical partition interpolation chebyshev node equally node interpolation interpolation node svd truncation error error compression ML translation operator default prescribed accuracy entire computation member function function   ML operator  creates hierarchical partition correspond data structure 3D compute information regard source target target target source source associate source associate source member function  assigns source target leaf function correspond translation stage described kernel defines kernel function member function  homogeneous symmetric kernel function member function  data return image KB image PBBFMM3D 3D information regard hierarchical partition domain 3D compute implement fmm algorithm kernel describes kernel function python interface listing listing core interface python interface respectively evaluates standard gaussian kernel creates kernel gaussian implement standard gaussian function inherits 3D input parameter creates hierarchical partition domain computation output variable listing image KB image listing interface kernel gaussian implement standard gaussian kernel input parameter hierarchical partition compute target source associate vector vector evaluates output listing image KB image listing python interface listing customize kernel commonly kernel function already implement PBBFMM3D define kernel function straightforward listing implement  source target return function  homogeneous kernel symmetric listing image KB image listing define kernel function symmetric homogeneous vector structure float coordinate 3D numerical numerical PBBFMM3D accuracy sequential parallel scalability application  PBBFMM3D calculation covariance matrix focus kernel function function laplace equation 3D frequently computational physic popular choice covariance function gaussian perform linux server GB ram intel xeon platinum cascade core socket core socket code compile gcc implement version openmp standard code link intel mkl library version  library version parameter notation source target randomly generate uniform distribution cube interpolation determines accuracy algorithm interpolation node tensor node dimension unif equally node  chebyshev node hierarchical partition domain svd accuracy compression accuracy ML translation operator chosen prescribed accuracy notation euclidean distance source target accuracy sequential focus parameter fix increase accuracy PBBFMM3D refer precomputation memory footprint fix increase sequential relative error evaluate function kernel function respectively error define approximation construct implicitly PBBFMM3D kernel function analytic away origin error interpolation chebyshev node uniform node decay exponentially image KB image relative error interpolation unif  exponential decay error sequential respect increase linearly increase oppose quadratic increase evaluate naively image KB image sequential interpolation fix parallel scalability parallel PBBFMM3D core focus kernel function chebyshev node report parallel parallel scalability chose core PBBFMM3D baseline core serial version obtain approximately speedup core parallel PBBFMM3D kernel function chebyshev interpolation increase error respectively independent core  core core core core core core scalability PBBFMM3D sequence increase core fix breakdown stage upward pas interaction downward pas interaction stage nearly halve core image KB image parallel scalability breakdown stage algorithm define scalability correspond fix weak scalability core core respectively weak scalability PBBFMM3D fix per core increase particle proportionally core spent stage fmm increase amount increase core increase ideal runtime unchanged due linear complexity PBBFMM3D implementation achieve efficiency serial parallel application gaussian gaussian random grf theory widely interpolation estimation spatially correlate unknown grf estimate permeability underground critical   engineer grf covariance matrix prior information underlie unknown however practical application typically unknown dimension reduction technique principle component analysis obtain principle component employ PBBFMM3D compute truncate eigenvalue decomposition covariance matrix randomize algorithm calculate eigenvalue associate eigenvectors randomize algorithm evaluate target source operation accelerate PBBFMM3D optimal complexity data randomly generate data cube employ kernel function dimensional  kernel smoothness goal compute eigen covariance matrix matrix vector packed matrix matrix evaluate twice randomize algorithm randomize matrix matrix compute  subroutine intel mkl library multi thread core PBBFMM3D accelerate chebyshev node increase error eigenvalue compute PBBFMM3D accelerate respectively error respectively accelerate  application randomize matrix matrix therefore baseline allows speedup achieve leverage PBBFMM3D evaluate entry covariance matrix compute matrix matrix worth entire covariance matrix TB memory image KB image comparison randomize algorithm algorithm denote PBBFMM3D accelerate randomize algorithm compute eigen covariance matrix evaluate matrix vector packed matrix matrix twice timing available entire covariance matrix TB memory error accelerate PBBFMM3D accelerate evaluate entry covariance matrix linearly respect speedup becomes pronounce increase conclusion introduce PBBFMM3D algorithm software evaluate kernel matrix vector multiplication memory machine target kernel non oscillatory translation invariant function sufficiently smooth away origin user function routine return kernel source target kernel function already implement user specify homogeneity kernel symmetric skew symmetric active specific optimization algorithm memory data parallel algorithm implement openmp memory machine parallel scalability core achieve speedup application  accelerate random algorithm compute truncate eigen decomposition covariance matrix