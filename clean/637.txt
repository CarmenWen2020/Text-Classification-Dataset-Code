EasyPAP easy program environment parallel program EasyPAP feature 2D computation kernel invite parallelize pthreads openmp OpenCL mpi execution kernel interactively visualize powerful monitoring schedule computation assignment 2D tile thread focus algorithm data distribution diverse code variant tune multiple parameter richer exploration faster progress towards efficient lab assignment illustrate EasyPAP improves explore parallel program keywords parallel program visualization monitoring education openmp introduction decade performance compute community cop evolution parallel architecture massively parallel heterogeneous multicore machine software developer currently concerned core trend impact commodity hardware smartphones desktop machine computer parallel program integrate hpc undergraduate postgraduate expose parallel program identify priority european technology platform hpc strategic research agenda unfortunately parallel program intrinsically sequential program lack convenient easy familiar non determinism visualize parallel execution EasyPAP attempt attractive program environment facilitate discovery concept parallel program EasyPAP framework interactive visualization monitoring facility trace exploration utility focus parallelize 2D computation kernel pthreads openmp OpenCL mpi simd intrinsics EasyPAP easy implement multiple variant kernel understand influence parameter related schedule policy data decomposition undergraduate postgraduate lab session enjoy feedback graphical gain deeper understand parallel program computer architecture remainder organize parallel program  explains pedagogical framework EasyPAP environment associate described EasyPAP enhance parallel compute lecture introduce parallel concept lively interactive manner openmp OpenCL mpi assignment detailed project described discus pedagogical approach bloom taxonomy evaluation EasyPAP approach respect related finally conclude remark background motivation  topic related parallel program computer curriculum nonetheless undergraduate taught thread program context operating loosely couple activity concurrently familiar concept asynchronous execution synchronization semaphore hoare monitor curriculum parallel program introduce performance compute topic detailed parallel program span eleven attend lecture session workstation topic parallel program computer curriculum   topic  balance  fork model openmp express  parallelism schedule strategy regular irregular computation nest parallelism conquer algorithm graph dependent task specific application memory  conscious cache oblivious algorithm memory allocation thread mapping false data  architecture vector processing compiler auto vectorization simd intrinsics gpu  architecture OpenCL thread divergence memory coalesce reduction distribute  mpi iterative stencil loop approach parallel program principle engage activity topic address generally topic later assign wrap multiple aspect interfere within complex code instance introduce hardware cache influence data layout data traversal strategy cache ratio cache prefetcher false context multithreaded program optimize memory bound parallel kernel strive pedagogical interactively graphical output code colleague visualization understand concept visualization facility worth effort hardware specific aspect straightforward graphical illustration visualization saver quicker detection understand erroneous behavior parallel variant moreover animate graphical output increase motivation lab session adopt scientific approach explore optimization gradually apply code encourage conduct thorough influence parameter potential source inefficiency consolidated database 2D enable application almost topic taught parallel program lecture however database significantly improve application software core command interface become operational switch assignment moreover understand performance issue challenge profile parallel code tedious feature trace analyzer complex beginner observation EasyPAP framework allows various parallel paradigm pthreads openmp simd OpenCL mpi uniform environment EasyPAP integrates activity monitor trace analyzer visualize task associate data diagnose performance issue faster link data manipulate EasyPAP framework EasyPAP program environment relies SDL library interactively render 2D computation available linux mac OS EasyPAP philosophy focus computation kernel hiding implementation detail related program initialization code instrumentation interactive display EasyPAP typically adopt workflow implement prototype visually correctness glance overall parallel behavior monitoring inspect impact various parameter schedule computation behavior satisfactory perform multiple parameter estimate quality achieve speedup investigate speedup improve diagnose performance issue interactive trace analyzer detect schedule issue task implementation memory access conflict multiple variant code thoroughly analyze plot facility kernel variant EasyPAP function perform computation image kernel EasyPAP predefined kernel transpose invert blur  mandelbrot abelian  kernel easily kernel  file define function prefixed  compute illustrate content image access iteration sake simplicity EasyPAP image pixel access image macro image variant image kernel image image KB image action display screen display animation consist series image compute iteration animation pause slightly accelerate skip frame EasyPAP image unix dynamic linker facility appropriate function image computation pixel perform independently image kernel trivially parallelize develop straightforward openmp version incremental evolution sequential variant simply duplicate sequential variant rename image insert image directive image loop iterate recompile EasyPAP  image obtain graphical animation allows visually variant output faster accurately benchmark performance multiple variant invoked image option EasyPAP eliminates overhead graphical update simply report overall completion request iteration simplicity implement variant kernel essential feature EasyPAP parameter command argument convenient variant interactively automation script discus online monitoring code monitoring activate image option pop additional displayed activity monitor report load cpu load percentage amount spent computation duration iteration contrast performance monitor activity monitor reflect kernel behavior instance overhead update graphical account diagram report evolution accumulate idleness tile reflect tile assign CPUs iteration cpu assign activity monitor tile assign thread contiguous chunk accordance static loop schedule policy image KB image addition graphical kernel output monitoring mode introduces additional tile cpu monitoring screenshot obtain execution command image interpretation reader refer web version article teacher tile useful graphically illustrate loop schedule policy openmp examine loop schedule policy tile reveals opportunistic image policy whereas chunk assign thread decrease image policy image KB image execution openmp loop schedule policy impact assignment tile thread  trace analysis although monitoring facility greatly detect understand flaw execution kernel cannot capture subtle heterogeneity task duration implementation task dependency deeper analysis EasyPAP tile related profile tile coordinate cpu trace file visually explore interact trace EasyVIEW utility graphical interface subdivide widely adopt trace viewer gantt display per cpu sequence task selectable iteration tile compute cpu displayed timeline mouse task pop bubble display task duration display reduce image compute iteration thumbnail spin whenever axis mouse intersects task gantt correspond tile highlight reduce image localize computation consequence gantt mouse smoothly towards reveals tile compute addition toggle vertical mouse mode horizontal mode axis mouse allows selection cpu highlight tile compute displayed cpu allows coverage cpu multiple iteration locality computation across iteration image KB image EasyVIEW brings interactive exploration trace generate EasyPAP mouse task gantt diagram display duration bubble trace iteration openmp tile variant image task homogeneous duration around notable exception task compute cpu benefit cache EasyVIEW powerful understand schedule computation perform image consume computation evenly balance compute synchronization issue highlight series situation gpu program OpenCL although directive openmp OpenACC programmer seamlessly offload code accelerator gpu architecture associate execution model understand gpu program context parallel program OpenCL environment accelerator integration OpenCL EasyPAP framework consistently extends facility previous scope gpu program focus effort implementation OpenCL kernel interactively execution screen performance performance mode generate execution trace OpenCL initialization code hidden cope discovery hardware platform creation context buffer queue compilation kernel cpu generic kernel invocation routine customize pas appropriate parameter implementation image kernel function depict code faithfully obtain effective image OpenCL implementation OpenCL kernel variant launch cpu variant parameter apply target consistent command interface particularly useful script automate importantly comfortable openmp OpenCL program instantly interactive plot curve monitoring data inspect execution trace image KB image OpenCL launcher function responsible invoke image kernel highlight illustrate OpenCL code easily monitoring purpose openmp kernel execution OpenCL kernel monitoring trace purpose code highlight illustrates timing related kernel execution easily capture gpu instrumentation coarse grain detail happens inside device workgroup nonetheless activity OpenCL device useful device parallel CPUs implement complex kernel hybrid cpu gpu 2D stencil simulation ghost exchange iteration data transfer execution trace feature explore distribute program mpi EasyPAP interactive mode graphical mpi displayed default however debug purpose user activate display moreover monitoring tile activity monitor displayed image flag image KB image display screenshot capture execution mpi openmp variant image mpi resp belong rank resp rank inside openmp thread tile parallel inspect tile clearly upper image however image image operation image KB image snapshot mpi openmp variant image kernel execution mpi host openmp thread trace generation facility available mpi program timing file trace visualize EasyVIEW individually comparison diagnose load balance issue instance transmit knowledge hpc EasyPAP although EasyPAP primarily framework implement parallel computation teacher companion parallel program lecture pure  mode parallel concept illustrate chosen visually attractive kernel execute monitoring mode interactively impact parameter distribution strategy tile minor code modification facilitates understand involve visual memory EasyPAP lecture motivate graduate preview achieve lab session  advanced construct graphical manner behavior openmp nonmonotonic schedule policy moreover EasyPAP introduce parallelism undergraduate parallelism popularize concept parallelism computation mandelbrot 2D kernel visually illustrate notion workload sequential implementation image kernel code image depict pixel series compute divergence arbitrarily chosen threshold difference iteration slightly coordinate complex displayed screen obtain zoom frame actually zoom strategy fractal curve progressively unveil mandelbrot image KB image evolution mandelbrot displayed across iteration sequential variant image interactive mode animation smoothly iteration noticeable slowdown significant portion mandelbrot enters frame snapshot sub slowdown mandelbrot grows occupies portion frame iteration approximately familiar mandelbrot fractal pixel belonging mandelbrot computation pixel easily understand slowdown introduce benefit parallelism parallel version frame evenly stripe stripe assign distinct cpu openmp source code acceleration comparison previous sequential attention workload assign CPUs EasyPAP monitoring mode execution noticeably faster achieve average frame rate fps frame per versus fps sequential version image KB image screenshot iteration openmp variant image kernel static distribution tile monitoring mode brightness tile displayed tile reflect duration correspond task brighter consume however activity monitor panel clearly reveals load imbalance CPUs issue confirm mode tile display mode brightness tile proportional intensity associate computation static distribution indeed inappropriate image contains pixel belonging mandelbrot involves computation discussion audience distribution strategy specific knowledge exist openmp schedule policy discussion quickly focus fairer assign tile frame cyclic dynamic distribution understand distribution policy tile particularly useful distribution policy similarly image kernel openmp variant image tile decomposition assignment tile customizable loop schedule policy image environment variable desire policy output tile loop schedule policy image KB image tile allows openmp loop schedule policy actual distribution tile sub cyclic distribution tile thread image schedule directive tile sufficiently strategy significantly improves performance static distribution heavyweight tile somewhat homogeneously distribute CPUs image kernel opportunity behavior nonmonotonic dynamic schedule directive recently introduce openmp strategy tile assign thread static manner however thread idle steal overload thread steal clearly visible sub distribution static distinguish steal tile bound static chunk switch purely dynamic policy sub enhances performance distribute tile greedy manner strategy image kernel iteration tile image KB image openmp dynamic loop schedule tile tile reveals noticeable reveals horizontal stripe stripe feature alternation stripe correspond thread compute tile situation happens tile correspond away mandelbrot computation iteration thread compute consume tile contrast feature quasi perfect cyclic distribution due tile amount computation therefore dynamic distribution regular cyclic investigate performance issue previous illustrates monitoring understand variety parallel concept situation information temporality analyze execution trace interactively typically useful insight underperform kernel execution image static distribution tile execute application trace flag obtain trace file analyze EasyVIEW schedule task successive iteration easily phenomenon gantt exhibit tremendous variability task duration task approx longer shortest approx mouse image thumbnail task responsible associate tile highlight allows tile image demand instance situation tile mouse cursor correspond task execute cpu finally gantt unambiguously reveals imbalance consume task almost exclusively execute CPUs demonstrates static distribution tile definitely inappropriate image KB image mouse rightmost thumbnail reveals task highlight tile mouse pointer interestingly EasyVIEW increase understand schedule policy enable pairwise comparison execution trace without cyclic distribution perform dynamic comparison feature EasyVIEW useful gantt schedule strategy align iteration per iteration display sequence task execute iteration image kernel respectively cyclic distribution trace nonmonotonic dynamic distribution trace latter strategy although perfect computation load CPUs cyclic distribution situation unfortunate cpu peer cpu image KB image execution trace EasyVIEW trace align iteration virtually zone indicates amount execution observation coverage mode feature EasyVIEW display tile cpu iteration immediately recognize cyclic assignment tile cpu thumbnail thumbnail reveals cpu steal tile initial bunch tile nonmonotonic dynamic policy activity EasyPAP EasyVIEW undergraduate parallel program introductory postgraduate parallel distribute compute focus advanced feature multicore gpu cluster program usually straightforward implementation kernel quickly dive subtle code encounter bug performance issue various explore extent EasyPAP EasyVIEW understand behavior code visualize traditionally practical multicore program session discover EasyPAP environment kernel image image assignment devote implement complex openmp kernel abelian  image blur etc involve advanced synchronization scheme additional data structure detail assignment remainder blurring 2D stencil code discovery parallel compute quickly expose simulation involve stencil computation assignment blurring kernel introduce parallelization 2D stencil code goal progressively explore benefit tile respect cache reuse influence code simplification compiler auto vectorization implement heuristic task schedule policy sequential version image kernel image iteration pixel image average image swap iteration pixel multiple iteration encourage implement tile parallel version maximize cache reuse avoid bound image access pixel border code conditional performance tile outer tile implement code outer inner tile image KB image sequential version image kernel implement optimization parallelize code correctness variant dump output disk png file output reference sequential variant parallel implementation valid effectiveness EasyPAP performance mode realize achieve gain beyond expectation variant faster activate mode tile equally cpu demand tile clearly reveals inner tile involve computation tile computation load inner tile suggests correspond code aggressively optimize compiler investigate observation EasyVIEW useful trace comparison feature task approximately faster version mouse task immediately confirmation duration correspond inner tile speedup removal conditional mostly  compiler auto vectorization image capable intel processor image KB image selective optimization tile mode tile border tile longer inner tile EasyVIEW comparison trace trace corresponds execution openmp implementation uniform tile trace corresponds optimize openmp version conditional code remove inner tile later version approximately faster setup iteration version iteration optimize version another observation switch coverage mode EasyVIEW mouse horizontal mode displayed task cpu mouse cursor cpu timeline purple displayed thumbnail reveal task execute cpu iteration mostly  scatter highlight locality nonmonotonic dynamic schedule policy investigate propose generate task outer tile shortest heuristic achieve performance image clause avoid implicit barrier task something EasyVIEW identification component advanced introduce concept task dependency openmp task program algorithm execution task delayed task target application component detection algorithm 2D image goal identify component transparent pixel unique propose algorithm reassigns pixel unique propagates maximum steady sequential implementation kernel sequence phase per iteration phase propagates local maximum proceeds propagation parallelize algorithm without introduce extra iteration challenge tile implementation tile constraint phase resp tile execute upper resp openmp task constraint directly translate task dependency sketch image KB image snippet implementation propagation openmp task dependency however familiar subtlety task dependency openmp usually achieve implementation attempt constrain sequential execution task EasyVIEW greatly dependency correctly enforce illustrate tile mouse image KB image EasyVIEW allows visualize task execution code depict screenshots mouse gantt gpu program activity gpu program hardware interface OpenCL cuda error prone nonetheless mandatory pathway become familiar execution model gpu accelerator fortunately technical concept nvidia warp amd wavefront OpenCL workgroups illustrate graphically gpu session image manipulation kernel slightly modify visualize coordinate item workgroups disable workgroup session observation activity graphically explore advanced concept thread divergence ambitious application cope implementation hybrid cpu gpu computation custom data structure data exchange host memory gpu GDDR memory iteration category understand divergence notion thread divergence happens thread perform conditional code potentially harmful gpu due architectural gpus thread belonging nvidia warp amd wavefront execute instruction cycle temporarily inhibit understand memory coalesce coalesce memory transaction important hardware optimization technique gpus maximize throughput load instruction heavily relies thread belonging hardware define execution warp nvidia hardware access contiguous memory address global memory naive implementation image transformation kernel image transposition image rotation fully benefit coalesce transaction memory access perform image contiguous goal illustrate local memory smart cache perform contiguous global memory access naive variant rotation OpenCL kernel apply tile cache approach perform variant implement optimization mistake forget synchronization barrier global local local global memory transfer loss pixel along visualize image iteration pixel random realize barrier decrease overall kernel duration confirms relevance optimization capstone assignment parallel program graduate capstone assignment consists progressively parallelize application various parallel program paradigm assignment consist advanced parallelization 2D stencil code conway  tang  abelian  model stencil code candidate activity numerous optimization opportunity easily gpu distribute cluster machine project decompose intermediate assignment advanced assignment illustrate typically achieve conclude guideline encourage adopt scientific approach assignment organization capstone project assignment assignment source code scientific report highlight approach assignment around openmp parallelization 2D stencil implement optimization avoid false unnecessary synchronization experimentally suitable schedule policy explain justify approach performance plot trace return formative feedback annotation report individual discussion recommendation actually assignment grade context assignment optimization memory bandwidth introduction algorithmic optimization avoid recalculate stable domain mitigate load imbalance introduce latter optimization sparse configuration report progress extend enhance previous report formative feedback return grade facilitate automatic evaluation code script correctness variant establish global rank obtain assignment organize topic focus simd vectorization gpu program fourth assignment individually topic address propose assignment instance perform depth investigation specific topic cache oblivious algorithm combine program paradigm address hybrid heterogeneous architecture mpi openmp mpi OpenCL openmp OpenCL hybrid openmp OpenCL program although OpenCL assignment implement pure OpenCL kernel device advanced assignment invite develop hybrid openmp OpenCL program gpu CPUs workload address datasets conway advanced assignment sake simplicity load balance CPUs gpu phase frame split horizontal rectangle iteration CPUs parallel openmp compute upper frame gpu computes ghost frontier exchange 2D stencil code iteration contiguous pixel transfer host memory gpu sibling transfer direction implement hybrid kernel interactively bug EasyVIEW execution trace computation gpu CPUs overlap data transfer image KB image execution trace hybrid OpenCL openmp version image kernel allows gpu cpu parallel data transfer iteration gpu lane host device transfer device host transfer motivate assignment dynamic load balance mechanism frontier rectangle CPUs gpu iteration mpi distribute program addition pthreads openmp OpenCL EasyPAP mpi program notably debug program monitoring facility illustrate feature develop elaborate lazy implementation avoids recomputing tile neighborhood steady previous iteration effective pthreads openmp lazy variant tile compute finally extend implementation cope distribute architecture mpi difficulty exchange ghost mpi exchange exchange meta information regard steady lively tile code error prone debug purpose EasyPAP display previously command launch mpi execute image variant kernel debug mode image KB image monitoring confirm contains thread image importantly sparse dataset consists glider evolve along diagonal image tile diagonal compute image KB image launch debug mode monitoring mpi visualize encourage scientific experimental approach mention previously sec scientific report priority admittedly conduct justify campaign task conduct campaign previously moreover behavior parallel program multicore machine understand specialist indeed parallel machine complex program execution sensitive parameter tile schedule strategy strive conduct implementation understand impact parameter researcher purpose integrate feature EasyPAP facilitate collection experimental data exploitation generation graph EasyPAP invoked performance mode image flag report completion execution configuration parameter comma csv file data exploit  plot facility image data visualization library image data analysis toolkit easily filter appropriate data performance file option available specify parameter feature  speedup ratio legend automatically generate data data filter constant parameter aside plot remain parameter guarantee conduct silently incorporate graph importantly tutorial explain explore parameter plot leverage trace analysis parallel behavior data spectrum parameter investigate python script illustrate explore data graph stage detail extend preliminary script generate statistically data scientifically usable graph obtain graph formulate hypothesis confirm reject analyze execution trace hardware characteristic cache tutorial devote guideline regard scientific document experimental approach obtain illustration script automates execution openmp tile variant mandelbrot kernel image tile schedule policy script launch core machine equip xeon processor obtain  concise influence tile geometry overall performance distinct schedule policy image  perform additional geometry report evolution performance respect thread involve interestingly performance thread tutorial discus explain surprising phenomenon trace cyclic schedule policy pathological workload distribution important discus imperfect plot image KB image automation script investigate role tile image MB image plot tutorial associate command emphasize accuracy title legend report instance probably improvement  plot facility pedagogical consideration report context parallel architecture program bloom taxonomy classify pedagogical activity demonstrate usefulness EasyPAP response anonymous survey regard relevance EasyPAP software pedagogical finally comment evolution parallel program discus lesson EasyPAP bloom understand EasyPAP environment valuable engage learner attractive graphical enables acquire knowledge understand understand refer taxonomy bloom categorize classroom situation classify activity EasyPAP accord bloom taxonomy lecture lab mainly focus whereas evaluate specifically capstone assignment described classification educational activity EasyPAP accord bloom taxonomy cognitive  engagement activity EasyPAP retrieve relevant knowledge  mention EasyPAP involves visual memory factual notion granularity load balance conceptual knowledge behavior recognition understand meaning instructional message oral graphic communication lecture lab EasyPAP code illustrate various parallel concept sec concrete meaning keywords sec apply procedure situation mention developed assignment application lecture implementation openmp mpi OpenCL variant productivity lab improve environment lab session visually progress analyze constituent detect relate another overall structure purpose optimize kernel parallel behavior kernel teacher identify performance issue thanks trace analysis establish link issue source code modify code improve optimization lecture evaluate judgment criterion standard report context capstone assignment sec report scientific approach performance graph trace analysis data meaningful performance graph explain role parameter tutorial activity novel coherent parallel algorithm data structure scientific report context capstone assignment feedback conduct anonymous online survey EasyPAP march prior france covid lockdown survey population consist computer postgraduate engineering EasyPAP capstone assignment lockdown survey homework activity march involve contrast previous conduct already accomplish project sec purpose survey clearly goal objective feedback EasyPAP publish scientific article engineering response rate survey EasyPAP software pedagogical EasyPAP dedicate comment summary regard EasyPAP software mostly satisfied software however experienced difficulty instal EasyPAP lockdown issue related appropriate OpenCL driver compatible custom installation admittedly challenge nevertheless brief panic personal computer server remotely perform feature EasyPAP utilization remote connection image KB image summary survey response EasyPAP goal survey pedagogical impact EasyPAP approach directly related specific bloom taxonomy regard comprehension distinguish understand theoretical concept load balance synchronization mechanism technical concept parallel architecture parallel program environment apply motivation stimulation lab another productivity efficiency analysis evaluation introduce regard analysis trace graph identify address performance facilitate link identify behavior code evaluate environment trace graph scientific approach report finally creativity simply EasyPAP code optimization context exploit survey acknowledge EasyPAP understand parallelism improve efficiency satisfaction rate analysis evaluation impact EasyPAP positive analysis parallel program performance activity expertise creativity mixed however influence project creativity satisfaction rate purpose increase survey devote comment comment aspect EasyPAP appreciate emphasize motivation EasyPAP mostly focus parallelism relevant suggestion EasyPAP dynamic library parallelize exist application discussion introduce EasyPAP lecture lab session clearly parallel program attractive lab session EasyPAP graphical facility debug phase painful effective quickly prototype preliminary variant code analyze parallel behavior interactively achieve efficient mpi openmp implementation kernel lazy evaluation tangible improvement moreover EasyPAP unified environment program data mining analyze parallel kernel investigate conduct thorough report rigorous argue EasyPAP companion parallel program lecture inject dynamism lecture progressively explore concept interactive fail retry approach sufficient EasyPAP lesson introduce topic reaction surprising parallel behavior admit opportunity behavior normally complex profile instance execution trace generate compiler namely gcc clang visually task schedule strategy underlie openmp runtime obviously EasyPAP downside integrate environment detail configuration compilation initialization various component hidden conduct conventional involve application scratch parallel program consequence excessive confidence graphical output program surprised submit buggy implementation correctness image displayed screen faulty visible situation improve ratio buggy implementation quarter explicitly drawn attention implement automatic grade improve quality submit assignment successfully deployed rice related educational EasyPAP parallel program framework crossroad research effort interactive visualization profile analysis parallel program educational program environment interactive visualization parallel program regard interactive visualization adhere philosophy   easy interface visualize 2D parallel computation  thread graphic library library multiple thread pthreads openmp predefined polygon text image canvas reflect ID thread drawn easily visualize contribution thread screen  another library aim improve bug detection parallel program multicore machine nvidia gpu accelerator application responsible  matrix pixel update graphical appropriate   influence EasyPAP 2D interactive visualization facility however EasyPAP tile identify contribution processing alter pixel contrast   library integrate almost exist application EasyPAP approach integrate educational framework monitoring trace exploration capability automation plot generation assistance profile analysis parallel program outstanding developed monitor parallel code analyze obtain performance metric  portable source profile visualize execution trace parallel application relies semantic  trace input format trace OpenGL canvas gpu acceleration improve render performance  largely inspire EasyVIEW trace visualizer software interactive timeline EasyVIEW notable addition capability trace auto alignment feature display data access task intel vtune powerful profiler performance analyzer architecture vtune leverage hardware performance counter sample technique comprehensive identify code hotspot cpu utilization evaluate vectorization performance reveal thread synchronization latency cache ratio highlight memory contention tau tune analysis utility comprehensive toolset performance instrumentation analysis visualization parallel program parallel program automatically via code  dynamically java virtual machine runtime manually instrumentation api functionality   diagnose performance powerful profile capability EasyPAP beginner easy built profile EasyPAP attractive sophisticated environment task orient performance analysis grain graph openmp performance analysis visualizes computation perform task parallel loop chunk instance highlight parallelism parallelization benefit grain aftermath interactive visualization filter analysis execution trace  task program feature ability task accord statistic hardware counter aftermath easily timeline heatmap highlight locality memory access misprediction rate individual task  framework visualization panel combine customizable statistic task task critical etc cope stochastic behavior task scheduler pinpoint performance incur underlie scheduler visualization facility environment specifically task respect powerful EasyPAP EasyPAP wider parallel paradigm limited task parallelism nonetheless schedule task kernel variant interactive task data mapping displayed EasyVIEW allows tile execute EasyPAP information task dependency user task execution conforms task dependency illustrate EasyPAP brings cpu coverage functionality evaluate amount data locality exhibit execution trace useful metric regard task schedule algorithm methodology author propose parallel program methodology practical conduct demonstrate importance analyze performance metric appropriate author emphasize teacher discus analyze metric completely conclusion EasyPAP profile trace plot interaction instructor author convince pedagogical benefit exemplar EasyPAP around operational sequential code parallelize multiple paradigm multiple variant approach hide technical detail related initialization SDL OpenCL mpi cod environment really concentrate parallelism manage kernel interface multicore OpenCL mpi kernel   workshop  assignment  activity easily  teacher inspire assignment iterative 2D stencil easily integrate EasyPAP kernel database moreover  assignment   attract attention underlie approach gamification author  aim organize performance contest statistic implement gamification technique EasyPAP  complementary environment conclusion future EasyPAP framework parallel program accessible attractive comprehensive allows quickly visual feedback parallel behavior code analyze locality computation understand performance issue EasyPAP context undergraduate postgraduate parallel program  successful understand subtle aspect schedule synchronization compiler optimization EasyPAP popularize parallel program easily illustrate concept load imbalance future release EasyPAP library exist application advantage visualization monitoring trace facility platform intend extend EasyVIEW trace explorer integrate per task cache usage information  library