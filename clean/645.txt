deterministic distribute algorithm steiner ST congest model algorithm computes approximate ST nlog message graph node shortest diameter graph leaf node optimal ST improves complexity distribute ST algorithm min terminal node algorithm improves message complexity additive expense logarithmic multiplicative factor complexity graph logn approximate ST deterministically compute message complexity almost coincide singularly optimal minimum span mst algorithm propose keywords steiner distribute approximation algorithm singularly optimal introduction network optimization prevalent computer network distribute operation research generally network optimization distribute local global graph maximal independent etc local variety network optimization global necessitates collaborative computational effort node information farthest node network decade network optimization distribute remarkable attention congest model model communication network coincides input graph node computationally unbounded communication node directional bandwidth link restrict network global breadth bfs span etc unweighted diameter network whereas diameter shortest etc achieve complexity linear congest model significant amount global mst steiner etc congest model distribute compute focus global optimization steiner denote ST congest model fundamental network optimization define definition ST undirected graph function vertex terminal goal ST minimize formulation ST congest model input graph coincides communication network vertex uniquely mapped node processor naturally mapped link correspond node node vertex assign terminal node algorithm ST regard output whenever algorithm ST terminates node vertex assign incident termination node terminates algorithm ST finite ST reduces shortest distinct node network ST becomes mst ST generalization mst mst polynomial however ST NP karp polynomial approximation ratio ST centralize constant due ST polynomial approximation factor unless variation ST steiner metric steiner euclidean steiner rectilinear steiner   website continuously update variant ST application numerous VLSI layout communication network transportation network content distribution video demand multicast network  reconstruction computational biology etc moreover ST subproblem network steiner prize steiner etc motivation elkin approximate mst within constant factor graph unweighted diameter assume achieve unconditional bound complexity mst approximate mst within constant factor deterministic bound message complexity mst congest model respectively ST generalization mst bound message complexity mst apply ST distribute therefore highly desirable obtain message optimal distribute algorithm computes optimal ST complexity ST congest model distribute compute due lenzen patt shamir shortest diameter graph definition defer optimal factor gap complexity mst algorithm ST algorithm congest model nevertheless approximation factor achieve ST incur complexity mst algorithm algorithm mst optimal message optimal simultaneously recently singularly optimal distribute algorithm propose mst beating message however ST distribute therefore another intrigue achieve distribute algorithm ST congest model message complexity coincide singular optimality mst algorithm maintain approximation factor towards contribution deterministic distribute algorithm ST henceforth denote dst algorithm congest model approximation factor leaf node optimal ST dst algorithm complexity distribute ST algorithm algorithm significantly reduces complexity gap ST mst congest model message complexity dst algorithm dst algorithm inspire couple centralize algorithm consists distribute algorithm SPF input graph terminal essentially partition disjoint partition contains exactly terminal subset non terminal non terminal partition terminal denotes shortest node suitably GKP algorithm  kutten peleg apply modify graph mst finally prune mst remain ST leaf terminal contribution theorem theorem undirected graph terminal exists deterministic distribute algorithm computes ST congest model approximation factor leaf node optimal ST investigate message compute ST congest model distribute compute specifically replace dst algorithm singularly optimal mst algorithm propose elkin achieve message complexity respectively achieve approximation factor polylogarithmic factor involve message complexity modify dst algorithm respectively modify dst algorithm message complexity dst algorithm however complexity marginally poorer dst algorithm specifically theorem theorem undirected graph terminal exists deterministic distribute algorithm computes ST message congest model approximation factor theorem network constant sufficiently shortest diameter corollary corollary approximate ST deterministically compute message complexity respectively congest model message complexity modify dst algorithm respectively almost coincide singular optimality distribute mst construction congest model due approximation factor resultant ST related polynomial approximation algorithm ST centralize propose polynomial centralize algorithm ST graph approximation factor constant propose polynomial approximation scheme PTAS ST planar graph combine algorithmic paradigm approximation scheme parameterization  propose efficient parameterized approximation scheme computes approximate ST constant optimum ST vertex regard distribute algorithm ST mainly mst heuristic shortest heuristic SPH average distance heuristic adh propose mst heuristic deterministic distribute algorithm ST asynchronous congest model achieve approximation factor message complexity algorithm propose respectively SPH factor distribute approximation algorithm ST propose SPH algorithm assume node advance shortest distance node network approach prim SPH SPH aka cheapest insertion heuristic grows network message complexity SPH algorithm respectively improve algorithm propose achieve approximation ratio simulation however complexity remain propose kruskal SPH SPH algorithm construct multicast essentially ST message complexity respectively approximation factor singh  distribute algorithm construct multicast sts SPH algorithm improve simulation message complexity generalize version SPH adh execution adh algorithm component consists terminal node iteration component merge node minimum average distance component adh algorithm terminates span terminal node distribute version adh propose approximation factor message complexity respectively approximate deterministic distribute algorithm ST congest model message complexity respectively approximate randomize distribute algorithm ST congest model complexity message complexity recently lenzen patt shamir distribute algorithm steiner generalize version ST congest model deterministic randomize former approximate steiner terminal component input latter approximate steiner probability steiner reduces ST complexity algorithm deterministic randomize reduce respectively performance distribute algorithm mention summarize summary ST distribute DT deterministic RM randomize parameter correspond message complexity algorithm situation node prior information distance node network    asynchronous    synchronous  synchronous  synchronous  RM   organization organize define model notation contains description illustrate correctness SPF algorithm contains description illustrate correctness dst algorithm describes message distribute ST construction conclude model notation model congest model specify communication network model undirected graph node communication link function assume node unique identity ID encode node incident assume non negative integer non negative encode therefore polynomially sum encode node communicate coordinate action passing message message contains constant node IDs argument polynomially bound algorithm proceeds synchronous node receives message node performs local computation message node sends possibly message incident link complexity node terminate message complexity message node terminate assume node link fail notation notation denotes denotes incident node denotes height node respect denotes node node respect denotes source node node respect intuitively denotes descendant denotes tentative node denotes shortest similarly denotes tentative shortest denotes distance node node denotes tentative distance node incident similarly node denote ID tentative source respectively node incident denote predecessor tentative predecessor respectively node denotes message argument message unless argument denotes shortest shortest shortest denotes shortest diameter graph introduce khan  SPF construction definition SPF undirected graph vertex non negative function subset SPF sub graph consist disjoint contains exactly node shortest shortest regard distribute SPF construction congest model deterministic distribute algorithm construct SPF graph message complexity respectively lenzen peleg source detection unweighted graph subset source node denote ascend lexicographically unweighted shortest detection node learns entry source satisfy lenzen peleg detection congest model distribute SPF algorithm subsection detailed description SPF algorithm construct SPF message congest model later subroutine dst algorithm inspire bellman ford algorithm assume algorithm exists bfs terminal bfs deterministically compute message congest model assume node height denote height node node leaf subtree node height height node intuitively compute broadcast convergecast procedure sends message node bfs upon node node whenever leaf node bfs receives sends message upon node internal node sends eventually receives height node computes height bfs obvious compute message complexity compute input node terminal incident denotes node bfs node assume node furthermore additional local variable height flag false respectively output whenever algorithm terminates node outline algorithm node initiate algorithm message incident message height whenever height becomes flag false algorithm terminates denote message respectively node arbitrary upon message node per reset height receives message computes chooses minimum update otherwise remain unchanged update sends incident sends update sends termination detection termination algorithm message transit node network bfs detects termination SPF algorithm whenever local variable height becomes terminates algorithm algorithm height message height execution algorithm node sends message update local receives message node guarantee message generate node network eventually receives message reset height height bfs guaranteed local node generates message receives information message ensures reset height becomes network message consecutive ensures node network height becomes terminates algorithm flag false illustrate SPF algorithm application SPF algorithm graph bfs source node terminal bfs initial tentative source tentative distance tentative predecessor node node algorithm message node algorithm upon message node update local information arrow along tentative predecessor node predecessor undefined similarly pictorially depict graph fourth execution algorithm respectively graph sixth execution algorithm SPF contains shortest node respective source image KB image image KB image graph terminal bfs initial update message update local information update execution algorithm fourth execution sixth execution SPF GF EF correctness SPF algorithm lemma SPF algorithm terminates proof algorithm sends message whenever node receives message applicable update sends message update parameter message guarantee execution node network receives message execution node proceed parallel subsequent upon message applicable node update local shortest diameter SPF contains SPF algorithm initiator node bfs implies leaf node delayed update local information node converges additional therefore execution local node network local node sends message node network message generate node network due local however execution algorithm message transit network generate upon message node simply sends message height bfs guaranteed local node generates message receives information message message consecutive ensures node network terminates algorithm subsequent therefore execution message related SPF algorithm transit network concludes SPF algorithm terminates theorem complexity SPF algorithm proof lemma ensures SPF algorithm terminates height bfs complexity SPF algorithm theorem message complexity SPF algorithm proof SPF algorithm message execution algorithm node message ensures message exchange message input graph message exchange theorem SPF algorithm terminates therefore overall message complexity SPF algorithm lemma tentative shortest node suppose SPF algorithm terminates node proof execution SPF algorithm terminal node maintain distance information node network local information whenever node receives message update remain throughout execution algorithm therefore shortest execution algorithm induction node ensures exists therefore node inductive node predecessor induction hypothesis denotes update therefore whenever algorithm terminates update happens node termination ensures node therefore conclude SPF algorithm terminates node dst algorithm preliminary definition distance graph graph distance graph node undirected graph node shortest dst algorithm inspire principle centralize algorithm algorithm algorithm sake completeness briefly principle algorithm approximation ratio dst algorithm correctness algorithm undirected graph terminal node algorithm computes ST construct distance graph mst construct sub graph replace correspond shortest mst construct ST delete leaf terminal node algorithm principle prim  algorithm propose faster algorithm algorithm improves complexity achieve approximation ratio algorithm achieve compute generalize mst oppose multiple algorithm generalize mst define definition generalize mst undirected graph subset generalize mst sub graph exists mst distance graph unique leaf ST actual realization summary algorithm construct generalize mst node treat successively merge priority queue frontier vertex extend gradually extends node belonging node node merge algorithm guarantee compute minimum merge GKP algorithm GKP algorithm propose  kutten peleg subroutine dst algorithm description GKP algorithm deterministic complexity mst construction congest model combination algorithm GHS algorithm due    pipeline algorithm due peleg apply GHS algorithm graph diameter fragment becomes GHS algorithm apply phase ensures fragment pipeline algorithm MWOE minimum outgo remain fragment pipeline algorithm bfs built information candidate inter fragment pipelining intermediate node filter candidate cycle eventually inter fragment construct mst fragment super node broadcast respective node height node sends upward collection inter fragment downward broadcast pipeline algorithm therefore overall complexity GKP algorithm however GKP algorithm responsible message complexity dst algorithm subsection outline dst algorithm complexity distribute algorithm dst algorithm achieve due computes SPF computes mst due application GKP algorithm assume bfs terminal node available algorithm node bfs node initiate algorithm execution dst algorithm assume ensures execution initiate terminate outline propose dst algorithm SPF construction construct SPF apply algorithm described subsection disjoint shortest contains terminal subset non terminal non terminal theorem theorem ensure message complexity respectively graph basis construction generalize mst denote construct modification mst construction modification respect SPF graph classify inter incident intra incident transform compute intra inter realizes source node source node contains inter classification transformation node sends message node receives incident inter intra node otherwise intra assume bfs initiate perform message exactly twice therefore message complexity mst construction construct mst contains inter specifically apply GKP algorithm construct mst message complexity GKP algorithm respectively prune construct generalize mst accomplish perform prune operation prune operation deletes leaf terminal node prune non terminal leaf node non terminal leaf node prune instructs prune non terminal leaf node remain contains inter node restore prune parallel non terminal leaf node non terminal leaf node hop away terminal node perform prune message exactly message complexity dst algorithm terminates illustrate dst algorithm application dst algorithm graph terminal source SPF construct non terminal node terminal node distance minimum terminal node graph construction graph label accord definition application GKP algorithm construct mst ST generalize mst construct perform prune operation image KB image graph terminal SPF GF EF distance node respective source graph GF graph mst TM ST TZ generalize mst correctness dst algorithm theorem complexity dst algorithm proof dst algorithm respectively overall complexity dst algorithm theorem message complexity dst algorithm proof overall message complexity dst algorithm dominate theorem message complexity message complexity combine message complexity dst algorithm definition subgraph undirected graph denotes sum dst algorithm construct ST approximation factor recall leaf node optimal ST towards compute generalize mst optimal ST lemma terminal node graph vertex define lemma lemma span distance graph graph proof span acyclic span node node uniquely implies distinct terminal node contains accord definition corresponds contains exactly implies exists exactly unique node therefore contains cycle correspond terminal node exactly construct contains exactly precede plus acyclic ensure span exactly node node lemma mst proof contradiction mst instead mst therefore simplicity suppose distinct respectively recall denotes assumption implies contradiction accord definition corresponds lemma span ensures corresponds shortest contains lemma similarly assume contains lemma remove split subtrees respectively distribute mst algorithm GKP algorithm dst algorithm MWOE minimum outgo merge instead MWOE guarantee contradiction therefore mst induction assume differs multiple logic described assumption concludes mst definition undirected graph distinct node intermediate node built prune non terminal leaf node leaf node furthermore lemma exists mst corresponds shortest node therefore theorem theorem compute dst algorithm generalize mst actual realization substitute theorem theorem theorem correctness theorem essentially correctness theorem sake completeness outline correctness consists exists exactly twice implies leaf exactly consecutive leaf sub decompose recall leaf node connects consecutive leaf node delete remain satisfies following assume generalize mst realizes mst distance graph corresponds shortest ensures node concludes simulation dst algorithm arbitrary network node link graph plot propose dst algorithm deterministic distribute ST algorithm due lenzen patt shamir depicts simulation network dst algorithm outperforms algorithm complexity image KB image simulation network propose dst algorithm algorithm due lenzen patt shamir depicts simulation approximation factor leaf node optimal ST plot graph clearly depicts dst algorithm outperforms algorithm approximation factor image KB image simulation approximation factor leaf node optimal ST propose dst algorithm algorithm due lenzen patt shamir depicts simulation message network network link respectively dst algorithm outperforms algorithm message complexity performance dst algorithm significantly performance algorithm due almost coincides performance algorithm due lenzen patt shamir message complexity image MB image simulation message network network link propose dst algorithm algorithm due lenzen patt shamir message distribute ST construction exists singularly optimal distribute algorithm mst address message knowledge till date algorithm exists ST investigate message ST construction congest model towards approximate ST deterministically compute message regard singularly optimal distribute algorithm propose randomize singularly optimal distribute algorithm mst message complexity respectively message complexity algorithm propose optimal upto polylogarithmic factor factor respectively elkin propose deterministic distribute algorithm mst optimal message complexity respectively recently propose singularly optimal distribute algorithm mst deterministic explicitly specify polylogarithmic factor involve message complexity however apparent analysis message incur algorithm respectively elkin algorithm elkin algorithm subroutine modify dst algorithm subsection singularly optimal deterministic distribute mst algorithm till date algorithm construction auxiliary bfs node consists construct mst mst algorithm apply mst construct mst specifically boruvka algorithm apply merge fragment algorithm phase phase varies algorithm computes mst node update identity fragment message fragment diameter computes MWOE message receiver foreign fragment MWOE fragment endpoint identity fragment becomes endpoint defines candidate fragment graph fragment diameter fragment vertex  fragment computation candidate fragment graph message maximal built cole  vertex algorithm computation maximal message phase computation maximal candidate fragment graph hence phase message phase overall message complexity construct mst respectively algorithm apply mst maintains mst already compute algorithm mst obtain merge fragment fragment via boruvka algorithm algorithm phase phase fragment MWOE compute parallel fragment fragment contains message  compute information pipelined convergecast procedure vertex fragment message node computes MWOE computes graph vertex fragment  computes mst sends message pipelined broadcast message fragment fragment node receives information broadcast identity fragment identity vertex message finally vertex update fragment identity message combine overall message complexity elkin algorithm respectively modify dst algorithm asymptotic involve message complexity dst algorithm subsection bottleneck rid asymptotic message complexity modify dst algorithm dst algorithm distribute algorithm modify dst algorithm namely SPF construction modification mst construction prune specifically replace dst algorithm singularly optimal mst algorithm propose elkin modify dst algorithm remain dst algorithm correctness modify dst algorithm approximation factor directly correctness algorithm propose complexity lemma modify dst algorithm modify dst algorithm respectively overall complexity modify dst algorithm therefore polylogarithmic factor involve complexity modify dst algorithm message complexity lemma message complexity modify dst algorithm message complexity respectively overall message complexity modify dst algorithm dominate combine message complexity modify dst algorithm graph therefore polylogarithmic factor involve message complexity message complexity incur modify dst algorithm respectively implies graph message complexity modify dst algorithm coincide singularly optimal mst algorithm propose resultant ST optimal simulation modify dst algorithm subsection arbitrary network node link graph plot modify dst algorithm dst algorithm algorithm due lenzen patt shamir depicts simulation message network network link modify dst algorithm outperforms algorithm message complexity performance modify dst algorithm almost coincides performance dst algorithm message complexity however algorithm perform modify dst algorithm message complexity image MB image simulation message network network link graph plot modify dst algorithm dst algorithm algorithm due lenzen patt shamir depicts network clearly dst algorithm outperforms modify dst algorithm complexity performance modify dst algorithm almost coincides performance algorithm due lenzen patt shamir complexity lenzen patt shamir algorithm outperforms modify dst algorithm complexity image KB image simulation network graph plot modify dst algorithm dst algorithm algorithm due lenzen patt shamir conclusion propose dst deterministic distribute algorithm ST computes approximate ST message complexity respectively congest model investigate message distribute ST construction specifically propose modify dst algorithm computes approximate ST message complexity respectively approximate mst within constant factor assume bound message complexity mst ST generalization mst bound mst applicable ST recently centralize ST approximate upto factor constant optimal therefore research direction improvement approximation factor message complexity ST construction congest model distribute compute