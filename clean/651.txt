heterogeneous architecture emerge dominant platform performance compute mobile processing compute internet IoTs undergraduate computer curriculum topic curriculum without increase graduation integration heterogeneous compute module driven approach coverage topic broken disperse throughout curriculum module driven approach successfully implement introduce parallel distribute compute concept module introduce fundamental concept heterogeneous compute computer goal module program heterogeneous expose emerge trend future although concept module emphasize active lab assignment initial evaluation module undergraduate texas encourage outcome engagement keywords heterogeneous compute module instruction pedagogy introduction increase performance per watt couple demand processing diverse workload trigger shift towards heterogeneous compute integration performance CPUs efficient gpus hpc architectural heterogeneity permeate compute domain mobile processing compute internet IoTs proliferation heterogeneous architecture computer graduate requisite program complex imperative undergraduate computer CS curriculum emerge phenomenon lack sufficient coverage heterogeneous compute HC concept heterogeneity upper elective primarily institution needle HC curriculum challenge credit restriction typically CS CE curriculum generally feasible without increase graduation furthermore HC important diverse program algorithm architecture multiple module fundamental heterogeneous compute computer undergraduate module along recommend introduce module developed NSF fund  project integrate heterogeneous compute concept undergraduate curriculum  initiative attempt integrate HC content approach strategy develop module coverage HC topic inject across curriculum creates significant coverage HC concept along enhance curriculum complement synergistic activity training collaborative partner faculty training module focus specifically fundamental concept freshman sophomore module described module index derive index scheme adopt  project remainder index title alternatively refer module   compute elementary   mapping heterogeneous  CS  justification heterogeneous  organization  ISA  architecture goal module program heterogeneous expose emerge trend future introductory topic primarily knowledge bloom taxonomy module emphasize training active appropriate outcome become merely memorize HC terminology bloom depth coverage various topic across module bloom classification depth coverage topic module  knowledge recognize  comprehension demonstrate understand organize summarize  application situation apply acquire  module implement standalone broader integrate HC topic curriculum undertaken previously parallel distribute compute module lecture slide handout software lab assignment pedagogical available public git repository associate  project principle module conforms core principle advocate approach curricular integration abstraction module introduce concept appropriate abstraction prior research expose CS principle abstraction critically important introduce concept inappropriate expose multiple hinder understand concept reduce ability taught principle module described HC topic introduce abstraction without reveal complexity underlie hardware amdahl implication parallel performance module elementary notion concept scalability significance amdahl taught without code heterogeneous parallel context module heterogeneous context topic exist curriculum theory concept throughout CS curriculum enhance comprehension HC principle context exploit module introduce completely topic already instance schedule operating notion processor replace heterogeneous processing module elementary notion introduces heterogeneous program execution explain von neumann model topic commonly CS adoption module easy adoption module lecture instructor resource lecture demo activity lab assignment sample exam pedagogical module agnostic although textbook treatment module specific textbook module collection reference instructor unfamiliar topic lab assignment investigate performance issue heterogeneous related survey undergraduate CS curriculum institution varied orientation liberal distinct lack coverage heterogeneous compute concept lack coverage pronounce standalone computer program combine computer engineering program computer engineering program upper elective relates heterogeneous architecture related concept introduction  upper elective ECE program texas austin dedicate chip soc graduate program computer engineering washington louis  architecturally diverse rare computer department survey undergraduate computer program washington louis rice  texas  wisconsin dedicate HC extensive coverage parallel compute undergraduate washington optional sophomore rice junior aforementioned  dedicate parallel compute coverage HC typically limited advanced parallel program devote gpu compute CS texas constraint tutorial cuda program opportunity investigate nuance task offload load balance cpu gpu heterogeneous environment heterogeneity processing core within cpu exploitation via dynamic voltage frequency DVFS instance advanced computer architecture compiler  collection module mention HC topic module primarily cuda program emphasize expose underlie HC concept parallel distribute compute curriculum development educational resource  boast collection PDC nonetheless entry database concept heterogeneity entry computer organization integrates gpu cuda program advanced CS entry  proposes heterogeneous program model advanced parallel compute heterogeneous compute elementary notion module introduces fundamental concept heterogeneous compute notion concurrency parallelism efficiency explain motivation towards heterogeneous processing heterogeneity introduce heterogeneity difference core compute capability within multicore cpu gpu heterogeneous execution chip soc module heterogeneity workload data compute mobile application module concludes discussion available program performance challenge heterogeneous compute context module primarily intend CS CS although module introduces parallel compute concept processor heterogeneity ideally coverage parallel compute CS incorporates PDC module absence PDC coverage module increase combine PDC module topic HC topic module bloom classification bracket knowledge comprehension concurrency parallelism multicore processor gpu acceleration chip efficiency amdahl outcome module difference homogeneous heterogeneous compute distinguish heterogeneity discus motivation shift towards heterogeneous compute recognize importance efficiency compute lecture module concept lecture progression lecture pedagogy review von neumann architecture lecture review von neumann architecture component von neumann model role compute illustrate desktop PC although acquaint typical CS familiar fundamental organization compute motherboard processor memory module instal around supplement discussion introduce compute device mobile processor iot device emphasize computer perform task although compute device fundamental organization device remains parallel compute importance lecture slide defines parallel compute discus importance definition parallel computer discussion definition parallel computer parallel compute parallel compute around compute notwithstanding become mainstream decade brief description mainframe vector computer cluster description discussion multicore computer importance efficiency role played evolution computer chip multicore processor lecture slide emphasize achieve performance consumption specify budget ubiquity parallel computer comment processing core smartphones tablet actual discussion parallel processing core heterogeneous heterogeneous processor motivate mobile phone poll typical usage phone tablet discussion introduce notion workload program within workload characteristic demand resource diagram mobile processor illustrate demand diverse workload handle deployment collection heterogeneous processor performance CPUs CPUs gpus illustrate diagram contrast diagram homogeneous desktop computer serf discussion heterogeneity compute gpus role processing graphic purpose workload description cpu gpu heterogeneous compute node notion heterogeneity processing core operational frequency introduce sequential parallel heterogeneous program execution portion module spent introduce fundamental difference sequential parallel heterogeneous program execution purpose subset slide explain topic slide accompany   macro intuitive pragma syntax  program generally familiar parallel program CS  effective discus parallelism without  syntax  supplementary module  parser instructor aware  realistic parallel limited ability extend beyond CS image KB image excerpt lecture slide illustrate difference serial parallel heterogeneous program execution animation slideshow image KB image  code sample statement execute processor parallel directive insert assignment statement meaning explain program extend array assignment instead assignment program compile execute examine comment statement parallelize instructor statement parallel along assignment statement program potentially error demonstrate code discussion data dependence challenge parallel program code extend illustrate execution parallel program hypothetical heterogeneous configuration assignment statement replace computation statement sqrt parallel execution program simulated computation statement mapped efficient core performance implication mapping instructor mapping ensue discussion program  syntax complex program model currently available parallel apis openmp pthreads mpi cuda OpenCL apis program heterogeneous performance challenge permit module performance challenge parallel heterogeneous notion sequential parallel speedup efficiency introduce via discussion amdahl performance implication parallel compute author opinion amdahl pertains heterogeneous processor although important advanced topic recommend inclusion module CS task mapping heterogeneous module concept task mapping schedule ISA embody heterogeneity difference core compute capability difference operating core frequency module brief review notion concurrency parallelism efficiency serf discussion motivation shift towards heterogeneous processing heterogeneity introduce cpu gpu heterogeneous execution heterogeneity arises ISA module discussion workload heterogeneity mobile compute concept task mapping schedule sequential parallel review stage task mapping heterogeneous interactive demo illustrates performance efficiency challenge task mapping factor operating frequency module accompany lab reinforces context module primarily intend CS although module introduces parallel compute concept processor heterogeneity ideally coverage parallel compute incorporates PDC module absence PDC coverage module increase combine PDC module module combine module heterogeneous compute elementary notion module potentially CS CS honor breadth introduction computer topic HC topic module bloom classification bracket ISA heterogeneity chip DVFS heterogeneity efficiency heterogeneous task workload task mapping schedule thread affinity cpu frequency outcome module discus motivation heterogeneous compute recognize importance efficiency compute explain task workload demand compute memory resource notion task mapping perform operating analyze performance task mapping heterogeneous lab reinforce understand concept module lab assignment heterogeneous lab conduct workload heterogeneous multicore machine investigate implication task mapping multicore configure core operates frequency heterogeneity configuration commonly available linux   detailed instruction configuration available instructor resource accompany module hardware available instructor institution however linux ssh enable multicore server core pre programmed workload distribute instructor resource source code built linux environment gcc lab familiarity linux environment description lab handout appendix  justification heterogeneous compute module performance model explain motivation multicore heterogeneous collection core phone xeon phi hpc gpus module inspire architecture advocate diversity core maximize performance budget module performance model relies  performance core proportional empirically relationship moore intuitive justification increase core allows performance improve feature cache complicate logic prediction deeper pipeline etc implication  increase core improves performance splitting core core performance peak performance increase factor logic processor consist core conclusion amdahl module calculate performance hypothetical workload arbitrarily parallelizable serially calculation core heterogeneous hence heterogeneous performance allows processor capture benefit core core performance workload serial component module lecture theoretical performance model fairly abstract parameter core percent program parallelizable followup homework exam mirror lecture compute performance parameter module recently phone profile professor phone multicore heterogeneity model module management exhibit balance issue module core performance maximize core peak performance maximize core context module developed introductory computer  college program assembly cache locality concurrency parallelism security prerequisite CS sophomore prior CS experienced couple senior module coverage homogeneous parallel program  parallel program pthreads openmp parallelize program resolve pthreads version mutexes prior lecture classic synchronization producer consumer reader writer deadlock avoid resolve module introduces motivates heterogeneity transition brief introduction cuda thumb mode module module fairly robust discussion parallelism concurrency roughly although module suitable context familiarity parallel compute speedup metric module assumes prior exposure amdahl module module multicore computer organization explain heterogeneous mobile hpc program principle module CS module introduce parallel compute expand coverage module  college module taught peer instruction pedagogy lecture  multiple choice individually discussion professor discussion facilitate module variety instructor version slide module embed peer instruction solves traditional lecture delivery topic topic module bloom classification bracket comprehension application rationale heterogeneity parallel performance model parallel amdahl  outcome module justify heterogeneous core multicore  estimate peak performance multicore relative another serial multicore amdahl compute performance parallel serial followup assignment homework exam module simply novel core compute relative peak performance core compute speedup achievable  exactly lecture tend fairly easy grade heterogeneous ISA mips primary goal fourth module expose architecture unfamiliar computer typically minimal exposure hardware architecture module exist focus architecture alternate architecture minimal amount goal module instructor easy expose intrinsic heterogeneity architecture hardware feature processor available various version architecture various offs developer thumb mode reduce code usage sacrifice performance neon  subsystem processor simd feature increase developer possibly consumption context module intend computer organization computer architecture become proficient program assembly ISA target typically sophomore junior topic topic module bloom classification bracket knowledge comprehension application linux command architectural overview code performance offs processor architecture elementary simd concept outcome module understand assembly program instruction difference similarity mips optional discus offs encounter code thumb mode versus mode optional benefit simd neon lecture lecture lecture introduction architecture specifically contrast mips mips simply ignore slide slide instruction address mode status register predicate execution function implementation assembly lecture lecture optional independent lecture describes thumb mode expose offs performance code available thumb thumb instruction lecture introduces concept processor specifically describes simd neon primary architectural focus omit lecture utilize lecture target fairly abstraction lecture link detailed description neon lab lab module program assembly lab thumb lecture opportunity code performance code compile thumb thumb target lab neon lecture opportunity ups parallelize sequential program neon simd processor lab raspberry  operating gnu chain instal lab intro lab assembly program computes factorial familiarize assembly program code lab assembly program starter code prompt user  library  register loop compute factorial computation code   printf detailed instruction lab instructor lab sol lab thumb instruction lab markdown file lab  benchmark matrix function function prime sieve   compile code target instruction thumb instruction version thumb mixed instruction chip utilized raspberry compile thumb directly raspberry broadcom chip version thumb  compilation target previous architectural revision generate thumb code modifies generate assembly code link thumb processor completely capable thumb code difficulty solely gnu toolchain familiar unix linux command variety command inspect generate code unfamiliar command usage additional tutorial instruction lab neon lab implementation code array another array array implementation computation assembly sequential assembly code rewrite simd neon instruction performance implementation neon version code improve register enable code perform parallel addition instruction evaluation preliminary evaluation module module development evaluation informal intend module development module multiple undergraduate texas module introduce CS module introduce alongside module CS reviewer feedback split instance independently CS CS texas introduces program coverage computer breadth topic CS module taught designate honor enrollment honor selective academic background enroll capped respectively comprises non enrol declare CS enrollment non honor CS texas taught multiple faculty member deem honor CS venue pilot implementation CS texas program average enrollment around module introduce register methodology summative evaluation outcome exam ass outcome associate pool inclusion exam mandatory constitute exam grade heterogeneous compute significant outcome evaluate performance lab assignment lab program project CS CS texas rubric construct outcome performance lab assignment survey evaluate engagement conduct semester survey gauge topic ass perception assessment gain  survey rate module category  actual survey administer activity activity lecture activity demo associate module helpful engage instructor reading tutor outside classroom taught module overall rate module rate confidence gain module increase pursue CS CS strongly disagree disagree neutral strongly evaluation module grade distribution exam module passing grade almost credit fail grade module introduce opt honor achiever outcome context grade distribution distribution normal curve skewed however cumulative grade closely grade module exam associate module significantly understand image KB image semester grade assessment grade distribution module installment module evaluate outcome prior response assessment fail grade semester grade closely grade assessment image KB image semester grade assessment grade distribution module survey conduct CS introduce CS therefore survey response relates module overall rat instructional environment positively respondent rat activity helpful engage comment survey demo particularly helpful sufficient outside classroom reflection quality TA graduate HC helpfulness linux developed lab assignment overall rat module positive gain CS positive impression however response overwhelmingly positive category unexpected data incoming freshman texas suggests CS pursue career programmer coder HC remove program fail impression  computer scientist image KB image confidence gain module survey respondent survey conduct CS improvement confidence gain response category virtually identical previous speculate contribute improve confidence gain honor college texas prospective previously HC module gain perspective emerge trend computer background knowledge influence response category image KB image confidence gain module survey respondent evaluation module outcome evaluate lab assignment grade distribution assignment module CS honor installment CS passing fail grade incomplete submission image KB image distribution grade HC lab assignment module grade representative actual outcome mention honor consists aptitude decent grade particularly accessible grade distribution CS closer normal reflect overall grade distribution distribution average grade non HC lab assignment distribution slightly CS honor slightly CS data indicates assignment heterogeneous compute significantly challenge notwithstanding cannot definitive conclusion sample image KB image distribution grade non HC lab assignment module engagement offering module already survey module slight increase confidence gain however survey response enrol fail respond module particularly helpful response rate yield image KB image confidence gain module survey respondent conclusion future module expose introductory CS heterogeneous compute module fundamental HC topic abstraction coverage complement assignment reinforce understand conduct hardware preliminary evaluation promising outcome engagement evaluation addition gathering data module faculty conference recruiting module institution