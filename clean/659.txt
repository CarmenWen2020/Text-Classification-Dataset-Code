herlihy multiprocessor advanced atomic swap arbitrary synchronization task elementary register fetch fundamentally limited respect arbitrary synchronization task later simulate advanced atomic elementary impossible however impossibility assumes computation synchronization instead synchronization instruction apply memory location actual multiprocessor compute building observation elementary instruction max max advanced swap instruction concretely max max instruction elementary consensus max max instruction simulate swap instruction pipelined butterfly interconnect concurrent throughput max max instruction exceeds concurrent throughput swap factor instruction max elementary commutative associative operation simulate max swap simulate swap max max keywords synchronization swap consensus max max introduction multiprocessor chip synchronization instruction swap fetch coordinate concurrent asynchronously rate synchronization instruction multiprocessor choice instruction important herlihy elegant choice consensus consensus define maximum binary consensus instance register binary consensus input output agreement within finite termination output input validity consensus herlihy generic universal construction construct linearizable implementation concurrent data structure stack queue linearizability implies although operation instantaneously invocation termination implies completes operation within finite irrespective swap update infinite consensus advanced multiprocessor consensus fetch fetch elementary moreover later provably impossible implement advanced reasonable elementary multiprocessor advanced however recently classification treat synchronization instruction individual reality instruction multiprocessor apply memory location without restriction forbids application instruction memory location observation register elementary instruction binary consensus constant per herlihy universal construction construct concurrent data structure elementary synchronization instruction possibility relies universal construction inefficient register therefore practical implementation conjecture elementary instruction binary consensus fundamentally limited efficient implementation obtain widely advanced instruction swap followup author practical really replace swap instruction concurrent algorithm data structure combination weaker instruction weaker elementary instruction refer instruction consensus ideally define consensus instruction consensus instruction operation return model instruction apply memory location along operation return location crucial operation define consensus instruction otherwise define instruction advanced consensus instance swap instruction without return instruction without operation consensus computes moreover define operation return reading memory location return location elementary instruction consensus instruction memory location operation consensus challenge limit elementary instruction respect efficiently simulate swap primarily practical implementation concurrent data structure proven yield efficient implementation simulate swap instruction elementary instruction simulation efficient register memory location per concretely introduce instruction max max consensus register register max max construct linearizable implementation swap register swap operation register logarithmic maximum execution implementation register simulate swap register register simulate swap register algorithm swap instruction per transform algorithm elementary instruction per elementary instruction advanced swap instruction issue instruction concurrently memory interconnect define throughput average instruction throughput elementary instruction max max throughput swap throughput elementary instruction factor proportional moreover simulate max instruction elementary instruction max instruction swap instruction simulation related central concurrent compute quantify compute ability synchronization instruction herlihy originally define consensus maximum consensus instance register consequence definition consensus herlihy hierarchy cannot implement consensus herlihy hierarchy  define robustness hierarchy hierarchy cannot implement combination hierarchy instance along register consensus herlihy hierarchy robust consensus definition restrict fix instance definition consensus accepted definition definition herlihy hierarchy robust consensus arbitrary  herlihy hierarchy robust modify readable readable return modify return update accord deterministic function atomic capture synchronization instruction assume computation synchronization instruction relaxes assumption treat synchronization instruction individual synchronization instruction herlihy hierarchy robust propose hierarchy computational capability synchronization instruction quantify minimum amount obstruction consensus obstruction freedom guarantee return output eventually alone without obstruct synchronization instruction powerful obstruction consensus followup understand capability synchronization instruction perspective instruction assume register author lock implementation data structure instruction consensus report performance achieve swap implementation data structure implement swap progress guarantee lock exclude starvation unlike algorithm data structure universal construction remains specific implementation swap elementary instruction without sacrifice restrict instruction architecture goal theoretically efficiently compete advanced instruction swap elementary instruction regardless task universal construction consensus instruction register improve complexity fundamental synchronization task queue capability elementary instruction register respect ability efficiently simulate advanced instruction swap chose simulate swap infinite consensus ubiquitous yield efficient implementation implies elementary instruction equally efficient implementation swap author implementation comparison instruction swap register constant remote memory reference focus register hence freedom impossible achieve overall prior elementary instruction swap register respect arbitrary synchronization task overview observation swap operation attempt simultaneously register succeed instead update register operation operation succeed update accordingly achieve consensus instruction max max max instruction argument argument register register replace argument replace argument otherwise register unchanged return instruction version along max instruction argument replaces register argument argument otherwise register remains unchanged return instruction along max instruction successful swap operation concurrent task successful swap operation variation combine difference incur overhead complexity instead combine constant later formalize model implementation swap operation register max max operation correctness swap operation argue consensus max max instruction couple extension algorithm analyze throughput max max swap instruction concurrency generic elementary instruction max instruction member generic elementary instruction max generic simulate swap register finally conclude discus model sequential define operation perform operation zero argument update accord specify optionally return sequence integer register sequential operation max max operation return register operation update register max operation replaces register return max operation replaces register register operation return register operation atomic execute simultaneously execute sequentially atomicity imply whenever operation text implementation sequential collection function operation define function specifies sequence instruction execute function execute instruction operation register computation local variable variable exclusive executes sequence instruction identifier executes function function schedule sequence identifier schedule execution sequence instruction obtain replace identifier schedule instruction execute correspond execution function function execution register operation function similarly function execution register operation function function another function function implementation partial respect execution implementation linearizable extends partial execution actual return function return apply specification usually define associate linearization function specific execution implementation function return within finite irrespective schedule goal develop linearizable implementation swap register operation swap operation operation return register swap operation argument update register register leaf unchanged otherwise update return false otherwise algorithm register algorithm array entry array consists swap operation execute announce argument swap operation execute entry array consists return swap operation execute register swap along version register respectively version identifier execute successful swap operation swap operation issue register individual register register algorithm implementation swap register execute function simply return register execute swap function reading argument function return false argument simply return initial image KB image image KB image overview data structure algorithm otherwise competes execute swap function concurrently increment local counter announce respective entry array return function initialize false respective entry array compete concurrent announce identifier max operation competition version compete winner compete winner announce winner inform appropriate update return designate entry array closer algorithm reveals max max operation combine register register max max register analyze algorithm linearizable implementation swap analysis define notation refer register executes omit identifier notation context similarly variable local executes execution implementation linearizable define linearization linearization swap function execute definition return linearization operation operation otherwise execution sequence linearization swap operation successful otherwise fail swap operation linearize successful linearize linearization illustration definition linearization swap define linearization executes linearization executes execute linearization linearization linearization linearization assume execution lemma indeed image KB image linearization swap dot label execution dot label execution solid execution execution executes max instruction writes register executes max operation dot vertically linearization along correspond interpretation reference legend reader refer web version article lemma proof initialization modification happens lemma whenever increase proof lemma increase modifies lemma modifies increase lemma linearization definition define proof linearization definition clearly exists exists execution lemma increase lemma implementation linearizable statement linearization within correspond function return define sequence linearization linearization lemma statement lemma swap proof define execute modify max operation writes lemma moreover execute increase whenever modify contradiction executes execution otherwise someone already lemma lemma linearization definition within correspond duration proof statement instruction correspond linearization execute analyze unfinished separately unfinished linearization definition assume lemma writes within duration lemma unfinished linearize return linearization lemma lemma assume distinct implies proof without loss generality assume executes assumption executes max operation max execute odd similarly lemma remains proof another execute lemma update lemma proof modify execute argument lemma modify execute execute execute lemma execution execution linearization proof lemma execution execution lemma linearization definition lemma modify linearization proof linearization update execution lemma conclude linearization initialization lemma modify lemma induction argument linearization return correspond introduce notation abstract swap linearization respectively linearization refer respective initialization return correspond linearization lemma correctness induction linearization linearization separately lemma linearization linearization false false proof induction initialize initial swap linearization corresponds linearization previous induction hypothesis lemma operation definition specification swap moreover linearization previous argue previous definition specification lemma lemma linearization initialization definition lemma therefore induction hypothesis definition assume instruction execute definition conclude lemma execute moreover correspond linearization lemma unique fix already execute define execute correspond respectively definition lemma definition respectively argue previous induction hypothesis moreover operation definition lemma linearization corresponds return proof linearization definition return correspond lemma assume linearization return correspond definition lemma linearization executes operation linearization definition already execute initialize moreover afterwards max operation return return lemma linearization initializes execute relation lemma cannot definition definition assumption lemma contradicts assumption lemma corresponds previous execution return lemma linearization lemma unfinished theorem algorithm theorem algorithm linearizable implementation swap register swap function proof conclude swap function algorithm linearizable lemma lemma operation linearize execution clearly within duration return linearization operation linearization previous lemma lemma moreover swap function execute implementation consensus max max instruction consensus impossible consensus register register max operation impossible consensus register register max operation trivially operation binary consensus input operation cannot consensus  argument define configuration local variable register initial configuration input initial register configuration  configuration execution configuration terminate terminate configuration valent execution configuration terminate similarly configuration valent execution configuration terminate configuration  configuration valent valent  configuration critical  configuration initial configuration input input output termination similarly output termination initial configuration  terminate configuration  critical configuration assume binary consensus assume max operation consensus critical configuration without loss generality valent configuration valent configuration notation operation register configuration indistinguishable configuration decides termination configuration contradiction operation register operation without loss generality assume operation configuration indistinguishable respect operation local decides termination configuration contradiction operation register configuration indistinguishable configuration overwrites termination configuration contradiction max operation register register configuration argument operation respectively without loss generality assume register identical configuration indeed register configuration configuration assumption decides termination configuration contradiction critical configuration cannot cannot consensus max instruction consensus argument max instruction consensus proof discus consensus instruction max extension discus couple extension previous algorithm swap instruction return false update instead return register prior application instruction variant swap algorithm modify accommodate requirement algorithm return reading register linearization operation return algorithm return swap operation successful return prior false operation unsuccessful return successfully failure operation another however already update meantime comparison cannot return operation successful return fix previous register return whichever comparison argument operation corollary corollary linearizable implementation swap register elementary instruction swap function algorithm simulates register register max max instruction swap register simulated straightforward approach register however improve pending operation per swap register simulated counter array incremented swap operation execute information pending per allocate array swap register register allocate separately swap register simulated concretely execute operation swap swap register executes algorithm operation register executes operation register respectively counter entry array increase conceptually instance algorithm register actually observes closely register useful multiple swap register implement otherwise counter replace corollary corollary linearizable implementation swap register register elementary instruction swap function throughput analyze throughput swap versus max max highly concurrent assume communicate memory via interconnect throughput scenario executes sequence swap operation memory location executes sequence operation operation alternate max max operation memory location non operation scenario assume executes operation elementary operation return instruction compact correspond function satisfies sequence function sequence function sequence obtain identical apply initial lemma max max compact instruction whereas swap proof sequence max operation sequence operation argument register apply sequence register sequence max operation operation argument construct sequence operation argument register apply sequence argument operation argument neither operation register argument operation strictly swap operation argument operation unique assume contradiction swap compact sequence sequence swap operation sequence sequence argument operation register apply sequence argument unique consequently operation argument unsuccessful however apply sequence register none operation argument remains contradiction communicate memory via butterfly interconnect concurrent update memory location interconnect memory location binary leaf memory location via intermediate node link assume batch instruction instruction butterfly interconnect update memory instruction traverse link interconnect instruction memory location instruction pipelined traverse memory intermediate node instruction traverse link simultaneously towards memory define concurrent throughput swap average instruction apply memory scenario similarly concurrent throughput max max average instruction apply memory scenario theorem quantifies concurrent throughput instruction theorem concurrent throughput swap max max pipelined butterfly interconnect proof swap executes sequence operation operation execute instruction cannot combine reduce shorter sequence pipeline due lemma apply sequentially memory instruction traverse interconnect instruction sequentially throughput max max operation executes operation operation batch instruction batch batch contains instruction max max instruction combine pipeline due lemma instruction traverse link intermediate node combine replace instruction batch instruction interconnect batch traverse interconnect reduce instruction batch apply instruction batch throughput non operation throughput approximately elementary instruction versus swap factor proportional elementary instruction argue max max instruction consensus generic instruction consensus instruction max register register otherwise register binary operation commutative associative commutative operand affect associative apply operation sequence operand affect addition multiplication couple instruction return instruction max instruction modifies commutative operation max unsuccessful instruction max consensus commutative associative operation trivial consensus impossible consensus register register max instruction binary consensus register register max instruction argue initial configuration  critical configuration configuration configuration assume without loss generality valent configuration valent configuration symbolic notation operation operation register configuration configuration configuration indistinguishable operation register decides termination configuration contradict valent valent operation register operation assume without loss generality operation register register max configuration regardless operation content register identical configuration operation configuration indistinguishable decides termination configuration contradiction operation register operation register configuration content register remain unchanged configuration indistinguishable respect decides termination configuration contradiction max operation register max operation register max operation register assume without loss generality register configuration configuration configuration content identical configuration configuration assumption configuration operation apply configuration similarly configuration identical operation commutative associative register termination configuration contradiction execute configuration execute configuration register identical configuration configuration assumption register configuration execute configuration configuration assumption assumption execute applies identical configuration register remain unmodified terminates identical configuration contradiction configuration yield configuration register configuration configuration assumption register configuration register identical configuration decides termination configuration contradiction impossible critical configuration terminate register max register consensus max instruction conclude max instruction consensus operation constant clearly operation commutative associative max operation performs max consensus max instruction max instruction contradiction consensus max instruction complexity overhead swap max instruction max instruction operation clearly instruction max instruction simulate swap register theorem max operation performs max operation however simulate max instruction available register swap register complexity achieve simulation max instruction swap register bound complexity implementation detect wakeup load link conditional register load link conditional register advanced register swap register operation return register SC successful operation writes register return otherwise operation unsuccessful register return false execute operation successful perform successful SC operation register operation register otherwise operation unsuccessful intuitively wakeup detect  formally terminate finite return terminate return return wakeup SC register bound implement max register SC register lemma implementation max register SC register proof wakeup max register initialize register executes max register return return return clearly max operation max operation execute operation return max operation execute afterwards execute later return execute implementation max register SC register wakeup SC register contradiction easily implement swap register SC register conclude theorem implementation max register swap register proof assume implementation swap simulated SC implementation SC register contradicts lemma conclusion issue algorithm unbounded sequence algorithm register logarithmic swap operation execute actually growth sequence unbounded counter swap operation execute per successful swap operation understand capability elementary instruction respect ability efficiently simulate swap elementary instruction max max swap theorem synchronization simulation synchronization freedom due theorem conclude synchronization task solvable impossible synchronization task implement counter max register practical factor complexity register max max operation return traverse interconnect latency however elementary instruction swap instruction respect complexity throughput highly concurrent highlight capability elementary instruction another aspect synchronization instruction