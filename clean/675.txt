emergence database service paradigm secure data outsource become crucial challenge strongly imposes scenario access challenge access policy data owner preserve data address inference leakage exploit functional dependency propose approach vertical partition secure sub schema partition distribute extend approach secure query processing model preserve access policy query data distribute partition effectiveness algorithm confirm observation variety conduct previous keywords access inference data dependency distribute database security privacy introduction recent increase volume variety data diverse source data storage processing become highly significant hence data owner data storage service provider CSSP increase flexibility optimize storage enhance data manipulation decrease processing spite access barrier compute data outsource arrangement indeed access policy data owner preserve data access prohibit owner access policy prohibit data host CSSP research investigate maintain balance data utility researcher attempt enforce access policy data owner CSSP sensitive data moreover data utility maintain exploitation query workload however research effort treat indirect access bypassing access policy indirect access via inference channel malicious user combine legitimate response semantic constraint data dependency addition author highlight query workload maintain data utility however due error physical parameter estimation query workload available useless previous focus establish efficient distribute query evaluation strategy secure data reside CSSP data  research challenge database role exploit reduce amount server user query span capture inference leakage evaluate distribute query derive aggregation partial distribute partition retain access policy propose graph approach efficiently preserve owner access policy data externalize firstly propose approach relies semantic relatedness user role schema attribute derive optimal vertical partition optimal partition minimization distribute query minimize average query span average server involve execution query minimize distribute query performance speedup distribute server possibility user query communication CSSP important suppose sub schema assign partition host server moreover enhance graph approach propose detect inference channel deduce functional dependency basis hypergraph theory propose hypergraph partition algorithm compute secure partition CSSP propose partition algorithm advantage distribute enforce confidentiality constraint related access inference attribute preserve visibility constraint related optimal distribution propose monitoring module monitor distribute query suspicious remainder organize highlight research effort related preliminary motivate scenario propose methodology described examines dedicate conclusion future related recent literature investigate data outsource related access mechanism technique propose enforce access CSSP attempt enforce access non communicate server impact communication server query execution communication security breach investigate relation inference survey data outsource optimality constraint data outsource presence access policy secure data outsource non communicate server attempt enforce access database outsource vertical fragmentation assumption server communicate research aim split database untrusted server preserve data privacy attribute possibly encrypt introduce approach enforce confidentiality privacy outsource data CSSP propose technique vertical fragmentation apply minimal encryption preserve data exposure malicious however fragmentation algorithm enforce database logic schema normal fragmentation query execution minimal researcher treat concept secure data publishing presence confidentiality visibility constraint model latter boolean formula fragment truth assignment author binary decision diagram  technique fragmentation satisfies confidentiality visibility constraint author secure fragmentation minimum query firstly define fragmentation sum query execute execution frequency secondly resort heuristic local graph approach obtain optimal fragmentation researcher propose technique duty vertical fragmentation address confidentiality preserve outsource data CSSP separation treat optimization maximize utility fragment database enhance query execution distribute server NP hardness proof separation duty combination NP bin pack vertex secure data outsource communicate server investigate data outsource communicate server implement secure query evaluation strategy retain access policy server communicate author built propose approach securely outsources data fragmentation encryption enforce access query data resort query privacy technique propose approach assume distribute server collude data confidentiality connection server primary foreign addition query evaluation model private information retrieval ensure data unlinkability perform malicious user semi query propose technique enforce database schema normalize generate confidentiality constraint due transformation inter constraint singleton association constraint affect quality fragmentation algorithm query integrity tackle researcher inspire propose technique verify integrity query compute potentially untrusted provider author aim prevent server query breach user privacy marker twin bucket adapt preserve integrity query execute semi introduce strategy minimize verification limit adoption bucket twin marker twin marker slim tuples inference traditional access model sensitive data disclosure via access however fail prevent indirect access indirect access malicious user inference channel inference channel derive combination legitimate metadata semantics statistical information exception error message user define function data dependency vertical database fragmentation technique author ensure data confidentiality presence data dependency attribute dependency unauthorized user deduce information sensitive attribute tackle issue author reformulate graphically hypergraph representation compute closure fragmentation deduce information derive fragment via dependency identify indirect access nevertheless approach explore relational database inference tackle data dependency approach multi relational database inference leakage functional dependency knowledge treat inference channel functional dependency data outsource scenario although data outsource mention author inspire inference functional dependency meaningful proactively decompose relational logical schema query user inference channel cannot functional dependency graph vertex attribute functional dependency inference channel define sub graph attribute related approach inference channel relaxed chain consequently minimize dependency loss nevertheless technique semantic loss query rewrite technique query decompose optimize schema partition researcher devote research effort address vertical database schema partition optimality constraint constraint minimize resource consumption CSSP author elaborate experimental relation resource consumption query distribute multiple server reality minimize server invoked user query enhances throughput decrease latency consequently decrease resource consumption CSSP literature classify category workload aware approach approach focus workload information regard query frequency involve attribute arrival derive optimal schema distribution CSSP author rely hypergraph representation database tuples vertex transaction query hyperedges relate hence partition algorithm minimize partition transaction minimize hyperedges hypergraph however approach applicable query workload available scenario useless due error physical parameter estimation workload independent technique propose workload independent approach approach attempt exploit database semantics without query derive optimal vertical schema partition nonetheless approach methodology attempt exploit logical database schema extract functional dependency database perform partition inference leakage malicious user violate access policy moreover ontology driven partition horizontally partition data load relational schema accord semantic similarity nevertheless adopt ontology heavily rely structure primarily relation detects similarity concept relation author propose cluster fragmentation replication technique derive semantic fragmentation data database flexible query medical taxonomy semantic similarity medical expression however methodology previously approach data load database schema situation relevant related classify classification criterion confidentiality constraint confidentiality constraint enforce access visibility constraint inference query evaluation strategy comparison exist propose model confidentiality    evaluation               literature review highlight research effort devote ensure data confidentiality later externalize deduce none propose approach investigate simultaneously criterion access inference leakage semantic constraint reduce distribute transaction visibility constraint maintain secure query evaluation strategy significant contribution data outsource guarantee inference leakage functional dependency none cite establish secure query evaluation strategy data research address limit reality contribution adoption vertical partition consideration extreme situation database designer indeed suppose neither query workload available database schema load data database schema semantic constraint user privilege available database designer confirms novelty research propose preliminary motivate scenario prior detail approach introduce definition relation research definition confidentiality constraint relation schema attribute confidentiality constraint define subset attribute partition combination attribute however subset reveal without loss generality confidentiality constraint cardinality definition visibility constraint relation schema attribute visibility constraint monotonic boolean formula attribute visibility constraint attribute jointly visible partition definition functional dependency functional dependency FD schema statement attribute schema associate precisely refer LHS RHS functional dependency definition meaningful meaningful briefly equi operation foreign primary inference define inhibit meaningful attribute confidentiality constraint definition violate transaction violate transaction query execute combine disclosure sensitive information violate confidentiality constraint definition hypergraph generalization graph vertex formally hypergraph node vertex non empty subset hyperedges illustrate propose methodology hospital database schema schema patient medical addiction cure hence expose sensitive information untrusted security breach image KB image hospital schema role chemical drug agent relation patient patient diagnosis admission date patient detail functional dependency relation drug drug drug code drug drug functional dependency confidentiality constraint drug code patient detail mention unlike previous impose attribute belonging confidentiality constraint relation authorize inter relation confidentiality constraint constraint relation consumption patient drug functional dependency association sensitive attribute expose data unauthorized disclosure accord neither chemical drug agent visibility attribute drug code patient detail confidentiality constraint specify accord policy access specify request deny policy request deny access default functional dependency malicious user inference channel violate confidentiality constraint assume selection query issue combine query functional dependency derive meaningful obtain patient detail drug code simultaneously induces violation confidentiality constraint observation encourage partition vertically relation fragment CSSP preserve confidentiality constraint inference channel maintain attribute visible ensure data utility propose approach secure data outsource graph approach overview propose methodology approach relies relational model aim secure sub schema sub schema partition partition exactly server CSSP addition introduces secure distribute query evaluation strategy efficiently request data distribute partition retain access policy methodology input relational schema attach confidentiality constraint functional dependency FD user role role database phase constraint generation phase aim generate constraint addition confidentiality constraint vertical schema partition visibility constraint generation constraint enforce constraint partition phase severity confidentiality constraint generate perform semantic analysis relational schema semantic relatedness attribute user role constraint preserve visible relational schema fragment aim maximize intra dependency attribute frequently access role minimize inter dependency attribute partition constraint inference generation constraint enforce confidentiality constraint constraint resort propose functional dependency graph generate chain relaxed technique chain minimize dependency loss chain enforcement attribute LHS RHS functional dependency confidentiality constraint consequently guarantee chain broken schema partition phase resort hypergraph theory partition hypergraph constraint satisfaction reformulate multi objective function optimize therefore propose greedy algorithm partition constrain hypergraph partition minimize multi objective function query evaluation model propose monitor module mediate query issue user data distribute partition version approach monitor module contains mechanism role access mechanism access mechanism mechanism user role issue query grant execute distribute query query directly desire partition otherwise query access mechanism input violate transaction prohibit user query query violate transaction query revoke image KB image propose methodology generate secure partition lock suspicious query visibility constraint generation semantic relatedness definition user role role database privilege assign user role access resource confidentiality constraint deny access role associate semantically describes role definition semantic relatedness semantic relationship relationship entity hence semantic relatedness role attribute calculate average semantic relatedness attribute consequently denotes cardinality propose workload independent technique generate visibility constraint addition confidentiality constraint vertical schema partition objective reduce amount server user query span reduces communication site avoids excessive network delay improves data locality suppose user assign role database aim maximize intra dependency attribute frequently access role assign partition minimize inter dependency attribute partition detect semantic relatedness user role attribute logical schema semantic relatedness threshold attribute visibility constraint constraint attribute frequently access role visibility constraint specify definition definition visibility constraint generation relation schema attribute user role described respectively threshold visibility constraint vertical partition visibility constraint completeness attribute visibility constraint  threshold attribute algorithm visibility constraint semantic relatedness algorithm image KB image algorithm generation visibility constraint role chemical drug agent simplify specification threshold database designer compliance requirement weak relatedness medium relatedness relatedness semantic relatedness derive unified medical UMLS ontology similarity interface threshold belonging medium relatedness generate visibility constraint accord algorithm visibility constraint assign role visibility constraint assign role chemical drug agent ensure data lossless partition phase hence assumption distribute server communicate conceivable partition logical schema accord constraint server query issue server query related chemical drug agent partition refine confidentiality constraint explain image KB image partition visibility constraint compute semantic relatedness rely propose determines relatedness concept counting overlap correspond definition however implement wordnet author definition overlap distinguish multiple concept therefrom author extend occurrence vector vector concept definition corpus vector average occurrence vector concept relatedness concept calculate cosine concept vector UMLS computes strength semantic relatedness concept calculate cosine angle vector formula apply proposal attribute belonging role concept therefore concept describes hence semantic relatedness role attribute formula compute role attribute inference phase rely propose algorithm identify inference channel perform meaningful propose technique performs chain consequently minimize dependency loss phase building functional dependency graph aim chain derive confidentiality constraint functional dependency resort algorithm decompose functional dependency functional dependency attribute RHS individual vertex attribute schema vertex attribute exists LHS functional dependency exist relation individual node vertex algorithm image KB image algorithm building functional dependency graph phase generate chain definition ancestor confidentiality constraint vertex functional dependency graph exist attribute confidentiality constraint ancestor confidentiality constraint definition chain confidentiality constraint denote JC hereafter functional dependency graph ancestor confidentiality constraint aim identify chain malicious user derive confidentiality constraint meaningful chain detection algorithm reverse attribute vertex apply dfs vertex vertex exist vertex ancestor  attribute assume vertex combination construct attribute vertex chain chain composes another discard apply algorithm confidentiality constraint ancestor chain generate chain emphasize phase detect relaxed definition relaxed detection consists detect minimum functional dependency  chain confidentiality constraint satisfy security requirement malicious user derive confidentiality constraint attribute chain relaxed equivalent minimum NP hence algorithm inspire greedily resolve algorithm compute chain confidentiality constraint algorithm   chain sort accord  descend attribute node ascend detect chain sort chain unmarked chain enforce algorithm phase generate confidentiality constraint algorithm image KB image algorithm chain detection algorithm image KB image algorithm detect relaxed execute algorithm previous  chain naive approach dependency already enforce confidentiality constraint minimize dependency loss however chain accord algorithm prefer simultaneously minimize dependency loss minimize dependency loss LHS RHS partition processing partition phase constraint inference generation unlike technique propose chain data loss query rewrite technique query decompose propose algorithm enforce algorithm confidentiality constraint database designer chain LHS RHS processing partition hence malicious user perform distribute query distribute partition derive confidentiality constraint chain indeed malicious technique treat subsection elaborate secure distribute query evaluation strategy mention guarantee data lossless distribute fragment partition proceed functional dependency tuple identifier fragment attribute algorithm proceeds algorithm image KB image algorithm constraint inference generation apply algorithm generate algorithm extend confidentiality constraint constraint generation propose methodology constraint confidentiality constraint visibility constraint constraint inference confidentiality constraint subsection constraint schema partition secure optimal distribution schema partition phase approach resort hypergraph theory optimal attribute placement decision preserve confidentiality constraint hypergraph model partition graphically propose greedy algorithm optimal partition retain access constraint hypergraph partition previously database partition approach author workload approach database partition rely hypergraph representation database tuples vertex horizontal distribution transaction query hyperedges relate partition algorithm minimizes partition transaction minimize hyperedges hypergraph choice hypergraph theory inspire comparison author assess quality partition distribute transaction criterion optimality adopt comparison evaluate distribute transaction hypergraph partition algorithm manual partition manual replication replication hash partition primary tuple hash evaluate datasets hypergraph partition technique demonstrate performance algorithm hypergraphs constraint satisfaction constraint satisfaction define tuple finite variable finite domain constraint variable constraint scope relation arity constraint relation constraint satisfaction associate hypergraph vertex hypergraph variable hyperedge vertex constraint scope vertex attribute hyperedges visibility confidentiality constraint illustrates partition respect visibility constraint confidentiality constraint hyperedges visibility constraint hyperedges confidentiality constraint sake simplicity illustrates mapping attribute vertex hypergraph image KB image hypergraph representation partition attribute vertex mapping     date  detail   code   hyperedge assign explain utility parameter introduce multi objective function dot hyperedges partition algorithm confidentiality constraint however hyperedges visibility constraint preserve therefrom objective function maximize hyperedges confidentiality constraint minimizes hyperedges visibility constraint traditional hypergraph partition technique optimize objective function minimize communication minimize hyperedge min  vertex hyperedge maximize hyperedge max propose multi objective function objective max min priority formulation objective handle separately greedy algorithm computes partition simultaneously optimizes objective preference objective priority algorithm minimize function hyperedges confidentiality constraint visibility constraint respectively partition compute hyperedge confidentiality visibility constraint respectively violate confidentiality constraint violate visibility constraint constraint confidentiality constraint correspond hyperedge algorithm prioritize violate constraint constraint uncertain visibility constraint correspond hyperedge algorithm priority compute balance partition propose greedy algorithm compute balance partition minimize objective function algorithm attribute partition mapping individual vertex partition label later greedy approach mostly determines optimal approach highlight balance constraint parameter latter enforces partition algorithm generate partition difference vertex partition exceed threshold fix accord imbalance tolerance tune partition algorithm generate balance partition accord vertex extreme workload available imbalance tolerance balance constraint BC define vertex hypergraph partition vertex assign partition algorithm minimizes prioritize hyperedges confidentiality constraint preserve hyperedges visibility constraint confidentiality constraint ensure assign vertex correspond hyperedge partition greedy assign vertex retain balance constraint previous illustrates partition accord algorithm confidentiality constraint visibility constraint balance constraint partition tuple identifier artificial attribute ensure data lossless functional dependency involve primary partition image KB image refine partition hospital schema BC algorithm image KB image algorithm compute balance partition query evaluation model definition role label user role database label role execute distribute query partition role execute local query query issue role exactly partition developed query model spark architecture data manipulate user  latter relational operator spark sql relational processing performance establish DBMS technique enables extension advanced analytics algorithm graph processing machine query model compose component monitoring module compose sub module role access module RBAC implement apache sentry access module  monitoring module mediates user query enforces runtime approach consists monitoring execution query revoke query violation access policy node contains cluster manager decompose user query monitoring module worker worker node confidential data responsible relational query processing introduce query evaluation model compose violate transaction detection query lock image KB image query evaluation strategy augment monitoring module violate transaction detection exploit functional dependency graph define introduce algorithm automatically enumerate query query combine combination violate transaction VT violate transaction functional dependency confidentiality constraint query forbidden cope firstly propose algorithm enumerate violate transaction propose runtime approach prohibit violate transaction completion violate transaction malicious user perform distribute query guarantee partition technique confidentiality constraint cannot violate partition confidentiality constraint algorithm functional dependency graph chain violate transaction generate algorithm image KB image algorithm VT hence malicious user combine authorize query functional dependency evaluate query violate transaction consequence violates confidentiality constraint query lock query lock technique heavily relies role access model RBAC access model  RBAC privilege grouped role role various function organization user assign role responsibility qualification hence user assign role activate session  consists monitoring access request revoke violation access policy  module compute  user access launch access request  violation access policy access request revoke otherwise access ensure maximal availability data ensure non disclosure sensitive information propose runtime approach consists monitoring execution query revoke query violation policy assumption malicious user cannot collude violate transaction monitoring module user launch query later automatically mediate role access mechanism user role label verify label indicates user grant execute distribute query user label query node relational processing otherwise user label query role access mechanism access mechanism latter violate transaction prohibit input computes  user query query  violate transaction query lock otherwise query node algorithm describes monitoring model user query algorithm image KB image algorithm query lock experimental experimental propose approach analysis propose algorithm developed prototype methodology java inference module partition module module access user apache sentry enforce access user role evaluate query execution data framework   VM apache spark evaluation another mysql DBMS conduct core PC inter core TM CPUs ghz centos GB ram benchmarking relational database schema retail link RT relational dataset convert csv file customer csv item csv category csv department csv evaluation trial perform random functional dependency proportional functional dependency explain expansion chain functional dependency graph algorithm identify relaxed scenario functional dependency per chain algorithm generate constraint inference reasonable timing although algorithm promising functional dependency probably scenario algorithm exponential behavior investigate future image KB image impact functional dependency timing generate constraint inference depict impact variation attribute partition algorithm algorithm hyp propose literature heuristic HS algorithm attribute exceed threshold attribute HS algorithm exponential behavior become unfeasible contrast execution algorithm remains attribute guarantee applicability relational scheme algorithm perform offline database designer generate distribute database schema image KB image impact attribute partition algorithm fix attribute varied confidentiality constraint trial visibility constraint trial examine execution partition algorithm increase confidentiality constraint attribute visibility constraint importantly increase execution due confidentiality constraint likely highly fragment schema however increase visibility constraint fix confidentiality constraint slightly affected execution partition algorithm image KB image computational confidentiality constraint visibility constraint confidentiality constraint visibility constraint trial trial execution mysql database SparkSQL local query database firstly setup centralize server mysql trial perform compute execution query query trial partition database vertically partition accord propose algorithm visibility constraint confidentiality constraint deployed spark cluster worker node illustrate execute query mysql database performance SparkSQL distribute query becomes SparkSQL execution mysql DBMS optimization local query maximization data locality adopt partition technique optimization query parallelization query execution image KB image comparison query execution mysql SparkSQL perform fix issue query user evaluate suspicious query suspicious query increase query issue user confirm monitoring module reasonable timing enforce access mechanism RBAC  however query issue investigate future image KB image lock suspicious query conduct practicability methodology nevertheless ensure usability approach parameter consideration functional dependency propose methodology limitation functional dependency typical scenario functional dependency probably threshold indeed important adequate parameter directly affect visibility constraint affect partition perform optimal threshold accord research domain bioinformatics attempt derive optimal threshold interpret semantic similarity particularity generate partition exactly server allocate worker generate partition relational schema input static involve methodology database schema execute approach scratch conclusion perspective investigate secure data outsource presence inference leakage functional dependency exploit semantic relatedness vertical partition flexibility database schema user query minimize distribute transaction model database schema graph functional dependency capture chain data disclosure resort hypergraph theory derive partition algorithm aim chain preserve access optimize schema fragmentation lastly built secure query evaluation model suspicious query research direction pursue workload becomes available database challenge dynamically reallocate distribute database fragment distribute partition retain access policy indeed develop dynamic reallocate algorithm consideration query workload confidentiality constraint challenge task machine suitable technique situation towards intelligent database another issue collaborative inference indeed propose violate transaction achieve prevent inference leakage violate transaction combination query user furthermore aim future semantic constraint source inference leakage inclusion dependency dependency  dependency obvious maintain user  mechanism without optimal archive policy operational drawback hence research challenge establishment optimal archive policy efficiently user  mechanism indeed enhance query runtime monitoring technique adopt