graph link data query traverse explore enterprise transaction mining temporal graph recent variant entity query structure social telecom transit epidemic network however graph database query limited temporal relation graph entity entity distribute resource address gap extend linear query model graph intuitive temporal predicate aggregation operator temporal graph distribute execution model temporal query interval centric compute model develop novel model efficient execution perform detailed  distribute query static dynamic temporal graph vertex query workload derive LDBC benchmark frequently sub query latency commodity cluster faster neoj memory graph database  spark distribute graph query  completes query graph workload completion baseline model selects query within optimal execution despite irregular graph processing exhibit weak efficiency node node query workload keywords graph processing temporal graph distribute schedule data platform query planning introduction graph model analyze link data various domain graph vertex associate besides graph structure information schema capture knowledge graph concept relation social network forum message epidemic network infect status location financial retail transaction purchase query query graph user defines sequence predicate vertex along graph graph community user vertex label IDs orange relationship define hop query EQ vertex UK vertex another tag label hike vertex query  ignore interval query identify concept pathway knowledge graph social network fake news detection retail website perform rapidly within interactive request website exploratory query analyst graph database transactional workload graph update infrequently query workload graph query load retain graph memory service request latency without lock consistency protocol index accelerate graph vertex vertex exceed memory machine necessitates distribute graph challenge increasingly graph feature variety domain however exist graph data model fail entity distinguish graph interval lifespan associate entity vertex entity available former static temporal graph latter dynamic temporal graph another graph topology query perform evolve structure outside scope article image KB image sample temporal graph community user interpretation reference legend reader refer web version article temporal graph lifespan vertex inclusive exclusive  remain entity graph static temporal graph valid  dynamic temporal graph gap reflect data model query distinction independent TI dependent TD query define temporal graph TI query examine graph snapshot EQ execute temporal graph contrast TD query capture temporal relation entity across consecutive interval EQ tag hike tag vacation EQ another latter treat another fails express temporal relation ensure entity EQ EQ   respectively query impossible express graph database exacerbate query dynamic temporal graph query EQ dynamic temporal graph   living UK alice platform snapshot adapt TI query temporal graph TD query cannot express meaningfully TD algorithm enforce strict temporal interval along increase decrease limit query expressivity motivate intuitive temporal predicate concisely express temporal relation flexible platform execute lastly scalability exist graph limited graph query distribute memory latency alone temporal graph specific contribution article propose temporal graph model intuitive temporal predicate aggregation operator query distribute execution model query interval centric compute model develop novel model graph statistic multiple execution conduct detailed evaluation performance scalability temporal graph query derive LDBC benchmark configuration neoj  apache spark discus related conclusion prior version conference article substantially extends specifically introduces temporal aggregation operator query model implement within execution model detail illustration complexity metric query model distribute execution model query optimization distribute query query planning optimization rigorous empirical evaluation additional dynamic temporal graph aggregation query workload weak component query execution besides detailed analysis model benefit baseline platform comparison related distribute temporal graph processing distribute graph processing platform graph algorithm commodity cluster typically program abstraction google pregel vertex centric compute model component centric variant algorithm breadth centrality mining execute bulk synchronous parallel BSP model graph application explore entire graph throughput batch processing instead focus exploratory transactional query careful distribute graph platform optimization response parallel graph platform hpc cluster accelerator optimize memory communication access graph billion entity core focus throughput graph algorithm query static graph instead target commodity hardware vms node core accessible address query temporal graph distribute abstraction platform temporal algorithm batch execution limited execute TI algorithm snapshot unable seamlessly model TD query prior graphite interval centric compute model icm TI TD algorithm limit respect algorithm framework propose distribute query relax index propose query execution latency response platform incremental compute graph update focus materialize graph temporal lifespan vertex already future incremental query processing graph temporal graph query query model graph associate query popular semantic graph SPARQL highly flexible declarative syntax costly execute graph others narrower declarative query primitive reachability graph manage graph distribute execution model however none entity query specification execution limited query index specific temporal feature graph  propose model graph exist series graph snapshot index technique minimize snapshot perform brute mining restrict multi snapshot approach limit fully exists  across span limited machine execution limit  conjunctive disjunctive reachability query series temporal graph snapshot index strongly component scc snapshot  across traverse vertex  within hop assumes graph  reachable within snapshot across likewise  temporal reachability query index label scheme  temporal graph static graph expand additional chain reachable chain vertex label respect reachability arrival query span interval however predicate neither distribute execution literature approximate query graph arrow examines reachability query non temporal temporal graph random perform source sink vertex intersection vertex approximation bound diameter graph tunable parameter balance accuracy query latency iyer approximate mining non temporal graph statistical technique sample graph estimate occurrence specific graph however approach cannot enumerate actual vertex  temporal traversal query interval graph closest implement extend gremlin graph query temporal propose optimization gremlin traversal operator parallelization lazy traversal within machine execute  however novel temporal operator temporal relationship introduce index query planning execution efficient optimization tightly couple execution distribute execution lastly source proprietary graph database purpose graph storage query capability transactional access graph data however graph query model leverage temporal dimension temporal query native neither intuitive express temporal notion efficient execution due lack aware query optimizer execution summary various platform lack capability model graph query concept enable temporal query span temporal relation across entity distribute execution commodity cluster graph query optimizer leverage graph structure temporal feature temporal graph query model temporal concept temporal graph concept drawn earlier linearly discrete domain non negative domain atomic increment interval indicates interval extend exclude interval relation boolean comparators interval fully relation denote relation fully relation relation relation relation relation overlap relation temporal graph model formally define temporal graph graph typed vertex vertex tuple unique vertex ID vertex schema lifespan existence vertex interval typed unique ID source sink vertex respectively lifespan schema function vertex vertex vertex valid interval definition applies graph uniqueness constraint vertex vertex ID exist continuous duration referential integrity constraint lifespan within lifespan incident vertex constant association enforces vertex incident remain lifespan define static temporal graph restrict version temporal graph vertex static valid entire vertex lifespan formally temporal graph without restriction dynamic temporal graph vertex non overlap interval dynamic temporal graph  omit  static temporal graph query syntax  syntax EQ UK another tag hike UK tag hike EQ tag hike tag vacation tag hike tag vacation lifespan lifespan EQ another lifespan lifespan EQ bob existence network bob temporal query hop linear chain query vertex predicate predicate syntax query model predicate illustrate query earlier image KB image clause atomic predicate equality containment flexible comparison vertex lifespan interval temporal clause variety comparison within context vertex clause combine boolean operator predicate optional direction wildcard vertex hop novel powerful temporal operator introduce relationship etr unlike clause etr clause allows comparison across lifespan specifically define intermediate vertex int fragment allows lifespan lifespan lifespan motivation operator social network mining identify fraud transaction network query EQ EQ concisely capture novel temporal aggregate operator query grouped vertex temporal computes specific aggregation vertex aware specifically duration vertex query contains vertex query perform temporal vertex perform aggregation operation vertex user omit aggregation return aggregate unique temporal vertex query EQ bob existence network varies across implementation min max operation others easily distribute query relaxed interval centric compute architecture distribute query query distribute memory iterative execution model extends relaxes interval centric compute model icm icm temporal dimension pregel vertex centric iterative compute model allows user define computation perspective interval vertex interval vertex lifespan iteration superstep icm application user define compute function active interval vertex operates prior message receives interval update  function aligns lifespan input message lifespan partition interval interval vertex compute executes temporally intersect message vertex user define scatter function interval vertex allows temporal message update vertex vertex message lifespan usually intersection lifespan message deliver bulk barrier scatter phase compute phase iteration vertex message interval overlap lifespan activate overlap across supersteps message generate superstep execution compute scatter function data parallel within superstep invocation interval vertex concurrent thread compute scatter primitive graphite implementation icm apache giraph illustrate however icm enforces respect behavior interval message interval vertex overlap compute message interval update compute lifespan overlap scatter scatter sends message lifespan overlap update temporal query requirement query navigate vertex adjacent vertex occurs  operator icm enforces respect behavior relax icm non respect behavior compute scatter message execution requirement query leverage interval centric feature distribute execution model execution model vertex predicate query succeed predicate evaluate icm superstep specifically vertex predicate evaluate compute function predicate scatter function specialized logic init evaluate vertex predicate query receives query client broadcast worker superstep worker operates graph partition thread per partition thread compute scatter function active vertex partition init logic vertex superstep reset vertex query evaluates vertex predicate query vertex update flag scatter invoked incident define query scatter evaluates predicate sends partial evaluate destination vertex message fails traversal prune iteration compute logic vertex message evaluates vertex predicate partial input message vertex scatter incident predicate vertex append prior partial destination vertex supersteps superstep vertex message return client illustrates sample query vertex predicate superstep init vertex evaluate vertex predicate scatter evaluate predicate message remote vertex superstep vertex message invoke compute logic evaluate vertex predicate hop optionally precede  operator message interval vertex vertex scatter predicate message superstep vertex message evaluate predicate return user vertex superstep return multiple message vertex return scatter evaluates temporal relationship scatter precede lifespan message lifespan scatter temporal aggregate query construct superstep non aggregate query vertex associate lifespan vertex aggregate extract temporally distinct temporal vertex  operator applies aggregation operator static temporal graph interval centric feature icm  entire lifespan vertex treat interval vertex execution likewise however graph model management apis interval vertex dynamic temporal graph leverage interval centric feature icm specifically enable  message interval vertex lifespan compute interval vertex message temporally align grouped interval scatter lifespan overlap interval vertex scope limited overlap compute scatter function access message relevant interval multiple interval vertex distribute query execution query evaluate splitting query independently evaluate combine vertex predicate query potential split query split execution proceeds  outer predicate split vertex illustrate trivial split vertex predicate default execution query alternative split vertex predicate evaluates split beneficial vertex predicate graph intuitively evaluate discriminate predicate selectivity vertex reduce model attempt split modify logic handle execution concurrently split superstep evaluate predicate compute init scatter logic superstep evaluate predicate superstep available nest loop extend multiple split future optimization graph partition giraph default hash partition vertex graph vertex IDs onto worker knowledge entity schema graph partition host vertex eliminate evaluation vertex partition vertex specify hop query filter compute  giraph vertex typed partition illustrate skewed hence partition fully exploit parallelism available worker thread perform topological partition typed partition sub partition metis considers vertex within typed partition lifespan partition reduce network message vertex sub partition typed partition distribute robin manner worker worker sub partition per worker sub partition superstep typically evaluates query predicate vertex ensures load balance typed sub partition across worker superstep execution image KB image optimization graph described partition instead hash partition improves average execution query workload combine metis partition improvement later report optimization message optimization overlap partial separately maintain message query execution redundancy message memory instead construct vertex previous hop subsequent vertex descendant assume binary expansion query hop reduces execution completes traversal expand illustrate vertex vertex predicate hop partial receives message evaluates hop predicate execution unique across message sub instead sub message similarly receives message predicate sends sub message receives sub message evaluates predicate sends sub prune traversal message predicate successfully sends  return leaf individual client memory optimization graph data model exclude interval java memory vertex jvm byte rewrite query mapping intern java replaces individual graph besides reduce memory usage graph allows predicate comparison pointer equivalence query planning optimization query execute distribute execution execution goal model quickly estimate execution optimal execution absolute accuracy query execution ability distinguish execution execution propose analytical model statistic temporal graph combine estimate spent stage distribute execution estimate execution query enumerate contribute split query graph statistic predict vertex active superstep query execution vertex predicate superstep activate hop query superstep active vertex model estimate runtime superstep across supersteps return estimate execution discus statistic maintain model predict vertex execution graph statistic maintain statistic temporal graph estimate vertex specific query predicate typically relational database maintain statistic frequency tuples unique challenge variant hence vertex maintain 2D histogram axis indicates axis entry histogram vertex within histogram axis vertex graph india UK axis lifespan graph interval vertex interval entire graph vertex india interval vertex similarly interval formally define histogram function return estimate frequency vertex val interval average vertex maintain vertex granularity impact statistic maintain accuracy estimate frequency optimization regard dynamic program DP coarsen histogram along hierarchical tile ensures frequency variance individual tile threshold frequency india interval hence tile aggregate replace average similarly india UK frequency interval tile reduces entry maintain histogram complexity bound impact accuracy statistic important vertex pre coarsen reduce histogram actual coarsen factor graph enumerate tag sort frequency cluster frequency perform tile cluster retain cluster rewrite input query replace cluster IDs instead image KB image query planning interval maintain histogram tile insert node tile frequency within interval invariant node interval node interval interval interval construct 2D histogram tile histogram becomes node node interval insert tile subtree interval node interval sub lesser overlap perform lookup lookup interval interval prune accordingly binary function performs lookup interval within complexity construct interval aggregate statistic graph vertex graph average per vertex dominate tile DP cluster coarsen span building interval tile coarsen histogram lookup balance lookup intersect interval raw statistic graph estimate active vertex query contains query query predicate vertex evaluate superstep split aggregation operator evaluate superstep estimate active vertex superstep recurrence relation denote sequence vertex predicate predicate query predicate clause temporal clause interval vertex lifespan similarly clause combine boolean operator described query syntax earlier denote vertex enforce clause predicate denote vertex vertex specify predicate degenerate vertex graph superstep decompose stage init compute active vertex vertex vertex predicate scatter active vertex identify predicate identify active vertex superstep execution vertex graph active specify vertex predicate partition limit active vertex vertex denote active vertex respectively vertex predicate denote active respectively predicate recursively define active vertex superstep vertex reflect localization init function vertex partition vertex subsequent supersteps active vertex upper bound usually previous superstep message activate vertex compute function graph statistic vertex vertex predicate selectivity active vertex estimate vertex output init compute selectivity iterate clause predicate frequency average average vertex along temporal clause aggregate frequency aggregation adjacent clause apply aggregation logic frequency return frequency perform former estimate latter estimate statistically independent average vertex predicate frequency clause aggregate vertex vertex selectivity vertex predicate identify scatter trigger vertex sum vertex lastly estimate predicate selectivity frequency return graph statistic normalize precede vertex average vertex selectivity active scatter message destination vertex active vertex superstep vertex estimate per superstep execution calculate model execution query graph  model statistic action query EQ graph described later report active vertex frequency vertex return histogram superstep query vertex init phase execution phase later frequency likewise predicate evaluate superstep superstep model estimate message assume independent selectivity remain constant assume message superstep unique vertex superstep compute scatter message execution model estimate latency clause comparators etc clause histogram model frequency operator sum frequency frequency frequency variant statistic maintain histogram invariant vertex maintain global statistic graph execution estimate estimate active vertex superstep incorporate execution model stage within superstep predict overall execution micro benchmark linear regression model execution unique cluster deployment reuse across graph query init function active vertex superstep generates output affect interval vertex execution estimate function subsequent supersteps compute function similarly active vertex generate vertex slightly execution logic estimate input message previous superstep initialize data structure unlike init execution estimate superstep scatter active generates estimate besides per superstep platform overhead iterate vertex  phase overhead per active vertex graphite estimate execution model query hop function fitting linear regression model query micro benchmark perform cluster platform deployed function graph query workload cluster coefficient linear equation function setup estimate execution superstep execution coefficient lesser due latter longer superstep init execution evaluate vertex dominate init model execute query exclude perform aggregation aggregate query model equation observation negligible overall execution query contrast execution init compute function aggregate proportional inevitably intermediate compute relative aggregate remain exclusion model concise significant optimal split query approach described model coefficient linear regression execution phase init compute scatter interval compute partition compute con con con con con characteristic graph  vertex     static temporal graph DW MM MM MM MM dynamic temporal graph DW MM MM MM MM forum  comment   multi individual workload social network benchmark link data benchmark council LDBC evaluation community standard workload realistic transactional query social network graph benchmark social network graph generator suite benchmark query graph datasets graph generator  model social network correlate graph diverse distribution vertex schema vertex message comment etc  etc graph generate network distribution  discrete weibull DW facebook zipf image KB image modify LDBC temporal graph schema evaluation LDBC graph generator  schema embed vertex tag directly inside forum comment vertex simplifies data model LDBC vertex assign creation timestamp within interval lifespan incident vertex referential integrity constraint replace related date date built lifespan instead vertex lifespan inherit modify graph schema however static temporal graph address introduce temporal variability   vertex  generate LDBC distribution correlate  hence update update  tag forum vertex vertex graph generate distribution DW static dynamic comment dominates vertex comment per per frequent forum  comment  average   comment multi average per tag per comment query workload subset query template LDBC query workload conform linear query adapt temporal graph describes query template business intelligence BI interactive workload IW additional query template fully query model query template depends  dynamic evaluate dynamic temporal graph image KB image whisker distribution plot instance non aggregate query report static graph dynamic graph median label description query workload     ER predicate description parameterized underlined   message tag belong forum message   tag creates message tag date   comment another   friendship respect   message tag forum offset another message forum tag  specific gender another   message outside  another another message outside   template parameterized generate query instance template randomly parameter evaluate query temporal graph ensure valid query instance generate static dynamic graph addition non aggregate query another workload temporal aggregate operator query template query vertex interval return vertex interval evaluate performance aggregate query brevity limit aggregate query graph distribution non aggregate query graph workload illustrate expressivity query model ability intuitively extend domain query varies hop evaluate model performance vertex predicate workload query filter lastname multi   forum  workload query etr predicate query predicate diverse respect span magnitude image KB image effectiveness model non aggregate query query execution budget terminate marked fail average execution report successful query verify correctness query baseline platform performance evaluation query return timeliness setup commodity cluster compute node intel xeon cpu core HT ghz GB ram gbps ethernet centos memory baseline graph platform memory node CPUs GB ram implement graphite icm platform apache giraph hadoop java default distribute compute node cluster worker jvm per machine thread per worker GB ram available jvm graph load json file hdfs pre compute model statistic query workload distribute memory graph baseline graph platform widely neoj community edition baseline graph database machine thread platform variant specifies workload query community standard gremlin query NJ plot neoj native cypher NJ variant compute node GB heap variant cypher allocate heap node NJ graph platform memory bound configuration distribute memory available setup default index neoj source distribute graph available  fork titan popular apache spark distribute backend gremlin query spark plot apache cassandra access input graph spark compute node worker GB heap memory per worker cassandra deployed additional compute node recommend configuration  cassandra spark load graph cassandra distribute memory compute node load query execution effectively spark node query execution baseline standard performance tune guideline documentation platform natively  dynamic temporal graph transform graph static temporal graph technique described earlier graphite static graph convert interval vertex interval graph expand vertex valid discrete adapt query static graph albeit bloat temporal aggregation feasible internally platform perform aggregation client query aggregate operator  spark unable load graph memory hence evaluate aggregate query platform query verify identical effectiveness model evaluate effectiveness model identify optimal split distribute query execution query template execute query instance query split query execution query optimal model report excess execution model optimal effective penalty sub optimal excess spent optimal model query percentile query temporal aggregate temporal aggregate image KB image model accuracy optimal model violin plot distribution excess optimal fix split execute query non aggregate graph model CM closer optimal performance execution varies widely across longer optimal split others neither consistently contrast model excess relative excess split priori fix split generally without query split motivate automate analytical model query selection analyze accuracy model graph detail impact execution scatter plot actual model estimate execution static graph plot overall correlation coefficient estimation  due inaccurate estimation hop estimate purple correlation execution inaccuracy model examine optimal execution latency penalty optimal model selects optimal static dynamic variant non aggregate aggregate query correspond data report query percentile query excess execution optimal spent chosen model image KB image comparison average execution baseline non aggregate query static temporal graph image KB image comparison average execution baseline non aggregate query dynamic temporal graph non aggregate query across query query optimal chosen due query reduces cumulative error model difference ratio relative optimal evaluates vertex message vertex evaluate optimal execution model easily selects former similarly exhibit difference optimal remain query fan hence intermediate hop occasionally however consequence actual execution latency model execution model within optimal execution percentile query within query within percentile query percentile query penalty query dynamic graph query negligible penalty percentile query penalty sub optimal behavior happens execution model predicts selects actual runtime graph difference actual execution optimum query model query longer execute optimal trend temporal aggregate query model predict aggregate query ignores aggregate operation due negligible overhead despite query perform par equivalent query without aggregation broadly applicable graph report across query graph evaluate model optimal summary model accurate query shorter accurate distinguish predicate cardinality pre dominantly optimal execution optimal model perfect accurate discriminate consequently reduce actual query execution comparison baseline average execution baseline platform axis non aggregate query axis static temporal graph dynamic temporal graph query budget plot janus spark  graph due resource limit load graph memory cassandra query dnf within budget neoj graph completes query graph within graph node ensure graph distribute memory plot faster baseline across graph query graph DW average faster NJ faster NJ faster NJ faster spark graph completes average within static graph query average within dynamic graph image KB image comparison average execution baseline temporal aggregate query query within platform temporal graph       static graph non aggregate  graph non aggregate query     static graph temporal aggregate  graph temporal aggregate query   focus specific query static temporal graph due execution baseline platform optimal query perform due parallelism partition due average query NJ spark structure compact reduce memory communication graph baseline average rapid fan vertex fan fail downstream predicate query baseline platform query optimal split adopt baseline baseline optimal consistently dynamic graph static graph average query baseline DW default execution optimal query traversal fan baseline ideal configuration overhead distribute execution neoj cypher compute node NJ memory node NJ memory variant performance regular memory graph graph performs latter graph NJ query neoj index filter vertex hop query processing later hop involves breadth traversal prune predicate complex consecutive along apply temporal relation affect execution gremlin cypher variant neoj comparable performance performance skew interestingly gremlin variant neoj query workload graph albeit performance janus spark distribute baseline query despite omit initial graph rdd creation persists graph memory across query despite distribute machine spark unable load graph memory fails execution within budget challenge alternative hadoop  spark plot machine baseline marked execution theoretical platform perfect parallel machine parallel execution execution within distribute performance comparable highly optimize machine platform ideal lastly performance temporal aggregate query static dynamic graph execution platform static graph faster baseline query average faster NJ faster NJ faster NJ faster perfect extrapolation baseline temporal aggregate query non aggregate equivalent specifically average baseline platform average NJ NJ NJ translates longer per query baseline increase considerably due additional overhead entire client perform temporal aggregation oppose non aggregate query natively distribute manner mitigate completes query execute model baseline platform average NJ NJ NJ query static graph dynamic graph query within query graph query longer due dynamic graph query within query graph none baseline platform query query vertex cardinality query baseline platform accumulate client aggregation memory pressure graph component execution briefly examine spent distribute execution exemplar stack plot supersteps within worker superstep graph stack init compute scatter phase interval compute phase graphite icm partition compute phase giraph  residual barrier synchronization jvm garbage collection GC superstep average across instance query deterministic execution fix split execution optimal majority query vertex superstep dominate init logic predicate operates vertex vertex scatter minimal message overhead interval compute partition compute longer latter giraph logic extend selects active partition vertex query predicate iterates active vertex invokes interval compute incoming message message queue non trivial GC trigger due memory pressure superstep barrier superstep compute negligible vertex active across query scatter along vertex satisfy predicate partition interval computes iterate relevant active vertex perform  initialization GC overhead superstep compute interestingly phase across worker superstep query indicates partition manages balance load query however query brevity supersteps scatter longer slowest worker due skew activate per worker query superstep superstep due fanout others superstep dominate scatter initial vertex vertex trigger message summary supersteps variability execution variability phase despite model discriminate optimal load mostly balance across worker superstep depends query spent directly processing query compute scatter additional overhead phase weak evaluate weak capability static facebook distribution graph resource worker compute node per worker graph increase proportional worker attempt workload per worker constant across configuration per worker vertex remain within respectively partition partition per vertex graph partition per vertex ensures partition compute thread parallel across worker generate query workload query graph image KB image stack plot component execution superstep average query query graph header label average component across worker superstep image KB image relative execution axis efficiency axis worker relative weak graph axis query average relative execution worker worker axis worker worker perfect weak relative constant efficiency asymmetric graph data structure rare ideal weak however query efficiency worker query efficiency worker unable fully exploit additional resource due straggler thread due uneven load query cardinality message network machine increase efficiency conclusion article motivate query temporal graph lack platform propose intuitive temporal query model express variety requirement graph distribute implement graphite icm platform novel analytical model concise information graph accurate selection distribute query execution choice validate rigorous temporal graph query workload derive LDBC benchmark performs baseline graph platform latency query future explore core execution model beyond distribute memory index technique accelerate performance generalize temporal reachability query model performance research prototype metric literature incremental query execution strategy graph update related explore challenge platform relevance analyze epidemiological network temporal graph construct digital contact trace covid pandemic motivate query operator