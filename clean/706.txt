propose maximal pack halin distribute algorithm maximal pack undirected non geometric halin graph linear algorithm external input graph application graph reduction vertex determines belongs maximal pack apply vertex previous keywords maximal pack halin graph distribute algorithm introduction propose distribute algorithm computes maximal pack non geometric halin graph undirected graph vertex respectively pack vertex shortest vertex alternate sequence vertex vertex distance vertex shortest exist restrict version pack pack independent another pack stable pack maximal exist another pack maximum cardinality maximal pack compute maximum pack NP arbitrary graph dynamic program useful optimization graph maximum pack maximum pack maximum pack restrict graph contrast maximal pack arbitrary graph NP however distribute compute environment challenge vertex local contribution maximal pack halin distribute algorithm computes maximal pack halin graph algorithm pseudocode consists phase generates partition phase algorithm identifies vertex maximal pack vertex image KB image preliminary undirected graph planar graph admits intersect vertex planar generates partition bound unbounded external remain inner graph outerplanar embed vertex external generally embed outerplanar planar remove vertex external remain embed outerplanar geometric graph vertex distinct crossing vertex coordinate euclidean distance vertex easy algorithm geometric graph non geometric conjecture geometric graph additional information author algorithm detects external geometric outerplanar graph contrast algorithm solves non geometric elaborate embed vertex leaf assume exists extra connects vertex cyclic embed graph halin halin graph outerplanar halin graph graph vertex halin graph skeleton graph induced skeleton halin graph eppstein reduction apply halin graph graph halin successive application reduction gradually transforms input halin graph reduction procedure sequence graph transition transition transforms eppstein expansion procedure identify vertex external external necessarily unique halin graph external image KB image halin graph solid dot denote respectively skeleton motivation describes motivation practical theoretical importance pack halin graph application pack however grows importance theoretical accord  pack application frequency distance constrain frequency constrain optimization goal assign frequency transmission minimize channel interference equivalence graph neighborhood exclusion distance similarly   computation pack subroutine mutual exclusion resource facility allocation neighborhood avoid overlap  relationship independent information retrieval signal transmission analysis classification theory biomedical engineering economics graph correlation stock price fluctuation graph stock vertex correlation coefficient endpoint vertex independent essential diversified portfolio classify stock importance halin graph fold admit polynomial algorithm belong NP arbitrary graph algorithm salesman orient chromatic minimum steiner related halin graph structural important graph theory practical application halin graph halin graph exist vertex disjoint vertex relevant fault tolerant network halin graph treewidth relevant fix parameter tractable algorithm halin graph hamiltonian halin graph hamiltonian remove vertex remain graph hamiltonian   halin graph almost  cycle exception therefore halin graph non bipartite  halin graph necklace unique embed cycle connects leaf external necklace  prism embeddings respectively necklace graph exactly embeddings computational model model distribute undirected graph vertex processor communication link processor computational model restrict version memory model model assumes processor register processor contrast model assumes processor register neighborhood neighborhood vertex denote neighborhood denote assume asynchronous model exists upper bound elapses consecutive operation processor vertex unique identifier variable complexity maximum algorithm counterpart synchronous algorithm complexity minimum processor perform operation register neighborhood register related pack related algorithm related pack overview relevant deterministic algorithm assume computational model input graph instance algorithm compute maximal whereas others compute maximum split algorithm category pack pack pack pack pack algorithm distribute centralize computational environment distribute algorithm compute maximal whereas centralize algorithm compute maximum constant bound maximum graph author network decomposition technique technique partition vertex input graph cluster characteristic solves cluster concurrently finally combine partial generate global unfortunately technique suitable pack author stabilize algorithm compute maximal pack stabilization distribute algorithm tolerance transient fault algorithm arbitrary graph algorithm anonymous exist approach compute approximate maximal pack focus randomize distribute algorithm propose heuristic genetic algorithm genesys optimization technique proposes simulated anneal algorithm compute optimal maximum pack exist parallel algorithm pack compute maximal others guarantee specific maximum pack regard maximal pack algorithm stabilize algorithm arbitrary graph  extend stabilize model computation processor consult information distance model compute maximal pack arbitrary graph  s치nchez fern치ndez  algorithm computes maximal pack cactus algorithm computes maximum pack graph maximum pack exist algorithm centralize computational environment algorithm dynamic program approach cactus respectively distribute algorithm maximal pack stabilize algorithm  s치nchez fern치ndez  algorithm assumes geometric outerplanar graph input algorithm circulate token external graph performs decomposition finally algorithm computes maximal pack traverse graph propose pack exist algorithm compute pack arbitrary graph algorithm maximal pack distribute environment stabilize greedy algorithm maximum pack distribute centralize computational environment dynamic program organize introduces definition notation external halin describes vertex correctness analysis maximal pack halin finally conclude remark suggestion future terminology notation graph vertex refer triangular graph subgraph halin graph vertex triangular graph fan graph graph generate triangular graph vertex apex graph fan graph graph fan graph mid vertex vertex neither apex mid fan graph subgraph connects apex refer mid vertex vertex mid respectively graph mid graph image KB image triangular graph fan graph vertex apex vertex vertex mid graph triangular fan subgraphs respectively halin graph iteration external halin subgraph   subgraphs  assume triangular subgraph consists vertex   respectively vertex adjacency denote  incident adjacency execution external halin adjacency similarly denotes tuple locates fan subgraph vertex whereas binary flag vertex binary operation define update operation associative commutative external halin graph implement eppstein reduction distribute environment eppstein centralize implementation refer implementation compress compress respectively eppstein collapse triangular subgraph supervertex preserve connection  illustrates eppstein fan subgraphs remove mid vertex transforms triangular subgraph illustrates external halin consists phase compression expansion compression phase algorithm applies compress exist fan subgraph halin graph algorithm executes compress exist triangular subgraph algorithm applies halin graph generates halin graph vertex procedure graph algorithm selects leader vertex minimum previously detect compression phase contraction algorithm leaf expansion phase algorithm gradually assigns vertex expansion phase painting leader propagates leaf phase vertex vertex distribute algorithm   specify action perform vertex pseudocode external halin component maximal pack halin input adjacency vertex output flag algorithm otherwise flag pseudocode initializes variable initialize pseudocode iteration cycle algorithm determines vertex halin graph detect halin graph algorithm determines exists vertex fan graph detect exists performs contraction compress otherwise determines exists vertex triangular graph detect exists compress compress execute compress update adjacency vertex halin graph execution compress update detect elect leader cycle finally executes expansion phase expansion image KB image image KB image  function sync function execution vertex momentarily vertex pseudocode purpose pseudocode detect halin graph nest cycle exist overlap adjacency overlap imply therefore procedure vertex detects image KB image reduce triangular subgraph halin graph triangular subgraph reduce subgraph apply eppstein image KB image reduce fan subgraph halin graph fan subgraph reduce subgraph apply eppstein overlap adjacency therefore vertex detects image KB image exists leader exit compression phase notify detection vertex quit compression phase apply member belongs supervertex vertex interceptor vertex belongs simultaneously triangular subgraphs triangular subgraph triangular subgraph fan finally communicate remain vertex supervertex detect quit compression phase henceforth auxiliary variable refer singleton objective pseudocode detect locates fan mid vertex apex mids fictitious prevent locates graph mid unique image KB image purpose pseudocode compress remove mids fan subgraph generate triangular subgraph halin graph routine generates handle mids cycle mid update compute binary operation mid avoids operation fictitious restriction allows fictitious detect image KB image mid locates fan subgraph exit cycle quits compression phase mid locates subgraph exit cycle fictitious mid fictitious quits compression phase otherwise belongs update handle fictitious cycle fictitious update mids fictitious locates fan subgraph exit cycle quits compression phase locates subgraph vertex exists cycle detects update cycle mids non fictitious quit compression phase finally quits compression phase fictitious indexed exit cycle quits compression phase finally handle cycle update repeatedly exit cycle update objective pseudocode detect vertex triangular subgraph vertex independently analysis adjacency detect vertex existence lemma nest cycle overlap adjacency determines overlap exists vertex construct adjacency supervertex remove inside overlap twice remain  belong adjacency supervertex preserve external connection additionally variable vertex image KB image vertex determines belongs therefore exists triangular subgraph vertex remove remain adjacency supervertex purpose pseudocode compress transform triangular subgraph supervertex vertex determines  belongs triangular subgraph detector computes minimum triangular subgraphs exist propagate information detector remain vertex vertex compress triangular subgraphs minimum vertex quits compression phase belongs supervertex contains detector identifies vertex quit compression phase finally vertex quits compression phase image KB image objective pseudocode expansion identify vertex expansion phase assign leader whereas assigns remain vertex expansion phase propagates  vertex pseudocode distinguishes uncolored mid apex uncolored vertex belongs triangular subgraph subcases interceptor interceptor outside directly connects vertex outside otherwise interceptor  directly connects vertex outside non interceptor vertex belongs expansion vertex variable maximal pack describes vertex algorithm variable vertex variable computation maximal pack vertex corresponds maximal pack vertex vertex locates distance unique vertex locates distance vertex procedure inspire procedure  s치nchez fern치ndez  maximal pack cactus graph image KB image pseudocode vertex component procedure algorithm selects cycle leader vertex minimum vertex leader election pseudocode procedure practically external halin election fictitious handle graph assigns sequential cyc vertex pseudocode procedure cycle leader indexed finally cyc vertex variable procedure defines predecessor successor denote respectively vertex successor iff definition predecessor vertex  cycle respectively finally recolor vertex vice versa inconsistency assume vertex graph computation execution leader election cyc vertex pseudocode skeleton vertex identifies skeleton leaf assign skeleton leader unique vertex skeleton cycle leader non vertex distance vertex receives non vertex distance vertex receives skeleton leaf otherwise receives non finally non receives skeleton skeleton leader vertex respectively image KB image pseudocode cycle vertex identifies skeleton skeleton belongs skeleton cycle leader pointer skeleton leader pointer accord vertex skeleton skeleton illustrates location vertex finally pointer external cycle cycle leader image KB image correctness analysis maximal pack halin prof correctness maximal pack halin consists skeleton external cycle finally analyze execution maximal pack halin correctness external halin distribute reduction equivalent eppstein therefore external halin identifies lemma vertex detect identifies existence triangular subgraph vertex vertex  respectively proof contradiction assume exists vertex satisfies lemma exist triangular subgraph vertex belongs supervertex exists similarly exists belongs exists therefore exists triangular subgraph lemma compress reduces triangular subgraph supervertex proof definition adjacency contains  triangular subgraph remove belong triangular subgraph belong triangular subgraph additionally overlap belongs triangular subgraph connects symmetry twice adjacency therefore remain adjacency supervertex lemma vertex detect assumes role mid fan subgraph consist vertex existence image KB image identify maximal pack vertex belong graph execution skeleton graph execution cycle proof lemma sufficient detect mid fan subgraph accord lemma vertex detect assumes role fan subgraph mid proof lemma sufficient detect fan graph accord lemma vertex detect assumes role fictitious fan subgraph mid mids minimum proof lemma sufficient detect fictitious fan graph accord lemma compress reduces fan subgraph triangular subgraph proof fan subgraph compress mid propagates perform binary operation information update variable mid remove quits compression phase detects finally compress update adjacency additionally adjacency apex update return external halin therefore apex triangular subgraph lemma compress reduces proof compress identifies fictitious mid propagates procedure lemma mids quit compression phase finally compress update adjacency adjacency adjacency apex update similarly proof lemma therefore remain vertex lemma vertex detect determines belongs existence overlap proof vertex vertex execution detect procedure exhaustively existence overlap overlap imply exists triangular subgraph vertex vertex vertex lemma compression phase external halin reduces halin graph proof lemma lemma lemma lemma lemma lemma lemma implementation reduction eppstein whereas lemma algorithm compression phase detect lemma expansion identifies vertex proof proof procedure eppstein expansion revers implementation eppstein reduction algorithm assign leader remain vertex expansion assigns vertex fan subgraphs assigns vertex triangular subgraphs finally concludes vertex external expansion phase restore graph vertex correspond vertex corollary external halin identifies vertex proof lemma lemma correctness vertex skeleton cycle identify vertex belong maximal pack lemma skeleton identifies vertex belong maximal pack proof correctness lemma directly phase skeleton inspire algorithm performs cactus graph skeleton cactus procedure identifies vertex maximal pack lemma cycle identifies vertex belong maximal pack proof induction variable pointer skeleton leader vertex inductive hypothesis assume cycle identifies vertex inductive depends cycle computes establishes combination vertex finally vertex receives skeleton leader distance remark vertex vertex vice versa corrects pointer consistent selection vertex correction affect vertex affect maximal pack corollary vertex identifies vertex belong maximal pack proof lemma lemma complexity maximal pack halin lemma detect determines belongs triangular subgraph proof detect executes detect existence therefore detect lemma compress reduces triangular subgraph supervertex proof construct supervertex procedure remove lemma detect determines mid fictitious none proof sufficient vertex verify lemma local variable lemma compress reduces fan subgraph triangular subgraph mids proof propagation mid update variable binary operation update adjacency lemma compress reduces subgraph mids proof detect fictitious minimum propagate mid update adjacency vertex vertex lemma detect determines belongs proof detect existence overlap adjacency vertex lemma compression phase external halin proof iteration external halin detects compress triangular graph fan graph detects detection compression vertex graph reduces detection compression respectively vertex graph reduces finally detection average reduce vertex therefore compression phase external halin reduce lemma expansion proof expansion per vertex vertex immediately already therefore expansion lemma skeleton executes proof skeleton vertex therefore procedure lemma cycle executes proof cycle sequential procedure vertex therefore procedure remark vertex corrects pointer vertex consistent selection vertex theorem maximal pack halin proof lemma lemma lemma lemma conclude remark future propose maximal pack halin distribute algorithm computes maximal pack undirected non geometric halin graph linear algorithm consists phase external halin identifies vertex external cycle skeleton input graph phase distribute algorithm implement eppstein reduction eppstein described centralize challenge distribute computational model replace global partial processor phase vertex performs procedure assigns vertex maximal pack procedure consists  vertex skeleton whereas vertex external cycle algorithm vertex future planning analyze feasibility generalize maximal pack halin maximal pack