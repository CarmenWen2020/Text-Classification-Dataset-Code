parallel graph partitioner benefit application reduce data transfer online partition graph rely pas algorithm offline partition graph involve algorithm successful category belong multilevel approach ass feasibility graph partition algorithm within multilevel framework goal parallel offline multilevel partitioner competitive cutsize quality rely flexible algorithm throughout entire multilevel framework algorithm serf multiple purpose partition cluster algorithm coarsen effective algorithm initial partition refinement algorithm uncoarsening lends easily parallelization various graph approach average faster multi thread metis expense cutsize previous keywords algorithm graph partition multilevel graph partition parallel graph partition introduction graph ubiquitous diverse engineering basis important algorithm data structure computer graph computational biology scientist understand function protein assemble genome sequence shorter VLSI circuit graph successfully minimize propagation delay crossing layout graph powerful medium address important almost graph billion trillion necessitates execution algorithm graph parallel distribute graph computation framework graphlab giraph pregel facilitate parallel execution algorithm graph parallel processing graph vertex distribute processor processor portion graph occasionally exchange data partition graph usually crucial parallel performance execute algorithm carefully performance distribute graph framework rely hash function distribute graph although somewhat acceptable computational load balance likely communication vertex translates random partition graph distribute graph computation framework distribution vertex graph although trivial hash function certainly acceptable lightweight algorithm quality partition within acceptable preprocessing limit algorithm distribute graph algorithm usually categorize online algorithm category partition graph offline graph partition expensive usually contains involve certainly constrain spectral multilevel recently metaheuristics multilevel usually choice preference quality partition widely adopt rely offline usually deem expensive distribute graph computation framework usually prefer scientific compute VLSI circuit overhead expensive partition justified feasible utilize graph algorithm within context multilevel graph partition framework multilevel graph  heuristic multilevel framework although certainly improves quality sacrifice execution parallel efficiency obtain algorithm amenable parallelization utilized within multilevel framework attractive advantage  decision algorithm algorithm refinement purpose partition graph vertex fourteen vertex random partition algorithm iterative improvement heuristic optimal partition cutsize cutsize obtain complex expensive algorithm image KB image approach obtain perfectly balance partition vertex belonging partition illustrate dash random partition cutsize algorithm linear deterministic greedy cutsize pas kernighan lin iterative improvement heuristic initial partition random partition cutsize optimal partition cutsize utilize algorithm linear deterministic greedy ldg propose algorithm ldg algorithm attain performance ldg algorithm serf multiple purpose multilevel framework approach cluster algorithm coarsen phase inherently initial partition graph coarsen completes ldg algorithm agglomerative cluster algorithm vertex coarser vertex nice feature obtain coarse vertex uniform feature commonly sought algorithm coarsen uncoarsening phase serf refinement algorithm  purpose flexibility heuristic render attractive utilized anywhere multilevel framework contribution ass feasibility algorithm within multilevel algorithm detail flexible algorithm purpose coarsen initial partition uncoarsening multilevel partition framework outline exploit algorithm stage parallelize ldg algorithm multilevel framework memory architecture essentially fully fledge memory parallel multilevel graph partitioner relies flexible algorithm bidding investigate feasibility utilize multilevel framework within online context approach utilized online graph partition assumption vertex batch validate approach comprehensive dataset widely adopt partitioner metis ldg algorithm organize notation introduce background related approach explain parallelization approach memory utilize propose methodology online graph partition propose methodology validate conclusion definition graph tuple vertex connects distinct vertex vertex associate respectively denote denote function easily extends vertex partition nonempty pairwise disjoint mutually exhaustive vertex  otherwise cutsize denote sum sum vertex balance satisfies balance constraint maximum imbalance ratio average definition graph partition define minimizes satisfies balance constraint index vertex index vertex background related review approach graph partition successful multilevel offline graph partition online graph partition discus parallelism realize approach multilevel graph partition multilevel partition successful paradigm widely adopt graph hypergraph  metis  scotch    parallelize multilevel algorithm context graph partition focus propose memory multilevel graph partitioner parallelize label propagation algorithm coarsen phase introduce parallel version multi local  distribute memory graph partitioner metis memory version metis commonly parallel graph  PT scotch parallel version scotch  suffer scalability algorithm initial partition uncoarsening phase multilevel framework lend efficient parallelism structure multilevel framework consists coarsen graph successively coarser graph apply graph partition algorithm coarsest graph finally project graph perform refinement algorithm successively finer graph finer graph freedom refinement effectively increase quality partition uncoarsening coarsen phase graph transform sequence coarser graph algorithm phase algorithm label propagation algorithm choice coarsest graph partition initial partition phase various algorithm phase spectral bisection kernighan lin algorithm graph partition algorithm greedy graph partition algorithm partition algorithm uncoarsening phase refinement algorithm apply aim improve cutsize obtain previous uncoarsening multilevel framework successfully usually choice obtain quality however expensive addition offline partition strategy viable context  limited memory incremental update graph remove vertex graph necessitate lightweight algorithm graph partition focus graph partition contrast offline partition online lightweight algorithm generate sufficiently partition graph information memory algorithm assign vertex   propose heuristic linear deterministic greedy ldg algorithm heuristic greedily assigns vertex penalize linearly function  function balance partition without neglect graph structure  another graph partition algorithm modularity maximization framework approximately balance greedily assign vertex propose graph partition partition model besides vertex partition partition attention propose replicate graph partition mainly focus graph  multi thread partition platform recent  proposes smart approach account partition instead handle vertex random quality partition obtain graph partition algorithm usually comparable quality partition obtain offline  partially alleviate   propose  pas algorithm  ldg graph partition algorithm   effective increase quality partition quality improve later besides   propose  aware graph partition algorithm frequent graph workload partition graph motif ldg algorithm grasp proposes distribute memory graph partition purpose mpi parallelize framework propose  propose ldg algorithm briefly review utilize ldg heuristic coarsen uncoarsening phase multilevel partition framework ldg heuristic computes affinity vertex assigns maximum affinity penalize raw affinity linear factor assign vertex ldg algorithm choice equation capacity constraint vertex denotes raw affinity denotes linear penalty factor assign vertex quantity account graph important approach coarser graph multilevel framework assign vertex extend handle multilevel graph partition ldg algorithm utilized phase multilevel framework coarsen ldg algorithm coarsen graph successive obtain graph consists partition stage coarsen stage fix bin ldg algorithm throughout coarsen allows coarse vertex rough vertex coarse vertex coarsen phase conventional multilevel coarsen algorithm usually vertex coarsen desire compute coarsen hereafter superscript denotes index graph partition bin bin bin obtain coarser graph finer graph becomes vertex coarser graph hence vertex coarse graph constituent vertex coalesce coarse vertex coarse graph hence exists coarse vertex exists vertex respective coarse vertex coarse vertex sum finer vertex finally sum respective vertex graph coarsen multiple coarsen relaxed balance constraint coarsen imbalance reduce desire balance balance critical coarsen uncoarsening hence loose constraint coarsen strict uncoarsening reduce strict burden balance constraint aid decision partition stage coarsen phase initial partition initial partition phase simply partition coarsest graph contains vertex ldg algorithm refers desire partition obtain graph uncoarsening ldg algorithm uncoarsening phase partition uncoarsening consists refining ldg algorithm project finer graph ldg algorithm vertex already assign accord affinity compute vertex around vertex uncoarsening due coarse vertex however later stage vertex finer finer ldg algorithm freedom improve cutsize moreover vertex assign raw affinity compute ldg algorithm accurate project graph finer graph straightforward information already coarsen phase simply finer vertex projection vertex decompose constituent vertex spawn approximately vertex bin coarsen uncoarsening multilevel framework adversely affect quality ldg algorithm random decision vertex assign bin likely scatter across bin affinity bin memory parallelization explain detail ldg algorithm parallelize within context multilevel partition framework memory openmp parallelization multi thread ldg algorithm structure ldg algorithm suitable parallelization vertex graph equally thread thread responsible assign portion vertex despite parallelization ldg algorithm disturb behavior implementation partition information thread information consists array index vertex vertex define entry array access writer multiple reader synchronization mechanism array  information access multiple reader multiple writer correctness important load balance therefore manage access array image KB image multi thread ldg algorithm algorithm vertex centric parallelism adopt algorithm vertex compute affinity affinity respectively array feasible capacity affinity vertex assign none feasible capacity random feasible update perform atomically serialize access array multi thread ldg algorithm occasionally inferior decision assign vertex sequential algorithm vertex thread adjacent vertex thread simultaneously adjacent vertex thread respectively assume assigns compute affinity assignment decision consequently rush decision assign although sequential phenomenon severe multilevel framework probably execution ldg algorithm manage concurrent access array positive practical implication parallel efficiency multi thread coarsen multi thread coarsen algorithm construct coarser graph partition algorithm algorithm vertex individual adjacency structure coarser graph coarse graph correspond vertex assign array vertex access synchronize multiple thread concurrently algorithm vertex denote vertex image KB image parallel implementation coarsen thread responsible construct coarse vertex approximately previous thread consists approximately vertex vertex assign thread somewhat coarse grain parallelism enables concurrent access data structure addition roughly vertex likely balance thread finer parallelism load balance synchronization overhead due concurrent update adjacency coarse vertex likely hinder parallel efficiency graph undirected adjacency format twice vertex respectively assign thread coarsen update adjacency vertex correspond thread update adjacency belongs ensure concurrent writes hence coarse graph compute seamlessly multi thread uncoarsening parallel implementation uncoarsening vertex finer graph thread thread responsible mapping vertex correspond coarser vertex assign project coarse vertex finer vertex refine graph ldg algorithm parallel ldg algorithm uncoarsening algorithm algorithm unprocessed vertex uncoarsening vertex already assign refinement uncoarsening positive decision ldg algorithm earlier iteration online multilevel partition methodology described algorithm within multilevel framework offline context assumes entire graph available partition although theme offline partition multilevel framework perform online context worth investigate obviously multilevel framework assign vertex however assume vertex batch utilize ldg algorithm within multilevel framework potentially exploit intra neighborhood information batch ldg algorithm assume vertex batch batch multilevel algorithm described assignment vertex batch vertex batch coarsen bin assignment compute affinity vertex bin account vertex already assign earlier batch capacity bin compute respect batch instead vertex entire graph hence capacity bin increase accordingly whenever batch multilevel framework execute scheme necessitates maintain vertex assignment multilevel scheme although overhead prohibitive multilevel framework batch vertex entire graph online multilevel partition scheme illustrate batch scheme likely benefit memory parallelization described offline partition described earlier due vertex handle batch multilevel framework addition inter batch parallelism due batch sequentially image KB image partition bin graph graph   social soc  hollywood social web  web  web   dblp citation cit       amazon similarity      WS  WS  WS  experimental graph approach empirically graph consist synthetic datasets graph snap archive graph chosen domain social network web graph citation network circuit simulation item similarity finite mesh fem dataset contains synthetic watt  graph synthetic graph networkx package  parameter summarizes graph graph undirected loop remove vertex graph experimental framework implement framework compile code gcc optimization parallel implementation openmp multi thread library conduct intel xeon CPUs cpu core clocked ghz cache cache core GB memory report average imbalance ratio important report coarsen phase pas  apply partition stage effort towards improve quality partition evaluate quality partition metric examine metric simply refer metric load imbalance ratio metric respectively define denotes maximally load denotes average evaluate propose framework multi thread graph partitioner metis ldg algorithm ldg algorithm ass multilevel framework benefit algorithm discussion refer framework SML multilevel metis MTS ldg algorithm fll approach described scheme examine bin parameter bin briefly discus chosen bin parameter quality performance algorithm SML recall determines average vertex assign partition likely improvement partition quality algorithm increase decrease utilize adverse quality partition affinity clustering bin vertex partition due increase coarsen uncoarsening tradeoff quality partition volatile multi thread environment totally ignore multilevel scheme reduce eliminate coarsen uncoarsening phase partition graph ldg algorithm although graph satisfy tradeoff metric hence SML performance comparison propose multilevel SML fll MTS graph load imbalance ratio runtime normalize SML MTS calculate respect actual fll respective metric   fll    livejournal hollywood    web google  patent   dblp  patent  circuitm fullchip   HVR ML laplace    WS WS overall experimental evaluation graph performance scheme SML fll MTS load imbalance runtime scheme memory platform openmp thread comprehensive evaluation scheme partition fll report average fll usually stuck local optimum improve quality almost graph dataset report actual normalize actual report normalize respect fll geometric category overall graph categorize graph dataset respective geometric evaluate metric scheme quality MTS expectedly attains SML metric fll SML fll fem category SML category wise improvement fll average significant improvement category web citation circuit similarity synthetic social category SML fll quality partition successfully exploit multilevel framework flexible algorithm significantly improve partition quality within bound acceptable partition SML fll comparable social category graph graph average local cluster coefficient graph category irregular structure around individual node impact effectiveness multilevel partition framework MTS successful offline multilevel graph partitioner improvement fll category wise improvement fll social category justifies multilevel approach image KB image quality comparison fll SML MTS graph category image MB image speedup plot fll MTS SML partition increase thread matrix image KB image quality comparison multilevel framework utilized within online context batch graph category annotate matrix amazon ML laplace denote batch scheme partition SML average faster fll category odd partition fll corresponds input graph SML utilizes algorithm probably graph graph MTS average fll SML fem graph MTS relatively faster graph category category fll SML respectively average MTS fll SML fll comparable lightweight greedy algorithm ldg within multilevel approach relatively quality partition improve fll nearly load imbalance ratio fll slack despite MTS quality partition improvement fll average SML runtime fll SML fll nearly SML however hardly surprising MTS utilizes sophisticated algorithm multilevel phase improvement runtime percentage fll MTS SML graph category graph SML exhibit steady performance fll MTS synthetic graph WS SML performs nearly MTS irregular graph amazon web google  performance SML roughly halfway fll MTS regular graph fullchip SML performs fll fll MTS SML thread partition average graph  scalability scalability SML MTS fll thread average runtimes scheme datasets fll fix display graph instance variation parallel increase thread whereas display speedup MTS exhibit inferior scalability fll SML SML average faster fll slightly scalable fll SML multilevel approach coarsen uncoarsening phase consists successive stage coarser graph parallelism exhibit scalability SML comparable fll scalability MTS scheme assessment online multilevel framework evaluate performance multilevel framework online context described ass percentage obtain partition graph category batch plot percentage batch ass batch affect quality obtain partition plot annotation plot matrix amazon ML laplace denote batch respective batch decrease increase batch mainly batch likelihood batch vertex neighborhood hence multilevel framework exploit relation another multilevel framework benefit batch otherwise multilevel scheme approximate algorithm batch due reduce batch decrease online partition becomes offline partition matrix amazon ML laplace batch batch ML laplace offline partition batch increase quality partition obtain online multilevel partition decrease locality graph fragment across batch batch gradually batch increase consolidates vertex randomly breadth depth likely threshold consolidates conclusion propose parallel multilevel graph partition instead expensive algorithm stage multilevel framework utilized lightweight easy parallelize flexible algorithm throughout partition parallelize algorithm within multilevel framework extensively offline partitioner metis heuristic multilevel framework really exploit algorithm approach attain quality partition graph faster metis demonstrate thread future graph partition heuristic promising direction heuristic stage multilevel framework addition heuristic exhibit performance graph future direction vertex various significantly affect quality