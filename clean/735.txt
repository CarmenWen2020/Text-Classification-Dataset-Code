compute resource service related planning amount resource subsequent reservation occurs customer minimize service provider exist infrastructure without introduce modification article overestimate utilization resource service compute handle significant saving customer infrastructure provider developed demonstrates considerable utility machine planning resource reservation network service model propose multilayer perceptron yield reservation keywords compute service predict resource consumption adaptive planning machine introduction option compute resource user potential benefit transfer service provider responsibility physical equipment ability freely quickly user proprietary release unused resource reduce maintenance benefit popularity public private compute option account emergence phenomenon softwarization software instead physical hardware available resource independence dedicate physical hardware impact creation ETSI NFV specification specification replace exist network service maintain dedicate proprietary hardware counterpart standardize software server approach allows network service update compute resource service related planning amount resource subsequent reservation customer minimize service SLA service agreement customer provider exist infrastructure without expand needlessly important private resource usually limited provider offering model reservation customer disappears provider guarantee adequate infrastructure sufficient physical machine without estimate allows maintenance saving accurate prediction future demand resource subscription model customer opt  maintain stable service quality avoid breaching SLAs load approach reserve resource remain unused additional provider customer contribution article novel approach reservation resolve overestimate utilization resource service compute enable significant saving customer infrastructure provider importantly perform infrastructure usage data research literature simulation exclusively reservation opinion aspect important reservation detects regularity resource usage characteristic prediction concern weekend vacation holiday discover vod traffic exception eve infrastructure demand comprehensive reservation important private 5G infrastructure resource limited ability discover potential insufficient resource advance resource another public transfer another tenant application demand predict reservation detects trend unexpected irregular slashdot flash workload rapidly auto technique latency resource reservation request issue resource request actually allocate infrastructure overload service agreement breach discover resource consumption within min detection increase demand ensures sufficient allocate resource peak demand discovery structure contains description related focus description adaptive resource planning describes perform contains conclusion related recent possibility reserve optimal amount resource service compute topic widely approach reserve resource conclusion agreement customer provider customer declares demand specific amount resource addition actual consumption bill entire amount reserve customer specifies requirement provider gain information customer exist infrastructure possibly extend author discus benefit declare amount reserve resource customer provider theory propose provider contract average customer demand contract resource demand however customer entire reservation actually billing mode instance unnecessarily performance relative software situation  customer additional resource service provider unused resource achieve flexible fix amount resource reservation allows customer specify within fundamental reserve opportunity precise mechanism automatically optimal reservation without interference provider implementation  component belonging openstack project allows earlier reservation resource subsequent enables entire physical virtual compute reserve reservation cannot attempt reservation later date effort reservation addition  enables data account resource customer however author developed allows resource reserve manage others  component without option predict consumption resource planning future another research concern efficient resource allocation context quality service qos author important issue allocation resource data genetic algorithm effective task allocation propose improve qos fog compute environment allocation another article author overview various research resource allocation resource availability compute environment qos requirement however publication primarily concerned efficiently allocate resource context qos planning future resource consumption environment service database database service  customer optimize price ratio query article describes training machine ML model linear regression  multilayer perceptron mlp query execution execution perform identical query database container hardware specification thanks information customer receives notification estimate execution future query execution temporarily migrate database container specification manner predict task execution depends resource resource consumption per task allows resource optimize enable customer temporarily increase demand reverse approach consumption resource predict task execution collection aggregation measurement data application related approach multiple application without unnecessary intervention structure prepared data merge treat entire machine model model facilitates predict parameter future despite lack reference resource reservation possibility predict resource consumption instance entire service approach reserve resource assume model application instance treat model entire service resource consumption prediction approach ML technique author algorithm automaton accurately predicts load virtual machine developed data vms min interval information vms host however developed neither prediction intelligent regressive ensemble approach prediction reap enables ML technique integration feature selection resource usage prediction technique achieve performance author review related resource usage prediction technique mostly ML technique compute platform amazon EC simulation environment cloudsim simulator however comparison apart analysis suitability prediction reap approach developed environment obtain propose approach outperforms exist model significantly improve accuracy rate reduce execution author developed effective predict resource usage compute unfortunately article analysis suitability prediction assume prediction developed intention conduct research possibility predict resource issue research analyze article author discus impact network traffic service overall quality service meeting SLA author proposes recurrent neural network rnn memory lstm model detect rapid increase network traffic phase  service instance article approach dedicate model normal movement model addition obtain prediction resource limit downscaling article demonstrate faster increase instance network traffic spike faster stabilization average service response adopt reference article focus prediction consumption monitor resource contrast prediction propose article moreover addition resource consumption additional metadata related measurement discover regular behavior related specific detailed comparison recently research optimize resource consumption related 5G technology propose ETSI mano enables dynamic orchestrate 5G network service author propose framework handle spectral resource user requirement network behavior article introduces access network architecture modify  heterogeneous 5G environment resource allocation account inter  qos constraint however article allocation resource omit issue future planning exclusively simulation analysis topic resource consumption prediction reserve resource literature however research concerned efficient immediate allocation resource future resource planning although publication topic resource consumption planning future almost concerned research gap possibility planning reserve resource service resource usage prediction machine algorithm upon simpler prediction model wikipedia load data adaptive resource planning research developed adaptive resource planning ARPS enables management service resource resource consumption planning reservation compute developed machine model historical data consumption resource specific service model continuously data developed enables telemetry data model periodically modify reservation concept architecture interaction reservation module virtualized infrastructure manager resource monitor virtualized infrastructure manager vim compute functionality allocation release resource management instance allocate resource quantity collection telemetry data directly instance monitoring service monitor status resource monitor responsible periodic collection aggregation telemetry data instance unified database machine module telemetry data periodically model operation reservation module responsible reserve resource cooperation vim determines availability resource reservation database resource limit addition decision possibility downscaling instance previously reservation prediction machine module model prediction image KB image ARPS concept resource planning adaptive machine module execute repeatedly online operation monitoring data database model module reflect behavior data obtain monitor resource cyclical telemetry measurement perform instance service constant interval vector telemetry instance timestamp vector information concern measurement metric average cpu load average memory consumption average input output traffic network interface telemetry measurement entire service constitutes sum vector instance belonging service reading service timestamps constitutes model predict resource consumption model consists stage supplement telemetry data additional information actual model model adopt input data regardless model consumption resource stage telemetry data supplement additional metadata aim improve quality model timestamp reading replace vector obtain variable  monday workday information workday false weekend information weekend false holiday information holiday false vacation information academic vacation false information additionally assume service resource machine model developed model resource usage data prediction vector enhance data data prepared ML model predict future consumption individual resource machine algorithm efficiency various supervise machine algorithm neural network linear regression regression  MP context resource reservation detail reservation obtain neural network  neural network exhibit statistically insignificant ML algorithm linear regression MP yield respectively reservation neural network achieve prediction quality algorithm previous research related mobile compute achieve neural network traditional machine model therefore multi layer perceptron mlp backward propagation mechanism mlp model consists boundary layer neuron input output layer minimum hidden layer boundary layer model neuron neuron layer reservation model enable prediction resource usage account assume constant timestamp granularity adopt ahead importantly resource usage improve prediction therefore propose ML model resource consume within specify parameter formula predict future consumption resource service status correspond formula prediction consists continuous random variable discrete variable reservation preferably related instance service variable maximum amount resource relation service instance addition metric quality prediction specify minimum amount reserve resource propose reservation error metric define formula describes actual resource consumption exceed maximum minimal assume demand threshold prediction formula respectively upper limit estimate demand resource coefficient determines granularity prediction apply technical limitation regard infrastructure traffic amount arbitrary positive production environment appropriate default popular technology docker kubernetes request fractional cpu instance microservices multiple resource demand important increase probability actual predict within interval described formula involves interval effectively  resource model input data resource usage improve resource reservation actual resource  modification prediction obtain model additionally modification reservation assume reservation discrete directly related specification virtual machine VM instance reservation amount multiple resource assign virtual machine assume reservation resource define described reservation module allows service instance within developed variant reservation depends prediction ML model maximum minimum reservation resource correction input data model model constant amount resource available individual virtual machine identical limit metric formula implementation architecture implement ARPS implementation ARPS private openstack stein version implementation ETSI mano baton specification baton project configure autoscaling dependency additionally implementation instance network service developed client generate traffic vod data load emulate ARPS  software telemetry data aggregator developed contains module reservation monitoring resource implement module  project kotlin postgresql database scheme purpose various module communication implement via api interface information concern consumption external resource monitor  purpose machine resource monitor module developed data database image KB image architecture implement ARPS machine module implement weka platform deeplearningj package mode operation implement pretraining model basis data retrain model periodically service operation multilayer perceptron chosen basis implementation outset machine module load previously prepared model subsequently predict resource consumption cyclically model retrain previous historical data data model obtain replace model reservation module developed ARPS responsible manage reservation autoscaling perform action virtual processor amount ram assume  resource interaction autoscaling baton project reservation module modification extension additional logic positive decision regard define virtual function configuration sends query reservation module action within reservation define boundary evaluation efficiency ARPS developed perform traffic video service peer peer  purpose environment prepared individual component ARPS launch environment environment consist physical machine virtual machine machine local network virtual machine virtual bridge machine configuration machine compute equip logical core GB ram physical network interface gigabit ethernet component launch openstack environment reservation configure directly machine logical core GB ram allocate manager nova compute node reservation centos operating baton project configure virtual virtualization kvm kernel virtual machine allocate logical core GB ram ubuntu operating machine  compute compute equip logical core GB ram physical network interface gigabit ethernet configure client generate traffic video demand vod service video demand data data consist traffic peer peer  service offering user demand content service available employee   collection user traffic PC application TV user traffic analysis data peer peer  service popular PC user addition decrease request analysis data decrease request occurs friday saturday explain absence user weekend exist data peer peer  service emulate traffic author environment video data client data nginx http server basis service HLS http protocol enable downloads vod content previously prepared fragment sample video manifest file instance peer peer  service client manifest file request another fragment video simulated user fragment request immediately previous transmission data network traffic traffic characteristic however devoid information processing response content etc obtain information developed client application traffic recreate traffic peer peer  service service traffic obtain configuration file prepared later developed application index prepared correspond consist bucket bucket aggregate actual traffic query traffic aggregate traffic aggregation bucket define user execute client consist bucket corresponds per aggregation service retrieve bucket queue proceed retrieve bucket user query concurrency model actor implement  kotlin actor information request lifecycle HLS manifesto along interval empirically data addition specify traffic amplification factor fold increase query generate bucket traffic amplification factor assume reading resource monitor fifty fold increase traffic actual data bucket dictate desire generate load sufficiently action autoscaling increase traffic distort characteristic user behavior reduce statistic generation traffic aggregation bucket instead traffic mapping duration due selection max aggregate function calculate resource consumption formula relatively aggregation hourly daily consumption overhead traffic characteristic alone telemetry data timestamps emulation perform although normal operation emulation shift timestamps actual data significant supplement data metadata ultimately setting measurement resource consumption instance min conduct emulation correspond measurement resource consumption min actual metadata calculate shift timestamps holiday metadata UK holiday calendar  academic calendar obtain measurement aggregate obtain data hourly daily consumption accord formula correspond min output instance service width aggregation account aggregation correspond min hourly consumption daily consumption data instance aggregation within instance instance aggregation data entire service aggregation instance entire service aggregation conduct render data resource processor load amount ram inbound outbound network traffic data generate telemetry data instance aggregation data aggregation within hourly data aggregation within daily machine model prepared multilayer perceptron prepared data model parameter empirically attribute hidden layer parameter optimization function rate momentum stage model propose predict resource consumption basis metadata daily hourly consumption respectively parameter model optimization  gradient descent sgd update   bias  max epoch hidden layer activation  sigmoid function output layer activation  function  error mse daily resource consumption processor load resource rate momentum parameter configuration hidden layer hidden layer prediction error significantly error model hidden layer model daily prediction parameter metric calculate data parameter additionally daily prediction summary supplement sum metric static reservation maximum consumption resource examine sum maximum median estimation amount fourth VM resource calculate metric upper limit optimal reservation along actual consumption successful reservation inside addition static reservation constant approach consumption inside static reservation adequate parameter reservation integer etc metric calculate daily prediction   reservation sum average maximum minimum median previous sum metric calculate model hourly prediction parameter calculate metric estimate upper reservation limit along actual consumption comparison static reservation met maximum requirement examine daily experimental data sum maximum average median prediction accurate however demand estimate VM resource outside static reservation however reservation improve stage improve prediction historical consumption resource exist attribute derive metadata model model reservation recent usage data model evaluate previous metric calculate hourly prediction   reservation sum average maximum minimum median minimum maximum reservation daily prediction account historical data static reservation constant likewise hourly prediction account historical data model account consumption previous reservation boundary reflect actual actual resource consumption inside image KB image estimate reservation along actual consumption hourly prediction respectively metric model daily parameter hourly parameter prediction historical data daily daily data hourly hourly data daily model formula consist resource usage previous hourly model consist resource usage previous image KB image estimate reservation actual consumption daily prediction account historical data comparison model without historical data static reservation daily prediction slight improvement model without historical data improvement hourly prediction twofold average error around model without historical data metric additionally additional attribute enables improve however improvement prediction metric calculate daily prediction historical consumption  prediction historical   reservation sum average maximum minimum median conduct quality resource reservation examine checked simulate scenario training data ARPS model periodically retrain purpose ML model hourly prediction model historical consumption previous parameter rate momentum hidden layer prepared training data interval subsequent data precede data average metric calculate prediction hourly data identical model model model increase amount data translate quality prediction reservation limit metric calculate hourly prediction historical consumption  prediction historical   reservation sum average maximum minimum median parameter quality reservation metric examine data improve account training model metric decrease average reservation error later approx assume reservation processor parameter image KB image estimate reservation actual consumption hourly prediction account historical data average quality anticipate reservation  metric summary propose metric provision resource evaluation hourly prediction static reservation extend input historical consumption yield evaluation hourly prediction increase training data demonstrates improves plateau upwards important author discus resource virtual machine related resource focus aspect topic approach scope extent evaluation undertaken comprehensive hinders precise comparison quality static reservation quality metric define comparison without partial comparison achieve algorithm periodically retrain online increase amount training data adapts model offline launch moreover cpu usage predict resource ram incoming outgo network data apart cpu additionally author implement environment entire ARPS implement evaluation conduct environment openstack baton instead cloudsim simulator another difference load data developed artificially anomalous instance multiple entirely realistic combination data unusual demand data usage anomaly approach therefore traffic data finally propose corresponds model empty context account periodic related weekend vacation etc propose novel model exclusively allows reservation ahead conclusion conduct author demonstrates considerable utility machine planning resource reservation service propose model mlp yield prediction hourly prediction model consumption information precede model yield resource usage data advantage generate sufficient accuracy enable resource shortfall discover advance issue investigate future research actual maximum processor load fully sometimes service performance appropriate selection coefficient increase distance anticipate consumption boundary affect overall reservation increase amount data model model accurate anomaly detection filter boundary improve quality prediction standard boundary model developed task consist prediction spike resource consumption reservation additionally reserve resource predict apply maximum amount reserve resource sufficient service instance resource consumption prediction model enable handle increase load upper limit reservation despite mention propose valuable information customer service compute provider enables planning utilization available infrastructure limit rent infrastructure credit authorship contribution statement   supervision conceptualization methodology review edit   software investigation draft   methodology formal analysis review edit