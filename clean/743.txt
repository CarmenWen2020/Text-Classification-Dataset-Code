evidence label scheme employ instance  graham algorithm superior approximation guarantee purely schedule presence delayed precedence constraint bernstein  gertner label scheme target execution task processor delay impose task successor uniformly zero fix positive integer conjecture superiority preserve delay impose task successor wise however label scheme perform schedule moreover bound performance label multiprocessor derive previous  article MSC keywords schedule approximation analysis  graham algorithm pipeline schedule introduction task denote non negative processing execution task schedule task delayed precedence constraint minimize makespan partial resemble task dependency accompany delay latency precisely associate delay imposes earlier employ notation whenever applicable although focus execution  notation propose consideration denote NP delay arbitrary non negative processor remains NP delay fix positive integer precedence relationship chain bipartite graph delayed precedence constraint arise instance pipelined structure processor implement instruction parallelism therefore algorithm intensively context albeit intensively related setting without delay communication delay focus label strongly relate derive  graham algorithm specialized schedule technique precisely define sect focus evidence superiority label schedule algorithm comprehensively sect entirely resolve bernstein  gertner task impose delay zero fix integer successor makespan schedule derive label makespan optimal schedule tight ratio achieve arbitrary critical orient schedule described sect moreover author argue superiority preserve delay zero task imposes successor wise superiority extends delay suggestion mention however  instance fix task imposes delay successor label bernstein  gertner  graham algorithm quality approach bound optimum delay successor wise labelings arbitrary schedule extends delay moreover due structure instance bound extends schedule variant refine predecessor successor finally approximation ratio label multiprocessor investigate  unknown upper bound arbitrary schedule processor improve label bound approximation guarantee label unknown instance correspond analysis induces bound outline manuscript sect briefly classify label schedule algorithm presence delayed precedence constraint overview prior novel approximation technique sect sect analysis introduce label announce approximation guarantee conclusion sect latency label formally define extension schedule specialization delayed precedence constraint denote instance triple employ acyclic graph dag representation instance dag vertex model task arc whenever identify task vertex without explicit distinction moreover denote successor vertex immediate non transitive successor sink finally task denotes respective worth mention reference literature mainly pipeline latency delayed precedence constraint namely latency applies task dependency latency task imposes latency successor finally task impose individual latency successor prescribed dag model associate latency clearly capture variant generalizes former correspond restriction arc vertex arc dag schedule algorithmic frame schedule approach propose graham description brief operates terminate task processor idle remove task assign idle processor index schedule critical schedule important refinement schedule algorithm task dag definition concentrate related critical employ prominently HLF algorithm  task generalization arbitrary processing estimate  straightforward extension integrate delay CP leveling sink vertex   vertex successor CP unless vertex task non increase perform schedule moreover bernstein  gertner propose leveling neglect processing restricts attention immediate successor author assume vertex latency accord variant generalize latency initialize sink calculate refer alternative BRG leveling label schedule vertex dag assign label assign unique label task prominent label  graham algorithm  task processor correspond CG label define initialize label unlabeled unlabeled vertex successor label compute sort decrease task lexicographically minimum unless vertex label task decrease label perform schedule apparent CG label delay account incorporate propose bernstein  gertner alternative refer BRG label define compute BRG partition subset initialize label unlabeled index unlabeled vertex suppose label assign immediate successor label compute sort decrease task lexicographically minimum unless vertex label task decrease label perform schedule immediately BRG label refinement BRG leveling BRG label valid CG label approximation guarantee label already introduction evidence label superior performance purely arbitrary schedule absence delay label algorithm  graham optimal approximation guarantee oppose critical schedule within arbitrary schedule approach quality presence delay superiority processor schedule firstly precedence associate delay  liu CG label optimal arbitrary processing secondly  task bernstein gertner optimal schedule obtain adapt CG label derive instead oppose BRG CP leveling arbitrary schedule approach approximation bound  task instance employ BRG leveling perfectly applies CP leveling thirdly  task delay impose task successor uniform bernstein  gertner BRG label achieves approximation ratio aforementioned instance reference BRG CP leveling arbitrary schedule approach approximation bound conclusion bernstein  gertner argue superiority BRG label generalize delay task imposes successor superiority extends arbitrary delay however schedule BRG label approach schedule bound delay delay successor wise consequently superiority BRG label schedule extend arbitrary positive delay  task latency processor  simon approximation ratio schedule upper bound proven task impose latency successor translates upper bound CP BRG leveling CG BRG labelings bound instance CP BRG leveling arbitrary schedule attain performance bound BRG labelings CG labelings presence delay  unknown multiprocessor instance correspond analysis BRG label induce schedule makespan optimum sect bound extends CG labelings BRG leveling already due instance structure extends CP leveling comprehensive overview beyond schedule variant correspond taxonomy reference complexity approximation refer interested reader survey  ahmad   analysis exactly bernstein  gertner processor delay arbitrary delay define arc instead vertex precisely reflect difference delay task imposes successor non uniform theorem arc wise delay permit approximation ratio schedule BRG CG label schedule proof proof correspond instance bipartite subgraphs ignore arc direction depict refer respective vertex partition instance correspond CP BRG precedence delay structure task predecessor task subsequent arc downward rightward refers delay arc leftward refers zero delay image KB image structure instance employ theorem parameter instance consist consists task vertex construct CG BRG label proceed label sink vertex assign freely vertex vertex hence lexicographically label arbitrarily manner apply scheme obtain label vertex schedule  exactly idle cycle vertex arc vertex task impose delay vertex schedule denote correspond makespan however instance successor delay decrease monotonically reverse sink schedule task impose zero delay exactly delay task exactly delay hence optimal schedule without idle cycle makespan denote evaluate ratio schedule equation increase obtain remark proof contradiction optimality bernstein gertner lexicographical criterion conversely criterion cannot straightforwardly extend arbitrary positive corollary arc wise delay approximation ratio schedule CG BRG label schedule ratio corollary directly theorem latter considers BRG schedule bound applies CP due instance structure moreover instance proof theorem consists uniformly orient bipartite subgraphs extends schedule algorithm compute combination critical predecessor successor task CP  immediate successor multiple processor theorem approximation ratio schedule BRG CG label processor delay proof bound delay employ composition previous instance correspond instance vertex vertex per moreover factor suppose equivalent BRG CP task precedence structure task precedes task task task precede task image KB image structure instance employ theorem construct CG BRG label suppose sink label increasingly vertex latter lexicographically increase label instance label task schedule processor correspond occupy dense task schedule moreover idle cycle precedes task precedes sustain makespan denote label sink increasingly vertex increase label continued correspond task schedule dense fashion processor optimum makespan denote hence ratio approach conclusion negative processor label propose bernstein  gertner superior schedule technique confront arc wise precedence delay zero fix positive integer contrary delay performance bound schedule moreover performance bound processor delay impose credit authorship contribution statement   conceptualization formal analysis investigation methodology project administration resource validation visualization draft