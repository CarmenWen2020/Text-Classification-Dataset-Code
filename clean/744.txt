load balance compute CC environment define splitting workload compute enables enterprise manage workload demand application demand distribute resource computer network server research article load balance algorithm propose hybrid firefly improve multi objective particle swarm optimization IMPSO technique abbreviate FIMPSO technique deploys firefly FF algorithm minimize IMPSO technique implement identify enhance response IMPSO algorithm global gbest particle distance application minimum distance gbest particle candidate elect propose FIMPSO algorithm achieve effective average load enhance essential resource usage response task simulation outcome propose FIMPSO model exhibit effective performance simulation outcome understood FIMPSO algorithm yield effective average response maximum cpu utilization memory utilization reliability throughput along span superior previous keywords compute firefly load balance task schedule IMPSO introduction compute CC rapidly develop concept domain distribute compute apply diverse data storage data analysis iot application CC advanced technology traditional business various facility register client online service avoid user investment compute architecture service CC infrastructure service IaaS software service SaaS platform service paas service user request service provider csp via internet csp manage resource satisfy request client SP leverage schedule technique schedule input request processing resource effective manner task schedule resource management economic rate resource application specify limit barrier utilization CC operation allocate schedule resource overcome complexity researcher task schedule CC task schedule organize input request definite resource utilized efficient manner service numerous client task execute apply schedule longer perform unfortunately request terminate due exceed maximum limit schedule concern scheduler monitor limitation behavior task request execution task available resource load induced resource task schedule involve CC merit involve CC efficient usage resource task schedule properly hence task schedule resource allocation mandatory operation perform internet information location without host structure host infrastructure ability csp CC improves potential host infrastructure internet service csp gain efficiency facilitate client service CS client apply CS employ processing service software hardware service CC model utilization resource increase decrease csp user demand application merit CC additional CS user service application however freedom optional service challenge issue detect properly CC research namely task schedule resource allocation efficient usage resource schedule load balance technique avoid arbitrary allocation source CC aim resolve operation schedule technique load balance task schedule important player CC environment research proposes novel technique obtain hybridize firefly improve multi objective particle swarm optimization IMPSO technique abbreviate FIMPSO applies firefly FF algorithm minimize whereas IMPSO technique implement identify enhance response IMPSO global gbest particle distance application minimum distance gbest particle candidate elect simulation outcome propose model optimize alternate model upcoming relevant propose FIMPSO algorithm described validate conclusion drawn related compute CC described virtual distribute compute maximum resource customer across internet resource request apply cloudlets simultaneously client access centralize resource anytime internet literature cloudsim simulator propose simulate cloudlets virtual load balancer allocate cloudlets function data workload schedule explain principle schedule particle another mention schedule depends upon node manage workload load virtual machine VM  node described various model importance algorithm load balance resolve issue imbalanced node load schedule allocate operating cloudlets VM optimal decrease computational apply decrease transfer response execution addition operational  kumar opine schedule dynamic static allocate load depict analysis dynamic technique apply bio inspire algorithm schedule workload swarm algorithm employ allocate load CC fix consecutive velocity location particle merit demerit associate load balance technique schedule model enhance robin algorithm task schedule basis meta heuristic model roulette selection model random schedule iteration fitness static algorithm category meta heuristic technique manage load technique incurs operational primitive model FCFS robin schedule kennedy  meta heuristic approach particle swarm optimization PSO depends particle flock transform source another optimal rely velocity previous particle schedule technique static alternate model GA SA min min max min tabu described operation swarm optimization improve literature constraint PSO scheme allocate task sequential node application CC platform PSO algorithm described literature appropriate particle evaluate fitness function velocity particle obtain particle pbest global gbest swarm exist relevant algorithm reduces computation concentrate  ant optimization ACO technique describes discus role ant application PSO algorithm distribute resource VM garg buyya signify network simulator schedule load deployed PSO schedule cloudlets vms cloudsim depends upon particle mechanism introduce newton gravity gravitational algorithm gsa operation optimal future application fitness compute particle location secondary particle sum velocity exist particle gsa employ filter model function gravitational constant significant application fuzzy segmentation gravitational model literature collection satellite image identify information previous filter ultrasound image ass gsa model novel binary gravitational algorithm  optimize schedule operation various platform hybrid gsa introduce literature orthogonal crossover schedule load CC environment efficient gsa optimization scheme developed previous improve diversity particle utilize memory model mathematical calculation establish security basis behavioral graph imply concentration load balance service allotment CC platform gsa depends upon repulsive attractive resolve optimization issue recent conduct research arena propose proud approach secure outsource data  procedure server lessen computational overhead client besides  scientific  attack defense model closure propose literature summarizes review objective underlie algorithm available literature characteristic CC environment improve performance aspect summary related  deployed schedule algorithm load allocation dynamic static  intelligence technique roulette selection developed schedule technique CC  algorithm analysis  intelligence technique allocate task sequential  PSO scheme schedule cloudlets vms  algorithm developed schedule technique CC  gsa orthogonal crossover propose propose FIMPSO algorithm involves hybridization FF IMPSO algorithm FIMPSO algorithm effective average load enhances essential resource usage response task subsection involve propose algorithm detail FF algorithm propose model establish hybrid FF IMPSO explain briefly generally FF technique classify premise FF belongs gender sex attracts firefly attraction correspond brightness brighten FF consume intensified FF hence attraction brightness FF reduce distance increase firefly FF brighter specific randomly attract objective function compute brightness firefly involve FF algorithm illustrate fundamental concept involve FF algorithm intensity attraction firefly attraction define intensity whereas brightness acquire objective function optimize issue intensity attraction estimate equation denote brightness attraction respectively distance firefly denote euclidean distance formula indicates FF spatial dimension FF brighter FF imply equation FF image KB image flowchart FF algorithm FF fix absorption application intensified FF random movement define identical distribution interval IMPSO algorithm flowchart propose technique IMPSO algorithm depict involve IMPSO algorithm initialization PSO fix swarm particle dimension computation variable particle variable swarm initialization random particle formation parameter evolution iteration inertia training factor evaluation objective function population objective function compute particle generalization particle initialization particle archive initialization non dominate identify archive iteration accomplish explore archive solver non dominate particle archive distance particle archive declare GBG update particle denotes iteration whereas random expands boundary combine fix decision parameter correspond upper boundary velocity increase hence direction perform mutation calculate update archive particle dominate introduces non dominate within archive archive dominate novel archive replace compute basis CD personal particle upgraded dominates location memory particle update function improve iteration cycle improve iteration requirement attain global GBG declare earlier essential MOPSO technique exist technique suggestion discover GBG technique benefit drawback novel technique discover GBG multi objective PSO objective hyper cube prior selection GBG particle fitness allot hypercube upon elite particle inside elite particle hypercube fitness lesser comparatively roulette execute hypercube chosen GBG arbitrary particle chosen hypercube consequently GBG chosen roulette chosen technique arbitrarily probably particle global multi objective optimization dynamic neighborhood PSO applies dynamic neighborhood strategy research article reveals concept objective optimization GBG particle identify objective distance particle alternate particle evaluate respective fix objective local basis distance calculation local optimum objective GBG particle therefore consists fix objective selection conduct utilize prior knowledge objective function optimization technique helpful handle multi objective function hence selection GBG objective function distance multi objective PSO CD MOPSO distance estimation density surround envelop archive independent identify prior iteration non dominate employ GBG particle swarm archive filter reduce CD consequently GBG particle chosen non dominate compose maximum CD particle portion dataset GBG assistance CD however random selection resolve demerit involve   FIMPSO propose identify global guidance particle fundamental model minimum distance  establish afterwards computes global particle population 2D identify origin  described external distance explain likewise coordinate generate origin described exterior distance mention utilize model distance regard objective identification GBG collection member particle objective optimize population drawn coordinate objective non dominate particle described pursues distance compute ordinate objective population particle described pursues particle regard respect optimize output distance described particle distance member member GBG consequently  MOPSO establish generally suitable global particle population hybridization FIMPSO algorithm propose model combination FF IMPSO technique response accuracy improve approach deem effective feature FF technique compose maximum convergence however decrease exploration later IMPSO technique incorporate improve sensitivity phase therefore random behavior particle IMPSO sensitivity primary population initial population properly algorithm attain optimal obtain model initialize optimize population achieve application FF algorithm evaluation function described minimum maximum minimum input maximum input implement procedure estimate optimal execution schedule various operation FIMPSO technique obtain attribute input arrival estimate explain performance validation propose FIMPSO algorithm simulated matlab task login arbitrary initialization software comparison purpose algorithm namely robin RR service FCFS SJF genetic algorithm GA employ moreover investigate execution resource utilization reliability span throughput implementation setup various synthetic datasets along task link extra task consists task task MI similarly task consists task whereas task MI likewise medium task consists task task MI task consists task MI task addition task random fashion define instruction MI besides research utilized server variety resource capacity load server host  instance various cpu memory capacity synthetic datasets   task MI extra medium VM instance VM  capacity mips memory capacity GB extra medium analysis execution detailed comparison schedule FIMPSO algorithm average load average turnaround average response FIMPSO attain schedule algorithm considerable average around maximum average around ipso FF technique respectively slightly average turnaround RR FCFS SJF average turnaround respectively GA attain manageable moderate average turnaround ipso FF algorithm exhibit competitive average turnaround however FIMPSO algorithm yield effective outcome average turnaround similarly average response maximum average response ipso FF technique respectively slightly average response RR FCFS SJF average response respectively GA attain manageable moderate average response simultaneously ipso FF algorithm exhibit competitive average response however propose FIMPSO algorithm yield effective outcome average response comparison propose schedule  load average turnaround average response RR FCFS SJF GA ipso firefly FF ipso FIMPSO analysis cpu utilization attain model cpu utilization indicates FIMPSO achieve maximum cpu utilization task comparison task RD WRR model cpu utilization achieve minimum utilization respectively DLB LB BC manage attain slight increase cpu utilization LB RC FF ipso algorithm closer FIMPSO attain cpu utilization respectively model exhibit superior performance attain maximum cpu utilization extra task RD WRR model cpu utilization minimum utilization respectively DLB LB BC manage attain mild increase cpu utilization respectively LB RC FF ipso algorithm closer FIMPSO attain cpu utilization respectively model yield superior performance attain maximum cpu utilization extra task therefore infer FIMPSO algorithm highly effective cpu utilization task irrespective task increase task increase cpu utilization image KB image comparative analysis cpu utilization analysis memory utilization detailed analysis conduct FIMPSO exist memory utilization understood FIMPSO achieve maximum memory utilization task comparison task RD WRR model memory utilization achieve minimum memory utilization respectively DLB LB BC manage attain slight increase memory utilization respectively LB RC FF ipso algorithm achieve closer FIMPSO attain memory utilization respectively nevertheless model exhibit superior performance attain maximum memory utilization extra task RD WRR model memory utilization achieve minimum memory utilization respectively DLB LB BC manage attain slight increase memory utilization LB RC FF ipso algorithm achieve closer FIMPSO attain memory utilization respectively model yield superior performance attain maximum memory utilization extra task therefore infer FIMPSO algorithm highly effective memory utilization task irrespective increase task increase memory utilization image KB image comparative analysis memory utilization analysis reliability reliability analysis various perform FIMPSO exist task RD WRR model reliability achieve minimum reliability respectively DLB LB BC manage attain slight increase reliability LB RC algorithm yield closer FF ipso FIMPSO attain reliability however LB RC model yield superior performance attain maximum reliability extra task RD WRR model reliability achieve minimum reliability DLB LB BC manage attain slight increase reliability LB RC FF ipso algorithm achieve closer FIMPSO attain identical reliability however model exhibit superior performance attain maximum reliability extra task therefore infer FIMPSO algorithm highly effective reliability task irrespective task infer reliability decrease task increase image KB image comparative analysis reliability analysis span detailed comparison schedule FIMPSO algorithm span indicates FIMPSO yield schedule algorithm considerable extra task span maximum span RD WRR technique respectively slightly span DLB LB BC LB RC span respectively ipso FF algorithm competitive span however FIMPSO algorithm effective span requirement span gradually increase increase task image KB image comparative analysis span analysis average throughput finally extensive average throughput analysis various perform FIMPSO exist task RD WRR model average throughput achieve minimum average throughput respectively DLB LB BC manage attain slight increase average throughput LB RC FF ipso algorithm yield closer FIMPSO attain identical average throughput respectively model exhibit superior performance attain maximum average throughput extra task extra task RD WRR model average throughput achieve minimum average throughput respectively DLB LB BC manage attain slight increase average throughput LB RC FF ipso algorithm achieve closer FIMPSO attain identical average throughput respectively model excel superior performance attain maximum average throughput extra task image KB image comparative analysis average throughput discussion achieve propose model aspect FIMPSO algorithm yield effective outcome average response propose model attain maximum cpu utilization extra task model maximum memory utilization extra task besides maximum reliability extra task propose along span attain maximum average throughput extra task therefore infer FIMPSO algorithm effective average throughput task irrespective task infer average throughput decrease task increase conclusion efficient load balance algorithm environment FIMPSO algorithm algorithm incorporates benefit FF IMPSO algorithm FIMPSO algorithm achieve effective average load enhance essential resource usage response task experimentation investigate execution resource utilization reliability span throughput simulation outcome propose FIMPSO model excel performance simulation outcome understood FIMPSO algorithm achieve effective average response maximum cpu utilization memory utilization reliability throughput along span superior future scope inclusive improvement FIMPSO algorithm data deduplication algorithm