parallel program hpc task sophisticated hardware software component complex non intuitive interaction combination education hpc topic computer due distribute memory ubiquitous inaccessible intangible cluster coffer miniature cluster computer compute suitable reduce entry barrier hpc public outreach discus goal portable inexpensive easy maintain repair outline implementation hardware software others information reproduce extend finally cluster coffer multiple upcoming previous  article MSC keywords performance compute parallel program portability public outreach introduction performance compute increasingly complex computer sophisticated software hardware component complex interaction coordination render hpc challenge topic execution core cache socket processor link node network link storage subsystem understood capability intricacy manage multiple hpc hardware architecture hierarchy furthermore plethora software paradigm available interact architecture aspect parallel program model mpi openmp  parallel algorithm efficient data structure optimize compiler manual code transformation performance analysis visualization debugger hpc challenge educational perspective access restrict multitude implementation parallel program model predominantly openmp mpi hpc hardware orient access hpc hardware multi core CPUs readily available consist multiple CPUs node challenge distribute memory program usually feasibly available intangible impedes hpc effort characteristic hpc hardware software theory practical application DVFS purely compute bound hpc workload distribute memory cannot investigate detail commodity memory hardware mitigate issue beneficial miniature hpc available easy maintain representative characteristic cluster coffer mobile hpc platform consist multi core compute node interconnect via gigabit ethernet robust goal cluster coffer feasibility construct representative hpc easily relocate target audience illustrate benefit demonstrate hpc aspect public dissemination interaction application steer information others reproduce upon structure related perspective principle hardware software implementation detail respectively application steer audience illustrate conclude remark future related multi core CPUs embed compute emerge appearance raspberry embed  computer hpc miniature cluster computer landscape classify multiple intend portability performance focus specific aspect computer compute feature instrumentation comprehensive miniature cluster built link individual compute already exceed scope vast amount available due inexpensive component relatively mature software stack contrast goal overview outline perspective cluster almost contribute public outreach parallel program partly hpc pioneer  cluster construct raspberry model node enclose housing lego brick portable suitcase node grain distribute memory research due cluster limited mhz  RISC processor MB ram mbit ethernet network cluster coffer besides performance attribute newer architecture per node instrumentation gigabit ethernet approach housing lego 3D raspberry project wooden panel simply omit housing altogether newer prominently   built   feature raspberry compute node acrylic enclosure equip dot matrix screen display pixel cpu memory storage load information per compute node knowledge per node instrumentation available   information individual node switch easily resilience research beyond cluster  tutorial version   originate educational institution commercially available semi portable cluster mainly public outreach  consist raspberry node rack scientific application cluster cluster coffer performance infrastructure requirement aim affordable education public outreach intermediate hpc stage scientist finally option resource docker instance simply remote access cluster achieve goal however approach disadvantage prevent purpose lack site physical access component involve reduces engagement attention furthermore public outreach increase entry threshold target audience fully comprehend working scene compute naturally goal compute hinders hardware orient parallel program concept virtualization usually entail absence suitable instrumentation potentially introduces performance perturbation schedule virtual machine limit concept DVFS performance offs knowledge finer grain instrumentation public outreach engages audience interaction simulation physic application interaction physical access visibility hardware component involve computation crucial personal cluster coffer aggregate hypothesis motivation principle construct successful substitute hpc goal driven fashion principle establish hardware software hardware hardware goal representative hpc multi core node via network interconnect offering node equip core ensures accept hybrid mpi openmp application workload cpu architecture conventional compiler hpc node responsible handle user login compilation application beyond classic hpc requirement mobile  restriction handle hassle requirement limited commodity cord thermal envelope reasonably consumption concern gain importance hpc monitoring capability regard multi objective optimization project finally assemble commodity hardware component ensure technical economical feasibility project software representative hpc software standard linux operating establish compiler gcc clang openmp mpi application ubiquity hpc furthermore simplify application launch distribute memory environment mpi storage network node accessible via ssh beyond requirement aim maintenance overhead instal update modify software stack node compute node centralize maintenance approach finally conveniently access non functional metric cpu load consumption node metric displayed graphical fashion allows quickly ascertain overall cluster coffer glance visually intuitive information non expert target audience educational concept beyond hardware software specific goal regard educational aim warrant development effort suitable secondary undergraduate furthermore highly engage interactive attract attention respective target audience entail additional hardware requirement directly visible accessible component software compelling flexible varied detail discussion environment hpc freedom environment setting increase merit capable parallel performance compute topic broader audience public outreach maximize aspect interactive threshold aim content highly relevant tailor respective target audience widely algorithm benchmark commonly prediction broader audience argue personal education audience specific interactive showcase generally rate attract attention generic pre prepared screen  hardware architecture describes hardware selection detail hardware characteristic pertain detailed information individual component measurement drawing technical documentation documentation bill EUR minor component screw cable computational characteristic fulfill goal mobile representative hpc cluster demonstration purpose compute node network interconnect easily portable hardware exceeds limitation aggravate stable platform requirement infrastructure architecture naturally purpose demonstrate viability hpc  june fujitsu  processor factor thermal footprint compute allows pack device aluminum suitcase approximately restrict workload pure distribute memory application multi core reasonable computational performance suitable memory distribute memory parallel program inexpensive easily replaceable   RK chip feature architecture cortex core clocked ghz cortex core clocked ghz neon instruction simd operation  shelf easily replace compute node characteristic hardware architecture equip  gpus OpenCL employ cluster coffer gpu compute detail regard obtainable performance cluster coffer hardware architecture  cortex          compute node equip GB ram node  GB compilation management local storage available per node  GB although detail enable network boot involve storage operation booting linux kernel local storage node  GB  flash memory frame illustrates entire compute node assembly without encompass suitcase node whereas individual node cooler fan attach clarity illustration wiring panel orange compute node photography fan aid toggle switch compute node switch research resilience simulate fail node although node via USB cable connector comparatively expensive inflexible regard cable instead opt compute node via  header easily accessible versatile allows interface compute node  per node  connector instrumentation via  zero drift bidirectional  resistor monitor accessible IC respective compute node enables expand usage scenario cluster coffer tune research multi objective optimization  instrumentation successfully demonstrate related hoc commercially available methodology cluster coffer measurement measurement compute node rely estimate remain hardware network switch fan compute overall consumption image KB image illustration entire compute node assembly network switch partially visible underneath image KB image explode compute node assembly interpretation reader refer web version article image KB image photo fully assemble compute assembly cable cluster coffer external IEC connector aluminum suitcase equip switch fuse safety connector AC AC switch output respectively underneath compute node compute node redundancy increase opt sacrifice redundancy portability experimentally focus cluster due lack USB device external component overall compute node exceed therefore  dimension directly actively however due compute node fan directly limited entire assembly preliminary exhibit overheat load compute node celsius memory module dedicate cooler cluster coffer operation suitcase driver compute node fan node fan node DC socket  pin measurement available however cluster configuration prohibit production workload login node default issue compute node fan fan compute node instrumentation finally WS strip cluster coffer inside suitcase individually addressable rgb LEDs arduino nano  micro controller micro controller node via  RS UART USB interface serf purpose  audience sometimes attract cluster coffer research topic computer effectiveness regard proven numerous public outreach education merely display actually visualization computational load cluster coffer describes fully assemble cluster coffer compute node assembly sits suitcase node inside ethernet cable external network connection interact entire suitcase weighs operational image KB image fully assemble cluster coffer node access USB HDMI ethernet cable connects outside network compute node network switch chose TP link TL  gigabit ethernet switch compute node node topology cable additional unassigned ample extension future component additional instrumentation device external ethernet cable allows interface cluster coffer outside maximum switch switch capacity gbit software architecture detail software environment cluster coffer bootloader hpc specific package software component described available publicly github built upon researcher instructor easily architecture minimum effort exception bootloader component measurement via IC publish github tailor specific hardware platform likely adjustment whenever compute model controller instrumentation implementation operating software stack software requirement outline standard debian linux operating node compute node stable maintain hardware architecture access vast amount software package cluster maintenance parallel application development compute node local  storage GB easily accommodate linux installation along package program parallel operation however entail unnecessary duplication update compute node software stack modify configuration simply software package instead boot boot loader network boot compute node dev  node directory compute node refer  compute node temporary overlay file prevent interference simultaneous operation identical file nfs  beyond removal duplicate information advantage software stack compute node automatically synchronize reduces  software stack persistent compute node software stack perform  node  naturally persistent capability compute node writes overlay file discard upon shutdown however persistent writes directory normal operation application workload persistent node specific setting IP address host achieve DHCP node unique mac address unique identifier per compute node boot loader flash  preserve monotonicity compute node synchronize ntp server node indeed persistent synchronizes ntp server outside external network connection upon booting cluster specific software environment addition commodity linux OS specific software environment cluster coffer operation development installation development package node compile debug program gcc  valgrind gdb nfs server compute node filesystem mpi implementation compute node along various additional package ntp client synchronization furthermore cluster naturally persistent storage node access mpi application executables input data dedicate network directory resembles cluster user directory scratch interface host hpc instrumentation enables user monitor load cluster consumption frequently data additional interface outside besides ssh cluster coffer screen due constraint implement framework allows exchange information cluster coffer optional host computer laptop developed  project dashboard browser online performance visualization communication illustrate non functional data cluster coffer computational memory network load information runtime performance steer compatible program rely  software framework affect scheduler decision execution parallel application screenshot dashboard aggregate information displayed gauge detailed per node information cod node node offline node offline data report configurable amount efficiency graph data node dimensional plot visualizes data distribution within  runtime effectiveness efficiency active load balance rectangle corresponds data dimensional domain application node illustrate node memory data currently resides active scheduler policy menu uniform policy screenshot information dashboard cluster coffer exchange json compatibility debug dashboard web lightweight standalone dashboard server host computer cluster coffer performs actual message exchange runtime via tcp debug purpose server generate random status data dashboard image KB image dashboard aggregate information individual node graph compute efficiency  application along data distribution currently active schedule policy application execute cluster coffer  software framework implement standalone daemon periodically non functional data irrespective specific application execute compute node instance daemon data aggregation daemon node merges data dashboard server daemon performance steer naturally available communication metric data source per compute node application  compute node metric dashboard visualization  sys bus driver    input cpu sys device cpu cpu  cur freq cpu load proc stat ram load proc  network load proc net dev source project modularized component standard json facilitate modification extension monitoring status LEDs mention WS strip cluster coffer beyond attract audience public visualization computational load cluster coffer daemon non functional statistic data contains cpu load information node node sends data arduino  micro controller strip LEDs individually addressable correspond load compute node adjacent illustration visualization load arrow illustrate difference brightness progress throughout strip computational load image KB image load status visualization arrow denotes progress mode visualizes cluster static brightness without switch portion strip correspond node offline visual debug effective aspect verify mpi rank placement alert fail node illustrate load imbalance without consult dashboard cpu load data daemon deliberately restrict user load status LEDs inefficient program execution due excessive OS setup booting initial setup software image cluster coffer script framework script linux distribution debian image cluster linux image node software package development cluster administration  image node compute node boot loader compute node network booting  subsequently node linux image compute node boot loader  whereas  image node  storage entire desktop hardware allows flash image SD breakdown node software stack furthermore node configuration IP address hostnames ntp setup ssh host user script cluster coffer boot without additional detail inner working script framework readme file repository reading script compute node  node node switch booting cluster grace approximately node service compute node switch switch compute node nearly simultaneously induces load node occasion entail filesystem network timeouts recommend stagger procedure approximately compute node cycle benchmarking although cluster coffer mainly aim literal portability hpc cortex core equip neon  vector extension offering register accumulate operation precision float FLOPS per cycle per core nominal rate ghz cpu core theoretical peak performance gflops entire cluster coffer  gflops naturally hpc rank june graham  nevertheless cluster coffer illustrates vast performance improvement achieve decade outperforms rank june XP  lab due  gflops moreover documentation consumption XP assume  whereas cluster coffer estimate overall maximum theoretical consumption approximately measurement  PM industrial grade meter consumption socket ranked accord rmax  benchmarked HPL setting chosen weak maximum chosen data memory node ram available weak due comparatively limited amount memory available linpack operation matrix linearly node increase operation super linearly rmax node maximum node approx available ram HPL parameter benchmarking  weak node NB   derive empirical worsen performance measurable benefit grid chosen network topology switch network HPL ratio grid selection described beyond benchmark specific setting gcc compile   cortex flag link blas implementation  performance library version built generic microarchitecture hence target armv CPUs neon capability OpenMPI mpi implementation performance data benchmark raw data rmax denotes achieve maximum conduct multiple data nevertheless empirical evaluation data indicates variation consumption rmax gflops compute node approximately estimate consumption entire cluster approximately image KB image HPL performance achieve gflops per node HPL raw performance data rmax  node denotes  rmax weak  weak data cluster coffer ranked june outperform CM los  national laboratory  however besides progress hardware research development software stack improve HPL update however HPL resembles subset comparatively computationally bound application hpcg benchmark data HPL overall performance hpcg depends memory node interconnect performance hence resemble non computationally bound workload benchmark optimize version hpcg similarly HPL per node dimension ram usage fulfil benchmark requirement due requirement conduct weak setting identical HPL compiler version flag performance library neon OpenMPI version rank per node openmp thread task cortex core performance data hpcg runtimes criterion official sufficient purpose data parallel efficiency node commodity gigabit node interconnect node optimize memory hierarchy interaction illustrates performance gflops per node axis axis hpcg weak raw performance data overall memory throughput node denotes bandwidth raw memory bandwidth GB  image KB image hpcg performance achieve gflops per node parallel program hpc challenge task intricacy multiple parallel hardware cpu architecture ISA ILP vectorization hardware multithreading chip interconnect memory hierarchy private cache replacement policy numa topology hardware prefetching network network topology RDMA accelerator cpu memory aspect addition software focus aspect aware choice algorithm task data parallelism decomposition load balance temporal spatial data locality false thread affinity increase parallelism width numa domain per node numa domain within CPUs vector register width heterogeneity CPUs accelerator program model domain specific library parallel program challenge cluster coffer visualize characteristic hpc complementary hardware commonly available software stack hardware reconfigurations feasible contrast production computer hardware access practical aspect promote instrumentation cluster coffer highly suitable parallel program hardware optimization illustrate concept multi objective optimization frequency voltage DVFS data HPL benchmark cortex core multi thread blas implementation performance library benchmark repeatedly frequency setting axis simultaneously consumption compute node increase performance decrease increase frequency however expose concept DVFS sweet consumption neither frequency topic intuitively optimal frequency subsequent examination reveals static consumption overhead remain cortex core core entity cache memory controller skew data lower frequency mhz configuration yield execution disproportionately consumption saving frequency voltage reduction due static overhead addition excellent roofline model compute bound memory bound workload amdahl regard relative amount program parallel parallel efficiency characteristic influence sweet image KB image performance characteristic HPL cortex various frequency addition data illustrate non linear relationship consumption exhibit frequency definition dynamic consumption electrical capacitance fix hardware denotes frequency denotes voltage switch factor workload essence percentage transistor cycle employ data illustration equation initial motivation parallel program explain increase parallelism multi core CPUs feedback visualization benchmark cluster coffer greatly increase topic background theoretical fashion contrast raw data normalize consumption corresponds frequency measurement efficient cortex core frequency ghz ghz dot pareto frontier consists pareto optimal meaning outperforms pareto frontier objective static consumption overhead hardware application workload fully computationally bound comparatively easy obtain excellent explore application implement homework motivate existence aware schedule  supercomputer image KB image pareto optimal average consumption HPL cortex various frequency illustrate DVFS distribute memory hpc environment hpcg benchmark frequency setting cortex core node heatmaps overall performance per node performance consumption naturally decrease decrease frequency similarly HPL sweet node frequency mhz reduce consumption performance nominal mhz however communication overhead visible data per node consumption decrease increase node stall core message passing operation implementation hpcg non communication mhz per node reduce node node stall refer slack related optimization reduce frequency core mpi cluster coffer essentially eliminate mhz difference within margin measurement error latency non communication fully hidden computation data processing hence reduce core stall minimum performance per node consumption data hpcg core frequency specifies node specifies frequency mhz capability cluster coffer data suitable aforementioned concept scalability non compute  DVFS hpc workload nevertheless rely availability grain measurement exclusive node access prevent resource cluster ensure productive environment recommend parallel individual node memory submission distribute memory without mutual measurement perturbation practical involve program limited maximum per platform cluster coffer accommodate public outreach cluster coffer engage public education institution purpose rely comparatively sophisticated research multi objective optimization performance aim demonstrate principle parallel program data decomposition hpc impact everyday  project pilot application  particle code application simulate interaction solar specifically solar storm  solar storm damage electronic outage  march solar storm choice motivate justify hpc expense public solar storm neither investigate analytically experimentally demand nevertheless caveat solar abstract topic public simulation usually static input data visualization engage audience lively interaction consequence modify  accept input data camera enable audience directly influence simulation hence computational load cluster functional non functional visualization algorithm algorithm outline setup visualization movement capture camera host PC usually background possibly perturbation input data microsoft kinect depth sensor allows information finite difference meter remove information beyond visualization visualization image capture host image data analyze host PC information extract opencv program detect information via tcp cluster coffer generates particle data direction movement particle already simulation previous movement initialize particle cluster coffer simulation gathering particle host PC host PC display capture image kinect camera 3D visualization particle cluster coffer correspond dashboard visualization cluster coffer fully load visualization audience explain information maximize interactivity additional screen artist visualization solar photo video illustration physic involve algorithm image KB image algorithm image capture data visualization host PC algorithm image KB image algorithm simulation cluster image KB image overview entire public outreach setup image KB image visualization image capture kinect camera passing image capture depth sensor image capture normal sensor masked version image entire scene hence visible capture information image KB image visualization particle  simulation cluster coffer simulation corresponds input illustrate particle image KB image dashboard visualization cluster load  particle individual graph cpu load cpu frequency consumption consumption network load simulation update per mainly limited interconnect host PC cluster coffer depends particle approximately particle per saturate node NIC performance network bandwidth latency sufficient optimize bandwidth usage precision data data exchange host PC cluster coffer remove data irrelevant visualization transfer particle information PC furthermore visualization clarity particle equip reduce simulation finite remove simulation naturally correctly physical involve serf purpose illustration interaction successfully demonstrate cluster coffer multiple public outreach institution public education pre scientific pupil networking location emphasizes usefulness mobile highly favorable feedback respective audience analysis upfront maintenance hardware software hardware EUR purchasing minor component screw cable limited effort involve verse CAD construction component online minimal blueprint github assembly scratch approximately software setup highly automate whereas development approximately minimal effort maintain comparable linux negligible maximum theoretical consumption maximum comparable moderately powerful desktop computer site public outreach host PC webcam screen etc approximately min stability hardware repair deliberately compose easily  commodity hardware component replace minimal however encounter hardware component failure namely SD conclusion demonstrate feasibility construct portable hpc education public outreach cluster coffer outline perspective topic already numerous miniature cluster detailed addition demonstrate cluster threshold research dissemination modular feasible commodity component outage expensive repair attract attention public future performance optimization software stack benchmark data clearly improvement respect theoretical peak performance furthermore intend cluster coffer gpu program OpenCL   gpus cluster coffer already pupil host intend extend effort site portability finally option curriculum around offering pre define outcome similarly credit authorship contribution statement   conceptualization draft edit visualization software supervision alexander hirsch hardware peter  software visualization peter  software visualization  jordan conceptualization thomas  funding acquisition