novel communication efficient failure robust protocol secure aggregation dimensional data protocol allows server compute sum user data vector mobile device secure manner without user individual contribution federate aggregate user model update neural network security protocol honest curious active adversary setting security maintain arbitrarily chosen subset user evaluate efficiency protocol complexity analysis concrete implementation runtime communication overhead remain data client pool input protocol communication expansion user dimensional vector expansion user dimensional vector data keywords privacy preserve protocol secure aggregation machine federate introduction machine model sensitive data promise improvement everything medical screen disease outbreak discovery widespread mobile device richer sensitive data become available however collection sensitive data entail risk particularly profile consequence  sensitive data video rental  supreme court publish without consent response incident remains relevant limit online video service user data outline approach advance privacy preserve machine leverage secure multiparty computation mpc compute sum model parameter update individual user device secure manner compute multiparty sum reveals update aggregator refer secure aggregation described secure aggregation primitive privately combine output local machine user device update global model training model tangible benefit user device update service provider update average user secure aggregation research approach generic secure research perform internship google session privacy preserve analytics CCS october november dallas TX usa multi computation protocol DC net partially fully homomorphic threshold encryption pairwise mask discus exist detail approach particularly focus mobile device communication extremely expensive dropout constraint protocol incur twice communication data vector aggregate protocol fully robust user previous address mixture constraint motivates protocol securely compute sum vector constant communication overhead robustness failure server limited trust server role route message computes variant protocol efficient proven secure honest curious adversary model guarantee privacy active adversary actively adversarial server extra proven secure random oracle model formally server learns user input aggregate simulation proof standard mpc protocol variant practical benchmark prototype implementation organization machine application motivates review cryptographic primitive protocol proceed highlevel overview protocol formal protocol description security honest curious passive adversary discussion privacy active adversary performance theoretical analysis prototype implementation finally discus issue surround practical deployment future conclude discussion related secure aggregation  learning training neural network predict user composes text message model commonly improve efficacy phone  keyboard modeler model text message across population user however text message frequently sensitive information user reluctant upload modeler server instead training model federate wherein user maintains private database text message securely mobile device global model coordination central server upon highly minimally scoped ephemeral update user update dimensional vector information user private database training neural net typically repeatedly iterate update variant mini batch stochastic gradient descent appendix detail although update ephemeral contains typically significantly information user private database user concerned information remains circumstance  user typed inspect user recent update however federate server access individual user update perform stochastic gradient descent elementwise average update vector random subset user secure aggregation protocol compute average ensure server user randomly subset user federate practical challenge mobile device sporadic access network connectivity user participate update unpredictable robust user neural network parameterized update user meter network mobile device generally cannot establish communication channel mobile device rely server service provider mediate communication natively authenticate mobile device federate motivates secure aggregation protocol operates dimensional vector highly communication efficient novel user instantiation robust user security constraint server mediate unauthenticated network model cryptographic  discus cryptographic primitive assumption construction secret rely shamir secret allows user split secret reconstruct information scheme parameterized finite security parameter scheme public prime scheme client secret compute secure average secure sum operation  detail appendix session privacy preserve analytics CCS october november dallas TX usa host mobile intelligence federate federate secure aggregation centric approach machine intelligence user device interact host model generate training user combine improve model future user request federate machine intelligence model user device evaluate locally summary improve model server aggregate model deployed user device secure aggregation federate aggregation model update logically perform virtual incorruptible induced secure multiparty communication provider learns aggregate model update secret proportional security parameter security proof assume integer denote user protocol identify distinct parameter scheme consists algorithm algorithm SS input secret user IDs threshold associate reconstruction algorithm SS recon input threshold correspond subset output correctness SS SS recon security SS SS denotes distribution identical agreement agreement consists tuple algorithm KA param KA gen KA algorithm KA param public parameter scheme parameterized KA gen SK PK allows generate private public KA SK PK allows user combine private SK public PK generate obtain private specific agreement scheme diffie hellman agreement compose hash function specifically KA param sample prime along generator hash  KA gen sample random secret SK public PK KA output sha correctness generate user KA gen parameter KA SK PK KA SK PK security honest curious model adversary honestly generate public PK PK neither correspond secret SK SK secret compute indistinguishable uniformly random exactly mirror decisional diffie hellman DDH assumption recall definition decisional diffie hellman assumption efficient algorithm sample generator function probabilistic parameterized ppt adversary security parameter DDH  output advantage adversary define adv DDH DDH exp DDH exp decisional diffie hellman assumption ppt adversary exists negligible function adv DDH traditionally diffie hellman assumption directly involve hash function substitute therefore random uniformly random prg sample secret primitive compose secure randomness extractor composes specific agreement operation simplicity incorporate extractor function assumption session privacy preserve analytics CCS october november dallas TX usa security active adversary theorem somewhat security guarantee agreement namely adversary honestly generate public PK PK ability KA SK PK KA SK PK PK choice PK PK cannot distinguish random rely slight variant oracle diffie hellman assumption ODH oracle diffie hellman assumption ODH definition oracle diffie hellman assumption ODH efficient algorithm sample generator function probabilistic parameterized ppt adversary security parameter ODH  output return error input similarly return advantage adversary define adv DH ODH exp ODH exp oracle diffie hellman assumption ppt adversary exists negligible function adv DH assumption directly security agreement oracle formalize ability adversary KA SK PK KA SK PK PK negligible advantage corresponds inability distinguish authenticate encryption symmetric authenticate encryption combine confidentiality integrity guarantee message exchange consists generation algorithm output private encryption algorithm AE enc input message output ciphertext decryption algorithm AE dec input ciphertext output plaintext error correctness message AE dec AE enc security  chosen plaintext attack ind cpa ciphertext integrity ind ctxt define informally without loss generality simplify assumption generation algorithm sample uniformly random guarantee adversary encryption message choice randomly sample unknown cannot distinguish encryption message valid ciphertexts respect negligible advantage pseudorandom generator secure pseudorandom generator prg uniformly random fix output input protocol security pseudorandom generator guarantee output uniformly random computationally indistinguishable uniformly sample output hidden distinguisher signature scheme protocol relies standard UF cma secure signature scheme sig gen sig sig ver generation algorithm sig gen PK SK input security parameter output secret SK public PK signing algorithm sig SK input secret message output signature verification algorithm sig ver PK input public message signature return signature valid correctness PK SK sig gen sig SK sig ver PK security demand ppt adversary honestly generate public access oracle signature arbitrary message valid signature message oracle query negligible probability public infrastructure prevent server simulate arbitrary client active adversary model public infrastructure allows client register identity message identity client verify signature cannot impersonate model register PK public bulletin setup phase bulletin register attack impersonate honest technical intuition protocol   detailed comparison approach protocol server aggregate input client user private vector dimension simplicity assume ZR goal protocol user client interchangeably session privacy preserve analytics CCS october november dallas TX usa compute secure fashion guarantee server learns sum client input contribution user user mask pad observation compute perfect secrecy masked assume user suppose user random vector subtracts mask cancel vector actual input reveal user computes mod sends server server computes mod shortcoming approach user exchange random vector naively quadratic communication overhead tolerance fail protocol user exchange vector user submit server vector mask associate cancel sum efficient communication handle user reduce communication pseudorandom generator prg entire mask compute broadcast diffie hellman public engage agreement approach handle user notify survive user compute user approach additional user recovery phase additional recovery phase newly user report user resolve threshold secret scheme user diffie hellman secret user allows pairwise recover additional recovery minimum threshold remain alive respond user approach solves unbounded recovery issue possibility user data accidentally leak server scenario user server server assumes user asks user reveal generate DH  user server advertise masked input collection consistency public PK PK broadcast public user validate signature generate compute compute secret encrypt encrypt compute masked input user survive user signature SK SK PK SK signature SK PK unmask survive user compute aggregate reconstruct secret abort validate signature PK alive user abort user user protocol underlined guarantee security active adversary model honest curious secret remove  mask however compute server delayed server remove mask security moreover adversarial server active model similarly simply user mask security resolve security introduce mask structure protects server reconstruct mask user sample additional random generation secret user generates distributes user generate user secondary mask prg prg prg mod recovery server explicit choice respect user survive member server request secret associate honest user reveal user gathering user survive user server remain mask reveal sum summarize protocol asymptotic computational quadratic user cubic server data vector communication storage overhead session privacy preserve analytics CCS october november dallas TX usa user server computation communication storage summary protocol client server protocol approach multiplicative constant data practical secure aggregation protocol protocol synchronous network server user consists user input vector  consist ZR server input communicate user secure private authenticate channel user protocol message completely server output survive simplify notation assume user assign unique logical identity denote integer honest user index description stress server message user server receives message user aborted recall synchronous abort message practical implementation server specify timeout user respond abort message timeout security active adversary model assume existence public infrastructure simplicity abstract away assume client input trust public signing client overall protocol parameterized security parameter adjust bound probability attacker theorem implicitly assume client polynomially bound security parameter moreover primitive additional global parameter variant protocol honest curious protocol honestly avoid signature pki notably allows avoid  entirely security analysis security argument technical lemma user uniformly random server reconstruct secret align shamir cache lagrange coefficient detail identity bound user pki rely active adversary pairwise mask uniformly random sum sum user pairwise mask hide information user individual input sum lemma fix mod mod denotes distribution identical omit proof easily induction honest curious security argue protocol secure multiparty computation honest curious regardless abort execute protocol threshold joint server honest user leak information user input besides infer output computation formally introduce notation execution secure aggregation protocol underlie cryptographic primitive instantiate security parameter server interacts user denote logical identity threshold execution user abort execution denote subset user correctly message server user exactly abort message server message  omit define denote input  input subset user protocol execution consists internal input randomness message message moreover abort message extend message subset REALU random variable combine protocol execution randomness internal randomness randomness setup phase theorem joint subset honest user exclude server simulated session privacy preserve analytics CCS october november dallas TX usa secure aggregation protocol setup security parameter user threshold honestly generate KA gen parameter input sample secret user private authenticate channel server user signing trust verification bound user identity  user generate KA gen KA gen generate sig server private authenticate channel server message individual user previous denote user otherwise abort broadcast user  user broadcast server assert public sig ver sample random prg generate SS generate SS user compute AE enc KA operation assertion signature verification agreement encryption fails abort ciphertexts server implicitly address information metadata message generate server ciphertexts user denote user sends user ciphertexts encrypt  user server ciphertexts infer abort user compute KA expand prg random vector prg additionally define compute user private mask vector prg compute masked input vector mod operation agreement prg fails abort otherwise server server user denote user user  user server consist user abort server sig server user denote user user unmask user server verify sig ver otherwise abort user decrypt ciphertext AE dec KA  assert decryption operation fail ciphertext correctly authenticate abort server consists user user server generate output response user denote user user reconstruct SS recon public  recompute prg user reconstruct SS recon recompute prg compute output detailed description secure aggregation protocol underlined guarantee security active adversary model honest curious session privacy preserve analytics CCS october november dallas TX usa knowledge input user intuitively user input theorem honest curious security client exists ppt simulator sim output sim perfectly indistinguishable output REALU REALU simu proof server omit joint information theoretic input simulator therefore perfect simulation honest curious user input user dummy input vector output simulated user detail honest input server  easily response server user  contains user identity depends user respond previous specific response simulator dummy input honest joint user identical REALU theorem security  curious server additionally combine knowledge honest curious client honest curious simulated input client sum remain client intuitively client server input sum input client additionally client abort unmask simulate honest curious information remain client honest curious remain client importantly simulated honest curious client cannot guarantee security theorem honest curious security curious server exists ppt simulator sim output sim computationally indistinguishable output REALU REALU simu otherwise proof theorem standard hybrid argument define simulator sim series polynomially subsequent modification random variable subsequent random variable computationally indistinguishable hyb random variable distribute exactly joint execution protocol hyb hybrid behavior simulated honest instead KA SK PK encrypt decrypt message user uniformly random encryption chosen simulator decisional diffie hellman assumption recall definition guarantee hybrid indistinguishable previous hyb hybrid substitute ciphertexts encrypt honest honest encryption pad appropriate instead SK however honest client respond SK unmask content ciphertexts ind cpa security encryption scheme guarantee hybrid indistinguishable previous hyb define otherwise hybrid distribute exactly previous substitute generate corrupt  hybrid previous adversary additional user unmask honest client reveal honest client abort happens exactly MC joint contains shamir secret guarantee distribution identical distribution equivalent secret hybrid identically distribute previous hyb hybrid instead compute prg uniformly random vector appropriate previous hybrid chosen uniformly random adversary substitute output random variable prg prg output therefore hybrid boil substitute output prg randomly generate otherwise independent joint uniformly random session privacy preserve analytics CCS october november dallas TX usa therefore leverage security prg argue hybrid indistinguishable previous hyb  instead previous hybrid uniformly random independent uniformly random hybrid previous hybrid identically distribute hybrid subsequent hybrid ignore hybrid sim described hyb sim already simulate without therefore hybrid assume hyb random variable distribute exactly previous substitute SK generate corrupt  analogous argument hyb shamir secret guarantee hybrid identically distribute previous hyb fix specific user user user compute server substitute joint compute KA SK PK uniformly random prg detail user sample uniformly random instead sim sends prg accordingly prg easy decisional diffie hellman assumption definition guarantee hybrid indistinguishable previous important previous hybrid remove joint without reduce security DH agreement hyb hybrid chosen previous hybrid instead compute prg compute randomness appropriate previous hybrid chosen uniformly random independently  output random variable prg prg output therefore hybrid boil substitute output prg randomly generate otherwise independent joint uniformly random therefore leverage security prg argue hybrid indistinguishable previous hyb hybrid user  instead uniformly random invoke lemma hybrid identically distribute previous moreover sample random variable described hybrid knowledge individual sum sufficient define ppt simulator sim sample distribution described hybrid argument prof output simulator computationally indistinguishable output proof privacy active adversary discus argument security active adversary detailed proof version active adversary client server deviate protocol incorrect arbitrarily chosen message honest user abort omit message entire protocol server server active adversary input privacy honest user harder additionally guarantee correctness availability protocol user actively adversarial user distort output protocol input inconsistent shamir user  reporting incorrect typically RU sum however actively adversarial user outside RU adversarial user disproportionate impact protocol undermine correctness session privacy preserve analytics CCS october november dallas TX usa server unmask deviation efficient detect possibly recover future difference argument  curious security argument privacy active adversary difference proof active adversary assume exists public infrastructure pki guarantee user message user server without assumption server perform sybil attack user  simulate specific user user protocol recover user input alternatively server honestly message  specifically server honestly diffie hellman public receives user pairwise private authenticate channel amongst however assume pki server remainder protocol reduce user user user user message  authenticate authenticate encryption scheme server cannot modify substitute message fail deliver importantly server user user protocol server user unmask potentially reconstruct secret  protocol issue inclusion  difference honest curious proof difference proof random oracle RO model honestly user essentially commit secret input  however server adaptively user  simulation proof simulator honest user input dummy information earlier commit potentially easily detectable random oracle trapdoor simulator  commits dummy reprogram random oracle dummy indistinguishable honest user proof security version interpretation summarize security model security client theorem joint subset client honest adversarial simulated information remain client parameter client client theorem privacy actively adversarial user honest server exists ppt simulator sim threat model minimum threshold minimum input sum client adversary server adversary client server collusion parameterization threat model minimum threshold denotes minimum security threat model minimum input sum denotes bound user sum server denotes user corrupt user ppt adversary MC output sim perfectly indistinguishable output REALU REALU MC simu MC proof version security server theorem client cheat collaborate server guarantee sum server contains client protocol dropout theorem privacy active adversary server exists ppt simulator sim output sim computationally indistinguishable output REALU REALU MC sim  MC proof version security server collude client theorem server honest adversarial collaborate user honest adversarial guarantee sum server contains client additionally protocol robust user reiterate security server actively deviate protocol collaborate client protocol feature highlight evaluation summarize protocol performance calculation assume server user user data vector evaluate honest curious version protocol ignore pki signature  session privacy preserve analytics CCS october november dallas TX usa asymptotics slightly increase computation communication performance analysis client computation user computation broken perform agreement shamir secret SK generate user entry input vector prg overall user computation communication communication user broken exchange user public encrypt secret masked data vector server server secret overall communication  exchange public secret respectively overall user communication complexity assume input user RU RU avoid overflow user transmit raw data RU implies communication expansion factor RU RU input user expansion factor user user expansion factor storage user  user data vector mask performance analysis server computation server computation broken reconstruct shamir secret user generate remove appropriate sum reconstruct secret shamir scheme secret reconstruction SS recon amount interpolate polynomial encode evaluate accomplish via lagrange polynomial mod reconstruction computation perform reconstruction imply however perform reconstruction secret reconstruct identically indexed secret fix across secret unmask user alive sends secret reconstruct therefore precompute lagrange basis polynomial mod reconstruct secret mod computational reconstruct secret broken user protocol significantly reduce server computation communication server communication dominate mediation pairwise communication user masked data vector user storage server user along buffer maintain sum prototype performance performance implement prototype java cryptographic primitive agreement elliptic curve diffie hellman nist curve compose sha hash secret standard shamir authenticate encryption aes gcm pseudorandom generator aes counter mode assume honest curious omit portion active client simulation omission overall discus bulk involve mask data vector additionally assume client protocol client masked input server essentially dropout client already incorporate client mask server perform expensive recovery computation remove assume client data vector entry byte sum client without overflow thread simulation linux workstation intel xeon cpu ghz GB ram  communication client plot server plot percentage client per client server omit data transfer plot server essentially identical client factor incoming data server exactly outgo data client vice versa plot bandwidth session privacy preserve analytics CCS october november dallas TX usa per client client increase data vector fix entry per client data vector increase client fix data transfer per client client increase data vector assumes dropout data expansion factor per client raw data vector server assumes dropout client data transfer thread client implement java ignore communication latency plot average iteration error confidence interval error omit standard deviation dropout dropout significant impact metric simulation client server almost computation expand various prg mask data vector computational agreement secret reconstruction encrypt decrypt message client essentially negligible choice data vector suggests optimize prg implementation yield significant improvement prototype client increase linearly client data vector entry significantly client communication expansion factor client increase client increase increase relatively impact increase data vector reflect communication expansion factor client increase client increase quickly data vector increase message client amortizes data vector increase server server increase significantly dropout client server remove client pairwise mask survive client prg expansion user contrast  user entail prg expansion remove mask user reflect server protocol network wan server client geographically  datacenters contention cpu network standard deviation reflect contention occasional machine failure client per execution client somewhat shorter runtime server session privacy preserve analytics CCS october november dallas TX usa server client increase data vector fix entry server data vector increase client fix server data transfer thread server implement java ignore communication latency plot average iteration error omit standard deviation num client dropout    unmask client server server server client server server server cpu per thread server client implement java ignore communication latency entry average iteration data vector fix entry entry num client runtime per client stddev server runtime stddev communication per client MB MB protocol execute network singlethreaded server client geographically datacenters computation network latency spent participant entry average iteration iteration standard deviation discard data vector fix entry per entry induced dropout beyond naturally server additional expensive unmask client discussion future identify recover abuse security proof theorem guarantee user input server aggregate user however actively adversarial client prevent server sum attacker client malformed message client abort protocol fails server compute output ideally abuse corrupt client efficiently identifiable protocol gracefully recover however assign blame abuse subtle protocol future enforce input protocol verify user input within bound actively adversarial user arbitrary choice output server ill specific machine application detect obviously malformed output simply session privacy preserve analytics CCS october november dallas TX usa protocol client however adversarial client slightly malformed input detect zero knowledge proof client input unfortunately garble circuit technique proof costly entire protocol guarantee input client future reduce communication protocol client exchange pairwise mask client however sufficient client exchange mask subset client subset client disjoint cluster previous approach already however extra server facilitates communication client actively adversarial server dropout knowledge client exchange mask improvement future related emphasize focus mobile device bandwidth expensive dropout service provider consequently goal minimize communication guarantee robustness dropout computational important secondary concern constraint motivate discussion comparison exist multiple non collude server overcome constraint client device previous client distribute trust across multiple  server deployed application recently prio gibbs boneh perspective client device noninteractive computation server lightweight prio allows client input validate something cannot rely multiple server recently generic computation protocol achieves throughput protocol non collude server available client server combine online generic secure multiparty computation multiple securely compute function generic secure mpc generally category yao garble circuit homomorphic encryption secret protocol yao garble circuit secure computation directly extend user mpc protocol secret however extend user addition protocol become relatively computationally efficient robust dropout generic mpc rely ORAM construction localize computation avoid broadcast notably optimize generic technique specific task secure summation publicly available implementation however weakness generic mpc protocol  communication protocol user sends secret entire data vector subset user guarantee robustness subset user relatively robustness essentially proportional subset additionally secret entire data vector constraint communication approach  din cryptographer network din cryptographer network DC net communication network anonymity pairwise blinding input similarly secure aggregation protocol version DC net participant sends anonymous message restrict secure aggregation user input recent research examine increase efficiency  protocol presence active adversary previous DC net construction flaw user abort protocol message protocol restart scratch expensive pairwise additive mask pairwise blinding additive cipher explore previous approach client failure   modification closely related scheme explicit recovery failure protocol similarly client diffie hellman exchange pairwise mask server data vector sum pairwise mask mask recovery server remain client client remain client responds sum  pairwise mask user mask server subtracts recovery masked vector earlier correctly learns sum  user data however recovery phase brittle additional user recovery phase protocol cannot simply recovery sufficient potential leak mask survive user leak data vector moreover entire sum mask almost communication protocol client failure likely scheme threshold homomorphic encryption scheme threshold additively homomorphic cryptosystems paillier cryptosystem handle client dropout computationally expensive additional trust assumption paillier scheme expensive generate threshold decryption generate distribute trust generate online expensive protocol similarly session privacy preserve analytics CCS october november dallas TX usa scheme trust dealer scheme approach exponent latter scheme extends former robustness client dropout differential privacy rigorous analysis distribute generation unfortunately scheme trust dealer    protocol homomorphic encryption securely compute sum interaction server client assume pki already protocol advantage online simultaneously protocol execute however protocol communication sequentially client server importantly protocol client client protocol respond server decrypt sum conclusion practical protocol securely aggregate data ensure client input server aggregate overhead protocol tolerate fail device ideal mobile application service provider simplifies deployment protocol immediate application federate deploy application future