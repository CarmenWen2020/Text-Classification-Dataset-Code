approach overcome performance scalability limitation blockchain protocol sharding split overhead processing transaction multiple node parallel maximize performance significantly communication computation storage per node network however exist sharding blockchain protocol linear amount communication participant per transaction hence attain partially potential benefit sharding introduces bottleneck throughput latency protocol aside limited scalability protocol achieve weak security guarantee due fault resiliency failure probability rely assumption trust setup limit applicability mainstream payment propose rapidchain sharding public blockchain protocol resilient byzantine fault participant achieves sharding communication computation storage overhead processing transaction without assume trust setup rapidchain employ optimal intra committee consensus algorithm achieve throughput via pipelining novel gossip protocol provably secure reconfiguration mechanism ensure robustness efficient shard transaction verification technique protocol avoids gossip transaction entire network empirical evaluation rapidchain confirm sec confirmation latency roughly network node overwhelm failure CCS CONCEPTS security privacy distribute security keywords distribute consensus public blockchain protocol sharding introduction global financial highly centralize resistant vulnerable failure attack inaccessible billion financial decentralization challenge ensure consistent mutually distrust participant permissionless mode operation allows membership entail constant churn participant decentralize complicates task furthermore agile financial decentralize adequately realistic load implies easily participant handle throughput transaction relatively delay output available achieve significant resource participant otherwise contrary construct easily accessible anyone exist currently fail challenge security performance offs unfortunately longer truly decentralize traditional byzantine consensus mechanism membership participant fix identity everyone via trust protocol easily compromise sybil attack adversary repeatedly  malicious identity gain significant influence protocol outcome moreover traditional scheme assume static adversary corrupt protocol exist protocol secure adaptive adversary poorly participant inefficient cryptocurrencies bitcoin ethereum maintain distribute transaction ledger blockchain peer peer PP network node maintains update entire ledger via byzantine consensus protocol dubbed nakamoto consensus unlike traditional consensus mechanism nakamoto consensus allows participant protocol proof pow node demonstrates amount computational puzzle pow allows consensus protocol impede sybil session blockchain CCS october toronto canada CCS october toronto canada attack limit rate malicious participant lottery mechanism random leader elect initiate consensus unfortunately bitcoin pow consensus serious drawback transaction throughput latency efficiency  centralization moreover protocol cannot transaction processing capacity participant protocol another scalability issue bitcoin entire blockchain network independently verify transaction blockchain currently GB nearly growth blockchains update via throughput consensus protocol bitcoin recently protocol propose mitigate performance scalability issue bitcoin blockchain hybrid architecture combine membership bitcoin traditional byzantine fault tolerance protocol reportedly improve throughput latency bitcoin overlook assumption trust setup generate unpredictable initial randomness genesis bootstrap blockchain bitcoin protocol essentially ensure agreement initial agreement genesis assumption crucial role achieve consistency node protocol compromise easily affect security entire consensus protocol cast contradiction decentralize cryptocurrencies addition partially decentralize per node storage requirement fault resiliency incomplete specification security issue detail furthermore previous protocol participant consensus protocol broadcast message entire network submit consensus vote verify transaction update node local blockchain replica overhead broadcast participant usually reduce linear message respect participant nearly constant peer peer gossip protocol relatively latency gossip invocation per average increase overall latency consensus protocol significantly gossip latency roughly quadruple consensus moreover due transaction throughput scalable blockchain protocol sec bandwidth usage node becomes mbps detail transaction gossiped entire network contribution propose rapidchain byzantine resilient public blockchain protocol improves upon scalability security limitation previous rapidchain partition node multiple node committee parallel disjoint transaction maintain disjoint ledger partition operation data multiple node refer sharding recently context blockchain protocol enable parallelization consensus storage sharding consensus throughput proportional committee unlike nakamoto consensus denote participant protocol denote committee rapidchain creates committee logn node constant security parameter roughly summary rapidchain novelty sublinear communication rapidchain  blockchain protocol sublinear exchange network per transaction contrast previous incur communication overhead per transaction resiliency rapidchain sharding blockchain protocol tolerate corruption node exceed throughput latency previous rapid committee consensus building reduce communication overhead latency PP consensus gossiped committee roughly previous secure reconfiguration rapidchain cuckoo provably slowly adaptive byzantine adversary important previous sharding protocol rapidchain allows node protocol seamless without interruption delay protocol execution shard verification introduce novel technique partition blockchain node entire blockchain verify shard transaction rapidchain committee discover via efficient rout mechanism inspire kademlia incurs logarithmic committee latency storage contrast committee discovery exist gossip invocation decentralize bootstrapping rapidchain operates permissionless allows membership unlike previous assume existence initial randomness usually genesis generate exchange message rapidchain bootstrap message without assume initial randomness session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada protocol node resiliency complexity throughput latency storage shard fail elastico sec sec omniledger sec sec omniledger sec sec rapidchain sec sec rapidchain sec sec comparison rapidchain sharding blockchain protocol implement prototype rapidchain evaluate performance  protocol comparison assume epoch network latency link mbps bandwidth node protocol choice node respectively maximum network report unfortunately failure protocol decrease rapidly network network slightly increase throughput due committee latency report refer transaction confirmation delay node proposes network confirm honest node valid transaction refer reader detail evaluation comparison previous overview rapidchain rapidchain proceeds fix epoch epoch bootstrapping protocol described execute allows participant committee logn node constant assume node slowly adaptive byzantine adversary committee election protocol sample committee node corrupt node sample bound probability committee refer reference committee denote CR responsible periodic reconfiguration epoch overview rapidchain protocol detail epoch randomness epoch CR generates randomness refer epoch randomness epoch randomness protocol sample resilient committee refer sharding committee epoch participate node obtain identity epoch reconfigure exist committee prevent adversarial takeover node epoch node corruption epoch peer discovery inter committee rout node belonging sharding committee discover via message complexity consensus per transaction reduction amount storage participant transaction confirm network peer discovery algorithm sharding committee responsible maintain disjoint transaction ledger shard blockchain member committee transaction submit user arbitrary rapidchain node route via  rout protocol committee responsible refer committee output committee denote cout committee deterministically hash ID correspond cout inspire kademlia verify committee rapidchain communicates logarithmic committee discover related transaction shard verification member cout batch transaction MB append ledger append committee verify validity transaction bitcoin verification usually depends input transaction previously unspent spent transaction transaction disjoint ledger committee member cout communicate correspond input committee ensure input transaction exist shard intra committee consensus transaction verify member cout participate  consensus protocol append shard consensus protocol proceeds member cout local leader epoch randomness leader sends member cout gossip protocol information dispersal algorithm ida ensure member cout participate byzantine consensus protocol construct synchronous protocol protocol allows rapidchain obtain intra committee consensus optimal resiliency achieve resiliency committee protocol exchange broadcast message intra committee consensus protocol logm hash depends security parameter protocol reconfiguration consensus decision rapidchain transaction reconfiguration reconfiguration generate periodically reconfiguration phase execute epoch member CR establish information session blockchain CCS october toronto canada CCS october toronto canada epoch randomness participant committee membership reconfiguration phase allows rapidchain organize committee response  adversary commit attack corrupt node epoch adversary corrupt honest node hence committee epoch committee fix epoch elect committee incurs communication overhead network rapidchain performs reconfiguration protocol built cuckoo epoch strategy constant node committee provably guarantee security constant node respect corrupt epoch reconfiguration protocol epoch CR generates randomness epoch sends committee randomness allows protocol node committee unpredictable manner hinder malicious committee takeover allows creation computational puzzle node participate epoch epoch node participate epoch node already participate previous epoch establish identity public pow puzzle randomize node submit valid pow CR cutoff roughly reveal CR reconfiguration phase cutoff member CR verify accepted correspond node identity valid participant epoch CR member intra committee consensus protocol identity within CR ledger reconfiguration committee membership committee inter committee rout protocol protocol remark node reuse identity public across epoch solves puzzle per epoch pow identity epoch randomness churn  handle exactly handle committee generate CR member epoch determines CR member epoch finally difficulty pow puzzle establish identity fix node throughout protocol chosen node puzzle assume without loss generality node exactly computational detail organization review related background previous rapidchain network threat model define aim protocol formally analyze security performance rapidchain finally implementation evaluation conclude background related review category blockchain consensus protocol committee sharding protocol refer reader survey previous blockchain consensus protocol review recent progress synchronous byzantine consensus information dispersal algorithm rapidchain committee consensus notion committee context consensus protocol introduce  reduce complexity byzantine agreement later improve committee communication computation overhead byzantine agreement date byzantine agreement fully network sublinear per node overhead participant unfortunately theoretical cannot directly public blockchain  peer peer network propose committee consensus protocol  public blockchain model propose PBFT inside committee approve transaction unfortunately  clearly mention committee maintain ensure honest majority committee throughout protocol hybrid consensus proposes periodically committee byzantine consensus protocol assume slowly adaptive adversary corrupt honest node byzcoin proposes multi signature protocol inside committee improve transaction throughput unfortunately byzcoin specification incomplete protocol vulnerable byzantine fault algorand proposes committee consensus protocol BA verifiable random function vrf randomly committee member account balance stake private non interactive therefore adversary node target participates BA protocol committee member algorand replaces committee member member BA avoid target attack committee member fully adaptive adversary unfortunately randomness vrf invocation vrf bias adversary protocol proposes mechanism ensure synchrony hence unbiased unfortunately problematic situation stake bias coin  propose vrf protocol non interactive threshold signature scheme uniqueness assume trust genesis solida elect node onto committee  puzzle reveal via committee member signature avoid pre computation withholding attack slot ledger reconfigurable byzantine consensus protocol consensus decision batch transaction reconfiguration latter membership session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada committee allows replace member rank candidate pow protocol allows candidate reconfiguration consensus avoid corrupt internal leader intentionally delay reconfiguration corrupt node pow sharding consensus unlike bitcoin sharding blockchain protocol increase transaction processing participant network multiple committee node incoming transaction parallel transaction consensus entire protocol committee multiple parallel sharding blockchain protocol focus handle sharding bitcoin transaction model    propose  sharding technique centrally cryptocurrencies scalable  describes approach combine centralize monetary distribute network introduce transparency pseudonymity traditional banking blockchain protocol decentralize relies trust source randomness sharding validator node  audit transaction moreover  relies phase commit protocol execute within shard unfortunately byzantine fault tolerant spending attack collude adversary elastico propose elastico  consensus protocol public blockchains consensus epoch participant solves pow puzzle epoch randomness obtain blockchain pow significant committee coordinate transaction elastico improve throughput latency bitcoin magnitude drawback elastico establish identity  committee epoch aside relatively communication overhead incurs significant latency linearly network protocol  committee elastico committee limit overhead PBFT committee unfortunately increase failure probability protocol significantly analysis probability epoch render protocol completely insecure randomness epoch elastico bias adversary hence compromise committee selection malicious node precompute pow puzzle elastico trust setup generate initial randomness reveal elastico allows verify subset transaction broadcast entire ledger finally elastico tolerate faulty failure probability elastico resiliency bound practical committee omniledger recent  propose omniledger sharding distribute ledger protocol attempt fix issue elastico assume slowly adaptive adversary corrupt node epoch protocol global reconfiguration protocol epoch participant protocol protocol generates identity assigns participant committee identity blockchain protocol assumes synchronous channel randomness generate epoch bias resistant random generation protocol relies verifiable random function vrf unpredictable leader election lottery algorithm algorand consensus protocol assumes partially synchronous channel achieve consensus variant byzcoin epoch randomness committee byzcoin security performance issue notably communication byzantine unfortunately due incomplete specification scheme unclear scheme omniledger address issue furthermore challenge omniledger leaf unsolved elastico omniledger tolerate corruption protocol achieve latency omniledger consensus protocol per node communication committee gossip multiple message node transaction omniledger trust setup generate initial unpredictable configuration vrf epoch trivial algorithm generate communication omniledger user participate actively shard transaction assumption typically user finally omniledger vulnerable denial service dos attack malicious user lock arbitrary transaction leverage atomic shard protocol omniledger achieve throughput sec optimistic trust verify approach throughput transaction confirmation latency approach optimistic validators transaction quickly provisional commitment later verify core validators approach useful scenario micropayments quickly stake transaction risk approach regular payment due lack financial liability mechanism decentralize nevertheless blockchain protocol bitcoin transaction confirmation latency limit transaction risk session blockchain CCS october toronto canada CCS october toronto canada synchronous consensus widely byzantine consensus protocol   PBFT tolerate corrupt node authenticate digital signature asynchronous communication channel asynchronous byzantine consensus digital signature synchronous consensus digital signature recently propose constant algorithm byzantine consensus synchronous authenticate communication network node corrupt previous due katz  communication expectation protocol expectation assume random leader election protocol exists protocol iteration unique leader iteration leader honest consensus guaranteed iteration otherwise byzantine leader prevent progress cannot violate safety meaning honest node terminate iteration honest node terminate iteration output node leader leader proposes iteration otherwise leader proposes information dispersal algorithm rabin introduces notion information dispersal algorithm ida split message file multiple chunk subset sufficient reconstruct message achieve erasure code error code ecc chunk modify  extends tolerate corrupt alter chunk compute fingerprint chunk vector fingerprint ecc efficient ida mechanism compute merkle hash encode chunk verify chunk corrupt rapidchain ida perform efficient gossip within committee ecc encode message disperse network via ida honest node merkle intra committee consensus protocol ensure consistency correspond authentication merkle sender recipient verify integrity chunk decode mechanism recover message detail model definition network model peer peer network node establish identity public private  identity generation mechanism node computationally puzzle locally generate identity public verify honest node without assumption trust randomness beacon without loss generality hybrid blockchain protocol assume participant consensus protocol equivalent computational resource assume message network authenticate sender private message propagate synchronous gossip protocol guarantee message honest node deliver honest node within fix message necessarily preserve standard synchronous model adopt public blockchain protocol synchronous communication intra committee consensus protocol assume partially synchronous channel node exponentially increase minimize latency achieve responsiveness threat model assume node disconnect network epoch epoch due internal failure network jitter probabilistic polynomial byzantine adversary corrupts node corrupt node collude deviate protocol arbitrary manner invalid inconsistent message remain committee protocol assume adversary slowly adaptive meaning corrupt node protocol epoch cannot within epoch epoch adversary corrupt constant uncorrupted node maintain identity addition adversary attack  constant corrupt node identity compromise committee however computational resource belong uncorrupted participant online respond within network bound finally rely public infrastructure secure broadcast channel assume existence cryptographic hash function model random oracle security analysis definition assume transaction protocol user external protocol bitcoin transaction consists input output reference transaction signature generate issuer certify validity transaction disjoint transaction node access external function transaction output transaction invalid respectively sum output transaction sum input protocol output disjoint subset shard agreement logn honest node probability security parameter validity scalability grows linearly session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada efficiency per node communication computation complexity per node storage complexity transaction protocol rapidchain detail define notation notation terminology denote node denote corrupt node occurs probability meaning occurs probability security parameter refer node committee member belongs honest node node member refer member committee protocol honest member committee participate execution protocol committee sends message honest member sends member member message due malicious behavior chooses message frequency component rapidchain consists component bootstrap consensus reconfiguration protocol bootstrap proceeds epoch epoch consists multiple iteration consensus reconfiguration phase explain component detail bootstrapping initial participant rapidchain committee election protocol node node refer responsible generate distribute sequence random establish reference committee logn reference committee creates committee logn bootstrap phase rapidchain consensus member committee epoch reconfiguration external user submit transaction user sends transaction subset node via PP discovery protocol batch transaction correspond committee responsible processing committee intra committee consensus protocol approve transaction ledger reconfiguration reconfiguration allows node establish identity exist committee ensure committee maintain resiliency achieve goal cuckoo without regenerate committee consensus component assume committee exists shard transaction verify committee communicate via inter committee rout protocol reconfiguration component finally bootstrap committee consensus committee intra committee consensus protocol building gossip protocol propagate message transaction within committee synchronous consensus protocol header gossip message inspire ida protocol refer gossip protocol message  denote message gossiped denote corrupt denote chunk message sender chunk applies erasure code scheme reed solomon erasure code additional parity chunk obtain sender honest message reconstruct chunk source node computes merkle leaf source gossip merkle proof unique chunk assume divisible gossip chunk node verifies message receives merkle information node receives valid chunk reconstructs message decode algorithm  welch ida gossip protocol reliable broadcast protocol cannot prevent  sender nevertheless  communication faster reliable broadcast protocol propagate transaction MB rapidchain achieve consistency later consensus protocol merkle gossip honest node  protocol message committee honest node committee correctly probability remark synchronous consensus rapidchain variant synchronous consensus protocol achieve optimal resiliency committee hence committee resiliency previous unlike asynchronous protocol PBFT protocol synchronous protocol responsive meaning commits message fix rate usually denote independent actual delay network committee protocol PBFT intra committee consensus protocol hence responsive within epoch however almost significantly throughput latency hinder responsiveness anyway asynchronous consensus assume resiliency roughly achieve committee failure probability sample committee resiliency unfortunately increase resiliency session blockchain CCS october toronto canada CCS october toronto canada dramatically increase committee intra committee consensus significantly inefficient rapidchain synchronous consensus protocol digest propose committee member protocol partially synchronous channel optimistic timeouts achieve responsiveness addition synchronous consensus protocol node node message roughly byte latency communication epoch latency alleviate responsiveness issue synchronous consensus rapidchain pre schedule consensus committee member adjusts consensus average delay network completely responsiveness protocol responsive robust network technology advance another challenge synchronous consensus protocol happens shard transaction scenario malicious leader deceive input committee transaction accepted honest member output committee unlike asynchronous consensus protocol PBFT proceed  manner synchronous consensus protocol proceed fix hence honest node terminate others accepted honest node future iteration transaction commit protocol detail iteration committee leader randomly epoch randomness leader responsible consensus protocol leader transaction user committee leader gossip ida gossip creates header contains iteration merkle ida gossip leader initiate consensus protocol consensus protocol remark message leader node consensus public sender message integrity verify consensus protocol consists synchronous leader gossip message tag header message leader propose node network echo header leader gossip tag echo ensures honest node version header honest node leader  gossip version message honest node honest node receives version header iteration leader corrupt gossip tag pending contains null merkle iteration finally honest node receives echo header iteration accepts gossip tag accept along echo echo proof node accepts clearly impossible node proof leader gossiped honest node honest node accepts header honest node accept header reject header leader scenario leader corrupt honest node reject header tag pending definition pending pending iteration propose leader iteration honest node accepted header iteration committee member corrupt leader corrupt probability ensure header accepted leader propose expectation issue leader iteration propose pending however reduces throughput roughly improve performance via pipelining rapidchain allows leader propose propose header pending allows rapidchain pipeline consensus iteration maximize throughput consensus multiple iteration node vote header propose iteration pending accepted vote permanent temporary relative iteration node gossip accept header iteration permanent vote header iteration node sends accepts header honest node ignore vote node sends echo iteration temporary vote iteration accept header node vote permanent temporary iteration node accepts header gossip header node already vote honest node denial service attack corrupt leader attempt echo non pending leader proposes header pending honest node already accepted proposal conflict accepted proof iteration pending header leader proposes pending previous iteration proof vote permanent temporary iteration vote consensus protocol achieves safety liveness committee honest majority shard transaction mechanism rapidchain reduces communication computation storage requirement node blockchain partition committee sharding blockchain reduce storage overhead blockchain verification session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada utxo TX TX TX TX utxo TX TX TX TX transaction ID TX input signature TX TX bbc output TX TX utxo transaction transaction challenge input output transaction reside multiple committee bitcoin transaction rapidchain unique identity input depict identity output transaction ID input transaction unspent transaction output UTXOs unused coin previous transaction output transaction coin generate recipient exchange transaction node verify transaction valid input unspent sum output sum input node valid transaction accept rapidchain partition transaction transaction ID committee responsible transaction output utxo database committee transaction committee ID prefix IDs denote transaction user verification multiple committee involve ensure input UTXOs valid refer committee UTXOs output committee denote cout refer committee input UTXOs input committee denote verify input UTXOs omniledger proposes user obtain proof acceptance input committee submit proof output committee validation input committee commits correspond input utxo spent independently input committee commit partially input UTXOs spent others avoid situation ensure transaction atomicity omniledger phase approach input committee lock correspond input utxo issue proof acceptance utxo valid user response input committee issue unlock commit allows output committee verify independently transaction gossiped entire network proof generate transaction incur communication overhead another drawback scheme depends user retrieve proof extra burden typically lightweight user node rapidchain user attach proof instead user communicate committee route output committee via inter committee rout protocol without loss generality assume input output belong committee cout leader cout creates transaction txi input output amount belongs cout input output leader sends txi via inter committee rout protocol txi ledger txi successful sends cout finally cout ledger batching verification request output committee combine transaction UTXOs belonging input committee batch sends utxo request input committee input committee validity utxo sends batch output committee multiple utxo request batch request generate multiple request input committee inter committee rout rapidchain rout scheme enables user committee leader quickly committee transaction strawman scheme approach node network information committee member network allows node quickly IP address member committee constant node connection member target committee gossip however node network information committee member compromise privacy simplify denial service attack moreover node node cannot node network dedicate committee reference committee responsible transaction rout user obtain network information reference committee approach efficient rout communication however reference committee becomes centralize hub network handle amount communication likely bottleneck rout overlay network construct rout protocol rapidchain rout algorithm kademlia kademlia node assign identifier metric distance identifier ham distance identifier node information node within logarithmic distance node message another node identifies node locally closest destination node kademlia ID kid asks recursively discovery mechanism enables node discovery message rout logn refer reader detail kademlia rout protocol employ kademlia rout mechanism rapidchain committee committee communication specifically rapidchain committee maintains rout logn logn committee distance logn away specifically node information member committee node session blockchain CCS october toronto canada CCS october toronto canada committee rapidchain maintains rout logn committee committee committee via responsible transaction prefix logn closest committee committee  committee message implement node sender committee message node receiver committee node receives message invokes ida gossip protocol message member committee user submit transaction sends transaction arbitrary rapidchain node correspond committee via kademlia rout mechanism rout protocol initiate committee request information committee committee reconfiguration protocol reconfiguration protocol core technique protocol offline pow rapidchain relies pow sybil attack node protocol pow puzzle epoch puzzle generate epoch randomness adversary cannot precompute ahead compromise committee rapidchain node pow offline without protocol expensive pow calculation perform critical latency adversary bound computation epoch adversarial node strictly rapidchain reference committee CR responsible pow node epoch CR agrees reference consist active node epoch assign committee CR informs committee reference committee epoch randomness generation epoch member reference committee distribute random generation DRG protocol unbiased random CR randomness reference committee randomize epoch rapidchain technique verifiable secret VSS feldman generate unbiased randomness within reference committee denote finite prime denote reference committee denote randomness epoch generate protocol node chooses uniformly random VSS node  node receives previous node computes calculate finally node exchange protocol epoch reconfiguration random generation epoch reference committee CR DRG protocol generate random epoch member CR reveal epoch epoch invariant committee random CR node locally public PK contact random committee request pow puzzle sends epoch along timestamp random node CR node participate epoch timestamp PK sends confirms epoch cuckoo exchange invariant member CR participate DRG protocol epoch invariant epoch member CR confirm transaction active node member active node active committee inactive committee CR  assign committee node  CR evicts constant node uniformly random evict node CR chooses committee uniformly random assigns node committee CR member committee epoch CR chain CR gossip committee inter committee rout protocol reconstruct lagrange interpolation technique random generation protocol consists phase reconstruction phase expensive execute advance epoch session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada node contact node committee request randomness epoch pow puzzle node puzzle transaction public reference committee reference committee epoch accepted reference committee node active node epoch committee reconfiguration partition node committee scalability introduces challenge churn corrupt node strategically rejoin network eventually committee security guarantee protocol moreover adversary actively corrupt constant uncorrupted node epoch node rejoin approach prevent attack elect committee periodically faster adversary ability generate churn however drawback generate committee expensive due overhead bootstrapping protocol maintain ledger committee challenge committee member replace epoch handle rapidchain cuckoo organize subset committee member reconfiguration epoch modify protocol ensure committee balance respect node network detail node committee node random hash function partition committee define node assign logn constant   propose cuckoo technique ensure committee remain robust attack node network random node constant interval surround cuckoo random   steady logn logn node balance faulty probability polynomial node committee assign node committee define amount node define committee sum node initialization storage node committee committee refer node initialization moreover transaction committee data committee member ensure future transaction verify rapidchain shard global ledger maintain committee initialization storage overhead problematic due throughput employ ledger prune checkpointing mechanism described significantly reduce overhead percentage storage usually transaction already spent bitcoin node verify entire transaction verify chain contrast rapidchain bft consensus protocol blockchain maintain committee grows member vote chain principle therefore rapidchain node downloads unspent transaction UTXOs sufficient committee member verify future transaction ensure integrity utxo node member committee rapidchain hash utxo committee blockchain evaluation experimental setup implement prototype rapidchain evaluate performance previous simulate network node  machine rapidchain instance machine core intel xeon phi 3GHz processor gbps communication link simulate  node latency message bandwidth mbps node bitcoin core assume node global PP network accept outgo connection incoming connection global PP overlay bootstrapping phase consensus epoch node communicate PP overlay within committee node accepts outgo connection incoming connection unless otherwise mention report refer behavior node corrupt implementation intra consensus protocol leader gossip message iteration probability inter committee rout protocol node participate gossip protocol remain obtain synchronous intra committee consensus definition conservatively maximum gossip byte digest node PP network node committee recall synchronous consensus protocol hash message byte signature assume transaction consist transaction transaction consists byte bitcoin node verify chain sequence header via simplify payment verification described nakamoto http golang org session blockchain CCS october toronto canada CCS october toronto canada latency committee maximum average median latency sec transaction per KB throughput latency latency gossip byte message committee impact throughput latency MB implement ida gossip protocol gossip MB within committee split chunk  library encode message erasure code reed solomon code decode algorithm  welch choice reasonable throughput latency rapidchain various KB KB target network node generally throughput confirmation latency obtain latency mainstream payment obtain throughput KB throughput sec latency roughly throughput scalability evaluate impact sharding transaction per rapidchain increase network node node variable committee failure probability epoch remains protocol fails target network committee epoch failure probability failure network increase capacity rapidchain important processing capacity resource node evaluate impact pipelining technique  consensus described throughput pipelining sec throughput without pipelining sec improvement transaction latency latency processing transaction rapidchain metric confirmation latency user perceive latency former delay transaction consensus participant ledger inclusion confirm honest participant contrast  latency delay user sends transaction network confirm honest node latency various network client perceive latency roughly confirmation latency latency remain network node comparison elastico omniledger report confirmation latency roughly network node respectively reconfiguration latency latency overhead epoch reconfiguration happens latency scenario node rapidchain various network variable committee reconfiguration latency delay task sequentially reconfiguration generate epoch randomness reference committee consensus configuration propose reference committee assign node exist committee redistribute exist member affected committee target network node roughly task task task network roughly percentage reconfiguration latency increase roughly node node node node  redistribute committee consequently churn node committee parallel latency increase significantly moreover network impact reconfiguration latency slightly churn mostly affect committee involve reconfiguration contrast elastico cannot handle churn incremental manner initialization committee network node epoch transition omniledger rapidchain  epoch transition distribute random generation protocol session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada transaction per node committee confirmation latency sec user perceive latency sec node user perceive latency confirmation latency throughput scalability rapidchain transaction latency succeed probability finally unclear latency affected node hence redistribute node committee omniledger impact shard batching important feature rapidchain allows batching shard verification request limit amount inter committee communication verify transaction crucial shard target network node committee roughly transaction shard meaning transaction input UTXOs shard transaction transaction assign committee randomly generate IDs transaction distribute uniformly committee batch shard transaction committee processing MB MB KB impact batching shard verification throughput rapidchain various network storage overhead amount data node transaction rapidchain previous estimate storage node elastico omniledger report throughput shard network protocol network storage elastico node MB estimate omniledger node MB estimate rapidchain node MB rapidchain node MB storage per node processing transaction without ledger prune overhead bootstrapping overhead bootstrapping protocol setup committee node latency respectively participant consumes bandwidth roughly GB GB respectively although latency bandwidth overhead substantial bootstrapping protocol execute therefore overhead amortize epoch elastico omniledger assume trust setup generate initial randomness therefore report measurement setup decentralize bootstrapping inspire construct deterministic random graph sampler graph allows sample distribution corrupt node majority within corrupt node initial bootstrapping phase rapidchain sampler graph locally participant bootstrapping protocol cod initial network node assume initial node already establish identity sampler graph random bipartite graph node node independently uniformly random without replacement vertex network node vertex node member graph coalition faulty node subset denote incident node intuitively capture faulty probability practical failure probability bootstrap phase probability minimize node node failure probability probability bound probability epoch rapidchain fails session blockchain CCS october toronto canada CCS october toronto canada latency sec node node node node increase throughput node reconfiguration latency node committee impact batching shard verification node sampler graph participate randomize election procedure procedure node unbiased random decentralize fashion subgroup election election member DRG protocol generate random elect associate node identification ID computes ID announces elect hash function model random oracle node ID elect node gossip signature proof election elect node subgroup peer discovery subgroup election node identity elect node elect node gossip information proof consists signature ID member node node correctly announce elect dishonest honest accept message elect member committee formation execute election protocol honest majority selects member shard reference shard reference committee partition node random sharding committee guaranteed honest node shard election network election network construct chain sampler graph sampler graph definition protocol specification node graph node assign subgroup election protocol described elect random subset member elect member node sampler graph leader construct election network leader honest majority probability subgroup node election network election network construct election network  easily constant calculation bound error probability election network denote dri discus parameter chosen instantiate election graph novel analysis allows obtain bound security performance analysis epoch security hypergeometric distribution calculate failure probability epoch cumulative hypergeometric distribution function allows calculate probability obtain corrupt node randomly committee node without replacement population node corrupt node denote random variable correspond corrupt node sample committee failure probability committee session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada sample committee without replacement population node sample replacement committee overlap failure probability committee calculate cumulative binomial distribution function calculates probability node corrupt committee node sample infinite pool node probability node corrupt sample without replacement rapidchain binomial distribution approximate bound failure probability committee however committee relative population hypergeometric distribution yield approximation roughly failure probability unlike binomial distribution hypergeometric distribution depends directly population membership network failure probability affected consequently maintain desire failure probability committee rapidchain consensus pre interval committee committee accept node committee future epoch probability failure calculate hypergeometric distribution sample committee various population node scenario resiliency committee resiliency rapidchain resiliency committee resiliency previous failure probability decrease faster committee rapidchain scenario bound failure probability epoch calculate union bound committee fail probability  calculate previously epoch committee election procedure bootstrapping protocol fail probability  random generation protocol execute reference committee epoch guaranteed generate unbiased coin probability consensus protocol execute committee guaranteed terminate probability  therefore failure probability epoch    ideally probability adversary  epoch honest miner however  sharding protocol rapidchain increase adversary effective upperbound adversarial increase inside failure probability committee rapidchain previous plot probability failure sample committee population node rapidchain previous hypergeometric distribution shard define calculate effective adversary definition adversarial effective ratio adversary chain theorem effective adversary adversary proof lemma choice target failure probability committee gossip guarantee rapidchain creates random graph gossip node committee guarantee message gossiped honest node eventually honest node gossip delay bound splitting message chunk described violate gossip guarantee probability lemma probability message deliver honest node gossiped ida gossip without sparsification proof denote committee member chosen uniformly random hypergeometric distribution threshold probability corrupt sender split message chunk unique chunk gossip chunk behalf gossip protocol honest node chunk finally error correction cod scheme receiver corrupt chunk reconstruct message session blockchain CCS october toronto canada CCS october toronto canada sparsification correctness security gossip protocol increase probability failure slightly lemma assume   merkle node probability message correctly gossip message specification parameter subset node  sends sparsified node desire failure probability function importance message proof reconstruction stage fails node hash node distribute corrupt node node sparsified hash node along leaf hash verification  node sender calculate subset node sends sparsified node guarantee probability node honest node leaf node sub node corrupt node sub node node distribute node random probability corrupt node node therefore union bound node security intra committee consensus recall honest node collectively identity epoch safety assume fix epoch epoch randomness unbiased theorem protocol achieves safety committee corrupt node proof safety specific header propose leader iteration suppose node honest node accept header echo accept iteration another honest replica accepts valid accept message proof certificate iteration however iteration iteration leader construct proposal header cannot obtain vote honest node proof  due correctness  impossible finalize merkle associate define liveness finality protocol achieves liveness accepts propose within bound theorem protocol achieves liveness committee corrupt node proof message unforgeable digital signature honest node accept pending accepted leader height honest leader chosen randomly randomness unbiased committee honest leader expectation honest leader valid proposal pending node propose valid proof honest replica already accepted accept theorem safety honest node vote propose header pending subsequently  vote  honest node therefore honest node finalize iteration security shard verification without loss generality assume input output user valid input input committee successfully verify transaction UTXOs output committee successful input invalid input committee accepted valid invalid successfully transfer accepted cout however valid utxo output committee user later output committee utxo user performance analysis summarize theoretical analysis performance rapidchain complexity consensus without loss generality calculate complexity consensus per transaction denote transaction belongs committee user sends constant rapidchain node route imposes communication computation overhead logn leader intra committee consensus communication amortize moreover probability shard transaction leader request verification proof constant committee assume constant input output rout request response logn consensus request response amortize due batching happens input output committee per transaction communication complexity consensus iteration logn complexity bootstrap protocol assume communication complexity bootstrap protocol DRG protocol communication node complexity DRG constant member gossip incur overhead gossip node session blockchain CCS october toronto canada rapidchain blockchain via sharding CCS october toronto canada protocol ID generation bootstrap consensus storage per node elastico omniledger rapidchain complexity previous sharding blockchain protocol message complexity generate randomness gossip member elect reference committee storage complexity denote blockchain ledger shard node amount data reference epoch contains node correspond committee asymptotically negligible ledger node probability shard transaction calculate probability transaction shard meaning input UTXOs shard transaction denote transaction verify denote committee denote input output UTXOs denote committee input UTXOs probability shard otherwise target network node committee almost transaction shard comparison network node committee probability conclusion rapidchain resilient sharding blockchain protocol highly scalable network rapidchain distribute ledger partition blockchain across committee along improvement significantly transaction throughput latency rapidchain handle seamlessly churn introduce minimum across committee membership without affect transaction latency feature improve protocol gossip message inter committee rout finally empirical evaluation demonstrates rapidchain smoothly network node performance previous