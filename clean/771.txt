celebrate nakamoto consensus protocol  consensus application cryptocurrencies recent analyze important blockchains significantly consistency guarantee honest output sequence throughout execution protocol establish consistency prior analysis pas   careful counting combinatorial apply variation nakamoto    another analyze blockchain simplify assumption network synchronous contribution development markov chain analyze consistency blockchain protocol formal concentration bound easy concretely compute bound consistency blockchains analysis tighter guarantee consistency nakamoto protocol parameter regime analyze delay attack extend protocol analyze participant transaction confirm analyze consistency cliquechain variation chainweb rigorous consistency analysis ghost analyze folklore balance attack framework experimentally analyze consensus bound various network delay parameter adversarial compute percentage technique enable author future blockchain proposal rigorous analysis scheme introduction nakamoto propose celebrate blockchain protocol proof implement public immutable ledger suitable application cryptocurrencies standard consensus byzantine agreement mechanism achieve immutable sequence amaze aspect nakamoto protocol function fully permissionless compute network protocol contrast prior byzantine agreement bound fix setting participant adversarial remarkable honest nakamoto agreement sequence strongly validate bitcoin network almost operation participation grown magnitude hash trillion hash understand phenomenon nakamoto intuitive analysis protocol achieve consensus specifically honest participant chain probability attacker computational alternative chain exponentially intuitive analysis unfortunately attack fully establish consensus protocol analysis adversary attempt introduce disagreement honest miner split computational fork    formal model nakamoto consensus protocol achieve prefix specifically denotes honest denotes adversarial hardness proof blockchains maintain honest player posse prefix however analysis static participant synchronous communication network presence adversary subset player player honest adversarial throughout protocol network model ensure delivery message assume synchronous network possibly unrealistic assumption indeed nakamoto protocol explicitly network message delay public internet furthermore notion prefix preclude chain alternate version odd session blockchain CCS october toronto canada address issue pas   formal model nakamoto protocol introduce idealize model protocol execution capture adaptive corruption  partially synchronous network adversary adaptively individually delay message delay limit introduce notion consistency proceed nakamoto achieve notion hardness proof appropriate relation participant analysis precise concrete relationship consistency delay attack violate consistency subsequent    aspect hardness adjust player protocol epoch nakamoto consensus protocol epoch sufficiently avoid attack technique update update version latter extends analysis partially synchronous model precise concrete parameter contribution markov chain model blockchain protocol simplify analysis blockchain protocol attack precise parameter relationship introduce replicate analysis nakamoto protocol markov model validate recover essentially bound inspect graphical markov model however discover counting insight markov model exactly convergence opportunity accurate bound consistency thm illustrate replicates graph relationship proof hardness adversary analysis attack markov model resilience parameter previous analysis bound illustrate technique introduce cliquechain specific chainweb protocol technique consistency bound nakamoto protocol chainweb proposes blockchain protocol creates braid various parallel chain chain reference accord graph replace chain replace parallel chain reference protocol handle transaction per parallel chain analysis considers variation attack analysis consistency bitcoin nakamoto protocol network delay handle approximately  sec cliquechain protocol chain bound  network delay adversary delay attack consistency markov model consistency thm replication minimum percentage compute adversary consistency parameter illustrate bound thm throughput nakamoto protocol consistency guarantee extend technique establish protocol ghost consistency bound ghost handle transaction rate nakamoto protocol resilient attack protocol analyze variant attack technique probability distribution attack markov model capture attack nakamoto notion blockchain consistency literature asymptotic notion probability fork exponentially parameter attack model pragmatic blockchains confirm transaction folklore ignore precise model attack goal adversary undo recently confirm transaction thatt surprisingly default chain ethereum aggressive network parameter delay attack successful ghost another attack balance attack markov chain capture simplify version attack ghost model capture bound transaction confirmation ghost protocol employ markov analysis blockchains indeed   develop markov model analyze selfish mining attack nakamoto protocol however markov model analyze consistency adversary framework analyze specific attack various blockchain protocol previous consistency advocate markov complicate analyze instance author markov chain arises complicate analyze session blockchain CCS october toronto canada standard concentration bound markov chain consistency blockchain protocol impact specific attack capture markov chain analyze judicious combination derivation steady distribution concentration bound generalize markov chain generate function derive probability significant simplification markov chain appropriate unable derive bound parameter involve numerically calculate subsequent propose blockchain protocol employ technique frame analyze protocol related chainweb ghost blockchain protocol dag chain instead linear chain inclusive protocol    dag reward miner security inherit security ghost chain selection policy spectre another protocol author inclusive protocol extends dag miner recent newly security relax restriction linearity transaction phantom spectre organizes dag chain honest player cluster aim ensure inter connectivity exceed threshold compose honest however none protocol formal argument consistency forth instead mostly specific attack analyze  protocol ghost synchronous honest message deliver adversary reorder attack growth rate chain delay transaction confirmation model ghost nakamoto protocol attack delay ghost protocol analysis adversary delay honest message network delay focus consistency attack instead chain growth attack delay confirmation sleepy proposes blockchain model CRS pki participant sometimes become inactive replace proof another rate limit mechanism technique directly apply apply counting lemma algorand scheme construct blockchain improve byzantine agreement protocol honest user rely technique consistency choice network delay measurement delay active blockchain isp partition bitcoin network delay message justify choice adversary rearrange delay message player model rely formalization blockchain protocol introduce    pas   blockchain algorithm ext stateful algorithm maintains local variable chain contains abstract contains message algorithm ext sequence message ext denotes sequence message obtain apply ext overall aim player message input attempt message chain others blockchain protocol execute partially asynchronous network model involves component denote security parameter environment environment model external factor related execution activates player honest corrupt input protocol honest player honest player blockchain protocol specify honest player blockchain contribute building chain adversary corrupt player player adversary adversary advantage adversary delay reorder message player delay adversary action corrupt node instance corrupt node model adversary realistic actual deployment yield conservative bound performance random oracle access random function access oracle simply output ver output iff otherwise player query ver honest player query adversary sequential query protocol proof parametrized mining hardness parameter informally proof message probability input satisfies relation execution blockchain protocol instantiate player identical compute protocol proceeds player receives message transaction blockchain player opportunity query oracle technical environment adversary satisfy restriction discus description  session blockchain CCS october toronto canada chain protocol message publish adversary player random oracle query responsible deliver message cannot modify content message broadcast honest player delay reorder delivery eventually delivers message within bound environment communicate adversary access local variable  player player chain corrupt honest adversary local message  longer instead player execute protocol empty summarize parameter blockchain network delay bound mining hardness express parameter roughly network delay adversarial honest useful blockchain protocol parameterized chain growth execution protocol chain honest player grows probability chain quality consecutive chain honest player contribute honest player finally consistency overwhelm probability chain honest player prefix chain honest player establish consistency honest guaranteed sufficiently confirm lose chain probability mention application instance bitcoin ensures player cannot although technique apply growth quality focus analyze consistency formally model execution protocol random variable exec denote joint player input random coin message random oracle execution joint exec  denote prefix denote chain local player prefix  iff  potentially honest  honest  obtain prefix consist identical definition blockchain protocol  exists constant negligible function exec  consequence consistency chain honest player negligible probability markov framework  blockchain  analysis framework blockchains combine approach markov chain capture protocol dynamic presence adversary markov chain initial blockchain honest player adversary sufficiently associate random variable denote occurrence actual definition markov chain depends protocol analyze model adversary attack performance markov chain analysis satisfy homogeneous probability transition another dependent transition occurs irreducible ergodic aperiodic positive recurrence refer reader standard text probability theory randomize algorithm chapter information markov chain stationary distribution homogeneous irreducible ergodic markov chain unique stationary distribution limit tends probability chain transition independent stationary probability define chain define markov chain model aspect blockchain protocol derive stationary distribution markov chain difference equation yield stationary probability sequence tends grows calculation markov chain concentration bound stationary distribution markov chain capture occurrence transition sequence transition instance sequence protocol however occurrence certainly deviate expectation  markov chain satisfy tight concentration bound probability occurrence deviate exponentially deviation concentration bound enable establish sufficiently sequence session blockchain CCS october toronto canada convergence opportunity probability expectation stationary distribution formally invoke theorem  bound generalize markov chain derive concentration bound random variable theorem ergodic markov chain stationary distribution denote random initial distribution function define exists constant independent norm theorem establish bound probability bound fails probability decrease exponentially execute protocol apply theorem transform markov chain function capture instance traversal auxiliary vertex auxiliary vertex application theorem transform markov chain constant independent possibly dependent model parameter probability concentration bound enable focus attention analyze stationary distribution markov chain apply approach analyze blockchain protocol nakamoto cliquechain ghost derive analytical consistency proof protocol via bound convergence opportunity analysis resilience delay balance attack bound performance fork nakamoto analysis analyze nakamoto protocol markov framework review analysis nakamoto bound chain growth expiry important notion convergence opportunity introduce establish consistency reconsider analysis convergence opportunity markov framework analysis yield underestimate bound achieve consistency nakamoto protocol improve analysis convergence opportunity markov chain finally detailed analysis nakamoto protocol consensus attack derive bound probability attack fork specific chain growth expiry consistency bound chain growth recall maximum message delayed denote honest player lemma nakamoto chain growth growth chain honest player nakamoto protocol probability exponentially proof denote chain honest player chain honest player chain honest player therefore chain growth standard chernoff hoeffding bound chain growth probability nakamoto achieves chain growth probability consistency proof pas   relies withholding lemma lemma adversary withholds chain honest player lemma allows statement adversary without constant adversary previously announce attack restate lemma within framework lemma useful redefine consistency bound nakamoto protocol evaluate protocol later lemma alter version withholding lemma refer expiry adversary honest player hears expires exists negligible function probability mainchain honest player anytime lemma nakamoto expiry exists adversarial expires proof adversarial growth adversarial chain growth honest chain growth adversarial chain  standard chernoff hoeffding bound probability adversarial chain grows inverse exponential lemma parameter probability adversary chain longer honest player chain inverse exponential argument session blockchain CCS october toronto canada consistency analysis nakamoto pas   convergence opportunity honest player chain define formally subsection adversary consistency combat convergence opportunity analyze adversary argue constant adversary adversary attack version consistency theorem blockchain protocol protocol satisfies consistency theorem blockchain consistency blockchain protocol satisfies consistency satisfy integer probability negligible function convergence  adversarial convergence opportunity adversary convergence opportunity theorem derive nakamoto protocol achieve consistency  counting convergence opportunity markov chain reconsider analysis convergence opportunity markov approach convergence opportunity honest player therefore chain convergence opportunity sequence characterize outcome mining honest player pas honest player model honest player honest therefore maximum chain necessarily chain honest player extend chain previous chain another pas honest player honest player therefore chain protocol achieves consistency analysis argues prevent consensus adversary convergence opportunity adversary convergence opportunity disrupt announce analysis attempt bound convergence opportunity honest player adversary obtain analysis sum honest interval honest honest denote markov model counting convergence opportunity honest denote longer consistency proof consistency lemma lemma derives bound convergence opportunity specifically probability convergence opportunity moreover adversary arbitrary constant markov chain bound accurate underestimate convergence opportunity markov model precisely capture messy honest another honest shorter otherwise honest otherwise eij traverse honest honest honest honest random markov chain compute honest counting traverse traverse calculate traverse plus traverse eij eij traverse analysis convergence opportunity adversary invoke concentration bound theorem calculate expectation probability stationary probability probability session blockchain CCS october toronto canada calculate eij  spent spent lij silence ipi ipi spent eij lij spent simplify calculate spent plot bound convergence opportunity eij lij bound slightly accurate probability calculation equivalent approximation establish concentration bound convergence opportunity concentrate around probability spent concentrate around respective expectation probability linear combination obtain desire probability concentration bound obtain concentration bound application theorem apply theorem transform markov chain another equivalent markov chain traverse chain vertex capture random variable theorem immediately yield bound within expectation probability hidden constant depends factor transform markov chain markov chain equivalent label resp resp honest player label rectangular counting analysis bound convergence opportunity counting honest counting longer upper bound adversary analysis underestimate convergence opportunity negative sequence slightly abuse notation underestimate convergence opportunity  multiple honest expectation mostly loop honest analysis negative obvious underestimate markov model convergence opportunity mining probability meaningful improve analysis convergence opportunity improve analysis convergence opportunity bound adversary convergence opportunity consistency markov model previous analysis reproduce pas   loop exactly capture convergence opportunity transition whenever loop HQ loop sequence convergence opportunity exactly honest convergence opportunity traverse session blockchain CCS october toronto canada spent theorem consistency bound plot theorem nakamoto consistency nakamoto protocol satisfies consistency exists  nakamoto consensus attack introduce delay attack consistency nakamoto protocol adversary simply delay honest maximum amount model delay adversary thwart growth rate honest chain mining efficiently private chain honest chain chain markov model capture attack honest honest waste honest player initial attack recalculate markov model minimum mining adversary attack succeed probability markov model attack calculate probability adversary generate private chain attack fails honest chain ahead honest attacker chain adversary chain longer honest chain analysis introduce variable probability calculate  generate function derive expression fix define satisfies equation establish equation coefficient markov chain model capture probability delay attack constant sum constant desire equation summands obtain  express generate function equation recurrence unravel recurrence derive expression plot adversary bitcoin hardness parameter fork confirmation roughly probability adversary mining ethereum parameter confirmation corresponds roughly probability justifies aggressive choice cliquechain analysis informally nakamoto consensus relies chain fork network agreement   later    fork apply acyclic graph framework ghost protocol instead linear chain analysis extend extend dag protocol inclusive protocol inclusive protocol voting mechanism transaction accept inherit security ghost selection policy underlie subsequent ongoing reference multiple linearity transaction session blockchain CCS october toronto canada fork probability adv adv graph depicts probability execution nakamoto sustain fork correspond probability setting ofc hardness proof attempt solid shade probability adversary whereas dash adversary explore another dag protocol inspire chainweb chainweb blockchain  multiple parallel chain refer specific braid accord reference graph chainweb security analysis graph dependent author chainweb attempt analyze graph attack analysis specifically clique graph proposal cliquechain facilitate rigorous analysis consensus bound variant non trivial dag style protocol consensus analysis applies chain attack analysis focus chain chain chain protocol becomes resilient attack analysis however performance chainweb provable consistency  cliquechain throughput nakamoto protocol model cliquechain parallel blockchains layer layer chain layer chain layer reference layer chain layer compatible another meaning previous layer chain version cliquechain chain version simply nakamoto cliquechain consensus protocol validity message refer chainweb SPV protocol inter chain transaction protocol chain cliquechain miner protocol individual  graph chain chain compatible compatible maximum random maximum random chain otherwise chain compatible layer cannot compatible previous layer chain synchronously chain layer honest miner remain chain player honestly layer grows probability expiry expiry argument cliquechain similarly expiry argument nakamoto protocol argument cliquechain honest chain growth bound bound nakamoto protocol allows lowerbound expiry lemma cliquechain chain growth growth chain honest player chain cliquechain protocol chain probability exponentially proof honest player cliquechain chain sequentially chain growth chain player previous chain chain cliquechain growth  bound nakamoto protocol chain version cliquechain cliquechain layer cliquechain future layer another honest player chain  expiry lemma nakamoto protocol lemma cliquechain expiry exists adversarial expires proof adversary  honest player hears adversary mining efficiently proven honest web layer web session blockchain CCS october toronto canada honest chain web another replace honest chain web adversary heavier web honest web standard chernoff hoeffding bound probability adversarial chain grows inverse exponential lemma parameter convergence opportunity recall convergence opportunity honest player chain convergence opportunity honest player honest another honest player convergence opportunity cliquechain honest player convergence opportunity cliquechain compatible lemma convergence opportunity silence honest silence honest player cliquechain compatible honest proof  honest player player chain addition silence layer chain player chooses compatible subset layer unique chooses random player random chain silence honest player compatible otherwise chooses chain compatible unique silence honest player compatible convergence opportunity honest miner chain compatible convergence opportunity however differentiate layer chain previous layer converge previous layer convergence opportunity nakamoto convergence opportunity cliquechain convergence opportunity derive already expiry cliquechain satisfied nakamoto extend consistency theorem nakamoto protocol cliquechain chain cliquechain solid chain dot reference another chain chain simply nakamoto protocol chain cliquechain protocol layer directly chain plus reference chain chain chain chain markov chain model capture delay attack chain cliquechain protocol corollary cliquechain satisfies consistency theorem cliquechain consensus attack evaluate cliquechain  version delay attack attack cliquechain similarly nakamoto protocol goal adversary delay session blockchain CCS october toronto canada  network delay adversary delay attack chain delay attack chain delay attack chain consistency analysis minimum percentage compute adversary consistency delay attack cliquechain chain chain chain model honest message maximum amount adversary strategy maximize waste honest honest miner already therefore delay growth honest chain adversary efficiently secret chain cliquechain attack thwart honest player split mining chain delayed chain honest miner remain chain waste delay evaluate attack construct markov model scenario honest layer cliquechain crucial analysis cliquechain layer previous layer variation layer restart layer markov model chain cliquechain protocol chain nakamoto delay attack model miner mining layer chain layer attack succeed honest player model adversary efficiently honest player chain honest braid chain analysis nakamoto analysis analyze chain chain attack theorem delay attack chain cliquechain protocol succeed exponentially probability attack proof recall attack succeed honest player chain model adversary expectation random variable obtain attack nakamoto analysis establish concentration bound within factor theorem conjunction expand markov chain equivalent chain  bound respectively yield desire theorem theorem delay attack chain cliquechain protocol succeed exponentially probability attack proof honest pai probability happens pai pai honest honest  probability happens  probability happens session blockchain CCS october toronto canada   honest honest pcj probability happens pcj pcj probability happens attack succeed honest player chain model adversary expectation random variable obtain attack chain analysis establish concentration bound within factor theorem conjunction expand markov chain equivalent chain  bound respectively yield desire theorem minimum adversarial percentage attack succeed ofc probability bound chain cliquechain protocol nakamoto protocol chain cliquechain protocol resilience protocol delay attack chain protocol essentially resilient attack however consistency bound remains exist another attack protocol susceptible 2D miner bitcoin chain miner ghost ghost analysis extend analyze ghost protocol summary ghost extend analysis nakamoto ghost introduce consensus attack ghost markov model capture attack analysis ghost define fork collapse convergence opportunity however crucial analysis adversarial strategy expire meaning limited interval mainchain proof account attack adversary attack ghost utilizes concept adversary utilized attack introduce notion subtree expiry replace requirement expiry review ghost protocol ghost protocol handle transaction rate creation rate increase network delay propagate network protocol miner instead chain heaviest chain calculate sum subtree directly chain eventually miner successively heaviest subtree arrives  illustrates miner ghost miner nakamoto chain protocol honest node compete increase therefore probability mainchain session blockchain CCS october toronto canada subtree expire analysis ghost extend expiry subtree expiry adversary heaviest announce honest player subtrees diverge argue adversary honest player subtree future heaviest announce subtree subtree announce ghost chain corresponds depth sum subtrees ghost protocol honest player increase nakamoto chain growth subtree growth expiry lemma ghost lemma honest player chain chain player increase proof proof nakamoto growth lemma lemma honest player heaviest whenever honest announce diverges subtree another subtree subtree honest player surround honest subtree honest increase subtree increase markov model lemma increase standard chernoff hoeffding bound increase probability ghost achieves subtree increase probability honest player chain therefore increase subtree growth adversary withholds subtree subtree become honest future negligible probability lemma subtree adversary mining honest player mining honest player mining another subtree adversary mining honest player hears exists negligible function probability becomes honest proof subtree honest player mining timeT honest player mining subtree hearing previous subtree expectation inequality negligible probability adversary heavier choice honest subtree honest player mining subtree diverge honest adversary honest divergence honest player mining another subtree subtree satisfy previous lemma subtree growth subtree growth adversary probability adversary heavier subtree inequality adversary subtree subtree honest player contribute adversary honest subtree growth adversary subtree heaviest choice honest player future convergence opportunity recall previous analytical analysis nakamoto protocol consensus relies convergence opportunity honest player chain convergence opportunity happens honest player adversary consensus convergence opportunity ghost heaviest argument instead heaviest argument lemma convergence opportunity silence honest silence honest player ghost heaviest proof honest player player addition genesis chooses heaviest subtree int choice heaviest sub subtree additional subtree heaviest subtree heaviest session blockchain CCS october toronto canada subtree max chooses arbitrary subtree chooses subtrees therefore subtree heaviest subtree adversary consensus ghost convergence opportunity convergence opportunity ghost nakamoto protocol markov model convergence opportunity adversary consensus ghost previous subtree expiry ghost satisfied bound nakamoto protocol extend consistency theorem nakamoto protocol ghost corollary ghost satisfies consistency bound theorem ghost consensus attack ghost analyzes ghost attack introduce nakamoto adversary silently chain attempt overtake mainchain honest chain nakamoto protocol increase increase decrease decrease honest fork meaning honest node compute adversary efficiently therefore overtake honest mainchain computational network contrast attack ghost remains resilient honest node contribute overall honest subtree attack ghost balance attack adversary leverage honest compute maintain subtrees attack adversary maintain fork persist thereby delay consensus confirm transaction onto chain adversary splitting honest compute subtrees mining subtrees balance subtrees whenever become uneven adversary strategy fork within define attack algorithm model attack markov chain model layer parity delta delta layer parity subtrees adversary  delta subtree honest delta adversary reveal honest player honest node subtree delta adversary rebalance subtree honest player adversary honest another delta delta iдht equivalent delta subtree algorithm ghost attack fork adversarial honest within adversary sends honest node fork persists adversary subtree honest node honest node subtree fork rebalanced honest miner adversary adversary rebalance fork adversary loses balance previous counter restarts counter adversary dominate sample reachable model adversarial mining probability denotes subtree adversary mining probability adversary within honest mining probability subtree probability honest player within subtree lastly probability pas without anyone adversary honest player mining transition increase fork probability fork specific calculate probability attack fails attack fails adversary balance fork calculate probability attack introduce variable probability attack fails probability iдht variation attack handle  limit limit adversary within session blockchain CCS october toronto canada ghost attack markov chain snapshot iдht iдht  iдht  iдht iдht interested probability fork calculate protocol parameter confirmation transaction confidence plot plot nakamoto protocol ghost resilient attack nakamoto protocol delay attack however fork non negligible probability LIMITATIONS future conservative choice analysis ghost define minimum subtree growth minimum chain growth nakamoto protocol ignores honest player subtree honest contribute growth multiple contribute subtree tighter bound ghost subtree growth similarly cliquechain growth assume honest player mining sequentially advantage parallel protocol delay attack cliquechain bound growth honest chain generalization markov model chain cliquechain future fork probability adv adv graph depicts probability execution ghost sustain fork various correspond probability setting hardness proof attempt solid shade probability adversary whereas dash adversary simplest intuitive model attack solvable analysis interested nakamoto protocol model attack yield asymptotic upper bound effectiveness attack complex markov model analyze attack cliquechain attack markov model become complex chain markov model asymptotic upper bound attack model perform analysis attack nakamoto protocol ghost derive recurrence relation fork distribution balance attack obtain asymptotic bound attack pursue unify technique markov analyze blockchain consistency comprehensive