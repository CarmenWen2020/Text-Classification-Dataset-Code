permissionless blockchains execution arbitrary program smart contract enable mutually untrusted entity interact without rely trust despite potential security concern  trust handle billion USD smart contract address securify security analyzer ethereum smart contract scalable fully automate contract behavior unsafe respect securify analysis consists symbolically analyzes contract dependency graph extract precise semantic information code compliance violation capture sufficient enable extensibility specify designate domain specific securify publicly release analyze contract submit user regularly conduct security audit expert extensive evaluation securify ethereum smart contract demonstrate effectively correctness smart contract discover critical violation CCS CONCEPTS security privacy software application security logic verification keywords smart contract security analysis stratify datalog introduction blockchain platform nakamoto bitcoin enable crypto currency mutually mistrust eliminate trust  peer peer network enables peer trading transaction  identify applicability decentralize computation beyond trading ethereum blockchain execution program smart contract turing smart contract applicable domain financial public sector increase adoption smart contract demand security guarantee unfortunately challenge smart contract security bug consequence critical vulnerability smart contract discover exploit exploit loss worth USD steal popular dao contract june steal widely parity multi signature wallet july later frozen due bug wallet apparent effective security checker smart contract urgently challenge challenge effective security analyzer smart contract turing completeness program render automate verification arbitrary undecidable address issue automate tend rely fairly generic symbolic execution oyente mythril useful setting approach drawback critical violation due approximation false positive due imprecise model domain specific fail achieve sufficient code coverage realistic contract oyente achieves coverage popular parity wallet overall drawback significant burden user inspect report false alarm worry unreported vulnerability indeed security smart contract inherently directly viable address challenge building automate verifier target important domain specific recent focus solely identify reentrancy issue smart contract session smart contract CCS october toronto canada contract bytecode semantic compliance violation security report MemTag const MemTag caller caller  sstore MayDepOn caller MayDepOn caller sstore DetBy caller securify approach automatic inference semantic program compliance violation security domain specific insight observation devise precise express contract data graph implies violation satisfaction security ethereum smart contract infamous dao bug writes storage establish correspondence violation contract tend violate simpler capture indeed verification benefit instead correspond substantially amenable automate securify domain specific verifier insight developed securify lightweight scalable security verifier ethereum smart contract technical define mirror security compliance imply satisfaction violation imply negation securify symbolically encodes dependence graph contract stratify datalog leverage shelf scalable datalog solver efficiently typically within analyze code ensure extensibility express designate domain specific DSL illustrate analysis securify contract bytecode source code compile bytecode securify derives semantic infer analyze contract dependency graph compliance violation outcome securify classifies contract behavior violation warning compliant abstractly illustrate depicts contract behavior partition satisfy unsafe violate securify report violation behavior violation warning remain behavior compliance reduce manual effort exist symbolic analyzer smart contract securify reduces effort inspect report exist analyzer report definite violation conflate user manually classify report vulnerability positive false positive unsafe behavior behavior violation compliance warn violation violation behavior securify compliance violation guarantee behavior respectively unsafe remain behavior report warning avoid error contrast securify automatically classifies behavior guaranteed violation marked hence user manually classify warning false positive evaluation approach violation compliance reduces warning user inspect manually exist analyzer fail report unsafe behavior sometimes meaning user manually inspect portion code analyzer contrast securify report unsafe behavior audit smart contract securify publicly available http securify analyze contract submit user extensively securify perform detailed commercial audit smart contract auditor securify iteratively improve approach indeed implementation securify greatly benefit actual audit approach auditor available manually inspect report vulnerability ass severity instance securify important version symbolic execution numerical overflow securify particularly helpful audit contract challenge inspect exist earlier overall securify pragmatic valuable analyze smart contract due careful balance scalability guarantee precision contribution summarize contribution  symbolically encodes dependency graph ethereum contract datalog compliance violation security capture sufficient disprove practical security implementation securify fully automates analysis contract extensive evaluation exist ethereum smart contract securify effectively correctness contract discover violation session smart contract CCS october toronto canada contract  address owner constructor function  address owner owner owner user owner setup function allows owner withdraw ether function withdraw uint amount msg sender owner owner transfer amount vulnerable wallet allows user withdraw ether  EXAMPLES motivate address security issue affected worth USD underlie security challenge involve contract satisfies violates securify discovers vulnerability appropriate violation steal ether implementation wallet code solidity popular ethereum smart contract remark wallet simplify version parity multi signature wallet attacker steal worth USD july wallet owner address wallet owner contract function  argument address owner initializes owner function constructor assume accessible otherwise finally contract function withdraw argument unsigned integer amount function transaction sender address return msg sender contract owner owner succeed transfer amount ether owner statement owner transfer amount otherwise ether transfer withdraw function ensures owner withdraw ether wallet attack wallet critical security flaw user actually  function arbitrary address owner attacker therefore steal ether wallet attacker function  passing address argument attacker function withdraw passing argument amount ether wallet remark attack parity wallet perform attacker exploit fallback mechanism  function omit contract wallet fix address wallet library address constant  function receives ether function deposit payable msg sender msg function withdraw ether function withdraw  delegatecall msg data guaranteed ether transfer wallet delegate functionality library contract  detail simplicity refer reader detail actual attack security underlie security attacker steal ether security critical owner universally writable ethereum user security issue mirror stipulate owner restrict user transaction writes satisfied demonstrate user cannot transaction modifies owner conversely violation user transaction modifies owner satisfaction demonstrate violation nontrivial due enormous user transaction detection discover security issue securify violation execution assignment owner owner highlight return caller instruction return address transaction sender securify infers data dependency analyze contract dependency graph securify infers assignment owner owner caller instruction implies assignment reachable user detail violation detail securify detect vulnerability remark symbolic checker perform imprecise false positive false negative instance evaluation later mythril false negative stipulate user trigger ether transfer frozen fund wallet implementation suffers security issue  worth USD november wallet  address session smart contract CCS october toronto canada    sload sstore parse EVM bytecode entry  abi  abi  owner sstore decompiled code restrict violation semantic sstore MayDepOn caller MayDepOn caller MustFollow MayDepOn const MayDepOn  entry  abi  abi  owner sstore illustrate securify unrestricted owner contract input EVM bytecode security highlight output violate instruction highlight intermediate analysis artifact securify proceeds  contract EVM bytecode static assignment infers semantics contract violation restrict sstore instruction writes owner contract implement wallet functionality function deposit marked payable user ether contract function function deposit amount ether identify msg transaction sender identify msg sender finally contract function withdraw delegate wallet library statement  delegatecall msg data execute withdraw wallet library context wallet attack ethereum contract remove blockchain designate instruction attacker remove wallet library blockchain fund wallet cannot extract wallet wallet relies library smart contract withdraw ether november popular wallet library remove blockchain effectively freeze worth USD security underlie security wallet allows user deposit ether cannot guarantee ether transfer contract transfer depends library discover wallet user deposit ether contract ether transfer instruction non zero amount ether contract transfer ether library requirement met detection discover vulnerability securify violation conjunction user deposit ether securify instruction execution ether transfer zero assume instruction reachable transaction implies user positive ether amount deposit ether contract securify instruction amount ether extract contract zero conjunction implies ether lock contract securify previous illustrate security issue smart contract complex capture semantic infer code securify disprove security smart contract accompany securify detects unrestricted owner wallet contract summarizes input securify input securify EVM bytecode contract security specify designate domain specific DSL securify input contract solidity compile EVM bytecode proceed analysis security compliance violation capture sufficient ensure contract satisfies respectively violates security illustrates input securify EVM bytecode wallet contract illustrate vulnerability violation restrict intuitively restrict trigger user discover unrestricted contract securify proceeds  EVM bytecode securify transforms EVM bytecode input  representation static assignment ssa stack expression securify introduces local variable assignment statement addition remove stack securify identifies abi  corresponds  wallet contract decompilation securify performs partial evaluation resolve memory storage offset destination important precisely analyze code statically optimization session smart contract CCS october toronto canada infer semantic decompilation securify analyzes contract infer semantic  dependency behavior contract MayDepOn  capture variable return instruction  capture variable constant securify derivation semantic specify declaratively stratify datalog fully automate exist scalable benefit declarative approach inference concisely capture abstract component contract storage inference easily inference specify modular memory analysis specify independently contract storage analysis semantic securify derives along inference security obtain semantics securify compliance violation security input specialized domain specific DSL enables security expert extend built customize DSL fragment logical formula semantic infer securify detect vulnerability contract securify violation input sstore instruction label sstore storage offset owner violation exists sstore instruction storage offset denote execution instruction identify label caller instruction execution contract instruction caller retrieves address transaction sender implies user sstore owner DSL negation encode conjunction encode sstore MayDepOn caller MayDepOn caller securify DSL important extensibility security amount specify DSL illustrate expressiveness DSL security important restrict writes exception handle ether liquidity input validation others remark contract specific sometimes security expert conduct security audit absence undesirable dependency owner modify storage ensure specific arithmetic expression instruction undesirable integer illustrate contract specific specify DSL output securify violation securify output instruction highlight instruction sstore remark offset instruction easily mapped correspond solidity code source code neither violation compliance securify output warn fail disprove limitation briefly summarize limitation securify version securify cannot numerical overflow address limitation extend securify numerical analysis  improve precision securify enable numerical securify reachability assumes instruction contract reachable assumption establish formal correspondence security securify disprove instance securify assumes sstore instruction reachable execution otherwise violation finally capture violation exploit attacker contract universally writable user address security expert contract specific securify DSL specify security sensitive semantic  automate inference data dependency securify employ infer semantic later security background understand analysis EVM instruction stratify datalog introduce semantic derive securify declarative inference specify stratify datalog derive background background ethereum virtual machine EVM smart contract execute blockchain contract executes user submits transaction specifies contract argument transaction append blockchain contract access volatile memory non volatile storage EVM instruction contract dozen opcodes securify handle EVM opcodes relevant opcodes dup etc eliminate securify  EVM bytecode  representation relevant instruction arithmetic operation comparison mul denote operation cryptographic hash function sha environmental information balance return balance contract caller identity transaction sender  amount ether specify transfer transaction information timestamp  session smart contract CCS october toronto canada program predicate datalog variable literal constant syntax stratify datalog memory storage operation mload mstore sstore sload load data memory contract storage operation transfer ether argument receiver address amount ether transfer argument relevant instruction goto encodes conditional across instruction instruction along formal description refer reader stratify datalog stratify datalog declarative logic enables predicate infer briefly overview syntax semantics syntax datalog syntax datalog program consists denote consists consist literal comma predicate zero denote comma literal predicate negation convention datalog variable upper constant datalog program var var var return variable datalog program stratify partition stratum predicate occurs positive negative literal stratum stratification ensures predicate negative literal fully define stratum semantics comma denote  refer interpretation lattice partially interpretation substitution mapping variable constant obtain replace variable accord return program consequence operator TP define TP input construct  predicate program stratum input model denote tpi fix tpi stratum model semantic intuitive meaning dependency MayFollow instruction label label MustFollow instruction label label data dependency MayDepOn tag DetBy semantic label variable tag variable label inference securify extract instruction constitute datalog input fed datalog program infer additional contract semantic refer derive datalog program program contract instruction label variable integer constant constant datalog program inference instruction contract graph cfg instr instr instruction instruction label variable instruction variable instruction argument instruction encode assign instruction sstore variable constant compile encode sstore variable compile instruction encode sstore datalog constant encodes unknown consecutive instruction express predicate define label label instruction consecutive cfg link derive contract capture predicate encodes originate instruction goto label merge label described securify computes semantic dependency predicate capture instruction dependency accord contract cfg data dependency predicate dependency predicate predicate MayFollow MustFollow define label infer contract cfg intuitive meaning summarize MayFollow session smart contract CCS october toronto canada MustFollow infer MayFollow MustFollow predicate input immediately cfg namely predicate MayFollow define datalog MayFollow MayFollow MayFollow interpret datalog input predicate MayFollow derive fix interpret MayFollow MayFollow derive MayFollow derive fix fix computation instruction label instruction label execution contract inference MustFollow define similarly attention cfg data dependency predicate dependency predicate MayDepOn DetBy intuitive meaning summarize MayDepOn derive variable depends tag variable tag contract variable instruction timestamp MayDepOn variable MayDepOn timestamp instruction timestamp return indicates identical assign caller sender address variable caller DetBy indicates guarantee DetBy caller derive sha len return hash memory offset offset len memory caller implies DetBy datalog define data dependency predicate avoid clutter wildcard variable MayDepOn assign instead MayDepOn assign rely additional predicate  MemTag similarly  omit taint briefly explain meaning predicate derive predicate  constant contract  datalog input derive contract predicate MemTag similarly  defines label offset memory storage assign tag define encodes variable tag constant offset label data dependency analysis MayDepOn assign MayDepOn assign MayDepOn MayDepOn MayDepOn MayDepOn mload  MemTag MayDepOn mload  MemTag MayDepOn mload MemTag MayDepOn assign taint MayDepOn memory analysis inference MemTag mstore  MayDepOn MemTag mstore  MayDepOn MemTag MemTag   mstore  implicit analysis taint goto taint goto taint taint partial inference MayDepOn datalog variable contract variable instruction label unknown offset tag tag memory offset label tag defines offset unknown offset capture via constant assign tag propagates tag instruction instruction reassigns memory location capture predicate  predicate taint encodes execution instruction label depends   goto instruction label define predicate taint taint originate goto instruction label finally propagates tag along instruction merge MayDepOn defines variable tag defines assign variable tag propagates tag assign variable propagates tag operation tag variable mload instruction propagate tag memory variable mload defines load data constant offset tag associate offset propagate output variable mload offset unknown tag memory propagate output variable finally mload propagates tag unknown offset identify defines execution session smart contract CCS october toronto canada assign instruction depends variable label taint variable tag assign propagate output variable remark infer DetBy predicate define therefore omit security  express security semantics define securify express security define security formally background execution semantics EVM contract formally define relevant security compliance violation imply respectively negation construction enables contract complies violates security finally securify leverage error localization securify define syntax define interpret semantic derive contract described syntax syntax securify  instr DetBy MayDepOn MayFollow MustFollow variable program label contract variable tag refer instruction instr instr instruction instruction label variable instruction variable instruction argument refer  data dependency semantic impose label variable instruction finally quantify label variable tag standard exists quantifier complex compose simpler negation conjunction define syntactic shorthand simplify specification standard logical equivalence readability instr instr imposes instruction instr logical similarly instr instr imposes instruction instr semantics interpret infer semantic quantifier connector interpret data dependency predicate interpret define semantic datalog fix sstore DetBy caller shorthand sstore DetBy caller instruction sstore contract  address return  capture predicate DetBy caller brevity omit variable sstore DetBy caller security built securify additional background EVM execution model EVM background understand security define extend background EVM focus EVM syntax semantics EVM contract EVM semantics contract sequence EVM instruction semantics contract trace initial trace contract sequence instruction initial relation valid accord EVM execution semantics trace successfully terminates consists storage memory mention stack transaction information information denote offset storage memory storage memory  contract balance transaction information denote trace positive negative refers sequence denote instruction instruction caller relation trace contract satisfies security violates define relation logic formula formula interpret trace bitstrings comprise user identifier offset argument return EVM instruction denote variable refer trace denote variable refer index trace bitstring variable refer bitstring formula refer user identifier address refer offset storage argument simplicity sake although EVM  instruction instr wildcard argument return important formula concrete execution session smart contract CCS october toronto canada security LQ ether compliance goto  MustFollow liquidity compliance amount amount DetBy amount data violation MayDepOn  amount amount NW writes compliance sstore MayFollow violation sstore MustFollow RW restrict compliance sstore DetBy caller violation sstore MayDepOn caller MayDepOn caller RT restrict compliance amount amount transfer violation amount DetBy amount data MayDepOn caller MayDepOn data handle compliance goto MustFollow DetBy exception violation goto MayFollow MayDepOn tod transaction compliance amount MayDepOn amount sload MayDepOn amount balance violation amount sload sstore DetBy amount dependency  VA validate compliance sstore MayDepOn arg argument goto MustFollow DetBy arg violation sstore DetBy arg goto MayFollow MayDepOn arg compliance violation security relevant security security define security respect EVM semantics precisely impossible EVM turing instead define compliance violation  respectively negation compliance implies violation implies negation neither security relevance formal definition refine compliance violation ether liquidity LQ november bug contract freeze bug contract rely another smart contract library transfer ether user unfortunately user accidentally remove library contract freeze contract ether combination contract ether user absence explicit transfer user issue formally define security trace contract balance contract ether ether vacuously exists trace decrease contract balance ether  bal bal bal bal approximate  leverage ether transfer contract amount ether transfer  instruction trace successfully amount zero  satisfied exactly liquidity compliance transaction successfully instruction identify goto instruction reachable ether transfer contract zero goto instruction liquidity compliance approximates  leverage ether reachable instruction sends non zero amount ether concretely instruction transfer positive amount ether amount ether depends transaction data positive violation approximates  false contract ether cannot transfer ether guarantee contract ether verifies execution successfully execution  guarantee trace positive  guarantee ether cannot transfer verifies instruction transfer ether writes NW july bug dao contract enable attacker steal attacker exploit combination factor instruction upon execution enable recipient execute session smart contract CCS october toronto  code return contract amount transfer storage update critical amount ether recipient contract request attacker function storage update contract user ether contract capture attack cannot writes storage instruction formalize vulnerability trace storage interval instruction trace completes  reentrancy stipulates callee function instruction compliance overapproximates  leverage storage via sstore instruction sstore instruction violation overapproximates  instruction storage implication  violate restrictive writes storage instruction define critical instruction identify label restrict writes RW july attacker  unrestricted storage attacker exploit reliance contract library enable unconditionally owner address enable attacker ownership contract steal ether security guarantee writes storage restrict storage offset contract user cannot offset storage  caller sstore compliance approximates  offset sstore instruction denote sender identifier user designate slot ensures exists user user cannot violation overapproximates  sstore instruction execution offset independent caller define offset user hence violate restrictive global writes storage define adapt respect critical writes writes modify owner identify label skip formal definition informally restrict transfer RT define guarantee ether transfer via cannot invoked user violation detect ponzi scheme compliance user invocation instruction transfer ether violation instruction transfer non zero amount ether execution independent sender violation amount ether transfer depends transaction data non zero execution independent data handle exception february contract ether issue due  exception creator publicly user ether issue return instruction successfully checked compliance instruction goto instruction return code guarantee return code execution violation instruction goto instruction return guarantee behavior transaction dependency tod inherent issue blockchain model guarantee execution transaction recently become critical context initial coin offering popular ups token initial token price offering bonus demand increase price increase bonus decrease miner exploit transaction bonus rate compliance amount ether instruction independent storage contract balance reorder transaction affected storage balance affect amount execution violation amount instruction storage offset storage constant update evaluate version tod tod transfer TT indicates execution ether transfer depends transaction guard transfer depends transaction tod amount TA amount ether transfer depends transaction variation described tod receiver TR capture vulnerability recipient ether transfer transaction validate argument VA argument validate usage unexpected argument insecure contract behavior contract transaction argument desire precondition compliance persistent memory variable argument exists argument violation identifies sstore instruction memory argument without previously session smart contract CCS october toronto canada limitation discus limitation violation assume violate instruction violation terminate execution violation ether liquidity assume reachable violation writes assume terminate execution assumption undecidable security generic capture contract specific requirement illustrate specification contract specific securify DSL vulnerability however contract specific therefore capture compliance contract exploitable compliance compliance handle exception return however cannot exception handle correctly  similarly compliance validate argument argument however input correctly validate meaning correctly validate varies across contract capture precisely correspond contract neither compliance violation securify cannot infer warn reduce warning exist refine contract specific finally remark securify limited security described security auditor custom define contract custom specify expression securify illustrate suppose auditor execution specific sensitive instruction label depends address owner discover violation auditor sload owner MayDepOn owner identifier owner address constant offset contract storage error localization via violation important securify pinpoint instruction violation potential violation security enables developer fix code characterize enable error localization instruction pinpoint instruction contract violation identify entire contract instruction instruction instr violation instr compliance violation instruction instr securify highlight instruction violation similarly compliance instruction instr securify highlight instruction warn assume correspond violation violation violation ether liquidity instruction contract instruction contract pinpoint instruction responsible violation ether liquidity violation contract  pertain instruction contract securify evaluates compliance violation flag contract vulnerable violation issue warn without pinpoint specific instruction implementation detail implementation securify   transforms EVM bytecode input correspond assembly instruction define convert EVM instruction ssa ssa instruction identical EVM instruction exclude stack operation pop etc conversion described  construct graph cfg decompiled instruction optimization securify employ optimization cfg improve precision analysis unused instruction eliminates instruction average optimization reduces contract instruction improves scalability precision subsequent analysis partial evaluation propagates constant along computation improves precision storage memory analysis MemTag evaluation partial evaluation resolve offset storage memory instruction inlining improves precision static analysis context sensitive inference semantic securify derives semantic inference specify stratify datalog  datalog solver efficiently compute fix report concrete evaluate security securify iterates instruction handle quantifier infer directly query fix compute datalog solver violation securify report instruction identify vulnerable error localization user securify report warn instruction vulnerable session smart contract CCS october toronto canada EVM dataset solidity dataset contract instruction sstore instruction statistic ethereum datasets evaluation evaluate securify conduct evaluate securify effectiveness correctness discover violation contract manually inspect securify report violation warning smart contract source code uploaded securify public interface securify oyente mythril smart contract checker symbolic execution securify  resolve memory storage offset securify memory consumption datasets datasets smart contract evaluate securify dataset dubbed EVM dataset consists smart contract obtain parse transaction parity client transaction obtain EVM bytecode smart contract dataset dubbed solidity dataset consists smart contract solidity uploaded securify public interface avoid bias contract alphabetical uploaded simplify manual inspection restrict selection contract solidity code relevant statistic datasets contract defines relevant ether liquidity LQ sstore instruction defines relevant instruction restrict writes RW validate argument VA instruction defines relevant instruction remain security analysis smart contract task evaluate securify effectiveness security compliance violation violation contract securify smart contract EVM dataset violation warning compliance report securify summarizes security violation instruction violation warning instruction neither violation compliance compliance instruction compliance sum writes NW data instruction violate compliant remain TT TR TA NW RW VA RT LQ violation warning compliance securify EVM dataset violation compliance instruction violation security report warning average across security securify successfully prof relevant instruction definite violation report warning instruction fail compliance hence error successfully definite violation violation indicates reduction instruction user manually classify warning false warning report precise breakdown false warning overall securify compliance violation expressive respectively disprove relevant security securify extensible refine securify extend additional convert warning violation compliance benefit security harder disprove restrict writes manual inspection manually inspect securify report gain understand securify contract solidity dataset manually classify report warn warn indicates violation security otherwise classify false warn inspect confirm correctness report violation compliance summarizes security addition violation compliance partition report warning warning false warning handle exception data securify successfully prof instruction return checked code violation securify prof error checked remain instruction securify issue warning instruction session smart contract CCS october toronto canada TT TR TA NW RW VA RT LQ violation warning false warning compliance securify solidity dataset warning classify false warning security issue remark security issue discover solidity dataset relative EVM dataset due datasets distribution solidity dataset consists recent contract development stage contrast EVM dataset contains contract deployed blockchain user deliberately uploaded vulnerable contract evaluate securify exception reduction handle exception violation EVM dataset solidity dataset due developer transfer statement ether transfer handle error default specifically introduce avoid issue due unhandled exception effectiveness varies across disprove others restrict transfer RT transaction dependence TT TR TA relatively false warning roughly warning false warning however security writes NW handle exception warning issue securify warning correspond compliance precisely contract satisfy securify symbolic security checker securify recent source security checker symbolic execution oyente mythril version oyente mythril contract solidity dataset already manually classify warning false warning oyente securify security tod disjunction tod receiver tod amount reentrancy writes securify handle exception mythril reentrancy remark ensure absence storage writes instruction oyente user cannot instruction warning violation false warning unreported vulnerability tod reentrancy handle exception restrict transfer oyente securify mythril securify oyente securify mythril securify mythril oyente securify oyente mythril mstore mload sstore sload resolve unresolved offset resolve partial evaluation handle exception addition implement restrict transfer summarize securify report report violation warning false warning oyente mythril report false positive oyente false positive imply contract vulnerability treat bug warning classify user warning false warning unlike securify oyente mythril report definite violation guaranteed violate security oyente mythril explore subset contract behavior fail report vulnerability report unreported vulnerability depict warning violation axis desirable plot false warning unreported vulnerability axis undesirable reentrancy oyente mythril report actual vulnerability oyente fails report tod violation mythril fails report restrict transfer violation overall symbolic fail report vulnerability security resolve storage memory offset report securify partial evaluation optimization resolve memory storage offset mload mstore sload sstore instruction EVM dataset depicts session smart contract CCS october toronto canada resolve offset average across instruction partial evaluation correctly resolve offset indicates securify infer precise writes storage memory thereby improve precision subsequent analysis memory offset resolve storage offset latter user input memory consumption securify terminates contract average per contract compliance violation oyente mythril default setting coverage improve coverage user increase constraint timeouts loop bound increase contract memory consumption securify fix analysis consumption MB 1GB summary overall securify effective violation establish correctness contract relevant item future integrate securify exist framework formal EVM semantics validate securify analysis formally guarantee leverage securify improve exist symbolic checker oyente mythril securify compliance reduce false positive rate related discus closely related analysis smart contract smart contract expose severe vulnerability  formally verify smart contract  proof assistant  defines formal model ethereum virtual machine lem model prof safety smart contract exist interactive theorem provers formal semantics EVM define framework framework semantics executable validate official ethereum suite enable formal specification verification benefit framework formal verification guarantee precise false positive target arbitrary unfortunately nontrivial fully automate contrast securify target disprove simpler verify fully automate automate security smart contract popular symbolic execution oyente mythril maian symbolic execution indeed powerful generic technique discover bug guarantee explore program false negative contrast securify explores contract behavior context smart contract constraint involve constraint hash function coverage false positive avoid false positive symbolic precisely explore feasible contract towards maian already concrete validation filter false positive application securify filter false positive report symbolic compliance contrast approach symbolic execution securify abstract interpreter soundness guarantee execution symbolic execution guarantee soundness bound loop unrolled bound abstract interpreter symbolic execution explore separately symbolic execution principle handle expressive predicate within logic underlie smt solver theory false positive false positive preliminary verify ethereum smart contract translate solidity EVM bytecode exist verification report performs contract combine theory probabilistic model validate decentralize smart contract protocol zeus analyzer translates smart contract llvm framework zeus  contrast securify DSL data zeus violation reduce false positive directly securify zeus neither zeus benchmark publicly available similarly securify target domain specific detail introduce dynamic linearizability checker identify reentrancy issue contrast securify smart contract DSL security expert extend security factor document vulnerability introduce smart contract propose avoid pitfall standard compiler solidity properly optimize EVM bytecode overview capability blockchains bitcoin nxt ethereum survey extension security program approach enforce security program code  introduces program query java allows developer express java program underlie declarative solver static analysis  custom query program dependence graph capture security java program contrast focus ethereum smart contract securify analysis tailor ethereum ethereum specific instruction balance across memory contract storage furthermore securify DSL specific security smart contract session smart contract CCS october toronto canada declarative program analysis declarative approach program analysis related securify inference rely datalog express analysis computation  framework scalable declarative analysis java program promise declarative static analysis author technique automatic abstraction refinement static analysis specify datalog author propose involve developer  loop researcher developed specific extension datalog  improve efficiency scalability datalog program analysis orthogonal securify inference develop program analysis technique securify leverage advance smart contract securify benefit future advance datalog program analysis conclusion securify lightweight scalable verifier ethereum smart contract securify leverage domain specific insight violation practical smart contract violate simpler significantly easy purely automate insight devise compliance violation effectively contract unsafe respect relevant overall securify enjoys important benefit analyzes contract behavior avoid undesirable false negative reduces user effort classify warning positive false alarm guarantee behavior actual error domain specific enables user express vulnerability emerge finally analysis pipeline bytecode decompilation optimization fully automate scalable shelf datalog solver