concept blockchain satoshi nakamoto maintain distribute ledger addition security important performance blockchain protocol transaction throughput confirmation latency decentralize limited underlie physical network attribute communication capacity propagation delay introduce prism proof blockchain protocol achieve security adversarial hash optimal throughput capacity network confirmation latency honest transaction proportional propagation delay confirmation error probability exponentially bandwidth delay CD eventual transaction approach protocol deconstruct nakamoto blockchain functionality systematically functionality approach physical limit introduction satoshi nakamoto concept blockchain mechanism maintain distribute ledger permissionless honest node proof pow cryptographic puzzle chain protocol consensus transaction ledger adversary alter blockchain protocol performance fundamental performance pow blockchain protocol hash adversary without compromise security assume node protocol throughput transaction confirm per confirmation latency probability confirm transaction remove ledger future bitcoin secure adversary network hash throughput transaction per confirmation latency tradeoff confirmation latency confirmation error probability desire confirmation error probability longer latency bitcoin nakamoto calculation latency average achieve error probability latency average achieve error probability physical limit bitcoin security guarantee throughput latency performance decade effort expend improve performance metric fundamental bound limit performance blockchain protocol blockchains protocol distribute node physical network performance limited attribute underlie network important attribute communication capacity network propagation delay across network propagation delay capacity transaction per node participate blockchain network communicate information consensus capacity propagation delay limit rate information communicate parameter encapsulate fundamental network hardware topology resource consume network relay mechanism session blockchain CCS november london united kingdom validity transaction assume transaction communicate across network transaction confirm per obvious constraint confirmation latency another obvious constraint confirmation latency network capacity reliability requirement indeed confirmation latency transaction communicate across network confirmation transaction interpret confirmation vote transaction vote communicate rate vote accumulate duration parameter interpret minimum convey vote average adversarial due randomness mining probability exponentially adversarial honest happens confirmation cannot guaranteed hence probability bound achievable confirmation error probability exp equation around bound latency confirmation probability constraint CD latency limited propagation delay otherwise limited confirmation reliability requirement quantity CD analogous notion bandwidth delay networking flight vote network evaluate exist blockchain respect limit global network communication link capacity mbit propagation delay vote byte bandwidth delay CD hence confirmation latency limited propagation delay confirmation reliability requirement unless  blockchains physical network limit bitcoin transaction per limited confirmation reliability requirement propagation delay ethereum transaction per achieve error probability define confirmation formally informally node confirms transaction upon successfully evaluate confirmation parameter transaction probability revert adversary bitcoin prism optimal latency security parameter slope slope confirmation latency security parameter prism latency prism independent security parameter CD increase slowly slope bitcoin latency increase rapidly security parameter slope proportional CD latter slope contribution contribution blockchain protocol prism powerful adversary simultaneously achieve security theorem transaction consistency liveness guarantee throughput theorem throughput transaction per latency theorem confirmation honest transaction without public spends latency max confirmation reliability constant optimal throughput protocol hash transaction assume transaction communicate across network hence prism throughput optimal prism achieves confirmation latency honest transaction physical limit desire security parameter CD confirmation latency propagation delay independent another achieve latency propagation delay confirmation error probability exponentially bandwidth delay CD latency adversarial strategy average randomness mining knowledge exist pow protocol guaranteed performance prism novel enable performance decouple transaction propose validation confirmation functionality blockchain performance concept confirm ledger unique ledger enable honest non transaction confirm quickly powerful adversary precisely define formal model inspire concept decode information theory session blockchain CCS november london united kingdom performance exist pow protocol fork protocol increase mining rate bitcoin decrease latency improve throughput however expense decrease security unlike prism throughput latency bitcoin security limited communication limited increase mining rate maintain security ghost inclusive spectre phantom  literature complex fork choice reference link convert blocktree acyclic graph dag allows vote necessarily descendant ghost remains secure mining rate balance attack adversary severely limit security mining rate bitcoin throughput ghost security limited protocol inclusive  rely ghost inherit drawback spectre phantom improve latency throughput spectre cannot transaction smart contract phantom formal proof security decouple consensus protocol  decouple transaction proposal leader election couple bitcoin  elect leader propose transaction till leader elect pow achieves throughput latency cannot reduce approach furthermore  vulnerable bribery DDoS attack whereby adversary corrupt leader identity unlike bitcoin  weak employ hash threshold weak along regular attempt throughput however weak chain achieve optimal throughput hybrid blockchain bft consensus protocol combine byzantine fault tolerant bft consensus pow byzcoin predecessor  attempt address latency shortcoming  proven later insecure adversarial hybrid consensus combination proof committee selection byzantine fault tolerance bft consensus however protocol secure till protocol latency responsive decrease network delay linearly network delay non optimal dependence bitcoin closely related protocol  achieves latency optimistic leader honest however dishonest leader delay transaction bitcoin latency delay behavior detect pow blockchain approach increase mining rate critical improve throughput latency blockchain protocol challenge dag approach arise dag unstructured due excessive random fork mining rate increase contrast prism structure dag cryptographic sortition functionality functionality separately deconstruct blockchain decouple transaction decouple voting proposer transaction leader voter link reference link deconstruct blockchain transaction partially proposal voter organize voter chain voter vote proposal leader elect leader proposer transaction leader voter link reference link chain chain chain prism throughput latency reliability physical limit increase transaction parallel voting chain deconstruction deconstruct blockchain structure atomic functionality illustrate selection chain blockchain protocol chain bitcoin elect leader blocktree define distance genesis blockchain purpose election leader transaction chain vote ancestor link relationship explicitly functionality blocktree conceptually equivalent representation proposer transaction voter voter vote transaction indirectly voting proposer link transaction proposer grouped accord blocktree voter vote proposer leader elect leader transaction ledger valid voter chain voter chain maintains security alternative representation traditional blockchain although seemingly complex blockchain representation performance approach physical limit increase transaction throughput simply increase transaction proposer without compromise security blockchain limited physical capacity underlie communication network confirmation increase parallel voting voting proposal parallel increase voting session blockchain CCS november london united kingdom rate physical limit confirm  latency extremely reliability overall generation rate increase tremendously proposal per remains manageable voting organize voting chain mining rate per chain hence fork overall structure comprise link structure dag sortition sortition voting accomplish random hash successfully sortition split adversary equally across structure focus attack specific structure sortition pow technique  purpose fairness reward principle decouple functionality blockchain central approach already apply   focus decouple transaction functionality broaden principle decouple functionality concurrent aware independent related online proposes protocol achieves  bitcoin latency achieves  throughput contrast prism achieves simultaneously throughput latency although concept multiple chain difference prism decouple chain transaction vote transaction chain increase throughput voting rate hence latency transaction across chain increase voting rate throughput contrast prism decouples transaction voter proposer allocate network capacity deliver latency throughput protocol achieve throughput bitcoin latency outline model combination synchronous model network model blockchain parameter physical parameter underlie network pseudocode description prism analysis security throughput latency prism outline outline proof appendix proof extend manuscript due constraint contains simulation model synchronous network model define blockchain protocol algorithm maintains blockchain data structure consist function encodes ledger inclusion transaction blockchain output ledger define blockchain otherwise bitcoin iff chain multiple chain resolve deterministically chain hash blockchain protocol proceeds denote security parameter environment capture aspect external protocol input protocol transaction interaction output denote participate node honest node strictly blockchain protocol corrupt node collectively adversarial honest corrupt node interact random function oracle output node query oracle adversary corrupt node collectively sequential query oracle denotes adversarial hash environment access oracle restriction model limited hash rate execution blockchain protocol environment initializes node honest corrupt node initialize environment adaptively adversary hash remains bound thereafter protocol proceeds environment delivers input appropriate node transaction adversary delivers message deliver delivery message recipient node input tape node incorporate input message local blockchain data structure accord protocol node access random oracle hash allocation allows hence user oracle nonce attempt valid proof oracle proof node deliver environment computational constraint oracle validation validate validation computational demand node finite per binomial random variable simplify analysis limit model node grows proof threshold adjusts per remains constant hence poisson limit theorem voter per converges poisson random variable message broadcast environment deliver adversary adversary various capability restriction message broadcast honest node previous deliver adversary remain honest node however delivery adversary message honest node whatever chooses adversary cannot forge alter assume node hash model easily generalize arbitrary hash distribution session blockchain CCS november london united kingdom message honest node adversary action corrupt node adversary corrupt node allocate hash content release notably although honest publish immediately adversary private release future adversary deliver corrupt node message honest node remain honest node rush adversary observes honest node action action model rational user necessarily adversarial nevertheless incentive deviate protocol physical network constraint physical parameter network assume network model transaction network delay processing delay propagation delay model empirical data network delay definition duration network cannot transport infinite message model environment transport finite volume message per volume parametrized network capacity transaction per hence environment message volume equivalent transaction constraint per protocol stability constraint differentiates model prior traditionally assume infinite network capacity  quantify physical limit throughput latency simplicity assume dissemination transaction consumes bandwidth instead communicate transaction message capture environment transmits transaction assume transmit transaction metric random variable  denote joint suppress dependency security parameter randomness define choice function randomness adversary environment goal joint adversary environment evolution blockchain honest node bitcoin backbone protocol model protocol execute finite execution horizon rmax polynomial primary concern efficiency confirm transaction definition transaction iff adversary environment security parameter  rmax negl proposer blocktree voter blocktree proposer voter voter vote proposer reference link transaction trans snapshot miner blocktree previously solid boundary whereas dot boundary miner simultaneously proposer blocktree voter blocktree corresponds confirm transaction corresponds reject transaction transaction confirm resp reject honest resp exclude ledger probability plus negligible hash collision ignore analysis suppress notation objective optimize blockchain protocol throughput latency confirm transaction denote denote transaction generate execution horizon denote transaction deliver definition throughput blockchain protocol throughput transaction per exists linear environment transaction per rmax max  throughput throughput blockchain protocol although grows constant implies throughput rate transaction maintain bound transaction queue adversary environment transaction per definition latency transaction denote transaction introduce  random variable denote latency transaction define max  transaction finite latency implies blockchain consistency liveness protocol description content role prism blockchain algorithm defines protocol blockchain data structure session blockchain CCS november london united kingdom define ledger inclusion algorithm due constraint pseudocode algorithm appendix prism blockchain data structure proposer blocktree voter   maintain distinct proposer proposer skeleton prism blockchain proposer blocktree accord chain proposer define distance proposer genesis blocktree structure utilized protocol proof proposal construct ledger protocol selects proposal sequence chosen proposer refer transaction proposer pointer refer payload proposer blocktree proposer proposer transaction voter voter voter  genesis accord chain voter vote proposer pointer payload unlike bft consensus protocol malicious miner prism cannot  voting voter seal proof miner conflict voter disjoint honest user user within chain voter blocktree cast vote proposer blocktree precisely voter vote proposer  voter ancestor therefore voter collectively cast vote proposer blocktree voter blocktree vote dot arrow proposer blocktree proposer blocktree vote define leader transaction transaction transaction proposer blocktree although transaction proposer blocktree transaction proposer transaction ledger transaction transaction BT BT refer proposer BP proposer BP confirm directly become leader indirectly refer leader protocol algorithm prism protocol protocol trust setup environment generates genesis proposer blocktree voter  trust setup completes protocol enters mining loop whereas bitcoin miner blocktree prism miner simultaneously proposer transaction voter content simultaneous mining happens via cryptographic sortition roughly miner generates superblock contains information simultaneously nonce upon mining output hash deterministically mapped voter transaction proposer algorithm sortition miner discard unnecessary information release environment precisely mining miner maintains outstanding content bitcoin content transaction memory pool prism multiple miner content transaction content consists transaction transaction proposer content transaction proposer refer proposer voter ith voter content proposer proposer blocktree vote chain ith voter miner observes multiple proposer vote voter vote proposer ancestor vote upon content miner generates instead naively content hash prism header contains merkle withm merkle content nonce valid nonce  proposer transaction voter voter  consists header appropriate content respective merkle proof instance proposer proposer reference proposer content appropriate merkle proof transaction vote mining node network bitcoin upon miner validity valid satisfies pow inequality miner directly indirectly refer miner lack refer request network upon valid transaction miner remove transaction transaction pool  transaction pool upon valid voter miner update chain update vote accordingly upon valid proposer previous miner proposer update voter vote ledger confirmation define proposer vote define leader leader fix fluctuate voter  voting however voter  vote cement deeper respective voter  leader fluctuation cease confirm leader sequence leader proposer blocktree define leader sequence proposer twice simplicity session blockchain CCS november london united kingdom transaction leader transaction transaction propose reference link transaction epoch  proposer proposer sequence reference transaction shade refer proposer confirmation transaction individually confirm confirm transaction easy transaction transaction alice bob carol  transaction individually confirm without transaction bitcoin transaction simultaneously confirm however prism transaction confirm procedure  algorithm defines transaction confirmation procedure  defines confirm transaction procedure  described  proposer sequence lpi grey shade transaction directly indirectly refer transaction indirectly refer proposer reference link another proposer directly  honest proposer link  transaction proposer ensures transaction refer proposer leader sequence ledger  transaction sequence procedure expands transaction remove duplicate spent transaction output transaction  confirm leader quickly narrow proposer define proposer guaranteed leader proposer realize def procedure vote voter proposer genesis proposer realize outer proposer enumerates proposer sequence sequence leader sequence future ledger proposer sequence confirms transaction ledger  obtain leader proposer blocktree genesis confirm leader return ledger built leader absence active attack described analysis analyze aspect prism security throughput latency listing formal guarantee satisfied prism intuitive prism achieve latency without sacrifice security intuition sketch proof chain protocol fix network maximum tolerable adversarial hash production rate faster tolerable prism tolerate adversarial hash voter proposer hence observation individually rate chain blocktree bitcoin secure security prism voter proposer confirm vote chain voter conservative confirmation policy prism vote voter confirmation reliability counting vote depth respective denotes confirmation depth reliability conservative confirmation immediately implies prism security guarantee voter bitcoin however latency bitcoin tolerable adversary vote intelligent transaction confirmation insight vote individually stabilizes rate bitcoin slowly aggregate opinion converge faster voter public private confirm proposer honest prop adversarial prop TB TB transaction refer isolated honest proposer transaction refer non isolated proposer isolated proposer link TB implicit honest refers  transaction proposer refers TB implicitly isolated proposer situation transaction TB refer honest proposer currently isolated public proposal exists fix mining rate proposer chosen fork proposer session blockchain CCS november london united kingdom vote chain respective voter vote become deeper voter chain attack adversary private proposal voter fork private alternate chain vote leader confirm adversary voter alternate chain attempt overtake public chain shift vote adversary thereby vote attack successful chain analog nakamoto private attack chain instead honest chain attack chain nakamoto calculation probability attack chain vote become confirm proposer tolerable adversary reversal probability chain withm voter chain vote chain reverse adversary probability adversary lucky reverse vote hence achieve vote incurs shorter latency depth vote reverse probability reduction latency conceptually average unreliable classifier aggregate classifier voter chain certainty permanence individual vote thereby reduce confirmation gain without sacrifice security voter chain operating slowly tolerate adversarial hash nakamoto private attack attack attack formal security analysis sketch attack model attacker correlate action voter chain however confirmation latency behaves similarly latency attack non isolated proposer transaction TB refer honest proposal isolated adversarial public proposer compete proposer honest persist isolated honest proposal separately cycle honest transaction spent honest transaction naive approach confirm TB definitively confirm however adversarial attack balance vote insight honest non spent transaction confirm confirm weaker confirmation eventually confirm later honest proposer refer TB confirm honest transaction confirmation isolated honest proposer confirm proposer refer TB leader leader however confirmation alone honest transaction confirmation transaction ledger isolated honest proposer proposer implicitly explicitly TB ledger isolated honest proposer confirm precede confirm TB ledger confirmation latency maximum confirmation confirm adversary cannot private vote vote public logic isolated honest proposer situation honest node voting public adversary voting adversarial action honest node vote evenly split confirmation albeit significantly isolated honest proposer isolated public proposer confirm leader sequence honest transaction refers previous  proposer isolated honest proposer frequently spent transaction confirm spent transaction namely instead confirmation unique confirmation confirm proposer ultimate leader achieve confirmation occurs confirm reliably declare winner public proposer vote confirm unique leader spent transaction happens absence active attack attack however adversarial attack balance vote vote evenly split cannot confirm leader vote stabilizes confirm spent transaction accepted content dependent vote stabilize sketch security latency proof CP leader sequence voter  bitcoin backbone prefix CP chain quality CQ proposer blocktree CP CQ CP CQ CP CQ CQ leader sequence prefix chain quality voter chain imply prefix chain quality proposer leader sequence session blockchain CCS november london united kingdom sketch proof structure due constraint outline proof appendix proof extend technical report translate intuitive argument formal security latency proof borrow insight prof consistency liveness bitcoin backbone protocol prefix chain quality similarly prism achieves consistency liveness proposer leader sequence satisfies directly apply proposer leader sequence chain protocol combination proposer aggregate voter vote proposer voter correspond leader sequence specifically voter construct accord backbone protocol hence satisfies chain quality prefix chain quality voter implies honest node continually vote proposer voter proposer prefix implies vote eventually stabilize implies leader sequence satisfies prefix theorem leader eventually stabilize hence ledger consistent leader sequence chain quality lemma ensures liveness ledger theorem confirmation honest transaction intuitive argument isolated proposer honest proposer compete adversarial proposer duration constant independent specifically honest user mining proposer rate whereas adversary mining rate adversary mining honest user within expectation adversary cannot immediately compete honest similarly isolated adversary cannot honest honest happens within expectation confirm isolated public honest proposer argument isolated honest vote leader persists vote private adversarial proposer chain quality voter chain ensures steady honest vote public proposer sufficiently vote lemma prefix voter ensures vote cannot reverse adversary lemma confirmation proposer previous similarly lemma theorem prism ensures proposer confirm remain ledger combine assurance transaction directly indirectly refer random analysis isolated proposal ensures honest transaction ledger prism confirm honest transaction within theorem prof prefix satisfied probability similarly chain quality satisfied probability sufficient consistency liveness eventual ledger sufficient confirmation latency latency probability  individual voter however proposer leader depends macroscopic vote probability  voter parameter selection specify parameter prism parameter physical network recall network delay transaction transaction voter proposer respectively transaction network delay network delay reasonable choice duration synchronous model security analysis security prism depends network delay proposer voter transaction max moreover voter proposer reference link transaction assume  CD max network delay max security mining rate fvd voter voter secure chain accord satisfy proposer voter mining rate simplifies notation utilize communication bandwidth transaction individual choice important preferable ensure reference link transaction per proposer proposer finally voting maximize voter chain stability constraint sec  substitute CD CD session blockchain CCS november london united kingdom voter proportional CD bandwidth delay voting advantage freedom choice return issue discus confirmation latency subsection prism achieve transaction procedure  algorithm adversary hash transaction consistency liveness guarantee establish backbone prefix chain quality proposer leader sequence denote proposer denote proposer proposer denote vote proposer recall vote chain voter leader denote proposer maximum vote argmax hash dependent leader sequence denote   leader sequence rmax horizon leader sequence  rmax theorem leader  prefix suppose fix   rmax probability  proposer proof appendix theorem liveness assume transaction enters transaction eventually permanent leader sequence proof appendix theorem yield theorem ledger consistency liveness latency transaction def mostO throughput analyze transaction throughput prism leader sequence prism transaction transaction refer due liveness transaction refer proposer transaction generation rate chosen transaction per adversary throughput bitcoin prism bitcoin operating ghost throughput versus tradeoff prism bitcoin ghost tradeoff baseline protocol upper bound prism assume honest transaction yield throughput transaction per advertised goal transaction transaction broadcast entire network achieve throughput minimize transaction redundancy schedule transaction concretely split transaction randomly queue honest transaction drawn randomly chosen queue transaction queue transaction honest redundant transaction honest distribute poisson throughput non redundant probability per throughput non redundant honest per approach per transaction per achieve claimed theorem throughput theorem guarantee transaction propose confirm therefore prism throughput def throughput prism capacity vanish unlike bitcoin indeed bitcoin secure nakamoto private attack regime per network delay approach fork occurs honest node honest node chain faster adversary throughput bound hence regime bitcoin achieve vanish network capacity mining rate ghost similarly security limited throughput behavior bitcoin appendix session blockchain CCS november london united kingdom vote private hidden confirm proposer public proposer confidence bound upper confidence bound private confirmation confirm confirmation latency confirmation latency convert intuition formal confirm proposer enables confirm proposer sequence confidence interval around vote cast proposer proposal public currently confidence interval vote proposer bound maximum vote lose gain  vote vote reverse adversary potential private proposer upper bound maximum vote accumulate future confirm proposal whenever upper confidence bound private confidence bound public proposal confidence bound formally define earlier proposer vote depth proposer define max fvd logm  logm max   private definition proposer confirmation policy max private confirm proposer max confirmation latency confirmation latency transaction proposer refer leader confirm leader confirm component latency confirmation latency analyze theorem confirmation latency analyze theorem confirm proposer latency independent leader sequence outer confirm theorem prefix suppose suppose proposer confirm proposer conf conf fvm rmax conf proof appendix express latency bound physical parameter voting rate security constraint accord CD choice parameter regime  CD neglect latency confirmation bound proportional propagation delay positive confirmation error probability exponentially CD constant latency versus security parameter tradeoff prism CD typical network confirmation error probability exponentially CD already achieve error probability reduce voting rate security constraint increase voter chain specifically CD yield desire security parameter neglect correspond latency bound linearly increase prism curve slope inversely proportional network capacity session blockchain CCS november london united kingdom confirmation honest transaction previous subsection confirm proposer sequence guaranteed prefix totally leader sequence proposer sequence creates ledger transaction reference link transaction ledger spends remove sanitize ledger transaction sanitize ledger guaranteed sanitize ledger transaction confirm honest transaction without spends eventually  honest proposer becomes leader honest transaction already ledger due positive chain quality leader sequence theorem isolated honest eventually occurs latency confirm honest transaction therefore bound sum latency confirmation theorem plus latency latter theorem liveness assume honest transaction without spends transaction  logm ledger correspond proposer sequence latency proof appendix various component overall latency analyze confirmation latency honest transaction enters confirm bound sum latency theorem analysis thm theorem latency theorem guarantee latency honest transaction def max DC therefore honest transaction confirm max  theorem theoretical upper bound latency physical limit propagation constant factor characterize constant research direction outside scope empirically estimate average latency simulate prism protocol confirmation purpose conduct simulation honest variety adversarial setting setup simulate network voter chain sec proposer voter rate sec simulation latency transaction confirmation scenario attack balance attack censorship attack confirmation simultaneously robust private nakamoto attack adversary withholds proposer correspond fork voter reverse confirm proposal adversary deploy hash denotes hash actually attack whereas maximum tolerable adversarial hash without lose consistency liveness confirmation reliability conservatively additional parameter setting appendix chain protocol generation rate per attack prism parameter chosen withstand attacker hash adversary actively conduct attack confirmation defend adversarial hash latency depends honest node vote  proposer bitcoin confirm transaction deeper chain prism voter deeper prism latency significantly nakamoto chain protocol closer physical limit active adversary transaction resolve latency honest transaction balance attack balance attack goal adversary prevent confirmation cast vote compete proposer leader attack compete proposer honest non spent transaction refer proposer adversary goal prevent confirm transaction balance vote proposer currently majority vote adversary voter ith voter voter vote adversary vote minority voter vote adversary appends chain thereby reinforce vote lose proposer voter vote adversary fork ith voter vote instead vote voter adversary creates already fork voting adversary appends fork balance attack severe attack prism simulation latency honest transaction confirmation increase factor balance attack affect chain protocol despite prism latency chain protocol session blockchain CCS november london united kingdom confirmation latency honest transaction attack axis denotes maximum tolerable adversarial hash transaction latency presence adversarial balance attack active hash honest spent transaction confirmation latency censorship attack hash honest spent transaction latency prism chain spent transaction latency spent transaction honest transaction chain protocol curve however spent transaction latency prism grows substantially approach chain protocol indeed active approach prism latency spent transaction presence attack confirmation actually exceeds chain protocol censorship attack finally attacker goal simply confirmation propose empty proposer voter delay creation proposer reference transaction transaction delay confirmation proposer delay creation vote proposer attack censorship attack delay prism confirmation delay non adversarial chain protocol delay delay insertion transaction censorship attack spent transaction latency honest