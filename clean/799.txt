machine widely model application increasingly service technology however massive data collection privacy concern training prediction stage implement framework privacy preserve machine obtain training linear regression logistic regression neural network model protocol server model wherein data owner secret data server evaluate model joint data computation PC contribution framework ABY efficiently switch forth arithmetic binary yao PC independent conversion technique optimize propose technique fix multiplication extends beyond customize protocol evaluate piecewise polynomial function variant building secure malicious adversary deviate arbitrarily implement protocol magnitude faster prior hence significantly reduce gap privacy preserve plaintext training introduction machine widely model classify image authenticate biometric information recommend identify fraudulent transaction technology microsoft ibm amazon google machine service customer pre model prediction training platform model customer data advance breakthrough image text recognition extent neural network model datasets enabler data collection algorithm thrive internet regularly user online activity browsing behavior accurate recommender healthcare sector envisions future patient clinical genomic data diagnostic model effort security incident threat data improve future attack prediction data classify training sensitive multiple source privacy requirement regulation  pci GDPR user privacy concern data  issue competitive advantage prevent entity pool data source accurate model privacy preserve machine secure multiparty computation mpc active research address concern ensures training information leak data model encrypt version prediction information leak classification label guarantee proof privacy model interaction leak information data defense strengthen combine orthogonal mechanism differential privacy server aid model data owner client encrypt version data multiple server perform training procedure combine data apply pre model classify data sample performance improve significantly magnitude speedup privacypreserving machine nevertheless gap plaintext training privacy preserve gap unavoidable desire guarantee affair optimal computation PC corruption technique implementation significantly reduce gap processing billion gate per mpc technique machine however primarily limited server model benefit speedup security weaker semi honest attacker explore privacy preserve machine server model emphasize data owner participate computation envision application scenario server data owner server independent representative subset data owner guarantee server compromise session privacy CCS october toronto canada arbitrary data owner incorporate data framework directly apply PC technique machine algorithm yield speedup server aid privacy preserve machine unfortunately exist technique negative challenge mention PC technique suitable computation contrast machine computation wherein training data intermediate parameter cannot natively handle modular arithmetic integer significant fractional modulo avoid wrap around approach fails perform float multiplication standard training algorithm stochastic gradient descent sequential multiplication perform moreover modulo implies expensive multiplication reduces performance perform fix multiplication boolean multiplication circuit inside mpc boolean circuit evaluate secret garble circuit technique significant increase communication respectively challenge machine procedure switch forth arithmetic operation multiplication addition non arithmetic operation approximate activation function logistic function piecewise polynomial function relu former efficiently instantiate arithmetic secret latter implement binary secret yao standard convert costly quickly become performance bottleneck address challenge efficiently harder presence attacker behaves arbitrarily malicious contribution implement framework privacy preserve machine server model corrupt server contribution approximate fix multiplication protocol standard secret modular multiplication semi honest malicious multiplication protocol improvement throughput improvement latency optimize boolean circuit machine operation fix technique reduces amount communication appendix detail recent fix multiplication technique fails PC certainly fails presence malicious adversary technique secure malicious adversary extend arbitrary framework efficiently convert binary arithmetic yao yield arithmetic  ABY framework security malicious adversary conversion technique optimize framework recent privacy preserve machine extensively utilize ABY conversion beyond machine later technique develop ABY framework framework secure computation technique deviate significantly counterpart optimization delayed technique reduces communication complexity vectorized operation magnitude customize PC protocol evaluate piecewise polynomial function generalize oblivious transfer primitive instantiate building semi honest malicious technique implement framework semi honest training inference linear logistic regression neural network model faster SecureML training neural network framework linear regression training iteration per iteration similarly neural network generate handwrite prediction millisecond chameleon protocol millisecond overview technique brief notational introduction define JxK secret JxK denotes additive secret JxK denotes vector binary secret encodes JxK denote secret suitable evaluate yao garble circuit approximate fix multiplication semi honest secure computation protocol replicate secret protocol linearly secret random sum reconstruct challenge replicate secret naturally fix multiplication fix technique introduce fails construction reduce compute JxK generates offline truncation truncate reveal jointly compute JxK probability truncation error significant session privacy CCS october toronto canada efficiently generate throughput technique approach secure malicious adversary easy generalizes arbitrary moreover fix multiplication optimize vector matrix inner dimensional vector perform communication truncation ABY framework training linear regression model arithmetic additive replicate logistic regression neural network training however perform computation operation perform task binary additive yao garble former communication efficient communicate circuit gate proportional circuit depth latter communication efficient conversion goal minimize communication refer conversion protocol ABY framework reiterate conversion technique functionally significantly due deviation PC efficient PC technique flavor technique review convert arithmetic addition circuit JxK replicate compute locally input input binary PC computes addition circuit computes JxK locally compute binary random   reveal respectively locally compute  JxK   reveal completes semi honest conversion binary JxK binary PC optimize parallel prefix adder reduce lo–¥ communication yao optimization allows conversion perform gate leverage redundancy replicate secret approach secure semi honest adversary malicious undetected addition locally prevent perform addition inside another malicious PC communication introduce technique avoid extra binary PC PC piecewise polynomial function piecewise polynomial function compute polynomial input interval activation function relu function propose approximation non linear conversion semi honest malicious comm comm JxK JxK JxK JxK JxK JbK JbK JbK JbK JbK JbK JxK JxK JxK JxK conversion arithmetic binary yao representation communication comm average per arithmetic binary computational security parameter function compute machine training prediction ABY framework enables efficient evaluation function customize optimize construction building  JabK   JabK mixed computation instantiate generalize oblivious transfer protocol receiver input integer sender input protocol task semi honest malicious security respectively piecewise polynomial function application technique approximate non linear function related earlier privacy preserve machine decision cluster svm classification linear regression logistic regression propose secure multiparty computation incur efficiency overhead advantage recent advance mpc lack implementation linear regression privacy preserve linear regression server model  linear regression protocol horizontally partition data combination linearly homomorphic encryption LHE garble circuit   extend vertically partition data improve performance however reduce linear yao garble circuit protocol LHE scheme introduces overhead cannot generalize non linear model contrast stochastic gradient descent sgd training yield faster protocol enables training non linear model neural network recent  zhang sgd training arithmetic binary yao PC via ABY framework introduce novel approximate fix multiplication avoids boolean operation truncate yield performance training linear regression model limited server model extend server model session privacy CCS october toronto canada   propose framework privacy preserve linear regression however framework due extensive garble circuit logistic regression privacy preserve logistic regression propose approximate logistic function polynomial model LHE however complexity exponential approximation polynomial accuracy model degrade logistic function  security model untrusted server combine encrypt data multiple client transfer trust client model plaintext however plaintext aggregate data leak client model neural network privacy preserve machine neural network challenge shokri shmatikov propose instead data server portion coefficient training although efficient cryptographic operation leakage coefficient understood formal security guarantee obtain privacy preserve prediction neural network model recent assume neural network plaintext data model evaluates private data another recent fully homomorphic somewhat homomorphic encryption evaluate model encrypt data another advantage combination LHE garble circuit proposes efficiency improvement ABY framework privacy preserve neural network inference propose framework automatically compile program ABY component evaluate neural network model construction protocol benefit ups due PC technique security semi honest adversary explicit performance comparison framework demonstrate significantly efficient recent privacy preserve training neural network  zhang customize ABY framework purpose propose approximate  multiplication protocol avoids binary circuit neural network model fix multiplication technique limited PC PRELIMINARIES refer previous wrap around secure computation secret throughout presentation default representation encrypt data replicate secret technique  secret sample random distribute ith denote JxK sometimes brevity refer JxK tuple replicate secret sufficient information reconstruct actual immediately implies secret scheme tolerate corruption protocol achieve threshold briefly review building reveal secret sends reconstructs locally reveal secret sends reconstructs secret locally arithmetic operation apply JxK  locally compute JxK  addition subtraction public constant JxK define JxK public constant define  operation respect JxK  interactively compute  collectively compute define   ignore locally compute JxK  however ensure protocol specifies sends operation additional randomize therefore random exactly triple refer zero compute without interaction setup construct private input generate another zero JxK define malicious adversary additional ensure operation perform correctly detail refer arithmetic binary later version protocol correspond suitably traditional arithmetic operation refer arithmetic notation JxK latter binary operation correspond advantage binary representation flexible efficient compute function easily frame modular addition multiplication refer binary notation JxK yao session privacy CCS october toronto canada yao garble circuit protocol allows garbler encode boolean function garble circuit evaluate evaluator concretely garble scheme assigns random circuit correspond gate circuit garble encrypt output combination accord truth gate input encryption evaluator obtains correspond input circuit enables decrypt exactly ciphertext  gate correspond output evaluator decode output translation circuit output various optimization garble introduce notable  permute xor gate technique optimization modification generate xor technique global random secret permute technique significant significant refer permutation ABY framework yao input extend yao garble circuit protocol corruption obtain security malicious adversary comparable semi honest yao protocol role evaluator role garblers garblers exchange random generate randomness garble circuit separately generate garble circuit evaluator garbler honest garble circuit compute honestly evaluator enforce honest garble behavior equality garble circuit yao denote JxK evaluator garblers semi honest garbler input evaluator malicious garblers commitment permute comm comm evaluator garbler input sends opening commitment evaluator commitment randomness generate permute opening succeed evaluator input perform oblivious transfer garblers obtain remove OT augment circuit input correspond evaluator split input xor input circuit  computes function evaluator input generate random input permute commitment security model security model architecture SecureML extend honest majority semi honest malicious adversary data owner client secret data server perform PC evaluate model joint data security model reduces standard security definition PC server hence security definition refer formal description adversarial setting building reduce composition exist PC building security imply via standard composition theorem framework construct efficient protocol building protocol training linear logistic regression neural network model framework perform mixed computation data equivalent ABY framework  fix arithmetic fix define integer complement representation denote positive denotes addition subtraction perform correspond integer operation remain multiplication perform manner hence maintain invariant technique fails review  fix multiplication protocol fails secret fix JxK secret addition subtraction naturally multiplication due complement standard  desire compute JxK interpret fix quality ideally locally obtain however equality remove propagate addition mod generate eliminate due separately however probabilistic error magnitude arguably acceptable fix arithmetic naturally limited precision session privacy CCS october toronto canada error impact accuracy model sufficiently unfortunately serious error introduce due modulo combine complement semantics desire computation respect complement arithmetic shift significant msb latter fail secret binary complement however secret likely zero msb zero reconstruct incorrect analysis error msb reverse error clever fix maintain interpret complement integer ensures negligible probability msb msb ofr positive probability msb probability generate  due uniformly distribute probability exponentially appropriately chosen argument negative unfortunately approach truncate separately extend secret JxK source error magnitude due possibility truncate however serious issue bound longer ensures error happens probability error complex due possibility intuitively bound longer ensures exactly correctly extend due uniformly distribute independent multi fix multiplication perform multiplication truncation offs technique extend setting truncation  approach minimizes overall communication expense perform multiplication truncation protocol participate assume honest majority security semi honest  reverse msb overflow eliminate however extend significant incorrectly assumption msb zero desire compute JxK assume define locally truncate error introduce mirror guarantee correctness define JxK random locally compute therefore JxK limitation approach truncate truncation  multiplication reduce sophisticated technique leverage preprocessing assume preprocessed random compute compute reveal locally everyone compute collectively compute  operation combine computation  perform recall standard multiplication perform locally compute  instead compute replace reveal define JxK multiplication truncation exactly communication message oppose standard multiplication compute immediate approach  communication efficient binary secret secure malicious adversary non interactively compute random binary locally truncate obtain remove obtain jointly sample secret sample generate pre prf securely compute subtraction binary circuit reveal    define computation perform parallel truncation preprocessing stage hence impact overall complexity protocol optimize overall communication instead addition circuit optimize ripple addition subtraction circuit gate additional optimization computation  perform therefore gate per subtraction semi honest subtraction perform locally reveal sufficient session privacy CCS october toronto canada parameter integer preprocess locally compute rand define significant compute rand   rand reveal  routine ripple subtraction circuit jointly compute    reveal define preprocessed online jointly compute compute  output JxK truncation protocol  another advantage protocol compatibility malicious computation  perform  additionally proof demonstrate indeed propose proof along reveal compose however message incorrect reveal message ensure behavior maintain transcript message equality secret reveal detailed description protocol security analysis refer reader public operation useful additively secret JxK JxK JxK   compute locally fix addition subtraction naturally express fix multiplication complement  standard multiplication public fix semi honest  malicious  protocol obtain  byproduct fix multiplication public efficiently JxK JxK vectorized multiplication machine algorithm primary computation matrix multiplication implement series inner matrix inner define  vector naive independent multiplication protocol communication optimize communicate compute preprocessed truncation recall previous semi honest multiplication perform reveal  compute  primary non linear computation  series local transformation computation inner reveal   locally compute   sum masked truncate   additional benefit approach truncation induces error respect overall inner oppose individual multiplication accurate computation generally linear combination multiplication compute communicate  truncate compute secret linear combination beyond bound discus vectorized multiplication malicious adversary appendix conversion machine function efficient switch forth arithmetic multiplication addition binary non linear activation function max pool average etc operation convert representation optimize protocol facilitate efficient conversion arithmetic binary yao elaborate various conversion decomposition JxK decomposition arithmetic convert vector secret JxK input boolean circuit computes sum introduce optimization significantly reduce communication communication complexity approach JxK convert JxK JxK JxK communication naively textbook ripple adder  circuit compute   perform PC binary avoid complexity becomes bottleneck implementation employ parallel prefix adder ppa input computes sum conquer strategy gate naively addition circuit ppa semi honest malicious hence reduce binary communication complexity factor insecure due possibility leak information reveal linear combination however due subsequent randomization distribute operation secure session privacy CCS october toronto canada computation reduce compute execute independent adder FA denote ith  worth traditionally adder chain compute addition however reduce operand communication oppose compute   parallel prefix adder alternatively semi honest private input PC computes JxK JxK setting significantly factor increase communication extraction JxK decomposition JxK decompose binary ith simplify gate relatively optimization remove unnecessary gate parallel prefix adder circuit logic gate optimization implementation brevity refer reader inspect deduce exactly gate remove composition JxK JxK convert binary secret representation arithmetic secret representation effectively circuit decomposition operation slightly reverse input random input random arithmetic therefore former latter JxK generate prf define JxK denotes public nonce JxK define role shift compute FA parallel prefix adder JxK   semi honest optimize private input compute JxK JxK parallel prefix adder regardless reveal define JxK overall conversion gate injection JxK JxK another encode binary promote arithmetic JxK presentation defer explanation technique generalization efficiently compute   joint yao input recall yao evaluator global random useful primitive conversion yao ability input generate JxK semi honest trivial locally generate JxK evaluate garble circuit however malicious verify JxK actually encodes without correctness comm comm generate randomness hash commitment verifies commitment comm  interaction commitment decommitment per input role simply reverse input statistical security parameter commitment capped input label without commitment reveal secret dependent input label computes random linear combination coefficient combination compute combination obtain randomness comm comm hash commitment instead verifies commitment comm  probability incorrect label generate JxK communication source randomness locally sample define yao binary JxK JxK significant permutation locally generate another random sends yield replicate JxK communication malicious sends authenticate ensure indeed sample sends commitment comm comm sends verifies verifies commitment   compute JxK computes conversion communication however JxK computable therefore JxK dependent reveal verification fail abort session privacy CCS october toronto canada binary yao JxK JxK JxK jointly input JxK JxK JxK procedure discus earlier joint yao input compute garble circuit computes xor JxK JxK JxK JxK xor technique communication compute locally semi honest optimize therefore locally compute locally computes JxK JxK yao arithmetic JxK JxK convert yao arithmetic switch yao binary perform composition injection protocol input yao  garble circuit PC  addition circuit sample sample jointly input procedure garble circuit compute JxK JxK JxK JxK reveal JxK arithmetic communicate joint input garble gate semi honest optimize locally compute private input JxK JxK garble circuit reduce factor arithmetic yao JxK JxK jointly input JxK generate JxK JxK JxK garble circuit generate JxK JxK JxK JxK semi honest optimize locally compute computes JxK JxK compute   JabK convert representation allows arbitrary combination efficient custom protocol directly perform computation mixed representation  perform   JabK operation repeatedly compute piecewise linear polynomial function commonly approximate non linear activation function training logistic regression neural network model semi honest security OT oblivious transfer protocol honest majority OT sender receiver helper receives output receiver choice functionality sender receiver helper express previous multi OT knowledge functionality honest majority approach extremely efficient information theoretic security sender helper sample random sender mask message sends receiver helper receiver desire message helper sends receiver recover procedure message compute  JabK simplest multiplication public sender sample defines message receiver defines input message helper therefore OT protocol locally generate replicate zero compute  JabK however valid secret communication alternatively OT procedure parallel sender input receiver input learns message compute   JabK semi honest sufficient  JabK procedure twice parallel crucial technique computation public privately chosen leverage expression   JbK sender per communicate malicious security compute  JabK unfortunately semi honest approach fails malicious primarily due input OT arbitrarily avoid issue perform injection compute JbK JbK  JabK perform locally compute JbK JbK JbK JbK emulate xor within arithmetic circuit compute JDK JbK JbK JbK  JbK conversion compute JabK  locally multiplies perform generic decomposition approach reduces complexity communication compute   JabK injection procedure convert JbK JbK compute   multiplication protocol polynomial piecewise function brings building efficient computation polynomial piecewise function function construct series polynomial denote polynomial public coefficient technique compute compute vector secret session privacy CCS october toronto canada compute compute JxK expression rewrite JxK recall complement therefore significant msb denotes iff implies inequality compute simply extract msb compute extraction obtain binary JbK  extraction perform binary secret complexity communication conversion perform garble circuit complexity decrease increase communication logical compute within garble circuit additional interaction binary secret function express polynomial JxK JxK JxK publicly constant polynomial computation JxK optimize  technique addition coefficient integer computation JxK perform locally JxK however non zero interactive truncation perform EXPERIMENTS demonstrate practicality propose framework implementation training linear regression logistic regression neural network model report efficiency analytical comparison protocol appendix defer detailed explanation implement machine algorithm appendix implementation primitive  library linear algebra library eigen arithmetic perform modulo due significant development implement maliciously secure protocol publicly available code implement report performance semi honest variant framework hinder comparison prior primarily focus semi honest protocol maliciously secure protocol machine experimental setup perform benchmark server equip core  intel xeon CPUs 6GB ram despite core performs computation thread linux command network setting lan 0Gbps connection sub millisecond rtt latency wan mbps maximum throughput rtt latency server employ hardware accelerate aes NI perform random generation protocol hardware core however minimal impact performance implementation almost entirely IO bound utilizes core datasets primarily focus performance privacy preserve machine benchmark synthetic datasets easily variable training feature demonstrate performance training emphasize synthetic data accuracy model training algorithm protocol honestly functionality equivalent refer reader precise accuracy measurement datasets widely mnist dataset contains pixel image handwritten task output linear regression gradient descent protocol linear regression model detailed computation protocol easy framework iteration public randomly subset dataset sample model update report performance iteration per oppose endto primarily easily generalize task throughput linear regression training protocol parameterized feature mini batch label online denote throughput input dependent computation label online offline denote throughput pre processing phase input independent throughput strictly lan online throughput primarily due efficient multiplication protocol preprocessed matrix beaver triple along complex opening procedure protocol online throughput considerably contribution offline phase magnitude efficient overall throughput protocol becomes due elimination expensive beaver triple operation perform offline phase generation truncate compute addition circuit extremely efficient wan protocol faster roughly factor online phase faster overall throughput offline phase minimal impact overall throughput consume roughly percent computation drastic contrast majority computation perform offline phase protocol achieves communication overhead communication complexity online phase protocol effectively identical performs matrix multiplication however offline phase protocol BD exponentiation session privacy CCS october toronto canada communicate per iteration protocol exponentiation achieves asymptotic communication overhead constant due exponentiation protocol propose technique oblivious transfer improves computational efficiency expense increase communication  per iteration lan computationally efficient oblivious transfer protocol achieves throughput exponentiation approach however wan communication overhead bottleneck exponentiation protocol becomes faster report variant throughput regardless technique offline protocol computationally efficient communication due offline phase throughput author propose alternative client aid protocol semihonest client locally performs offline phase distributes server relabel assist client server variant protocol security model notable exception extend malicious advantage throughput offline phase significantly improve however magnitude preprocessing protocol random matrix generate dimension matrix construct communication DB preprocessing simply significant reduction computation communication moreover overall protocol already faster online phase therefore faster regardless preprocessing technique logistic regression comparison regard training logistic regression model iteration update function update function complex linear regression due compute logistic function iteration protocol approximates piecewise linear function switch binary secret scheme relatively efficient computationally negative consequence increase complexity protocol per iteration lan latency impact batch dimension protocol perform iteration per thread moreover increase dimension decrease throughput iteration per magnitude improvement difference primarily attribute garble circuit increase bandwidth expensive operation linear logistic regression offline phase identical extremely efficient offline phase throughput speedup wan increase complexity degrade performance almost protocol online phase protocol performs iteration per achieves iteration per however batch increase rate convergence protocol significantly batch protocol achieves iteration per achieves iteration per offline phase protocol receives almost slowdown difference overall throughput protocol protocol achieves communication overhead approximate logistic function primarily due protocol binary secret  multiplication protocol protocol roughly garble circuit disadvantage approach interaction however protocol achieves reduction communication facilitates throughput lan wan amount parallelism neural network framework particularly neural network network NN mnist dataset contains fully layer consist node respectively layer relu activation function apply piecewise polynomial technique training NN network implementation capable processing training iteration per iteration batch proportionally batch protocol performs iteration per accuracy achieve epoch accuracy online faster overall faster convolutional neural net cnn hidden layer network applies convolutional layer input pixel vector feature fully layer node perform relu activation function detailed depiction implementation overestimate replace convolutional kernel fully layer protocol training iteration per batch iteration per batch estimate convolutional layer fully implement training algorithm achieve equivalent accuracy plaintext model training inference benchmark framework perform machine inference linear regression logistic regression neural network model task model session privacy CCS october toronto canada dimension protocol batch online throughput online offline throughput lan wan linear regression performance iteration per dimension denotes feature batch denotes sample iteration wan rtt latency mbps throughput preprocessing perform OT  cryptosystem faster protocol report denotes  protocol perform model protocol batch comm online MB linear SecureML logistic SecureML NN SecureML cnn chameleon MiniONN communication privacy preserve inference model evaluation linear logistic neural network model lan evaluate benchmark machine cite machine model mnist dataset feature NN denotes neural net fully hidden layer node along node output layer cnn denotes convolutional neural net hidden layer detail approximates convolution layer additional fully layer node already secret along unlabeled feature vector prediction desire evaluate model feature vector prediction label inference evaluation model training propagation neural network hence easily perform framework prior report protocol performance mnist task accuracy model linear cnn evaluate input linear model protocol exactly online interaction exclude input reconstruct output online computation extremely efficient perform inner communicate byte offline preprocessing however slightly along majority communication difference online offline primarily due offline phase optimize throughput oppose latency indeed advantage SSE vectorization instruction offline phase performs SecureML perform prediction slightly due offline phase interaction however achieve communication MB oppose throughput optimize MB improvement protocol almost evaluate prediction SecureML incurs slowdown primarily communication OT offline phase trend evaluate logistic regression model online protocol evaluate input millisecond SecureML protocol approximately millisecond however protocol MB communication MB SecureML difference input evaluate SecureML improvement protocol online phase evaluate model overall SecureML online phase overall difference protocol MB communication MB SecureML recently MiniONN chameleon propose mixed protocol framework evaluate neural network chameleon ABY framework extend however chameleon modifies framework semi honest perform offline phase  protocol chameleon implementation semi honest honest majority addition chameleon protocol operation efficient cannot naturally extend malicious MiniONN model SecureML semi honest protocol extension malicious protocol significantly outperforms chameleon MiniONN protocol hardware online millisecond chameleon MiniONN difference becomes overall protocol millisecond chameleon MiniONN respectively addition protocol communication MB chameleon MiniONN stress chameleon implementation security model MiniONN