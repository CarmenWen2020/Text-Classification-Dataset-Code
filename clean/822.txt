defeat ASLR advanced grain leakage resistant code randomization scheme software exploit rely information disclosure gadget inside victim code absence info leak vulnerability attacker hack blind derandomize address repeatedly probe victim memory crash feasible crash resistant program however target linux kernel crash resistant moreover  crash easily detectable spectre era enables attacker memory corruption vulnerability hack blind without trigger crash speculative execution crash suppression allows elevation memory vulnerability powerful speculative probe primitive leak microarchitectural primitive repeatedly probe victim memory randomization scheme without crash bypass deployed mitigation  attack speculative probe spectre mitigation memory corruption   disclosure primitive practical blind software exploit showcase speculative probe target linux kernel crash sensitive victim blind attack exploit compromise code reuse data attack memory vulnerability bypass spectre randomization defense crucial synergy spectre code reuse threat model fully comprehend attack CCS CONCEPTS security privacy operating security keywords speculative execution code reuse attack introduction complex attack vulnerability software buffer overflow hardware spectre handle non trivial complexity security researcher partition disjoint threat model devise mitigation reduce attack accordingly strategy ignores important synergy threat model overestimate effectiveness mitigation attack reduction focus synergy code reuse spectre threat model speculative probe primitive joint attack code reuse primitive speculative execution reduce requirement exploitation buffer overflow randomization scheme spectre primitive memory corruption opportunity craft spectre gadget mitigation combine insight enable endto exploitation memory corruption vulnerability despite advanced mitigation threat model hack blind memory corruption vulnerability cornerstone software exploitation nevertheless memory corruption vulnerability alone insufficient practical attack harden widespread ASLR implementation alone leakage resistant variant grain code diversity execute memory absent additional info leak vulnerability grant attacker arbitrary memory primitive attacker resort probe primitive hack blind traditionally primitive BROP attack repeatedly probe victim memory access limitation attack trigger detection prone crash limited crash resistant victim ruling target kernel channel spectre spectre era speculative execution vulnerability attacker additional option craft information disclosure primitive channel absence additional software vulnerability nonetheless spectre issue session channel CCS november virtual usa mitigate completely hardware effective remedy practical attack render remain attack exceedingly exploit  spectre style speculative hijack primitive classic software exploitation scenario harden nevertheless directly exploit primitive craft fully fledge spectre disclosure primitive exactly challenge regular hijack presence arbitrary randomization scheme target gadget location memory unpredictable blindside blindside exploitation technique convergence software spectre exploitation blindside speculative execution memory corruption vulnerability powerful speculative probe primitive primitive leak information microarchitectural architectural crash bypassing leakage resistant randomization defense software vulnerability instead indirect poison injection allows attacker bypass deployed mitigation speculative execution attack moreover crash probe execution suppress speculative speculative probe cannot detect exist BROP style defense anomalous crash detection  trap allows blind attacker stealthily probe gadget speculatively execute instance attacker strategy blindly speculative arbitrary memory gadget gadget already sufficient code oblivious code reuse exploit data exploit speculative arbitrary memory gadget allows directly code presence software leakage resistant randomization scheme simplify exploitation demonstrate blindside attack buffer overflow vulnerability linux kernel crash sensitive target remain BROP style attack memory corruption vulnerability kernel exploit implement speculative probe collectively bypass variety randomization recent  version entropy spectre gadget blindly probe kernel version ultimately obtain compromise exploit data software exploit entirely speculative execution leak password hash memory defense eliminate memory error despite thirty research speculative execution essential performance purpose CPUs argue mitigation blindside attack convergence software exploitation speculative execution attack generalizes speculative execution defense focus attack poison microarchitectural component target buffer BTB return stack buffer  data buffer steer speculatively blindside generalizes manipulation traditional memory corruption similarly generalizes BROP style exploitation microarchitectural leak information memory content contribution contribution investigate speculative execution amplifies severity software vulnerability memory corruption error introduce speculative probe primitive showcase primitive blindside attack exploit buffer overflow speculatively leak data derandomize kernel address ultimately achieve leakage sensitive data arbitrary code execution source code exploit demo video available http  net project blindside optimization attack  spectre attack efficient flush reload covert channel kernel physmap evaluate blindside variety randomization spectre mitigation effective background code reuse attack code reuse attack CRAS exploit memory corruption vulnerability bound oob writes critical data code pointer later program hijack redirect chain gadget exist code fragment implement malicious payload privilege escalation scenario attacker typically exploit unprivileged application victim machine CRAS variation OS kernel disrupt CRAS KASLR kernel randomizes address code data memory load boot KASLR traditional exploitation attempt usually kernel crash successful kernel exploit additional info leak vulnerability leak address code data code reuse payload however limited function pointer leak reveal location gadget code mitigate info leak efficient grain randomization  scheme randomize code layout function assignment purpose register response researcher devise  attack exploit info leak vulnerability leak code layout craft code reuse payload recent leakage resistant scheme implement execute memory  code software instrumentation selective pointer mask variety hardware isolation feature commodity architecture intel MPX mpk ept split tlb MMU MPU  scheme prevent code memory vulnerable advanced code reuse attack rely code pointer leak data memory data attack code pointer corruption hijack blind code reuse attack blind CRAS rely info leak bug divulge location gadget instead exploit target application crash resistance probe address session channel CCS november virtual usa return libc probe attack apache web server disclose location libc essentially repeatedly corrupt return address vulnerable function program return address libc target server recovers crash spawn similarly BROP demonstrate blind return orient program rop attack cra utilize gadget function return BROP blindly probe rop gadget instead function signal crash hang behavior demonstrates attack crash resistant client program arbitrary memory probe however attack apply crash resistant code target crash sensitive kernel cache attack cache attack exploit timing channel cpu cache detect victim memory access leak information variant flush reload prime probe flush target cache victim access reloads cache latency reload cache victim access cache without memory attacker victim detects access cache attacker eviction memory address cache cache associativity access eviction replaces cache correspond cache briefly architecture cache eviction correspond data offset respective memory cache correspond eviction hence attacker access eviction prime target cache potential victim operation target cache probed eviction access latency probe cache signal victim activity speculative execution attack CPUs execute instruction ahead schedule increase performance hide memory access delay predict outcome decision cannot speculatively execute instruction prediction CPUs multiple predictor conditional indirect pointer instruction speculation park instruction completes instruction retire prediction fails cpu discard park trace architectural register memory however speculative execution observable microarchitectural processor cache instruction privileged data observation numerous attack coin speculative transient execution attack local attacker  data kernel attack massage microarchitectural manipulate predictor speculative execution specific gadget access sensitive data carefully gadget trace data microarchitectural  cache attack instance spectre  attack attacker kernel gadget perform speculative bound access syscall array array array attacker statement speculatively execute training predictor sequence bound speculatively arbitrary conditional index array finally cache attack infer array index leak array similarly spectre BTB attack attacker poison target buffer BTB speculatively hijack indirect target repeatedly issue indirect collide user address carefully target gadget attacker cache attack exfiltrate data kernel mitigation attack perform hoc array index mask thwart user controllable speculative bound access prevent user indirect poison hardware stall indirect speculation  none mitigation affect blindside exploit conditional mispredictions spectre  rely masked user array gadget exploit speculative hijack  rely indirect mispredictions poison BTB buffer threat model assume realistic threat model attacker execute code target machine assume attacker access software vulnerability  code allows overwrite code pointer attacker goal exploit vulnerability escalate privilege scenario browser OS kernel hypervisors mostly focus linux kernel mitigation enable defend software vulnerability linux kernel enforces mitigation hijack attack dep stack canary possibly grain leakage resistant randomization enforces  SMAP NX physmap prevent   attack defend fault speculative execution attack linux kernel enforces kernel isolation kpti mitigate meltdown encodes swap entry mitigate foreshadow flush microarchitectural buffer mitigate MDS defend spectre linux kernel restricts indirect speculation instead  mitigate speculative hijack code pointer utilizes array index mask mitigate unauthorized bound memory access speculative  ability corrupt code pointer speculative probe relies ability speculatively hijack target victim kernel session channel CCS november virtual usa victim code snippet exploit purpose hybrid spectre  BTB snippet expression ptr conditional allows attacker speculative execution indirect via ptr function pointer enables speculative hijack contrast spectre BTB speculative hijack indirect misprediction hijack corrupt ptr software vulnerability code reuse however unlike code reuse speculative execution via conditional ensure corrupt pointer dereferenced speculative later aborted execution microarchitectures multiple speculation indirect speculate irrelevant purpose speculative probe induced speculative execution indirect cpu speculative execution due indirect target prediction execution speculation corrupt function pointer execute defense retpoline cripple speculation speculative hijack robust remove unnecessary speculative instruction essence implement speculative probe attacker deviate slightly typical code reuse workflow exploit memory corruption vulnerability corrupt function pointer attacker within speculative execution conditional execution processor speculative execution instruction straightforward instance detailed later kernel indirect instruction away conditional execution prediction conditional attacker option prime PHT BTB user kernel tweak input function pointer dereference dynamic predictor directly corrupt data conditional software vulnerability cpu skip latter option simplest exploit extra effort speculative probe code reuse relatively instance function pointer corrupt vulnerability potential candidate indirect site code reuse ideal site speculative probe exploit speculative   speculative hijack snippet attacker repeatedly hijack speculative execution target craft variety speculative probe primitive tailor specific exploitation scenario instance classic KASLR code reuse scenario specialized probe primitive address code heap physmap memory kernel practically physical memory mapping heap code reuse payload grain randomization albeit efficient arbitrary memory primitive implement speculatively distinguish stage stage primitive stage denotes fundamental probe primitive blindly without priori knowledge code location layout stage primitive stage primitive gadget target specific exploitation scenario primitive executable code probe gadget gadget probe former category primitive heap physmap data probe target inside heap probe arbitrary memory content spectre gadget spectre probe latter primitive underlie mechanism probe address corrupt chosen function pointer subsequently dereferenced speculative execution afterwards cache llc attack detailed later optimization detect cache trace target code fragment data speculative execution corrupt function pointer discus stage stage primitive code probe code reuse attack identify location code memory presence coarse grain KASLR kernel code already sufficient disclose predictable location gadget probe code consists attacker software vulnerability overwrite victim code pointer cpu predictor dereference corrupt code pointer speculatively kernel code executes attacker prime cache eviction preparatory attacker issue syscall speculatively hijack desire location location invalid executable crash speculative execution mask exception however target location contains arbitrary invalid code executable execute code speculatively correspond cache subsequently probe cache attacker determines address cache chosen target executable gadget probe presence grain possibly leakage resistant randomization code probe alone insufficient gadget instead blindly specific gadget randomize code gadget traditional code reuse fragment speculative execution spectre gadget speculative probe primitive specific signal cache session channel CCS november virtual usa stage primitive corruptible function pointer unmapped memory gadget unmapped code gadget involve kernel unlike leak code gadget corrupt function pointer contains probe target successful probe attempt function pointer code probe induces signal cache speculatively execute target gadget spectre data data load address data corruptible function pointer data data instruction purpose mov  mov   mov  load address corrupt access probe target induce signal cache memory kernel mov    load array corrupt probe gadget activity attacker cache spectre gadget target corrupt function pointer activates cache probe target plus corrupt attacker gadget priori primitive stage primitive access probe target induce signal cache corruptible function pointer data unmapped purpose gadget instruction mov  mov   load probe target corrupt memory unmapped data kernel leak data speculative execution gadget chain dereferences function pointer target gadget corrupt input successful probe data gadget induces signal cache reading probe target load probe target data corruptible function pointer data data purpose gadget instruction mov  mov   mov   load pointer data corrupt memory access probe target induce signal cache readable data kernel leak data speculative execution gadget chain dereferences function pointer target gadget input corrupt successful probe attempt probe input data contains probe target probe induces signal cache reading probe target retrieve data load target data corruptible function pointer data data data purpose gadget instruction mov  mov   mov  load target corrupt access probe target induce signal cache memory kernel mov    load array corrupt array probe spectre previous spectre leak actual regular spectre verify quickly address contains specific byte brevity latter configures memory ensure dereference target cache memory contains spectre gadget chain dereferences originate corrupt load load load probe primitive arrow successful probe attempt dot unsuccessful cache behavior code fragment diverse optimize limit gadget announce presence easily detectable signal instance target gadget dereferencing pointer attacker correspond cache activate gadget probe illustrate principle attacker arbitrary microarchitectural due access code data combination thereof blindside attack target cache behavior attacker efficiently reliably focus gadget successful execution activates cache attacker suppose probe spectre gadget buffer overflow overwrites contains function pointer overwritten overflow attacker target spectre gadget consumes configure signal cache probe code location signal indicates successful detection spectre gadget vulnerability specific aspect register overwritten memory buffer overflow blindside agnostic activity target cache appropriate gadget gadget probe implementation focus gadget behavior session channel CCS november virtual usa  verify activation cache attacker however strict requirement elaborate fingerprint unnecessary practical exploitation exploit gadget detection behavior slightly instance suppose traditional rop gadget pop reg ret register reference target cache gadget detect gadget attacker callsite register upon successful completion gadget code dereferences register return appropriate cache activate code activates cache infer behavior target gadget finally helpful discus usefulness gadget probe leak spectre gadget already spectre gadget attacker probe address directly however spectre gadget convenient exploitation discus unable bypass  randomization scheme gadget probe limitation analysis cache trace gadget additional effort behalf attacker data probe stage primitive attacker launch exploit solely rely stage efficient instance probe entire address spectre gadget gadget probe cache noisy attacker actual exploit address data heap physmap regardless content exploit scenario data probe allows attacker kernel heap efficiently gadget access memory via chain dereferences gadget attacker corrupt pointer load another target verify target indeed mapped data cache attacker offset cache activate probe succeed mapped kernel data probe merely address data sufficient instance attack location specific user physmap moreover later detailed user physmap useful covert channel alternative conveniently accommodate exploitation technique probe allows attacker scan memory pointer signature pointer probe target attacker cache procedure corrupt function pointer target gadget attacker pointer another pointer subsequently dereferences cache correspond attacker address spectre probe convenient primitive spectre gadget scan content memory directly spectre gadget serf universal primitive dump content memory instance dump content kernel code data spectre probe alternative probe data physmap leak memory content byte byte leak mode however explicit probe cache activate moreover cache increase slows attack efficiently spectre probe mode illustrate corrupt function pointer target spectre gadget attacker configures memory dereference cache spectre gadget attacker blindside greatly reduces cache probe scan technique applies data code discus mitigation however immune spectre probe leak code attacker instead gadget probe circumstance optimization reduce measurement examine llc cache access due code execute data access measurement cache conflict eviction probe signal eviction associate access cache probe falsely imply signal false positive cache access default footprint cache perform void probe target memory address actual probe avoid cache probe target address cache attack noisy signal verify positive verification adjust offset probe target another cache cache signal signal positive probe target sought memory leverage flush reload sensitive replace faster resistant flush reload attack beneficial probe achieves mainly measurement repetition per probe signal confidence unlike validate signal appendix detailed comparison primitive however unlike attacker victim memory kernel heap physmap implicitly user kernel efficient covert channel specifically attacker buffer user memory MB signature kernel mapping buffer attacker relies spectre probe session channel CCS november virtual usa scan physmap signature MB interval attacker spectre probe access buffer via kernel mapping perform instead user mapping leak information available attacker rely channel detect MB user memory alignment resort spray KB unique attach signature reduce improves probe average report literature exploit leak kernel heap user within exploitation proof concept poc exploit exploit stage code probe primitive bypass standard code KASLR stage data probe bypass heap KASLR finally stage probe primitive detect location rop payload allows code reuse exploit gain reliable code execution kernel heap buffer overflow vulnerability exploit stage code probe gadget probe stage spectre probe primitive leak arbitrary information victim kernel data primitive architectural data exploit microarchitectural speculative code reuse exploit leak password hash exploit structurally bypass grain leakage resistant randomization mitigation architectural code reuse CFI deployed secure production kernel exploit spectre probe primitive powerful traditional arbitrary memory primitive demonstrate directly code enable architectural code reuse software execute memory  kernel ultimate goal exploit elevate privilege execute rop payload craft disclose gadget disable SMAP  protection user code credential compromise password briefly discus vulnerability initialization exploit probe primitive finally discus achieve privilege escalation stage perform attack linux kernel version compile gcc mitigation enable machine intel xeon cpu 0GHz GB ram report median marginal deviation across probe repetition minimum achieve rate error rate attempt idle appendix detail impact repetition probe primitive vulnerability exploit heap buffer overflow linux kernel cve bug applies AF packet socket  buffer  detailed vulnerability exploit exploit vulnerable buffer initialize fix offset beyond buffer overwritten exploit vulnerable serf corrupt adjust fix offset non linear bound KB due offset unsigned detail bound trigger interested reader  blindside vulnerability primitive cve cve cve speculative probe initialization speculative probe exploit conditional indirect combination code related socket socket adjacent bound primitive corrupt function pointer consume indirect probe trigger execution conditional indirect combination  ensure conditional towards indirect default non corrupt socket purpose training execution conditional towards indirect trigger speculation flip direction conditional simply corrupt conditional data bound vulnerability ensure speculation succeed target indirect spawn thread core constantly evict conditional data cache maximize speculation exploit coarse grain KASLR exploit focus apply blindside stock linux kernel default mitigation KASLR kernel image discover kernel image code adjacent data perform code probe memory GB MB kernel image MB MB restart probe unmapped kernel image mapped align MB kernel image location gadget executable probe per repetition per cache average around kernel image average kernel heap rop payload leak location memory payload pointer inside payload data probe kernel heap probe heap gadget probe mov rax  ptr rbx xaa mov rax  ptr rax mov rax  ptr rax listing gadget uncore pmu kernel image offset session channel CCS november virtual usa data probe instruction probe instruction rbx register socket corrupt speculative probe probe heap memory TB memory empirically ideally GB unmapped gap 1GB heap avoid gap instead 8GB 1GB data probe per repetition per cache average around heap average rop payload heap probe rop payload location essentially location bound capability rop payload location probe discover heap byte vulnerable buffer bound align signal probe primitive disclose location target rop payload target location probe per average repetition per cache average around target heap exploit speculative data attack exploit assume mitigation code reuse speculative execution enable exploitation scenario code probe detailed earlier gadget probe primitive stage spectre probe primitive spectre gadget spectre gadget probed gadget probe function prologue  mov rdi   rbx  mov  ptr rdi  mov rbx  ptr  cmp   cmp byte ptr  mov esi  ptr   mov rdx  ptr  mov eax esi  mov rax  ptr rdx rax listing gadget del  kernel image offset  rdi register packet socket probe gadget memory corrupt function pointer probe target gadget instruction  leaf signal cache data leak rax array pointer rdx pointer dereferenced data pointer array pointer load non linear bound rdi register gadget valid pointer dereference signal target cache important aspect spectre gadget optimization execution exploit gadget bypassing mitigation target gadget resistant spectre array index mask randomization mitigation gadget feature function branching code resistant function randomization construction experimentally confirm gadget resilient  recent grain function randomization scheme propose intel currently mainline linux kernel moreover gadget input derive rdi register cannot randomize register randomization argument purpose register hence spectre gadget internal entropy probe grain leakage resistant randomization furthermore code user input guard speculative execution attack lfence array index mask gadget longevity notably target spectre gadget available linux kernel recent version survive linux kernel release across attacker vulnerability perform blindside attack recent production linux kernel version blind kernel version optimization cache leak kernel image location pointer kernel image heap pointer enum constant data pointer pointer kernel image array pointer code array pointer distinguish code probe discover array allows signal cache optimization function alignment gadget signal execute function entry byte function entry alignment spectre gadget probe code location per repetition per cache average around gadget average code enable flush reload leak kernel heap exploit probe mapped user signature physmap MB enable probe per repetition per cache average around target user average physmap leak password hash spectre probe assume mitigation architectural code reuse attack leak sensitive information spectre probe aim leak password hash data attack session channel CCS november virtual usa load content etc shadow file cache perform unsuccessful authentication  spirit prior hardware attack memory content etc shadow file prefix spectre probe leak byte KB verify byte offset upon leak password hash snippet probe spectre probe per repetition per cache target cache average around snippet assume kernel heap crack password hash assume default sha password hash linux node gpu cluster bruteforce alphanumeric password roughly amazon EC exploit software  gadget probe primitive leak gadget regardless deployed randomization technique target gadget however observable trace llc furthermore analyze suitability gadget gadget probe burdensome rop chain gadget successful exploitation exploit spectre probe primitive powerful arbitrary memory primitive speculatively code bypass mitigation simply aim spectre probe kernel image location leak code content bypass software  technique kernel simply reading code code randomization strategy trivially bypass software skip nest speculative execution propose enhance hardware intel MPX bound defer speculative execution software implementation pointer mask bypass gadget skip mask operation complicate exploit pointer mask anyway kernel non linear address investigation execute memory defense rely hardware enforce permission ept spectre probe due speculative execution load data cache marked execute ept aliasing leak entire kernel code encounter multiple issue memory address due address aliasing handle CPUs aliasing issue stack instruction spectre gadget load address leak alias address earlier stack instruction stall introduce load logic disrupt signal address issue option chain multiple speculative gadget perform stack pivot execute spectre gadget confirm strategy eliminates issue blindly probe another gadget requirement opt simpler approach namely poc switch legacy int syscall interface misalign kernel stack regular syscall interface another aliasing issue lock prefixed load instruction vulnerable code disrupt signal leak offset address issue rely multiple vulnerable address lock prefixed load instruction apply aliasing remedy leak kernel code byte due residual aliasing issue recover byte complicate exploit simply perform disassembly straightforward code inference attack probe mapped user enable exploit dumped entire kernel code leakage spectre probe byte per repetition per cache leak entire kernel code around exploit finalization finalize exploit escalate privilege exploit simply crack password exploit exploit trigger hijack regular nonspeculative execution divert rop chain gadget disclose code rop chain disables SMAP  finally  execution user memory  execute directly user release attacker complexity rop attack user code essentially update credential  listing code snippet update credential rop chain disclose rop payload location register another convenient gadget specifically rax rdi transfer essentially update register rax rdi CR register disable SMAP  achieve transfer rax rop payload pop rdi rop payload preparation payload disclose location pointer payload rop payload location pop rdi ret gadget pop privilege escalation user code restores kernel stack pointer return hijack indirect normal execution instead instantly context switch userspace  instruction resume normal execution hijack indirect ensures lock resource release detailed analysis evaluate throughput probe primitive reliably correspond exploitation additional effectively exploit kernel indirect implement speculative hijack building blind probe stage exploit disclose kernel code implement session channel CCS november virtual usa obj obj fence obj obj obj obj fid listing code snippet kernel module comment illustrates target function fid hardcoded function distinct function usable gadget inform probe stage refer interested reader appendix detailed analysis impact repetition rate speculative probe primitive gadget analysis capstone  statically analyze vulnerable linux kernel version proof concept exploit potentially exploitable indirect kernel version  interactive  prefer  capstone analysis perform backward analysis indirect reference information  verify identify indirect speculative probe hinder mitigation speculative execution attack recent  linux kernel version generic mitigation retpoline enable intel cpu microcode update    mitigation mitigation resistance evaluate speculative probe ability bypass mitigation explicitly seek prevent speculative hijack retpoline    purpose kernel module indirect guard conditional mock heap listing function pointer function unique easily measurable fingerprint cache enable predictor towards indirect speculatively facilitate clflush  operation training perform iteration per configuration iteration consists described probe cache reveal function speculatively execute configuration apply mitigation individually without flush function pointer verify mitigation correctly nudge speculative execution towards training function finally thread thread continuously aim   prevent indirect target poison across logical cpu core mitigation prevent speculative execution training function rate mitigation however cpu speculatively execute indirect target function rate across mitigation flush target function training function defense FP avg avg thread execution none retpoline  thread execution none   blindside speculative probe mitigation rate indicates percentage iteration function FP execute speculatively avg indicates average iteration addition intel  cpu evaluation confirm intel xeon xeon core CPUs skylake kaby coffee microarchitectures respectively amd ryzen ryzen CPUs zen zen microarchitectures overall confirm speculative probe effective linux microarchitectures harden mitigation availability indirect indirect exploitable speculative probe relatively conditional execution furthermore closer indirect conditional cycle speculation available instruction execute speculatively target indirect prevalence exploitable employ static analysis conservative definition dependent indirect indirect dependent conditional conditional target dominates indirect target indirect simplicity analysis cap maximum instruction analysis interprocedural multiple stack conditional caller function contains indirect exclude additional return conditional indirect depicts gathering shortest distance instruction indirect kernel closest precede conditional depends conservative analysis indirect  nearby conditional vast majority indirect conditional instance instruction away closest precede conditional around instruction away session channel CCS november virtual usa percent instruction IB closest dependent CJ distance cdf axis instruction indirect IB closest precede conditional CJ dependent axis indirect distance account indirect respectively speculation potential execute cpu cycle confirms indirect indeed execute within speculation ample speculative gadget execution gadget dereferences proof concept exploit interested memory dereferencing gadget register rbx rdi dereferenced attacker specify however exploit rely register interprocedural analysis without return gadget instruction chain memory dereferences originate purpose register gadget template described earlier gadget offset kernel image gadget offset memory dereferencing instruction chain dereferences counting purpose gadget gadget numerous gadget memory dereferences kernel codebase significantly gadget chain dereference furthermore distribution gadget frequency per purpose register amd convention intel gadget memory dereferences via callee register rbx rbp highly prevalent register preserve execute function persistent computation function argument register rdi rsi rdx rcx callee register function prologue compute register scratch register rax highly computation explains available gadget finally memory dereference gadget source register rbp happens local variable function stack frame although spectre gadget source dereferences source dereferences register spectre register spectre rax rbx rcx rdx rsi rdi rbp rsp gadget chain dereferences originate purpose register fitting gadget sufficient vulnerability already pre load spectre gadget input relax template spectre gadget available overall attacker gadget register originate memory access across register memory  prevent probe blindside probe rely ability memory error vulnerability speculative execution hinder former variety memory safety document literature expensive limited applicability moreover attacker opt vector corrupt code pointer speculative execution speculative memory corruption cpu bug  hinder latter exist spectre mitigation treat indirect potentially dangerous instance building spectre  mitigation fence instruction conditional shortly indirect instruction unfortunately analysis gadget pervasive strategy severely limit conditional benefit speculation performance gain detect probe unlike BROP style probe  mechanism detect blindside probe hardware option future performance monitoring  interrupt software execution detect excessive crash exception speculative execution however regular execution speculative execution prone accidental exception hijack due relatively frequent mispredictions hence speculative anomaly detector prone false positive hardware speculative  trap hinder probe blindside probe rely microarchitectural covert channel hinder probe covert channel however particularly challenge speculative probe attacker arbitrary covert channel detect specific unaligned gadget etc moreover probe context victim program partition microarchitectural resource security session channel CCS november virtual usa domain helpful hardware enforce speculative execution speculative execution attack none proposal practical applicability related complement related already focus probe attack software derandomization attack microarchitectural attack software exploitation probe attack recent probe attack focus information hiding defense randomization building pointer arbitrary memory probe scan address entropy hidden thread spray probe attack entropy thread local hidden attacker spawn thread allocation oracle exploit memory  behavior craft allocation probe max entropy hidden crash defense prior probe attack protects valuable target hidden  trap code data probe attempt immediately flag detection employ explicit detection anomalous probe crash allocation etc option simply alert upon detection anomalous sophisticated technique instead trigger randomization authentication patch contrast exist attack blindside relies speculative probe primitive stealthily leak microarchitectural  target bypass defense derandomization attack already leakage resistant scheme execute memory code scheme vulnerable generative attack script environment javascript data driven disclosure attack presence information disclosure primitive however without primitive attack software limited  independent  attack massage primitive ASLR contrast blindside absence information disclosure primitive blindly craft primitive despite grain leakage resistant randomization scheme periodically randomize address invalidate leak information attacker attack randomization interval frequent interval costly commodity kernel scheme garble code immediately invalidate leak code knowledge attacker indirectly infer code layout microarchitectural attack microarchitectural attack classic cache channel attack recent attack primarily focus crypto implementation microarchitectural attack software exploitation attack typically channel disclosure mimic limited memory primitive fault attack rowhammer mimic limited memory primitive attack channel ASLR instance leak information MMU induced cache access predictor load attack focus specifically kernel ASLR KASLR derandomizing kernel address TLBs predictor cache prefetchers hardware transactional memory speculation nonetheless attack cannot grain randomization scheme combine channel attack speculative execution vulnerability leak arbitrary vulnerability target pervasive mitigation effort commodity platform contrast blindside bypass mitigation speculative execution attack bypassing grain leakage resistant randomization conclusion code reuse attack defense extensively decade community  attention attack concerned speculative execution vulnerability assumption understood code reuse attack stable revisit assumption uncovered complex interaction traditional code reuse emerge speculative execution threat model generalize blindside exploitation technique leverage underexplored speculative execution crash execution suppression craft speculative probe primitive software exploitation primitive powerful stealthy BROP style attack kernel memory corruption vulnerability without crash bypassing spectre randomization mitigation