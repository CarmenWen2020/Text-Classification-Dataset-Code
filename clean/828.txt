permissionless blockchains protocol bitcoin inherently limited transaction throughput latency effort address issue focus chain payment channel combine payment channel network pcn enable unlimited payment without access blockchain register initial capacity channel approach pave latency throughput payment deployment privacy concern technical challenge related inherently concurrent payment sufficiently foundation privacy concurrency PCNs formal definition universal composability framework practical provably secure fulgor rayo fulgor payment protocol PCNs provable privacy guarantee PCNs fully compatible bitcoin script however fulgor protocol therefore prone deadlock concurrent payment currently available PCNs instead rayo protocol PCNs enforces non progress concurrent payment terminates impossibility non progress necessarily weaker privacy core fulgor rayo multi hop HTLC smart contract compatible bitcoin script conditional payment reduce communication overhead respect previous approach performance evaluation fulgor rayo payment intermediate user thereby demonstrate feasibility deployed CCS CONCEPTS security privacy security requirement distribute security privacy protection keywords payment channel network bitcoin scalability privacy concurrency introduction bitcoin fully decentralize digital cryptocurrency network widely adopt alternative monetary payment instead accounting payment ledger locally maintain trust financial institute bitcoin blockchain database replicate mutually distrust user around update global consensus algorithm proof nevertheless permissionless consensus algorithm limit transaction rate transaction per whereas payment network visa peak transaction per forethought bitcoin user importantly payment scalability important concern bitcoin community research effort dedicate overcome important burden bitcoin payment channel realize chain payment flourish promising approach overcome bitcoin scalability issue nutshell user payment channel transaction blockchain lock bitcoins deposit secure bitcoin smart contract chain payment perform locally distribution deposit balance finally user payment channel perform another bitcoin transaction balance blockchain effectively closing payment channel manner blockchain payment channel possibly payment user thereby reduce load blockchain improve transaction throughput however approach limited payment user channel interestingly principle leverage payment channel sender receiver capacity payment effectively payment channel network pcn session blockchains CCS october november dallas TX usa challenge overcome pcn caters deployment user payment payment credit network fully fledge pcn issue liquidity network formation rout scalability concurrency privacy others bitcoin community identify challenge nevertheless PCNs immature challenge thoroughly foundation privacy concurrency PCNs interestingly exists inherent privacy challenge payment channel necessarily improve privacy bitcoin payment longer blockchain however  community pcn sufficient privacy guarantee recent research propose privacy preserve protocol payment hub network user perform chain payment unique intermediary unfortunately extend multi hop PCNs currently exist effort define  pcn lightning network emerge prominent pcn bitcoin community however operation privacy guarantee pcn instance computation maximum rout payment intermediate user reveal capacity payment channel sender thereby leak sensitive information additionally bitcoin smart contract lightning network enforce atomicity update payment channel payment reveal hash user intermediate user derive plethora academic privacy guarantee bitcoin payment bitcoin blockchain exists rigorous analysis privacy guarantee desirable PCNs lack rigorous definition protocol threat model privacy notion hinders formal security privacy analysis ongoing attempt alone development provably secure privacy preserve concurrency challenge consensus algorithm proof bitcoin eas serialization concurrent onchain payment miner access concurrent payment easily serialize predefined sort payment fee blockchain however longer pcn bulk chain payment blockchain cannot serialize consensus moreover individual user cannot avoid concurrency issue easily payment involve user apart payer payee PCNs lightning network payment aborted payment channel capacity possibly allocate another flight payment concurrently however deadlock starvation situation none flight payment terminates summary although concurrent payment likely PCNs user chain payment inherent concurrency issue thoroughly investigate contribution contribution formalize security privacy notion pcn namely balance security privacy sender receiver anonymity universal composability UC framework concurrency issue PCNs protocol fulgor rayo tackle issue strategy fulgor protocol concurrency propose somewhat payment network credit network deadlock none concurrent payment overcome challenge rayo protocol PCNs guarantee non progress rayo ensures concurrent payment terminates characterize arguably surprising tradeoff privacy concurrency PCNs demonstrate pcn enforces non progress inevitably reduces anonymity sender receiver payment thereby weaken privacy guarantee fourth formally multi hop hash lock contract multi hop HTLC smart contract core fulgor rayo contrast lightning network ensures privacy user payment payer payee formally define multi hop HTLC contract efficient instantiation recently propose zero knowledge proof ZK  improves previous proposal reduce data MB MB prover verify moreover multi hop HTLC bitcoin script thereby seamlessly deployed PCNs independent finally implement prototype fulgor rayo python evaluate communication perform payment privacy preserve payment intermediate user incurs MB communication overhead protocol pcn privacy preserve payment additionally evaluation fulgor rayo cater user reasonably overhead reduce optimize implementation organization overview background defines tackle overview fulgor rayo privacy preserve PCNs detail fulgor protocol describes concurrency PCNs detail rayo protocol describes implementation evaluation discus related concludes session blockchains CCS october november dallas TX usa illustrative payment channel solid denote bitcoin address balance dash bitcoin transaction denotes lock contract user along tick denotes signature validate transaction denote payment channel dash arrow denote temporal sequence alice deposit bitcoins opening payment channel bob bob chain finally payment channel recent balance background overview notion payment channel payment channel network payment channel payment channel enables bitcoin payment user without commit payment bitcoin blockchain cornerstone payment channel deposit bitcoins multi signature address user guarantee bitcoins refund mutually channel expires overview payment channel refer reader detail illustrative depict alice payment channel bob initial capacity bitcoins opening transaction alice timeout payment channel alice chain bob adjust balance deposit bob chain payment augments balance bob reduces alice chain payment capacity payment channel exhaust payment channel closing transaction blockchain transaction sends deposit bitcoins user accord recent balance payment channel payment channel depict unidirectional channel payment alice bob bidirectional channel define overcome limitation chain payment direction bidirectional payment channel essence unidirectional version technical challenge consists direction channel assume payment channel balance bal alice bob assume technically bidirectional channel user contribute fund deposit opening transaction however proposal bidirectional channel deposit  illustrative payment pcn non bold bold capacity channel payment alice bob alice bitcoins bob via carol edward  therefore payment bitcoins payment amount plus fee bob chain bitcoin alice payment channel balance bal alice bob alice benefit bal balance bob benefit bal discrepancy consists bob alice previous balance invalidate recent invalidation technique propose refer reader detail bitcoin protocol update recently fully payment channel transaction malleability along feature bitcoin protocol recent adoption segregate witness pave implementation PCNs bitcoin blockchain payment channel network pcn pcn graph vertex bitcoin account payment channel vertex associate non negative denotes fee payment denotes amount remain bitcoins explanation bidirectional channel direction network perform chain payment user channel payment channel payment user depends capacity available along user fee user assume bitcoins payment successful link capacity fee initial payment minus fee intermediate user successful payment subtle difference bidirectional channel alice bob bob return alice bitcoins already paid however unidirectional channel bob limited alice capacity bob alice independently bitcoins alice nevertheless simplification greatly understand propose algorithm easily extend bidirectional channel session blockchains CCS october november dallas TX usa decrease ensure receives exactly bitcoins payment fee illustrative payment assume alice bob bitcoins payment bitcoins bitcoins plus bitcoin fee user payment capacity link alice carol reduce additionally carol fee bitcoins reduce capacity link carol edward instead bitcoins link edward  capacity link  bob PCNs concept payment channel PCNs already attract attention research community exist ongoing implementation pcn bitcoin lightning network emerge prominent bitcoin community alpha implementation release recently pcn propose improve scalability issue bitcoin blockchain payment ethereum rout PCNs important task PCNs capacity sender receiver network topology user opening payment channel publicly available blockchain additionally gossip protocol user broadcast existence payment channel furthermore fee user public sender locally calculate sender receiver assume sender chooses accord criterion nevertheless selection orthogonal payment PCNs payment along payment channel update capacity payment channel accord payment amount associate fee operation important challenge atomicity capacity channel illustrative payment alice  HTLC contract  alice user bitcoin payment channel finally receiver release bitcoin payment channel simplicity assume payment fee update none channel channel loss bitcoins user user bitcoins user correspond bitcoins previous proposal lightning network consists smart contract hash lock contract HTLC contract lock bitcoins release contract fulfil contract define hash chosen uniformly random amount bitcoins timeout HTLC alice bob bob alice bob bitcoins elapse alice bitcoins illustrative HTLC payment depict simplicity assume payment fee payment amount bitcoin sender receiver release receiver sender detail receiver  sends sender alice alice HTLC effectively payment bitcoin HTLC payment channel receiver receiver payment payment channel reveals allows fulfill contract capacity payment channel important user HTLC outgo payment channel timeout HTLC incoming payment channel manner user bitcoins predecessor bitcoins successor offline user outsource monitoring fulfillment correspond HTLC contract associate payment channel although HTLC fully compatible bitcoin important privacy leak easy hash uniquely identifies user specific transaction implication collude user trivially derive payment leveraged reconstruct identity sender receiver HTLC statement uploaded blockchain due  intermediate user payment observer easily route payment payment propose novel multi hop HTLC smart contract avoids privacy ensure intermediate user loses bitcoins important issue largely understudied PCNs handle concurrent payment payment channel proposal simply abort payment balance payment channel however approach description instead recent proposal sequence bitcoin blockchain collude recover identity contract session blockchains CCS october november dallas TX usa deadlock situation none simultaneous payment terminates propose payment protocol ensure non progress concurrent payment terminates moreover inherent tradeoff concurrency privacy fully distribute payment network definition formalize pcn underlie operation discus attacker model security privacy goal ideal functionality proposal overview throughout description implicitly assume algorithm input blockchain publicly user definition payment channel network pcn pcn define graph bitcoin account currently payment channel pcn define respect blockchain equip operation   described  input bitcoin address initial channel capacity timeout fee operation authorize bitcoins  creates payment channel channel identifier uploads return otherwise return  input channel identifier balance distribution bitcoins lock channel operation authorize  remove correspond channel balance return otherwise return input channel identifier payment payment channel sender receiver payment channel balance fee operation decrease balance payment channel return otherwise none balance payment channel modify operation return attacker model security privacy goal computationally efficient attacker network spawn user corrupt arbitrary subset adaptive fashion user corrupt internal attacker message user attacker assume communication  user payment channel confidential TLS finally attacker arbitrary message behalf corrupt user adversary identify security privacy notion balance security intuitively balance security guarantee honest intermediate user operation specify definition lose coin user involve operation corrupt serializability execution pcn serializable concurrent execution operation exists equivalent sequential execution privacy intuitively privacy guarantee operation involve honest user corrupt user outside payment information payment relationship anonymity relationship anonymity simultaneous successful operation  honest intermediate user corrupt intermediate user cannot  probability ideal functionality model user network model interactive turing machine communicate trust functionality via secure authenticate channel model attacker probabilistic polynomial machine additional interface user corrupt query interface adaptively upon corruption user attacker internal incoming outgo communication rout thorough assumption model anonymous communication user network ideal functionality  propose furthermore assume existence blockchain model trust append bulletin correspond ideal functionality FB maintains locally update accord transaction user execution user pcn distinguish message FB sends transcript denote entry model corresponds entry blockchain whenever idealize  FB subroutine protocol specify  FB hybrid model model blockchain coarse grain abstraction reality accurate formalization literature exposition simplistic easily extend model incorporate sophisticated abstraction notation payment channel blockchain unique channel identifier capacity channel expiration channel associate fee notation assume identifier user encode stress user multiple channel simultaneously functionality maintains additional internal former channel latter chain payment entry correspond channel amount credit expiration payment identifier entry operation interaction user pcn simplicity model unidirectional channel although functionality easily extend session blockchains CCS october november dallas TX usa channel input user  contains valid identifier duplicate eventually sends abort authorize operation latter appends tuple tuple random return channel input user ideal functionality par entry entry functionality abort otherwise entry notifies user involve message payment input user executes interactive protocol sample random par entry entry exist sends tuple user via anonymous channel specific receiver tuple entry entry met remove entry phase abort query anonymous channel user index user return return user return ideal functionality update define notifies user operation distinguish message remove notifies user message ideal functionality PCNs bidirectional channel execution simulation initialize local empty user pcn query channel valid input payment channel user capacity initiate payment intermediate user payment deny payment receiver user interrupt payment instead sender finally informs involve node operation update correspond channel discussion ideal functionality capture security privacy pcn balance security intermediate hop payment locally update channel correspond incoming outgo balance increase coin fee unless user actively prevents trust balance security serializability hop payment easy ideal functionality executes serially concurrent payment link therefore trivially scheduler performs operation serial balance security payment atomic hop payment serializability privacy ideal user payment contact therefore transact chain payment relationship anonymity intermediate hop payment interaction ideal functionality unique identifier payment identifier completely independent identifier user involve payment honest user payment simultaneous payment indistinguishable user implies subset corrupt intermediate hop successful concurrent payment traverse corrupt node cannot distinguish honest payment therefore corrupt node cannot sender receiver probability UC security  ensemble output environment interact adversary protocol random coin involve machine definition UC security protocol UC realizes ideal functionality adversary exists simulator environment ensemble   computationally indistinguishable bound byzantine user pcn PCNs channel user byzantine malicious inherent concurrency specifically pcn non progress concurrent payment terminates impossible serializability PCNs appendix henceforth assume pcn execution exist channel user byzantine lemma exist serializable protocol pcn non progress exists payment channel user byzantine session blockchains CCS october november dallas TX usa overview overview achieve private concurrent payment PCNs payment privacy payment operation ensure security privacy pcn namely balance security privacy relationship anonymity naïve approach towards achieve balance security  payment however inherent conflict anonymity easy contract belonging transaction linkable encode release payment proposal multi hop HTLC aim remove link hop maintain compatibility bitcoin network underlie multi hop HTLC hop transaction sender sample independent arbitrary hash function  apply function input xor combiner sender receiver node tuple preserve anonymity sender communicates intermediate node anonymous channel sender node defines standard HTLC input amount bitcoin timeout parameter respectively release contract uniformly distribute function therefore  transaction independent clearly mechanism described sender chooses accord specification protocol enforce honest behavior non interactive zero knowledge proof concurrent payment simultaneous payment payment channel payment manner none payment depict payment alice gabriel cannot capacity payment channel  gabriel already lock payment bob edward moreover payment cannot capacity payment channel carol edward already lock deadlock situation generic PCNs payment aborted exists payment channel without capacity payment fulgor effort avoid deadlock consists payment fail aborted payment affect balance involve user receiver disclose release lock payment channel therefore involve payment channel unlocked correspond timeout bitcoins owner sender aborted payment randomly reissue payment although illustrative payment alice gabriel bob edward simplicity assume payment bitcoin payment channel capacity bitcoin payment channel payment deadlock situation none payment cannot trivially mechanism closely resembles user others payment network ripple  degrade transaction throughput fully decentralize pcn non payment rayo alternative consists non concurrent payment completes approach achieve assumes exists global payment global payment identifier nutshell user queue payment identifier flight abort payment identifier ensures flight payment completes queue payment identifier fulgor construction introduce cryptographic building construction detail multi hop HTLC contract detail construction pcn operation analyze security privacy conclude remark notation denote security parameter standard definition negligible function denote decision payment channel due payment decision signal lock balance payment channel correspond payment decision abort signal release lock fund payment channel due abortion payment correspondingly decision accept signal confirmation payment accepted receiver notation assume user identifier extract channel identifier assumption assume user pcn aware network topology user existence payment channel user assume sender payment chooses payment receiver accord criterion payment channel publish instead locally user payment channel otherwise privacy trivially broken assume user aware payment fee user pcn session blockchains CCS october november dallas TX usa accomplish opening payment channel user transaction blockchain user identifier therefore topology pcn trivially leak moreover transaction payment channel user define data user embed payment fee manner user proactively update information network topology fee blockchain disseminate gossip protocol assume user payment channel communicate secure authenticate channel TLS easy implement user uniquely identify public assume sender receiver possibly indirect transaction communicate secure channel finally assume sender payment anonymous payment channel intermediate user IP address user encode channel creation transaction therefore blockchain protocol completely parametric respect rout therefore onion rout technique context bound synchronous communication communication model fix communication assume message user available intend recipient within bound execution consequently absence message indicates absence communication user achieve loosely synchronize user pcn finally assume user lexicographically sort public verification building non interactive zero knowledge NP relation positive instance non interactive  proof consists message prover verifier prover compute proof  verifier statement prover extra private input verifier accept reject NIZK accepts honestly compute statement reject negligible probability loosely NIZK proof zero knowledge verifier learns beyond efficient NIZK protocol exist random oracle model user agreement user payment channel locally maintain payment channel define  cap denotes capacity payment channel agreement protocol ensures user cap detail protocol appendix readability implicitly assume user payment channel satisfactorily multi hop HTLC standard scenario indirect payment sender sdr receiver  user  user belonging network description hash function model random oracle denotes bitwise xor bitstrings payment sender sdr locally executes  algorithm described intuitively sender sample random defines xor combination sdr computes proof guarantee without reveal receiver simply sdr sends intermediate user communication channel  abort payment verification algorithm reject proof user sdr user user simply exchange establish HTLC described defines timespan positive contract user receiver bitcoins release definition satisfies constraint publish release valid contract simply output mechanism propagates intermediate user payment sdr node whenever contract release somebody publishes immediately learns valid contract intermediate user outgo contract release valid incoming contract construction detail detail operation   compose fulgor  return setup operation multi hop HTLC contract session blockchains CCS october november dallas TX usa  txid fee cap cap cap tnow fee  txid HTLC txid abort routine fulgor sender pseudocode additional rayo  purpose operation payment channel user initial bitcoin deposit information bitcoin address initial capacity channel channel timeout fee channel channel identifier beforehand user bitcoin deposit successfully blockchain operation return previous define operation return  operation user payment channel define accordingly update bitcoin balance bitcoin blockchain operation fulgor perform define proposal payment channel additionally return correspond bitcoin transaction bitcoin blockchain payment operation transfer sender receiver payment channel version payment operation discus non version payment operation pseudocode sender calculates bitcoins  fee correspond intermediate hop payment sender bitcoins abort payment otherwise sender contract intermediate payment channel mechanism described sends information correspond user  txid tnow txid accept txid abort  decision decision txid cap cap cap HTLC cur append txid cur txid append txid abort decision abort txid cap cap txid abort cur delete txid max  decision accept txid txid accept cur delete txid routine fulgor receiver intermediate user pseudocode additional rayo max return information payment identifier intermediate user verifies incoming HTLC associate capacity payment channel  additionally intermediate user verifies zero knowledge proof associate HTLC incoming outgo payment channel correctly verifies timeout incoming HTLC timeout outgo HTLC difference generates correspond HTLC associate possibly minus fee successor user otherwise abort trigger abort predecessor session blockchains CCS october november dallas TX usa user operation pseudocode user accepts payment eventually receiver release information fulfill HTLC contract pseudocode interestingly intermediate user abort payment receiver release payment moreover payment channel already previous hop void timeout correspond HTLC security privacy analysis security privacy fulgor  FB hybrid model theorem UC secure realization  FB proof theorem appendix theorem UC security hash function model random oracle  proof fulgor UC realizes ideal functionality define  FB hybrid model discussion compatibility bitcoin non standard cryptographic operation NIZK proof chain algorithm execute verification blockchain hash function instantiate sha therefore multi hop HTLC scheme fulgor fully compatible bitcoin script moreover mention addition segwit malleability issue bitcoin fully enables payment channel bitcoin generality fulgor PCNs bitcoin fulgor  allows embed custom data fee conditional update balance payment channel arbitrary data cryptocurrency transaction PCNs others HTLC contract fulgor PCNs raiden pcn ethereum bidirectional channel fulgor easily extend bidirectional payment channel minor payment information direction request payment channel capacity  tuple denotes balance balance capacity channel payment tuple update payment handle correspondingly non    discus handle concurrent payment non manner guarantee payment concurrent payment terminates impossibility dictate rayo protocol non payment modification ideal functionality fulgor achieve finally discus implication modification privacy concurrency privacy achieve non progress global associate payment specifically cannot disjoint access parallelism non progress PCNs formally pcn implementation  parallel payment channel channel channel lemma exist strictly serializable  parallel implementation payment channel non progress defer appendix proof sketch establish inherent concurrency privacy model global txid attach payment remark txid however allows adversary reduce sender receiver payment therefore inevitably reduce privacy guarantee discus ideal functionality modify ideal functionality described account achieve non progress pcn identifier txid oppose independently sample payment channel longer abort payment simply capacity payment channel instead queue payment txid flight payment abort txid detail modify ideal functionality appendix discussion discus modify ideal definition capture security privacy notion described easy notion balance security privacy enforce along however leakage payment identifier intermediate user payment reduces sender receiver actual sender receiver payment thereby relationship anonymity therefore inherent tradeoff handle concurrent payment non anonymity guarantee illustrative tradeoff simultaneous payment handle concurrent payment handle non fashion assume payment successfully pcn payment transfer payment amount otherwise relationship anonymity trivially broken payment intermediate user observes independently chosen identifier  payment  therefore attacker correlate txid txid txid txid operation issue node session blockchains CCS october november dallas TX usa illustrative tradeoff concurrency privacy node user node honest byzantine assume concurrent payment arrow denotes payment identifier dash ellipsis denote anonymity receiver adversary observes however concurrent payment handle nonblocking manner adversary observes txid txid therefore adversary trivially derive receiver initiate rayo construction building building described difference channel user define  cur cap cur denotes array payment currently capacity available payment channel denotes array payment capacity payment channel cap denotes capacity payment channel operation   operation remain described however operation augment ensure non payment described additional action pseudocode informally additional action operation nutshell payment intermediate user trigger simplest correspond payment channel saturate capacity payment succeed user accepts payment simply information cur flight payment somewhat occurs payment channel saturate possibly payment already payment channel simplest abort payment deadlock situation instead ensure deadlock leverage payment identifier payment identifier txid payment identifier currently active payment channel cur payment identify txid manner currently active payment aborted queue payment txid recover reissue towards receiver txid identifier currently active payment payment identify txid directly aborted presence concurrent payment identifier pcn analysis discussion security privacy analysis security privacy rayo handle payment non manner  FB hybrid model theorem UC secure realization  FB analysis appendix theorem UC security hash function model random oracle  proof rayo UC realizes ideal functionality described  FB hybrid model discussion rayo compatible bitcoin generally applicable pcn bidirectional payment channel fulgor moreover rayo protocol non progress specifically rayo ensures payment successfully terminates execution intuitively conflict payment necessarily respective unique identifier payment identifier deterministically identify terminates successfully priority payment abort fulgor rayo characterize tradeoff protocol protocol guarantee crucial security correctness balance security serializability rayo protocol ensures non progress finally regard privacy aim achieve privacy however although protocol guarantee privacy impossible simultaneously achieve non progress anonymity therefore fulgor achieves anonymity rayo achieves non progress weaken anonymity guarantee nevertheless rayo relationship anonymity none intermediate node compromise intuitively rayo weaker privacy guarantee multi hop HTLC fulgor comparison fulgor rayo fulgor rayo balance security serializability non progress privacy anonymity session blockchains CCS october november dallas TX usa performance analysis evaluate performance fulgor finally overhead rayo developed proof concept implementation python evaluate performance fulgor interact api lnd recently release lightning network implementation  extract capacity payment channel  extract public user network  extract user public instantiate hash function sha implement multi hop HTLC python implementation ZK  zero knowledge proof ZK  sha achieve soundness error proof witness byte implementation optimization protocol description assume sender creates anonymous communication channel intermediate user implementation however sphinx anonymous communication channel sender receiver intermediate node intermediate user sphinx allows payment information intermediate user obfuscate information intend user actual pad data optimization bitcoin community implement release lnd testbed simulated user linear structure payment channel user payment channel user user user sender user receiver operation user virtual machine intel core ghz processor GB ram machine local network latency millisecond assume user already correspond payment channel public verification user pcn setup operation account performance execute payment operation available lnd software HTLC payment contract conditional update payment channel non private operation user fulgor additionally sdr  protocol increase thereby computation moreover sdr additional information correspond multi hop HTLC contract intermediate user communication complexity sender compute proof intermediate user proof MB finally intermediate user verify focus zero knowledge proof expensive operation therefore computation overhead lnd multi hop HTLC communication overhead MB zero knowledge proof plus tuple  per intermediate user previous proposal around compute zero knowledge proof contrast operation fulgor computation communicate MB user payment operation demonstrates practicality fulgor scalability scalability operation fulgor communication overhead role payment sender receiver intermediate user account sphinx pad message maximum absence widespread pcn maximum payment network ripple credit network regard computation sender intermediate user however computation improve calculate parallel advantage multi core intermediate user contract payment channel successor predecessor user finally receiver incurs pre image hash regard communication overhead sender message proof knowledge byte associate contract intermediate payment channel sender MB approximately sphinx pad message node ensure anonymity intermediate user message summary unoptimized implementation payment intermediate user communication overhead approximately MB intermediate user therefore fulgor induces relatively overhead enable payment user pcn potential deployed pcn user perform payment intermediate user privacy preserve payment non payment rayo similarity definition performance evaluation fulgor rayo additionally management non payment intermediate user maintain cur flight payment queue payment capacity available management data structure fairly computation overhead moreover message data structure accord specification rayo clearly linear specifically payment involve incurs message complexity bound concurrent conflict payment related payment channel introduce bitcoin community extension propose   bidirectional payment channel leverage trust platform module payment channel without hinder compatibility bitcoin however focus payment channel extension PCNs remain challenge session blockchains CCS october november dallas TX usa tumblebit bolt propose chain payment achieve sender receiver anonymity tumblebit payment anonymity bolt however approach restrict hop payment extend account generic multi hop PCNs privacy notion achieve fulgor rayo lightning network emerge prominent proposal pcn bitcoin PCNs   bitcoin raiden ethereum propose slight modification lightning network nevertheless HTLC leak identifier per payment thereby reduce anonymity guarantee described moreover proposal lack non concurrent payment fulgor rayo instead rely multi hop HTLC overcome linkability issue HTLC tradeoff non progress anonymity recent propose privacy definition credit network payment multi hop payment PCNs moreover privacy preserve protocol described centralize decentralize credit network however credit network PCNs ensure accountability underlie blockchain requirement reduces cryptographic operation available pcn nevertheless fulgor rayo privacy guarantee credit network restriction propose construction payment channel reduce fund lock intermediate payment channel collateral orthogonal moreover formalize construction multi hop payment ideal functionality however focus collateral discus privacy guarantee concurrent payment handle manner construction relies smart contract available ethereum incompatible bitcoin script propose variation HTLC contract snarks avoid linkability payment channel however bitcoin community adopt approach due inefficiency revisit formal protocol provable security efficient instantiation ZK  conclusion  blockchains global consensus protocol others scalability issue catering user payment burgeon approach overcome challenge consists PCNs recent effort derive alpha implementation lightning network bitcoin raiden ethereum however scratch challenge liquidity network formation rout scalability concurrency privacy thoroughly foundation privacy concurrency PCNs formally define universal composability framework mode operation PCNs attend concurrent payment handle versus nonblocking formally proven instantiation fulgor rayo offering tradeoff non progress anonymity evaluation demonstrate feasible deploy fulgor rayo cater user