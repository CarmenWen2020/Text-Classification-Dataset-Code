homomorphic encryption cryptosystem computation encrypt data lópez propose generalize notion multi homomorphic encryption MKHE capable perform arithmetic operation ciphertexts encrypt multi variant scheme packed ciphertexts relinearization algorithm simpler faster previous generalize bootstrapping technique obtain multi fully homomorphic encryption scheme proof concept implementation MKHE scheme microsoft seal dimension homomorphic multiplication multi BFV resp CKKS ciphertexts associate relinearization resp millisecond MKHE scheme application secure computation multiple data provider benchmark homomorphically classify image pre neural network model input data model encrypt implementation evaluate convolutional layer fully layer encrypt image mnist dataset CCS CONCEPTS security privacy cryptography keywords multi homomorphic encryption packed ciphertext error neural network introduction amount data generate novel scientific discovery effective responsible utilization data remains challenge issue alleviate outsource public service provider intensive compute resource however remains privacy security outsource data analysis significant progress cryptographic technique secure computation technique secure computation multi computation mpc homomorphic encryption increase attention due technical breakthrough mpc date decade intensively theory community approach participate interactive protocol compute function private input output function reveal recent witness improve practical efficiency mpc protocol achieve magnitude improvement performance however protocol inherently inefficient communication complexity exchange protocol proportional complexity function therefore communication complexity remains bottleneck mpc protocol moreover aforementioned mpc protocol desirable application involve perform local computation proportional complexity function however practical cannot data provider perform amount online entire protocol execution another model propose data owner secret data independent server perform mpc generate computation protocol performance burden data provider server privacy guarantee rely assumption server collude session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom refers cryptosystem allows compute encrypt data without decrypt enable securely outsource computation untrusted significant technical advance gentry construction encrypt multiple plaintext packed ciphertext instruction multiple data simd technique perform operation parallel hence scheme pack technique amortize complexity per plaintext apply privacy preserve data analysis however traditional scheme computation ciphertexts  secret therefore naturally secure computation application involve multiple data provider secret lópez propose multi homomorphic encryption MKHE scheme cryptographic primitive arithmetic operation ciphertexts necessarily  secret addition aforementioned issue MKHE  mpc protocol minimal communication addition mpc protocol MKHE satisfies mpc circuit evaluate dynamically data provider upload encrypt data despite versatility MKHE seldom multi variant  scheme construction ciphertexts performance previous propose MKHE scheme ciphertexts caveat ciphertext encrypts exist MKHE scheme packed ciphertexts multi variant  scheme purely abstract implementation remains MKHE scheme simd operation practical contribution multi variant BFV CKKS scheme propose generate relinearization simpler faster previous technique furthermore adapt bootstrapping algorithm scheme multi scenario multi fully homomorphic encryption packed ciphertexts finally proof concept implementation multi scheme microsoft seal experimental knowledge practical implementation MKHE scheme packed ciphertexts viable application MKHE securely evaluates pre convolutional neural network cnn model efficient protocol server prediction service data owner classifier model provider privacy data model MKHE scheme multi operation achieve latency optimal data model provider server numerous ciphertexts encrypt computational task depends related circuit advantage ML model provider unencrypted model server overview construction cyclotomic  dimension secret construction MKHE scheme requirement scheme handle homomorphic computation ciphertexts independently generate secret ciphertext MKHE scheme associate modulus  concatenate secret phase mod randomize encode plaintext message correspond scheme homomorphic multiplication BFV CKKS consists tensor relinearization tensor input ciphertexts satisfies valid encryption tensor  relinearization aim transform extend ciphertext canonical ciphertext encrypt message understood  encryption contains entry  secret distinct hence relinearization correspond non linear entry cannot generate traditional scheme propose RLWE cryptosystem achieve functionality variant  scheme operation ciphertexts integral vector gadget vector scheme assumes reference CRS model random polynomial vector generates encryption secret matrix satisfy mod mod polynomial sample distribution publish evaluation relinearization advantage combine evaluation public mod generate  mod  entry extend ciphertext triple thatc  mod variant previous  ciphertext extension propose consists polynomial dimension previous relinearization logq complexity generation polynomial operation modulo detail relinearization algorithm session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom overview oblivious neural network inference switch operation  complexity operation pre compute multi operation generate reuse computation related approach directly  entry extend ciphertext public evaluation recursive generate relinearization complexity quadratically however algorithm allows individual evaluation linear furthermore significantly reduces variance additional relinearization parameter functionality finally adapt modulus technique approach reduce growth orthogonal issue bootstrapping packed MKHE scheme literature generalize exist bootstrapping scheme multi issue generalization pipeline bootstrapping advanced functionality slot permutation resolve issue operation apply multi switch technique galois automorphism finally apply optimization technique implement scheme MKHE scheme performance improvement implement residue RNS variant MKHE scheme RNS friendly decomposition relinearization thereby avoid expensive precision arithmetic related lópez firstly propose MKHE scheme    variant  ciphertext extension technique MKHE scheme simplify     developed multihop MKHE scheme multi  scheme however scheme encrypt extend  ciphertext   MKHE scheme lwe ciphertexts however asymptotic concrete efficiency clearly chen  scheme complexity complexity    gen ciphertext mult CCS   gen ciphertext nand   gen ciphertext mult memory computational scalar operation MKHE scheme denotes dimension lwe assumption  denotes evaluation bootstrapping propose improve scheme apply framework  implementation MKHE primitive however scheme pack technique thereby expansion rate  relevant multi variant  generate relinearization multi  scheme however consists switch  ordinary component addition implementation analysis concrete performance extension research relinearization optimization technique apply  stress performance previous batch MKHE scheme improve sparsity evaluation manuscript performance recent MKHE scheme context account comparison background notation logarithm unless otherwise denote vector bold matrix upper bold denote dot vector denotes integer session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom upwards denote sample accord distribution finite denotes uniform distribution denote security parameter throughout valid attack cryptographic scheme scope operation multi homomorphic encryption multi homomorphic encryption cryptosystem allows evaluate arithmetic circuit ciphertexts possibly encrypt message arithmetic structure MKHE scheme MKHE consists ppt algorithm setup keygen enc dec eval assume participate reference index public secret multi ciphertext implicitly contains  associate reference ciphertext MKHE enc  corresponds reference computation ciphertexts progress setup MKHE setup security parameter input return public parameterization assume algorithm implicitly input generation MKHE keygen output secret public encryption MKHE enc encrypts plaintext output ciphertext decryption MKHE dec skid ciphertext correspond sequence secret output plaintext homomorphic evaluation MKHE eval   circuit tuple multi ciphertexts  correspond public  output ciphertext reference union reference input ciphertexts ctj semantic security message distribution MKHE enc computationally indistinguishable MKHE setup MKHE keygen correctness compactness MKHE scheme compact ciphertext relevant bound poly fix polynomial poly ctj ciphertext reference MKHE dec ctj skid circuit MKHE eval   MKHE dec skid overwhelm probability equality substitute approximate equality CKKS scheme approximate arithmetic error throughout assume integer residue modulo integer error RLWE assumption parameter polynomial sample uniformly random chosen distribution drawn error distribution computationally indistinguishable uniformly random gadget decomposition gadget vector integer gadget decomposition denote function transforms vector polynomial mod gadget decomposition technique widely construction scheme homomorphic evaluation nonlinear circuit switch technique scheme exploit various gadget decomposition growth literature various decomposition decomposition decomposition RNS decomposition implementation exploit RNS friendly decomposition efficiency  multi ciphertexts description MKHE scheme explain perform relinearization procedure core operation homomorphic arithmetic overview  packed ciphertexts recent remarkable advance performance scheme ciphertext pack technique allows encrypt multiple data ciphertext perform parallel homomorphic operation simd manner currently batch scheme  BFV CKKS perform scheme amortize timing per plaintext slot adapt dft algorithm transform vector plaintext cyclotomic secret canonical RLWE ciphertext inner mod phase randomize encode plaintext phase BFV ciphertext plaintext modulus phase CKKS approximate plaintext homomorphic computation basically perform arithmetic operation phase ciphertexts homomorphic multiplication RLWE ciphertexts consists tensor relinearization input ciphertexts compute tensor return extend ciphertext satisfies contains nonlinear entry session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom perform relinearization procedure transforms extend ciphertext canonical ciphertext encrypt message roughly publish  ciphertext encrypt switch algorithm conversion multi ciphertext related  concatenate secret phase compute pipeline homomorphic operation tensor return extend ciphertext correspond hence generate relinearization consists multiple ciphertexts encrypt entry classical scheme additional computation  depends secret independently generate explain efficiently generate relinearization multi homomorphic multiplication scheme scheme generate public relinearization setup security parameter RLWE dimension ciphertext modulus distribution error distribution generate random vector return public parameter keygen sample secret sample error vector public mod  input plaintext generate ciphertext sample sample mod sample mod public parameter contains randomly generate vector assume reference model public parameter input generation algorithm multi homomorphic arithmetic assumption previous MKHE uni encryption algorithm symmetric encryption encrypt uni encrypt ciphertext  consists vector ordinary  ciphertext uni encrypt ciphertext encryption secret encryption secret security uni encryption scheme ind cpa secure RLWE assumption parameter distribution setup keygen  computationally indistinguishable uniform distribution arbitrary refer reader appendix proof relinearization revisit relinearization procedure extend ciphertexts advantage recall tensor multi ciphertexts cti encrypt concatenate secret ciphertext correspond tensor secret contains nonlinear entry related therefore compute server transform extend ciphertext canonical ciphertext linearization nonlinear entry relinearization public evaluation generate individual  secret return  precise generates secret public evaluation algorithm keygen  publishes relinearization algorithm explain pro con additional circular security assumption evaluation uni encryption secret encrypt however stress assumption assumption scheme bootstrapping relinearization ciphertexts pre processing generates relinearization correspond involve relinearization consists encryption linearize extend ciphertext apply standard switch technique approach propose previous generates evaluation however relinearization compute public information consists vector previous multi  scheme dimensional entry convert input uni encryption public generate possibly vector matrix return ciphertext session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom algorithm relinearization input  output mod mod  extend ciphertext evaluation public generate ciphertext compute convert relinearization  alg  generation  pre compute public information without ciphertext input correctness uni encryption encrypt public output convert conversion algorithm encryption  respect secret  mod derive formula mod    mod approximate equality estimate appendix correctness algorithm evaluation uni encryption obtain  mod definition mod  mod generate relinearization previous instead directly  entry extend ciphertext recursive  extend ciphertext evaluation public generate ciphertext described alg algorithm relinearization input output mod mod mod mod analyze relinearization advantage storage growth faster evaluation repeatedly  multiple ciphertexts correspond correctness correctness iteration loop alg compute respectively mod  mod  mod definition mod  mod performance relinearization algorithm suppose involve multi computation  extend ciphertext relinearization computation switch correspond secret focus performance compute generates relinearization linearize input extend ciphertext generation multiplication matrix complexity polynomial multiplication however computation alg polynomial multiplication meanwhile session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom pre processing iteration alg polynomial multiplication faster performs multiple homomorphic arithmetic subset pre compute relinearization however storage grows quadratically linear memory advantage management discus modulus technique modulus technique growth factor parameter thereby overall performance cryptosystem decomposition reduce decompose vector switch error naive performance degradation addition benefit growth computational complexity increase therefore option modulus modulus technique propose attractive address overhead roughly ciphertext modulus integer modulus computes switch procedure  modulus reduction advantage switch error decrease factor due modulus reduction apply technique relinearization encryption algorithm modulus variant relinearization sequential modulus switch operation appendix detail recall extend ciphertext goal relinearization generate ciphertext error minimize efficiency refer reader appendix analysis variance polynomial coefficient concise summary uniform random variable decomposition denote average variance coefficient respectively estimate variance relinearization error  addition modulus variant achieves variance significant advantage efficient decomposition obtain growth furthermore modulus variant obtains error variance nearly affected decomposition dominate error introduce modulus cancel MKHE  packed ciphertexts multi variant BFV CKKS scheme setup generation phase algorithm message encode homomorphic operation MKHE setup setup return parameter MKHE keygen generates secret public evaluation keygen  respectively encryption decryption homomorphic arithmetic MKHE scheme described subsection pre processing perform homomorphic operation ciphertexts ciphertexts cti denote max involve rearrange entry cti pad zero empty entry generate ciphertexts secret precise ciphertext cti cki correspond tuple  convert ciphertext define  otherwise remark cti sid  simplicity assume pre processing homomorphic arithmetic input ciphertexts related security correctness recall BFV CKKS  secure RLWE assumption parameter MKHE scheme exactly encryption algorithm security relies hardness RLWE appendix detail briefly correctness scheme rigorous proof analysis appendix multi BFV BFV scheme invariant computation discrete finite characteristic denote plaintext modulus factor BFV scheme native plaintext cyclotomic polynomial plaintext decode tuple finite via isomorphism relation MK BFV enc standard BFV encryption polynomial input sample return ciphertext mod mod MK BFV dec ciphertext associate secret compute mod session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom MK BFV ciphertexts cti return ciphertext mod MK BFV mult ciphertexts cti compute mod return ciphertext  correctness scheme obtain BFV relinearization algorithm multi BFV encryption ofm vector mod  decryption algorithm  correctly encryption respect secret tensor mod satisfies mod ordinary BFV scheme output   mod multi CKKS CKKS scheme scheme approximate fix arithmetic assume  integer chain ciphertext modulus native plaintext polynomial pack complex polynomial via dft addition arithmetic operation rescale algorithm magnitude encrypt message homomorphic operation ciphertexts transform ciphertext MK CKKS enc input plaintext sample return ciphertext mod mod MK CKKS dec ciphertext associate secret return mod MK CKKS ciphertexts cti return ciphertext mod MK CKKS mult ciphertexts cti compute mod return ciphertext  relinearization algorithm define modulus compute algorithm modulo ciphertexts MK CKKS rescale ciphertext compute return ciphertext multi encryption plaintext respect secret vector satisfy mod homomorphic operation input encryption homomorphic addition resp multiplication return ciphertext approximately resp finally encryption rescale algorithm return ciphertext encrypt equation distribute decryption classical definition MKHE primitive secret involve decrypt multi ciphertext however reasonable assume multiple secret instead protocol owner jointly decrypt ciphertext decryption algorithm scheme approximate linear combination secret coefficient propose secure task introduce flood technique secure achieve functionality distribute decryption consists algorithm partial decryption merge phase receives ith entry ciphertext decrypts distribution variance standard error distribution scheme merge partially decrypt recover message MKHE  polynomial secret sample error return mod MK BFV merge compute mod return MK CKKS merge compute return mod multi ciphertext multi BFV CKKS scheme compute mod merge phase BFV extract plaintext cancel factor bootstrapping MKHE  bootstrapping procedure standard scheme previous goal underlie scheme basically gentry technique homomorphic evaluation decryption circuit BFV CKKS scheme pipeline bootstrapping consists modulus coeff slot extraction slot coeff specific linear transformation rotation operation encrypt vector explain perform rotation operation multi ciphertexts evaluation galois automorphisms revisit bootstrapping procedure BFV CKKS generalize exist MKHE scheme session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom homomorphic evaluation galois automorphisms galois gal cyclotomic consists transformation recall BFV resp CKKS dft resp pack multiple plaintext polynomial automorphisms functionality packed ciphertext rotation plaintext slot evaluation automorphism  technique detail galois encryption ofm denote  ciphertext obtain entry valid encryption correspond secret perform switch procedure generate ciphertext encrypt message secret algorithm evaluation galois algorithm generates evaluation galois automorphism algorithm evaluation multiple evaluates multi ciphertext multi switch technique propose MKHE  generate random vector error vector RLWE secret compute mod return galois evaluation MKHE    galois evaluation ciphertext compute return ciphertext mod mod context CKKS computation modulus ciphertext correctness algorithm correctness definition output ciphertext MKHE   mod mod mod desire input ciphertext phase mod phase output ciphertext approximately besides rotation plaintext slot evaluate frobenius  BFV ciphertexts technique CKKS corresponds complex conjugation plaintext slot linear transformation linear combination shift plaintext vector previous optimization technique linear transformation directly apply MKHE scheme bootstrapping multi BFV chen han described bootstrapping procedure BFV scheme paradigm  scheme bootstrapping procedure input ciphertext arbitrary output another ciphertext encrypt plaintext multi variant previous publish encryption secret modulus however constant without extra information suppose input ciphertext encrypts message plaintext modulus mod error perform  divisor mod ciphertext ciphertext phase mod trivial encryption plaintext modulus ciphertext modulus computes homomorphic linear transform multiple ciphertexts coefficient plaintext slot addition scalar multiplication  rotation homomorphically evaluate polynomial digit removal multi ciphertexts obtain previous remove leaf coefficient plaintext slot another linear transformation inverts output encryption consequence output ciphertext phase mod error initial bootstrapping multi CKKS bootstrapping procedure  CKKS scheme performance improve followup research bootstrapping procedure CKKS aim refresh ciphertext return encryption almost message ciphertext modulus multi version ciphertext input mod session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom encryption ciphertext modulus apply homomorphic linear transformation compute ciphertexts encrypt coefficient plaintext slot multi rotation conjugation described evaluate polynomial approximates reduction modular function remove leaf coefficient slot finally apply inverse linear transformation pack coefficient ciphertext output ciphertext encrypts plaintext input ciphertext mod implementation proof concept implementation performance MKHE scheme source code developed microsoft seal version BFV CKKS implementation summarize optimization technique recommend parameter experimental finally apply multi CKKS scheme evaluate encrypt neural network model encrypt data report experimental classify handwritten image mnist dataset perform  laptop intel xeon ghz thread GB memory compile gnu implementation secret distribution uniform distribution polynomial coefficient coefficient error drawn accord discrete gaussian distribution zero standard deviation optimization technique optimization relinearization compute tensor ciphertexts corresponds tensor secret duplicate entry reduce dimension relinearization complexity algorithm almost halve furthermore diagonal entry depends switch generation evaluation increase evaluation reduces complexity relinearization RNS ntt scheme structure optimize polynomial arithmetic technique RNS ciphertext modulus  coprime integer isomorphism  rpi mod achieve asymptotic practical improvement polynomial arithmetic RNS variant BFV CKKS RNS conversion addition prime chosen properly exists unity parameter public evaluation ID logq  gen gen MB MB II MB MB MB MB propose parameter logq  denote RLWE modulus individual RNS prime respectively denotes RNS prime public evaluation generation sec modulo allows exploit efficient theoretic transformation ntt modulo implementation adapts technique improve polynomial arithmetic gadget decomposition mention gadget decomposition performance homomorphic arithmetic formula mod RNS friendly decomposition gadget vector adapt decomposition advantage RNS implementation ciphertexts RNS author combine classical digit decomposition grain complexity growth however realize hybrid increase decomposition thereby computational complexity modulus technique described therefore digit decomposition implementation micro benchmark MKHE scheme illustrates parameter default parameter microsoft seal security accord lwe estimator security standard generation secret execution encryption BFV CKKS decryption ciphertext addition longer ordinary scheme remark generation public evaluation scheme generation execute synchronous homomorphic multiplication relinearization procedure BFV NTTs CKKS overall perform operation therefore confirm timing execution multiplication MKHE scheme asymptotically quadratic quadratic report multiplication relinearization session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom ID mult   BFV CKKS BFV CKKS II execution depends multiplication relinearization MKHE sec notable portion computation linear execution homomorphic evaluation galois automorphisms almost linear described scenario performance modify microsoft seal modulus infeasible fairly ordinary BFV CKKS multi variant performance scheme analyze various perspective complexity growth functionality etc merely reference portable estimation MKHE processor application oblivious neural network inference propose novel framework encrypt neural network encrypt data scenario service paradigm multi data model encrypt homomorphic evaluation cnn efficient strategy evaluate cnn prediction model mnist dataset image pixel array label digit arbitrary hidden layer assume neural network plaintext dataset describes neural network topology convolution layer fully FC layer activation function apply softmax activation function purpose probabilistic classification obtain index maximum output prediction phase objective predict image efficient thereby achieve latency appendix detailed algorithm encryption evaluation convolutional layer stride convolution decompose sum convolution stride parameter choice parameter convolution input image layer description convolution input image stride output channel input FC fully input output input FC fully input output description cnn mnist dataset filter representation allows simd parallelism pack input ciphertext perform convolution parallel accumulate across plaintext slot rotate sum operation moreover pack multiple channel ciphertext VI yield fully packed ciphertext convolution layer applies activation function encrypt output convolutional layer simd manner FC layer FC layer input output compute matrix vector multiplication matrix vector respectively assume plaintext slot context FC layer  shoup diagonal encode matrix diagonal multiplies rotation input vector accumulates output vector obtain extend vector rectangular matrix input vector encrypt ciphertext complexity homomorphic multiplication rotation input ciphertext rotation rotate sum algorithm extend split matrix perform computation sub matrix suppose vector split sub simplicity apply diagonal sub matrix intermediate align across multiple slot homomorphic multiplication precise encryption diagonal component rotation encrypt vector encryption diagonal output ciphertext chunk partial sum entry input finally accumulate rotate sum algorithm rotation consequence output ciphertext encrypts entry procedure ciphertexts significantly plaintext slot performance improve pack multiple input vector ciphertext perform aforementioned operation parallel computational homomorphic multiplication rotation session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom matrix vector multiplication algorithm input ciphertext rotation additional detail appendix rotation input ciphertext benefit hoist optimization rotation distinct ciphertexts cannot benefit hoist described slot correspond component reveal information partial sum therefore output ciphertexts constant zero plaintext vector remove information layer applies activation function output node FC layer FC layer performs multiplication matrix vector linear combination coefficient suppose vector encrypt ciphertext align encrypt vector repeatedly rotate encryption vector generate ciphertext entry apply pure simd multiplication vector correspond scalar vector parallel finally aggregate slot generate output performance evaluation evaluate framework classify encrypt handwritten image mnist dataset library kera tensorflow cnn model image dataset employ modulus variant multi CKKS scheme achieve efficiency approximate computation layer network depth homomorphic multiplication FC layer depth multiplicative mask evaluation cnn chose parameter II cope computation data owner chooses image mnist dataset normalizes maximum encrypts ciphertext public MB meanwhile model provider generates relatively ciphertexts model multiple channel matrix FC layer bias therefore output ciphertexts MB roughly stage runtime data owner image encryption model provider model encryption server convolutional layer layer FC layer layer FC layer evaluation performance breakdown evaluate encrypt neural network encrypt mnist data encryption secret framework methodology runtime latency amortize CryptoNets MiniONN mpc  mpc E2DM MKHE mnist benchmark privacy preserve neural network framework longer encrypt model image data outsource negligible overhead evaluation server output multi ciphertext encrypt prediction respect extend secret data model owner cnn evaluation classify image pre model parameter guarantee precision infinity norm distance encrypt evaluation computation bound therefore flood technique decryption accuracy achieves obtain evaluation comparison previous benchmark framework oblivious neural network inference CryptoNets MiniONN  E2DM indicates framework denotes cryptographic primitive preserve privacy image classification amortize per instance aforementioned private neural network prediction E2DM relies authority secret data model secret CryptoNets amortize complexity latency prediction MiniONN  latency online protocol execution performs local proportional complexity function evaluate layer MiniONN  session 2D encryption searchable updatable homomorphic etc CCS november london united kingdom neural network constant moreover allows outsource homomorphic evaluation untrusted server VM compute encryption decryption communication input model complexity network feature scheme multi operation server assume semi honest non collusion assumption server colludes cannot private input due ind cpa security MKHE therefore oblivious machine inference MiniONN  communication linearly activation node neural network due garble circuit ciphertexts public evaluation depends layer input node neural network hence  communication efficient conclusion practical multi variant BFV CKKS scheme bootstrapping experimental MKHE packed ciphertexts implement scheme technical contribution propose relinearization algorithm achieve performance prior finally scheme apply secure prediction service evaluate encrypt classifier encrypt data implement protocol cnns mnist dataset achieve latency leverage optimize homomorphic convolution homomorphic matrix vector multiplication