source code abstraction greatly assist analyst automate algorithm alike analyze program unfortunately abstraction lose compile source code impedes understand executables propose OOAnalyzer innovative statically recover detailed abstraction executables scalable manner OOAnalyzer motivate observation analyst program recognize binary code combine finding logical inference domain knowledge intuition codify approach combine lightweight symbolic analysis flexible prolog unlike exist OOAnalyzer recover polymorphic non polymorphic evaluation OOAnalyzer assigns corpus malware software firefox mysql recover abstraction analyst understand behavior malware  improve precision program analysis executables CCS CONCEPTS security privacy software reverse engineering malware mitigation keywords software reverse engineering binary analysis malware analysis introduction spur advance computer hardware software rapidly complexity cope increase complexity software engineer orient OO program framework abstraction construct complex application OO program paradigm focus sophisticated user data structure bind related data member operation organization related data operation largely enables developer manage source code effectively complex software unfortunately predecessor allows programmer perform dangerous operation spirit enable flexibility security vulnerability software occurrence developer develop complex program potentially insecure surprisingly malware author increasingly malicious code  stuxnet  leverage engineering benefit compound highlevel abstraction lose compilation analyze executables analyst automate algorithm alike algorithm vulnerability knowledge constructor analyst attempt understand malware sample behavior greatly benefit related researcher demonstrate exploit protection effective abstraction protection efficiency improves accuracy abstraction researcher executable integrity CFI protection recently overall protection exploit significantly improve incorporate knowledge abstraction although exist recover abstraction executables rely virtual function vftables session binary analysis CCS october toronto canada primary source information polymorphic virtual address limitation develop OOAnalyzer accurately recover detailed abstraction relationship inheritance constructor virtual OOAnalyzer avoids limitation prior leverage sophisticated incorporates information variety source yield information polymorphic OOAnalyzer action pointer invocation relationship information pertains invoked target program OOAnalyzer motivate observation analyst program incremental fashion finding binary code combine finding logical inference domain knowledge intuition OOAnalyzer employ lightweight static symbolic binary analysis prolog inference codify analyst approach efficiently code indicative OO program importantly OOAnalyzer inference allows hypothetically ambiguous scenario OOAnalyzer stuck cannot progress temporarily promote uncertain program certainty enable OOAnalyzer scenario scenario contradiction OOAnalyzer prolog ability backtrack alternate ability critical OO program ambiguous resolve progress effectively OOAnalyzer inference allows realworld program firefox mysql component cope incomplete contradictory ambiguous OOAnalyzer scalable static symbolic analysis generate initial basis OOAnalyzer gain scalability OO domain highlevel OO abstraction purely detailed executable semantics propose edit distance metric evaluate quality recover abstraction exist recover discover vftables evaluation trivial vftable mapped correspond source code OOAnalyzer recover  correspond identifier vftables correspondence OOAnalyzer recovers source code edit distance allows evaluate quality without correspondence metric evaluation average OOAnalyzer distinguish constructor average recall precision summary contribution implement OOAnalyzer recover detailed abstraction executables scalable manner OOAnalyzer recovers information non polymorphic propose edit distance metric evaluate quality abstraction return OOAnalyzer debug generate truth comparison evaluate OOAnalyzer malware sample wellknown  program firefox mysql OOAnalyzer accurately recover average identify constructor destructors vftables virtual average background assume reader familiar concept member review advanced feature pertinent OOAnalyzer briefly discus microsoft visual implement feature information refer reader source virtual function sometimes programmer invoke without polymorphic configuration file implement polymorphic virtual function virtual function invoked implementation runtime instead pointer virtual function implement implicit member virtual function vftable virtual function contains entry virtual function visual computes virtual function compile constructor destructor code install vftable mov eax objptr mov eax  related rely virtual function primary source information recover information polymorphic virtual function relationship program relate another variety relationship inheritance composition inherits member automatically definition usually derive inheritance minimize code duplication factor code inherit derive specific behavior relationship composition compose session binary analysis CCS october toronto canada executable exporter hypothetical consistency abstraction prolog component OOAnalyzer OOAnalyzer export executable lightweight symbolic analysis prolog deduces hypothetical assertion address ambiguous validates consistency abstraction model model user consistent propose remain data member access public functionality member implementation  implement function reserve parameter invoked implement  convention pointer ecx register important detect function access ecx register runtime identification RTTI optional metadata implement introspection feature dynamic cast  RTTI data structure information polymorphic RTTI malware author sometimes disable RTTI compilation program utilize introspection feature related relies RTTI primary source information OOAnalyzer largely motivate observation analyst reverse engineer complex  combine logic domain knowledge intuition specifically analyst develop rough mental model program skim specific abstraction analyst immediately conclude program suggests program analyst educate program educate analyst later encounter conflict evidence revise analyst observes concludes program contradict becomes confident knowledge program goal motivation non polymorphic exist recover abstraction relies presence virtual function recover information polymorphic OOAnalyzer consequence OOAnalyzer cannot vftables identifier instead define another important consequence vftables valuable evidence  assignment virtual function OOAnalyzer cannot rely solely source evidence instead OOAnalyzer primarily assigns pointer throughout program invoked pointer define logic program resolve ambiguity ambiguous executable educate important recover abstraction ambiguous program distinct abstraction equivalent executable semantics identical executables OOAnalyzer recover educate OOAnalyzer feature prolog prominently prolog mechanism succinctly encode comprise OOAnalyzer strategy consistent model program OOAnalyzer advantage prolog backtracking capability allows cope faulty assumption whenever inconsistency detect prolog allows OOAnalyzer backtrack rewind perform without ability recover educate OOAnalyzer average error rate balloon significantly overview OOAnalyzer formalizes automates incremental approach combine lightweight static symbolic binary analysis flexible prolog framework OOAnalyzer executable program input extract basis deduces imply conclusion identifies ambiguous deduction hypothetically asserts assert deduces consequence return conclusion finally validates consistency abstraction model model inconsistent OOAnalyzer systematically revisits hypothetical recent model internally consistent propose remain OOAnalyzer output discover model user session binary analysis CCS october toronto canada executable exporter executable exporter responsible perform traditional binary analysis disassemble assembly instruction semantic representation partition instruction function conduct semantic analysis perform semantic analysis scalability OOAnalyzer lightweight symbolic analysis OOAnalyzer simplify assumption characteristic executables emit reasonable compiler generate exporter initial generally program behavior pointer behavior foundation conclusion approximation error OOAnalyzer assume initial confidence informally validate corroborate utilized initial static meaning modify later stage OOAnalyzer OOAnalyzer program built inference precondition conclusion precondition satisfied conclusion consists initial emit executable exporter proceeds hypothetical emit hypothetical entity unlike initial typically executable semantics entity aspect abstraction attempt recover intermediate conclusion entity dynamically assert retract model program evolves hypothetical sometimes OOAnalyzer unable conclusion important program resolve progress scenario OOAnalyzer identifies ambiguous educate hypothetical OOAnalyzer hypothetical function similarly instead ambiguous situation OOAnalyzer analysis program ambiguous resolve hypothetical educate ambiguous incorrect introduce inconsistency model program model pas consistency entity accepted consistency OOAnalyzer detects inconsistency backtracks systematically revisits earlier obviously  denote evidence something   belief recent consistency implement detect contradiction instead assert conceptually consistency implement constraint hypothetical inconsistent conclusion OOAnalyzer backtrack earlier consistency OOAnalyzer backtrack violate allows OOAnalyzer utilize conclusion revert inconsistent  symbolic analysis OOAnalyzer exporter employ lightweight symbolic analysis feature  binary analysis framework  symbolic analysis attempt register memory function symbolic expression function symbolic input function increment eax initial symbolic eax eax init output eax eax init function symbolic summary compute lightweight intra procedural  sensitive data algorithm inter procedural occurs later prolog detail OOAnalyzer auxiliary analysis  propagation pointer identify convention OOAnalyzer symbolic analysis lightweight scalable differs conventional binary symbolic analysis OOAnalyzer smt constraint solver program execution feasible instead OOAnalyzer assumes execution feasible OOAnalyzer separately sensitive prevents exponential explosion unroll loop iteration threshold maximum symbolic expression memory model decides symbolic memory address alias symbolic memory address expression apply simplification normalization despite simplicity OOAnalyzer symbolic analysis performs initial compiler code manipulates entity pointer virtual function code seldom employ complicate loop memory dereferences  static binary analysis symbolic analysis noticeable mistake later component OOAnalyzer usually detect recover initial explain initial emit exporter generally program behavior compute offset pointer brief summary initial assembly code session binary analysis CCS october toronto canada predicate description assembly code  instruction function allocates byte memory operator  instruction function mov ecx objptr  pointer usually indicates presence composition mov ecx objptr ecx  instruction access byte memory offset pointer generally indicates offset member mov ecx objptr mov ebx ecx  receives ecx register indicates  applicable  pointer indicative constructor applicable  return pointer parameter code constructor mov eax objptr   member typical constructor applicable  VFT offset vftable VFT applicable initial predicate OOAnalyzer exporter initial basis upon OOAnalyzer operates important category initial describes creation manipulation usage pointer enable OOAnalyzer relationship without rely RTTI vftables unlike prior symbolic analysis OOAnalyzer assigns unique token pointer function  convention pointer allocate  invoked  offset exist pointer  reveals instance member composition finally enable inter procedural pointer  link symbolic pointer invoked another important initial activate hypothetical  entity initial identify constructor  return pointer  data member  likely constructor hypothetical assert constructor hypothetically consequence entity correspond initial trigger hypothetical entity initial OOAnalyzer source repository entity mention entity abstract entity virtual function comprise abstraction OOAnalyzer recovers entity roughly organize entity virtual function virtual relationship display entity entity correspond initial trigger entity exporter identifies vftables memory scan adjacent entry plausibly code address emits confidence initial  corroborate existence model OOAnalyzer dynamically asserts entity  confirm existence content tier entity relationship described  reflect inherits another  indicates composition inheritance composition executable OOAnalyzer intermediate      finally HasNoBase explicitly express inherit another existence without actually identify specific express HasNoBase bound potential vftables constraint  obtain allocation member composition disprove inheritance relationship observation cannot derive vftables  bound vftable cannot overlap another vftable derive vftable cannot vftable OOAnalyzer non polymorphic session binary analysis CCS october toronto canada predicate description OO struct pointer constructor constructor initializes allocate memory destructor destructor  memory  delete destructor destructor  memory  VFT instruction function virtually invokes offset vftable VFT pointer vftable VFT VFT virtual function virtual VFTableInstall VFT instruction installs vftable VFT offset  VFT offset vftable VFT contains pointer  cld clb cld inherits clb member clb offset cld   cli  compose cli offset   cli   cli   cli HasNoBase inherit  function return byte instantiate  VFT function return byte vftable VFT cla clb cla clb predicate indicates combine cla clb cla clb clb possibly indirectly inherit cla define directly member define  instance ancestor entity predicate hypothetical capability OOAnalyzer identifier vftable address singleton eventually merge merge cla clb indicates previously distinct really cla merge clb exist clb update reference cla instead  evidence indicates directly define ancestor hypothetical compute candidate assign data pointer vftables another OOAnalyzer assign non polymorphic primary mechanism encode domain knowledge program compiler OOAnalyzer component important OOAnalyzer OOAnalyzer inference inference ith premise conclusion premise OOAnalyzer conclusion selection discus unfortunately unable reproduce due limitation OOAnalyzer source repository salient feature OOAnalyzer non polymorphic associate vftable merge formal encode OOAnalyzer derive cannot define derive OOAnalyzer rely vftables instead action pointer although OOAnalyzer information vftables leverage information polymorphic exist relate detects inheritance constructor replace vftable another constructor instal relate slightly complicate encode observation vftables related ambiguous observation identify relationship sibling relationship conclusion negation HasNoBase clb clb inherits astute reader recognize prolog negation conclusion however OOAnalyzer important explicitly definitely definitely false unknown model OOAnalyzer actually positive negative predicate HasNoBase HasNoBase false predicate consistent OOAnalyzer consistency boilerplate code session binary analysis CCS october toronto canada merge constructor cld constructor clb  cld  clb clm cld clb  cld clb clm cld relate constructor VFTableInstall  constructor VFTableInstall       cld clb  cld clb relate   VFTableInstall    VFTableInstall    constructor constructor cla clb cla cla clb HasNoBase clb merge VFTableInstall  cld VFTableInstall  clb  cld clb     cld cld unspecified although conclusion vague evidence determines inheritance relationship eventually trigger hypothetical relationship consistent another merge demonstrates bound vftables assign vftable derive define derive merge OOAnalyzer  derive bound vftable offset vftable hypothetical hypothetical identical structure interpret differently hypothetical unable conclusion hypothetical premise conclusion standard premise conclusion proceeds prolog backtracks  cld  clb  cld clb cld  cld clb  cld clb constructor VFTableInstall   VFTableInstall    HasNoBase    VFTableInstall  constructor hypothetical contradiction OOAnalyzer revoke instead assert conclusion contradiction inconsistency earlier hypothesis OOAnalyzer backtracks hypothetical OOAnalyzer likely minimize backtracking priority hypothetical OOAnalyzer originally later identify rare exception characterize convert hypothetical combination experimentation belief prevalent phenomenon prioritize related inheritance multiple inheritance multiple inheritance consist progressively relaxed constraint entity evidence associate important entity consistency struggle reject important hypothetical handle ambiguity assignment occurs derive define invoked define directly derive OOAnalyzer derive contradiction instead derive another vftables  data pointer necessarily ancestor session binary analysis CCS october toronto canada another ambiguity relationship inheritance relationship composition relationship absence information OOAnalyzer unspecified relationship inheritance relationship proven  consistency OOAnalyzer instead composition relationship member illustrates importance priority hypothetical apply hypothetically weak precondition constructor installs vftable HasNoBase critically important assignment evidence lack evidence inheritance exemplifies evidence inheritance exist immediately preclude exemplifies progressively OOAnalyzer vftable installation candidate HasNoBase evaluate weaker remain without proven actually HasNoBase RTTI data structure assume available unexpectedly important role OOAnalyzer weak another important hypothetical detect constructor priority constructor relatively heuristic vftables uninitialized memory install vftable heuristic usually constructor series priority relaxes constraint consistency consistency ensure internally consistent consistency consistency OOAnalyzer source repository consistency ensure variety specific invariant consistency vftables ensures vftable cannot assign unrelated another consistency  destructor consistency fail conclude false prolog backtrack revisit hypothetical OOAnalyzer completes user propose model consistency implementation OOAnalyzer executable exporter built inside  binary analysis framework  developed carnegie mellon software engineering institute upon consistency vftables VFTableInstall VFT VFTableInstall VFT cla clb cla clb HasNoBase cla HasNoBase clb false consistency  constructor  VFT false consistency  constructor destructor  false consistency  destructor destructor false consistency binary analysis component compiler infrastructure lawrence  national lab handle portable executable PE file format parse instruction disassembly partition instruction function instruction semantics static analysis framework  capability lightweight symbolic analysis summarizes output function symbolic input OOAnalyzer utilizes symbolic analysis generate initial OOAnalyzer consists approximately code inside  framework  OOAnalyzer code implement executable exporter user interface prolog OOAnalyzer prolog implementation consists approximately prolog OOAnalyzer employ  prolog mature source embed program robust perspective prolog programmer essentially mechanism cache execution prolog quickly practical requirement due emit program OOAnalyzer hypothetical strategy repetitive query issue slightly context allows repetitive query efficiently OOAnalyzer implementation analyze PE executables executables chose focus platform commonly target malware source program evaluation evaluate OOAnalyzer ability identify constituent classify constructor destructors virtual along discus truth session binary analysis CCS october toronto canada data program corpus truth data develop membership metric edit distance program corpus evaluate OOAnalyzer program corpus program compile PE executables chose corpus reflect scenario recover abstraction analyze  malware  eighteen  program corpus  evaluate abstraction recovery namely  pop smtp   executables compile visual studio debug configuration optimization disabled    compile visual studio debug release configuration analyze impact optimization program adequately medium program KiB  program complex program firefox web browser program mysql database mysql exe MiB  OOAnalyzer ability handle complex program official  executables program compile visual studio respectively optimization enable malware malware program corpus malware reverse engineering target evaluate truth seldom available address private malware collection sample executables correspond program database  file identify visual studio linker embeds debug GUID uniquely identifies  file correspond executable debug malicious actor inadvertently target along malware ensure malware file corpus actually malicious file antivirus virustotal report detection manually verify file malicious  file malware sample compile visual studio sample compile optimization enable firefox notably consists executable dlls  dll evaluate OOAnalyzer firefox exe scope firefox exe import  dll internal  dll reverse engineering program complex firefox program corpus significant amount code dlls truth truth abstraction program parse  file optionally visual compilation debug evaluate OOAnalyzer truth program program member location virtual function applicable scope evaluation considers implementation executable scope program library code implementation templated library executable employ dynamic link program utilize heavily templated library standard template library boost library substantial amount library code inside unfortunately library cannot easily distinguish application code presence increase difficulty understand executable important OOAnalyzer attempt burden scope truth exception difference OOAnalyzer output truth minor difference uninteresting analyst distinction indistinguishable executable distinction source code adjust truth indistinguishable regular function function binary ambiguous compiler pointer ecx register explicitly OO  compiler pointer ecx regular function OO access ecx ambiguous ecx actually parameter ambiguity treat regular non OO function link executable actually invoked program impossible belongs identify code data reference hex ray ida python script exclude truth scenario occurs frequently linker entire module without remove unused function unless program optimization enable edit distance membership metric evaluate OOAnalyzer ability identify motivate introduce metric quantify recall OOAnalyzer recover information non polymorphic structs  union session binary analysis CCS october toronto canada edit distance program ver RTTI RTTI opt compiler KiB num num rem split  VS firefox VS pop smtp VS  debug VS  release VS  debug VS  release VS mysql cfg editor exe VS mysql connection dll VS mysql dll VS mysql  dll VS mysql mysql exe VS mysql upgrade exe VS  VS  VS  debug VS  release VS VS malware VS malware  VS malware cbc VS malware VS malware  VS malware cfa VS malware  VS malware  VS malware  VS average edit distance OOAnalyzer recover truth edit distance indicates assignment truth edit distance broken remove split edits reveal error OOAnalyzer RTTI sum edit distance report percentage remain comparison OOAnalyzer utilize RTTI OOAnalyzer hypothetical component disabled identifier virtual function unfortunately without identifier truth OOAnalyzer output establish mapping truth contains consist OOAnalyzer report consist judged executable identify OOAnalyzer accidentally merge propose membership evaluate edit distance transform OOAnalyzer emits truth edit distance action perform transformation action another OOAnalyzer fail identify arbitrary remove extra function OOAnalyzer mistakenly identify arbitrarily splitting merge instance recover OOAnalyzer split yield yield edit distance edit distance interpret upper bound mistake OOAnalyzer OOAnalyzer achieve edit distance program recover correctly incorrect correspond edit ideally minimal edit distance metric however program impractical instead greedy algorithm compute sequence edits transforms OOAnalyzer output truth session binary analysis CCS october toronto canada constructor destructor VF virtual program recall prec recall prec recall prec recall prec  firefox pop smtp  debug  release  debug  release mysql cfg editor exe mysql connection dll mysql dll mysql  dll mysql mysql exe mysql upgrade exe    debug  release malware malware  malware cbc malware malware  malware cfa malware  malware  malware  average recall precision various achieve OOAnalyzer without utilize RTTI data recall indicates OOAnalyzer detect instance truth precision indicates instance OOAnalyzer report actually indicates recall precision whereas membership edit distance report edits OOAnalyzer truth absolute edit distance program naturally opportunity mistake report edit distance percentage program relative edit distance without RTTI OOAnalyzer RTTI data available appropriate analyze malicious untrusted code conservative OOAnalyzer achieves average relative edit distance indicates OOAnalyzer recover vast majority correctly OOAnalyzer recover abstraction equally  malware average relative edit distance respectively addition edit distance display edits encounter insight mistake OOAnalyzer edits assign fail detect due effort reduce removal split OOAnalyzer slightly inclined merge incorrectly fail likely implementation RTTI evaluates OOAnalyzer performance leverage RTTI data RTTI useful information polymorphic hierarchy OOAnalyzer perform access information however OOAnalyzer performs marginally access RTTI maximum average improvement absolute edit distance consistent intuition OOAnalyzer edits related non polymorphic polymorphic generally easy recover session binary analysis CCS october toronto canada without hypothetical without RTTI OOAnalyzer hypothetical component disabled OOAnalyzer hypothetical component contribution hypothetical without hypothetical OOAnalyzer performs significantly yield average relative edit distance hypothetical highlight importance hypothetical reinforce challenge cop uncertainty recover abstraction OOAnalyzer identifies absence RTTI specifically OOAnalyzer attempt identify constructor destructors virtual virtual function report recall precision harmonic precision recall constructor  recall indicates OOAnalyzer detect constructor  precision indicates OOAnalyzer report constructor relatively exception OOAnalyzer identify constructor accuracy average unfortunately destructor detection proven OOAnalyzer achieves average destructors trivial implementation optimize away distinguish finally OOAnalyzer identify virtual function accuracy average OOAnalyzer effectively distinguish virtual average unlike however OOAnalyzer non virtual non polymorphic performance perform core intel xeon  cpu GiB memory OOAnalyzer memory usage  respectively benchmark OOAnalyzer median OOAnalyzer maximum memory usage MiB GiB median GiB respectively executables clearly tend memory executables prolog dominates runtime whereas executables export bulk discussion LIMITATIONS optimization compiler optimization modify executable code OOAnalyzer intend problematic optimization program optimization  enable GL switch microsoft visual allows compiler perform optimization across multiple compilation module link unfortunately switch allows compiler violate abi convention function export compiler pas pointer register ecx declare  convention optimization identify data pointer another problematic optimization linker reuses identical function implementation linker detects consist exactly executable code code address problematic fundamental assumption OOAnalyzer executable belong optimization OOAnalyzer mistakenly conclude merge instance identical implementation assign address cla clb OOAnalyzer likely  conclusion cla clb actually distinct source code challenge difficulty reverse engineer demonstrate complexity situation optimize compiler inline function replace function function unfortunately inlining recover abstraction behavior attribute function actually inlined function constructor inline constructor destructors inline destructors happens frequently inheritance composition constructor another constructor without inlining easy detect usually indicates constructor related presence inlining constructor involve OOAnalyzer adjust account inlining situation constructor constructor inherit inlined detect inheritance relationship inlined code vftable  installation constructor complex OOAnalyzer however impossible handle inlined situation perfectly platform OOAnalyzer analyze executables visual abi platform linux unix compiler target  abi instead OOAnalyzer  abi primarily consist adjust executable exporter detect convention operation instal virtual function regular semantic preserve across  however hypothetical heuristic tune code session binary analysis CCS october toronto canada export program ver opt compiler KiB min mem MiB min mem MiB min  VS firefox VS pop smtp VS  debug VS  release VS  debug VS  release VS mysql cfg editor exe VS mysql connection dll VS mysql dll VS mysql  dll VS mysql mysql exe VS mysql upgrade exe VS  VS  VS  debug VS  release VS VS malware VS malware  VS malware cbc VS malware VS malware  VS malware cfa VS malware  VS malware  VS malware  VS average runtime memory usage  OOAnalyzer consume benchmark export runtime memory exporter whereas resource prolog component visual compiler tailor compiler  mostly straightforward engineering effort although research automatically infer tune external dynamic link challenge abstraction recovery definition span multiple executable file implementation load dynamically link library dll executable contains implementation derive microsoft foundation  program  variety implement  library developer customize implement executable inherits  program obtain understand program relationship knowledge executable dll approach load executable conjunction dynamic library analysis addition scalability challenge approach confusion recover abstraction valid specific version dlls analyze approach problematic malware analysis executables routinely without library instead load executables dlls OOAnalyzer attempt minimal understand external parse relocation dynamic link compiler encode information another executable module encode mangle mangle encodes belongs attribute virtual constructor unlike debug relocation program cannot strip without program leverage information built custom  extract mangle accord visual studio mangle scheme allows OOAnalyzer visual studio mangle scheme canonical source researcher reverse engineer session binary analysis CCS october toronto canada without analyze code available although truth directly evaluate OOAnalyzer understand external information inform OOAnalyzer understand internal related external related recovery abstraction research recovers abstraction detect relationship detect constructor destructors OOAnalyzer relatively unique statically recovers information non polymorphic attempt recover information  statically discus ObjDigger predecessor OOAnalyzer development significantly inform overall approach OOAnalyzer ObjDigger attempt recover abstraction OOAnalyzer importantly statically recover  OOAnalyzer ObjDigger rely RTTI data instead leverage vftable analysis pointer significant difference ObjDigger OOAnalyzer primary inspiration develop OOAnalyzer ObjDigger procedurally code evolve ObjDigger improve accuracy eventually become complicate understand analyzes complex scenario OOAnalyzer overcame largely introduce hypothetical allows OOAnalyzer complex scenario OOAnalyzer perform significantly hypothetical disabled evaluation executables ObjDigger evaluate  pop smtp   prior evaluate metric specifically program percentage associate without identifier vftable metric subjective ill define whenever recover resemblance truth edit distance metric ObjDigger edit distance evaluation comparison OOAnalyzer recovers accurately program program ObjDigger originally program OOAnalyzer achieve average relative edit distance ObjDigger ObjDigger perform poorly program evaluate ObjDigger achieve edit distance program fail mysql program crashed longer majority ObjDigger edits indicates ObjDigger detect unable associate finally although ObjDigger identify constructor effectiveness lego another recover non polymorphic executables unlike OOAnalyzer ObjDigger lego recovers information processing dynamic runtime trace allows recover hierarchy OO addition recover lego recover inheritance composition relationship identify destructor lego primary disadvantage dynamic analysis relies input trigger usage unfortunately lego applicable input unavailable perform comparison OOAnalyzer lego performance depends quality testcases   executables  naturally recovers abstraction functionality decompilation structure exception handler analysis OOAnalyzer OOAnalyzer  pointer performs vftable analysis rely RTTI  however attempt recover polymorphic virtual function yoo   statically recover variety abstraction exception handler relies RTTI data recovers information polymorphic approach infeasible analyze malware sometimes RTTI data disabled impede analysis katz combination program analysis machine virtual target classifier estimate likelihood dispatch statistical model usage writes usage generate lightweight static symbolic analysis OOAnalyzer whereas OOAnalyzer encode domain knowledge katz model automatically program future research explore machine automatically generate OOAnalyzer security protection binary integrity CFI protection infer transition source code later researcher developed CFI binary analysis rewrite technique apply directly executables without access source code account knowledge implementation mechanism enforce relatively coarse grain policy executables researcher propose technique improve precision agnostic focus recover abstraction comparable OOAnalyzer session binary analysis CCS october toronto canada ObjDigger OOAnalyzer program opt compiler KiB num num rem split edits edits  VS pop smtp VS  VS  VS VS firefox VS  debug VS  release VS  debug VS  release VS mysql cfg editor exe VS mysql connection dll VS mysql dll VS mysql  dll VS mysql mysql exe VS mysql upgrade exe VS  debug VS  release VS malware VS malware  VS malware cbc VS malware VS malware  VS malware cfa VS malware  VS malware  VS malware  VS average edit distance ObjDigger recover truth program evaluate ObjDigger publication edit distance indicates assignment truth edit distance ObjDigger broken remove split edits reveal error ObjDigger sum edit distance report percentage comparison OOAnalyzer edit distance report background shade indicates   CFI incorporate specific protection identify recover information virtual site vftables  attempt sanitize virtual information whereas  relocates identify vftables memory virtual reference vftable memory recently specific CFI marx  recover additional information inheritance hierarchy inheritance hierarchy information strengthens enforcement policy disallow virtual unrelated although marx  attempt recover inheritance hierarchy attempt direction inheritance relationship OOAnalyzer strengthen infer CFI policy recover abstraction virtual thereby recover information polymorphic contrast OOAnalyzer attempt recover implement target binary non polymorphic detection vulnerability recall recovers vftables constructor destructors addition dataflow pointer information detect vftable escape vulnerability offset vftable intend OOAnalyzer logic recover relationship CONCLUSIONS recover detailed abstraction creation OOAnalyzer OOAnalyzer lightweight symbolic analysis efficiently generate initial analyzes prolog session binary analysis CCS october toronto canada evaluate OOAnalyzer scalable accurate recover abstraction program complex firefox mysql malware executables identifies executable accuracy average error rate distinguish constructor destructors virtual function virtual average