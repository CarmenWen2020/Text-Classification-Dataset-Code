symmetric searchable encryption SSE attention due practical application encrypt data beyond data addition deletion dynamic SSE scheme unfortunately update operation leak information update data address issue  SSE actively explore relation newly update data previously keywords contrary backward security enforces reveal information delete data propose practical non interactive backward secure SSE scheme introduce symmetric encryption symmetric puncturable encryption spe construct generic primitive cryptographic primitive  SSE scheme revoke server ability delete data instantiate scheme practical puncturable pseudorandom function implement dataset experimental demonstrate efficiency scalability scheme achieves speedup almost latency server storage consumption CCS CONCEPTS security privacy privacy preserve protocol management query encrypt data keywords symmetric searchable encryption puncturable encryption backward security introduction symmetric searchable encryption SSE allows server directly encrypt data research realize various SSE scheme tradeoff efficiency expressiveness security scheme dynamic SSE data addition deletion security SSE guarantee protection data content query capture define leakage function express information leak update query dynamic SSE desirable enrich functionality however data addition deletion exist dynamic SSE scheme leak information specifically data addition reveals relation newly data keywords practical attack information data addition exploit compromise privacy query keywords accordingly secure SSE scheme recently linkability newly data query keywords regard data deletion exist scheme server revocation filter delete data index identifier data deletion server delete data hide relation delete data subsequently query keywords backward security however backward secure SSE server longer retrieve delete data informal notion backward security SSE recently formalize notion backward secure SSE scheme propose scheme introduce communication complexity computation complexity nevertheless exist non interactive session 4D encrypt computation CCS october toronto canada backward secure SSE scheme janus scheme data index encrypt puncturable encryption later server puncture secret decrypt retrieve index delete puncture physically remove due adopt expensive public puncturable encryption however janus hardly deployed fetch index query keyword deletion hence construction practical backward secure SSE scheme efficient puncturable encryption scheme tackle public SSE therefore exist practical symmetric alternative puncturable encryption satisfies requirement SSE application backward  affirmatively novel symmetric puncturable encryption spe construct practical backward secure SSE scheme propose spe contribution summarize formalize syntax security definition symmetric puncturable encryption spe suitable dynamic SSE application client efficiently enforce data deletion refine spe propose variant additional incremental spe client conduct deletion outsource partial puncture secret server hence data delete gradually constant local storage propose generic incremental spe cryptographic independent keyword backward  SSE scheme leverage refine spe update operation leak information update keyword update data index furthermore elaborate extend SSE scheme batch deletion spe SSE scheme secure random oracle model static assumption instantiate construction puncturable pseudorandom function GGM prf non trivial manner obtain practical scalable backward secure SSE scheme janus implement janus python evaluate database azure demonstrate efficiency perform comprehensive comparison backward secure SSE scheme janus others encryption function comparable puncture function achieves speedup moreover janus brings server storage encrypt database achieves speedup latency related symmetric searchable encryption notion symmetric searchable encryption SSE SSE security query functionality performance optimization SSE scheme leakage access recently researcher exploit leakage security SSE leakage abuse attack pad secure multi computation leveraged defense SSE scheme data addition deletion dynamic SSE introduce notion backward security dynamic SSE reduce leakage due addition deletion respectively driven attack exploit leakage dynamic operation effort recently achieve security scheme propose secure addition hiding relation newly data previous query recently formally define notion backward security dynamic SSE backward secure scheme resort constrain pseudorandom function limit server capability maintain insert delete entry aka counter link document keyword token generate entry delete however approach introduces extra interaction query server encrypt besides entry database resort public puncturable encryption although non interactive costly puncturable encryption operation practically deployable propose novel symmetric puncturable encryption employ dynamic SSE realize backward security efficient scalable manner puncturable encryption puncturable encryption introduce miers realize security secure message puncture secret decryption previous ciphertexts cannot decrypt exposure puncture secret recent puncturable encryption useful application devise chosen ciphertext secure fully homomorphic encryption secure exchange protocol adapt construct backward secure SSE knowledge however exist puncturable encryption propose public setting suitable impractical scenario symmetric setting initialize practical symmetric alternative puncturable encryption leverage practically deployable  secure SSE scheme PRELIMINARIES briefly introduce cryptographic primitive throughout syntax security session 4D encrypt computation CCS october toronto canada definition puncturable pseudorandom function dynamic symmetric searchable encryption symmetric encryption symmetric encryption scheme message usually consists algorithm SE SE enc SE dec syntax SE enc input secret message generates ciphertext SE dec input ciphertext secret recovers return failure correctness message encrypt recover secret briefly recall ind cpa security definition SE define via  cpa SE enc SE enc AO enc return SE enc AO enc return ind cpa security SE definition semantic security SE SE SE enc SE dec symmetric encryption scheme ind cpa secure sufficiently security parameter probabilistic polynomial ppt adversary advantage define adv ind cpa SE  cpa SE negligible pseudorandom function function define pseudorandom function prf ppt adversary advantage define adv prf AF negligible random function puncturable pseudorandom function recall syntax security puncturable pseudorandom function pun PRFs prf puncturable prf additional algorithm punc eval satisfy punc input prf output puncture secret eval input puncture output correctness punc eval others security similarly security pun prf define described  prf eval AO eval return punc return security pun prf definition security pun PRFs prf secure pun prf ppt adversary advantage adv pun prf negligible adv pun prf  prf symmetric searchable encryption dynamic SSE scheme setup update comprise algorithm protocol setup DB security parameter database DB output EDB secret client EDB encrypt database EDB protocol client input server input EDB protocol return server client keyword scheme query restrict keyword update EDB protocol server input EDB client input update operation delete document keyword input parse document index ind keywords protocol input logically delete EDB correctness dynamic SSE scheme setup update query protocol return overwhelm probability formal definition refer security security SSE capture versus ideal formalization brief express intuition adversary information content database query beyond explicit leakage security model parameterized stateful leakage function   LUpdt capture session 4D encrypt computation CCS october toronto canada information adversary component express information leak setup update operation respectively task adversary distinguish ideal notion security definition SSE definition loosely definition ensures whenever client trigger operation adaptively adversary obtains information infer correspond leakage function definition adaptive security dynamic SSE setup update dynamic SSE scheme leakage function adaptively secure ppt adversary polynomial query exists efficient simulator   negl   define  chooses database DB EDB generate setup DB adaptively performs resp update query input resp receives transcript generate resp update eventually observes transcript operation output  chooses database DB receives EDB generate simulator  DB adaptively performs resp update query input resp transcript generate  resp LUpdt finally observes simulated transcript output backward security SSE backward security dynamic SSE firstly define formalize briefly security ensures update query leak information involve keywords keyword document update backward security ensures subsequent query keyword reveal document index ind previously delete later worth ind reveal doubt query issue insertion ind deletion therefore backward security considers document delete successive operation borrow formal definition verbatim ahead recall leakage function later leakage function query issue entry query keyword update query operation input timestamp gradually increase query leakage function leakage exist SSE scheme capture query perform keyword formally keyword define consists timestamps query leak query related keyword capture backward security recall leakage function TimeDB DelHist introduce keyword TimeDB non delete document  along timestamps insert database formally TimeDB define TimeDB ind ind del ind TimeDB construct simply query completely oblivious previously document delete later remain information specifically DB ind ind TimeDB DelHist deletion consists timestamps deletion operation timestamps insert entry remove operation formally DelHist define DelHist del ind del del ind ind leakage function described backward security SSE formally define definition security dynamic SSE adaptively secure dynamic SSE scheme setup update secure iff update leakage function LUpdt  ind ind stateless function definition backward security dynamic SSE adaptively secure dynamic SSE scheme setup update backward secure iff update leakage function  LUpdt LUpdt ind  TimeDB DelHist stateless remark backward security weak backward security currently security dynamic SSE scheme achieve roundtrip addition SSE scheme achieves weak backward security leakage update query independent update keyword def document def hence limited operation janus propose scheme achieves security strength concurrent achieve backward security introduces additional roundtrip session 4D encrypt computation CCS october toronto canada  pun cpa spe enc msk   msk keygen enc msk query AO enc msk  ski pun ski return SK msk return ski enc msk return enc msk   return return semantic security spe symmetric puncturable encryption introduce cryptographic primitive symmetric puncturable encryption spe symmetric version puncturable encryption syntax security spe symmetric puncturable encryption scheme spe message tag consists tuple ppt algorithm keygen enc pun dec keygen input security parameter maximum tag puncture algorithm output initial secret msk enc msk input msk message associate tag algorithm output ciphertext pun ski input ski tag algorithm output puncture secret ski decrypt ski decrypt encrypt SK secret msk dec ski input secret ski  tag output decryption fails correctness security parameter integer msk keygen ski pun ski message arbitrary distinct tag puncture ski dec ski enc msk security security symmetric puncturable encryption define ind pun cpa security definition standard  definition symmetric encryption introduce oracle puncture oracle corrupt oracle detail puncture oracle tag input update secret revoke adversary query oracle adaptively puncture secret corrupt oracle sends adversary recent puncture secret puncture challenge tag concrete description definition semantic security spe symmetric puncturable encryption scheme spe ind pun cpa secure ppt adversary security parameter advantage adv ind pun cpa spe negligible adv ind pun cpa spe  pun cpa spe selective security weaker security spe scheme define variant ind pun cpa contrast adversary submit challenge tag puncture later without loss generality adversary assume issue distinct puncture query index puncture query restriction specifically restrict depict capture definition selective security spe symmetric puncturable encryption scheme spe ind spun cpa secure ppt adversary advantage adv ind spun cpa spe negligible adv ind spun cpa spe  spun cpa spe apply spe backward secure dynamic SSE local storage desirable exist spe scheme incremental puncture client constant secret delete keyword document spe incremental spe spe incremental puncture intuitively tag revoke puncture secret associate partial secret evaluate constant previous secret puncture secret increase linearly puncture consists puncture formally define incremental puncture assume puncture secret puncture ski msk psk pski subsequent puncture secret tag ski msk psk psk psk pun ski remark selective security weaker usually literature additional impose puncture oracle session 4D encrypt computation CCS october toronto canada  spun cpa spe enc msk   enc msk query msk keygen AO enc msk  return ski pun ski return ski SK msk return enc msk enc msk   return return selective security spe spe scheme incremental exists efficient algorithm  msk psk  msk psk pskj puncture secret evaluate via  msk input ind pun cpa secure spe generic spe public puncturable encryption PPE specific generation procedure PPE keygen enc pun dec ind pun cpa secure public puncturable encryption define input security parameter keygen generates public secret mpk msk keygen input mpk enc mpk  algorithm spe public PPE efficiently compute function msk mpk msk straightforward spe scheme spe keygen enc pun dec enc msk enc msk algorithm identical PPE assume PPE keygen enc pun dec ind  secure scheme easy spe scheme derive PPE ind pun cpa secure detail reduction algorithm public mpk PPE easily simulate encryption oracle spe mpk query puncture query simulated directly leverage oracle reduction perfectly query issue adversary hence security spe readily PPE framework concrete  cpa secure spe exist PPE scheme however scheme derive suffers computation cannot incremental puncture feasibility practical novel incremental spe scheme ind spun cpa secure SSE application incremental spe pun prf novel spe pun prf algorithm punc eval symmetric encryption scheme SE SE enc SE dec cryptographic hash function detail generic spe scheme spe keygen enc pun dec construct keygen input security parameter positive integer chooses random uniformly random msk enc msk input msk message along tag computes ciphertext compute ski ski calculate ski compute SE enc output ciphertext correspond tag pun ski input tag ski mski psk psk pski tag mski ski SK msk generates puncture secret ski compute pski punc ski ski ski mski ski output secret ski mski psk psk pski dec ski input secret ski mski psk psk pski  associate tag decrypts compute skℓ skℓ otherwise directly proceed evaluate eval  skℓ recover message SE dec correctness correctness spe readily pun prf symmetric encryption SE ski mski psk psk pski associate tag attach eval  sks session 4D encrypt computation CCS october toronto canada derives eval  sks eval  skℓ skj finally message correctly recover compute SE dec security analysis propose spe scheme proven ind spun cpa secure random oracle model security pun prf SE theorem selective security assume secure pun prf model random oracle SE ind cpa secure symmetric encryption propose spe ind spun cpa secure random oracle model proof security spe scheme series denote   probability happens  exactly selective security def specifically challenge tag challenger generates msk msk keygen responds adversary encryption query msk puncture query recent secret skj  psk psk pskj compute pskj punc skj skj skj skj  skj psk psk pskj corrupt query return recent secret ski otherwise return challenge message randomly  enc msk sends adversary output without loss generality assume issue distinct puncture query puncture query recall hash function model random oracle definition easy adv ind spun cpa spe ski ski ski compute setup directly query obviously essentially identical previous difference ski chosen uniformly random random oracle concretely ski generate skk ski ski regard remain query directly lemma assume secure pun prf random oracle computationally indistinguishable adv pun prf QH adv prf QH maximum puncture query random oracle query respectively differs previous generation ciphertexts challenger chooses uniformly random instead compute ski encrypt message tag precisely encryption query challenge query encryption query directly computes SE enc otherwise calculates ski computes SE enc challenge query randomly chooses computes SE enc lemma assume secure pun prf computationally indistinguishable adv pun prf moreover advantage negligible ind cpa security underlie symmetric encryption scheme SE formally lemma assume SE ind cpa secure symmetric encryption scheme adv ind cpa SE suppose lemma easy adv ind spun cpa spe adv pun prf QH adv prf adv ind cpa SE remains lemma lemma computationally indistinguishable difference replacement ski random unless ski adversary query happens glance probability easily bound random distribution ski easy task response puncture query encryption query reduce entropy ski instead lemma achieve session 4D encrypt computation CCS october toronto canada proof lemma ahead define sequence skℓ chosen uniformly random specifically exactly respectively intend successive computationally indistinguishable  combine altogether argue assume secure pun prf random oracle computationally indistinguishable adv pun prf QH adv prf QH random oracle query proof difference skℓ randomly compute skℓ skℓ adversary query skℓ recall random oracle identically distribute therefore denotes query skℓ bound probability suppose occurs non negligible probability exists efficient algorithm successfully security pun prf precisely algorithm simulates described challenge tag simulator evaluation oracle eval skℓ skℓ skℓ randomly skℓ randomly chosen prf skℓ implicitly skℓ  ski tuple ski ski empty query LH query ski oracle eval skℓ simulate query query query LH directly return correspond LH otherwise output LH encryption query directly  evaluation oracle eval skℓ skℓ prf skℓ computes ski SE enc sends tag puncture query directly return otherwise responds query directly skj compute pskj punc skj challenger psk psk punc skℓ skℓ pskj psk ski mski psk psk pski puncture query mski ski return ski corrupt query issue challenge query psk evaluate skℓ eval psk computes ski SE enc finally output return LH chooses exists satisfy eval psk skℓ directly output random otherwise output return entire description hereafter denote simulated easy perfectly simulates happens currently analyze probability clarity denote exists LH eval psk col exists LH skℓ eval psk simulation BO eval skℓ psk col col recall belong recent encryption tag accord restriction def session 4D encrypt computation CCS october toronto canada equality correctly hence adv pun prf col col QH adv prf QH query goal skℓ skℓ skℓ adv prf skℓ randomly chosen prf analysis input security parameter adversary chooses secret sends challenger prf skℓ truly random function domain output otherwise easy derive skℓ skℓ skℓ skℓ skℓ skℓ skℓ skℓ skℓ deduce skℓ skℓ adv prf combine equality adv pun prf QH adv prf assume secure pun prf random oracle computationally indistinguishable adv pun prf QH adv prf proof proof involve complicate reduction difference skk randomly chosen generate skk skk identically distribute query skk denotes query skk analyze probability occurs simulated detailed whenever challenge tag simulator evaluation oracle eval skk challenger psk psk punc skk skk skk randomly chosen prf random randomly chooses skk skk skk implicitly skk computes ski ski ski ski empty query LH psk ski simulate query query query LH directly output correspond LH otherwise return LH encryption query evaluates ski otherwise eval psk ski computes sends SE enc puncture query directly return otherwise responds query skj straightforwardly compute pskj punc skj directly pskj psk recall psk punc skk ski mski psk psk pski puncture query mski ski return ski corrupt query issue challenge query computes ski return SE enc finally output return LH chooses exists satisfy eval psk skk directly output random otherwise output return description intend upper bound probability essentially analysis session 4D encrypt computation CCS october toronto canada identical analysis adv pun prf QH adv prf proceed bound probability remark challenge ciphertext encryption query perfectly simulated cannot directly argue instead negligibly denote rand skk respectively rand rand rand equality perfectly simulates happens skk argue rand negligibly demonstrate reduction security pun prf essentially reduction simulation simulator adopts strategy output reduction conduct whenever challenge tag simulator evaluation oracle eval skk challenger psk psk punc skk skk skk randomly chosen prf skk skk uniformly random skk implicitly skk computes ski ski ski ski empty  LH psk ski simulate query query query LH directly return associate LH otherwise output LH encryption query evaluates ski otherwise eval psk ski computes SE enc return puncture query directly return otherwise responds query directly skj compute pskj punc skj directly pskj psk recall ski mski psk psk pski puncture query  ski ski return adversary issue corrupt query challenge query computes ski return SE enc finally output chooses exists satisfy eval psk LH output otherwise return denote exists LH eval psk col exists LH skk eval psk BO eval skk col BO eval skk rand rand rand rand col moreover col rand col col rand BO eval skk BO eval skk rand adv pun prf rand adv pun prf combine equality adv pun prf QH adv prf eventually proof lemma proof lemma suppose efficient adversary capable distinguish nonnegligible probability efficient algorithm successfully security pun prf detail session 4D encrypt computation CCS october toronto canada input security parameter algorithm evaluation oracle eval skk skk randomly chosen prf simulates hybrid challenge tag simulator directly implicitly challenge challenger CF pun prf psk psk punc skk skk chosen uniformly random randomly skk skk computes ski ski psk ski simulate query encryption query responds query compute ski generates SE enc psk evaluate eval psk ski computes SE enc puncture query pskj psk otherwise computes pskj punc skj puncture query ski mski psk psk pski mski ski return ski issue corrupt query challenge query calculates ski generates challenge ciphertext SE enc finally output otherwise easy perfectly simulates skk otherwise conduct perfect simulation hence adv pun prf proof lemma proof lemma easily reduce ind cpa security SE suppose exists efficient adversary correctly non negligible advantage leverage construct algorithm efficiently ind cpa security SE non negligible probability input security parameter algorithm encryption oracle enc chosen uniformly random simulates whenever randomly skk computes ski ski ski query encryption query query directly message encryption oracle enc sends response SE enc evaluates ski computes return SE enc puncture query generates secret skj compute pskj punc skj skj  psk psk pskj puncture query ski mski psk psk pski mski ski return ski corrupt query issue challenge query message challenger sends response SE enc algorithm return output easy perfectly simulates therefore adv ind cpa SE combine proof ind spun cpa security spe scheme random oracle model theorem initial attempt generate ski prf cryptographic hash rid random oracle unfortunately puncture query cannot simulated addition scheme proven selectively secure improve adaptive security leverage exist technique transform selective security security construction practical adaptively secure incremental spe scheme without random oracle future dynamic SSE incremental spe generic construction dynamic SSE incremental spe propose instantiation basis GGM prf generic construction dynamic SSE scheme adaption puncturable encryption difference scheme replaces adopt public puncturable encryption incremental spe deletion protocol client server scheme janus modification remark later secure SSE instance achieve backward security instance σadd insert index encrypt spe scheme σdel puncture delete index conduct query server protocol session 4D encrypt computation CCS october toronto canada algorithm dynamic SSE incremental spe setup EDBadd  σadd σadd setup EDBdel  σdel σdel setup msk psk del SC EDBcache return EDBadd EDBdel EDBcache   σadd σdel msk psk del SC KΣ EDB client SC msk psk return msk tkn server del reset deletion msk spe keygen update msk msk msk psk msk SC client server σadd  σadd EDBadd server ctn ciphertexts tag σdel  σdel EDBdel server psk psk  puncture tag server server SK msk psk  decrypt entry ciphertext indi spe dec SK cti   indi  EDBcache tkn   ind   EDBcache tkn return update KΣ ind EDB client  ind msk msk msk psk SC del msk del deletion msk spe keygen msk msk psk msk SC spe enc msk ind fix msk σadd update  σadd EDBadd msk  spe  msk σdel update   σdel EDBdel psk msk σadd σdel retrieve encrypt index puncture correspond delete index respectively server puncture associate local along token decrypt index delete puncture framework encryption secret msk spe keyword puncture gradually deletion increase deletion successive query scheme upper bound pre define integer contrast janus secret server client encrypt index future insertion reveal secret decrypt index delete therefore update encryption nevertheless encrypt index server access query hence adopt strategy cache server generic scheme setup update built incremental spe scheme spe spe keygen spe enc spe  spe dec secure dynamic SSE scheme   setup   update del prf described detail algorithm setup input security parameter client chooses generates EDBadd  σadd EDBdel  σdel setup algorithm σadd σdel initializes empty msk psk del SC EDBcache msk encryption keywords psk local future puncture client del deletion keyword SC query keyword EDBcache previous index client output KΣ   EDB EDBadd EDBdel EDBcache σadd σdel msk psk del SC KΣ EDB perform query client input KΣ local msk psk SC sends server msk along token tkn fetch previous cache client σadd σdel protocol server obtains encrypt index puncture update combine puncture msk recover index puncture server return consist newly recover index cache exclude newly delete encryption session 4D encrypt computation CCS october toronto canada refresh encrypt entry update KΣ ind EDB insert entry ind client retrieves associate encryption msk spe msk encrypts ind tag  ind client insert ciphertext tag entry exactly EDBadd proceed delete entry ind del client retrieves associate local msk psk puncture msk tag  ind puncture  associate msk update associate local psk insert  entry EDBdel remark another difference janus deletion bound consecutive query adjustable keywords keyword runtime accord workload newly index entry puncture keyword derive secret previous cached server update entry query token generate via entry encrypt argue critical deletion frequent addition later instantiation naturally batch deletion enables multiple deletion puncture actual deletion increase security analysis janus scheme realizes weak backward security define server insert entry delete later timestamps deletion scheme achieve security readily σadd σdel focus backward security formally theorem theorem assume σadd σdel LF adaptively secure SSE scheme spe ind spun cpa secure secure prf propose SSE LBS adaptively secure LBS LSR BS BS define LSR BS TimeDB DelHist BS ind LF denotes leakage underlie secure SSE scheme define proof proof theorem difference security construction reduce ind spun cpa security propose spe detailed explanation later proof construction simulator almost completeness entire proof exactly SSE security def  difference previous computation prf replace random particularly resp evaluate previously unseen keyword resp document keyword ind random chosen token resp tag correspond directly retrieve whenever reuse input obviously induces distinguish advantage prf hence adv prf query reduction identical underlie SSE instance σadd σdel replace invoke simulator sadd  respectively bookkeeping update update query postpones encryption puncture operation subsequent query update leak information content due  σadd σdel addition    consists encryption index query associate tag correspond insertion timestamps  consists puncture associate tag relevant timestamps actually   correspond update subsequently query keyword scheme σadd σdel hence input simulator sadd  respectively precise description version distinguish advantage adv SSE LF σadd  sadd adv SSE LF σdel     insertion efficient adversary σadd σdel sadd  associate simulator encryption delete document specifically insert index update delete later prior subsequent replace constant encrypt spe concrete description version modification ciphertexts associate puncture tag distinguish advantage reduce incremental spe briefly simulator reduction delete tag update submit challenge tag simulate encryption non delete document puncture leverage encryption oracle puncture oracle respectively adv ind spun cpa spe encryption query puncture query reduction differs previous construct   update explicitly compute leakage information puncture tag associate previous encryption query simulator submit challenge tag puncture query session 4D encrypt computation CCS october toronto canada TimeDB DelHist leverage information construct   detail precisely described version clearly essentially identical tag generate equivalent precisely tag generate instead generate document keyword update document index suppose delete update guarantee previously insert later delete document keyword ind associate unique tag ensure consistence detailed description version easy prior simulator remains replace explicitly keyword generate token token generate exactly replace min concrete description version clearly simulator easy efficiently simulated rely leakage function LBS detail simulator directly leakage TimeDB DelHist input   avoids update hence  LBS combine distinguish advantage advantage ppt adversary SSE scheme   LBS adv SSE LF σadd  sadd adv SSE LF σdel   adv prf adv ind spun cpa spe instantiation instantiate generic SSE scheme cryptographic primitive janus recall scheme mainly construct secure SSE spe former instantiate SSE scheme diana spe instantiate basis GGM prf presentation introduce pun prf built GGM prf pseudorandom generator output GGM prf define  binary representation prf input binary height leaf correspond output prf ahead denote leaf intend puncture sibling node respectively puncture   prf  gxi puncture  contains sibling allows server evaluate mention employ GGM prf implement pun prf keyword document ind GGM PRFs leveraged encrypt ind tag derive update ind corresponds leaf node GGM secret GGM initialize keyword secret remain GGM generate hash chain orderly namely client generate pun PRFs GGM encrypt document index client pun prf associate leaf node compute recall SSE scheme maximum deletion puncture varied keywords consecutive query keyword regard deletion puncture perform orderly GGM deletion ind issue delete document puncture operation perform GGM traverse sibling node leaf node correspond tag derive ind sibling generate puncture  insert along tag deletion instance σdel client deletion computes secret GGM update local subsequent deletion deletion ind delete document client local puncture recent secret GGM procedure client sends local server server evaluate GGM PRFs puncture meanwhile server obtains puncture σdel evaluate puncture GGM PRFs tag delete puncture server recovers document index delete protocol input tag associate document keyword therefore height binary tag later tag evaluation document keyword batch deletion client delete document keyword aka document keyword straightforward delete scheme janus however communication session 4D encrypt computation CCS october toronto canada complexity janus computation storage enc decryption puncture local ciphertext server per deletion   msk  psk maximum deletion consecutive query   derive keyword document ind keywords DB spe ciphertext document keyword msk local spe psk puncture spe bandwidth roundtrip increase linearly delete document instantiate spe multi puncturable prf instead standard puncturable prf propose SSE scheme efficiently batch deletion secret GGM puncture delete tag node compact puncture generate uploaded server batch deletion reduction interaction bandwidth storage overhead tradeoff client cache delete document index batch deletion actual deletion consecutive query keyword keyword parameter limit deletion operation limit deletion batch implement future experimental evaluation setup develop scheme python  implement cryptographic primitive aes cipher sha pseudorandom generator GGM prf implement via aes enron email dataset extract document keyword maximum keyword regard deploy scheme azure isolated DV instance intel xeon 4GHz cpu core 0G ram ubuntu server instal code publish github comparison opensource code janus adjust configuration parameter evaluation understand performance propose scheme conduct comprehensive evaluation storage addition encryption deletion puncture specifically scheme evaluate scheme janus scheme janus unless otherwise  default document generate via truncate sha computation storage complexity janus reference empirical evaluation storage evaluation regard server storage maintain addition enron email dataset online http cmu edu enron janus online http github com    scheme online http github com   scheme storage evaluation scheme client per baseline MB 2GB janus MB 4GB janus MB 9GB client local server storage SSE janus janus respectively scheme tag tag tag janus janus storage puncture server per deletion deletion puncture scheme janus janus janus puncture deletion scheme baseline storage overhead achieve backward security janus janus built encrypt comprise encrypt document keyword index entry report encrypt scheme respectively explain overhead backward security evaluate deletion assume token scheme entry aka byte difference storage mainly ciphertext janus  along ciphertext decryption ciphertext byte baseline due symmetric encryption janus introduces overhead report ciphertext janus byte byte almost triple baseline janus consumes 4GB index entry janus consumes 9GB client janus janus maintain local  encryption janus byte per keyword janus msk GGM puncture byte deletion query cached client byte maximum scheme local keywords session 4D encrypt computation CCS october toronto canada per index entry janus tag janus tag janus encryption comparison dels janus janus comparison deletion puncture delete document generate client encrypt server janus janus respectively instantiate janus via GGM prf puncture deletion puncture tag sibling node puncture leaf GGM sibling tag aka height GGM janus puncture deletion constant puncture tag attach bottleneck puncture tag deletion remove operation previous query cached server puncture tag operation addition evaluation evaluate performance addition insert database without invoke deletion average encryption per janus janus factor tag  fold  GGM height determines aes determines GGM encryption janus constant janus janus  although janus outperform janus decryption comparable encryption dels dels dels dels dels dels dels dels dels dels dels dels janus due symmetric construction janus practically deployable demonstrate later besides encryption exist SSE scheme assume setup unless encryption invoked periodically reset leakage function deletion evaluation mention puncture delete document compute client uploaded server bandwidth consumption server reflect increase tag client report affected GGM puncture deletion linear tag generate sibling puncture leaf puncture GGM deletion janus janus tag achieves speedup puncture evaluation demonstrate practicality janus latency janus fairness deletion comparison regard janus deletion dels depict janus achieve speedup dozen latency janus although per decryption janus janus deletion decryption without puncture janus janus dels janus fetch index decrypt janus speedup dels janus fetch index decrypt janus speedup explore performance janus evaluate latency various parameter setting understand impact dels decryption fetch index increase increase straightforward GGM decryption another observation deletion session 4D encrypt computation CCS october toronto canada core decrypt index dels dels dels throughput janus latency reduce fold index decrypt reduce within decryption deletion pun prf compute puncture aes compute confirm scalability janus specifically cluster DS standard instance core evaluate index decryption throughput janus depict measurement derive average trial index throughput janus linearly core CONCLUSIONS investigate approach achieve practical dynamic symmetric searchable encryption scheme security guarantee introduce cryptographic primitive symmetric puncturable encryption propose generic construction standard puncturable pseudorandom function although proven selectively secure random oracle model sufficient application challenge construct practical adaptively secure incremental symmetric puncturable encryption scheme without random oracle primitive practical backward secure symmetric searchable encryption scheme instantiate efficiently symmetric cryptographic moreover implement scheme dataset experimental demonstrate scalable recall protocol achieves weak backward security leak deletion update cancel addition update backward secure dynamic symmetric searchable encryption roundtrip