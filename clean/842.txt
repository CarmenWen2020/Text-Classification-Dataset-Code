dynamic symmetric searchable encryption crucial minimize information reveal server update operation insertion deletion relevant privacy define context backward privacy server link update operation previous query extensively literature limit server entry delete database query deletion backward privacy formally recently introduce formal definition variable leakage secure exist scheme satisfy introduce novel construction improve previous multiple scheme achieves II backward privacy experimental evaluation faster computation previous construction leakage surprisingly faster scheme leakage efficient implementation backward private scheme asymptotically within polylogarithmic multiplicative factor theoretical optimal achieves backward privacy previous construction linear update request keywords arbitrarily previously delete scheme improves upon reduce roundtrips extra leakage keywords searchable encryption backward privacy database introduction encrypt database remote server retain ability access dynamically maintain fundamental compute client database outsources untrusted server subsequently issue query retrieve document keyword ideally server content document achieve traditional encryption scheme additional meta information frequency keywords database etc perfect privacy theoretically achievable encryption technique fully homomorphic encryption performance overhead however limit adoption symmetric searchable encryption SSE originally propose access encrypt database efficiently slightly relax privacy requirement concretely SSE reveals information server query execution leakage leakage typically reveals query refer keyword access reveals file return query dynamic symmetric searchable encryption leakage SSE focus static datasets SSE scheme update database principled manner dynamic SSE scheme introduce dynamic SSE however introduces additional privacy concern due functionality file database reveal contains keywords keyword reveal file remove database backward privacy scheme avoid leakage associate private introduce chang mitzenmacher subsequently session 5D encrypt computation CCS october toronto canada comparison exist backward private dynamic SSE scheme document keyword distinct keywords document keyword update file currently delete entry RT roundtrips BP achieve backward privacy notation hide polylogarithmic factor scheme computation communication client storage BP update update RT  fides loд II dianadel loд janus  loд mitra sec loд II orion sec horus sec    loд refine privacy become essential dynamic SSE scheme recent file injection attack become particularly effective SSE scheme private scheme limit leakage backward private literature informal mention folklore construction ORAM technique formal definition construction achieves exist recently introduce formal definition backward privacy leakage secure leakage backward privacy insertion scheme reveal previous update associate identifier file currently database file insert II leakage backward privacy update addition information leakage II scheme reveal update related leakage weak backward privacy finally scheme reveal exactly deletion update cancel previous addition deletion tenth operation cancel addition fifth operation satisfy hiding actual identifier file delete prior scheme backward private construction achieve privacy efficiency offs fides II construction deployment private SSE scheme update entry keyword file identifier del addition deployment deletion user query deployment retrieves entry remove delete locally request file remain identifier server server cannot identifier delete dianadel janus scheme rely puncturable cryptographic primitive achieve increase amount information leak dianadel puncturable pseudorandom function achieve concrete performance fides janus puncturable encryption allows query execute interaction finally  exist scheme however construction recent ORAM scheme garble circuit avoid interaction somewhat limit potential adoption due concrete communication overhead serf mostly theoretical feasibility scheme SSE scheme backward privacy scheme improve comparison II backward privacy scheme mitra backward privacy II asymptotically achieves performance fides however due symmetric encryption experimental evaluation indicates computation update surprisingly mitra overall performance diana del janus achieve backward privacy mitra efficient exist backward private SSE combination leakage practical performance simplicity candidate adoption optimize exist scheme mitra impose update related clearly  document currently previous deletion optimal inspire explore backward private SSE scheme optimal quasi optimal polylog exist crucially  construction relies ORAM achieves furthermore examine scheme private quasi optimal construction affirmative scheme orion horus quasi optimal orion achieves backward privacy asymptotically interaction however asymptotics deletion motivate develop session 5D encrypt computation CCS october toronto canada scheme horus improves efficiency orion achieve performance reduce interaction roundtrips  constant deletion horus roundtrips retrieve file identifier horus backward private however sufficient application contains experimental evaluation comparison performance construction overview technique scheme approach maintain encrypt index extensively literature dynamic SSE mitra similarity recent construction private triplet keyword document operation encrypt  generate location counter update updcnt maintain locally del deletion manner update access location random server retrieve file client simply  pseudorandom counter updcnt server identifier delete entry orion maintains data structure entry updcnt entry insert updcnt incremented entry delete entry correspond maximum updcnt swap correspond updcnt manner retrieve perform swap update lookup updcnt direction therefore mapping orion achieves privacy backward privacy oblivious omap data structure hide actual access memory location server naively implement approach interaction retrieve entry maintain privacy however observation omap instantiation reveals batch query execution roundtrips horus reduces obligatory amount interaction replace oblivious orion retrieve non recursive ORAM structure normally approach storage client maintain ORAM invalidates outsource database replace randomly generate ORAM generate pseudorandom function prf client prf achieve backward privacy ensure input consume prf throughout execution update introduce additional access counter updcnt content location correspond updcnt edit update solves privacy issue introduces client updcnt issue client perform binary execute parallel identify horus maximum therefore roundtrips reduce  however distribution previously access reveals operation server incremented updcnt leak information previous addition cancel deletion related SSE introduce propose  construction propose security definition SSE introduce sublinear construction chase kamara introduce broader notion structure encryption model encryption scheme disclosure predicate data searchable encryption specific structure encryption scheme explicitly efficient update database kamara  latter reduce amount leakage however neither privacy introduce notion efficient dynamic SSE scheme privacy extensively numerous propose improve construction introduce backward privacy capture leakage related delete entry without however definition construction knowledge focus backward privacy define notion backward private scheme recent SSE focus expressive query multiuser setting construction perform data disk combine SSE ORAM cryptographic background introduce notation definition denote security parameter ppt probabilistic polynomial denote negligible function protocol execution client server notation client input server input assume collection document  idd contains textual keywords alphabet database DB consists file identifier keywords idi DB file identifier idi contains keyword denote keywords DB distinct keywords document keyword DB DB denote document keyword session 5D encrypt computation CCS october toronto canada pseudorandom function gen generation function pseudorandom function prf GK denotes secure prf ppt adversary adv gen   truly random function searchable encryption dynamic symmetric searchable encryption scheme SSE setup update consists algorithm setup protocol update client server setup algorithm input security parameter output EDB secret client client local EDB empty encrypt database server sometimes notation setup refer setup parameter maximum entry EDB protocol database query keyword client output DB empty protocol modify EDB update EDB protocol insert entry remove entry database operation del input consists file identifier keyword protocol modify EDB definition minor modification api input data collection client setup update EDB functionally equivalent approach operation similarly exist update input entire file addition file identifier deletion protocol remove relevant keywords database functionally equivalent decompose multiple update protocol finally implicitly assume index DB client performs additional operation retrieve actual file omit construction informally SSE return query formal definition refer reader confidentiality SSE scheme parametrized leakage function LS LSR LU capture information reveal adversarial server throughout protocol execution LS corresponds leakage setup LSR leakage operation LU leakage update informally secure SSE scheme leakage reveal database DB leakage formally capture standard ideal   appendix definition definition SSE scheme adaptively secure respect leakage function iff ppt adversary adv issue polynomial query exists stateful ppt simulator sim     adv  adv sim backward privacy backward privacy SSE aim information leak dynamic scheme relation update informally scheme private relate update previous operation particularly useful hide addition keyword pre exist previously definition adaptively secure SSE scheme addition deletion keyword private iff update leakage function LU LU stateless function insertion deletion file identifier backward privacy aim limit information server execute keyword entry previously delete ideally SSE scheme reveal adversary previously delete entry file identifier delete entry formal definition backward privacy leakage reveals information reveals definition additional function notation entry query execute entry query timestamp keyword update del modify file keyword TimeDB function return timestamp file identifier keyword DB subsequently delete TimeDB del update function return timestamp insertion deletion operation formally update del finally DelHist function return delete entry insertion timestamp deletion timestamp adversary importantly reveals explicitly deletion corresponds addition DelHist del del del function leakage progressively increase formally define backward privacy leakage definition adaptively secure SSE scheme backward privacy BP iff LU LSR TimeDB II BP II iff LU LSR TimeDB update BP iff LU LSR TimeDB DelHist stateless function definition assumes scheme leak document session 5D encrypt computation CCS october toronto canada currently account leakage actually retrieve file namely TimeDB function explicitly reveals index return document oblivious data structure collection data operation insertion deletion lookup operation receives correspond argument lookup oblivious data structure privacy preserve version aim hide content sequence operation perform data structure intuitively sequence operation access sequence memory address access execute operation indistinguishable formal definition orion horus construction building oblivious omap oblivious data structure implement avl per instantiation oblivious non recursive ORAM structure node detailed description ORAM appendix non expert reader node contains information node data  data indicates node leaf   array ORAM leaf node omap protocol setup insert initialize structure retrieve insert detail appendix setup initializes ORAM empty node avl randomly chosen rootID subsequent insert traverse avl insert node node traversal ORAM access ORAM node finally access node encrypt mapped random insertion avl rebalancing execute via ORAM access analysis avl access retrieves node node retrieve overall performance unlike standard non recursive ORAM client perform access leaf avl ORAM stash sizeO access without affect asymptotic behavior storage operation omap access node node retrieve client remembers ORAM comparison client decides retrieve latter node node finally content access node update ORAM randomly chosen node encrypt permute ORAM layer operation terminate reveal information server avoid pad ORAM access dummy ORAM avl ID IDs sample avl ORAM operation alter structure indistinguishable server mitra backward private scheme propose mitra backward private scheme mitra approach encrypt manner leak server update insertion deletion update construction encrypt insertion deletion identifier specific file related operation location generate via pseudorandom function guarantee client efficiently generate location related specific keyword operation introduce construction private difference mitra backward private instead server allows generate location decrypt entry location directly decryption happens locally client setup setup algorithm algorithm generates secret input security parameter client initiate empty  FileCnt server encrypt entry whereas FileCnt locally update update procedure algorithm client receives keyword file identifier correspond operation del input entry  file client access  local FileCnt distinct  counter denotes update relation client FileCnt initialize latter counter increment counter client prf twice computes GK FileCnt GK FileCnt prf output addr encrypt server whereas prf output XORed entry becomes encrypt val server addr val server  addr val finally algorithm file keyword client counter FileCnt update session 5D encrypt computation CCS october toronto canada algorithm mitra setup gen FileCnt  empty FileCnt EDB  EDB server algorithm mitra update EDB client FileCnt null FileCnt FileCnt addr GK FileCnt val GK FileCnt addr val server server  addr val algorithm mitra EDB client  FileCnt GK    server server    client client GK remove delete return related generates  location correspond entry  server evaluate prf input GK FileCnt location compute previous update deterministic function  location server server retrieves   sends client upon encrypt client decrypts compute prf output GK FileCnt xoring encrypt security analysis scheme achieves privacy backward privacy II privacy immediately addr val server observes update indistinguishable random due pseudorandomness update input consume prf indeed server operation execute addition deletion update leakage empty backward privacy server prf evaluation previously update immediately reveals update operation beyond reveal server server deletion cancel addition backward privacy definition leakage corresponds BP II theorem regard security mitra proof appendix theorem  secure prf mitra  SSE scheme LU LSR TimeDB update efficiency mitra asymptotic performance update clearly client server entail constant operation communication transmit operation mitra FileCnt prf evaluation FileCnt xor operation client FileCnt ups server recall FileCnt update notation denote therefore overall asymptotic complexity operation communication communicate storage server update entry  permanent storage client loд keywords document counter keyword finally mitra roundtrip retrieve file identifier actual file retrieve interaction concrete performance mitra extremely update experimentally demonstrate significantly outperforms fides achieves leakage BP II communication bandwidth comparable performant scheme achieve BP mitra attractive server cryptographic operation improves server performance important server resource across tenant deployment mitra easy remove delete entry mitra EDB grows update deletion approach building dynamic SSE scheme extensively literature easy handle deletion avoid technique adopt previous scheme periodic operation execute mitra modify client remove delete entry encrypt remain session 5D encrypt computation CCS october toronto canada server encryption mitra deterministic ciphertexts violate privacy avoid maintain extra counter  incremented input prf scheme mitra asymptotically performance mitra backward privacy completeness construction described proven secure extend version orion backward private SSE quasi optimal orion horus SSE scheme backward private complexity proportional file keyword currently database achieves backward privacy reveals update related specific keyword achieves backward privacy reduce interaction computation communication strawman highlight difficulty achieve scheme quasi optimal non trivial interaction definition definition dynamic symmetric searchable encryption scheme optimal resp quasi optimal asymptotic complexity resp polylog non trivial interaction interaction trivial interaction none exist backward private scheme achieves  construction utilizes ORAM achieve backward privacy restrict attention scheme private construction quasi optimal achieves via elaborate multi layer data structure inspire data structure mitra scheme location entry compute whereas mitra compute FileCnt entry pointer previous file identifier related file insert previous file identifier null client locally file identifier another file contains insert client correspond entry previous identifier null identifier replaces local storage finally update previous entry identifier allows client traverse file identifier forw access correspond entry retrieves previous identifier previous identifier null deletion handle standard manner  client assume remove entry keyword file retrieves previous file identifier identifier entry previous entry eliminate entry oblivious described approach reveals access location update entry location previous entry reveal trivially violate privacy location access related previously access update leak manner information related delete entry violates backward privacy avoid leakage entire data structure instantiate oblivious define manner sequence location access throughout protocol indistinguishable random assume oblivious implementation access sequentially location reveal access previous assistance client decrypt entry compute location access therefore interaction scheme scheme trivial interaction challenge reduce interaction insight gain straw oblivious data structure readily scheme quasi optimal remain reduce interaction reasonable accept roundtrips grows hood oblivious construction avl node non recursive ORAM construction appendix node contains ORAM lookup reduce ORAM access avl recently ORAM access non interactive approach avl node fetch interaction however rely garble circuit avoid interaction access consumes garble circuit replace freshly encrypt client access approach perform lookup straw scheme roundtrips scheme trivial communication orion construction orion rearrange entry delete operation facilitate subsequent straw rely oblivious hide access location OMAPupd access update operation OMAPsr access update overview client maintains counter updtcnt keyword file session 5D encrypt computation CCS october toronto canada updtcnt updtcnt updtcnt DB IDs LastInd updtcnt updtcnt updtcnt DB IDs deletion LastInd deletion deletion updtcnt updtcnt DB IDs updtcnt LastInd sample deletion orion algorithm orion setup updtcnt LastInd empty rootID OMAPsr setup rootID OMAPupd setup rootID rootID updtcnt LastInd EDB EDB server keyword currently database initialize incremented insertion decremented deletion insertion client  mapping correspond updtcnt mapping updtcnt OMAPsr oblivious access file identifier delete specific entry whereas access updtcnt allows orion handle efficiently handle deletion delete entry client performs OMAPupd correspond update counter insert OMAPsr entry identifier recently insert file keyword retrieve updcnt OMAPsr simply swap delete item finally updcnt OMAPsr retrieve preparation update query particularly useful handle deletion guarantee file identifier correspond document retrieve entry reduce interaction observation oblivious construction handle batch query without obliviousness query interaction execute query batch yield quasi optimal interaction orion non trivial communication procedure orion detail algorithm update client correspond oblivious query corresponds interactive protocol described algorithm orion update EDB  rootID updtcnt OMAPupd  rootID updtcnt null updtcnt updtcnt null updtcnt updtcnt data updtcnt rootID OMAPupd insert data rootID data updtcnt rootID OMAPsr insert data rootID LastInd del updtcnt data  rootID OMAPupd insert data rootID updtcnt updtcnt entry updtcnt updtcnt data LastInd updtcnt rootID OMAPupd insert data rootID data updtcnt LastInd rootID OMAPsr insert data rootID updtcnt rootID  OMAPsr rootID LastInd  LastInd execute dummy oblivious access algorithm orion EDB updtcnt execute batch rootID OMAPsr rootID return setup setup client initializes empty updtcnt LastInd updtcnt keyword correspond file currently database keyword recent file identifier insert keyword client oblivious OMAPsr maintains mapping updtcnt input keyword update counter return correspond file identifier OMAPupd mapping updtcnt input keyword file identifier output update counter correspond entry negative entry previously delete encrypt database EDB session 5D encrypt computation CCS october toronto canada consists oblivious local contains updtcnt LastInd secret implicitly secret encryption oblivious update client oblivious access OMAPupd retrieve update counter correspond update distinguish addition deletion addition client updtcnt oblivious access OMAPupd insert mapping updtcnt OMAPsr insert mapping updtcnt finally LastInd newly deletion operation client update entry OMAPupd entry delete decrease updtcnt file  file  client update mapping oblivious access OMAPupd previous entry forw  deletion modification OMAPsr finally client fetch OMAPsr identifier insertion update entry LastInd preparation future update entry client access simply LastInd eventually client performs dummy omap access hide data dependent code addition guarantee OMAPupd OMAPsr whereas deletion correspond due extra effort update operation client retrieves file currently updtcnt issue oblivious access OMAPupd importantly access execute batch without reference node client fetch node deduce retrieve node terminates entire access subtree remapped encrypt ORAM achieve recall description oblivious instantiate avl access perform traversal entail node retrieval perform via non recursive ORAM structure assume access retrieve node oft client decrypt retrieve ORAM multiple query likely therefore ORAM layer client perform ORAM access ORAM non recursive ORAM access perform batch ORAM access perform batch layer interaction client performs remapping retrieve node update ORAM structure described access ensure leakage beyond additional layer client performs min access independently node layer actually remain dummy query extend maximal height avl efficiency orion asymptotic performance orion affected oblivious omap access entry update execute database update constant access quantity complexity orion regard recall entail access execute parallel analysis algorithm witho interaction communication complexity update algorithm iso oblivious access retrieve ORAM likewise communication complexity algorithm client storage simplicity presentation assume client updtcnt LastInd locally implies local storage entry typically MB unwanted exploit already exist oblivious delegate storage server OMAPupd mapping updtcnt LastInd whenever client access instead via oblivious access OMAPupd increase roundtrips entail communication affect asymptotic complexity scheme oblivious stash normally client instead outsource server operation modification client storage orion becomes server storage server stress grows update operation becomes correspond  structure already bound upper bound update client SSE billion update initializes ORAM structure server commit serious limit factor scheme due relative availability storage medium however setting issue alternative achieve via amortization trick client initializes ORAM structure layer afterwards update retrieves oblivious server scratch ORAM structure layer capacity encryption oblivious capacity operation update amortize per update asymptotic behavior orion affected asymptotics amortize manner session 5D encrypt computation CCS october toronto canada security analysis security analysis orion straightforward due oblivious throughout execution protocol server observes sequence ORAM chosen uniformly random due pad dummy query update server fix update implies privacy location server observes reveals update access ORAM entry remapped freshly chosen random location impossible server access specific update operation implies orion minimal leakage backward privacy proof appendix theorem assume OMAPsr OMAPupd instantiate secure oblivious orion adaptively secure SSE scheme LU LSR TimeDB horus efficient accord definition orion quasi optimal non trivial interaction downside however remains deletion actually horus modify version orion achieves asymptotic concrete horus   moreover deletion related becomes horus detailed description appendix modification orion replace OMAPsr non recursive ORAM structure access  updcnt avoid client instead generate secure prf trick however introduces security issue prf deterministic function generate output access updcnt situation arise multiple protocol execution assume insert chronological corresponds updcnt updcnt updcnt remove afterwards client retrieves updcnt OMAPupd evaluates prf retrieve ORAM operation violates privacy trivially reveals ORAM location access addition horus avoids introduce counter associate updcnt mapping specific previous update location location access continuation previous ORAM initial addition compute PRFK PRFK PRFK counter updcnt indicates update counter updcnt updcnt OMAPupd whereas orion OMAPupd updcnt delete client retrieves updcnt OMAPupd performs swap trick orion insert entry correspond previous update omap corresponds updcnt remove entry incremented PRFK ensures throughout protocol execution update operation input consume prf distribution ORAM server update indistinguishable random however introduces challenge operation client updcnt counter keyword retrieve OMAPupd perform access batch clearly roundtrips improve instead client engages binary execute batch goal identify updcnt location file identifier concretely file identifier associate client evaluates PRFK PRFK sends output ORAM server batch corresponds associate entry response proceeds binary   maximum keyword establish sequence previous update updcnt empty previously binary updcnt detailed procedure somewhat complicate account remapping entry described appendix  iso grows proportionally deletion forw terminates  entail  ORAM access access return hence communication complexity  deletion entry terminates retrieve entry mapped counter incremented hide future access downside ORAM access previously access update introduces leakage simulate transcript explicit knowledge addition negate deletion affect location horus backward private experimental evaluation report performance propose scheme exist implement mitra orion horus crypto openssl library cryptographic operation specifically aes prf scheme code release author diana scheme session 5D encrypt computation CCS october toronto canada millisecond mitra dianadel fides millisecond DB mitra dianadel fides millisecond DB mitra dianadel fides computation variable DB variable DB update variable DB deletion modify implement dianadel repository janus private scheme building fides described implementation publicly available xlarge aws machine  intel xeon 4GHz processor ubuntu lts 6GB ram 0GB ssd GP disk  enable scheme execute machine database ram wan machine roundtrip germany ireland interested execution communication update operation permanent client storage scheme variable database DB synthetic database  database randomly generate entry throughout variable document unless otherwise specify insert delete random entry query keyword emulate impact deletion performance average report performance comparison mitra focus performance mitra fides dianadel scheme implement cleanup enable remove delete entry described mitra others database graph growth strongly linear scheme grows whereas remains visibly unaffected database throughout execution mitra faster fides scheme leakage fides relies trapdoor permutation implement rsa achieve backward privacy mitra relies symmetric encryption improvement evidence practical performance mitra concretely overhead database roughly computation spent client server perform lookup emphasize performance mitra dianadel despite achieve privacy communication database grows linearly unaffected database fides mitra communication ratio former latter despite fides client token whereas mitra sends entire  communication gap becomes due server encrypt index cleanup mitra transmits approximately KB database regard communication dianadel configuration virtually mitra deletion percentage communication becomes mitra update update communication respectively variable database obvious conclusion update scheme almost unaffected database fides concretely due perform rsa private operation instead  crypto excellent performance fides byte client storage scheme impose loд permanent storage client maintain update counter keyword difference mitra fides counter per keyword whereas dianadel insertion deletion separately concretely local storage mitra fides roughly KB keywords twice dianadel comparison janus janus non interactive scheme firstly backward private secondly concrete performance scheme keyword database entry assume previous deletion increase roughly delete entry wan execute code server client machine report computation update session 5D encrypt computation CCS october toronto canada byte mitra dianadel fides byte DB mitra dianadel fides byte DB mitra dianadel fides communication variable DB variable DB update variable DB perform realworld mitra fides wan machine server client latency breakdown variable DB fides dominant overhead due computation whereas mitra due communication transfer server despite mitra outperforms fides accord mitra faster fides insight practical performance mitra popular enron email dataset contains roughly keyword email keywords performance mitra report DB keywords wan latency communication computation client storage KB performance orion horus performance orion horus instantiate oblivious ORAM aes implement scheme computation mitra fides database orion horus comparison fides backward privacy II explain detail fides grows strictly linearly perform correspond public operation orion client request ORAM server parse avl grows necessarily linearly assume request correspond random ORAM bucket server instead ORAM access request client subtree ORAM distinct bucket subtree handle mapped orion horus lack performance communication sheer overhead transmit ORAM concretely database orion transmits MB horus MB measurement fides KB core issue bucket ORAM SSE response SSE query exclude actual file retrieve implies overhead encrypt ORAM due retrieval multiple bucket per query insightful discussion issue simply client encrypt entire DB index regular encryption query recent research proposal explore combination oblivious structure trust hardware eliminate transmit network possibility scheme deletion despite limitation identify deduce implementation volume deletion performance scheme recall scheme orion horus quasi optimal essentially unaffected deletion indeed motivation explore direction computation scheme database percentage previous deletion remains fix deletion insert delete overhead fides grows deletion percentage increase mitra dianadel readily visible due orion horus fix previous deletion affect remain roughly constant conclusion PROBLEMS introduce backward private SSE scheme construction improve aspect mitra concretely exist scheme greatly outperform exist leakage construction orion horus quasi linear document keyword currently database previous achieve backward privacy linear update deletion related arbitrarily session 5D encrypt computation CCS october toronto canada mitra fides mitra fides mitra fides mitra fides  computation communication millisecond delete percentage mitra dianadel fides orion horus millisecond delete percentage mitra dianadel fides orion horus computation communication wan latency DB variable computation deletion DB orion horus achieve offs leakage performance leaf investigate develop scheme quasi linear non trivial communication without rely ORAM scheme private another direction devise scheme optimal deletion construction noninteractive quasi optimal finally revisit backward privacy definition evaluate leakage application deletion specific attack