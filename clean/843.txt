channel risk intel sgx recently attract attention spotlight newly discover fault attack OS adversary induces fault access sgx enclave almost propose defense focus attack effort indeed adversary variation attack render protection ineffective mention depth understand attack sgx report systematic analysis channel threat sgx focus risk associate memory management research identifies potential attack vector tlb dram module importantly highlight misunderstanding sgx memory channel demonstrate frequent AEXs avoid recover EdDSA secret channel grain monitoring enclave program combine cache enclave dram channel finding reveal gap ongoing security research sgx channel weakness redefine channel threat model secure enclave provoke discussion securely introduction security challenge establish trust execution environment tee capable data intensive compute critical purpose outsource analysis sensitive data electronic health untrusted purpose cannot solely rely cryptographic fully homomorphic encryption handle compute task practical promising alternative recent hardware progress intel software guard extension sgx sgx protection data code secure enclave resilient attack host operating administrator protection feature intel mainstream CPUs skylake kaby characterize trust compute TCB cpu package potential performance capability processor however simplicity enclave program utilize resource memory etc partially fully untrusted OS therefore potentially channel attack adversary outside enclave infer sensitive information inside operation resource sgx channel hazard unfortunately threat realistic serious prior adversary OS manipulate code  cpu mode sgx induce fault execution monitoring occurrence fault relatively environment adversary identify program execution trace sufficient extract text document outline image popular application library compromise cryptographic operation attack fault channel attack intel channel attack admit sgx defend sidechannel attack vector statistic cache statistic timing access via security threat due channel intel recommends independent software vendor enclave prevents leak channel information actually actively academia source partner mitigate threat intel statement radical hardware address channel defeat fault channel entire inside enclave unlikely software vendor daunt task understand security impact sgx channel develop practical technique mitigate threat building sgx application importance recent already witness mushroom attempt address sgx channel threat sensitive code session secure enclave CCS october november dallas TX usa data within detect fault hardware execution however primarily target fault attack although concern demonstrate attack vector certainly justified sole attention fault attack inadequate task  built upon minimum software complicate compute mission data intensive compute potentially avenue inside information trickle interaction outside external accomplish mission focus memory alone program virtual memory management physical memory partially fully expose untrusted OS mention service enclave program management etc attack effective extract sensitive information enclave absence comprehensive understand attack propose protection tends heavyweight intrusive channel attack adversary switch technique channel lightweight equally effective extract information approach understand memory channel comprehensive understand channel threat software vendor focus memory related channel important arguably effective category channel fault channel scope discussion deepen community understand memory channel attack defense mechanism important fault vector leak enclave program memory access attempt mitigate memory channel leak account entire attack channel attack enclave induces asynchronous enclave  AEXs demonstrate fault attack important  AEX interrupt rate feature sgx channel attack defeat protection capture signal however interrupt protection fragile sophisticated attack avoid interrupt acquire grain channel observation cache enclave memory hence defense sensitive code data effective attack across message research effort exploration memory channel attack research survey sgx channel attack involve memory management identify channel attack vector related address translation cache cpu hardware tlb structure cache memory entire cache dram hierarchy account address translation memory operation knowledge comprehensive analysis memory channel attack sgx enclave reduce memory channel attack demonstrate AEXs memory channel attack develop memory attack  monitoring spm spm attack reset access flag entry pte monitor unlike fault attack fault generate access manipulation access flag trigger interrupt directly however attack flush translation lookaside buffer tlb trigger interrupt cpu access flag PTEs nevertheless reduce interrupt completely eliminate attack particularly avoid access entry exit program fragment function instead execution infer execution approach secret dependent mechanism propose timing difference execution technique utilizes intel hyperthreading capability flush TLBs attack cpu core enclave code eliminate interrupt hyperthreading demonstrate effectiveness spm attack application particularly attack EdDSA timing enhancement trigger interrupt fault attack access flag attack recover secret interrupt rate attack almost invisible interrupt defense normal execution target program generates interrupt improve attack spatial granularity fault attack attacker enclave program memory access granularity KB therefore exist propose defeat attack align sensitive code data within memory defense strategy ineffective demonstrate series memory channel attack achieve finer spatial granularity enclave prime probe attack enclave drama attack novel cache dram attack particularly cache dram attack leverage prime probe cache attack drama attack improve spatial granularity exploit channel achieve grain observation  KB prime probe KB drama attack alone enables monitor execution enclave program flush reload attack cannot cache attacker code target enclave program flush reload impossible implication finding disturb lack understand potential attack sgx serious consequence exist defense mechanism session secure enclave CCS october november dallas TX usa vulnerable attack developed marginally increase attacker demonstrate channel virtual memory fault attack effective AEX interrupt successful attack exist protection burden sophisticated attacker effectively reduce frequency AEXs without undermine effectiveness attack importantly rethink security limitation sgx tee technology provoke discussion properly contribution contribution depth sgx memory channel attack although focus memory management reveals channel disclose information enclave particularly access flag timing enclave channel attack developed suite attack technique exploit channel particularly multiple channel complement enhance effectiveness attack timing access flag reduce AEXs render exist protection effective dram cache achieve grain observation enclave understand discus mitigation threat highlight importance understand limitation sgx technology background memory isolation intel sgx memory isolation enclave program feature intel sgx maintain backward compatibility intel implement isolation via extension exist processor architecture introduce virtual physical memory management intel sgx reserve continuous physical memory exclusively enclave program structure dubbed processor reserve memory prm extend memory management MMU cpu prevents access prm program outside enclave OS kernel virtual machine hypervisors SMM code memory access dma enclave cache epc subset prm memory epc KBs manage similarly physical memory epc allocate enclave virtual memory program enclave linear address ELRANGE reserve enclave mapped epc sensitive code data within ELRANGE responsible translate virtual address physical address manage untrusted software translation lookaside buffer tlb epc traditional cpu transition  mode enclave mode   instruction asynchronous enclave exit AEXs tlb entry associate context identifier PCID global identifier flush prevent non enclave code information address translation inside enclave security memory isolation prevent software arbitrarily address translation manipulate entry cpu consults enclave cache EPCM address translation epc corresponds entry EPCM owner enclave epc valid allocate epc allocate access permission specify EPCM entry readable writable executable virtual address within ELRANGE mapped epc EPCM entry correctness entry untrusted software guaranteed extend handler  code execute enclave mode address translation prm additional security specially code  mode address translation prm code enclave mode physical address regular epc belonging enclave virtual address trigger virtual address correspond entry EPCM fault otherwise generate tlb entry accord attribute EPCM entry entry memory encryption ELRANGE epc epc swap regular physical memory procedure epc eviction confidentiality integrity evict guaranteed authenticate encryption hardware memory encryption MEE integrate memory controller seamlessly encrypts content epc evict regular physical memory message authentication code mac protects integrity encryption nonce associate evict encrypt memory swap secondary storage regular metadata associate encryption software properly swap epc adversary model attack enclave code data software refers program operates privilege operating hypervisors focus channel analysis threatens confidentiality enclave program software bug code enclave program scope moreover channel involve memory management address translation assume demonstrate attack knowledge victim binary code load enclave adversary address enclave binary virtual address entire virtual physical mapping mapping binary code cache DRAMs derive source code victim program conduct analysis sgx platform assume adversary access machine configuration perform attack session secure enclave CCS october november dallas TX usa understanding attack  explore channel attack sgx memory management depth attack vector resource interference execution inside enclave analysis individual vector exploit effectiveness attack attack vector memory reference intel cpu architecture involves sequence micro operation virtual address generate program translate physical address consult address translation cache TLBs various  cache memory physical address access cache dram memory reference discus memory channel attack vector address translation cache address translation cache hardware cache facilitate address translation TLBs various structure cache tlb multi associative hardware cache temporarily translation virtual physical specially virtual address component tlb tag tlb index offset tlb index index associative tlb tlb tag tag tlb entry tlb cache tlb data instruction split dTLB iTLB tlb typically unified upon tlb recent intel processor selectively flush tlb entry context switch enable context identifier PCID tlb entry avoid flush entry TLBs initiate virtual accord intel terminology   pde pte responsible index memory due latency processor equip structure cache  cache  cache pde cache hardware cache accelerate PTEs cache hierarchy memory access vector TLBs structure cache hyperthreading hyperthreading HT enable code enclave mode TLBs structure cache code non enclave mode therefore enclave code resource interfere non enclave code channel attack vector utilized tlb entry HT spm attack vector flush entry tlb structure cache AEX accord recent version intel software developer manual enclave mode flush entry tlb structure cache associate intel simultaneous multi thread entry PCID enables adversary context infer flush entry context switch processor without HT however confirm attack vector machine skylake conjecture skylake specification version intel software developer manual entry flush regardless context nevertheless attack vector future processor vector reference PTEs cached data beside structure cache reference PTEs cached regular data artifact enables attack vector exploit flush reload channel monitor PTEs adversary perform core attack trace memory access enclave code attack vector timing channel version  monitoring attack discus implication multi data structure memory address translation involves multiple memory access regular memory access lookup trigger micro code processor direction without involve buffer entry pointer physical address memory contains structure pte specially flag physical mapped virtual access flag processor reference entry dirty flag correspond update frame reclaim algorithm rely dirty flag frame reclamation decision inside OS kernel untrusted software manipulate attack enclave however mention earlier epc permission EPCM malicious software cannot arbitrarily manipulate epc compromise integrity confidentiality however previous clearing flag correspond PTEs malicious software trace access enclave program infer secret dependent data nevertheless flag attack vector enclave program vector update access flag enclave mode reference pte access flag entry code non enclave mode detect update correspond epc enclave code however update tlb entry future reference update access flag PTEs tlb entry evict session secure enclave CCS october november dallas TX usa address translation activity exploit attack vector spm attack vector update dirty flag enclave mode access flag dirty flag update correspond epc modify enclave program artifact exploit detect memory writes channel attack vector enable adversary monitor secret dependent memory writes potentially  inference attack memory access vector fault trigger enclave mode addition flag PTEs exploit trigger fault processor reserve trigger fault upon address translation physical address machine NX flag fault instruction fetch correspond epc cache memory hierarchy virtual address translate physical address memory reference cache memory hierarchy temporary storage data hierarchy data instruction cache unified cache dedicate cpu core cache core cpu package memory cache typically built static random access memory SRAM memory dynamic random access memory dram upper storage tends faster expensive storage usually cheaper memory fetch upper access data code fetch usually update entry upper future reference memory generally organize multiple memory channel handle memory controller memory channel physically partition multiple DIMMs dual memory module rank rank dram chip partition multiple memory array organize typically KB multiple KB memory tends span multiple buffer recently access memory load entire buffer memory request access dram already buffer faster vector cpu cache code enclave non enclave mode sgx enclave cache channel attack therefore cache code enclave mode non enclave mode  cache channel attack vector therefore cache channel attack data cache instruction cache cache apply enclave setting empirically confirm threat vector entire memory hierarchy memory controller channel DIMMs dram rank buffer code enclave non enclave mode cache dram module computer therefore unavoidable enclave code non enclave code access memory dram dram buffer channel attack vector target program memory reference correspond dram load buffer adversary access detect specific infer target memory access artifact exploit drama attack technical challenge address attack succeed enclave program memory hierarchy contention enclave non enclave code interference covert channel characterize memory vector characterize aforementioned memory channel dimension spatial granularity concept describes information directly observable adversary memory channel attack specifically address channel observation reveal spatial granularity fault attack KB fault enables adversary memory byte address directly disclose temporal observability spatial granularity adversary cannot directly happens inside information timing signal generate execution target program distinguish access program within duration program indicates indirectly memory multiple access channel timing refine observation attack concept characterize observable anomaly memory channel attack employ detect attack AEX frequently invoked fault attack another slowdown execution primary approach conduct channel attack contention memory resource flush cache TLBs structure cache dram buffer etc overhead introduce runtime performance enclave code AEXs contribute performance overhead fault attack report target program magnitude slowdown easy frequent AEXs detectable approach propose execution longer session secure enclave CCS october november dallas TX usa PTEs flag enclave load PTEs flag PTEs flag tlb shootdowns enclave address enclave  spm attack    monitoring ATTACKS attack virtual memory fault channel attacker restricts access induces fault whenever enclave thereby generate sequence approach heavyweight interrupt access performance slowdown magnitude attack detect extremely frequency fault AEXs  performance remote exist hardware leverage interrupt remove trace program code defense sufficient excessive AEXs conduct memory channel attack elaborate  monitoring spm attack achieve comparable effectiveness frequent AEXs spm attack vector introduce spm attack monitor entry exploit technique flush TLBs spm access flag monitoring spm attack manipulates monitor access flag enclave identify execution trace specifically systemlevel attack outside enclave repeatedly inspect entry access flag reset happens access trace recover sequence access flag consecutive inspection attack lightweight AEX however mention earlier virtual address translate automatically tlb access flag later processor access pte update flag attacker invalidate tlb entry proactively simplest generate inter processor interrupt ipi cpu core trigger tlb shootdown AEX enclave flush BB BB BB BB secret dependent leak timing information tlb entry PCID illustrates attack spm spm spm attack involves interrupt already lightweight fault attack tlb shootdowns typically expensive fault importantly spm trigger interrupt latter trigger interrupt access accuracy fault attack tends  observation spm attack cannot differentiate inspection however spm attack strives balance interrupt rate attack resolution spm timing enhancement become salient feature input spm issue tlb shootdowns feature attack observable exist protection detect anomalous interrupt rate illustrates secret dependent code resides execution involves loop execution tlb shootdowns execution loop distinguish trace reduce interrupt leverage timing channel enhance spm  specifically code fragment unique entry unique exit multiple input dependent timing enhance spm spm continuously monitor execution access flag flush tlb reset access flag PTEs timing infer input code fragment approach avoids interrupt reveals execution extreme code propose prior research defend  attack spm infer sensitive information operation HT spm tlb flush hyperthreading hyperthreading processor TLBs without issue tlb shootdowns render exist interrupt protection ineffective hyperthreading virtual core physical core handle session secure enclave CCS october november dallas TX usa configuration testbed available per logical core hyperthreading enable iTLB dTLB tlb icache KB dcache KB cache KB cache MB channel DIMMs rank dram 8GB workload OS resource transparent OS therefore trigger interrupt virtual core TLBs allows attacker remove tlb entry outside enclave without interrupt presence hyperthreading attack enclave continuously probe virtual address conflict tlb entry latter attempt evict entry victim technique HT spm remove eliminate interrupt attack evaluation effectiveness analysis perform dell  skylake processor physical core 6GB memory configuration cache memory hierarchy ubuntu kernel version patch OS facilitate attack OS adversary graphene sgx library OS compile gcc default compile option unmodified library spm hunspell hunspell popular software package OS google chrome hash link link hash link span across multiple generates unique sequence prior monitoring fault attacker outside enclave fingerprint lookup function inside enclave checked sequence access data research evaluate spm hunspell invocation function access specific reliably identify inspection rate attack core per cpu cycle simplicity attack issue tlb shootdown function invocation discover interrupt inspects PTEs monitor identify reset access flag monitor occurrence function invocation approach identifies iterative lookup multiple prior research evaluate attack hunspell illustrate fault attack implement distribution hunspell fault access flag feature  trigger data effectiveness spm attack percentage uniquely identifiable attack fault attack fault attack performance however spm faster ups program factor exist attack incur overhead prior research report slowdown ups sgx emulator however sgx platform spm   font library convert text content input image linux android iOS software package research spm  font render function prior function TT load glyph glyph input construct bitmap prior fingerprint function selects fault render research utilize trigger identify execution TT load glyph function within function along graph feature identify alphabet feature timing others collectively feature vector random classifier estimator classify execution TT load glyph  within enclave sample   training random classifier session secure enclave CCS october november dallas TX usa spm attack  achieve precision coverage coverage precision wonderful wizard prior upon timing vector inspection rate per cycle classifier correctly identify precision precision particularly correctly identify false positive correctly recover fault attack capture spm accurate efficient incur overhead implement fault attack program factor HT spm hunspell HT spm hunspell scenario query conduct intel skylake processor characterize multi TLBs dTLB tlb fully across logical core attack thread cleaner operating physical core hunspell enclave evict tlb entry collector inspect access flag memory cleaner probed entry dTLB tlb cycle collector inspect PTEs cycle hunspell inside enclave attack outside collector fingerprint function continuously trace data successfully recover attack incur slowdown tlb shootdown attack EdDSA understand stealthiness attack AEX frequency prior research detect channel attack fault attack spm spm version  recover EdDSA session edward curve digital signature algorithm EdDSA security digital signature scheme twist edward curve security EdDSA difficulty elliptic curve discrete logarithm curve integer exists security parameter cryptographic hash function output EdDSA secret private correspond public significant private session signature message mod attack involve code HT spm reduce AEXs data HT spm comparison void gcry mpi mul mpi gcry mpi scalar mpi mpi ctx ctx model mpi EC  ctx model mpi EC  mpi secure scalar mpi secure scalar scalar secure memory assume secret constant operation  gcry mpi dup ctx mpi scalar gcry mpi ctx return scalar multiplication ecc attack summary EdDSA  normal execution EdDSA signature without attack incurs AEXs monitor AEXs fault attack spm attack EF trigger spm attack trigger trigger disclose assume mod secret directly obtain mod function ecc scalar multiplication although  channel protection tag private secure memory secret session  generate message signature secret dependent leak session information evaluation fault attack spm spm respectively fault attack offline analysis generate sub function trace gcry mpi dup gcry mpi identify code monitor gcry mpi mul gcry mpi gcry mpi dup another related function gcry mpi execution indicates processing attack intercept fault handler kernel module restrict access monitor clearing fault monitor reset fault subsequent respectively around fault trigger correctly recover session session secure enclave CCS october november dallas TX usa spm attack aforementioned code flush tlb therefore spy thread interrupt target enclave thread tlb detailed information differentiate reduce frequency interrupt instead IPIs fix interval spy thread simultaneously target thread monitor trigger pow mul whenever trigger access spy thread interrupt target thread shoot tlb identifies interrupt difference trace recover processing phase around interrupt trigger correctly recover session spm attack reduce AEX frequency monitor gcry mpi mul gcry mpi dup gcry mpi respectively utilize specifically access attack timer  nanosecond ensure execution target leaf shoot tlb reset access flag timer interrupt information timing differentiate gcry mpi dup gcry mpi execute around cpu cycle former cpu cycle latter trace gcry mpi gcry mpi dup gcry mpi dup around interrupt trigger correctly recover session summary attack recover EdDSA session reliably fault attack trigger fault observation AEXs spm attack consecutive inspection however aggressively IPIs tlb entry gain timely observation AEXs spm attack issue tlb shootdown invocation gcry mpi dup gcry mpi differentiates function timing information generates minimum AEXs normal execution EdDSA program incurs AEXs OS attacker reduce additional AEXs AEXs spm demonstrate normal fault interrupt therefore spm attack unobservable  spatial granularity cache dram ATTACKS fault channel attack  monitoring attack described previous attacker enclave program memory access granularity therefore mechanism sensitive code data propose defeat attack intel recommends align specific code data exist entirely within however effectiveness defense heavily granularity spatial granularity achievable adversary however suggests demonstrate attack powerful adversary improve spatial granularity significantly particularly demonstrate enclave prime probe cache attack enclave drama attack cache dram attack sgx memory enclave flush reload cache attack achieve cache granularity cannot conduct secure enclave however cache dram attack capable achieve spatial granularity enclave enclave prime probe vector exploration validation enclave cache prime probe attack sgx cache sidechannel attack therefore cache attack sgx enclave confirm GnuPG graphene sgx algorithm repeatedly decrypt ciphertext encrypt elgamal public prior GnuPG wiener subgroup margin security parameter consequently private attack monitor victim enclave load physical address exponentiation knowledge cache slice cache mapping attacker construct eviction mapped cache target address observation elgamal decryption recover private prime probe cache attack error rate prime probe cache attack perform enclave scenario traditional setting prime probe attack achieves spatial granularity cache KB processor llc enclave drama vector drama attack exploit dram extract sensitive information attack victim access virtual address adversary allocates memory dram dram physical memory mapped attack conduct access memory victim operation access memory faster memory access memory suggests victim probably memory address session secure enclave CCS october november dallas TX usa buffer victim enclave spy enclave address translation timing dram memory bus core core core llc software cache probe illustration cache dram attack operation dram typically KB false detection likely drama effectively detect existence keystroke activity directly apply drama perform enclave attack challenge cache dram attack therefore defer discussion challenge detail cache dram attack enumerate limitation enclave drama attack victim memory access cached epc cacheable default hence information leak dram manually disable cache cache disable CD CR core victim enclave enclave approximately drama attack falsely detect unrelated victim enclave KB dram multiple data structure code false detection however finally drama cannot achieve grain spatial accuracy memory distribute dram extreme attacker occupy entire KB chunk victim enclave achieve spatial accuracy KB prime probe cache attack KB however flush reload cache attack cache dram attack vector improve enclave drama attack propose novel cache dram attack leverage vector adversary significantly improve spatial granularity memory channel attack technique particularly cache dram attack perform thread thread non enclave mode prime probe cache cache address mapped thread conduct enclave drama without disable cache prime probe attack conflict cache victim enclave intel sgx program reference  register programmed UC prm uncacheable confirm platform  register cannot boot prm prm prm dram MB MB MB xff access dram concept cache dram attack however implement cache dram attack sgx enclave address challenge dram epc memory exclusively enclave already isolated physical memory DRAMs understand artifact explain mechanism dram isolation testbed assumption significant physical address beyond determines correspond dram physical address MB prm physical memory non prm memory occupy xff prm exclusively enclave span dram occupies specific non prm memory overcome barrier leverage processor multiple enclave program concurrently drama attack another enclave program adversary program inside enclave epc memory adversary manage memory target enclave memory illustrate specifically identify physical address victim enclave achieve reading directly allocate chunk memory buffer spy enclave physical address reverse engineering drama attack picked memory address attack illustrate access without delay access latency memory target address victim enclave obtain grain timer enclave unexpected challenge execute attack lack reliable  processor timing information within enclave instruction   valid enclave program straightforward heavyweight inaccurate due variation processing  lightweight utilizes observation enclave access memory outside without mode switch therefore reserve memory buffer  cpu cycle attack enclave specifically thread outside enclave continuously dump cycle buffer attack thread inside continuously buffer although brings occasionally due avoidance mutex timely interaction thread successfully session secure enclave CCS october november dallas TX usa distribution access latency probe input dependent gap library obj  obj OPL obj opr initialize temp variable integer  OPL opr sum  sum OPL opr return sum int  OPL int  opr integer integer  OPL  opr integer input dependent gap timing difference conflict probe target enclave address access latency evaluation evaluate accuracy timer attack enclave continuously clflush instruction memory access dram evaluator enclave utilized timer access latency address access latency address distribution access latency evaluator enclave access dram easily identify timing difference timer distribution gap graphene sgx target input dependent illustrate gap software package implement various algebra algorithm non integer data cannot otherwise immediate integer victim enclave  operation detection within cpu cycle reduce false positive prefetching disabled hardware prefetches victim core update msr cache dram attack target instruction attack enclave detect probability false positive rate analysis channel attack vector accuracy AEX slowdown dcache prime probe MB cache prime probe KB cache prime probe KB none modest fault KB spm KB modest modest HT spm KB none modest enclave drama KB none cache dram none minimal moreover slowdown enclave program discussion cache dram attack achieves spatial accuracy byte accurate flush reload cache attack meanwhile ensures target cache prim reduces false positive access dram attack powerful dedicate attacker reserve dram exclusively victim spy enclave mitigation discussion analysis attack summarizes characteristic memory channel attack discover vector data configuration prm MB accuracy spatial accuracy attack vector icache prime probe channel accuracy MB MB detect cache icache probably MB physical memory access coarser grain vector attack granularity cache dram attack byte equivalent flush reload cache attack however due lack memory epc belong enclave flush reload cache attack feasible sgx enclave worth calculation accuracy knowledge physical memory exclusively target enclave information improve granularity prime probe cache attack icache dcache cache induce volume AEXs hyperthreading consideration AEX slowdown become modest attack vector frequently preempt enclave execution induce overhead enclave drama disable cache conduct effective attack therefore induce slowdown temporal   attack attack temporal  finer grain information information leak timing signal attack vector flush reload cache attack cached pte entry attack vector pte entry cache pte entry spatial accuracy KB KB attack achieve spatial accuracy KB pte entry intentionally organize combine spm drama attack introduce session secure enclave CCS october november dallas TX usa attack vector attack due similarity demonstrate effectiveness exist defense deterministic multiplexing proposes  approach opportunistically secret dependent data attack leak sensitive information however approach cache channel dram channel defense vulnerable cache attack drama hiding fault transactional memory sgx prevents information leakage fault inside enclave encapsulate program execution inside hardware memory transaction fault transaction abort handle abort handler inside enclave transaction abort handler abnormal fault untrusted OS kernel fault handler fault happens abort handler via register CR fault address hidden however sgx cannot prevent access flag enable memory channel attack accord intel software developer manual transaction abort strictly enforce access flag dirty flag reference entry update security guarantee memory access inside transactional leak update entry secure processor sanctum hardware aim cache attack attack sanctum enclave access become invisible malicious OS therefore fault attack spm attack fail however sanctum prevent enclave drama attack sanctum relies OS assign dram enclave entry code data enclave enclave initialization OS memory layout enclave attacker therefore attack dram dram target enclave address execution proposes compiler approach  VU execution enclave program granularity graph execution threshold indicates enclave code interrupt AEX intuition execution suffer variation input due lack timing measurement sgx enclave  VU construct software inside enclave encapsulate inside intel transactional synchronization extension tsx therefore interrupt without detect  VU detect AEX fidelity therefore channel attack vector induce volume AEX detect  VU however involve AEX attack spm HT spm attack bypass  VU completely enclave address layout randomization sgx shield implement grain ASLR enclave program load sgx memory however malicious OS memory layout memory access sgx shield randomization lesson analysis sgx memory channel brings attack capability adversary mitigate risk sgx platform generically emerge tee sgx application development research adversary achieve grain monitoring enclave cache channel inter timing enclave dram hyperthreading important sgx developer realize impact attack critical building enclave application avoid leak channel longer hide secret avoid access  inter timing disclose sensitive information software protection defense sgx channel leak longer rely assumption particularly attack necessarily  AEX rate blending sensitive information memory effective attack finer spatial granularity adversary combination multiple channel conduct powerful attack hardware enhancement memory channel mitigate hardware partition cache dram enclave inside epc etc option research understand issue impact related channel intel tee manufacturer hardware channel clever attack discover researcher immediately embark defense attack however  defense proposal fail demonstrate attack unable effective protection adversary capable quickly adjust strategy sometimes meaningfully variation attack ongoing research sgx apparently  pitfall rethink ongoing effort sgx security inspire effort understand fundamental limitation tee effectively securely related channel previous memory access leak secret enclave program variety scenario leakage enable enforce fault enclave execution memory non session secure enclave CCS october november dallas TX usa non executable data access code execution trap OS kernel malicious OS access enclave program fault channel attack attack vector memory channel attack explore concurrently independently propose  attack sgx report attack exploit update access flag vector dirty flag vector reference PTEs flush flush flush reload channel attack reference PTEs vector although approach utilize access flag avoid fault attack propose truly stealthy minimize interrupt execute actually introduce AEXs demonstrate evaluation render attack effective presence exist protection sgx  VU comparison research reveals multiple avenue reduce interrupt frequency attack stealthy timing tlb flush hyperthreading thwart exist defense highlight channel vector sgx memory management evidence credible threat cache dram attack prediction channel recent explores prediction channel infer sensitive inside sgx enclave memory channel attack attack vector prediction important understand channel security sgx cache channel cache channel attack threat model access driven attack demonstrate architecture data cache per core unified cache instruction cache inclusive LLCs recent channel feasible sgx enclave briefly confirm effectiveness cache channel attack focus broader attack cache sgx channel defense defense specifically fault channel attack propose compiler approach transform cryptographic program hide access leak information propose sgx exploit intel transactional synchronization extension tsx prevent fault reveal fault address propose secure enclave architecture sgx resilient  cache channel attack propose  VU compiler approach enclave program execution graph research prototype without fully understand memory channel attack offering effective protection attack demonstrate conclusion report depth sgx memory channel summarizes attack vector memory management tlb dram demonstrate novel attack exploit channel leverage access flag timing  dram module fault attack attack  lightweight effectiveness comparable attack importantly broadens scope channel sgx reveals gap propose defense weakness provoke discussion tee technique effectively securely