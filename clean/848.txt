site script XSS  web initial public documentation XSS continuously vulnerability statistic considerable amount research developer education address XSS source code overall discover XSS remains various approach mitigate XSS propose defense html sanitizers web application firewall browser XSS lters content security policy prominent mechanism focus script tag handler remove user content prevent script code execute demonstrate approach longer sucient application novel web attack circumvent thesis currently exist XSS mitigation technique attack attacker abuse script gadget legitimate javascript fragment within application legitimate code execute javascript gadget utilize dom selector interact web document initial injection attacker inject benign html ignore mitigation technique selector gadget attacker hijack input gadget processing input code execution attacker demonstrate gadget omnipresent almost javascript framework empirical prevalence script gadget productive code assume mitigation technique web application bypass CCS CONCEPTS security privacy browser security web application security intrusion detection firewall penetration web protocol security introduction web technology rapid pace everyday framework apis production constant development attack vulnerability site script XSS vulnerability evolve signicantly recent traditional  XSS issue dierent dom XSS vulnerability  expression XSS topic XSS becomes increasingly complex mitigation technique focus traditional understood reected XSS variant novel web attack demonstrates mitigation technique  confront javascript library core attack script gadget fragment javascript vulnerable site legitimate code generally script gadget javascript code reacts presence specically dom content web document gadget attack adversary injects apparently harmless html markup vulnerable web inject content directly executable script code ignore generation XSS mitigation however web application lifetime site script gadget inject content  transform payload executable code script gadget introduce code reuse attack comparable return libc web explore severity prevalence underlie vulnerability conduct qualitative quantitative script gadget rst identify various gadget functionality potential undermine exist XSS mitigation furthermore examine popular javascript framework library focus script gadget mapping gadget instance affected XSS mitigation instance examine code gadget capable circumvent emerge strict dynamic variant content security policy finally report empirical prevalence script gadget popular web site crawl alexa web site rst link gadget related data ows approximately individual crawl URLs sink execution data retrieve dom  exploit generation framework generate exploit veried gadget domain data session code reuse attack CCS october november dallas TX usa apply conservative false positive verication approach bound gadget considerably contribution knowledge rst researcher systematically explore web attack allows circumvent popular XSS mitigation technique abuse script gadget attack detail categorization dierent gadget explore script gadget detail manual javascript library proof concept exploit demonstrate almost library gadget furthermore demonstrate dierent script gadget circumvent popular mitigation technique content security policy html sanitizers browser XSS lters web application firewall manual built chain capable automatically detect verify gadget conduct empirical alexa web site web suggests script gadget omnipresent javascript application conservative gadget manage detect verify gadget domain bound likely technical background javascript html dom development javascript interact dom html document interactive javascript browser dierent data dom correspond function document  document  dom selector convenient wrapper around document  dom selector powerful query dom therefore basis javascript framework javascript function jquery function enhances browser selector syntactic selector feature detail selector tag div div foo foo foo foo attr foo attribute foo site script XSS site script XSS describes  code injection vulnerability adversary inject html javascript web content legitimately XSS vulnerability generally categorize location vulnerable source code server client XSS persistence inject attack code reected XSS XSS avoid secure cod mainly rely careful handle attacker input context aware sanitization encode untrusted data processing security sensitive context brevity omit detail vulnerability refer vast exist topic XSS mitigation technique XSS recognize decade understood signicant amount approach detect prevent XSS issue source code XSS statistically vulnerability however overall decline prevalence therefore assume XSS completely secure cod alone various XSS mitigation introduce important defense instead remove underlie vulnerability XSS mitigation aim prevent exploitation vulnerability execution inject script code XSS mitigation widely implement dierent html sanitizers library developer untrusted html html within application category contains  google closure html sanitizer browser XSS filter lters implement browser navigation render attempt detect XSS attack  internet explorer chrome implement XSS lters default conguration firefox popular   implement web application firewall software server attempt benign request web trac detect malicious request source web application firewall modsecurity owasp content security policy browser feature web developer  dene policy allows browser whitelist javascript code belongs application mitigation fundamentally rely strategy request ltering http request application browser http github com cure  http github com google closure library http  net http modsecurity org http github com  owasp modsecurity session code reuse attack CCS october november dallas TX usa  network application WAFs response sanitization focus detect malicious code sanitize response html sanitizers internet explorer XSS lter code ltering detects malicious javascript execute detect benign strategy csp chrome XSS lter detail implementation strategy bypass script  introduce concept script gadget explain inject benign html markup arbitrary javascript execution reuse legitimate application code negate eects XSS mitigation benign html markup XSS mitigation technique described aim XSS attack execution illegitimate inject javascript code mitigation detect inject code inline handler script prevent execution legitimate javascript code appropriate trust information execute XSS mitigation ignore inject html markup javascript execution markup benign html benign html script tag inline handler src href attribute javascript data URLs tag capable javascript execution link rel import meta style snippet benign html div greet div listing benign html markup ignore mitigation dom selector presence benign html document directly trigger code execution however virtually web application javascript code already interacts dom reading data document various dom selector web application  attribute decorate text user selects javascript code reading data dom selector user library code code snippet  code var button document  button button  data text var link href reading ref attribute aurelia framework  ref info   info   info expression  parser parse  resource  vue reading html attribute binding  html return expression binding listing reading data dom inject benign html markup dom selector application trigger execution specic legitimate application code script gadget script gadget introduction script gadget fragment legitimate javascript code belonging web application execute benign html markup web script gadget inject attacker already user web application code library framework web application research explores script gadget bypass XSS mitigation gadget arbitrary script execution trigger benign html injection web application assign dom innerHTML var button  button button innerHTML button  data text listing innerHTML gadget gadget explore context dom XSS vulnerability purpose research propose classication gadget complexity rst explain script gadget attack XSS mitigation alternative trigger specic code web application benign markup dom  dom  allows markup override variable javascript execution environment trigger specic script behavior identied bypass XSS mitigation via dom  clarity focus dom selector code trigger session code reuse attack CCS october november dallas TX usa attack outline introduce novel XSS attack relies script gadget execution adversary javascript code attacker model applicable attacker classic XSS attacker inject arbitrary html code content attack web document context injection technique reected XSS irrelevant exist XSS mitigation rely assumption malicious code directly inject aected XSS attack non script inject html content therefore assume benign remains untouched mitigation assumption exploit propose attack html code inject attacker expose characteristic actual attack payload attack javascript benign html  html specically craft presence web document trigger script gadget already web legitimate javascript code inject html payload trigger code reuse attack  technique exploitation memory corruption vulnerability attack script gadget access inject dom content information insecure manner ultimately execution adversary code hidden benign html code summary attack described injection raw html attacker dom webpage injects payload trigger script gadget application code payload contains benign html markup dom selector web application mitigation attempt XSS mitigation inspects inject content detect script insertion benign html markup gadget transforms markup gadget legitimate javascript code inject payload dom dom selector transform javascript statement script executes transform javascript statement execute XSS precise abuse gadget bypass XSS mitigation mitigation implement mitigation strategy described gadget identied script gadget useful bypassing XSS mitigation indirect script execution others combine chain useful attack manipulation gadget gadget transform input regular expression replacement manipulation bypass mitigation gadget bypass mitigation inner attribute later polymer framework assign innerHTML dash replace  listing camel input polymer feature angularjs framework allows attacker benign data attribute  html sanitizers var prefix  data var   function  return replace prefix  replace    listing directive normalization angularjs construction gadget gadget dom XSS mitigation bypass purpose mostly focus identify gadget programmatically script document  input document  script jquery tag jquery html input input contains script listing creation gadget notable construction gadget jquery  function function creates script text appends dom execute code  combine creation gadget javascript execution gadget  various jquery html input script useful bypassing strict dynamic csp function creation gadget gadget function function usually compose input constant function execute dierent gadget session code reuse attack CCS october november dallas TX usa  function creation gadget var context data return  return function context underscore function creation gadget source var array prototype function argument source return var render function setting variable obj source listing function creation gadget javascript execution sink gadget gadget usually standalone construct gadget chain input previous gadget dom XSS javascript execution sink eval input  apply node innerHTML prefix input jquery html input  src input node  input listing execution sink gadget gadget expression parser javascript framework aurelia angularjs polymer  vue interpret dom template application UI component template expression framework specic expression bind expression evaluation render UI expression display capitalize customer customer capitalize listing sample expression aurelia framework extract template denition dom  embed expression appropriate code delimiters par expression ast evaluates UI render expression syntax expressive attacker expression arbitrary javascript code execution traverse prototype chain access constructor various script gadget http aurelia http angularjs org http polymer project org http  org http  org typically identied framework expression parse evaluation arbitrary code execution gadget aurelia expression parser optional access   prototype evaluate function return instance optional function  args  prototype evaluate function return func apply instance args listing script gadget aurelia expression parser  code link script gadget chain execute arbitrary function alert benign html markup injection aurelia ref bind attribute document trigger gadget div ref bind   alert div listing html markup trigger gadget chain aurelia fashion benign html markup trigger gadget chain alert polymer template dom bind div alert      div template listing html markup trigger gadget chain polymer expressiveness gadget exploit discus expressiveness gadget mitigation bypass via gadget attacker execute arbitrary turing code identied eval function gadget trigger eval another eval function execute arbitrary code straightforward usually demonstrate gadget function session code reuse attack CCS october november dallas TX usa inside attacker parameter alert eval function inside accepts parameter capable execute arbitrary turing javascript code append script another gadget aim append script  src attribute attacker script eval gadget allows attacker execute arbitrary code abuse expressiveness expression gadget mitigation bypass leverage eval function script however web application employ variant csp bypass leverage expression gain arbitrary code execution expression investigate turing exploit execute expression interpreter exploit expressive expression however expression turing gain turing code execution listing  attack steal reuse csp nonce seemingly trust script allows achieve arbitrary javascript code execution script gadget script gadget legitimate trust javascript statement code dom XSS sink others benign assignment traversal statement particularly dicult identify gadget web application codebase technique useful identify script gadget manual code inspection gadget manually assistance static analysis simpler gadget JS execution sink function creation gadget straightforward complex gadget expression parser signicant  evaluate usefulness gadget reachable benign html markup injection access setter function potentially useful chain function directly markup manual code inspection gadget otherwise trigger application code polymer listing override  execute javascript statement dierent scope trigger subsequent gadget chain private  accessible polymer expression research manual code inspection identify gadget javascript framework taint subset gadget identied render web application browser enrich  entirety dom taint simulate attacker reected html injection capability taint specic javascript execution sink identify ows link dom selector javascript execution approach eective limitation discover gadget already web application albeit  script execution research taint approach evaluate script gadget prevalence user code concrete XSS mitigation  USING script  detailed information script gadget leveraged circumvent concrete XSS mitigation countermeasure  underlie mechanism introduce gadget popular javascript library eectiveness gadget bypassing XSS mitigation XSS mitigation implementation dierent strategy gadget popular framework library popular XSS mitigation XSS mitigation source widely distribute dierent mitigation implementation strategy mitigation content security policy dierent code ltering whitelist code trust originates nonce code trust accompany secret cryptographic nonce unsafe eval source expression usually policy separately allows investigate eval gadget strict dynamic source expression usually nonce csp automatically propagate trust  script script generate client html sanitizers dierent approach sanitization  javascript html sanitizer html svg MathML others google closure library contains another javascript html sanitizer html web application firewall request ltering mitigation deployed hardware web server software web server session code reuse attack CCS october november dallas TX usa csp XSS filter html sanitizers WAFs  nonce unsafe eval strict dynamic chrome   closure modsecurity mitigation bypass via gadget popular library modsecurity source web application firewall commonly owasp core XSS lters employ request lter response sanitization code ltering approach chrome safari employ code ltering approach blacklisting script request internet explorer employ response sanitization approach rewrite potentially dangerous response something  employ request ltering approach request suspicious potentially malicious popular javascript library dierent gadget mitigation gadget dierent popular javascript framework library obtain popular framework library various online resource focus gadget framework popularity code familiarity author trend javascript framework vue aurelia polymer widely popular framework angularjs react  popular framework backbone    library compiler bootstrap closure  jquery library jquery jquery UI jquery mobile manually identify gadget described generally identify html eval sink document feature expression sink reachable mechanism expose framework library dom manually audit code summarize framework gadget bypass mitigation bypass collection analysis available github repository  security framework gadget http github com cure  security wiki  contains trend javascript framework http github com showcase javascript framework  sample application dierent javascript framework http  com JS org activity dierent github project related javascript framework http  org JS survey web developer http  com frontend http github com google security research pocs within appendix summarizes research  clarity discus chosen selection bypass bypassing request filter mitigation request ltering mitigation attempt identify malicious untrusted html application accomplish mitigation generally employ approach enumerate attack html tag script attribute  user execute javascript html injection modsecurity core version comprehensive attack vector detect escape context XSS vulnerability usually XSS vulnerability exist directly inject html application output text request ltering mitigation attempt detect injection vulnerability inject inside html attribute escape attribute detect vulnerability detect sequence frequently exploit XSS attack  user attempt steal credential issue http request therefore mitigation attempt detect access document cookie access  attempt detect mechanism obfuscate code execution reference eval innerHTML layer  decode XSS mitigation adopt approach  XSS filter web application firewall request ltering mitigation detect specic XSS related html tag attribute gadget html tag attribute benign capable bypassing mitigation library data html attribute executes html mitigation detect malicious html markup trigger gadget chain listing addition detection context suddenly becomes  gadget meaning otherwise text sequence dangerous angularjs  brace dene angularjs expression aurelia dierent delimiter seemingly benign markup listing session code reuse attack CCS october november dallas TX usa iframe src  com div data bind location div div data bind href div javascript alert iframe listing bypassing   gadget bypass request ltering mitigation  gadget listing expressiveness framework split exploit location href detect attack  global generally attacker arbitrary content component location href individually expression harmless user redirect user javascript url specied attribute  parse markup gure execute bypassing response sanitization mitigation response sanitization mitigation reduce false positive potentially generate request ltering instead potentially malicious request response sanitization mitigation aim detect suspicious payload actually inject response response sanitization mitigation usually dierent technique remove  malicious attack tackle potential injection code  remove http response approach response suspicious code remove  response completely another react injection attempt completely response display error user approach avoids attacker trick mitigation technique legitimate script frame  implementation XSS mitigation adopt approach html sanitizers html sanitizers html code cleaning malicious input return otherwise html html sanitizers however  enumerate html tag attribute across browser internet explorer XSS lter XSS lter microsoft internet explorer sanitizes html replace html attribute tag html sanitizers  XSS lters blacklisting approach enumerate dangerous html tag attribute browser bypassing html sanitizers usually slightly dierent approach bypassing XSS lters html sanitizers gadget reuse otherwise whitelisted attribute gadget bypass XSS lters custom html tag attribute click angular html vue mitigation response sanitization vulnerability attempt detect artifact exploit easy bypass gadget  code becomes unsafe interacts javascript code otherwise aim false positive rate response sanitization downside detect attack exploit feature normally javascript library div data role popup script alert script div listing bypassing  jquery mobile gadget gadget bypass response sanitization mitigation listing  aware html sanitize completely however jquery mobile upon encounter attribute data role popup automatically inject html comment code escape comment execute code attack internet explorer XSS lter bypassing code filter mitigation code ltering mitigation evolution response sanitization attempt potentially malicious markup untouched instead focus prevent execution malicious code approach false positive rate sanitization code  actually execute however eect approach gadget directly execute malicious code indirectly trust code harder XSS mitigation code ltering detect injection gadget approach XSS mitigation code ltering detect malicious code detect specic code malicious checked http request code execute request trustworthy potentially  detect benign code benign code various policy code provenance content generation code violate policy requirement malicious execution implementation XSS mitigation adopt approach session code reuse attack CCS october november dallas TX usa chrome safari XSS auditor XSS lter implement browser chrome safari XSS auditor XSS auditor hook javascript runtime browser XSS auditor detect malicious code approach auditor permit code execution validates code http request content security policy content security policy popular code ltering mitigation web application mitigation dene policy specie script benign execute script violate policy browser exist policy usually adopt ltering variant described typical policy url whitelist nonce hash policy strict dynamic unsafe eval source expression keywords propagate trust additional code already trust script csp easy adopt exist website code ltering mitigation hook code execution aim assure legitimate code execute script gadget already legitimate code extremely useful bypassing mitigation analysis perform popular framework library code ltering mitigation vulnerable gadget construction gadget javascript execution sink gadget gadget expression parser bypass code ltering mitigation expression  gadget universally applicable bypass employ mitigation variant specic bypassing XSS auditor bypass XSS auditor framework gadget traditional dom XSS sink dom XSS protection shortcoming XSS auditor gadget  framework eval function extract data  prop attribute bypass div data   declaration data  prop alert div listing bypassing XSS auditor  gadget bypassing unsafe eval csp bypass csp unsafe eval keyword gadget expression parser gadget eval function listing demonstrates bypass gadget circumvent policy unsafe eval framework bypassing strict dynamic csp strict dynamic keyword csp enables already trust code programmatically script script introduce dom implicitly trust execute analyze javascript framework gadget capable insert script src attribute gadget bypass strict dynamic csp bypass  script data data alert script listing bypassing strict dynamic  gadget script tag data attribute gadget  generate script source data alert  already trust strict dynamic propagates trust code execute bypassing content security policy strict dynamic bypass framework bypass rely presence unsafe eval prevalence script gadget javascript framework suggests strict dynamic variant csp mitigate XSS vulnerability web application eective previously bypassing csp variant aforementioned csp keywords relax restriction policy facilitate adoption website opt version csp rely solely nonce whitelist script source URLs bypass origin variant content security policy bypass script gadget expression parser framework expression parser runtime environment allows attacker obtain reference arbitrary javascript function vector eval script content security policy cannot detect listing bypass gadget aurelia vue polymer additionally  gadget capable  csp nonce newly script execution despite nonce policy script template text  iframe  script nonce global document  nonce alert document domain script iframe script listing bypass  csp nonce  worth csp mitigation depends variant policy   hash nonce alone gadget expression parser useful code javascript execution sink trust notable exception strict dynamic session code reuse attack CCS october november dallas TX usa propagates trust script tag generate programmatically attacker bypass csp gadget generate arbitrary html import node foreign dom document gadget  library gadget bypass dierent mitigation signicantly mitigation mitigation abuse expression library others inject markup text attribute others abuse trust propagation dom creation indicates gadget bypass dierent mitigation prevalence script  empirical prevalence script gadget application rst research methodology discus research statement script gadget potential undermine protection XSS mitigation manually discover gadget popular library important understand prevalence code gadget rare code address building generic library script gadget application however address xing XSS therefore goal prevalence gadget application gadget pervasiveness aim impact script gadget specic XSS mitigation specically focus content security policy html sanitizers mitigation technique robust relevant previous already demonstrate domain whitelisting unsafe inline csp source expression harm protection capability csp investigate unsafe eval strict dynamic source expression specically investigate prevalent script gadget potentially bypass expression sanitizers default seemingly benign attribute data furthermore sanitizers usually non malicious tag div span tag hence understand gadget chain trigger tag attribute methodology detect gadget application built toolchain automatically detect verify toolchain crawl alexa web site detect gadget expression parser user code assume expression parser mostly javascript framework focus gadget html javascript url execution sink detect potential gadget built browser dynamic taint capable reporting data ows dom node security sensitive function eval innerHTML document  crawl data identify data ows ows potentially exploitable gadget chain verify gadget verify exploitable benign html markup built generator capable exploit generator subsequently simulate reected XSS vulnerability inject generate exploit goal exploit indirectly execute javascript function source usually execute code data attribute listing exemplary gadget exist legitimate javascript source div button data text button div script script gadget reading button var button document  button button innerHTML button  data text script listing exemplary gadget sample detects data originate button  data text html execution sink innerHTML context sink html javascript url exploit generator generates exploit trigger javascript execution within context svg  verify listing XSS payload subsequently source generate nal exploit listing actual XSS payload thereby disguise via dierent encode scheme injection context div button data text svg  verify div listing exploit exploit  function trigger default function script gadget payload benign markup executes therefore function veried gadget false positive sink cannot easily due constraint session code reuse attack CCS october november dallas TX usa crawl data initial data consists alexa web site crawl http http link domain subdomain approach bias data web link nal data subdomains web site excessive subdomains others  nal rst domain domain subsequently domain merge sub foo regard domain belonging aware approach signicant impact nal realistic data limitation verication approach limitation rst link rst link data site user interaction crawler interact gadget code execute load default authentication crawler authenticate consequently authenticate application signicantly reduce potential coverage crawl web application verication focus mitigation bypass  modify remove specic XSS mitigation crawl website verify data non execute source capable execute arbitrary code via gadget presence mitigation mitigation cannot easily apply web site apply web application firewall content security policy non trivial amount conguration likely functionality automatically furthermore exploit adopt specic mitigation technique hence focus mere code execution aspect verify gadget eciently XSS simulation approach false negative prone mitigation initial XSS attack execution inject code however injection gadget potentially execute inject content eectively bypassing mitigation script csp remain dom gadget reintroduce trigger valid  bypass payload execute directly without trigger gadget csp avoid false positive  generate exploit trigger javascript execution default inject gadget div foo script verify script div listing invalid exploit instead transform payload cannot execute default  plaintext tag  foo script verify script  listing non execute exploit approach completely remove false positive considerable false negative tag dom selector  gadget hence tag div  exploit trigger gadget correctly eectively lower verication rate signicantly increase quality limitation summary limitation account reading importantly bound crawl user interaction restrictive verication apply likely subsection reporting crawl statistic detect data ows report automatic gadget verication  discus context XSS mitigation technique crawl mention initial data consist alexa web site  link crawl web domain subdomains  dierent sub domain domain  domain entry alexa site redirect domain geo location google google google redirect google com furthermore web site reachable crawl due site regional  site asia asia request europe remain data ows taint taint average sink per crawl url around sink aggregate per domain sink data unique source within dom grouped domain sink source unique combination mitigation relate XSS mitigation csp unsafe eval csp strict dynamic html sanitizers session code reuse attack CCS october november dallas TX usa content security policy unsafe eval oppose  keyword unsafe eval secure unsafe inline almost completely remove protection capability csp policy unsafe eval default policy bypass bypass policy unsafe eval attacker injection javascript execution function eval function   etc injection consume function limited easily audit application owner hence unsafe eval acceptable security usability csp however imply belief gadget indirect execution sink dom content evaluate default attacker inject code dom node abuse eval gadget execute arbitrary code data domain data within javascript execution function crawl unintentionally automatically bypass tumblr csp policy gadget bypassing unsafe eval source expression content security policy strict dynamic strict dynamic source expression csp increase usability nonce policy described strict dynamic enables automatic trust propagation script  legitimate script appends script dom script unless script propagates nonce script library aware csp library propagate nonce csp script library functionality strict dynamic enable trust automatically propagate non parser insert script consequently strict dynamic script automatically execute nonce situation attacker gadget bypass csp dom content inject script library function jquery html creates appends script strict dynamic csp bypass potentially aected web site data ows data ows within text  innerHTML script tag data within text  innerHTML tag tag dom taint data within script src data api append script tag dom domain data described characteristic detect gadget capable bypassing strict dynamic facebook  library content security policy summary unsafe eval strict dynamic considerably weaken csp policy source expression http developer facebook com doc website pixel html sanitizers sanitizers aim remove potentially malicious content sanitizers  tag attribute remove anything varies sanitizer sanitizer closure sanitizer remove data attribute  allows default conguration furthermore sanitizers attribute hence investigate behavior secure data  domain data html attribute security sensitive sink whereas site exhibit ows data attribute furthermore execute data attribute attribute recommend revisit sanitization approach towards data attribute gadget identied data ows generate gadget exploit candidate validate gadget domain summary discussion demonstrate data ows dom security sensitive function frequent application framework domain exhibit relevant data furthermore detect ows generate exploit capable bypassing XSS mitigation fully automate fashion detect veried gadget domain however due methodology bound extent apply deeper crawl authentication user interaction conservative approach  increase considerably specically remove exploit immediate execution initial injection XSS mitigation align application framework vulnerability dierent address issue script gadget fix mitigation technique mitigation technique gadget aware expression framework library instance user code dicult address dierent gadget request ltering mitigation detect various script gadget gadget chain transformation function however vector address specic mitigation html sanitizers lter data attribute fix application another approach address identied application popular library framework aim remove gadget safeguard user session code reuse attack CCS october november dallas TX usa extent however likely address gadget gadget chain feature framework unlikely developer framework willing remove restrict feature prevent XSS mitigation bypass furthermore unintentional gadget code trigger gadget intend developer unintended code sometimes harder XSS vulnerability xing XSS mitigation script gadget consume xing XSS shift mitigation isolation prevention technique due focus web security engineer shift mitigation technique towards isolation prevention technique sandboxed   isolated script promising proposal isolation technique furthermore web focus XSS prevention technique web platform inherently insecure novice programmer without security knowledge hardly secure web application web platform developer easily secure app secure  apis security concept web platform impossible introduce security vulnerability without malicious intent related client XSS source initial content injection XSS gadget attack insecure client data ows javascript closest related vulnerability client XSS dom XSS rst public documentation vulnerability  klein conduct demonstrate prevalence XSS approximately examine web site expose client XSS address propose taint protection mechanism insecure data ows within web browser taint potentially detect gadget attack client data ows exploit however hybrid data ows span across client server hence version approach cannot attack recently advanced defense via server instrumentation javascript code eliminate browser  unclear  technique adapt address script gadget attack initial payload untrusted source easily distinguishable legitimate target gadget code potential security insecure javascript transform dom content document distinct variation rst javascript framework angularjs insecure injection vulnerability scope classic server XSS sanitization technique due custom client markup convention furthermore uncovered specic non standard browser behavior potentially transform secure dom content executable code rewrite via javascript described return javascript attack scenario circumvent mitigation script  attack attacker executes already whitelisted script unwanted fashion assumption attack XSS exists application attacker execute already whitelisted script assumption attacker repurpose whitelisted script button whitelisted handler user attacker reuse whitelisted handler attach  via XSS vulnerability user immediately application mitigation prevents exploitation attacker harm user considerably abuse exist script circumvent XSS mitigation topic undermine protective capability XSS mitigation explore previously  outline potential future direction mitigation combat  essay  XSS emerge technique content  whitelist abuse potential possibility web code reuse attack topic browser XSS mitigation   expose inherent weakness XSS mitigation approach rely regular expression detection mechanism directly motivate  demonstrate weakness XSS lters non trivial vulnerability scenario partial injection addition research client XSS lters content security policy research endeavor concurrent examine quality eectiveness currently deployed csp policy sober addition demonstrate whitelist policy easily evade overly permissive whitelisted script provider complementary van various technique evade csp information restriction furthermore investigate automatically generate secure csp policy without unsafe inline unsafe eval keywords policy resist gadget policy vulnerable expression gadget outline finally demonstrate inject html CSS code alone sucient conduct attack comprehensive csp script execution prevention session code reuse attack CCS october november dallas TX usa conclusion comprehensively explore code reuse attack web script gadget script gadget variation empirical uncovered omnipresent web code demonstrate generation XSS mitigation unable handle XSS attack leverage script gadget execute payload unfortunately linear upgrade adapt mitigation approach robustly handle uncovered vulnerability specic mitigation technique modied handle gadget variance script gadget functionality due vastly amount custom client code constant client framework prevents comprehensive adaption accommodate conundrum future client web security  address XSS XSS apparently cannot thoroughly address secure cod alone combination complementary approach XSS mitigation insucient compensate  code XSS prevention arises handle XSS ahead sophisticated isolation technique oer potential consequence attacker javascript alternatively code abstraction secure default browser apis option overcome inherent hoc insecure web content generation however regardless paradigm generation XSS countermeasure upon essential capable handle unexpected client  data ows legitimate script gadget