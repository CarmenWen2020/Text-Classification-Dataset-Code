fundamental challenge hinder adaption decentralize cryptocurrencies scalability cryptocurrencies transaction distribute ledger blockchain transaction throughput inherently limited important proposal significantly improve scalability chain protocol massive amount transaction execute without costly interaction blockchain chain protocol payment channel network currently deployed popular cryptocurrencies bitcoin ethereum extension payment network envision cryptocurrencies channel network contrast payment network chain payment user channel network execution arbitrary complex smart contract contribution specification channel network moreover formal security definition security construction powerful adversary additional benefit construction channel virtualization reduces latency complex channel network CCS CONCEPTS security privacy cryptography keywords channel  virtualization blockchain protocol provable secure protocol introduction recent witness popularity distribute cryptocurrencies bitcoin ethereum underlie innovation currency consensus mechanism allows user maintain blockchain ledger potential application currency  transaction typically execute instantaneously implement enable novel business model wifi connection device internet unfortunately blockchain inherent challenge impossible directly  firstly transaction via network blockchain moreover consensus blockchain significant confirm transaction bitcoin confirmation around imposes fundamental limit transaction per instance bitcoin network currently limited transaction per finally miner transaction fee fee surpass actual assign transaction micropayments become attractive prominent address challenge offchain channel user rapidly exchange without transaction blockchain channel implement smart contract transfer accord complex program briefly concept introduction chain channel smart contract informally smart contract simply contract programmable described  program publish ledger technically smart contract meaning contract code static program contract instance dynamic executes code blockchain inside channel sequel distinction distinction program operating smart contract instance trust user coin distribute coin accord code probably currency contract arbitrary complexity ethereum popular contract solidity contract instance action trigger user fee contract execution user communicate contract instance function contract code instance deployed ledger function constructor detail smart contract formal model refer sec session blockchain CCS october toronto canada payment channel payment channel promising proposal address scalability challenge cryptocurrencies technology massive bulk transaction chain channel deploy channel contract blockchain lock amount coin afterwards freely update channel balance without ledger blockchain contact involve payment channel channel disagree channel contract handle settlement normal involve payment channel honestly chain transaction blockchain channel payment channel significantly improve shortcoming standard blockchain payment mention limit load blockchain instantaneous payment reduce transaction fee payment channel extend direction important extension payment network enable user route transaction via intermediary hub illustrate concept suppose payment channel payment channel channel network allows route payment via intermediary without channel ledger reduces chain transaction load  network implement poon  bitcoin technique hash lock transaction transaction rout explicitly via meaning confirms transaction detail hash lock transaction refer reader description lightning network version virtual payment channel alternative technique channel recently propose channel virtualization technique virtual channel extend payment channel ledger already mention payment channel extend payment channel intermediary contrast payment channel via hash lock transaction virtual payment channel advantage intermediary confirm transaction rout via argue virtual channel reduce latency fee improve availability distinguish standard channel virtual former ledger channel author construction virtual payment channel intermediary hub construction research address shortcoming important contribution concretely contract extend payment channel additional functionality payment channel availability improve payment via virtual channel intermediary temporarily channel generalization payment channel channel radically enrich functionality payment channel concretely user channel besides payment execute complex smart contract chain alice bob establish channel maintain simulated ledger contract perform execution contract without register blockchain happens conflict security register chain channel blockchain channel contract fairly execution contract channel manifold contract digital content distribution online decentralize token exchange contrast payment channel channel prominent project goal implement channel ethereum raiden currently payment specification protocol channel network concept chain maintain formalize building payment channel construction contrast channel construction allows virtual channel opening interaction blockchain significantly improves complexity channel creation knowledge longer channel recently publish developed independently lack formal definition security proof feature useful practical implementation contact author collaboration improve construction provably secure channel network closer contribution described satisfactory formal construction security definition channel network contribution address shortcoming construction building channel network arbitrary complexity formal definition security analysis construction allows user arbitrary complex smart contract chain permit channel intermediary core detail construct channel network construct channel network modular recursive approach virtual channel built recursively ledger already construct virtual channel description recursive approach sec therein everybody honest intermediary virtual channel contact channel ledger contact channel application specific allows arbitrarily complex contract channel channel usually omit brevity session blockchain CCS october toronto canada stress intermediary lose coin dishonest user virtual channel guarantee execute contract virtual channel collude model channel network security proof addition protocol channel network develop UC style model channel network inspire universal composability framework introduce seminal canetti similarly model via global ledger ideal functionality  novel ideal functionality channel network ideal specification protocol model formally protocol satisfy ideal specification challenge analysis careful timing impose processing ledger guarantee honest cannot lose contract execute chain collude fully malicious emphasize context cryptocurrencies security analysis importance security flaw monetary hence unlike setting guaranteed exploit later illustrate infamous attack dao complex chain protocol massively deployed potentially user specification analyze formal UC style proof optimistic pessimistic execution construct protocol optimistic pessimistic execution optimistic refer standard behave honestly optimistic protocol instantaneous chain contract execution delay depends latency network communicate pessimistic corresponds situation corrupt delay execution contract execution blockchain pessimistic execution linearly intermediary involve pessimistic reality unlikely corrupt goal introduce framework tune parameter important direction future improve construction optimize timing possibly technique related proposal building payment channel due  introduce construction duplex payment channel alternative proposal payment channel network author reduce pessimistic timing constant independent channel future combine technique channel virtualization focus privacy channel network balance payment channel UC security analysis recursive construction virtual channel construction channel construction sequence maturity mention already recently described detail stateful duplex chain micropayment channel another challenge building maintain complex channel network continuously happens blockchain regard channel address  user outsource task blockchain organization informal description channel construction sec explain channel due limit protocol description version specification important future protocol detail sec introduce formalism security efficiency channel sec modular approach building channel sec finally conclude sec channel construction proceed technical intuitive explanation virtual channel construction emphasize description approach simplify excludes important technicality formal definition detailed explanation protocol description  version already mention sec recursive approach via ledger channel virtual channel virtual channel ledger channel virtual channel ledger channel virtual channel recursively channel virtual channel ledger channel channel virtual channel ledger channel overview terminology ledger channel sec construction detail  session blockchain CCS october toronto canada explain ledger channel construction ledger channel alice bob allows execute chain instance contract code lottery contract clot user deposit coin user randomly chosen coin technically implement standard cryptographic commitment scheme execution contract happens deposit coin contract instance initial alice sends contract commitment random  afterwards bob sends random  contract denote alice commitment compute coin alice bob otherwise finally contract instance terminates technically previous implement via function bob implement function reveal reveal function available clot storage contract described sec ledger channel deploy channel contract scc lock amount coin ledger channel establish instance contract code channel execute channel lock coin instance lottery contract clot channel contract instance lock coin coin lock channel lock coin cannot contract instance contract instance terminates coin unlocked distribute channel accord channel contract blockchain guarantee something chain execution disagree contract instance communicate etc fairly resolve disagreement execution via channel contract blockchain chain contract execution ledger channel closer chain contract execution via ledger channel contract code denote dynamically instance execute deploy initial exchange signature execution exchange signature index denote version assume alice function parameter contract instance contract instance exchange signature computes locally  sends bob bob alice computation signature reader familiar ethereum simultaneous contract instance deployment ethereum multi input transaction stress illustrates contract inside channel blockchain compatible construction instance terminates coin execution distribute accord outcome instance lottery contract clot described alice locally computes sends bob commitment signature bob signature thereafter bob computes sends random alice interaction contract instance local compute exchange signature alice bob honest everything without interaction blockchain however cheat refuse communicate scc contract version scc concretely contract construct malicious submits overwrite contract instance version scc contract learns chain via scc virtual channel overview described virtual channel construct recursively ledger channel suppose alice bob contract code lottery chain however ledger channel instead alice bob channel ingrid denote channel respectively ingrid without interact blockchain alice bob virtual channel functionality guarantee ledger channel alice bob contract instance channel execute communicate without blockchain recall ledger channel dispute alice bob resolve channel contract scc virtual channel role judge played ingrid difference previous unlike scc execute ledger ingrid cannot trust collude corrupt alice bob prevent cheat contract ledger channel code virtual channel contract VSCC instance denote respectively instance security guarantee alice bob addition contract instance guarantee ingrid contract code VSCC code interpret code dispute scc depends VSCC hence indirectly dependence summarize session blockchain CCS october toronto canada alice ingrid bob blockchain VSCC VSCC scc scc construction virtual channel contract instance virtual channel explain virtual channel creation detail alice bob inform ingrid intention intermediary virtual channel alice propose instance VSCC channel instance information virtual channel coin lock channel virtual channel ingrid role bob initial balance coin alice coin bob alice lock coin ingrid coin symmetrically bob proposes instance VSCC ledger channel virtual channel ingrid role alice ingrid lock coin bob coin ingrid receives proposal agrees intermediary virtual channel confirms request contract execution virtual channel chain contract execution virtual channel perform exactly ledger channel chain contract execution ledger channel alice bob honest execute contract instance exchange signature version without ingrid without update alice bob disagree handle differently cannot contact blockchain contract resolve situation channel ingrid situation scenario described bob malicious communicate alice signature situation alice forcefully channel ingrid concretely execute contract instance important stress virtual channel construction instance protocol virtual channel execution protocol execution via interface underlie channel internally protocol alice ingrid realize chain execution alice ingrid honest alice registration procedure goal disagreement bob convince contract instance sends bob signature function register alice really therefore message ingrid function register contract instance channel bob version contract instance register alice signature ingrid learns bob version information suppose alice honest bob cheat submit version instance handle analogously version register ingrid important security feature procedure consensus alice bob dishonest consensus maintain entire execution instance important otherwise lose coin invariant maintain throughout execution procedure registration alice function execute execute contract instance register maintain consensus invariant mention cannot simply perform execution immediately receives contract function bob simultaneously function execute situation subtle function execution generally commutative execute consequently local delay execution function execute precisely contract code VSCC define storage contract instance resp internal execution resp perform contract instance terminate happens virtual channel emphasize purpose description explain concept construction protocol however slightly differently due optimization decrease pessimistic complexity registration phase execution phase virtual channel parallel refer reader  detail construction apply recursion already highlight earlier longer virtual channel construct recursively observation enables recursion channel recall execution realize protocol alice ingrid alice coin lock bob coin lock ingrid loses coin channel clot contract however restriction contract session blockchain CCS october toronto canada alice ingrid bob register register register register execute execute illustration execution alice bob virtual channel contract instance function message contract omit access construction execute chain contract guarantee virtual channel construction channel virtual ledger virtual ledger illustrate situation depict virtual channel virtual channel virtual channel ledger channel assume contract code instance construction described earlier underlie channel contract instance virtual channel contract VSCC depends implies ledger channel virtual channel contract instance virtual channel contract VSCC depends VSCC indirectly longer channel contract code instance virtual channel contract instance VSCC contract instance VSCC finally contract instance virtual channel contract VSCC depends VSCC ledger channel detail recursion analysis pessimistic optimistic timing mention achieve linear pessimistic complexity channel construction assumes virtual channel built balance channel virtual channel approximately notion description ignore notion simplify informal description define notion technical sec construction aware pas information contract function channel model feature construction important construction model concurrency virtual channel simultaneously ledger channel involve concurrent execution possibly complex contract ledger channel execute contract independently another important feature modular construction naturally allows building channel via multiple incompatible cryptocurrencies sufficiently complex script deploy channel contract illustration alice ledger channel ingrid cryptocurrency coin bob ledger channel ingrid cryptocurrency coin alice bob virtual channel ingrid alice resp bob oblivious detail coin resp coin exchange rate currency lifetime virtual channel virtual channel opening closing interact ledger lifetime virtual channel addition virtual channel improve privacy channel update fully PP involvement intermediary finally concept channel virtualization feature layer defense malicious honest user communicate blockchain situation intermediary virtual channel corrupt resolve conflict via intermediary virtual channel communicate ledger DEFINITIONS security model sequel tuples convention individual tuple identify keywords attribute attr attr strictly attribute tuple function attribute attribute attr tuple attr refer attr convention easily handle tuples dynamically attribute assume gen  signature scheme existentially unforgeable chosen message attack ECDSA scheme ethereum satisfy definition definition contract channel syntax contract channel notation extension assume fix session blockchain CCS october toronto canada contract contract execute contract storage attribute tuple contains attribute userL  denote user involve contract lock denotes amount coin lock contract cash userL  denotes amount coin user freely available lock cash userL cash  explain difference lock coin freely available coin inequality concrete assume invests coin bet coin pot amount coin lock coin however amount freely available coin decrease freely available coin addition attribute mention contract storage application specific data define formally notion contract code already described informally sec formally contract code consists function ethereum solidity contract storage contract storage usually restrict function attribute define restrict storage admissible contract storage typically denote formally define contract code tuple admissible contract storage function contract constructor contract function contract constructor function input tuple output admissible contract storage contract construction fail meaning parameter identity function sec model pas additional parameter constructor instance contract contract construction fail initial storage contract instance contract function input tuple admissible contract storage userL  meaning parameter output tuple ADDL addr contract storage replaces contract storage contract instance ADDL addr correspond amount coin unlocked contract storage user execution output message output message execution fail assume execution fails function execute input satisfy constraint described apply admissible output message admissible contract storage attribute userL  identical addition ADDL addr lock lock intuitively guarantee execution contract function unlock coin originally lock contract storage described sec contract instance instantiation contract code formally contract instance attribute tuple contract storage code code contract code storage contract storage ledger channel terminology ledger channel inspire notation payment channel formally ledger channel define attribute tuple alice bob cash cspace attribute identifier ledger channel attribute alice bob identity ledger channel convenience define user alice bob function alice bob bob alice attribute cash function mapping user cash amount coin user lock ledger channel finally attribute cspace partial function contract instance currently channel input contract instance identifier cid output contract instance storage userL storage  user refer cspace cid contract instance identifier cid ledger channel virtual channel formally virtual channel tuple alice bob ingrid subchan cash cspace validity attribute alice bob cash cspace define ledger channel user function attribute ingrid denotes identity intermediary virtual channel technical version restrict cspace virtual channel contract instance emphasize restriction functionality ledger channel arbitrary contract instance hence virtual channel attribute subchan function mapping user subchan alice identifier ledger virtual channel alice ingrid analogously subchan bob channel subchannels virtual  attribute validity denotes virtual channel sec notion parameter ensure channel remain forever otherwise ingrid forever unlike alice bob cannot request channel closing finally attribute refers virtual channel ledger channel built sometimes convenient ledger channel session blockchain CCS october toronto canada security efficiency goal formal security model sec listing security guarantee desirable channel network description important ledger channel virtual channel hence refer channel consensus creation channel successfully user creation consensus update contract instance channel successfully update creation contract instance user update guarantee execution honest user ledger channel execute contract function contract instance input user corrupt virtual channel restriction validity balance security intermediary virtual channel loses coin user corrupt monetary security guarantee intermediary virtual channel guarantee user ensure contract instance contract instance execute emphasize guaranteed ledger chain contract concretely contract user lose lose lottery described sec violation security guaranteed channel network addition security identify efficiency goal constant execute procedure independent channel ledger delay ahead parameter model blockchain delay sec detail constant optimistic update execute optimistic user channel honest update execute contract instance within constant constant virtual channel creation successful creation virtual channel constant model formally model security construction  model protocol coin model synchronous version global UC framework  extends standard UC framework global setup protocol adversarial model protocol authentic communication channel protocol throughout coin refers monetary execute presence adversary adv input security parameter auxiliary input corrupt protocol execution static corruption corruption adv internal adversary adv input environment anything external protocol execution environment observes output return protocol addition entity access ideal functionality protocol hybrid model model communication assume synchronous communication network execution protocol happens emphasize notion abstraction simplifies model formalization model relation model whenever operation message simply idle adversary operation discus amount entity communicate communication exactly communication adversary adv environment zero simplicity assume computation entity zero handle coin model mechanic  bitcoin ethereum via global ideal functionality  global UC  model ideal functionality  public access protocol adversary adv environment account maintain vector non negative finite precision amount coin ledger functionality formally define version informally described functionality  initiate environment freely remove user account via operation remove cannot directly perform operation ideal functionality remove operation hence indirectly modify functionality ideal functionality issue remove command command within parameter command adversary adv parameter model cryptocurrencies update ledger immediate denote ledger functionality maximal delay ideal functionality access  security definition protocol  model access global ledger output environment interact protocol adversary adv concept session blockchain CCS october toronto canada input auxiliary input denote exec adv trivial protocol simply input ideal functionality dummy adversary simulator sim denote output ideal sim simplify description protocol ideal functionality restrict environment denote  restriction typically disallow environment action forbid instruct protocol without instruct protocol emphasize restriction easily eliminate integrate additional protocol functionality restriction define  informally introduce sec version security definition definition restrict environment protocol hybrid model emulates ideal functionality respect global ledger environment adversary adv exists simulator sim environment exec adv ideal sim denotes computational  distribution ensemble informally definition attack protocol ideal functionality ideal functionality secure sec protocol security sec discus detail role simplify assumption simplify exposition omit session identifier sid sub session identifier ssid instead expression message message approach improves readability another simplify assumption protocol public infrastructure setup trust   KGen message    emphasize pki abstraction easily realize blockchain  ideal functionality ideal functionality defines ledger channel virtual channel maintain establish convention simplify description ideal functionality reader familiar UC UC composition arbitrary environment version restriction composition sub protocol preserve alternative approach wrapper however due complexity protocol description wrapper highly convolute abbreviate notation context channel denote alice bob ingrid introduce symbolic notation message instead instruction   instead instruction message msg user msg user msg entity ideal functionality receives message msg msg entity receives msg description ideal functionality timing function  maximal inform execution contract instance channel request  maximal execute contract instance channel function  version formal definition function relationship entity maintains channel aware channel denote sometimes abuse notation interpret channel function input return channel identifier channel exist otherwise contract instance channel successfully exist execute channel update accordingly define auxiliary procedure  procedure input channel channel identifier contract instance identifier cid contract instance ADDA  cash channel identifier procedure cspace cid ADDA coin cash  coin cash finally output update channel formal definition version ideal functionality denote channel ideal functionality maximal channel via functionality denotes contract code instance channel ideal functionality communicates access global ideal functionality ledger maintains channel channel empty input message ideal functionality private information implicitly assume ideal functionality message receives simulator sim precisely upon message ideal functionality sends message simulator task simulator instruct ideal functionality ledger output message depends choice session blockchain CCS october toronto canada adversary adv description ideal functionality explicitly mention instruction sim instead abbreviation remove coin account ledger ideal functionality instruct simulator within request account ledger emphasize abbreviate notation affect reactive ideal functionality meaning action functionality trigger entity formal definition functionality intuition definition introduce important restriction environment sec argue ideal functionality satisfies security efficiency sec constant formal description technical detail protocol formal proof security efficiency version channel creation functionality consists channel creation procedure ledger virtual channel ledger channel creation procedure message without loss generality assume initiate creation functionality remove coin deposit ledger channel account ledger declare ledger channel happens within coin remove ledger ledger channel communicate message otherwise refund message message consensus creation security clearly satisfied ledger channel creation procedure virtual  slightly differently visible subchannels intention express user message functionality message coin lock immediately correspond subchannel coin lock subchannels functionality receives message within virtual channel communicate user message consensus creation security satisfied virtual channel successful creation constant virtual channel creation virtual channel user validity initiate closing procedure functionality distributes coin subchannels accord balance version exists cid cspace cid contract instance lock coin coin intermediary inform virtual channel choice protocol information update virtual channel subchannels guarantee loses coin user terminate contract instance validity ledger virtual assume honest involve channel creation initiate procedure fund channel virtual channel additionally assume subchannels contract instance update procedure update contract instance identical ledger virtual channel procedure contract instance initiate user sends update message ideal functionality message parameter cid identify channel contract instance channel respectively parameter denote storage code contract instance confirm update via update request message  update message within honest  otherwise  function channel contract instance identifier cid replace contract instance tuple user notify via update message confirm update implies consensus update security constant optimistic update efficiency update exactly honest assume environment asks obviously illegal update contract instance channel exit contract instance coin subchannels moreover assume environment asks update contract instance already update execute contract instance execution procedure execute contract instance initiate user sends execute message ideal functionality message parameter cid meaning update procedure parameter denote contract function execute additional input parameter function execution update contract instance identifier cid accord compute storage contract instance honest simulator otherwise channel notify execution request optimistic otherwise user execution optimistic implies constant optimistic execute sec assumption achieve pessimistic complexity linear channel although forbid parallel update contract instance restriction parallel update contract instance ledger channel concurrent creation virtual channel session blockchain CCS october toronto canada functionality functionality accepts message abbreviate notation define sec ledger channel creation upon ledger channel within remove cash coin account remove within cash coin account user otherwise upon refund within cash coin account virtual channel creation upon user message proceed user proceed remove cash coin balance subchan cash coin balance subchan user proceed remove cash coin balance subchan cash coin balance subchan within user user ingrid define user channel closing meanwhile accept update execute message concern otherwise validity within   refund coin remove subchannels automatic closure virtual channel validity within   proceed version virtual channel  cash  cash  coin balance  coin balance subchan  coin balance  coin balance subchan exists cid  cspace cid storage  lock coin balance subchan subchan erase user contract instance update upon update cid user proceed update request cid optimistic user honest  update cid  cid ADDA  ADDA cash cspace cid ADDA cash cash otherwise cspace cid storage  define analogously update cid user contract instance execution upon execute cid user optimistic user honest pessimistic user corrupt sett sett   execute request cid cspace cid storage honest simulator compute ADDL addr  cid code ADDL addr execute cid ADDL addr user ledger channel closure upon user distinguish exists cid  cspace cid storage  lock otherwise cash coin account cash coin account ledger user channel ideal functionality session blockchain CCS october toronto canada otherwise function channel formal description contract instance execution initiate approval channel although inform execution request implies guarantee execution security satisfied emphasize execute message ideal functionality adversary function execute designer contract code user protocol aware asynchronicity ledger channel closure procedure closing ledger channel user sends ideal functionality message identifier ledger channel functionality contract instance functionality distributes coin ledger account accord balance notifies successful closure channel ideal functionality demonstrate ideal functionality generalize channel network concrete lottery already sec define contract code clot allows lottery channel contract storage clot addition mandatory attribute userL  cash lock sec attribute purpose construction attribute com commit submit userL attribute secret  contract code constructor  generates initial contract storage cash userL cash  user deposit coin contract function com execute userL   com reveal execute  input allows userL commitment com coin winner punish allows unlock coin contract instance misbehaves version formal definition clot assume alice bob virtual channel via ideal functionality clot alice lottery locally executes constructor  obtain initial contract storage sends message update cid clot contact instance identifier cid ideal functionality informs bob alice intention message update request cid clot bob agrees sends update cid alice bob execution smart contract blockchain commit alice locally chooses random random security parameter locally computes commit randomness submits message execute cid com ideal functionality reveal  bob receives message ideal functionality alice commit secret bob locally chooses random submits message execute cid reveal ideal functionality otherwise  sends message execute cid punish ideal functionality unlock coin lottery contract punishes alice misbehavior  alice receives message ideal functionality bob  secret commitment message execute cid otherwise  sends message execute cid punish unlock coin lottery contract punishes bob misbehavior finalize  bob message ideal functionality alice commitment bob sends message execute cid punish ideal functionality unlock coin lottery contract finalize overview approach modular protocol realize channel ideal functionality construction already sec ledger channel define ideal functionality scc model behavior concrete smart contract channel contract contract allows maintain ledger channel blockchain ideal functionality parametrized contract code instance ledger channel via ideal functionality ideal functionality scc ledger functionality implement cryptocurrency channel contract blockchain candidate cryptocurrency ethereum contract ideal functionality protocol realizes ideal functionality protocol ledger channel outline protocol  formal description protocol ideal functionality scc version protocol emulates ideal functionality scc hybrid statement formalize theorem theorem suppose underlie signature scheme existentially unforgeable chosen message attack protocol session blockchain CCS october toronto canada scc hybrid model emulates ideal functionality environment  contract code virtual channel already mention sec technique allows virtual channel arbitrary via channel functionality recursively protocol construct channel model access ideal functionality construct channel formally construct protocol realize ideal functionality hybrid contract code define   contract code virtual channel contract allows virtual channel contract instance code importantly hybrid ideal functionality allows channel subchannels virtual channel briefly hybrid ideal functionality protocol receives message regard channel simply message hybrid ideal functionality receives message regard virtual channel exactly hybrid ideal functionality subchannels virtual channel  outline protocol version formal description protocol code virtual channel contract  theorem theorem suppose underlie signature scheme existentially unforgeable chosen message attack protocol  hybrid model emulates ideal functionality environment  contract code apply composition recursively construction protocol realize scc hybrid model  apply  equation recursively     modular approach   scc VSCC VSCC conclusion channel network channel arbitrary arbitrary contract execute chain modular approach allows recursive construction channel virtual channel channel significantly simplifies description construction protocol proven secure global UC model optimistic complexity independent channel pessimistic malicious delay protocol execution complexity construction linear channel aim optimize pessimistic complexity protocol description complex grain timing analysis reduce constant pessimistic complexity correspond optimization channel protocol highly recommend implementation another virtual channel complexity independent channel technique incentivizing intermediary important practical become intermediary virtual channel although construction guarantee honest intermediary lose coin intermediary lock coin entire lifetime virtual channel role unattractive concept service fee construction sketch alice bob lock additional coin  contract instance channel ingrid virtual channel creation precisely virtual channel alice lock cash  coin channel ingrid bob lock cash  coin channel ingrid closure assume successfully service fee unlocked VSCC contract instance ingrid channel suitable contract code  subtle issue user future implementation aware sec security guarantee user channel strongly dependent code contract instance channel secure contract user channel principle standard contract ledger however additional aspect account contract code channel recall coin lock contract instance underlie virtual channel assign intermediary channel therefore important contract instance terminate user validity underlie virtual channel expires another important although construction guarantee user channel execute contract instance contract function pessimistic session blockchain CCS october toronto canada  notify execution  execution denotes channel contract deployment directly blockchain notification execution delay longer