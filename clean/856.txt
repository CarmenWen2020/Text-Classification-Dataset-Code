graphic processing gpus commonly integrate compute device enhance performance capability graphical workload addition increasingly integrate data accelerate data intensive workload scenario gpu multiple application granularity spy application monitor channel attempt infer behavior victim OpenGL WebGL workload gpu granularity frame attacker interleave gpu ect victim computation performance counter resource apis demonstrate vulnerability application OpenGL spy ngerprint website accurately user activity within website infer keystroke timing password text accuracy application demonstrates cuda spy application derive internal parameter neural network model another cuda application illustrate threat counter attack suggests mitigation limit rate limit granularity return information CCS CONCEPTS security privacy channel analysis countermeasure keywords gpu channel website ngerprinting keystroke timing attack introduction graphic processing gpus integral component compute device optimize performance graphic multi medium workload increasingly integrate compute server accelerate application domain security computer vision computational  bio informatics others application sensitive data compromise security vulnerability gpu stack although security gpus explore vulnerability already demonstrate related demonstrate timing channel cpu timing gpu operation assume gpu encryption library encryption chosen text encryption runtime varies encryption memory access dependent timing  due gpu memory coalesce ect enable timing channel attack attacker launch encryption kernel gpu kernel execution cpu totally erent threat model investigates channel concurrent apps gpu recently covert channel collude concurrently cuda application cuda nvidia program purpose workload gpu gpu construct neither demonstrates channel attack focus explores channel attack gpus practical gpus sensitive data respect graphic workload render screen expose user information activity computational workload application sensitive data algorithm indeed attack novel dangerous threat vector unique aspect channel attack gpu due erent computational model parallelism unique location attacker measurable channel gpu stack indeed channel exploitable demonstrate attack nvidia gpus graphic computational software stack application pre requisite architectural channel attack colocation attacker victim resource attacker contention systematically characterize situation spy session 0D VulnDet channel CCS october toronto canada channel behavior victim graphic computational stack nvidia gpus OpenGL workload discover kernel shader program concurrently schedule cient resource verify compete cuda workload finally workload originate cuda OpenGL interleave gpu concurrency granularity interleave computational kernel granularity discus location possibility attack location knowledge demonstrate attack spy interleave execution victim extract channel information explore memory allocation apis gpu performance counter measurement source leakage source leak channel information regard behavior victim successfully practical dangerous attack generation nvidia gpus illustrate attack graphic application implement web ngerprinting attack  user browsing website accuracy extension attack user activity website capture keystroke timing illustrate attack computational workload spy reconstruct internal structure neural network accuracy channel information performance counter gpu explore mitigation attack prevent contention gpus allocate exclusively limit leakage likely impractical focus limit attacker ability leakage interfere measurement accuracy substantially limit leakage interfere attacker ability extract sensitive information summary contribution investigate feasibility gpu channel attack due resource contention within gpu reverse engineer nvidia gpu model extract internal schedule parameter measurement apis gpu channel attack demonstrate practical attack graphic computational gpu workload across rst report channel attack gpus discus evaluate mitigation limit rate precision vulnerable apis disclosure report  nvidia understand intend publish patch administrator option disable access performance counter user draft amd intel security enable evaluate gpus respect vulnerability gpu programming INTERFACES architecture rst overview gpu program interface gpu architecture programmed contention arises within gpu program interface gpus originally accelerate graphic multimedia workload usually programmed application program interface OpenGL 2D 3D graphic WebGL usable within browser OpenGL WebGL interface graphic stack gpu OpenGL accessible application desktop user privilege attack practical desktop theory javascript application launch attack WebGL version WebGL expose measurement apis leakage gpu manufacturer enable purpose programmability gpus accelerate data intensive application program interface cuda  OpenCL alternative interface software stack access gpu computational stack computational gpu program widely computational cluster compute accelerate data intensive application typically graphic workload machine computational server without graphical output nowadays non purpose compute gpus increasingly towards gpu concurrent  evaluate attack android device incorporate nvidia gpus phone nvidia tegra gpu future research android device modi version OpenGL available OpenGL ES access performance counter attack memory api additional leakage available android detailed pro ling render behavior application obtain developer permission desktop mobile device purpose programmability gpus installation cuda software library gpu driver nvidia estimate instal device cuda already application available desktop mobile device performance advantage useful application available default likely desktop mobile device install cuda OpenCL enable attack originate cuda graphic workload gpu architecture overview  review gpu architecture insight execution model contention arises architecture illustrates due parallelism cache conventional cpu attack prime probe cache attack virtually impossible  correlate access potential concurrently execute thread generate session 0D VulnDet channel CCS october toronto canada memory controller memory controller memory controller memory controller cache GPC GPC GPC GPC SM raster raster raster raster  SM  SM   SM  SM instruction cache warp scheduler warp scheduler dispatch dispatch register file core core core core LD ST LD ST sfu sfu memory cache texture cache tex tex tex tex  gpu SM cuda application kernel kernel thread warp host cpu device gpu gpu overview architecture application graphic processing pipeline architecture overview typical gpu resource thread mapped within gpu gpu consists graphical processing cluster  graphic raster multiprocessor SM core SM cache instruction global data constant data texture data computational thread mapped globally cache faster access memory typical nvidia tesla SMs global memory cache constant memory memory GB MB KB KB respectively illustrate operation architecture purpose function cuda OpenCL gpu cuda application launch cuda runtime driver driver interface gpu demonstrate cuda application consists parallel computation kernel computation execute gpu cuda application implement parallel matrix multiplication computation kernel kernel decompose thread assign erent SMs internally thread grouped warp typically thread schedule instruction multiple thread SIMT processing model portion data assign warp warp assign typically warp scheduler SM cycle warp scheduler issue instruction available execution core architecture SM xed various core precision core precision core load core functional available core instruction cycle issue core heavily pipelined issue instruction erent cycle warp assign SM compete access processing core gpu memory across SMs chip channel memory controller bandwidth gigabyte per latency impact latency hidden partially cache importantly warp thread ensures availability warp available processing bandwidth warp stall memory granularity frequent interleave execute thread  correlate grain channel leakage cache cache computation source graphic pipeline respect graphic workload application sends gpu sequence vertex grouped session 0D VulnDet channel CCS october toronto canada geometric primitive polygon shader program vertex shaders geometry shaders fragment shaders programmable graphic workload execute SMs gpu gpu hardware creates independent thread execute vertex geometry fragment shader program vertex primitive pixel fragment respectively graphic workload bene massive parallelism available gpu demonstrates logical graphic pipeline vertex shader program executes per vertex processing transform vertex 3D screen geometry shader program executes per primitive processing primitive setup rasterization translates vector representation image geometric primitive geometry shader pixel representation fragment pixel shader program performs per pixel processing texturing output graphic workload consists pixel nal image compute fragment shader fragment shader extensive sample  lookup 1D 2D 3D array texture gpu global memory contention erent thread operation image dependent image performance counter memory usage leak information graphic workload render gpu attack  leakage  rst attack scenario placement spy victim available leakage vector scenario attack scenario primary attack vector malicious program normal user permission goal spy victim program graphic spy graphic victim attack graphic spy graphic workload desktop laptop machine default graphic library driver instal attack implement easily graphic apis OpenGL leakage graphic application web browser infer sensitive information cuda spy cuda victim attack cuda spy cuda workload typically cuda library driver instal cuda spy graphic victim stack user cuda instal attack cuda graphic application rst attack assume attacker exploit graphic stack apis OpenGL WebGL attack assume gpu accessible attacker cuda OpenCL reverse engineer location attack vector identify leakage source available scenario available leakage vector gpus prior concurrently execute gpu kernel construct covert channel cuda contention resource cache functional atomic memory however grain leakage  exploit channel attack active thread relatively cache structure  precision prime probe attack data cache SIMT computational model limit leakage due data dependent statement gpu clause statement execute thread interested clause equalize channel signal channel target timing analysis prediction attack instruction cache attack CPUs unavailable gpus colocation application gpu concurrently scenario OpenGL cuda kernel concurrently execute instead target grain contention behavior attack focus aggregate contention available resource apis mechanism available attacker victim performance memory allocation api expose amount available physical memory gpu gpu hardware performance counter timing operation execute concurrently victim veri memory channel available nvidia amd gpus operating OpenGL linux MacOS nvidia gpus currently performance counter linux MacOS compute application linux android graphic application amd linux WebGL extension channel therefore cannot implement spy attack although web browser website WebGL javascript api gpu render target victim attack OpenGL spy gpu memory allocation gpu render content related memory allocation perform gpu probe available physical gpu memory nvidia api cuda OpenGL context repeatedly query api available memory amount memory allocate deallocated OpenGL application nvx gpu memory info extension attack graphic spy extension information hardware memory utilization gpu query gpu memory info available  nvx parameter  similarly cuda application memory api nvidia  amd apis query available gpu memory OpenCL session 0D VulnDet channel CCS october toronto canada graphic graphic desktop cuda cuda spy spy victim spy victim concurrency gpu cuda OpenGL app app graphic cuda desktop victim computation cuda app screen render spy cuda app victim screen render performance counter memory utilization memory utilization performance counter cuda kernel graphic frame threat scenario gpu performance counter category metric memory device memory throughput transaction global local memory load throughput transaction transaction device memory utilization instruction integer  instruction instruction execute issue issue execute ipc issue load instruction issue stall data request execution dependency texture multiprocessor precision function utilization function utilization texture function utilization function utilization cache rate texture throughput transaction writes texture writes texture uni cache rate throughput utilization OpenGL application amd device attribute query ati  extension respectively attack amd gpus performance counter nvidia pro ling monitor gpu performance counter cuda spy summarizes important metric tracked gpu categorize memory instruction multiprocessor cache texture although gpu allows application counter related computational kernel  execution victim kernel victim kernel access cache replace spy data spy cache cache related counter OpenGL interface query performance counter enable sample graphic spy timing individual operation scenario spy victim concurrently detect contention scenario victim spy interleave timing discloses execution victim computation kernel experimental setup veri existence report vulnerability nvidia gpus erent microarchitecture generation tesla kepler geforce gtx maxwell titan volta nvidia gpus report geforce gtx gpu conduct ubuntu distribution veri attack mechanism accessible MacOS graphic driver version chrome browser version threat scenario  spy  victim rst threat scenario application graphic api OpenGL spy another application gpu graphic pipeline reverse engineer concurrent graphic workload application gpu location reverse engineering location understand concurrent application gpu workload session 0D VulnDet channel CCS october toronto canada concurrently approach issue concurrent workload execute gpu timer register SM ID execute available OpenGL api overlap application colocate SM IDs overlap application individual SM additional contention private resource SM launch graphic application render screen repeatedly thread responsible assign pixel fragment shader SM ID timing information thread OpenGL workload evaluate contention OpenGL developer  extension NV shader thread enable programmer query   SM ID OpenGL shader code arb shader expose local timing information within shader invocation extension reverse engineering phase fragment shader code obtain information OpenGL facility directly query execution encode information output pixel shader program pixel output shader program application pixel   decode obtain encode  SM ID timing information pixel thread graphic application workload exceed gpu hardware resource colocate concurrently kernel exhaust resource entire gpu extremely unlikely kernel typically gpu thread allocate pixel therefore amount resource reserve graphic kernel depends gpu spy render application render screen resolution spy resource thread memory etc discover SM application subsection explain implementation attack graphic stack gpu attack website fingerprint rst attack implement website ngerprinting victim surf internet browser rst background web browser render website understand computation expose channel attack attack evaluation web browser display processing version web browser utilize gpu accelerate render chrome firefox internet explorer hardware acceleration default gpus highly cient graphic workload cpu task lower overall consumption chrome render processing consists interact renderer gpu user interface UI default chrome gpu rasterize web content recall rasterization conversion geometric description image pixel description webpage content render default renderer cpu chrome memory gpu facilitate exchange data gpu cpu rasterize image web content uploads gpu memory gpu issue OpenGL quad rectangle nal bitmap image tile finally chrome  composite image browser UI gpu WebGL enables website browser gpu render pipeline attack ective website WebGL WebGL statistic visitor series website WebGL enable browser report site site WebGL website WebGL chrome gpu rasterization default option user browser enable gpu rasterization hardware rasterization enable polygon render OpenGL primitive gpu gpu accelerate rasterization substantially performance render web frequently update portion screen gpu accelerate render allows seamless animation performance cpu chromium project gpu architecture roadmap seek enable gpu accelerate rasterization default chrome future attack assume hardware rasterization enable report experimental without enable gpu rasterization launch ack attack spy active gpu user browsing internet likely attack scenario user application OpenGL malicious user app desktop spy infer behavior browser gpu however cuda OpenCL spy assume correspond driver software environment instal enable graphic cuda channel attack described probe gpu memory allocation spy probe memory api obtain trace memory allocation operation victim render erent webpage user website ngerprinting leverage machine algorithm classify trace infer website victim likely machine classi trace obtain ranked website accord alexa website unique trace gpu memory utilization due erent erent render signal consistent across load website   cache spy reliably obtain allocation illustrate channel signal gpu memory  rasterization enable chrome flag chrome config layer acceleration enable option firefox session 0D VulnDet channel CCS october toronto canada memory allocation KB google com memory allocation KB amazon com memory allocation KB facebook com website memory allocation gpu google amazon facebook allocation trace google amazon facebook website render axis allocation gpu axis allocation evaluate memory api attack website ranked alexa data spy background automatically browsing website gpu memory utilization trace classi cation rst series classi cation dynamic warp training classi cation complexity instead construct feature series signal traditional machine classi cation achieve accuracy compute statistical feature minimum maximum standard deviation slope skew kurtosis series memory allocation channel website load feature easy compute capture essence distribution series skew kurtosis capture distribution series skew characterizes asymmetry kurtosis relative   distribution relative normal distribution compute feature separately rst timeseries website data slope average memory allocation website refer  feature vector website feature consist feature feature classi cation model standard machine algorithm namely knn gaussian naive bayes NB random estimator RF evaluate performance model identify perform classi dataset classi cation validate classi cation model standard fold crossvalidation training data instance performance classi compute precision prec recall rec FM machine classi cation model prec refers accuracy reject negative rec accuracy accept positive recall rejection positive instance false negative precision acceptance negative instance false positive FM balance precision recall memory api website ngerprinting performance precision recall FM prec rec NB knn RF classi cation random classi achieves around accuracy alexa website launch memory api attack browser default con  enable gpu rasterization browser obtain precision generalization across screen screen browser erent user erent browser attack generalizes across discover signal erent amplitude website responsive website dynamic content variance memory allocation signal due training ML model screen data measurement average accuracy respectively performance improve training measurement erent session 0D VulnDet channel CCS october toronto canada memory allocation KB signing account memory allocation KB account user activity memory trace america website account attack II user activity keystroke monitoring website ngerprinting attack user activity keystroke monitoring attack rst component attack channel user activity web user activity navigation sub webpage user access website user user browse saving account banking webpage user activity signature attack website facebook com  com facebook website goal detect user signing signing account  website besides detect signing opening account user activity detect account user intend interaction website intuition button link clicked homepage erent subsequent signing signing distinguishable series signal feature ngerprinting attack classi cation performance website random classi identify user web activity accurately precision accuracy activity memory api user activity detection performance precision recall FM prec rec NB knn RF password textbox  cation keystroke timing inference detect victim website speci website extract additional ner grain information user activity probe gpu memory allocation repeatedly detect user typically  textbox structure animate speci  signal contains memory allocation victim granularity KB identify username password textbox versus textbox inter keystroke allows extract typed infer timing analysis infer user password textbox facebook extract inter keystroke password input gpu render text default option user render cpu password textbox uploaded gpu texture rasterize composited monitor available memory decrease KB amount gpu memory render password textbox facebook leak user attempt instead signing  gpu memory render monitoring available memory infer inter keystroke observation active website user input username password render refresh rate around presumably due blinking cursor however typed immediately render interval ect axis nth memory allocation axis interval allocation previous user clearly dip gure correspond user keystroke correspond dip calculate  instance allocation axis rst keystroke allocation faster regular interval without user input keystroke session 0D VulnDet channel CCS october toronto canada another inter arrival rst keystroke memory allocation interval facebook timing gpu memory allocation password normalize error probability density measurement error distribution inter keystroke prior inter arrival keystroke leak information actually typed user demonstrate attack cient precision timing analysis inter keystroke truth browser code capture rst constant bias correspond overhead measurement around adjust sample data remove constant amount compute normalize error  gpu interval truth cpu probability density normalize measurement error inter keystroke timing measurement timing sample timing extremely accurate error measurement standard deviation standard deviation translates absolute error average measurement error inter keystroke timing typed facebook password channel truth channel measurement average truth accurately worth inter keystroke extract closely speci  speci webpage practical serious threat user privacy browsing web sample inter keystroke truth gpu keystroke timing truth gpu threat scenario cuda spy cuda victim construct channel compute application  ability multiple program gpus gpus  multiple hardware multi kernel execution within multi service MPS allows execution concurrent kernel erent gpu MPS already gpus hardware queue hyper available kepler newer microarchitecture generation nvidia multi execution eliminates overhead gpu context switch improves performance gpu underutilized trend newer generation gpus expand  volta architecture hardware concurrent address gpu gpus MPS assume application launch gpu exist gpu application physical node via pas colocation attacker victim vms node orthogonal investigate prior although session 0D VulnDet channel CCS october toronto canada model gpus computational workload compute evolve currently enable MPS daemon ups shut MPS server cuda context MPS client MPS server MPS daemon funnel MPS server issue kernel concurrently gpu cient hardware resource colocation cuda spy victim application establish graphic compute channel spy cuda application contention victim application gpu performance counter extract information concurrent computational workload gpu thread SM enable measurement performance counter speci SM erent thread warp utilize erent hardware resource functional erent cache global memory parallel contention erent resource attack neural network model recovery attack goal demonstrate channel exploit erent computational application attack scenario spy application seek colocate gpu another application infer behavior victim cuda implement propagation algorithm rodinia application benchmark application internal structure neural network critical secret target model extraction attack prior reverse engineering hardware scheduler gpus enable cuda spy cuda victim SM launch consecutive kernel spy victim kernel execution victim contention feature tracked hardware performance counter spy access erent cache performs erent operation functional victim concurrently gpu utilize resource input layer intensity contention cache memory functional erent measurable leakage spy performance counter measurement spy hardware performance counter vector performance counter spy kernel data collection classi cation pro ling trace cuda spy kernel execution performance counter reading victim cuda application performs propagation algorithm erent neural network input layer victim input layer neuron sample input summarizes ranked feature classi cation series signal super feature minimum maximum slope average standard deviation skew kurtosis signal classi fold validation identify classi data ranked counter classi cation gpu performance counter feature device memory transaction skew kurtosis  sector skew kurtosis uni cache throughput byte sec skew issue stall skew  kurtosis neural network detection performance FM prec rec NB knn RF report classi cation identify neuron channel attack knn identify neuron accuracy precision demonstrate channel attack cuda application threat scenario cuda spy  victim finally demonstrate threat scenario spy computational stack attack victim graphic operation attack desktop mobile device cuda  instal user privilege reverse engineering colocation conduct reverse engineer gpu scheduler graphic compute application rst launch cuda OpenGL concurrently gpu cuda application launch cuda kernel texture memory load operation loop application thread execute SM cuda kernel iteration operation thread report SM ID thread execute OpenGL launch application probe execution SM ID pixel thread described cuda kernel execution graphic render application frozen cuda kernel terminate concurrency cuda OpenGL application gpu SMs behavior erent multiple cuda application multiple OpenGL application concurrently gpu resource cient launch cuda kernel application graphic render request sub partition dram accumulate cache slice cache session 0D VulnDet channel CCS october toronto canada application previous methodology extract   timing information interleave execution concurrent execution cuda kernel graphic operation gpu cuda kernel achieve grain interleave granularity frame enable sample performance counter memory api frame although graphic graphic attack memory api implement cuda spy demonstrate erent attack performance counter attack strategy launch cuda spy application consecutive cuda kernel thread access texture memory address mapped erent texture cache SM gtx KB texture cache attack optimize cuda kernel leverage inherent gpu parallelism thread warp access unique cache cache access parallel launch cuda kernel spy execution average render erent website spy kernel gpu performance counter although spy performance counter victim execution ect due contention texture cache global memory  contention attack IV website ngerprinting cuda spy performance counter cuda spy application launch consecutive cuda kernel access erent texture cache erent warp simultaneously SM intuition contention cache graphic render spy performance counter kernel nvidia pro ling user accessible victim browsing webpage machine identify ngerprint website erent signature performance counter evaluate attack website alexa sample website classi cation performance counter related global memory cache resource graphic application ect spy texture fetch gpu memory composited rasterize screen information gain feature sort accord importance feature classi summarize series feature capture statistical characteristic min max slope average skew kurtosis independently signal erent machine algorithm NB knn RF fold validation report classi cation model random classi precision classi average precision model correctly classify website excellent accuracy website ngerprinting ranked feature information gain validate capability random machine model prediction accuracy prof feasibility program counter machine model identify website obtain classi cation performance without gpu rasterization option classi cation precision default browser con  without gpu rasterization texture fetch memory ect texture cache memory performance counter gpu composition ranked performance counter feature gpu performance counter feature  sector slope device memory transaction slope  sector slope  sector query slope instruction issue skew kurtosis performance counter website ngerprinting performance precision recall FM prec rec NB knn RF attack mitigation attack mitigate completely remove resource apis memory api performance counter however legitimate application interface tune performance goal weaken signal attacker harder infer sensitive information evaluate reduce leakage rate limit limit rate application memory api memory attack query api per precise  cation memory correspond uploaded gpu reduce allowable rate individual allocation deallocation reduce information signal precision limit limit granularity measurement memory api granularity mbytes report memory allocation granularity allocation precise allocation becomes unknown weaken signal evaluate defense data alexa website retrain machine model defense classi cation precision decrease rate limit request sub partition dram accumulate sector cache slice cache accumulate sector query cache slice cache session 0D VulnDet channel CCS october toronto canada baseline query rate classification precision baseline KB KB KB KB KB granularity classification precision baseline query rate classification precision classi cation precision rate limit granularity limit rate limit MB granularity defense limited precision achieve aggressive rate limit approach reduce precision report available memory screen memory allocation gpu erent website KB decrease granularity bin memory allocation KB KB KB KB precision retrain model decrease decrease granularity KB accuracy signi  decrease combine mention approach KB granularity limit query rate decrease precision almost demonstrate reduce precision mitigation retain information legitimate application performance prevent channel leakage across application evaluate rate limit mitigation abuse memory api implement covert channel investigate performance covert channel without mitigation construct covert channel spy application query memory api repeatedly probe available memory gpu detect memory allocation trojan application allocates constant amount memory gpu without mitigation achievable covert channel bandwidth kbps rate limit mitigation decrease bandwidth bps bps bps respectively defense limit rate granularity measurement mitigate performance counter channel experimentally evaluate although evaluate defense website ngerprinting attack ect attack leakage source related organize discussion related erent related attack covert channel attack gpus related attack erent attack vector propose website ngerprinting capture tra generate via load monitor web trace machine classi cation  schneider utilize browser cache construct timing channel infer victim website  shmatikov   linux memory footprint browser detect website memory footprint user interaction attack victim action website leak browsing timing channel attack browser  principle attack leveraged researcher propose site timing attack web browser estimate origin resource user information leakage site propose timing channel elapse frame javascript api apply CSS lter frame document render becomes related content similarly detect redraw apply svg lter perform  attack  currently browser reduce timer resolution eliminate timing signal attack implement cache prime probe channel javascript recently   channel attack loop attacker enqueues task task schedule  consecutive task reveals existence victim duration task propose channel per core per cpu hardware performance counter limited identify iOS apis attack vector implement app information leakage extract private user information detect instal apps etc attack model propose browser OS cpu hardware erent attack vector attack target gpu hardware extract sensitive information channel classi cation accuracy memory performance counter attack previously session 0D VulnDet channel CCS october toronto canada classi cation accuracy comparison website ngerprinting attack alexa website attack vector accuracy website browser mem attack channel gpu memory api chrome PC attack channel gpu performance counter chrome channel tra analysis tor channel memory footprint via  chrome channel llc safari tor channel loop chrome channel cpu performance counter chrome channel iOS apis safari leftover memory gpu chrome publish website  attack attack machine classify data alexa website attack leftover memory exploit channel leakage although  website browser attack attack accurate leakage keystroke timing ect exploit user authentication mechanism keystroke timing compromise weaken password compromise user privacy propose keystroke interrupt timing attack implement javascript counter resolution timer attack accurate leakage keystroke timing unauthorized user enable implement attack demonstrate gpu channel threaten graphic application computational workload gpu attack publish target gpus software stack cpu propose information leakage due memory recently terminate channel vulnerability clearing memory reallocate erent application channel attack gpus conduct timing attack cuda aes implementation attack exploit  timing address generate erent thread access memory address coalesce refer memory faster  access expensive memory operation gpu implement cryptographic application ect address access thread therefore encryption algorithm opening timing attack encryption infer likely another timing attack aes encryption correlation execution lookup warp con icts generate thread within warp attack spy trigger launch victim kernel contention exploit rst attack cannot channel concurrent application moreover attack exploit cuda victim channel attack aes encryption execute gpu attack physical access gpu WebGL timing apis implement rowhammer attack memory timing channel contiguous physical memory extract application attack totally erent threat model construct covert channel collude cuda application reverse engineering location cuda workload attack neural network application grain timing information covert channel enforce regular contention noisy exploit channel attack due active thread rst explores channel due contention gpu application gpu attack compromise graphic application prior cuda application channel attack propose CPUs memory api attack similarity channel attack  defense mechanism spirit channel defense limit leakage interfere measurement apis CONCLUDING REMARKS explore channel attack application concurrently graphical processing gpu reverse engineer application gpu erent threat scenario identify erent leakage demonstrate series gpu channel attack erent threat scenario graphic computational stack across rst attack implement website ngerprinting gpu memory utilization api gpu performance counter extend attack user activity interact website keyboard accurately render gpu timing keystroke textbox password keystroke timing analysis infer typed user attack cuda spy infer internal structure neural network application rodinia benchmark demonstrate attack dangerous attack substantial threat target sensitive gpu accelerate computational neural network graphic web browser workload attack demonstrate channel vulnerability restrict cpu component within session 0D VulnDet channel CCS october toronto canada leak information contention arises application resource gpus important component secure defense propose mitigation limit rate access apis leak channel information alternatively combination reduce precision information defense substantially reduce  attack attack longer ective balance utility channel leakage application  mitigation