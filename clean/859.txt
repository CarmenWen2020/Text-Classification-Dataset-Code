traditional network intrusion detection NIDSes generally implement vendor proprietary appliance middleboxes versatility flexibility emerge network function virtualization NFV software define networking sdn technology virtualize NIDSes elastically attack traffic variation however elasticity feature decrease detection effectiveness expensive provision propose innovative NIDS architecture vNIDS enable efficient virtualization NIDSes vNIDS address challenge respect effective intrusion detection non monolithic NIDS provision virtualizing NIDSes former challenge address detection minimize overhead virtualized environment static program analysis employ detection vNIDS address latter challenge provision virtual NIDSes microservices employ program slice partition detection logic program execute microservice separately implement prototype vNIDS demonstrate feasibility approach evaluation vNIDS effective intrusion detection efficient provision NIDS virtualization CCS CONCEPTS security privacy intrusion anomaly detection malware mitigation intrusion detection security virtualization security keywords network intrusion detection network function virtualization software define networking introduction network intrusion detection NIDS critical network security function monitor traffic network detect malicious activity security policy violation recently network throughput gbps pace soar throughput network multi thread approach propose NIDSes throughput requirement detect attack addition NIDSes bro deployed NIDS cluster detection task across multiple node however despite usefulness address scalability issue NIDSes multi thread cluster remain limited flexibility regard processing capacity placement location inflexible detect attack significant workload spike happens massive attack DDoS network traffic volume gbps NIDSes accordingly peak traffic load moreover approach inflexible prevail virtualized environment perimeter network virtualized environment become blur fluid application migrate physical machine another within data across multiple data purpose flexible resource management optimization therefore improve NIDSes flexible network intrusion detection urgent relevant network function virtualization NFV software define networking sdn emerge networking paradigm facilitate elastic security approach secure network elastic security feature scalable flexible network security function NFV implement network security function software instance destroyed rapidly handle attack traffic volume variation demand sdn recognize complementary technology NFV dynamically redistribute traffic session sdn CCS october toronto canada flexible placement network security function benefit pioneer devote develop elastic security leverage NFV sdn  flexible elastic DDoS defense psi precise security instrumentation enterprise network  controller elasticity virtual firewall however rare effort improve NIDSes advanced paradigm goal towards elastic security NIDS virtualization overcomes inflexibility NIDS architecture virtualization NIDSes efficient virtualization virtualized NIDSes potential attack detect traditional NIDSes efficient virtualization virtualized NIDSes provision optimally consume minimum resource however attack posture shift per host byte exploit multi stage sophisticated penetration advanced persistent threat decade detection strategy evolve conceptually per signature snort  complex multi information stateful protocol analysis bro  complexity multi information stateful protocol analysis  efficient virtualization NIDSes extremely challenge effective intrusion detection NFV enables flexible provision NIDS multiple instance location sdn dynamically distribute network traffic instance detection logic NIDSes account multiple network identify malicious activity scanner detector maintain counter generate host host scanner however NIDS instance originate scanner maintain counter individually ensure intrusion detection effectiveness NIDS instance detection traditional NIDSes usually provision fix instance fix location static setup mitigates difficulty detection NIDS instance contrast virtualized NIDSes pursue instance flexibly location flexibility feature detection virtualized NIDS instance extremely costly therefore ensure effectiveness intrusion detection virtualized NIDSes becomes challenge traditional NIDSes non monolithic NIDS provision exist virtualization enable elastic security virtualized network function monolithic software virtual machine container however simply provision component virtualized NIDSes within virtual machine container efficient monolithically virtualized NIDS resource component virtual machine monolithically virtualized NIDS allocate resource component monolithically virtualized NIDSes lack ability component individually entire instance component overload provision component customize virtualized NIDS provision monolith however NIDS customization critical resource efficiency advanced network attack defense due complexity detection logic decouple NIDSes non monolithic suitable deployed virtualized environment remains challenge propose novel NIDS architecture vNIDS enables efficient virtualization NIDSes address effective intrusion detection challenge classify detection virtualized NIDSes local global detection minimize detection instance local detection access within instance global detection multiple instance guideline classify detection employ static program analysis NIDS domain specific knowledge automatically achieve detection classification address non monolithic NIDS provision challenge virtualized NIDSes provision microservices decompose NIDSes microservices  detection protocol parse payload detection microservice instantiate independently provision location instance configure execute detection program multiple microservices chain microservice chain flexible detection capability algorithm leverage program slice technique automatically partition detection logic detection logic transparently execute microservices implement prototype vNIDS consists effective intrusion detection module non monolithic NIDS provision module microservices evaluation virtualized NIDS conduct  virtualized NIDS flexible traditional NIDSes regard processing capacity placement location knowledge enable efficient virtualization NIDSes organize motivation overview vNIDS architecture discus management approach ensure detection effectiveness minimize performance overhead decouple monolithic NIDS microservices achieve efficient provision implementation evaluation vNIDS respectively discussion related address respectively finally conclude motivation NFV sdn introduce significant flexibility deployment virtualized NIDSes however flexibility feature potentially compromise detection effectiveness session sdn CCS october toronto canada virtualized NIDSes efficient provision virtualized NIDSes articulate challenge NIDS virtualization detail effective intrusion detection virtualized NIDSes ability instantiate multiple instance virtual machine dynamically destroy instance instance traffic maintains detection traffic deliver instance lack detection virtualized NIDS attack scanner detector usually maintains counter generate host deliver instance maintain counter overlook detector organize detection IP address protocol  distribute traffic ensure detection effectiveness author propose concurrency model NIDSes ensures detection effectiveness carefully distribute network traffic however detector maintain detection complex data structure extra information available traffic distributor usually network device impractical ensure detection effectiveness rely traffic distribution cookie hijack attack goal attacker capture http session cookie victim reuse session shelf  implement attack firefox extension attack accessible fortunately detector developed upon bro handle attack detect cookie hijack attack NIDS cookie reuse user basically detector IP address cookie usage cookie IP address cookie reuse user reduce false positive rate due dynamic IP allocation detector mac address source IP mac address associate cookie inconsistency cookie reuse detection logic cookie deliver instance ensure detection effectiveness however cookie information directly available network device moreover complex data structure query jointly cookie IP mac address traffic distribution harder detailed demonstration difficulty correctly distribute traffic achieve effective detection appendix alternative detection NIDS instance multi thread cluster NIDSes ensure detection effectiveness traditionally NIDSes deployed fix location fix instance invariant configuration significantly mitigates overhead introduce detection within physical machine NIDS instance detector limitation exploit attacker bypass however improve robustness exist detector focus easily exchange information memory cluster rack via cable NIDS instance detection cheaply contrast virtualized NIDSes feature flexibility placement location instance location instance virtualized NIDSes unpredictable overhead enable detection virtualized NIDS instance significant challenge detection virtualized NIDS instance therefore virtualized NIDSes critical minimize detection instance facilitate development virtualized NIDSes systematic analysis classification detection NIDSes minimize detection appeal however rare literature security research community systematic approach automatically analyze classify detection achieve effective intrusion detection minimize detection NIDS cluster enables detection NIDS node cluster however fails guideline analyze classify detection relies user manually detection multi thread NIDS ensures detection effectiveness enable inter thread communication fails analysis detection minimize communication networking research community research direction NFV management direction focus migration instance migration split merge  proposal maintain instance separately runtime without detection impractical achieve effective intrusion detection direction focus instance  former instance via data latter proposes partial reduce performance overhead however fail systematic approach analyze classify non monolithic NIDS provision exist elastic security virtualized network function monolith directly virtual machine container however provision virtualized NIDSes monolithic software significant limitation virtualized environment discus highlight limitation provision virtualized NIDSes monolith identify challenge enable non monolithic provision inefficient dynamic important feature virtualized NIDSes however provision carefully dynamic weakness virtualized NIDSes virtualized NIDSes prone inefficient provision monolith virtualized NIDS instance suspend traffic buffer adversary maliciously traffic volume trigger virtualized NIDS frequently potentially inefficient virtualized NIDS provision session sdn CCS october toronto canada monolith launch instance instance worsens situation likely component virtualized NIDS overload bottleneck component usually overload virtualized NIDS provision monolith virtualized NIDS component overload strategy provision component moreover overwhelm component adversary entire exhaust resource environment inefficient resource allocation monolithic NIDSes resource component NIDSes NIDS consists component component cpu core NIDS provision virtual machine assign cpu core virtual machine physical machine cpu core available NIDS core contrast NIDSes decompose component provision virtual machine separately component NIDS cpu core unlike traditional NIDSes deployed statically virtualized NIDSes allocate deallocate resource frequently achieve flexibility capacity location therefore monolithic provision negative impact virtualized NIDSes traditional difficulty customization customization virtualized NIDSes important circumstance bro resource usage almost linearly analyzer therefore analyzer bro resource specific scenario customization application network context ware detection defense moreover emergence cloudlet fog mobile cord etc virtualized environment increasingly diverse heterogeneous virtualized environment powerful traditional virtualized NIDSes significantly customize environment however customization cannot accomplish easily efficiently monolithic NIDSes rebuild deploy component modify challenge non monolithic provision exist approach partition application deployed separately web application mobile application networking community contribute literature proposes deploy network function however exist deploy security specific function NIDSes non monolithic virtualized environment challenge remain enable non monolithic provision virtualized NIDSes decompose monolithic NIDSes separately deployable decompose NIDSes perform efficiently respect intrusion detection vNIDS controller detection logic program detection logic program partition non monolithic NIDS provision network traffic vNIDS microservices provision header detection microservice data header detection instance effective intrusion detection detection classification management protocol parse microservice data protocol parse instance payload detection microservice data payload detection instance vNIDS architecture enforce detection policy NIDSes provision non monolithic deploy NIDSes transparent user user perspective implement detection logic monolithic NIDSes overview outline vNIDS architecture vNIDS architecture ensure effective intrusion detection traffic distribute instance header information employ static program analysis classify detection virtualized NIDSes global local detection global detection instance ensure instance sufficient detection intrusion detection local detection maintain instance respectively mitigate performance overhead challenge detection classification minimize performance overhead without compromise intrusion effectiveness detection classification address challenge identify local detection detection cannot guaranteed access instance classify global detection achieve non monolithic provision address challenge address identify partition decompose NIDSes microservices header detection protocol parse  detection user implement detection logic detection logic program DLPs execute NIDS NE NE software acquires traffic network reading packet checksum reassemble IP fragment etc executes various DLPs microservice NE execute specific DLPs address session sdn CCS october toronto canada algorithm automatically partition DLP DLPs execute header detection payload detection microservices respectively vNIDS vNIDS demonstrate vNIDS consists vNIDS controller vNIDS microservice instance user interact vNIDS controller microservice instance responsible processing traffic vNIDS controller module vNIDS controller effective intrusion detection module  non monolithic NIDS provision module   implement detection classification classify detection DLPs global local detection detection taxonomy management component smc smc interacts data responsible manage detection instance virtualized NIDSes smc address migration  implement DLP partition algorithm partition DLP header payload DLPs provision component pcc  microservice instance provision installs DLPs instance demand sdn controller update network device accordingly pcc creates destroys instance inform smc update data vNIDS microservices microservices header detection protocol parse payload detection microservices chain microservice chain microservice microservice chain executes detection logic chain microservice attach traffic microservice enables grain customization virtualized NIDSes detection logic composable microservice provision independently addition microservices microservice chain instantiate instance instance instantiate microservice global data provision virtualized NIDSes microservices efficient perspective microservices monolithic NIDSes provision separately therefore microservices faster independently microservices resource instantiate fractional resource monolithic NIDSes microservice modify update without interfere microservices addition microservices instantiate location resource optimization provision demand security context effective intrusion detection demonstrate classify detection concept detection scope achieve effective intrusion detection minimize detection introduce scope detection infer scope detection analyze detection logic program DLP NIDS NE classify detection scope finally address effective intrusion detection challenge NIDS virtualization minimum detection detection scope analysis define scope detection lifetime detection influence detection alive detection cannot difference detection destroyed therefore estimate lifetime variable scope detection variable understand lifetime variable discussion NIDSes generally NIDSes acquire packet network packet accord various detection logic finally destroy packet NIDSes perform detection iterate acquire  procedure acquire destroy procedure iteration packet processing acquisition destroy packet functionality network function therefore implementation functionality relatively stable likely functionality NE processing packet varies detection purpose functionality define NIDS user DLPs NIDSes  user callback function implement register DLPs NIDSes bro user friendly bro script user DLPs DLPs translate compile NE recent demonstrate feasibility DLPs bro intermediate  conduct program analysis lifetime variable imply memory location variable freed freed iteration packet processing freed multiple iteration packet processing detection scope detection variable define per packet scope detection scope  detection per packet detection utilized within iteration packet processing destroyed within iteration packet processing variable compute checksum packet per packet detection per scope detection scope per detection per detection utilized multiple packet therefore persist beyond iteration packet processing however initiate destroyed terminates otherwise memory leak access thesis detection variable byte per detection allocate memory location freed memory leak session sdn CCS october toronto canada multi scope detection scope  detection lifetime multi detection persists beyond duration therefore initiate destroyed terminates variable IP address scan scanner  detection detection classification lifetime variable determines scope detection analysis mainly focus destroy statement variable variable heap allocate malloc destroyed variable stack allocate invoke procedure destroyed return return procedure accord detection scope analysis infer scope detection detection destroyed terminates detection destroyed terminates detection destroyed sometime later trigger detection possibly utilized multiple therefore detection multi scope contrast detection destroyed terminates utilized otherwise refer destroyed runtime error per scope furthermore detection destroyed iteration packet processing detection per packet scope principle task execution sequence destroy statement terminates lifetime variable variable infer scope detection variable detection destroyed destroy statement variable execute destroy statement variable packet destroy statement variable IP reassembly essential functionality NIDS identify variable packet structure bsd linux pointer doubly link bsd linux IP reassembly implementation define execution sequence statement program introduce technique graph cfg analysis dominator node cfg program statement program cfg program depicts execution sequence statement concept dominator propose author concept originally graph theory program optimization algorithm efficiently compute  node   statement cfg imply statement execute definition dominator statement cfg statement cfg entry statement program target statement insight opportunity destroy statement variable execute destroy statement another variable explain detail algorithm infers scope detection compute cfg DLP NE NIDS receives packet packet function pcap recv destroy statement packet therefore packet function entry statement cfg identify packet destroy statement manually code IP tcp reassembly implementation available standard library operating specific NE identify information reuse DLPs compute  packet destroy statement compute  node cfg mature technique graph theory domain scope detection destroy statement variable scope destroy statement variable dominator packet destroy statement variable per packet detection destroy statement variable dominator destroy statement variable per detection destroy statement variable neither dominator packet destroy statement dominator destroy statement variable multi detection infer scope detection analyze cfg DLP NE define per packet per detection local detection define multi detection global detection justify definition approach classify detection scanner DLP appendix ensure effective intrusion detection ensure effective intrusion detection ensure traffic access detection relevant traffic achieve goal distribute traffic instance enable global detection multiple instance advanced network device programmability thanks sdn dynamically redistribute traffic feasible virtualized NIDSes dynamically destroy instance network traffic redistribute instance per granularity leverage sdn dynamically update network device deliver traffic instance actually complexity distribution algorithm distribute traffic ensure detection effectiveness overhead detection enable information exchange instance utilize flexible per capability sdn simplify traffic distribution virtualized NIDSes session sdn CCS october toronto canada intrusion detection effectiveness guaranteed multi detection enable detection instance maintain global detection data   algo logic author  feasibility  data network function classify detection local global detection approach global detection data minimize performance overhead quantify performance overhead evaluation non monolithic NIDS  address challenge decompose virtualized NIDSes microservices logic structure NIDSes detection logic DL address challenge algorithm partition DLPs enforce non monolithic virtualized NIDSes decompose NIDSes microservices logic structure NIDSes typically logic structure NIDSes consists component network protocol stack NPS application protocol parser app detection logic NIDSes firstly acquire validate network traffic NPS component responsible reading packet driver checksum reassemble IP fragment etc implement NE output NPS apps apps parse payload traffic extract semantics conversation endpoint network output apps various DLs purpose reduce development maximize extensibility NPS apps usually reuse DLs NIDS user apps NPS likely user bro network security monitor integrate IP tcp network protocol stack predefined application protocol parser user program detection logic script bro user apps specific program  another  implement library develop NIDSes IP tcp NPS already library user implement apps DLs interface stub therefore generality apps NE DL implement DLPs DL DLs information DL conduct detection task DLs header information detection task monitor implement DL monitor statistic byte per packet per statistic another DL http monitor filter http traffic bro community protocol analyzer dns tunnel trojan DLs header detection protocol parse payload detection header detection payload detection protocol parse payload detection header detection cookie hijack DL scanner DL monitor http monitor DLs microservice chain detection logic DLs realize microservice chain computes statistic traffic generate web server II DLs payload information detection task signature DLs payload packet thesis DLs header payload information detection task cookie hijack DLP cookie payload information IP address header information decompose monolithic NIDSes logic structure NIDSes DL decompose NIDSes microservices header detection protocol parse  detection logic structure NIDSes indicates processing packet processing execute NPS component network function reuse processing microservices processing execute apps parse traffic accord various application protocol specification define processing dedicate microservice protocol parse devote parse traffic accord various application protocol specification processing specify user implement various DLs DLs actually classify DLPs header DLPs implement DLs payload DLPs implement II DLs define header detection microservice devote execute header DLPs payload detection microservice devote execute payload DLPs microservice chain microservices chain microservice chain microservice chain realizes detection task detect specific host scanner cookie reuse microservice chain detection task intermediate generate previous microservice encapsulate traffic encapsulation technique  nsh  etc microservice chain DLs summarize compose microservice chain DLPs DLs realize microservice chain depicts DLs session sdn CCS october toronto canada construct header DLP emit code detection logic program compute slice generate pdg header detection logic program payload detection logic program program dependency graph payload DLP slice header DLP payload DLP switch construct payload DLP emit code DLP partition generate pdg DLP compute payload DLP slice construct header DLP construct  DLP emit code summarize realize microservice chain cookie hijack DL realize protocol parse payload detection microservices scanner DL realize header detection payload detection microservices microservice chain compose flexibly constraint microservice chain compose header detection microservice protocol parse payload detection microservices header microservice payload information protocol parse microservice payload detection microservice latter payload information protocol parse microservice detection logic program partition outline NIDSes decompose microservices however remains challenge partition  DLPs header payload DLPs execute separately header detection  detection microservices algorithm automatically partition user define DLPs utilize program slice technology program slice program analysis technique statement influence variable slice statement influence variable backward slice input program slice program dependency graph pdg variable variable output program slice statement pdg graph vertex statement dependency statement program slice available algorithm identify statement header DLP variable tracked header DLP input header  origin detection program output header DLP statement variable tracked input payload information foreach input   input PI input statement slice foreach input  DSL   ent input   variable tracked header DLP foreach   return implement DLPs utilize  conduct program slice DLPs achieve DLP partition generate pdg conduct static program analysis generate program dependency graph inputted DLP pdg program involves dependency information statement program dependency data dependency dependency usually graph reflect execution sequence statement data dependency reflect declaration reference relationship variable generate pdg program  generate pdg program commercial codesurfer generate pdg program compute slice pdg DLP utilize program slice isolate statement  DL statement insight  DL relies payload information influence input payload information input reference header input header information otherwise contains payload information insight compute program slice input DLP input payload information statement payload DLP slice statement payload DLP slice affected payload information therefore payload detection microservice execute statement construct header DLP isolated statement influence payload information remain statement independent payload information remain statement execute header detection microservice algorithm depicts algorithm identify statement header DLP identify input payload information compute  DLP slice computes statement  DLP session sdn CCS october toronto canada remains packet processing packet statement payload DLP slice execute statement payload DLP slice cannot execute header detection microservice payload information available microservice introduce statement replace statement payload DLP slice statement statement actually interface NE operating packet processing statement trap NE NE handle packet encapsulate metadata sends network metadata information execution interrupt intermediate associate processing packet information label statement multiple serial statement label information variable update packet processing information variable payload DLP algorithm compute variable tracked construct payload DLP already compute payload DLP slice slice construct payload DLP concern construction access intermediate header DLP retrieve execution previous breakpoints concern initialization statement payload DLP slice variable header DLP recall contract statement header DLP encapsulate intermediate variable DLPs variable initialize payload DLP slice concern switch statement initialization statement switch statement label statement header DLP accord label switch statement execution emit code reverse construct pdg header payload DLPs challenge emit code DLPs program analysis reverse procedure emit code compute pdg partition dns tunnel DLP appendix implementation implement prototype vNIDS xen hypervisor vNIDS controller implement dom xen ability monitor manage virtual machine provision xen utilized floodlight source detection program description dns tunnel DLP detects potential dns tunnel dns request frequency packet domain characteristic cookie hijack DLP detects http cookie reuse user trojan DLP combine ssh http ftp traffic detect host infect trojan scanner DLP detects host generate amount host signature generate scanner monitor DLP monitor byte packet average byte per packet information http monitor DLP monitor data transfer http traffic sort host volume http traffic detection program virtualized NIDS sdn controller vswitch construct sdn environment vNIDS controller interacts floodlight achieve per traffic distribution microservices implement click modular router software click networking processing leveraged construct network function vNIDS controller implement DLP partition algorithm detection classification  static program analysis framework DLP partition algorithm detection classification user specifies DLPs DLP partition algorithm partition DLP header payload DLPs instal header detection payload detection microservices respectively detection classification DLPs output DLPs classify detection  developed program interface XL provision management vNIDS microservice instance developed click enable microservices functionality microservice handle message controller integrate  detection instance execute DLPs protocol parser implement http ssh dns ftp protocol parser virtualized NIDS DLPs click various detection purpose description DLPs virtualized NIDS dns tunnel DLP cookie hijack DLP trojan DLP scanner DLP representative DLPs handle traffic application protocol monitor DLP http monitor DLP commonly traffic monitor traffic statistic conduct detection task statistic evaluation evaluate approach goal demonstrate intrusion detection effectiveness vNIDS virtualized NIDS detection session sdn CCS october toronto canada generate bro NIDS multiple traffic trace evaluate performance overhead detection instance scenario without detection detection global detection statistic global local statement evaluate microservice execute monolithically provision NIDSes processing capacity launch microservice monolithically virtualized NIDS demonstrate flexibility vNIDS regard placement location quantify communication overhead virtualized NIDS instance across data geographically distribute demonstrate flexibility vNIDS regard processing capacity vNIDS bro cluster respect processing capacity resource usage network traffic volume data collection attack trace generation conduct  platform various resource experimenter software stack  openstack built environment xen physical server employ intel core CPUs ghz 0Gb network interface dataset consists background traffic label attack traffic background traffic source caida  anonymized internet trace representative internet traffic lbnl  enterprise trace typical traffic trace enterprise network campus network trace campus network gateway label attack traffic generate conduct penetration isolated environment generate attack trace DLPs dns trace contains dns tunnel traffic generate host therefore malicious activity trace  powerful interactive packet manipulation program generate traffic cookie trace contains http traffic cooky reuse multiple host therefore malicious activity trace  extension firefox generate traffic trojan trace contains victim host intrude penetration penetration description basically attacker connects victim ssh attacker downloads zip toolkit website finally attacker escalates privilege uploads zip data file remote ftp server therefore malicious activity trace scanner trace contains traffic host scan host network therefore malicious activity trace nmap generate scan traffic merge trace attack trace merge attack trace background traffic caida attack trace lbnl attack trace campus attack trace merge trace replayed NIDS output attack detect NIDS detection effectiveness vNIDS evaluate detection effectiveness vNIDS evaluation dns tunnel cookie hijack trojan scanner DLPs dataset detection scenario output bro NIDS baseline bro implement version DLPs detection virtualized NIDS DLP multiple instance detection classification component vNIDS controller generate another version detection program enable instance DLP multiple instance vNIDS implement version DLPs without instance directly DLP multiple instance bro NIDS datasets output bro baseline detection dns cookie trojan malicious activity trace malicious activity detect DLPs attack trace malicious activity scanner DLP trace malicious activity detect scanner DLP trace attack trace NIDS datasets traffic distribute instance randomly per granularity malicious activity report NIDS bro NIDS implies detection virtualized NIDS ensure effectiveness vNIDS datasets traffic distribute instance randomly per granularity malicious activity report NIDS implies vNIDS ensure detection effectiveness global detection finally demonstrate limitation NIDSes without detection NIDS traffic distribute instance randomly per granularity degradation detection rate datasets comparison detection rate NIDSes scenario trace caida attack trace lbnl attack trace campus attack trace respectively session sdn CCS october toronto canada dns cookie trojan scanner  activity detection rate bro vNIDS dns cookie trojan scanner  activity detection rate bro vNIDS dns cookie trojan scanner  activity detection rate bro vNIDS detection rate malicious activity bro vNIDS traffic generate attack trace caida attack trace lbnl attack trace campus attack trace examine detection rate degradation scenario detection rate degradation distribute traffic relevant malicious activity instance scanner DLP totally host conduct scan bro NIDS caida attack trace NIDS report host manually checked distribute traffic examine generate host detect host report almost evenly distribute instance instance scan host threshold summary demonstrates vNIDS address effective intrusion detection challenge virtualized NIDSes achieve equivalent output traditional NIDSes detection overhead evaluate overhead detection scenario described vNIDS replayed traffic trace virtualized NIDS scenario processing packet chose processing evaluation metric reflect packet packet NIDS instance cannot packet transmission rate packet dns cookie trojan scanner   packet processing  vNIDS dns cookie trojan scanner   packet processing detection program scenario packet processing reduce vNIDS detection detection program global local dns tunnel DLP cookie hijack DLP trojan DLP scanner DLP monitor DLP http monitor DLP statistic global local statement DLPs packet processing DLP demonstrate detection introduce non trivial performance overhead virtualized NIDSes dns tunnel cookie hijack trojan scanner DLPs vNIDS processing approach detection vNIDS packet processing monitor http monitor DLPs respectively global access frequently vNIDS detection locally instance significantly reduce processing packet demonstrate detection introduce non trivial performance overhead vNIDS enables global detection minimize performance overhead significantly quantify overhead introduce vNIDS evaluate global local statement DLPs average global detection detection addition statement DLP statement execute statement interrupt execution avoid statement execute microservice efficiency evaluate efficiency virtualized NIDSes provision microservices evaluate session sdn CCS october toronto canada dns cookie trojan scanner   processing capacity kpps header parse payload monolithic dns cookie trojan scanner   launch  header parse payload monolithic launch processing capacity header detection protocol parse payload detection monolithic NIDS instance microservice instance launch various detection program instal launch monolith NIDS instance processing capacity microservice instance monolithic NIDS instance launch estimate microservice instance launch instance processing capacity reflect cpu core achieve specific performance requirement processing capacity cpu core achieve specific performance requirement therefore instance resource implement microservices click monolithic NIDS microservices instantiate within instance respect compose microservice chain microservice microservice chain processing microservice evaluation detection program launch microservice instance launch monolithic NIDS instance sum launch microservice instance launch monolithic NIDS instance microservice instance click monolithic NIDS instance execute multiple microservice instance launch faster monolithic NIDS instance faster processing capacity microservice instance monolithic NIDS instance comparison microservice instance achieve processing capacity monolithic NIDS instance microservice instance resource monolithic NIDS instance achieve processing capacity therefore microservice instance provision resource monolithic NIDS instance mirror traffic traditional NIDS application internet site site traditional NIDS instance internet site site virtualized NIDS instance application application application vNIDS rerouted traffic mirror traffic mirror traffic communication traffic virtualized NIDS instance traditional NIDS rerouting traffic application site processing vNIDS provision instance flexibly site application migrate site caida trace campus trace lbnl trace bandwidth kbps kbps kbps kbps mbps mbps mbps vNIDS traditional NIDS bandwidth site site vNIDS traditional NIDS respectively flexibility placement location evaluate flexibility vNIDS regard placement location experimental environment built  involve data site site geographically distribute demonstrate situation application application migrate site site virtualized NIDSes advantage traditional NIDSes due flexibility placement location demonstrates behavior NIDSes originally application site NIDS provision site application application migrate site due resource management optimization purpose traditional NIDSes migrate network traffic relevant application rerouted site site processing contrast vNIDS flexibly provision instance site traffic application concern communication traffic volume quantify virtualized NIDS instance site datasets traffic application application respectively replayed dataset site respectively traditional NIDS traffic replayed site rerouted site evaluate bandwidth rerouting vNIDS traffic replayed site site separately instance correspond site evaluate bandwidth communication instance site session sdn CCS october toronto canada bandwidth site site traditional NIDS vNIDS respectively datasets without synthetic attack trace inject bandwidth vNIDS traditional NIDS campus trace traditional NIDS bandwidth vNIDS vNIDS exchange global detection site traditional NIDS reroute network traffic site another important observation datasets communication bandwidth virtualized NIDS instance surprisingly kbps datasets global detection relatively flexibility processing capacity evaluate flexibility vNIDS regard processing capacity bro cluster campus trace traffic rate  traffic rate gradually 0Gbps throughput bro cluster vNIDS deployed instance bro cluster bro cluster instance estimate dataset roughly handle  traffic contrast vNIDS accord traffic volume exist virtualized NIDS instance overload instance redirect traffic instance depicts observation indicates throughput bro cluster vNIDS steadily increase traffic volume grows traffic volume maximum processing capacity bro cluster throughput bro cluster limited  vNIDS quickly launch instance throughput grows consistently traffic volume depicts provision instance bro cluster vNIDS bro cluster provision static instance virtualized NIDS contrast provision instance accord traffic volume traffic volume grows vNIDS provision increase instance handle traffic traffic volume  bro cluster provision traffic volume exceeds  bro cluster becomes  overload discussion service chain acceleration virtualized NIDS instance virtual machine container incur extra overhead provision NIDSes microservices communication microservices optimize virtualized NIDS prototype regard aspect however acceleration network function service chain widely investigate NFV research community   devote accelerate execution instance ClickOS  focus accelerate packet delivery instance NFP  accelerate execution service chain parallelize execution service adopt technique prototype mitigate elapse sec instance provision provision bro cluster vNIDS elapse sec runtime throughput gbps bro cluster vNIDS runtime throughput vNIDS bro cluster instance vNIDS bro cluster extra overhead introduce NIDS virtualization improve performance virtualized NIDSes applicability vNIDS architecture vNIDS architecture NIDS virtualization NIDSes multi information stateful protocol analysis bro however due complexity mature NIDSes report recent version bro code procedure evolve nearly implement prototype virtualized NIDS demonstrate however limitation approach program analysis program slice technique employ apply exist mature NIDSes recent demonstrate possibility utilize program slice upon bro introduce intermediate assembly representation detection logic program signature NIDSes snort  benefit approach rely classic per signature signature NIDSes detection instance achieve effective detection apply approach enable  provision virtualized worth detection logic partition challenge signature NIDSes signature usually explicitly specify header payload detection logic addition recent trend artificial neural network ann NIDSes gain  NIDS virtualization extend ann NIDS virtualization future usage virtualized NIDSes envision virtualized NIDSes flexibility traditional NIDSes traditional network virtualized environment besides trend compute compute storage resource internet iot device drawn increase research attention security community challenge limited resource diversity session sdn CCS october toronto canada compute environment virtualized NIDSes easily customize microservice composition provision component flexibly location instance flexibility virtualized NIDSes address limited resource diversity compute environment provision header detection microservice compute environment easily customize traffic analysis payload provision payload detection microservice demand flexible capacity compute environment remote flexible location offs performance resource usage elastic security vision effort develop elastic security approach DDoS defense security architecture enterprise network virtual firewall controller NIDS virtualization however effort disjoint security provision network security function microservices feasible achieve efficiency monolithically provision elastic security approach approach specific NIDS virtualization generalize develop network security function leverage microservices paradigm network security microservices envision platform facilitate elastic security approach diverse virtual security function developed microservices related recent research effort NFV sdn technique address inflexibility  limitation traditional network defense mechanism  author address limitation traditional DDoS defense respect flexibility elasticity  utilizes NFV dynamically launch virtual machine location handle DDoS attack traffic leverage sdn redistribute traffic optimizes bandwidth consumption DDoS defense specific DDoS attack NIDSes aim  various attack addition instance exchange information ensure detection effectiveness overlook  author psi propose security architecture enterprise network leverage NFV sdn isolation security function context aware security policy  security policy however specific network security function remains unsolved focus improve specific NIDSes virtualization purpose  controller devote address firewall virtualization  controller analyzes relationship firewall openflow safely firewall migrate virtual firewall instance virtual firewall elastic contrast address challenge NIDS virtualization fundamentally challenge virtual firewall exist NIDSes devote develop scalable architecture NIDSes however flexible architecture respect capacity location NIDSes author propose concurrency model stateful packet inspection enable NIDSes multiple thread parallel scalability approach attempt avoid  communication reduce performance overhead induced detection however approach proposes maintain detection instance separately without demonstrate complex detection logic impractical achieve effective intrusion detection rely traffic distribution NIDS cluster multi core architecture NIDS enable information exchange NIDS node thread achieve effective intrusion detection however fail analysis classification detection NIDS cluster relies user manually detection fundamentally exist NIDS research effort aim develop flexible architecture NIDSes address effective intrusion detection non monolithic NIDS provision cannot address exist NIDS architecture virtualized environment another network research community address management virtualized network function split merge  limited address migration network function elastic maintain instance separately runtime therefore cannot address effective intrusion detection NIDS virtualization  classifies network function reduce overhead migration however classification per packet processing procedure cannot identify per ensures detection effectiveness virtualized NIDSes runtime identify per detection minimize detection  proposes network function instance approach incurs significantly performance overhead apply virtualized NIDSes evaluate author concept local global network function however fail systematic approach automatically distinguish program distinguish local global detection automatically detection logic program program analysis conclusion propose vNIDS NIDS architecture achieve efficient virtualization NIDSes carefully vNIDS address challenge effective intrusion detection non monolithic NIDS provision NIDS virtualization implement prototype vNIDS evaluate various detection logic program traffic trace evaluation demonstrate safety efficiency vNIDS NIDS virtualization