explore security model secure computation datasets assume server employ compute private data user improve efficiency computation establish tradeoff privacy specifically instead server input computation preserve differential privacy input leverage relaxation security model allows protocol leak information access memory formal bound leakage demonstrate leakage useful computation computation histogram pagerank matrix factorization perform graph parallel framework mapreduce pregel benefit relaxation implement protocol securely execute graph parallel computation evaluate performance mention demonstrate marked improvement prior implementation computation CCS CONCEPTS security privacy security requirement formal security model public asymmetric technique keywords secure computation differential privacy graph parallel computation introduction privacy utility internet tradeoff user utility priority citizen contribute amount private data increase entity exchange wider variety service theoretical perspective maintain privacy utility service provider willing compute encrypt data theory secure computation around cryptography secure computation relatively lag advancement data mining machine tradeoff recently gap narrow advancement secure computation tremendous decade implementation compute roughly circuit gate per compute per scatter deployment reference repeatedly recently promising google secure computation advertiser compute securely construct machine classifier mobile user data recent research promise theory technique differential privacy service provider mechanism aggregate user data reasonably combine utility privacy guarantee mechanism whatever aggregate data amount reveals user input minimal chrome browser technique aggregate crash report employ usage information mobile device senator ron  commission evidence  urge secure computation differential privacy employ agency organization seek public policy related insight private data american thread application computation organization data individual user address category explore improvement secure computation dedicate computational server secret user data novel approach attempt improve generic construction tailor instead explore efficiency privacy specifically propose model secure computation information leak session differential privacy CCS october toronto canada computation server leakage proven preserve differential privacy user contribute data technically leakage random function input reveal access memory output function user input modify remove leak memory access computation central secure computation although circuit model computation allows skirt issue circuit data oblivious compute data handle secure ORAM however data circuit ORAM practical requirement motivation approach encrypt cryptographer frequently propose access leakage tradeoff efficiency unfortunately analyze quantify leakage computation access depends heavily specific computation data auxiliary information adversary furthermore recent progress leakage mostly drawn negative conclusion reveal originally hop employ definition differential privacy bound leakage computation allows efficiency privacy tradeoff cryptographer quantify rigorous meaningful precisely leak graph parallel computation propose security relaxation appeal immediately improve efficiency contribution identify highly parallelizable computation amenable privacy efficiency tradeoff propose compute plaintext data framework mapreduce pregel graphlab powergraph successfully enable developer leverage network parallelize CPUs latter mention specifically computation data resides graph node computation proceeds iteratively gathering data incoming node perform computation node data outgo iterative procedure capture important computational task histogram gradient descent rank focus experimental markov random parameter parallelize gibbs sampler entity resolution recently generalize construct framework securely compute graph parallel algorithm nicely parallelizable circuit scatter phase gate connection differential privacy memory access induced computation easily described stage fetch data adjacent node copying data reveal scatter phase computation perform apply phase typically execute circuit memory oblivious reveal access concrete application framework user node graph data adjacent node recommendation graph bipartite node user node item user review label user review item access described reveal exactly item user review observation secure computation obliviously shuffle scatter phase correlation node reveal compute histogram node access node building recommendation reveal item user review item review fortunately histogram canonical differential privacy observation shuffle dummy obscure information sample dummy appropriate distribution within secure computation node remain differentially private contribution related contribution contribution theoretical practical introduce model cryptographer attempt secure computation increasingly datasets protocol leak information compute access memory literature encrypt bound leakage formal definition literature differential privacy novel important concurrent independent propose security relaxation discus asymptotic improvement relaxation introduce enables improve asymptotic complexity target computation factor roughly fully oblivious construction sort network construction gate comparison construction gate session differential privacy CCS october toronto canada depends privacy parameter graph improvement factor bound fully oblivious model exist computation relaxation meaningful suspect improve asymptotic fully oblivious model detail improvement appendix concrete improvement demonstrate asymptotic improvement tangible gain implement demonstrate factor improvement garble gate computation preserve differential privacy parameter previously described factor implementation rely practical oblivious sort gate construction gate perform decryption inside garble circuit avoid implementation oblivious shuffle gate however factor sufficiently dense graph detail construction evaluation performance securely generate distribution amenable efficient implementation garble circuit previously described efficient sample geometric distribution garble circuit geometric distribution immediately useful differential privacy unfortunately standard geometric distribution normalize ruin simplicity circuit construct slightly modify distribution address differential privacy related relevant already generalizes compute graph parallel computation security latter focus solely sparse matrix factorization secure computation graph structure data ensure differential privacy output differentially private leakage access focus mpc networking challenge arise rely computational server assume data contributor involve computation focus hide movement data user preserve privacy structure construct protocol encrypt differential privacy bound leakage access directly inspire approach model leakage secure computation differential privacy define construct differentially private ORAM server access client server model construction secure computation generic protocol generic secure computation differentially private access feasibility protocol asymptotic improvement impractical independent define security notion construct protocol private linkage informally definition input protocol preserve differential privacy definition simulation paradigm important difference security input output cannot apply definition randomize functionality correctness requirement capture simulation paradigm default intentional explore efficiency privacy tradeoff correctness tradeoff difference application private linkage protocol item typically hash bin dummy item hide load bin apply relaxation gain efficiency fully secure protocol dummy item differential privacy statistically hiding bin load maximum load bin probability improvement dummy item fairly weak security specifically setting security parameter suffices important recognize denotes statistical probability user data completely recover typically mpc research application security relaxation significant efficiency improvement guarantee security parameter challenge contribution differential obliviousness client server model asymptotic improvement computation bound fully secure variant algorithm demonstrate relaxation allows bypass impossibility purely theoretical bound gate fully secure graph parallel computation initial version appendix remove oblivious shuffle improve asymptotic complexity initial protocol output random secret server proven secure definition proven secure simulation paradigm session differential privacy CCS october toronto canada  asymptotic improvement concurrent MR secure implementation mapreduce untrusted server adversary access network storage encrypt traffic reduce node cannot corrupt node assume secure hardware sgx hide reduce operation shuffle data mapper secure hardware reducer notion differential privacy finally  protects output reduce computation exponentially distribute output computation notation DEFINITIONS secret denote variable xor secret array public access via public index specify within array specific portion array inclusive user fix upon manner ensure multi multi dimensional vector refer ùëñth vector denote multi define metric multi multi distance graph protocol input data augment graph denote user define data define metric input graph security graph bound distance deg deg denote node define profile graph multiset din deg deg intuitively multi node identifier input graph vertex identifier deg define profile multisets din dout dout deg deg define metric graph profile later security definition rely distance metric security define definition rely metric security define definition appendix input computation multi drawn graph distance metric described define distance input definition graph distance profile distance din din distance definition graph  profile distance sum distance profile profile din din dout dout profile profile distance differential privacy definition definition randomize algorithm input domain multi fix output differentially private probability coin flip mechanism definition describes differential privacy multi denote graph define graph definition randomize algorithm private graph secure computation differentially private access input model definition application beyond  data however notation suggestive computation graph notation consistent later assume computation server entrust compute behalf user sequential identifier user contributes data entrust data server disjoint collection secret input server joint collection latter server neither learns input former server learns subset input learns remain input sum define variant security notion capture scenario disjoint collection corresponds standard secure computation compute contributes input compute pad input maximum hiding sum user input pad input randomize mechanism preserve differential privacy possibly pad session differential privacy CCS october toronto canada computation construction input graph user node graph user input originate node application graph bipartite user node distinct item node user node item node application user node user another joint collection leak node user input hide node disjoint collection protocol hide node application perform gradient descent graph bipartite publicly user movie review viewer joint collection knowledge allows improvement efficiency leverage define secure computation leakage simplicity standard definition semi honest security important leakage ideal reflect adversary access memory leakage function randomize function input additional requirement leakage function proven preserve differential privacy user contribute data ideal adversary corrupts input described denote input compute regardless joint collection disjoint collection denote user input technically joint collection disjoint collection compute submits input ideal functionality unchanged ideal functionality reconstructs user input union input submit computation server disjoint collection reconstruct input secret joint collection ideal functionality output output correlate receives secret function evaluation ideal functionality applies leakage function data output along maximum average input explore option stress allowance differentially private leakage brings gain circuit construction generic secure computation boolean circuit maliciously secure benefit gain detail additionally choice security definition ideal functionality simulator protocol described hybrid access secure ideal functionality implementation replace generic construction secure computation garble circuit rely classic canetti security suffices treat trust functionality definition denote appropriate collection ideal functionality conventionally literature secure computation  denote joint distribution output honest adversary auxiliary input interact hybrid protocol input computational security parameter ideal denote joint distribution output honest output simulator auxiliary input interact ideal functionality input submit security parameter define joint distribution ideal difference simulator sum input input definition functionality protocol compute ideal functionality securely compute hybrid model leakage input security differentially private ppt semi honest non uniform adversary corrupt hybrid model exists ppt nonuniform adversary corrupt ideal model valid input  ideal definition implementation however modify protocol achieves security definition adversary individual input desirable maybe essential disjoint collection model user entrust compute input input previous definition typical definition cryptography assume input joint collection simulator infer input submit ideal functionality simplifies explicitly session differential privacy CCS october toronto canada leak model data outsource hide individual input input definition functionality protocol compute ideal functionality securely compute hybrid model leakage security differentially private ppt semihonest non uniform adversary corrupt hybrid model exists ppt non uniform adversary corrupt ideal model valid input  ideal differentially private output typical secure computation concerned securely compute upon function function ought compute output reveal input beyond scope concern compute output reveal nevertheless output computation preserve differential privacy interestingly specific histogram differentially private output substantially efficient preserve protocol elsewhere minor protocol nevertheless approach computation output server secret desire output unconditionally secure deliver user useful choice obvious reconstruct later inside another secure computation decision driven output compute gradient descent user recommendation recommendation vector user regardless aim utility relaxation concern orthogonal mainly alone privacy versus efficiency standard setting differential privacy employ additional affect accuracy impact output secure computation instead tradeoff efficiency hide memory access fake additional costly oblivious computation malicious security multi computation extend definition model malicious adversary multiparty computation straightforward omit redundant detail similarly stress leverage security relaxation define gain improvement circuit easily extend protocol setting generic protocol secure malicious adversary subtlety address protocol iterative multiple secure computation functionality realize reactive authenticate output verify input computation generically authentication protocol secure computation extend protocol multiparty subtlety construct multiparty oblivious shuffle efficient implement iteration permutation network iteration chooses permutation grows becomes implement oblivious shuffle interestingly recent parallelize multi oblivious shuffle explore direction protocol semi honest greatly simplifies exposition suffices demonstrate advantage security relaxation performance analysis primarily focus counting gate construction analysis allows accurate comparison prior performance framework implement secure computation  protocol version protocol compute histogram due constraint appendix role protocol without distraction graph structure reader helpful skip reading histogram differentially private output appendix detail protocol graph structure data graph parallel framework highly parallelize computation framework mapreduce pregel graphlab others framework powergraph combine feature pregel graphlab powergraph graph parallel abstraction consist sparse graph encodes computation vertex program parallel interact along graph implementation vertex program pregel graphlab disseminate information structure model graph session differential privacy CCS october toronto canada DumGenùëù computation   output  variant DumGenùëù suffices meeting definition variant achieve definition appendix computation model conceptual phase vertex program apply scatter computation proceeds iteration iteration node data incoming applies computation data scatter outgo node cpu assign multiple node cpu apply constitutes bulk computational easily parallelize perform computation securely data secret compute server node apply phase apply phase perform secret protocol secure computation challenge hide movement data scatter phase memory access reveal substantial information user data matrix factorization data indicates user review item data indicates user review data secret review reveal phase vertex data correspond vertex apply phase vertex data data movement perform memory access reveal node exactly reveal user review item observation node node scatter oblivious shuffle phase hide connection node leakage computation reduce histogram node shuffle node histogram canonical differential privacy preserve privacy histogram dummy dummy marked secret flag influence computation apply phase node identifier contribute memory access node model operation input secret denote    secret vertex denote vertex vertex contains vertex xdata output update vertex vertex vertex vertex vertex xdata   vertex vertex vertex vertex vertex scatter vertex vertex vertex  vertex xdata ideal functionality iteration model operation scatter phase detail formal protocol specification ideal functionality powergraph framework denote data graph structure comprise     indicates dummy vertex xdata xdata data multiple adjacent protocol hybrid model assume access ideal functionality DumGenùëù shuffle func initialization phase DumGenùëù functionality generate secret dummy alongside repeatedly shuffle iterative phase DumGenùëù detail later scatter phase shuffle secret data output randomly permute data implement sequential generic secure computation waksman permutation network randomly chooses permutation iterate shuffle opening reveal vertex opening vertex leak information gain efficiency mention previously reveals noisy histogram node fetch appropriate vertex memory without perform expensive oblivious sort operation GraphSC without resort session differential privacy CCS october toronto canada  secure graph parallel computation differentially private access input secret denote     secret vertex denote vertex vertex contains vertex xdata item dummy output vertex initialization  DumGenùëù     shuffle vertex vertex vertex vertex xdata  apply vertex vertex vertex vertex xdata func vertex xdata scatter shuffle vertex vertex vertex  vertex xdata protocol compute iteration model operation secret data protocol realizes ideal functionality described ORAM fetch appropriate node secret data adjacent apply ideal functionality func functionality secret vertex reconstructs data applies specify function data vertex ignore data dummy return secret aggregate vertex data implementation realize ideal functionality garble circuit focus detail described elsewhere DumGenùëù detail ideal functionality DumGenùëù role DumGenùëù generate dummy noisy profile profile din drawn independently shift geometric distribution parameterized probability shift denote distribution define precisely shift ensures negative negligible likely noisy determines access memory cannot accommodate negative access accurately omit access data specifically define shift function fix simply denote functionality iterates vertex identifier sample random remainder array contains blank toss away discover later protocol dummy shuffle DumGenùëù return secret dummy  reader node assign dummy node remain choice efficiency leak histogram define graph node execute  scatter operation impact privacy compute gradient descent matrix factorization reveals review user ensure review item remains differentially private hide user review specific item suffices achieve security input define definition protocol implementation briefly discus achieve definition appendix computation graph bipartite vertex vertex recommendation node vertex dummy node dummy advantage implement matrix factorization implement DumGenùëù intuitively sample flip bias coin flip unbiased coin formally sample previously described probability however coin flip probability slight modification normalize geometric distribution typically advantage distribution easy sample garble circuit reveal blank shuffle reveal dummy privacy shuffle reveal blank reveals dummy session differential privacy CCS october toronto canada inverse normalize introduces finite precision greatly complicates sample circuit geometric distribution precisely easy sample garble circuit however geometric distribution immediately useful preserve differential privacy normalize distribution cannot sample cleanly security analysis mechanism concrete setting parameter probability dependent choice leaf representation multiset therefore modify definition output whenever occurs occurs probability bound implementation securely sample input random xor define random tape flip bias coin random tape coin otherwise compute input gate iterate random tape coin dummy appropriately random tape coin flip dummy recall output fix regardless random tape appropriate dummy item coin flip remain output implementation DumGenùëù hide dependence accounting various relative oblivious shuffle simpler protocol DumGenùëù worth instead perform coin flip inside secure computation distribution implement DumGenùëù without interaction random additive modulo dummy item distribution already worry already fix output worry pad dummy array intuitively correlate sample binomial distribution bias coin unfortunately binomial distribution performs geometric distribution concrete protocol dummy item saving avoid secure computation DumGenùëù easily away shuffle additional item proof security leakage function intuitively leak noisy profile mention previously analyze simpler DumGenùëù algorithm mechanism differential privacy graph profile proceed afterwards leakage function suffices simulate protocol achieve security joint collection model correspond definition extend proof definition harder DumGenùëù algorithm define disjoint collection model differential privacy graph profile remind reader distribution sample define randomize algorithm input output multi definition leakage function din  din denotes indegree profile graph dout denotes profile theorem randomize algorithm approximate differentially private define definition dout model auxiliary information din proof preserve differential privacy algorithm differentially private graph profile mechanism preserve differential privacy completeness modify distribution simpler execute garble circuit proof simplify notation denote graph denote profile denote multi assume without loss generality definition furthermore sample independently therefore dataset achieve session differential privacy CCS october toronto canada desire bound probability recall exactly probability grows negligible function probability derive function demonstrate sample parameter parameter sensitivity distance metric define definition although proof graph standard composition theorem differential privacy graph distance factor probability define distribution calculate allows function fix calculate union bound union bound recall privacy parameter dummy node graph theorem protocol  define securely computes leakage func shuffle DumGenùëù hybrid model accord definition proof sketch strengthen theorem statement security accord definition variant DumGenùëù omit proof intuition proof recall leakage functionality contains  deg assume deg public knowledge simulator joint collection model definition deg simulator construct simulator semi honest ideal functionality output simply xor secret compute output functionality perfectly simulated random binary appropriate  denote random simulate output shuffle functionality  denote random simulate output  denote restriction    define similarly remain message simulate recall array dummy generate DumGenùëù simulate message opening simulator deg random shuffle array array contains identifier exactly deg account deg array remain consistent node output DumGenùëù denote bitstring simulator sends  adversary simulate  simulator creates another random shuffle array  denote output leakage simulator node identifier array remain array denote simulator sends  adversary perfect simulation adversary however output correlate ensure joint distribution adversary honest output simulator submit adversary input vertex trust receives vertex simulation specifically iteration protocol simulate output func simulator vertex trust simulated output function improve asymptotic complexity construction garble gate comparison implementation session differential privacy CCS october toronto canada garble gate previous amount improvement improvement stem ability replace oblivious sort circuit oblivious shuffle circuit security relaxation however practical instead rely asymptotically algorithm oblivious sort reduce runtime therefore security relaxation admits asymptotic improvement computation addition practical improvement described previous indeed remove oblivious shuffle altogether shuffle data locally shuffle permutation access scatter phase protocol remains secure protocol practical protocol func perform decryption encryption garble circuit appendix construction garble gate demonstrate asymptotic improvement construction computation whenever appendix briefly discus security extension achieve definition rely standard composition theorem achieve node privacy instead privacy sequential composition standard security definition secure computation composes sequentially server perform computation data without impact security relaxation later user data computation leakage compound standard composition theorem literature differential privacy apply address privacy ought budget across multiple computation reader iterative protocol additional leakage beyond iteration regenerate dummy item leakage iteration exactly noisy profile leak prior iteration implementation evaluation evaluate implementation propose framework implement OblivGraph  java garble circuit framework performance framework benchmark algorithm evaluate benchmark consist histogram pagerank matrix factorization commonly evaluate highly parallelizable framework scenario assume data secret across non collude provider motivate comparison closest secure parallel graph computation GraphSC implementation OblivGraph framework histogram matrix factorization bipartite graph pagerank non bipartite graph compute bipartite graph definition aim hide node node growth rate dummy linear node independent user definition growth rate dummy linear max user item histogram histogram vertex data vertex counter data existence indicates data matrix factorization matrix factorization vertex user vertex item movie movie recommendation indicates user ranked item rating pagerank pagerank vertex corresponds webpage link webpage vertex data comprises pagerank vertex outgo data correspond contribution source vertex pagerank sink vertex vertex representation scenario vertex identify integer dummy histogram additional counter pagerank pagerank fix representation fractional matrix factorization factorize matrix user movie feature vector vector dimension fix fractional chose consistent GraphSC representation conduct lab testbed amazon aws deployment lab testbed comprises virtual machine dedicate reserve hardware cpu core ghz GB ram vms deployed  cluster physical server interconnect  virtual interface processor processor garbler evaluator processor implement core multi core VM VM compute cluster evaluation metric evaluate impact security relaxation circuit complexity gate runtime counting gate normalize session differential privacy CCS october toronto canada comparison framework circuit independent hardware configuration chosen secure computation implementation however nice concrete runtime evaluation runtime highly affected choice hardware improve processor dedicate hardware aes NI evaluation lan setup synthesize data benchmark parameter GraphSC framework histogram matrix factorization user item node pagerank aws matrix factorization gradient descent movielens dataset contains rating user movie xlarge aws instance northern virginia data circuit complexity execution processor performance without leverage desire parallelization histogram demonstrates gate compute histogram GraphSC OblivGraph framework data data GraphSC outperform GraphSC matrix factorization batch gradient decent generate recommendation model user item outperform GraphSC outperform GraphSC pagerank pagerank framework node outperform GraphSC outperform graph sparse graph comparison slightly favorable computation recall dummy node graph hiding bipartite graph amount node contrast runtime GraphSC grows equivalently increase user item protocol hide distinction data therefore user item non bipartite graph pagerank protocol grows increase singular node increase item matrix factorization decrease node pagerank comparison GraphSC histogram matrix factorization pagerank histogram matrix factorization user pagerank webpage reader extrapolate avoid redundancy amazon aws OblivGraph factorizes movielens recommendation matrix consist rating user movie almost GraphSC compute matrix factorization rating outperform achieve GraphSC processor rating session differential privacy CCS october toronto canada processor sec parallelization matrix factorization computation parallelization illustrates execution significantly reduce parallelization achieve nearly linear speedup computation corresponds user movie computation bottleneck parallelization significantly computation parallelization framework GraphSC gate processor GraphSC framework increase gate amount contrast circuit generate framework constant processor parallelization affect gate OblivGraph operation  processor GraphSC OblivGraph parallelization OblivGraph GraphSC compute matrix factorization comparison cleartext baseline GraphSC execution graphlab ofthe framework graph parallel algorithm text matrix factorization gradient descent input framework demonstrate GraphSC graphlab processor improvement GraphSC estimate secure computation insecure baseline computation graphlab oblivious shuffle oblivious shuffle OblivGraph framework factor overhead  sort GraphSC oblivious shuffle operation waksman network shuffle approximately  waksman network oblivious swap permute input processor gate  shuffle apply scatter operation OblivGraph matrix factorization indicates shuffle waksman switch network input assume however oblivious shuffle arbitrary input improve version waksman network propose waksman arbitrary waksman implement version waksman network implement waksman interpolate precisely arbitrary waksman arbitrary input detail version operation OblivGraph framework understand expensive   procedure model operation gate procedure corresponds matrix factorization user movie rating epsilon iteration OblivGraph framework dominate apply operation computes gradient descent oblivious shuffle parallelization decrease circuit operation version  procedure protocol OblivGraph GraphSC runtime iteration OblivGraph GraphSC matrix factorization dataset movielens user ranked movie conclusion PROBLEMS establish tradeoff privacy efficiency secure computation define security model adversary leakage proven preserve differential privacy session differential privacy CCS october toronto canada leakage allows construct efficient protocol computation compute graph parallel framework mapreduce evaluate impact relaxation performance protocol prior implementation secure computation graph parallel framework demonstrates differentially private leakage useful opportunity efficient protocol protocol applicability precisely computation leakage graph parallel algorithm access memory easily reduce reveal histogram memory access histogram canonical differential privacy literature algorithm likely introduce leakage function differential privacy literature security naturally mechanism