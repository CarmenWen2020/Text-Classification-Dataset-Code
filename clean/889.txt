hybrid fuzzing combine fuzzing concolic execution promising recent performance improvement concolic improvement symbolic emulation unnecessary constraint dominate resource overly allocate trigger bug address hybrid fuzzer intriguer intriguer constraint optimizes symbolic execution knowledge intriguer performs instruction taint analysis execution trace without data transfer instruction mov intriguer reduces execution trace taint instruction access input byte infers input transition optimization intriguer efficiently perform symbolic emulation relevant instruction invoke solver complicate constraint evaluation intriguer outperforms fuzzers intriguer bug  benchmark dataset truth performance discover security bug program report bug CVEs CCS CONCEPTS security privacy software security engineering keywords fuzzing hybrid fuzzing constraint introduction fuzzing automate bug technique iteratively malformed input target program fuzzers fuzzing become popular research topic computer security community challenge coverage fuzzer afl successfully bug program render input deeper execution complex afl effective loose constraint apply random mutation stuck encounter tight constraint magic byte  symbolic concolic execution narrow tight constraint hybrid fuzzer driller combine advantage however promising approach suffers expensive symbolic emulation program recently approach qsym concolic execution hybrid fuzzing mitigate qsym implement instruction symbolic emulation integrate native execution dynamic binary translation leveraged invaluable heuristic prune optimistic performance improvement generation ass improve penetration qsym demonstrate performance benchmark dataset lava synthetic suite artificially injects bug linux utility fuzzers lava benchmarking significant assess truth performance fuzzing disappoint however qsym report bug binary unreachable within limited budget per program program contains bug lava interestingly constraint multibyte constraint  lava serious afl qsym fuzzing  resource complicate program scrutinize performance hybrid fuzzing bug hybrid fuzzer intriguer address symbolic emulation due data transfer instruction input agnostic unnecessary constraint filter dominate resource overly allocate constraint trigger bug trigger arithmetic boundary simultaneously met frequently intriguer constraint optimizes symbolic execution knowledge intriguer performs instruction dynamic taint analysis DTA execution trace without data transfer instruction mov intriguer reduces execution trace taint instruction access input byte advance minimize symbolic emulation intriguer infers session fuzzing application CCS november london united kingdom unknown input format construct transition infer lighten symbolic emulation compose minimize constraint thanks optimization intriguer significantly reduces symbolic emulation target relevant instruction constraint solver minimally effectively intriguer symbolic solver complicate truly complex constraint directly solves uncomplicated constraint moreover intriguer arithmetic boundary without loss generality implement intriguer perform evaluate effectiveness account random fuzzing refer recent guideline directly intriguer qsym vuzzer afl lava truth benchmark program objdump readelf ffmpeg avconv tiffpdf  contribution efficient hybrid fuzzing approach improve performance hybrid fuzzing novel technique trace reduction constraint thorough analysis evaluate technique improve hybrid fuzzing practical effectiveness trigger bug intriguer dig trigger bug intriguer bug lava benchmark program bug intriguer discover bug program ffmpeg OSS fuzz CVEs source research release publication http github com   intriguer organization analyzes hybrid fuzzing intriguer implementation respectively evaluates intriguer benchmark program discus limitation direction explains related concludes appendix contains supplementary motivation motivation thoroughly analyze performance hybrid fuzzing qsym enumerate finding explain detail symbolic emulation qsym elegant approach relax performance bottleneck hybrid fuzzing realize instruction concolic execution along heuristic optimistic prune qsym selectively emulates instruction generate symbolic constraint unlike exist approach emulate instruction taint emulation constraint improve qsym native execution DTA execution lava program program program objdump emulation significantly symbolic emulation management generation modification deletion symbolic expression whenever taint instruction execute overhead desirable reduce qsym symbolic emulation native execution DTA constraint execution program native DTA qsym emulation  lava lava ffmpeg tiffpdf objdump instruction execute program mov instruction instruction qsym execution objdump default timeout per constraint query function timeouts query bfd hash hash bfd hash lookup bfd hash insert emulation taint instruction mov others instruction symbolically emulate unless remove interestingly qsym generate constraint frequently prune mov instruction qsym decision understandable mov instruction input data propagation affect data however significant slowdown symbolic emulation appendix observation avoid emulate mov instruction reduce symbolic emulation taint instruction mov along information concrete infer data unlike approach agnostic optimize symbolic execution  knowledge approach DTA instruction taint offset concrete execution trace mov instruction trace constraint unnecessary constraint dominate unlike program objdump constraint emulation indicates timeouts default timeout solver situation repetitive performance bottleneck prune qsym prune constant instruction shift mask session fuzzing application CCS november london united kingdom struct bfd hash entry bfd hash lookup hash bfd hash hash len compute hash index hash  index  null    hash hash hash   return  listing bfd hash lookup binutils hash lookup hash comparison repeatedly execute complex constraint generate instruction hash taint instruction execute program accord input byte unique instruction remove duplicate instruction input mov instruction already mention instruction however frequently cryptographic function hash function apt generate complex constraint objdump repeatedly timeout context solver timeout unsat qsym objdump elf format input timeout timeout associate hash function objdump qsym waste complex constraint unnecessary hash function execution objdump listing hash compute input accompanies complex constraint therefore hash decision timeout occurs observation code bug data obtain hash compute hash execute hash therefore priority instruction input offset approach DTA execution trace instruction reduce trace access input byte resource overly allocate fuzzers treat tight constraint magic byte complex constraint adopt sophisticated technique resolve hybrid fuzzers qsym symbolic solver constraint fuzzers vuzzer steelix leverage query constraint symbolic execute uncomplicated comparison input loose tight  constraint portion without solver int int  char  unsigned int width height unsigned char data unsigned char header  header  width  height width height error width height exit width height data unsigned char malloc data standard input int  data listing trigger bug fuzzers difficulty trigger bug execute buggy code program analysis technique byte however constraint truly complex overly consume resource approach treat loose constraint multibyte constraint  narrow arithmetic constraint immediately portion uncomplicated program directly without query symbolic solver symbolic lava binary actually uncomplicated immediately instruction DTA input information infer advance approach classify complicate constraint uncomplicated constraint systematically symbolic solver complicate constraint trigger bug listing code trigger bug trigger integer overflow inputted integer overflow occurs width height width height instance input width height satisfies overflow bug earlier smart fuzzing session fuzzing application CCS november london united kingdom fuzzing listing simulate code fuzzer byte execution trigger bug fuzzer trigger execution trigger median median intriguer afl vuzzer fail fail fail fail qsym fail fail fail fail beyond boundary int integer overflow malloc function allocates memory data buffer overflow fuzzers assume explore code per fuzzer budget unlimited execution per intriguer execution trigger bug however afl unfortunately qsym vuzzer fail height width bug trigger however unlikely coincidentally fuzzing loop probability coincident demonstrates buggy code execute actual bug trigger unknown approach treat arithmetic boundary constraint overview illustrates overview intriguer architecture hybrid fuzzer intriguer constraint optimizes symbolic execution information intriguer target binary program input aim discover offset generate explore fuzzing intriguer performs instruction taint target program execution input coverage fuzzer unlike exist approach advance constraint intriguer significantly reduces execution trace execution trace data transfer instruction mov remove taint instruction access input byte furthermore intriguer infers input chunk byte offset discard infer instruction construct transition infer lighten symbolic emulation compose minimize constraint thanks infer intriguer invoke smt solver truly complicate constraint directly uncomplicated constraint tight multi byte comparison arithmetic intriguer remarkably reduce unnecessary incur symbolic emulation relevant bug constraint explains detail approach overview intriguer architecture structure trace cfg format untainted trace address opcode operand operand offset offset operand offset offset integer integer offset integer integer trace reduction code portion bfd hash hash hash binutils trace input offset FF due loop intriguer remove omit execution trace reduction intriguer performs instruction taint data analysis enables grain trace reduction constraint insight exist concolic execution waste symbolic emulation instruction unlikely relevant bug intriguer reduces execution trace remove taint instruction irrelevant constraint stage execution trace DTA intriguer execution monitor execution trace briefly TL format specify trace target program execution input  fuzzer execution monitor trace instruction mov instruction trace mov data trace instruction precede succeed mov mention TL taint instruction consists instruction address opcode operand input byte offset concrete trace configure cmp instruction memory address  repeatedly operand byte session fuzzing application CCS november london united kingdom inference consecutive offset infer index offset indicates consecutive offset underlined offset offset taint consecutive untainted intriguer distinguish operand register memory immediate considers taint taint input byte offset xff instruction granularity intriguer performs  taint qsym intrigue instruction trace reduction dissimilar qsym suppress unnecessary symbolic emulation constraint generation redundant instruction listing symbolic execution instruction addition shift exclusive comparison assignment repeatedly execute access input byte byte offset loop however location bug data hash executes hash compute hash therefore reduce taint instruction access input byte repetitive instruction feature occurs perform frequent operation encryption decryption encode decode compression decompression trace reduction algorithm straightforward described subsection trace reduction intriguer procedure reduce trace briefly RL TL TL trace instruction address generate sublist   unique offset reduction offset exceeds predefined threshold reduction trace remove remain  trace reduction procedure simply RL union   reduce taint instruction thanks advance intriguer offset efficiently procedure intriguer offset operand offset  offset exceed threshold indicates correspond instruction trace instruction respectively TL static void  swap  bfd  void src void dst MS handle overflow  suppose zero PE image format    image PE  int    ext    ext   int  listing multi operand objdump access input byte offset beyond threshold intriguer basically threshold concerned procedure remove intriguer remove trace taint instruction access input instead reduces evaluate intriguer discover bug within amount furthermore intriguer prioritizes RL later TL generate fuzzing loop intriguer gradually increase threshold generate inference transition aim discover offset quickly intriguer infers unknown input format directly mutate input discard infer instruction subsequently intriguer construct transition optimize symbolic emulation without memory address register information constraint compose minimize relevant constraint essential proceed constraint mutate inference define consecutive input byte directly instruction intriguer infers unknown input format leverage offset information execution trace RL operand taint consecutive offset input data RL consecutive offset grouped infer infer offset chunk denote infer information assigns instruction inference intriguer definition intriguer ignores byte inference hybrid fuzzing role concolic execution complex constraint intriguer decides infer multi byte offset discard trace byte offset inference decision conduct reduction execution trace constraint generation fuzzer happily handle byte constraint byte offset technique popularly protocol file format reverse engineering particularly  intriguer uniquely infers multi operand session fuzzing application CCS november london united kingdom constraint RL reduce TL FL derive RL infer transition construct FL depth uncomplicated constraint generate depth complicate constraint generate node comparison instruction constraint generate explore node arithmetic instruction constraint beyond integer boundary generate int max non consecutive ignore consecutive byte offset infer byte offset ignore program multiple occasionally combine operand multi operand unlikely infer exist technique trace multi operand indicates offset seemingly consecutive associate bug false negative trace multi operand infer context intriguer extends inference technique infer combination multiple consecutive offset multi operand listing multi operand combine operand processing PE file objdump  ext   ext  file assign byte upper byte  int  respectively assign  ext  trace recall execution trace TL significantly reduce RL RL inference intriguer trace RL accord infer discard irrelevant infer trace reconfigured  trace FL obviously subset FL trace operand FL derive accord inference trace addr discard whereas addr addr duplicate FL trace belong multiple distinct multiple operand multi operand transition intriguer transition FL infer goal construct transition optimize symbolic emulation constraint explain detail procedure transition node source input node trace instruction trace reproduce precedent node node taint reproduce transition generate FL intriguer creates node tag source input appends trace FL node intriguer node tag instruction cmp addr operand regard trace operand trace intriguer operand node exists node trace append node node trace intriguer node operand however node trace  intriguer trace operand node multiple node intriguer selects recently append node insight construction taint operand reproducible source input instruction properly execution monitor concolic execution DTA tag memory address register affected input data propagate instruction unlike taint tag taint however concolic execution symbolic tag contains symbolic expression memory address register symbolic expression accord input data obtain information memory address register whenever instruction perform operation onto memory register data transfer instruction instruction incur tag propagation sub exist concolic executor qsym sage generate manage symbolic expression taint memory register incur performance overhead intriguer significantly reduces overhead construct transition concrete infer symbolic tag memory address register insight data infer analyze concrete session fuzzing application CCS november london united kingdom int int infer int infer  mov eax  ptr ebp load eax mov  ptr ebp eax assign mov edx  ptr ebp load mov eax  ptr ebp load  eax edx  cmp eax listing benefit symbolic emulation remove mov instruction memory address register capture execution trace generate infers data execution trace code listing TL regard generate execution trace operand cmp directly input operation exist manipulate symbolic tag assembly code listing precisely cmp ebp eax eax however incurs overhead instead intriguer decision without incur overhead instruction memory register TL concrete intriguer instruction cmp trace input obtain infer intriguer generates constraint traverse transition uncomplicated constraint depth complicate constraint depth  constraint intriguer smt solver complicate constraint directly solves uncomplicated constraint uncomplicated constraint intriguer directly tight multi byte constraint magic byte thanks infer approach detail constraint subsection finally address constraint concolic execution intriguer optimistic qsym sophisticated manipulate transition node  node another node  intriguer appends node node  intriguer generate simpler constraint addition generate constraint constraint constraint unlike optimistic qsym constraint intriguer effectively distinct node node node trace TL transition input listing TL transition TL respectively TL mov instruction transition generate without mov instruction constraint construct transition infer intriguer performs constraint intriguer conduct symbolic emulation instruction symbolic solver similarly exist traverse transition complicate arithmetic instruction achieve efficiency effectiveness intriguer invokes solver complicate truly complex constraint intriguer traverse transition obtains mutation infer explain detail symbolic emulation constraint symbolic emulation explain distinctive strategy intriguer optimize symbolic emulation intriguer symbolically emulates instruction relevant aim flip virtue transition unlike approach exist concolic executor symbolically emulate taint instruction unaware instruction constraint intriguer performs concolic execution execution trace relevant instruction reduce trace transition symbolic emulation intriguer symbolically emulate  instruction remove earlier phase data without mov instruction trace infer intriguer symbolic expression render efficiency reduces emulation mov instruction listing code assembly code byte integer mov instruction execute instruction cmp instruction TL transition generate inputting respectively emulate node generate symbolic expression cmp instruction without emulate mov instruction intriguer performs symbolic emulation unlike previous approach manipulate symbolic expression byte intriguer operates symbolic expression regard infer instance exist generate symbolic expression byte eax session fuzzing application CCS november london united kingdom intriguer manipulates symbolic expression infer byte intriguer benefit strategy regard performance symbolic emulation constraint thanks infer transition intriguer discover offset quickly generate unlike concolic execution intriguer generates constraint arithmetic instruction mul sub trigger integer bug comparison instruction cmp intuition arithmetic boundary dealt constraint addition intriguer classifies complicate uncomplicated constraint accord node constitute constraint transition unlike exist intriguer selectively smt solver symbolic emulation truly complex constraint directly obtains satisfy uncomplicated constraint loose tight multibyte constraint uncomplicated constraint dominate constraint program intriguer efficiently minimize smt solver constraint generate traverse transition intriguer traverse node generates constraint node target instruction comparison instruction boundary arithmetic instruction arithmetic boundary constraint generate symbolically emulate instruction exist symbolic execution intriguer emulates instruction node node contains target instruction node node relevant node meaning relevant instruction target instruction constraint generate accord target instruction comparison arithmetic constraint generate node cmp mul instruction comparison instruction intriguer performs constraint comparison related instruction previous concolic execution node cmp instruction addr cmp addr cmp intriguer generates fourth constraint node uncomplicated constraint directly depth truly negates comparison complicate constraint smt solver depth simultaneously met arithmetic instruction arithmetic boundary likely incur overflow  arithmetic instruction encounter arithmetic instruction intriguer constraint int max overflow  respectively node node respectively mul instruction addr instruction cmp    sub xor instruction mul   sub addr mul intriguer generates constraint node complicate constraint smt solver depth arithmetic comparison simultaneously met advanced fuzzers qsym cannot arithmetic boundary constraint effectively intriguer uncomplicated constraint intriguer decides uncomplicated constraint accord depth transition depth immediately resolve uncomplicated constraint without query constraint solver intriguer loose constraint multibyte constraint  uncomplicated constraint exceptionally handle narrow constraint thanks trace intriguer DTA execution monitor directly intriguer regard taint operand variable uncontrollable untainted operand constant intriguer variable constant comparison instruction performs uncomplicated arithmetic operation equality comparison multibyte constraint monotonous arithmetic constraint inequality comparison loose constraint narrow constraint exceptionally intriguer obtain boundary inner accordingly satisfy constraint intriguer resolve without query constraint solver moreover intriguer directly uncomplicated arithmetic constraint int max without smt solver implementation implement execution monitor  code DTA pin core intriguer code constraint boundary trigger prototype implementation finally implement fuzzer afl intriguer easily OS environment pin afl version linux macOS implementation instruction instruction  extend intriguer instruction essential bug discovery intriguer source mutation strategy perform evaluation evaluate intriguer research RQ performance intriguer bug detection capability RQ code coverage increase intriguer RQ intriguer trace reduction successfully remove execution trace without unintentionally remove code RQ effective transition intriguer RQ intriguer instrumentation arithmetic boundary discover trigger bug fuzzers session fuzzing application CCS november london united kingdom program data program function objdump empty elf empty elf readelf elf ffmpeg avconv tiffpdf tiff  tar data byte description empty null byte elf generate gcc compiler generate microsoft visual minimize ffmpeg tiff avg minimize afl cmin tar  research evaluation setup account random fuzzing recent guideline evaluate fuzz perform multiple trial statistical evaluate longer timeouts evaluate bug performance truth benchmark suite program program lava benchmark program program gnu binutils ffmpeg libav libtiff  evaluation lava dataset widely evaluation comparison recent fuzzers vuzzer qsym binary lava involve various multi byte constraint buggy code concern overfitting important involve program ffmpeg evaluation gnu binutils program binary program file library ffmpeg libav software library audio medium file libtiff software library tiff image  library writes archive recent commercial fuzzers program bug discovery summarizes program data fuzzers baseline fuzzers evaluation qsym vuzzer benchmark lava qsym afl bug discovery program code coverage lava intriguer vuzzer core qsym core hybrid fuzzing program intriguer qsym perform hybrid fuzzing executable format elf file binary compile code visual studio file sample video site video frame reduce http sample video com bug detect fuzzers intriguer report median per fuzzer maximum intriguer detect bug bug reader refer comparison program bug median max  qsym   qsym  uniq  cumulative bug detect lava default extend solid median shade around confidence interval empty bug detect  non parametric intriguer qsym structure ffmpeg tiff file fuzz corpus repository reduce file file afl cmin tar file  summarizes data platform configuration conduct machine 0GHz xeon cpu 4GB ram ubuntu conform comparison configuration lava dataset fuzzed default particularly program fuzzed additionally perform fuzzing ffmpeg RQ bug discovery capability RQ following fuzzers bug identify lava distinct bug discover program distinct bug perform triage unique patch program patch otherwise manually deduplication triage stack lava dataset performance intriguer vuzzer taint fuzzer qsym concolic hybrid fuzzer perform fuzzing fuzzer buggy program lava fuzzing program lava dataset respectively target program http github com  fuzz corpus session fuzzing application CCS november london united kingdom bug intriguer qsym afl respectively program parenthesis bug fuzzers program afl qsym intriguer objdump empty elf empty elf readelf elf ffmpeg avconv tiffpdf tiff  tar artificial bug lava author median bug identify fuzzer maximum lava benchmark intriguer outperforms fuzzers qsym vuzzer difficulty bug hidden multibyte constraint within budget vuzzer detect bug qsym detect bug respectively contrary intriguer bug within budget intriguer bug intriguer  bug although intriguer identify bug bug depicts bug intriguer qsym respectively intriguer bug qsym bug bug qsym bug succeed bug within indicates constraint approach intriguer effective discover bug shorter program program intriguer bug afl indicates intriguer solves complicate constraint coverage fuzzer afl creates consequently bug addition qsym intriguer bug objdump readelf ffmpeg tiffpdf indicates intriguer discover bug efficiently perform trace reduction constraint optimize symbolic emulation avconv qsym bug intriguer respectively unique bug due qsym slightly prioritization strategy recently generate priority lava program additional  bug identify intriguer bug discover program project bug report ID fix binutils bound binutils integer overflow binutils integer overflow binutils bound binutils integer overflow binutils integer overflow binutils bound binutils bound binutils integer overflow binutils bound binutils null pointer dereference binutils null pointer dereference binutils integer overflow binutils bound binutils bound binutils negative param binutils bound binutils bound binutils bound binutils bound binutils float exception binutils bound ffmpeg bound mail libav integer overflow libav null pointer dereference libav bound libav bound libav bound libav null pointer dereference libav bound libav null pointer dereference libav bound libav bound libav bound libav bound libav bound libav bound libav bound libav bound libav bound libav bound libav float exception libtiff bound perform fuzz ffmpeg contains program intriguer discover bug ffmpeg qsym bug intriguer ffmpeg latent ffmpeg release december ffmpeg program fuzzers OSS fuzz intensively previous fuzzers session fuzzing application CCS november london united kingdom fuzzers fuzzing median along statistical intriguer afl qsym program fuzzer factor objdump empty intriguer qsym afl elf intriguer qsym afl intriguer qsym afl empty intriguer qsym afl elf intriguer qsym afl readelf elf intriguer qsym afl ffmpeg intriguer qsym afl avconv intriguer qsym afl tiffpdf tiff intriguer qsym afl  tar intriguer qsym afl pas highly constrain exist concolic execution fuzzers correspond code longer execution contrary intriguer execution efficiently trace reduction constraint preserve effectiveness concolic approach bug newly discover report intriguer intriguer bug binutils libav respectively bug ffmpeg libtiff observation intriguer detects bug lava program positively RQ RQ code coverage RQ examine ability fuzzers intriguer qsym afl discover fuzzing  coverage newly discover fuzzing coverage discover execute afl generate intriguer qsym respectively execution shade solid emulation intriguer faster qsym coverage execution trace execution reduce intriguer trace reduction threshold program trace objdump readelf ffmpeg avconv tiffpdf threshold none none program factor correspond fuzzer intriguer factor correspond fuzzer intriguer intriguer qsym achieve coverage afl constraint solver solves constraint fuzzers hybrid fuzzing discover newer objdump empty format intriguer achieve coverage qsym coverage objdump readelf tiffpdf ffmpeg intriguer outperform qsym afl generate afl evaluate execution coverage intriguer qsym respectively timeout intriguer qsym execution consists emulation depict intriguer outperforms qsym regard emulation enable faster execution coverage program ffmpeg significantly reduce execution achieve coverage observation intriguer increase code coverage target program positively RQ RQ execution trace reduction evaluate effectiveness trace reduction execution trace execution threshold trace reduction program session fuzzing application CCS november london united kingdom objdump readelf tiffpdf ffmpeg newly discover program execution fuzzing intriguer qsym afl respectively intriguer qsym intriguer afl newly bug intriguer performs fuzzing without trace reduction program median bug objdump readelf ffmpeg avconv tiffpdf various threshold skip none trace reduction comparison threshold trace execution maximally reduce execution decrease avconv ffmpeg interestingly ffmpeg relatively percentage reduction execution trace ffmpeg objdump rapid reduction execution rate objdump ffmpeg frequently encode decode operation access input offset objdump related complex constraint successfully remove trace reduction effective bug reduction important trace perform fuzzing without trace reduction fuzzing trace reduction significantly bug fuzzing without trace reduction tiffpdf regard false negative bug trace reduction program instead newer bug within amount observation intriguer successfully reduces execution false negative observation positively RQ RQ transition intriguer performs constraint construct transition FL infer evaluate effectiveness construct transition perform fuzz constraint generation query constraint execution intriguer directly file without transition constraint query shade arithmetic constraint solid constraint constraint reduce transition without construct latter node construction phase unavailable trace FL overly constraint addition unlike transition already involve FL constraint generate accord instead constraint generate node execute node constraint possibly construct transition infer avoid latter bug discover intriguer without transition fuzzing transition discovers significantly program bug objdump readelf avconv without amount constraint symbolic solver execution intriguer without fuzzing execution monitor core shade directly file query transition enable tune constraint uncomplicated depth complicate depth constraint complicate constraint symbolic solver construct transition perform constraint shorter reduce query consequently discover bug constraint comparison instruction significantly reduce arithmetic constraint session fuzzing application CCS november london united kingdom newly bug intriguer performs fuzzing without transition program median bug     objdump readelf ffmpeg avconv tiffpdf transition bug query imply transition successfully suppress  constraint addition transition effectively tune constraint observation transition significantly increase bug discover observation positively RQ RQ arithmetic boundary instrumentation bug discover intriguer without arithmetic boundary instrumentation fuzzing arithmetic boundary instrumentation objdump readelf avconv tiffpdf intriguer discover bug bug objdump readelf tiffpdf bug avconv qsym afl objdump bug arithmetic boundary instrumentation due generate within budget enhance fuzzing bug arithmetic boundary instrumentation reverse unlikely bug arithmetic boundary instrumentation trigger trigger specific bug trigger met moreover arithmetic boundary instrumentation intriguer observation arithmetic boundary instrumentation significantly increase discover  bug observation positively RQ discussion aim mutation hybrid fuzzer efficient effective trigger  bug trigger bug optimization infer knowledge symbolic execution constraint concept tune dynamic taint analysis newly bug intriguer performs fuzzing without arithmetic boundary instrumentation program median bug abi abi abi abi objdump readelf ffmpeg avconv tiffpdf minimal constraint solver truly complex constraint discus issue regard approach intriguer introduce constraint efficiently derives mutation reduce execution trace infer however intriguer perform inference inspect offset execution trace association data structure input infer execution trace intriguer construct transition infer multiple location infer multiple offset therefore construct multiple repetition perform constraint efficiently intriguer  inference identify FL addition identify infer structure mutation strategy specific intriguer reduces execution trace emulate portion instruction repeatedly access input byte concern regard trace reduction excessively reduce trace affect constraint important although already examine performance address false negative concern concern gradually increase threshold trace reduction fuzzer longer perform hybrid fuzzing moreover context sensitivity  qsym context sensitivity intriguer perform trace reduction program context stack instruction repeatedly access narrow input byte execution bottleneck instruction repetitively access input specific offset address reduce execution trace instruction offset program context intriguer currently instruction instruction although challenge instruction implement frequently instruction actual program execution intriguer reproducible trace symbolic execution transition minimize session fuzzing application CCS november london united kingdom  instruction incomplete constraint furthermore intriguer implementation effort instruction concolic execution symbolic execution handler data transfer instruction intriguer DTA taint related due instruction implement handler instruction highly complex instruction precisely accordingly DTA susceptible   instruction incur unnecessary operation wasteful constraint query constraint therefore intriguer address construct transition described moreover execution monitor intriguer already developed taint however taint regard operand due taint execution trace incorrect trace remove transition trace remain limitation future finally DTA data indirectly propagate indirect conditional data directly propagate data transfer instruction unlikely reproduce indirectly propagate data input trace indirect propagation transition version intriguer dependency indirect conditional limitation future related coverage fuzzing fuzzing sophisticated program analysis technique coverage fuzzers afl attempt increase code coverage prioritize input likely explore guidance coverage information program execution aflfast leverage markov model technique prioritize frequency aflgo minimizes distance target collafl attempt accurate coverage information aflfast aflgo prioritize perform fuzzing longer priority however lack penetration fuzzers stuck encounter multibyte constraint resolve program analysis technique frequently vuzzer adopt application aware fuzzing technique leverage static dynamic program analysis vuzzer credit immediate treatment multibyte constraint taint static analysis incurs false positive magic byte detection valid initial input steelix leverage static analysis binary instrumentation coverage information comparison progress information fuzzer multibyte comparison steelix efficient approach taint analysis effective detect execution complex constraint  combine byte taint inference technique constraint approach however limited constraint explain unlike approach intriguer query constraint solver truly complex constraint fuzz remove complex constraint program transformation symbolic execution filter false positive negates target program binary rewrite reproduce bug program however fuzz filter false positive transform program symbolic analysis incur program explosion intriguer vuzzer steelix  fuzz report lava benchmark dataset hybrid fuzzing combine fuzzing concolic execution promising direction address penetration fuzzing hybrid fuzzing concept introduce adopt fuzzers driller fuzzing selective concolic execution complementary manner explore deeper selectively invoke concolic execution fuzzing stuck however previous hybrid fuzzers driller concolic executor susceptible explosion qsym performance bottleneck symbolic emulation significantly improve performance hybrid fuzzing develop scalable concolic execution instruction emulation various heuristic optimistic prune qsym remarkable implementation CONCLUSIONS intriguer efficient effective bug trigger bug program intriguer systematic analysis hybrid fuzzing constraint unlike exist hybrid fuzzers driller qsym intriguer minimally solver truly complex constraint significantly reduces symbolic emulation overhead unlike program analysis technique vuzzer steelix intriguer leverage constraint solver complex constraint practical performance constraint render opportunity hybrid fuzzing evaluation intriguer outperform qsym vuzzer lava  importantly bug program bug ffmpeg OSS fuzz CVEs