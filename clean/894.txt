propose constant protocol multi computation boolean circuit secure arbitrary malicious corruption extend generalize recent namely efficient preprocessing phase allows generate authenticate information information distributively construct authenticate garble circuit evaluate protocol improves upon asymptotically concretely validate via demonstrate efficiency scalability protocol efficiency computation lan protocol evaluate aes roughly improvement prior computation protocol improves upon prior implement factor improvement magnitude computation scalability successfully execute protocol compute aes across demonstration secure computation date CCS CONCEPTS theory computation cryptographic protocol keywords multi computation secure computation garble circuit introduction secure multi computation mpc allows jointly perform distribute computation ensure correctness privacy input mpc protocol classify various native computation asymptotic complexity per mpc protocol boolean circuit secure arbitrary malicious corruption resp computational resp statistical security parameter circuit depth circuit adversarial behavior tolerate regard protocol typically compute boolean circuit arithmetic circuit although model equivalent expressive computational task comparison wise operation etc arithmetic circuit correspond boolean circuit cumbersome regard security protocol tolerate semi honest adversary assume prescribed protocol additional information transcript execution contrast malicious model assumption behavior corrupt finally protocol assume honest majority secure strictly corrupt others secure corruption honest focus mpc protocol tolerate malicious corruption previous implementation mpc protocol model rely variant secret paradigm introduce goldreich micali wigderson technique maintain invariant linear secret circuit along sort authentication information linear gate circuit xor locally non linear operation mult handle interact maintain desire invariant notable protocol framework SPDZ arithmetic circuit protocol boolean circuit although approach protocol reasonable efficiency lan suffers inherent drawback complexity linear depth circuit evaluate significant impact overall efficiency protocol geographically session multi computation CCS october november dallas TX usa setup   online PC lan PC lan PC worldwide PC worldwide performance protocol millisecond statistical security setting detail PC lan computation lan PC lan computation lan PC worldwide computation wan across PC worldwide computation wan across communication latency dominates execution communication latency europe around dedicate network amazon EC evaluate sha circuit depth linear protocol forth interaction counting perform local cryptographic operation transmit data constant protocol tolerate malicious corruption approach propose beaver micali  linear secure computation protocol compute garble circuit function evaluate garble circuit constant additional circuit compute garble depth independent overall constant although recent explore approach investigation remain largely theoretical overall protocol approach asymptotically  protocol mention prior implementation constant mpc semi honest contribution significant towards practical mpc tolerate unbounded malicious corruption propose constant protocol multi computation boolean circuit secure protocol extends generalizes recent specifically optimize multi version  protocol enable generate authenticate information preprocessing phase generalize protocol information distributively construct authenticate garble circuit evaluate overview entire protocol detail remainder protocol improves upon asymptotically concretely allows implementation constant mpc protocol malicious security demonstrate protocol efficient scalable efficiency computation lan protocol securely evaluate aes roughly improvement prior computation protocol improves upon prior implement factor scalability successfully execute protocol compute aes across knowledge demonstration secure computation date weaker adversarial model performance protocol report execution phase setup generate information computation multiple possibly function OT perform phase function independent preprocessing execution protocol computation upper bound circuit compute function dependent preprocessing function compute input online phase evaluate function input related implementation mpc protocol implementation generic mpc assume semi honest adversary corrupt minority  boolean circuit   arithmetic circuit implementation protocol handle arbitrary corrupt semi honest ben latter constant implementation mpc protocol handle malicious attacker developed SPDZ subsequent improvement greatly improve efficiency earlier exist implementation mpc tolerate malicious attacker complexity linear depth circuit another specifically target computation implementation   auction recent tolerate semi honest behavior tolerate malicious attacker corrupt constant mpc technique building constant mpc protocol various setting session multi computation CCS october november dallas TX usa  ben implement approach semi honest researcher propose approach without implementation possibly implementation complex concrete efficiency protocol   protocol   propose protocol underlie cryptographic primitive malicious corruption optimization BMR approach malicious efficiency protocol relevant prior concurrent independent propose implement constant mpc protocol malicious security corruption complexity online function dependent preprocessing phase protocol underlie technique function independent processing phase efficient asymptotically concretely faster detailed comparison notation PRELIMINARIES denote computational statistical security parameter respectively denote equality denote assignment circuit gate gate input output gate denote denote input index denote output index gate denote output index circuit assume output denote corrupt denote honest protocol operates distributively construct garble circuit evaluate circuit evaluator authenticate information theoretic message authentication code MACs authenticate efficient secure computation extend multiparty player global mac authenticate random mac tag denote authenticate authenticate detail xor homomorphic authenticate locally compute authenticate computes computes locally negate computes computes aBit denote ideal functionality distributes authenticate detail discus efficient instantiation functionality representation assumes global mac explicitly subscript representation  denote mac tag authenticate construction generate authenticate generate xor distribute authenticate denote collection authenticate  denote ideal functionality distributes authenticate detail discus efficient instantiation functionality definition security standard notion standalone security unbounded malicious protocol described PA receives output however modify protocol standard technique arbitrary output protocol achieve notion secure computation designate abort overview protocol protocol FPre hybrid model FPre generates authenticate random refer triple protocol authenticate distributively construct authenticate garble circuit evaluate remainder protocol detail discus efficiently realize FPre authenticate garble recently propose maliciously secure protocol computation version FPre explain extend multiparty briefly protocol partially presentation protocol standard garble circuit associate random mask PA actual circuit evaluate masked circuit evaluator namely PB associate label PA PB learns hash function model random oracle garble gate session multi computation CCS october november dallas TX usa functionality FPre honest upon init sample upon random sample random random authenticate sends upon MACs valid computes random authenticate sends corrupt corrupt randomness compute functionality global query adversary multi preprocessing functionality truth garble PB evaluates decrypt garble label obtain secure malicious perform selective failure attack however prevent secret garble PA PB PA sends garble gate PB xor evaluate garble circuit informally ensures privacy malicious PA PA garble circuit independent PB input however PA affect correctness flip masked  MACs PA masked garble PA garble PB garble PB verify mac PA masked learns limit PA PB abort independently PB actual input finally efficiently secret recall PA insight ifs authenticate PB PA locally compute information mac PB already garble observation extension multiparty trivial extend protocol multiparty challenge corrupt adversary cannot information honest input attempt adopt jointly compute garble circuit remain evaluate however garblers corrupt guarantee correctness garble circuit generate correctness random subset garble circuit imposes overhead avoid additional involve garble circuit generation BMR protocol however protocol BMR maliciously secure corruption somewhat homomorphic encryption SPDZ multiplication subprotocols per gate relatively inefficient aim instead simpler  functionality explain multiparty   style SPDZ style exist literature mainly flavor authenticate construct  style secret authenticates namely SPDZ style global mac secret mac protocol construct arithmetic circuit representation apply binary circuit exist prefer SPDZ style  style SPDZ style efficient indeed exist investigate protocol multi  SPDZ style session multi computation CCS october november dallas TX usa PA garble PB garble construction authenticate garble gate observation SPDZ style triple although efficient interactive mpc protocol suitable construct constant mpc protocol SPDZ style global directly related garble circuit contrary  style protocol already described essentially  style construct construct garble label authenticate global difference xor indeed ahead protocol content garble circuit authentication information plus garble output label garbler protocol discussion protocol garblers maintain garble label remain evaluator garbler garble label however gate garbler permute garble output label secretly label permute garbler garbler permute garble output label garblers garble encrypts garble input label mask authenticate similarly evaluator decrypts garble garblers recompute garble output label garbler intuitively ensures cannot garble evaluate gate scheme intuition protocol proceed detail directly proof protocol mpc protocol FPre hybrid model protocol phase circuit pre scan phase obtains private global mac FPre generate authenticate mask circuit garble phase compute garble garbler garblers compute distribute garble circuit circuit input processing input corresponds input reveal mask broadcast masked input garblers upon masked input correspond evaluator circuit evaluation evaluator evaluate circuit topological detail garble label garbler obtain label output gate label construct circuit output processing evaluator masked output garblers reveal output mask circuit evaluator unmask efficiently   efficient instantiation FPre multi version  protocol previous related protocol multi  rely ensure correctness another bucketing ensure privacy communication computation complexity per triple bucket detail furthermore protocol output SPDZ style compatible protocol protocol introduce  style furthermore complexity per triple constant protocol feature distribute triple protocol correctness triple without adversary perform selective failure attack triple probability leakage easily eliminate bucketing protocol discus multi authenticate authenticate introduce discus triple generation protocol allows adversary perform selective failure attack protocol eliminates attack bucketing protocol previous detailed prior protocol relies  functionality random global session multi computation CCS october november dallas TX usa protocol  input function independent phase function dependent phase circuit function input processing phase function independent phase sends init FPre sends sends random FPre sends random function dependent phase gate computes computes gate sends FPre sends computes locally computes locally computes sends protocol clarity preserve across execution allows adversary global query honest global feature preserve ideal functionality suppress explicit mention description global query security probability attacker correctly honest polynomially query negligible multi authenticate protocol generate multi authenticate functionality aBit aBit authenticate functionality naive realize aBit authenticate protocol secure malicious potentially inconsistent aBit protocol perform additional ensure consistent recent malicious OT extension protocol perform random linear combination malicious inconsistent pas probability reveal linear relationship eliminate leakage random authenticate compute checked later discard linear relationship protocol described proof session multi computation CCS october november dallas TX usa protocol  continued input processing sends valid computes broadcast sends sends valid computes sends sends circuit evaluation evaluates circuit topological gate underlie computes computes computes valid abort fails computes output processing sends valid computes protocol continued clarity functionality aBit honest receives input random random computes sends sends sends corrupt corrupt output protocol functionality multi authenticate multi authenticate aim construct protocol allows multiple obtain authenticate secret straightforward aBit execution compute random however adversary perform attack malicious potentially global mac execution aBit authenticate global mac authenticate global mac attack authenticate observation authenticate protocol already ensure compute multiple authenticate across authenticate therefore insecure attempt authenticate consistent global mac protocol aBit protocol random aBit sends aBit functionality perform sample random computes  broadcast computes  computes  sends validity return protocol aBit instantiate aBit authenticate consistent global mac vice versa secure construction compute multi authenticate described secure partially tuples consistency global mac malicious inconsistent probability partially detail player role prover consistent remain player role verifier prover prover consistent authenticate across xor homomorphic  global session multi computation CCS october november dallas TX usa functionality  honest receives input random random authenticate sends detail random random multi authenticate sends sends corrupt corrupt output protocol functionality multi authenticate protocol  protocol random compute multi authenticate aBit sends perform par computes commitment com com com broadcast commitment broadcast computes broadcast performs consistency computes   fails abort return protocol  instantiate  potentially protocol commit adversary inconsistent global commit later protocol adversary mac inconsistent global fourth probability therefore adversary probability detail protocol proof functionality  honest random sends upon random sends corrupt corrupt output protocol authenticate functionality protocol  protocol  obtain random computes lsb lsb sends computes lsb obtains protocol  instantiate  authenticate triple introduce protocol leaky authenticate triple another described functionality  introduce compute triple unauthenticated potentially inconsistent output authenticate unauthenticated detail protocol proof multi leaky authenticate triple discus protocol leaky authenticate triple  obtain random  obtain random compute reveal computes perform additional ensure correctness relationship adversary cheat inconsistent however allows adversary perform selective failure attack relationship checked adversary flip session multi computation CCS october november dallas TX usa functionality  honest random corrupt corrupt randomness adversary perform linear combination iri incorrect output fail terminates otherwise proceeds normal adversary perform linear combination incorrect output fail terminates otherwise proceeds normal functionality  leaky triple protocol proceed normal however abort adversary challenge leakage aim functionality limit leakage otherwise bucketing leakage adversary attack mention abstract attack adversary perform linear adversary coefficient inner coefficient zero phase differs substantially exist efficient protocol ensures correctness triple abort allows malicious specific information probability protocol construct evaluate multi protocol instead distributively construct interestingly distributively construct inspire protocol distributively construct garble protocol vulnerable selective failure attack description protocol correctness unforgeability protocol crucial security proof protocol correctness protocol protocol compute triple abort honest protocol  triple computation  obtains random authenticate  obtain random authenticate sends  computes broadcast computes triple computes computes sends computes  computes  simultaneously broadcast broadcasting commitment decommitment commitment abort protocol  therefore non zero logic session multi computation CCS october november dallas TX usa unforgeability incorrect triple cannot pas lemma define output   define output  broadcast protocol abort negligible probability denote honest compute define assume logic derive contradiction obtain additive error  therefore  adversary padding  happens negligible probability theorem assume adversary corrupt protocol model random oracle securely instantiates  functionality   hybrid model private input simulation proof straightforward lemma detail proof multi authenticate triple protocol leaky authenticate triple straightforward obtain non leaky authenticate triple combine protocol detail protocol evaluation implementation detail implement protocol  toolkit framework publicly available fully explore performance characteristic protocol evaluate implementation setting functionality  honest random corrupt corrupt randomness functionality  generate triple protocol  protocol  obtains randomly partition bucket bucket combine leaky ands non leaky combine leaky ands namely reveal MACs checked iterate leaky combine protocol  instantiate  amazon EC wan detail circuit aes sha sha circuit evaluation lan machine amazon EC perform wan machine amazon EC location computation prefix subset machine PC virginia  california session multi computation CCS october november dallas TX usa lan wan breakdown evaluate aes lan wan worldwide PC within PC within america PC within america europe PC within america europe asia PC sydney PC respectively amazon EC available lan evaluate amazon EC global across totally machine xlarge core GB ram network bandwidth within 0Gbps bandwidth across depends location machine extend  garble longer straightforward manner implementation broadcast abort protocol goldwasser  achieves notion secure computation abort variance lan slightly variance wan report lan average wan average average due lengthy performance circuit evaluate commonly benchmark circuit protocol aes sha sha information circuit plot aes network performance breakdown described detailed timing circuit appendix performance computation extremely efficient evaluate circuit aes online lan slowdown PC PC roughly slowdown wan network latency latency setup almost independent mainly due parallelization implementation allows OT mpc emphasize wan mpc knowledge conduct mpc semi honest mpc protocol wan network within europe ninth asia communication europe detail evaluation global focus performance protocol summarize protocol increase lan corrupt compute aes performance computation aes comparable performance malicious computation optimization improvement flourish function dependent phase increase faster function independent phase function independent phase symmetric communication load evenly distribute function dependent phase garblers garble circuit evaluator bandwidth evaluator becomes bottleneck therefore session multi computation CCS october november dallas TX usa lan wan setup   online setup   online detailed timing millisecond lan worldwide PC perform PC perform others interpret similarly function dependent phase almost worldwide machine totally machine performance slightly compute aes around setup due latency comparison malicious mpc aes evaluate aes malicious security corruption  report online online offline around respectively protocol evaluate aes online online improvement online phase improvement improvement hardware difference BMR style protocol SPDZ construct BMR style protocol protocol implement communication complexity incorporate various optimization gate SPDZ multiplication triple recent advance SPDZ triple generation generate SPDZ triple communication  per therefore communication per gate per  protocol gate triple FPre protocol communication roughly  per therefore improvement protocol optimize BMR protocol improvement computation perform improvement ben protocol secure semihonest model BMR surprisingly protocol maliciously secure semi honest security implementation roughly performance protocol hardware online online ben timing millisecond protocol semi honest maliciously secure comparison sha hardware configuration bandwidth consumption maximum amount data function independent phase megabyte MB calculate complexity protocol online performance protocol roughly malicious PC protocol honest majority propose efficient protocol malicious PC honest majority protocol garble circuit therefore communication complexity estimate protocol communication however interestingly online protocol roughly protocol evaluation evaluation  due protocol garble circuit garblers protocol malicious PC protocol honest majority protocol communication overhead protocol communication per circuit addition security guarantee dishonest majority protocol latency circuit sha depth protocol throughput session multi computation CCS october november dallas TX usa setup   online aes KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB sha KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB KB MB MB KB MB communication complexity protocol bandwidth evaluate aes sha maximum amount data concurrent protocol benchmarked hardware network configuration bandwidth usage protocol function dependent online however due improve preprocessing protocol function independent  aes evaluation protocol communication function independent phase dominates overall therefore translates computation communication complexity evaluate communication complexity protocol report maximum amount data obtain implementation slightly calculate due implementation detail summarize  aes sha communication per grows linearly addition communication setup phase online phase communication dominate function independent phase