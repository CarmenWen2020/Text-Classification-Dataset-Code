blockchain application ownership digital asset blockchains vulnerable network attack crucial adopt secure blockchains production belly blockchain RBBC secure blockchain throughput geodistributed consensus participant drastically revisit byzantine fault tolerant bft blockchains contribution define byzantine con  superblock propose instead adopt leaderless censorship resistance guarantee commit correctly request transaction introduce sharded verification limit signature verification without hamper security evaluate RBBC vms across attack although performance affected attack RBBC throughput increase consensus node achieves tps throughput latency vms hence improve latency throughput closest competitor introduction unlike classic replicate machine RSM blockchains aim offering peer peer model geodistributed participant replicate requester balance issue cryptographically transaction permissionless blockchains node participate consensus protocol permissioned blockchains pre node participate blockchain likely permissioned permissioned node byzantine fault tolerant bft consensus service permissionless client access ethereum permission exchange proof stake blockchains naturally building upon bft consensus limitation blockchains cannot throughput deployed node verify transaction computationally intensive communication intensive propose belly blockchain RBBC secure blockchain geodistributed consensus node previous blockchains assume synchrony bound message delay performance node increase contrast RBBC achieves scalability throughput consensus node increase consensus node ideal decentralize representative governance consensus node independent  around request node RBBC secure prevents spending resolve conflict fork asynchrony resilience optimal node execute consecutive consensus instance byzantine consensus protocol RBBC optimal node model RBBC reconfiguration consensus node bribed achieve scalability RBBC balance totally transaction assign distinct proposer verifier node leaderless balance communication load multiple proposer hence avoid congestion slowdown induced responsive node oppose classic byzantine consensus protocol rely leader pro transaction RBBC multiple proposer combine distinct transaction superblock byzantine consensus commit transaction per consensus instance verification sharding balance computation load across verifier oppose exist blockchains node typically verify transaction transaction signature verify verifier conduct extensive secure blockchain virtual machine vms normal adversarial attack implement RBBC code traditional leader PBFT optimization  RBBC geodistributed vms  core vms vcpus absence leader without coin yield fold improvement latency throughput closest competitor  scalable blockchain peak throughput elastico obtain node MB within omniledger achieves tps tolerate adversarial byte transaction tps adversarial rapidchain peak tps byte transaction achieve latency tps throughput algorand MB KB MB KB latency impact attack performance negligible throughput mir leader stall another tps proposer byte payload durability peak tps byte payload throughput RBBC peak tps byte transaction varies tps coalition attack tps max latency IV scalable blockchain peak throughput elastico obtain node MB within omniledger achieves tps tolerate adversarial byte transaction tps adversarial rapidchain peak tps byte transaction achieve latency tps throughput algorand MB KB MB KB latency impact attack performance negligible throughput mir leader stall another tps proposer byte payload durability peak tps byte payload throughput RBBC peak tps byte transaction varies tps coalition attack tps max latency IV RBBC guarantee fairness RBBC ensures censorship resistance correctly request transaction eventually commit hence imply blockchain liveness correctly transaction offering extra guarantee requester consequence censorship resistance mitigate series plague blockchains anomaly unfairness  transaction consequence   appeal application transaction non conflict valid RBBC exchange commit transaction lightweight leader implementation without increase latency background II goal assumption overview RBBC IV implementation RBBC secure scalable blockchain VI evaluate RBBC machine attack blockchains vii conclude proof disclosure II background threat model previous byzantine fault tolerant blockchains expose series threat summarize spending motivation traditional consensus guarantee replica unique index uniqueness avoids fork otherwise attacker coin  blockchains probabilistic guarantee although scalability depict probability consensus fails grows upon blockchain deterministic consensus ensures consensus node node byzantine traditional definition however unnecessarily limit scalability blockchain blockchains propose indeed leader proposal eventually propose request node network interface bottleneck contrast RBBC solves byzantine consensus proposal theorem fork communication asynchronous incorrectly transaction superblock combine propose variant consensus instead combine proposal decision agreement core ACS interactive consistency IC vector consensus VC propose blockchain however compatible propose transaction per correctly transaction distinct conflict concurrent withdraw asset account insufficient balance introduce byzantine consensus ensures node extract correctly non conflict transaction proposal allows RBBC combine propose valid superblock performance increase unfairness discard invalid transaction cope byzantine request anomaly unfairness  requester unable commit trans action due invalid transaction commit influential consortium blockchains hyperledger fabric suffers censorship acknowledge author spamming attack orderer service invalid transaction optimize version  mitigates issue faster however none version tolerate malicious failure denial service attack byzantine fault tolerant service suffers issue cannot detect transaction valid RBBC request transaction achieve censorship resistance theorem network attack blockchains assume synchrony message deliver bound drawback vulnerability various attack elastico rapidchain omniledger achieve scalability sharding consensus sharding DAGs confuse verification sharding RBBC transaction obtains RBBC access instead traverse tip dag sharded blockchain however transaction atomic withdrawal decouple credit blockchains assume synchrony partially synchronous consensus algorithm ouroboros tps assumes synchrony praos version evaluation RBBC assumes partial synchrony tolerate unknown delay adversarial scheduler recent blockchains avoid completely synchrony assumption consensus probabilistically stellar probabilistic leader election  byzantine fault tolerance HBBFT blockchain combine proposal ACS building upon asynchronous binary byzantine consensus algorithm terminate adversarial scheduler vii HBBFT costly node creates erasure cod message signature verifies signature  improve HBBFT transaction respectively byte byte upon consensus algorithm consensus alternative relax assumption message risk increase overhead RBBC assume scheduler faulty leader avoid associate randomization coin synchrony various assume partial synchrony unfortunately rely leader revert costly recovery mechanism failure tendermint variant PBFT cannot beyond node SBFT threshold signature reduce communication complexity PBFT evaluate network blockchain peak tps byzcoin relies PBFT multicast reduce message bitcoin NG relies leader unfortunately leaderless consensus algorithm remain uninterrupted despite failure incomplete impractical others cannot easily extend verification sharding implement blockchain slowdown hotstuff replicate machine RSM reduce leader load digest request implementation exchange asymptotically RBBC per commit transaction client transaction consensus participant mir  cast protocol upon sharded verification although formally potentially byzantine consensus SBC def leverage multiple proposer difference upon PBFT leader consensus algorithm combine PBFT proposer leader mir leader primary mir mir verification sharding fail due faulty replica reverts verification RBBC faulty node verification sharding verification priority assign replica faster replica simply verify behalf faulty replica throughput hotstuff mir leader faulty report separately hotstuff mir fledge blockchain RBBC ensures durability VI tolerates failure proposal error consensus algorithm particularly complex monolithic blockchains consensus handle conflict transaction node erroneous consensus algorithm dramatic loss algorithm suffer error formally specify specification machine checked erroneous error already affected blockchains randomize consensus  non terminate attempt limit blockchain error theorem provers however proof algorithm contrast consensus algorithm RBBC formally parameter model achieve complex  consensus protocol decomposes reliable broadcast binary consensus ben reduction reliable broadcast verify model binary consensus formally verify model thanks additional decomposition although verification correctness model checker compiler etc considerably reduces error goal assumption goal implement blockchain performance consensus participant treat verify cryptographically totally amount transaction requester communication model classic resilience optimal model partial synchrony permissioned distribute consist node permission replica requester requester equivalent client distribute compute literature differs notion client ethereum documentation replica node maintain blockchain whereas requester simply client request balance issue transaction permissioned node permission role proposer verifier proposer request transaction proposes periodically batch whereas verifier transaction signature procedure verification permissioned model appeal assign permission proof stake ethereum revoke permission upon misbehavior LLB transaction model transaction transaction tuple transaction non  signature transfer amount account account implement utxo explain IV ssl handshake certificate within secure channel blockchain account coin proposal transaction proposal transaction transaction provision balance valid provision signature owner transaction valid transaction valid non conflict subset transaction cumulatively withdraw account balance transaction  execution sharded node genesis blockchain indicates initial balance address account identity permissioned node identify public permissioned node pre traditional consortium blockchains instead periodically avoid bribery attack failure model failure model byzantine faulty node fail arbitrarily refer non faulty node specifically permissioned node faulty node permissioned node verifier contains node proposer contains proposer easily ensure requester replica permissioned node faulty ensure termination assume communication partially synchronous exists unknown global stabilization message deliver fix amount guarantee censorship resistant theorem despite byzantine node assumption sequential transaction request requester issue invalid transaction conflict transaction bound request rate rate transaction mempool memory pool proposer rate transaction propose proposer assumption applies node guarantee transaction eventually treat cannot guarantee transaction issue byzantine requester treat trans action invalid assumption precludes denial service dos attack proposer request within bound memory reduce likelihood dos attack empirically RBBC treat volume transaction vii goal goal implement censorship resistance replicate machine RSM censorship resistance transaction issue properly requester commit hence prevent censorship II replicate machine refer totally transaction blockchain genesis transaction provision linearizable variant bft consensus enumerable valid subset union propose definition byzantine consensus assume node proposes enumerable transaction proposal byzantine consensus SBC satisfied SBC termination node eventually decides transaction SBC agreement node transaction SBC validity transaction valid non conflict subset union propose SBC  node propose identical valid non conflict transaction subset SBC termination SBC agreement byzantine consensus definition variant SBC validity transaction propose byzantine proposer valid non conflict SBC validity inspire external validity decision valid propose however SBC validity cannot combination union strict subset propose SBC decision SBC  prevents trivial algorithm output empty IV overview RBBC architecture novelty RBBC verification leverage computational resource consensus leverage communication commit transaction bandwidth becomes limited architecture depicts architecture RBBC feature memory pool mempool byzantine consensus cryptography component reconciliation component blockchain superblocks byzantine consensus verify variant reliable broadcast reduction  consensus binary consensus binary consensus reconciliation protocol superblock multiple transaction proposer extract transaction mempool propose  consensus reduce computation verification guarantee unspent transaction output utxo transaction correctly verification cpu intensive notably affect performance vii verification sharded verifier verify distinct transaction without reduce security twofold improves performance reduces verifier computational load reduce per verifier computational load verifier increase confirm empirically vii verification sharding verification load verifier node byzantine transaction signature checked verifier node node unanimous signature node checked signature successfully transaction correctly node byzantine transaction verify response compute depict transaction primary verifier eagerly verify transaction secondary verifier lazily verify transaction hence sum verifier RBBC architecture verification sharding superblock optimization leverage bandwidth environment geodistributed proposer likely transaction requester vicinity instead discard others RBBC combine transaction propose distinct proposer unique superblock improve performance quantify vii RBBC decides upon multiple propose transaction illustrate scalability consensus participant transaction propose oppose blockchains traditional byzantine consensus transaction RBBC transaction typical communication complexity byzantine consensus per commit transaction RBBC theorem instead without suffer leader bottleneck leader approach limit communication complexity rely threshold encryption goal avoid cryptography limit cpu load illustrate RBBC achieves optimization depicts permissioned node propose transaction actually superblock union transaction propose optimization transaction grows linearly transaction propose constant proposer theorem transaction executable conflict reconciliation procedure assign role node explain node role assign transaction deterministic function consensus instance permissioned node identifier node role primary secondary proposer transaction determinism imply predictability proposer directly deterministically anonymously consensus node recent voting protocol  although achieve censorship resistance requester request proposer requester identify proposer responsible propose transaction consensus executes deterministic function input source account return identifier node primary proposer transaction guarantee transaction propose despite faulty primary pro  secondary proposer distinct deterministically proposer transaction guarantee propose proposer theorem proposer however proposer latency whereas proposer increase throughput vii transaction verify proposer mapped primary  additional secondary  primary  verify upon reception signature node proposer verifier verification return becomes signature additional verification identify majority identical response signature secondary  node distinct primary  verify primary verifier faulty verifier waste cpu vii implementation detail implementation RBBC requester request balance account transaction proposer communication exchange ssl encrypt channel expose permissioned node json rpc requester typical message consensus protocol proposer permissioned node role primary verifier pri ver secondary verifier sec ver proposer submit proposer node input utxo transaction byte requester provision exist already conflict transaction mempool mempool return requester proposer balance account input return UTXOs requester performs operation contact proposer notification device securely consult without blockchain guarantee integrity ledger  lag recover replica update index blockchain normal consensus execution depicts normal consensus execution requester sends request proposer simplicity actually requester typically request proposer parallel proposer executes request requester computes source transaction retrieve mapped proposer verifier sends request transaction primary proposer verifier upon reception mempool verify primary verifier propose proposer selects mempool trans action primary proposer decrease append chain transaction batch propose consensus init message permissioned node proposer empty mempool consensus empty proposal receives non empty proposal another node guarantee sufficiently participant echo upon reception permissioned node broadcast digest proposal echo message upon reception echo message verifier proposal verify already request message proposer upon reception message node broadcast message already message exchange due optimization upon reception message proposal node proposal array indexed sender input correspond binary consensus instance proposal binary consensus instance reconciliation combine superblock valid transaction proposal binary consensus output execution complexity scalability execution RBBC differs previous commit securely transaction within message delay thanks optimization verifier verify reception message broadcast message node message message delay inputting binary consensus instance directly proposer transaction proposal binary consensus  superblock complexity throughput RBBC compute theorem verify reliable broadcast proposer exchange verify proposal secpk elliptic curve digital signature algorithm ECDSA verification reliable broadcast orig  communication abstraction exchange init echo message message deliver proposer eventually deliver proposer verify variant reliable broadcast verification function verify broadcast message proposer broadcast init message proposal upon reception digest broadcast echo message sha digest bandwidth proposal transaction vii upon reception echo message verification proposal primary verifier later secondary verification  integer index invalid transaction proposal append message broadcast digest correspond proposal  distinct node transaction valid upon reception message deliver contains valid transaction proof verify reliable broadcast ensures reliable broadcast valid discard invalid relies proposer verifier guarantee message  theorem superblock modify ben  rabin reduction multi consensus binary consensus byzantine consensus replace reliable broadcast verify reliable broadcast invoke reconciliation superblock non conflict provision transaction indicates array prop background concurrent reliable broadcast proposal deliver verify reliable broadcast proposes binary consensus instance proposer proposes remain binary consensus instance timer expires consensus return timer increase transaction mempool potentially binary consensus instance proceed parallel invocation non decision binary consensus instance constitute bitmask apply potentially decidable proposal although array verify proposal across node  node guaranteed lemma identical due agreement binary consensus proposal index guaranteed reliable broadcast eventually deliver proposer proposer proposal deliver index proposer obtains proposal apply bitmask unselected proposal mempool later reconciliation superblock  decidable proposal proposer extract deterministically transaction proposal transaction non conflict provision superblock utxo model easily ensure trans action provision non conflict  conflict executes transaction return false UTXOs consumes exist otherwise return sake fairness proposer proposer traverse proposal index mod index mod index superblock blockchain prevents proposer index propose transaction superblock priority transaction proposer vii computation reconciliation negligible signature verification binary consensus binary consensus deterministically chose binary consensus  resilience optimal optimal recently verify model replica refines estimate input consensus across consecutive decides invokes broadcast primitive deliver dedicate variable broadcast reliable broadcast binary optimize piggyback verify reliable broadcast replica per coordinator broadcasting others prioritize converge decision hence RBBC leaderless multiple coordinator binary aux message replica sufficiently aux sufficiently corresponds parity otherwise val parity another complexity bin propose decides within network stabilizes message deliver bound optimal hence  propose constant additive factor message delay complexity asymptotically optimal moreover propose resilience optimal tolerates failure communication complexity PBFT  decides transaction execution exchange per commit transaction batch recall communication complexity PBFT message contains previous broadcast node VI correctness analysis explain RBBC implement secure scalable blockchain disallows spending implement RSM exclusively valid non conflict transaction reliable storage theo rem finally explain throughput node theorem RBBC censorship resistance theorem proof defer appendix correctness avoid fork spending RBBC executes consensus instance totally sequence instance superblock transaction contains replica implement blockchain RBBC guarantee RSM discard incorrectly transaction eagerly conflict transaction lazily theorem replicate machine RBBC replica sequence commit transaction valid non conflict durability ensure durability remain transaction append disk recovery node ahead message broadcast previous commit  consensus instance message garbage ensure transaction verify commit quickly utxo memory minimize utxo transaction consume UTXOs account crash node reconstruct utxo parse disk node recover message consensus instance simply instance scalability explain scalability RBBC RBBC commits transaction per consensus instance execution bft algorithm PBFT  tendermint hotstuff SBC def commit transaction modify leader consensus algorithm PBFT tender mint hotstuff leader batch request however leader load dramatically leader byte node quadratic amount wan ethernet broadcast available message authentication code MACs optimization PBFT instead RBBC commits transaction explain theorem scalable throughput transaction propose byzantine consensus proposer proposer assume proposal reliably deliver algorithm byzantine proposer propose transaction byzantine consensus commits tends infinity distinct transaction deduplication byzantine client approximate closely parameter timing transaction propose twice duplicate persist reconciliation phase discard necessarily conflict reduce ability byzantine duplicate node parameter transaction random constant another apply randomization client duplicate transaction recent effort devote eliminate duplicate transaction consensus execution adopt conservative approach transaction propose proposer pro  transaction fails epoch happens another although benefit eliminate duplicate consensus execution drawback increase linearly transaction latency epoch propose correctly theorem censorship resistance transaction requester eventually superblock censorship resistance differs notion blockchain liveness validity resilience offering guarantee requester without transaction replica important censorship resistance requester simply ensures requester protocol submit transaction transaction guaranteed commit contrast byzantine requester request protocol guarantee vii experimental evaluation RBBC amazon EC vms consensus replicate blockchain machine performance RBBC verification consensus depict HBBFT corresponds code  protocol available author CONS corresponds variant RBBC classic leader bft algorithm PBFT bft smart optimization parameter II fault tolerance verification geodistributed environment vii blockchains machine vii replica update account balance vii finally byzantine failure vii machine specification blockchains amazon datacenters disposal virginia  california oregon canada ireland  london tokyo  singapore sydney   paulo datacenters specific delay bandwidth vii VM xlarge instance intel xeon processor  core GiB ram gbps network performance datacenter storage amazon elastic EBS gbps dedicate throughput mid xlarge instance intel xeon processor vcpus GiB ram network performance define amazon gbps EBS dedicate throughput xlarge instance intel xeon processor vcpus GiB ram moderate network performance mbps EBS dedicate throughput limit bottleneck leader PBFT leader central latency oregon specify proposal transaction leader CONS randomize bft HBBFT CONS classic leader byzantine consensus implementation PBFT tendermint consensus concurrency optimization bft smart reduce network consumption CONS implement digest message initial broadcast CONS HBBFT variant classic verification traditional blockchain proposer upon delivery superblock consensus HBBFT coin reliable broadcast erasure code peak scalability leaderless fault tolerance leaderless message replica performance yield performance stress RBBC datacenter vms fix fault tolerance consortium fix fault tolerance node increase node permissioned node throughput node practical latency throughput node tps latency remains throughput slightly discus impact performance II parameter performance latency throughput RBBC datacenter impact fault tolerance RBBC verification blockchains geodistributed machine impact fault tolerance without leader evaluate performance vms machine varied minimum maximum sharded verification depict peak throughput tps achieve fault tolerance parameter performance limited slowest node consensus proposer peak throughput occurs node probably avoids node slowest  paulo performance tends limited fault tolerance increase conjecture cryptographic verification induce computational load increase mention II alternative leaderless byzantine consensus algorithm lack detail exponential complexity impractical impact verification sharding verify conjecture verification performance additional performance verification per transaction depict blockchains node verify transaction without verification verification performance blockchains without verification verification RBBC affected tps tps HBBFT CONS throughput peak factor verification leader erasure code vii impact algorithm confirms previous conjecture throughput machine vms evenly datacenters europe ireland  united oregon northern california  previous verification observation precisely cpu usage  microbenchmarks confirm workload cpu bound dedicate vcpus instance verify serialize transaction per cpu spent verify signature spent  update utxo RBBC leader bft blockchain throughput latency RBBC proposer CONS proposal CONS limited proposer leader RBBC multiple proposer CONS performance batching transaction per proposal RBBC proposal RBBC throughput increase tps tps additional resource proposal node flattens around tps latency increase contrast CONS throughput decrease node increase despite proposal performance CONS batching RBBC proposer node algorithm transaction proposal solid throughput dash latency performance CONS batching RBBC proposer node algorithm transaction proposal solid throughput dash latency throughput latency CONS RBBC proposer node geodistributed node transaction proposal latency throughput node understand difference performance RBBC leader approach depict evolution latency function throughput reasonable consensus node proposal clearly throughput CONS limit tps RBBC approach tps indicates fold speedup RBBC CONS CONS minimum latency RBBC proposal CONS latency  rapidly HBBFT due performance performance HBBFT RBBC proposer node algorithm transaction proposal solid throughput dash latency transaction verify RBBC proposal transaction proposer node dash minimum maximum verification RBBC randomize bft blockchain depicts performance RBBC HBBFT proposer proposal transaction portion proposer throughput latency RBBC increase faster proposer throughput peak tps latency node proposer throughput latency HBBFT performance degrades node increase latency increase throughput decrease omit latency beyond node broadcast erasure cod message distinct signature distinct node echoed yield verification per node reduce verification performance gain verification sharding average transaction verify proposer node proposer verification optimal proposer verification remains around likely due increase load verification node tends confirm verification sharding important scalability throughput latency comparison blockchain proposal transaction throughput latency comparison blockchain proposal transaction blockchains explore union proposal blockchain CONS latency execution leader correctly terminate message delay RBBC message delay due inherent concurrency RBBC latency throughput tradeoff latency RBBC tps whereas latency CONS tps RBBC feature classic costly latency remains despite fault vii finally HBBFT performance consensus randomize erasure code node spends compute transaction proposal confirms important cpu load induced signature verification throughput latency RBBC HBBFT normal byzantine behavior geodistributed node node proposal transaction throughput latency RBBC HBBFT normal byzantine behavior geodistributed node node proposal transaction evaluation vms spawn vms confirm RBBC scalability variation latency bandwidth amazon EC datacenters minimum latency london ireland whereas maximum latency sydney  paulo bandwidth  singapore approximately mbit variance mbit mbit avoid waste bandwidth segregate role vms server local balance account replica client per machine vms datacenters transaction machine machine  london  oregon datacenters upon superblock client UTXOs byte database MiB proposal contains transaction performance depict IV interestingly throughput around tps due capacity RBBC due difficulty generate workload replica datacenters utxo request transaction consumes asynchronous latency proposer acknowledges transaction reception importantly transaction commit latency remains despite traffic byzantine attack evaluate RBBC byzantine attack  payload reliable broadcast message alter proposal deliver reliable broadcast instance faulty proposer binary payload binary consensus message flip goal behavior reduce throughput increase latency  byzantine proposer coalition maximize bandwidth reliable broadcast digest described reliable broadcast initiate byzantine proposer proposer deliver message remain deliver digest message meaning request message proposer echo message heatmap bandwidth mbps latency aws IV performance RBBC replica datacenters IV performance RBBC replica datacenters bandwidth usage latency  HBBFT normal byzantine behavior geodistributed node bandwidth usage latency  HBBFT normal byzantine behavior geodistributed node machine datacenters europe proposer vii impact  performance proposer proposal RBBC throughput tps tps due proposal accepted proposal byzantine proposer invalid increase latency latency increase due extra execute binary consensus terminate throughput HBBFT tps due proposal latency decrease proposal erasure code computation  verify reliable broadcast delay delivery message proposer increase bandwidth HBBFT avoids erasure code bandwidth usage impact bandwidth usage latency RBBC HBBFT proposer proposal bandwidth usage RBBC increase MB MB per  consensus instance HBBFT MB furthermore latency RBBC increase regard corruption impossible consensus replace permissioned node collude implement eventually consistent alternative service conclusion blockchains tend adopt permissioned model subset node permission PoS upon RBBC synchrony geo distribute permissioned node solves byzantine consensus adopts leaderless censorship resistance introduces sharded verification demonstrate triple performance closest competitor