decade security community malicious program operating however recent surge adoption embed device iot revolution rapidly malware landscape embed device profoundly traditional personal computer personal computer predominantly flavor architecture embed rely variety architecture aspect variant linux operating malicious actor birth linux malware knowledge currently comprehensive attempt characterize analyze understand linux malware majority resource topic available sparse report publish blog systematic focus analysis specific malware mirai botnet mainly network behavior challenge analyze linux malware unaddressed constitutes towards gap systematic exploration challenge involve implementation detail malware analysis pipeline specifically tailor linux malware measurement conduct malware sample frame document detailed statistic insight future introduction security community malware decade however despite significant effort dedicate academic community automate analysis detection malicious software remains historically vast majority malware target almost exclusively personal computer microsoft operating mainly currently estimate desktop computer therefore security community focus effort malware vast knowledge detect analyze defend malicious program however recent exponential growth popularity embed device malware landscape rapidly embed device industrial environment recently permeate aspect society mainly driven internet iot revolution device constant increase focus mainly combine innovative feature attract user postpone simply ignore security privacy concern premise vast majority newly interconnect device routinely vulnerable critical security issue internet insecure logins easy cod password expose telnet service accessible debug interface unsafe default configuration  software security vulnerability embed device profoundly traditional personal computer personal computer predominantly architecture embed device built upon variety cpu architecture hardware limited resource developer adopt unix operating flavor linux quickly gain popularity sector surprisingly astonish poorly secure device internet recently attract attention malware author however exception anecdotal proof concept antivirus largely ignore malicious linux program virustotal recognize concern security community academia react date attention emerge threat meantime available resource limited blog excellent malware manually perform analysis specific sample systematic recent focus network behavior specific malware mirai botnet however comprehensive conduct characterize analyze understand characteristic linux malware aim gap empirical conduct characterize understand linux malware embed device traditional personal computer systematically enumerate challenge arise analyze linux sample malware analysis architecture insufficient explore challenge analysis statically link binary preparation suitable execution environment differential analysis sample privilege detail linux specific technique implement aspect traditionally associate malicious software anti analysis trick pack polymorphism evasion attempt gain persistence infect machine insight uncovered thanks analysis pipeline specifically analyze linux malware conduct malicious sample linux malware already multi complex counterpart identify behavior ability sample properly multiple operating privilege escalation exploit custom modification upx packer adopt code considerable linux malware interacts utility despite lack available malware analysis sandbox sample already implement VM detection approach finally perform differential analysis malware behavior sample execute without privilege summary brings contribution document implementation analysis linux malware discus challenge involve malicious file empirical conduct linux malware sample obtain uncover discus linux specific technique employ malware detailed statistic usage raw analyze sample available research community entire infrastructure service researcher II challenge analysis generic potentially malicious linux program tackle specific challenge systematic exploration encounter target diversity relates diversity target environment belief challenge architecture mips aspect complex malware analysis MacOS android executables rely detailed information underlie execution environment linux malware instead target diverse target internet router printer surveillance camera smart TVs medical device greatly complicates analysis without information target unfortunately program binary specify suppose properly configure execution environment computer architecture linux architecture analyst analysis sandbox architecture specific analysis component recent mirai botnet author architecture mips however overall malware landscape linux instance architecture dataset moreover particularly challenge cpu architecture loader library elf file format allows linux program specify arbitrary loader responsible load executable memory unfortunately request loader analysis environment prevent sample execution moreover dynamically link binary library available target library prevent successful execution program contrary context aspect affect significant portion dataset linux program dynamically link   performant alternative traditional glibc analysis environment alternative instal correspond loader operating focus linux binary however unexpectedly challenge discern elf program compile linux elf compatible operating freebsd android elf header OS abi principle specify operating program rarely informative elf binary linux android specify generic OS abi moreover linux kernel ignore binary specifies freebsd OS abi valid linux program trick abuse malware sample encounter finally binary compile freebsd properly load execute linux dynamically link program syscalls argument linux freebsd generally therefore statically link program usually crash encounter difference difference exist version linux kernel custom modification rare embed device important consequence compile dataset linux malware linux binary guaranteed correctly generic linux static link binary statically link library dependency binary compilation static link advantage binary portable execute correctly dependency instal target environment harder reverse engineer identify library function binary static link introduces another obvious challenge malware analysis binary library application rely external wrapper execute normal program directly invoke instead api function typically libc wrap communication kernel statically link binary portable library dependency portable crash runtime kernel abi unfortunately unknown target analysis environment ideal analysis sandbox emulate closely sample analysis suppose challenge related environment architecture library operating environment setup another important aspect privilege program typically malware analysis sandbox execute sample normal unprivileged user administration privilege malware ability tamper sandbox instrumentation observation program behavior complex moreover uncommon sample super user privilege unfortunately linux malware assumption embed target code privilege however detail rarely available analyst identify sample advance discus perform differential analysis lack previous knowledge attempt perform comprehensive analysis linux malware landscape mere introduces additional challenge implement analysis pipeline specifically tailor linux malware analysis tailor characteristic exist malware sample unfortunately lack information linux malware complicate pipeline aspect focus architecture domain lack comprehensive dataset linux malware focus botnets honeypot representative dataset unfortunately approach bias towards sample propagate random target analysis infrastructure task implement analysis infrastructure linux malware complicate linux malware technique component behavior instance priori challenge previous expectation prevalence characteristic static link malformed file header impact analysis strategy despite extensive analyze malicious file android anecdotal knowledge linux malware obtain reading online report manual analysis specific therefore implementation analysis pipeline become trial error tackle incremental approach analysis task implement independent component integrate interactive framework responsible distribute execution multiple parallel worker interface analyst inspect visualize data sample analysis environment identify report anomaly encounter execution exist module unsupported architecture error prevent sample correctly execute sandbox unexpected crash adopt whenever issue become widespread impact successful analysis considerable sample introduce analysis module technique address framework version module responsible extraction information dynamically update improve analysis routine without scratch analysis pipeline collection exist  ida pro  nucleus completely explicitly due limitation cannot component detail instead briefly summarize technique organize file metadata analysis static analysis dynamic analysis component data collection retrieve data virustotal intelligence api fetch report elf file submit november november content report candidate sample per selection criterion minimize non linux binary sample split selection sample AV positive sample AV overview analysis pipeline overview analysis pipeline file metadata analysis phase analysis focus file elf file format runtime operating therefore reliable information architecture application suppose code executable file implement custom parser elf format exist explain unable cope malformed unexpected information data extract file purpose filter file relevant analysis instance library core dump corrupt file executables operating sample import android library information identify anomalous file structure prevent sample anti analysis routine prevent exist correctly file detail finding finally phase pipeline extract virustotal report AV label sample fed  obtain normalize malware  recently propose  implement technique normalize remove generic token detect alias AV label assign malware sample therefore whenever output consensus antivirus malware belongs static analysis static analysis phase task binary code analysis pack detection task rely custom ida pro script extract code metric function cyclomatic complexity overall coverage text PT load recognize function presence overlap instruction assembly trick invocation indirect instruction phase compute aggregate metric distribution opcodes entropy code data information statistical purpose integrate analysis component instance identify anti analysis behavior packed sample task static analysis phase consists combine information extract elf header binary code analysis identify likely packed application detail binary statically unpacked upx stage fed statically analyze sample unpack statically marked database subsequent grain dynamic attempt dynamic analysis perform dynamic analysis execution inside emulator custom pack analysis unpack attempt emulation implement dynamic sandbox kvm virtualized sandbox hardware architecture qemu emulate sandbox  mips   sandbox nest inside outer VM dedicate dispatch sample architecture maintain snapshot vms correspond configuration execution user account glibc  setup vms equip additional library static analysis phase popular loader  commonly embed instrumentation rely  implement kernel probe  user probe  accord documentation  variety architecture aarch mips  patch code mips abi patch fix syscall cpu register offset routine extract syscall argument stack  probe along argument return instruction pointer syscall invoked  glibc  additional information memory manipulation function execution sandbox return text file trace userspace function trace immediately parse identify useful feedback information sandbox preliminary analysis identify component library loader detect sample user permission attempt perform action fail insufficient permission immediately execution sample privilege explain later trace user differential analysis identify sample behavior affected privilege finally preliminary trace analysis report analyst error prevent sample warning encounter sample crashed byte misalignment physical virtual address load sample probably infect kernel memory physical address something desktop linux distribution extend component identify elf header fix data alignment passing dynamic analysis stage avoid hinder execution important code sample partial network access monitoring traffic abuse although ideal approach previously adopt behavioral analysis behavior sample pcap file network traffic due limitation discus analysis aspect linux malware already partially previous finally dynamically unpack unknown upx variant developed unicorn emulates instruction multiple architecture behaves kernel export limited upx unpack combination  explain approach automatically unpack malware sample dataset distribution sample across architecture distribution sample across architecture IV dataset dataset filter stage consist elf executables architecture breakdown sample distribution differs datasets honeypot mips data mirai botnet account sample report detailed statistic distribution sample dataset appendix focus variety difference exist feature extract database linux malware considerably minimum byte backdoor maximum megabyte botnet cod ida pro recognize dynamically link binary minimum zero sample maximum unique function moreover extract elf header dynamically link malware import external library commonly functionality sample import interestingly sample malloc socket function confirm importance interconnect device nowadays binary request file routine  finally entropy important role identify potential packer encrypt binary blob vast majority binary dataset entropy around compile packed code however sample entropy due null byte insert data malware  associate sample dataset bot net dedicate DDoS attack dominate linux malware landscape accounting sample prevalence attacker harvest poorly iot device remotely botnets task greatly simplify availability online service  scan  quickly target moreover monetize compromise embed device relevant data easy combine limited denial service attack another explanation botnet sample dataset source code malware publicly available variation  software II elf header manipulation II elf header manipulation despite extreme popularity botnets linux malware dataset contains sample belonging category backdoor ransomware cryptocurrency miner  traditional file  privilege escalation rootkits  worm rat program apt campaign cgi binary  malware dominates dataset exist variant sample discus analysis prefer aggregate counting individual sample sample goal overall structure diverse individual technique trick employ achieve persistence obfuscate program code return aspect linux malware discus implication VI hood detailed overview behavior identify linux malware detailed statistic prevalence aspect goal differentiate malware malware distinguish botnets backdoor ransomware sample instead focus trick technique commonly malware author pack obfuscation injection persistence evasion attempt date comprehensive discussion topic insight understand linux malware reference future research focus improve analysis malware elf sample cannot properly parse elf sample cannot properly parse elf header manipulation executable linkable format elf standard format others linux executables format complex internal layout tamper structure attacker defense analysis  identifies file specifies machine contains machine architecture kernel elf file load memory instead strictly dependent source code compilation respectively link relocation purpose kernel binary load memory program execution data malware developer tamper elf header fool analyst crash analysis identify modification anomalous file elf specification invalid file however properly execute operating anomalous elf category sample dataset consists remove information elf valid accord specification information runtime uncommon generate traditional compiler another category consists reporting false information executable linux program report operating abi freebsd execute correctly kernel sample  report header freebsd runtime detect actual operating execute correctly freebsd linux trust information execute binary despite identification abi indeed program crash runtime execute invalid recognize filter non linux program invalid elf category instead sample malformed corrupt information sample dataset typically invalid  offset header  entry header  entry elf header evidence sample exploit elf header file format overlap header instance sample belonging  declare byte elf header zeroed unused runtime II summarizes elf manipulation trick dataset impact userspace consequence previously transformation report popular elf file react unusual malformed file readelf gnu binutils  convenient python library parse analyze elf file gdb facto standard debugger linux unix ida pro version popular commercial   reverse engineering properly anomalous file unfortunately error invalid readelf complain absence valid sample parse remain elf header  denies analysis header corrupt instead parse elf file declare empty management erroneous custom elf parser specifically presence unusual setting inconsistency invalid malformed header information despite widespread  gdb severe lack resilience corrupt information malformed header presence invalid gdb recognize elf binary inability program finally ida pro analysis pipeline handle correctly presence corrupt information affect program execution persistence persistence involves configuration infect malicious executable regardless reboot operation perform underlie machine along ability remain hidden objective malicious code document technique exists malware author achieve persistence microsoft platform vast majority technique relies modification registry software boot user occurs schedule service linux malware rely strategy limited technique dataset category described IV elf binary adopt persistence strategy IV elf binary adopt persistence strategy subsystem initialization approach adopt malware author advantage linux init IV sample attempt modify script execute instead sample etc init folder link directory configuration overall binary displace link etc  etc dedicate machine halt reboot operation malicious program largely rely init sample dataset recent initialization technology  important persistence privileged permission user execute elf user privileged policy usually impossible modify service initialization configuration execution  choice commonly malware relies presence  scheduler unix malicious elf file modify adequate privilege  configuration file schedule execution fix interval subsystem initialization persistence malware launch unprivileged user unless sample invokes utility   program specifically modify configuration file var   file infection replacement another approach malware maintain  replace infect application already exist target traditional virus behavior  locates infect elf file without strategy target approach subvert functionality specific elf  rename elf  rename dynamically analysis report infection replacement user file category sample  inject code append code malicious data another sample rst   elf infection technique limit infection elf file directory adopts infection target binary bin folder interestingly sample accord  report widespread surprisingly active approach sample gate fully replace bin usr bin folder  backup code usr bin  user file alteration IV sample modify configuration file user directory configuration malware writer adopt ensure persistence user linux user beside infect affected persistence mechanism configuration per user persistency sample  target desktop linux installation modify instead desktop startup file manager IV report summary amount sample technique surprisingly elf file implement persistence strategy however sample persistent multiple technique objective user file alteration fallback mechanism sample fail achieve persistency deception stealthy malware hide assume genuine innocuous glance objective trick user apparently benign program avoid unusual VI elf sample privilege error probe identity VI elf sample privilege error probe identity vii behavioral difference user analysis vii behavioral difference user analysis overall behavior already operating widespread linux malware sample assume memory report benign application impersonate sample invoke  request PR simply modify command argument program program adopt utility sample belonging  disguise   discus difference rename technique  proc pid status  modifies information report proc pid   none malware dataset combine technique therefore easily detect inconsistency remain sample adopt empty fictitious exist file random combination pid behavior implement mirai sample malicious assumes execution privilege distinction administrator normal user important linux malware malicious sample perform action behavior execute super user privilege target embed iot device malware fail execute analyze limited privilege therefore execute sample normal user privilege execution detect attempt retrieve user identity program malware action access resource return   error analysis sample privilege sample dataset detect difference sample behavior extract execution trace vii behavior execute normal user privileged command operation file predominant malware elevate privilege delete file folder instance sample   hide trace delete file var sample  delete login  information var  moreover malware tamper sandboxed execution binary upon detection emulate execution environment ssh daemon delete entire file detail specific action execution privilege privilege escalation exploit interaction OS kernel privilege escalation advantage kernel probe dynamic analysis ability trace function OS kernel detect successful exploitation monitoring commit cred detect credential instal task sandbox built host execution sample deployed date fully patch linux operating prevent binary exploit vulnerability accord trace analysis evidence sample successfully elevate privilege inside machine perform privileged action user credential regard therefore unsuccessful exploit developed custom signature identify escalation attack vulnerability linux kernel exploitation proof concept available public reveal cve frequently vulnerability elf program exploit sandbox detect attempt exploit cve remain return positive kernel module trace allows attempt load unload kernel module sample execute privilege interestingly malware sample execute privilege successfully load kernel module none perform unload procedure involve standard setup IP packet filter identify sample belonging gate  attempt load custom kernel module fail correspond file analysis elf packer elf packer pack polymorphism runtime pack sophisticated obfuscation technique adopt malware writer properly implement completely prevents attempt statically analyze malware code considerably slows eventual manual reverse engineering effort commercial underground packer exist microsoft linux handful elf packer propose vast majority proof concept project exception upx popular source compression packer introduce reduce benign executables freely available operating automatic recognition analysis packer subtle focus academic industrial rely heuristic file entropy static analysis phase import percentage code correctly disassemble function identify flag sample likely packed moreover upx variant dominate scene pipeline custom analysis routine identify upx variant generic multi architecture  retrieve code sample packed technique upx variation vanilla upx variant prevalent pack dataset packed binary belong category highlight modification upx format goal standard upx unpack modification magic file packed upx anymore modification upx insertion junk byte upx utility however sample underlie pack structure compression algorithm malware writer simply apply cosmetic variation source upx code IX command execute IX command execute custom packer linux variety publicly available packer upx usually choice however detect sample belonging  implement custom pack unpack routine execute transfer unpacked program malware perl interpreter decrypt instruction interpreter interaction technique linux malware interact binary already instal multiple sample consists spawn involves largely due fork  program remain sample spawn multiple popular botnets  tsunami mirai  instance  creates attempt command server  instead creates parallel DDOS attack command sample analyze inside sandbox execute external command register execution unique  prevalent summarize IX command sed  execute achieve persistence target unlink sample delete  file malware previous infection malware  counter malware  mirai  network mirai vulnerable already infect proc file access malicious sample proc file access malicious sample injection attacker inject code behavior sample debug hook function steal information monitor technique memory another program ptrace syscall request ptrace  ptrace  ptrace  functionality ptrace attach request operation proc target pid mem invocation  important mention linux kernel harden ptrace ptrace descendant tracer unless unprivileged user grant cap sys ptrace capability capability execute  introduce kernel directly transfer data address sample perform injection technique mention injects dynamic library active libc excludes gnome session   inject payload malware libc function libc  mode load dynamic runtime function  preferable implement  already libc code mapped memory malware issue ptrace request backup register victim hijack execute malicious behavior restore execution context information gathering information gathering important malware execution information detect presence sandbox execution sample data  remote location happens program server portion file inspect malware discus security relevant analyst monitor inspect malware strain XI  file access malicious sample XI  file access malicious sample xii access etc malicious sample xii access etc malicious sample proc  file proc  virtual file respectively runtime information hardware configuration information kernel subsystem hardware device kernel driver information malware sample macro category configuration information network configuration network category dataset sample access proc net route rout active network interface relative configuration additional information extract proc net tcp active tcp socket proc net dev packet moreover sample dataset proc net arp retrieve arp  counterpart report XI access sys net transmission queue relevant information DDoS attack configuration category sample extract amount instal memory available cpu core cpu characteristic file sandbox detection evasion category subsection USB pci device category access proc  retrieve kernel image elf program evasive feature elf program evasive feature xiv file sandbox detection xiv file sandbox detection another information gathering focus enumeration prevent multiple execution malware mirai identify relevant program target machine report IX sample execute command interface sample  invoke crypto miner interfere malicious activity configuration file configuration file etc folder report xii configuration file achieve persistence access network related configuration file popular etc  conf dns resolver etc host mapping host IP address entry etc passwd register account instance  sample presence backdoor account user directly etc passwd etc shadow evasion purpose evasion hide malicious behavior remain undetected typically sample detect presence analysis distinguish within analysis environment target device detail evasion technique prevalence dataset summarize sandbox detection comparison instrumentation detect program attempt detect presence sandbox information extract VMware qemu xiv report file information sample sys vendor file detect analysis environment execute privilege restrict permission file expose motherboard  zone information report kernel identify sample attempt detect  jail proc  proc malware pid   container binary  evade ibm mainframe ibm virtualization technology sample simply exit detect virtual environment adopt aggressive stealthy approach delete entire file enumeration evade analysis verify presence inspect goodness authenticity companion investigate linux malware sample already employ technique sample perform scan proc pid directory however none sample perform scan evasive purpose instead machine already infect identify target explain anti debug anti debug technique ptrace debugger ability attach target programmatically inspect interact debugger attach evasion technique malware consists invoke ptrace flag ptrace  ptrace attach detect another debugger already attach prevent sample sample employ mechanism identify sample presence LD preload environment variable override function dynamically load library goal dynamically execution important trace sandbox kernel probe described cannot detect tamper anti debug technique anti execution detect sample belonging  malware manifest behavior file hardcoded closer sample malware author trick evasive malware collection infrastructure analysis sandbox rename file analysis stall code malware employ stall code suggests technique delay execution malicious behavior assume analysis sandbox sample XV library dynamically link executables XV library dynamically link executables investigate linux malware already variant technique scan execution trace sample related function binary analyze  however none delay stall execution trace behavior coordinate network communication library executable library executable dynamically link external library load permit code reuse localize upgrade conversely executable statically link file library executable file remove external dependency application  portable sample analyze statically link nevertheless sample strip remain function variable developer similarly dynamically link sample dataset strip trend apparently malware developer lack motivation obfuscate code manual analysis contrast complexity evasive malware library XV dynamic library import malware sample dataset important aspect gnu library glibc expectedly request library sample link implementation  embed almost dataset link  library gcc compiler handle arithmetic operation target processor cannot perform directly float fix operation library rarely context desktop environment embed device architecture float operation aspect identify library distribution  instance tenth popular library sample VI intra variety previous described characteristic linux malware sample instead exhibit trait sample belonging characteristic probably due availability source code linux malware variety discus popular malware tsunami sample dataset sample compile architecture rarest   statically link strip dynamically link tsunami sample rely loader entropy varies sample entropy packed vanilla upx modify version algorithm variability limited static feature instance dynamic trace persistence technique sample rely user approach script  persistence concern unprivileged privileged execution tsunami sample analyze sandbox user privilege privilege related error difference arise evasion sample code evade sandbox others evasive functionality vii related decade security community focus almost exclusively malware target microsoft described technique analyze PE binary detect ongoing threat prevent infection attempt operating community developed analysis dissect threat related environment dynamic analysis  file format attack vector exception mobile malware non malicious software attention hack community developed almost decade technique implement malicious elf file rootkits dissect none vast adoption security recently elf file mainly driven  mirai botnet  blog publish analysis dissection specific investigation mainly conduct manual reverse engineering recent research extract static feature elf binary classifier malware detection unfortunately comprehensive account architecture easily evade strip binary pack researcher explore dynamic analysis non malware recently available limited platform limited analysis capability  analysis sandbox  easily detectable analysis  binary   affected issue binary  instead architecture mips however performs analysis readelf network dump cuckoo sandbox another available analysis linux sample however cuckoo project external orchestration analysis framework preparation various sandbox image user november virustotal announce integration tencent  sandbox reportedly analyze linux malware unfortunately public report currently binary systematic iot malware telnet honeypot attack trend sandbox environment qemu   analyze iot malware issue iot device expose telnet online actively target service similarly detail specific linux malware mirai botnet systematically evolution growth botnet mainly network invaluable community limited aspect entire sample network behavior complement effort clearer overview linux malware actually moreover datasets previous representative overall linux malware via telnet honeypot conclusion comprehensive linux malware document implementation analysis pipeline specifically tailor linux malware discus empirical linux malware implement malicious behavior complexity linux malware identify sample already adopt technique borrow counterpart insight foundation systematic future unfortunately bound increase importance