bitcoin cash widespread adoption bitcoin potential financial interaction significant limitation regard privacy specifically bitcoin transaction completely public user privacy pseudonym propose zerocoin cryptographic extension bitcoin augments protocol fully anonymous currency transaction standard cryptographic assumption introduce trust otherwise security model bitcoin detail zerocoin cryptographic construction integration bitcoin examine performance computation impact bitcoin protocol introduction digital currency academic  however academic literature widespread bitcoin viable digital currency capitalization USD transaction unlike propose digital currency bitcoin fully decentralize central authority instead security depends distribute architecture assumption majority node honest substantive proof deter sybil attack consequence bitcoin neither legal mechanism detect punish spending trust chosen monitor police decentralize likely responsible bitcoin price transaction public conduct cryptographically binding pseudonym relatively academic privacy implication bitcoin preliminary encourage researcher trace spending bitcoins allegedly steal although steal coin harmless technique apply trace sensitive transaction violate user privacy moreover sophisticated domain effort anonymize social network data network topology apply bitcoin transaction graph bitcoin transaction public anonymous transaction avoid absolute anonymity typically associate cash scheme transaction mechanism partially explicitly identify participant authorize enforcement however limit information authorize anonymize underlie public transaction bitcoin community generally acknowledges privacy weakness currency unfortunately available mitigation limited recommendation employ laundry service exchange user bitcoins commercial operation service however severe limitation operator steal fund coin simply business user fund recognition risk service laundering minimal transaction volume hence limited anonymity contribution zerocoin distribute cash cryptographic technique link individual bitcoin transaction without trust define abstract functionality security requirement primitive decentralize cash scheme propose concrete instantiation secure standard cryptographic assumption finally specific extension integrate protocol bitcoin evaluate performance prototype implementation derive source bitcoind client propose cash technique bitcoin privacy however cash protocol rely fundamentally trust currency issuer creates electronic coin blind signature scheme attempt unsuccessfully bitcoin simply appoint alternatively distribute responsibility quorum node threshold cryptography unfortunately introduce failure inconsistent bitcoin network model consists untrusted node routinely exit network moreover trust legal regulatory grey bitcoin operates impediment adoption zerocoin eliminates coin issuer individual bitcoin client generate coin sufficient classical bitcoins chain chain illustrates normal bitcoin transaction transaction link precede transaction chain illustrates zerocoin chain linkage mint dot cannot chain data intuition construction understand intuition zerocoin pencil protocol user access physical bulletin mint zerocoin fix denomination user alice generates random coin serial commits secure digital commitment scheme commitment coin denote random reveal serial alice pin public bulletin along physical currency user accept correctly structure sum currency redeem coin alice scan bulletin obtain valid commitment CN user non interactive zero knowledge proof statement CN hidden commitment others alice disguise hide identity transaction remain user verify proof previously transaction met user alice location bulletin otherwise reject transaction prevent currency protocol achieves important aim alice mint coin cannot link retrieve fund link coin serial withdrawal directly coin alice knowledge neither reveal proof bill  taint controversial transaction cannot link alice bill commitment zero knowledge proof secure alice cannot coin without serial detect network participant protocol workable bulletin critical information currency steal serial remove spends importantly conduct protocol network alice distribute digital backing currency contribution recognize bitcoin concern backing currency bulletin conditional currency  mechanism indeed core bitcoin protocol decentralize calculation chain trust append bulletin information financial transaction alice commitment escrow fund chain assure strict protocol colleague  commit fund access integrate bitcoin chain protocol another practical challenge specifically efficiently commitment CN naive disjunction CN unfortunately proof render impractical contribution construction proof linearly increase specify expensive proof employ public accumulator reduce proof accumulator propose   combine constant data structure efficiently specific within construction bitcoin network computes accumulator commitment CN along appropriate membership witness item spender knowledge witness reduce spender proof constant application specific accumulator trust accumulator associate witness publicly computable verifiable willing relax requirement trust setup phase parameter generate moreover accumulator bind compute lastly accumulator efficient non interactive witness indistinguishable zero knowledge proof membership fortunately accumulator exist concrete proposal IV construction rsa accumulator camenisch  accumulator     outline proceeds II brief technical overview bitcoin protocol formally define notion decentralize cash correctness security requirement IV concrete realization scheme standard cryptographic hardness assumption discrete logarithm rsa finally VI vii integrate cash construction bitcoin protocol discus security anonymity detail experimental practical II overview bitcoin overview bitcoin protocol detailed explanation refer reader specification nakamoto summary bitcoin network bitcoin peer peer network node distribute transaction client interact network bitcoin chain serf append bulletin maintain distribute fashion bitcoin peer chain consists series hash chain bitcoin  transaction bitcoin broadcast network bitcoin peer compete node generate canonical competition node proof identify specific sha  specifically sha sha periodic network vote ensure average peer generates valid mining broadcast node valid transaction validate valid proof link chain accepted chain bitcoin incentive peer successfully mining non trivial computational investment  creator reward currently btc node entitle transaction fee transaction fee paid transaction author miner exclude transaction insufficient fee prioritize fee transaction bitcoin transaction bitcoin transaction consists output input output described tuple amount denominate satoshi bitcoin satoshi specification authorize output specification denote  bitcoin script stack non turing forth transaction input simply reference previous transaction output script  code data combine  evaluates coinbase transaction creator transaction input bitcoin transaction output script specifies redeem public hash transaction correspond private bitcoins bob alice embeds hash bob ECDSA public pkb amount script instruction  output transaction reference input bitcoins excess input paid transaction fee node alice typically output surplus transaction broadcast network bitcoins belong bob however bob coin subsequent reference bob coin transaction reference input  signature transaction skb public pkb anonymity anonymity goal bitcoin bitcoin pseudonymity bitcoin identity public hash bitcoin user generate unlimited indeed bitcoin client routinely generate identity effort preserve user privacy regardless bitcoin goal bitcoin user willing considerable effort maintain anonymity risk transaction fee illustration existence laundry fee user fund shuffle trace user trust laundry user pot involves amount risk decentralize cash approach anonymizing bitcoin network cryptographic cash construction central coin issuer refer decentralize cash scheme define algorithm decentralize cash scheme correctness security notation adjustable security parameter poly polynomial function negligible function allowable coin definition decentralize cash scheme decentralize cash scheme consists tuple possibly randomize algorithm setup mint verify setup params input security parameter output global public parameter params description mint params skc input parameter params output coin trapdoor skc params skc params coin trapdoor skc transaction arbitrary coin output coin transaction consist proof serial otherwise output verify params params proof serial transaction information coin output valid otherwise output setup routine execute trust setup occurs correspond secret relaxation acceptable application concrete instantiation assumption coin generate randomize mint algorithm serial unique release spending coin prevent user spending coin twice formalize correctness security decentralize cash scheme algorithm arbitrary intend transaction specific information identity transaction recipient correctness decentralize cash scheme satisfy correctness requirement params setup skc mint params valid coin poly assign params skc scheme random coin algorithm equality probability verify params source security security decentralize cash define anonymity balance anonymity ensures adversary cannot link coin transaction coin associate attacker coin generate transaction definition anonymity decentralize cash scheme setup mint verify satisfies anonymity requirement probabilistic polynomial adversary negligible advantage define advantage balance consideration intuitively ensure attacker cannot coin mint access coin transaction honest strengthen definition capture attacker alter valid coin modify transaction information definition reminiscent forgery definition commonly blind signature attacker collection valid coin oracle  ultimately coin valid transaction transaction duplicate serial modifies transaction honest oracle definition balance decentralize cash scheme setup mint verify satisfies balance poly adversary negligible advantage oracle  operates jth query  oracle output otherwise return params  spends mint coin verify params tuple define advantage probability IV decentralize cash rsa concrete instantiation decentralize cash scheme define cryptographic ingredient cryptographic building zero knowledge proof signature knowledge protocol zero knowledge proof instantiate technique schnorr extension due convert non interactive proof apply fiat shamir heuristic latter refer non interactive proof signature knowledge define refer proof notation camenisch  instance  denotes non interactive zero knowledge proof knowledge satisfy enclose assume verifier similarly extension  indicates signature knowledge message accumulator construction accumulator rsa assumption accumulator propose   later improve   camenisch  accumulator algorithm  params input security parameter sample prime polynomial dependence security parameter compute sample  output params accumulate params input params prime compute accumulator ucc   params input params prime described witness accumulation besides accumulate params  params input params witness compute  output prime define previously simplicity description calculation camenisch  accumulator incrementally update exist accumulator accumulator compute  extensive optimization practical implementation camenisch  accumulator satisfies collision resistance rsa assumption informally ensures adversary  satisfied additionally efficient zero knowledge proof knowledge commit accumulator convert non interactive proof fiat shamir transform refer proof notation   SourceRight click MathML additional feature construction concrete decentralize cash scheme scheme secure assume hardness rsa discrete logarithm assumption existence zero knowledge proof algorithm setup params input security parameter  obtain generate prime random generator subgroup output params mint params skc compute   skc output skc params skc output compute accumulate  output comprises signature knowledge    source verify params proof serial coin compute accumulate verify aforementioned signature knowledge public proof verifies successfully output otherwise output protocol assumes trust setup generate parameter stress accumulator trapdoor subsequent setup procedure therefore destroyed immediately parameter generate alternatively implementers technique sander generate rsa  accumulator parameter without trapdoor security analysis security construction theorem zero knowledge signature knowledge computationally zero knowledge random oracle model setup mint verify satisfies anonymity proof sketch theorem appendix intuitively security construction stem coin commitment perfectly hiding commitment signature proof computationally zero knowledge ensure adversary negligible advantage coin spent theorem signature proof random oracle model rsa discrete logarithm setup mint verify satisfies balance proof theorem appendix briefly proof relies binding coin commitment soundness unforgeability  collision resistance accumulator adversary balance non negligible advantage collision commitment scheme discrete logarithm collision accumulator rsa integrate bitcoin construction previous overview approach technique integrate bitcoin address specific challenge combine decentralize cash scheme bitcoin protocol overview approach straightforward mint zerocoin denomination alice mint params skc skc securely embeds output bitcoin transaction spends fee classical bitcoins mint transaction accepted chain global accumulator currency cannot access zerocoin essentially escrow bob alice construct partial transaction ptx reference  mint transaction input bob public output traverse valid mint transaction chain assembles mint coin params skc  ptx finally completes transaction embed  input ptx output transaction zerocoin mint transaction feature useful transfer multiple zerocoin instance denomination chain transaction network node verify  hash ptx previous transaction reference mint transaction claimed input transaction network accepts valid allows alice redeem bitcoins compute accumulator naive implementation construction IV verifier recompute accumulator verify substantially reduce recall accumulator construction compute incrementally hence node coin accumulation exploit node mining zerocoins previous accumulator accumulator coinbase transaction accumulator checkpoint peer node validate computation accept blockchain verification occurs routinely chain client trust accumulator confirm compute scratch optimization alice longer compute accumulator witness instead merely reference accumulator checkpoint compute witness checkpoint precede mint instead compute witness equivalent accumulate transaction bitcoin transaction flexible script validity transaction unfortunately bitcoin script turing moreover already limited script functionality disabled bitcoin production network due security concern hence exist script cannot sophisticated calculation verify zero knowledge proof fortunately purpose bitcoin designer chose reserve script operation future expansion extend bitcoin instruction zero coin mint mint zerocoin construct transaction output  contains instruction coin node transaction validate coin zerocoin alice construct transaction input zerocoin mint transaction  reference accumulator verifier extract accumulator reference validates described earlier finally transaction prevent attacker simply transaction  normal bitcoin transaction ECDSA signature specify  reference input however transaction arbitrary zerocoin ECDSA public instead  transaction hash normally ECDSA  validate zerocoin bitcoin semantics currently bitcoin persistent define solely transaction transaction furthermore access via explicit reference hash zerocoin anonymity requirement  coin mint coin serial spent serial enable qualifier introduce bitcoin transaction handle processing mint transaction coin accumulate processing transaction coin serial spent serial client coin serial choice per client incur overhead engineering overhead handle transaction client accumulator maintain within accumulator checkpoint client verifies proof optimization reasonable parameter proof exceed bitcoin KB transaction limit although simply increase limit drawback drastically increase storage requirement bitcoin transaction KB increase memory pressure client transaction memory prototype implementation proof location server implementation distribute hash non chain storage bitcoin recommend proof chain alternative increase storage chain suggestion optimize proof verification complexity proof longer verification standard bitcoin transaction magnify bitcoin transaction verify node accepted chain although former account transaction fee obviously ideal approach distribute verification entire network node verify entire proof  utilizes technique essentially consists iteration proof reduce probability forgery roughly simply node randomly iteration proof verify distribute across network achieve approximately security duplication effort optimization involves tradeoff exist proof verify compute series minimum hash naive implementation fully compute greatly increase proof client compute verify hash avoid issue replace standard hash merkel leaf hash challenge hash proof intermediate node instead verifier compute subset validate proof challenge without drastically increase proof limited anonymity security serious concern bitcoin community loss wallet due endpoint security traditional bitcoin theft coin however zerocoin attacker deanonymize zerocoin transaction skc obvious securely delete skc immediately coin spent unfortunately protection skc steal earlier generate transaction immediately shortly coin mint possibly earlier checkpoint calculate greatly reduces user anonymity decrease coin leak information coin mint however attacker compromise wallet link zerocoins mint transaction code implementation chose modify bitcoind source bitcoin client modification instruction bitcoin script mint spending zerocoins transaction code handle instruction maintain spent serial accumulator charm cryptographic framework implement cryptographic construction python boost python utility code within bitcoind introduces performance overhead rapidly prototype implement future construction incremental deployment described zerocoin bitcoin protocol globally transaction instruction validate update server fail validation node potentially network split validates node although bitcoin precedent flag upgrade strategy willing bitcoin community possibility incremental deployment accomplish embed protocol comment standard bitcoin script non zerocoin aware node data effectively  bitcoin signature specify comment embed zerocoins valid subset zerocoin processing node zerocoin aware node parse comment transaction fee validation accord proof embed comment incentive node service validation mechanism zerocoin anonymity balance zerocoin node malicious elect node prevent sybil attack thankfully node bitcoin chain decent deterrent furthermore  node readily detectable invalid zerocoin transaction audit node potentially fund escrow deter fraud VI security parameter choice anonymity zerocoin definition zerocoin mint cannot mint coin spent differently attacker learns scheme mint spends ideal scheme however ideal scheme imposes limitation coin mint coin subsequently spent another coin mint anonymity observer previous coin stress anonymity privacy compromise attacker mint active coin hence bound anonymity coin mint honest coin mint upper bound mint coin zerocoin reveals mint spent coin user potential source information attacker contrast previous cash scheme reveal information primarily merchant however advantage loss generally adversarial cash security model public model zerocoin actually remove information asymmetry user lastly zerocoin hide denomination transaction avoid simply fix coin denomination exchange coin denomination simply zerocoin anonymize bitcoins parameter generally cryptographer specify security adjustable security parameter indeed notation throughout previous reality however distinct security choice zerocoin affect anonymity resilience counterfeit schnorr coin commitment rsa modulus accumulator  security zero knowledge proof commitment pedersen commitment information theoretically hiding schnorr commit affect anonymity zerocoin security commitment scheme however affect counterfeit attacker binding commitment scheme mint zerocoin serial schnorr attack cannot feasibly lifetime coin signature knowledge coin spends increase linearly schnorr minimize announce parameter commitment scheme periodically zerocoins expire unless exchange zerocoins mint parameter coin spent network spent parameter previous coin convert decrease anonymity however user convert zerocoins parameter expire prototype implementation chose parameter assumption commitment parameter regenerate periodically explore possibility extension zerocoin enable IX accumulator rsa generate accumulator trust setup phase generate rsa  cannot frequently accumulator truly security therefore currently propose rsa greatly affect coin proof accumulator membership efficient adverse overall coin proof moreover although accumulator expensive reduce anonymity parameter accumulate exist coin hence anonymize spends zero knowledge proof security  parameter affect anonymity security zero knowledge proof greatly affect proof thankfully proof independent applies per proof therefore per dishonest expend roughly  effort forge coin link coin mint probability roughly   vii performance validate conduct modify bitcoind implementation described parameter corresponds rsa modulus zerocoin performance function parameter zerocoin performance function parameter conduct  performance cryptographic construction modify bitcoin client verify zerocoin former reasonable estimate mint zerocoin spending verify transaction latter estimate zerocoin impact exist bitcoin network computational node verifies zerocoin transaction conduct intel xeon 0GHz quad core processor hyper thread 6GB ram ubuntu server linux kernel microbenchmarks evaluate performance mint verify algorithm isolation conduct series microbenchmarks charm python implementation goal estimate performance cryptographic primitive experimental setup challenge conduct microbenchmarks accumulation coin witness global accumulator ssr ldots ssr verify ldots problematic implementation accumulation incremental address issue chose microbenchmarks simply computes accumulator runtime ssr ldots ssr verify ldots routine precomputed accumulator witness omega conduct thread processor parameter perform average compute coin operation proof security parameter compute accumulator stress accumulation incremental typically transaction hence compute global accumulator therefore amortize accumulate coin generate witness zerocoin verification zerocoin affect network transaction processing determines practicality scalability transaction zerocoin spends verify miner invalid transaction network invalid chain entail ssr verify ldots zerocoin transaction compute accumulator checkpoint impact bitcoin protocol specifies average verification longer reasonable zerocoins network cannot function generate verify transaction offset transaction fee coin mining verify prior append chain offset mining node mining leaf anyone verify chain  computational experimental setup zerocoin verification modify bitcoind client verify externally load transaction percent transaction zerocoin transaction mint spends security parameter data consists contains zerocoin mint exist spends actual vector contains random zerocoin spends coin previous zerocoin mint standard bitcoin  transaction  bitcoind client verify zerocoin classical bitcoin transaction accuracy measurement average discussion zerocoin beyond bitcoin transaction volume significant computational effort verification fundamentally threaten operation network zerocoin transaction roughly average bitcoin currently verification unreasonable assumption bitcoin transaction supplant zerocoin transaction beyond bitcoin average transaction per zerocoin transaction majority transaction network graph suggests assume verification linearly transaction transaction per transaction per mixture transaction per per remain risk coin serial collision erroneous spends serial collision probability serial accumulator collision probability odds collision normal bitcoin transaction sha hash stress caveat data prototype exploit parallelism verify multiple zerocoin transaction validate individual proof serial dependency task duplicate serial opportunity substantial improvement data accurate estimate financial zerocoin network overestimate mining node extra effort verify propose transaction already validate node attempt construct contribution chain execution metric context bitcoin miner concerned actual monetary operating mining typically perform gpus lesser extent FPGAs ASICs efficient compute hash collision cpu likely insignificant finally neglect load node processing incoming transaction proof contend node probably gpus mining latter issue former however remains unknown unlikely disproportionately affect zerocoin performance previous cash bitcoin electronic cash research topic cryptographer cryptographic cash focus user privacy typically assume existence semi trust coin issuer cash scheme largely online scheme user contact registry offline scheme spending without network connection  introduce online cryptographic cash rsa signature later extend offline anonymizing user spent subsequent improve upon technique maintain requirement trust coin divisible reduce wallet exception sander   developed alternative model reminiscent proposal central replace hash chain signature accumulator unfortunately accumulator practical central exist compute chain bitcoin primary goal anonymity non academic proposal wei dai distribute currency computational dai proposal anyone currency transaction broadcast client variant limited currency generation transaction broadcast server effectively approach bitcoin marked distinction cash trust assumption majority bitcoin node honest anyone node bitcoin network anyone entire transaction graph overview bitcoin shortcoming  anonymity numerous  graph identify passive analysis narayanan shmatikov social network passively anonymized similarly construct target attack anonymized social network relationship vertex previously narayanan shmatikov anonymized user netflix prize data correlate data imdb bitcoin existence scrutiny privacy researcher anonymization technique apply effectively bitcoin relatively reid  ron shamir examine structure bitcoin network graph nearly fold expansion finally privately aware stage effort examine bitcoin anonymity IX conclusion future zerocoin distribute cash scheme user anonymity coin security assumption distribute online append transaction bitcoin backing currency scheme definition propose concrete realization rsa accumulator non interactive zero  signature knowledge finally integrate construction bitcoin performance leaf although scheme workable discrete logarithm proof proof verification prefer scheme proof particularly important reduce verification zerocoin transaction promising construction cryptographic literature bilinear accumulator  commitment analogue scheme alternative component research ideally improvement replacement exist implementation zerocoin currently derives anonymity security counterfeit cryptographic assumption substantially increase computational complexity VI anonymity relatively cheap principally driven anti counterfeit requirement manifest coin proof bitcoin counterfeit coin computationally prohibitive merely computationally costly user obtain network alternative standard cryptographic assumption assumption compute discrete infeasible construct scheme weak assumption financial incentive construction compute discrete exceeds counterfeit coin spends random commitment correspond mint transaction commitment hash coin serial serial attacker forge zerocoin per discrete computation compute discrete zerocoin forge coin profitable allows coin relatively asymptotic difficulty multiple distinct discrete fix theory translates along security propose construction issue future finally research tradeoff security accountability anonymity objection bitcoin facilitate laundering circumvent legally binding financial reporting requirement propose additional protocol modification anonymous credential user maintain anonymity demonstrate compliance reporting requirement