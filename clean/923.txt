sidechains  enabler blockchain scalability interoperability however model concept provably secure construction attempt formal definition sidechain asset sidechains securely forth security definition augments transaction ledger liveness safety across multiple ledger enhance firewall security safeguard blockchain sidechains limit impact otherwise catastrophic sidechain failure sidechain construction suitable proof stake PoS sidechain exemplary concrete instantiation construction epoch PoS consistent ouroboros PoS blockchain protocol cardano pure PoS  comment construction adapt protocol ouroboros praos ouroboros genesis algorand important feature construction merge stake prevents  attack sidechain amount stake important technique peg chain construction chain certification facilitate novel cryptographic primitive introduce hoc threshold  ATMS independent ATMS securely instantiate regular aggregate digital signature succinct argument knowledge  bulletproofs storage efficiency introduction blockchain protocol prominent application cryptocurrencies bitcoin gain increase popularity acceptance wider community enjoy adoption fundamental remain resolve interoperability blockchains interoperate exchange asset data scalability blockchain protocol proportionally participate node  deployed blockchain protocol codebase evolve functionality implementation function blockchain protocol organise application data node evolves eventually consensus sequence consensus component achieve popular proof promising alternative proof stake application data typically consists transaction transfer bitcoin transfer arbitrary predicate smart contract ethereum validate transaction local blockchain accord node typically cannot dependent blockchain session perform operation across blockchains instance blockchain bitcoin sidechain enhance functionality frequently fundamental technology enabler blockchain sidechains introduce multiple blockchains communicate react sidechains exist simply mechanism exist alone blockchains communicate blockchains sidechain treat sidechain exist blockchain mainchain genesis blockchain somehow blockchain blockchain blockchain initial bootstrapping stage sidechain enable interaction participate blockchains interaction transfer asset blockchain another application asset transfer retain transform asset contrast related concept atomic swap maintains transfer ability asset forth chain sometimes refer peg chain secure individual blockchains secure sidechain protocol construction allows security chain transfer secure sidechain blockchain mention specifically interoperability currently cryptocurrencies deployed production transfer asset chain transact intermediary exchange furthermore securely interface another blockchain react within enable sidechains allows blockchains communicate interfacing legacy banking available private ledger scalability sidechains originally propose scalability purpose load load blockchain transaction peg enable sidechain specialization avoid mainchain handle transaction within economic sector straightforward shard blockchains  sidechain mainchain explore feature script consensus mechanism without  fork sidechain maintain currency sidechain mainchain feature sidechain prof popular mainchain eventually abandon asset sidechain become mainchain benefit distribute ledger address sidechain security feasibility surprisingly formal treatment contribution formalize notion sidechains propose rigorous cryptographic definition knowledge definition abstract capture security blockchains proof proof stake consensus mechanism critical security feature sidechain formalise firewall catastrophic failure chain violation security assumption chain vulnerable limited liability firewall  generalises concept blockchain firewall described informally blockchain firewall suggests return sidechain amount firewall allows rely arbitrary definition exactly asset correctly forth chain capture validity failure firewall ensures transfer sidechain mainchain reject unless exists necessarily unique plausible sidechain sidechain secure transfer outline concrete exemplary construction sidechains proof stake blockchains conciseness construction described respect generic PoS blockchain consistent ouroboros protocol underlies cardano blockchain currently pure PoS blockchains  nevertheless discus modify construction ouroboros praos ouroboros genesis algorand construction secure standard cryptographic assumption construction chain transfer security assumption chain satisfied namely majority honest stake exists chain  failure maintains firewall damage chain security violate critical consideration sidechain construction safeguard sidechain initial bootstrapping stage  attack construction feature mechanism merge stake allows mainchain stakeholder signal sidechain awareness sidechain without stake sidechain sidechain security maintain assume honest stake majority entity signal sidechain awareness bootstrapping stage superset stakeholder maintain asset sidechain technique facilitate various  chain illustrative focus  mainchain sidechain configuration sidechain node mainchain observation mainchain node cryptographically certify signal sidechain maintainer advantage proof stake underlie protocol achieve mainchain node maintain sufficient information sidechain allows authenticate subset sidechain stakeholder sufficient reliably stakeholder majority sidechain information update regular interval account stake shift sidechain exploit withdrawal transaction sidechain mainchain subset sidechain stakeholder minimise overhead batch authentication information withdrawal transaction sidechain message prepared per epoch refer signal chain certification detail adopt terminology sidechain certificate construct obtain signature slot leader slot previous epoch security parameter subsequently signature combine information convince mainchain node access sidechain sidechain certificate valid abstract notion trust transition cryptographic primitive hoc threshold  ATMS implement distinct simply concatenates signature elect slot leader secure disadvantage implementation sidechain certificate signature improvement achieve employ  merkle hash verification aggregation sidechain certificate signature slot leader participate generation optimistic scheme significant improvement finally  bulletproofs certificate optimally succinct random oracle model active sidechain return asset per epoch construction succinct sidechain certificate optimal storage requirement mainchain related sidechains propose concept notable propose implementation concept formal proof security performance sometimes akin maintain blockchain within sidechain limit potential scalability gain attempt various chain transfer mechanism polkadot cosmos   construction various aspect focus proof private byzantine blockchains federation decentralize lack formal security model analysis threshold multi signature without hoc characteristic related primitive potentially useful enable proof pow sidechains PoS non interactive proof proof nevertheless formal security definition sidechains sidechain construction reiterate focus PoS definition model fully relevant pow II preliminary model employ model formalization capture synchronous semi synchronous communication semi adaptive fully adaptive corruption protocol execution discrete slot player equip roughly synchronize slot assume drift subsume slot slot slr indexed integer UC style execution protocol involve environment functionality access protocol  communication described adversary entity interactive algorithm environment execution activate via input unless corrupt respond activation protocol invoke available functionality semi adaptive corruption adversary influence protocol execution interact available functionality corrupt adversary corrupt permission environment protocol execution capture message upon permission environment adversary corrupts delay slot parameter model fully adaptive corruption corruption immediate model refer semi adaptive corruption oppose static corruption model corrupt execution corrupt relinquish entire adversary activate semi synchronous communication employ delayed diffuse functionality  model semi synchronous communication allows diffuse message per guarantee deliver slot delay within interval adversarial adversary reorder message transit inject message detailed description functionality  appendix completeness refer honest communicate via  semi synchronous sometimes omit context refer synchronous clearly model meaningful security guarantee execute protocol without restriction prevent adversary corrupt participate therefore additional assumption security guarantee assumption satisfied assumption specific protocol consideration explicit statement blockchains ledger blockchain chain denote sequence previous hash blockchains sequence indexed bracket notation indicates ith genesis indicates ith tip blockchain indicates subsequence subchain blockchain inclusive exclusive index negative omit index address subsequence blockchain respectively denotes subchain obtain inclusive exclusive omit subchain blockchain respectively blockchain protocol honest maintains currently adopt chain denote CP chain adopt slot ledger denote bold mechanism maintain sequence transaction blockchain slightly abuse without qualifier interchangeably refer algorithm maintain sequence participant algorithm execute exist ledger bitcoin consists transaction bitcoin network utxo local participant contrast ledger concrete sequence transaction stable ledger typically hence blockchain ledger fix chain defines concrete ledger apply interpretation description ledger obtain blockchain serialize transaction remain maintain  convention ledger belongs bold ledger denote LP ledger ledger slot  ledger pending transaction stable ledger generally sequence denote prefix relation recall definition persistence liveness robust public transaction ledger recent version persistence honest slot LP  liveness honest attempt transaction slot slot liveness parameter honest query report LP ledger satisfies persistence denote resp sequence transaction ledger resp honest finally denotes ledger transaction contains underlie proof stake protocol conciseness construction generic PoS  ouroboros PoS outline appendix construction easily adapt provably secure proof stake protocol ouroboros praos ouroboros genesis algorand understand detail protocol cannot limited overview ouroboros helpful overview interested reader appendix detail protocol ouroboros protocol operates analyze synchronous model semi adaptive corruption slot qualifies slot leader slot become slot leader occurs probability proportional stake independent slot public deterministic computation stake distribution epoch randomness discus shortly randomness slot exactly leader elect elect slot leader slot broadcast transaction stake stakeholder participate protocol valid update reflect chain fork previous multiple slot epoch contains slot security argument security parameter additional slot epoch useful construction epoch indexed index epoch stake distribution slot leader election corresponds distribution ledger slot epoch chosen guarantee epoch consensus chain slot concretely slot epoch slot additionally epoch randomness epoch derive epoch via guaranteed output delivery coin toss protocol execute epoch slot leader available slot epoch treatment refer relevant described protocol  return stake distribution  epoch chain slot epoch  return randomness epoch derive epoch  consensus validity chain verifies hash signature valid belong eligible slot leader  applies chain selection chain chooses fork chain   determines elect slot leader slot epoch stake distribution  randomness moreover function  resp  return index epoch resp slot  resp  denotes epoch resp slot function blackbox manner construction readily adapt PoS protocol structure detail procedure ouroboros achieve persistence liveness assumption synchronous communication semi adaptive corruption majority stake stake distribution epoch honest epoch define security pegged ledger formal definition security desideratum pegged ledger popularly sidechains convey intuition proceed formal treatment protocol maintain ledger ledger potentially asset protocol combination subprotocols ledger denote security assumption denote majority hash stake asset ledger elsewhere adversary entity centralize ledger corrupt assume monotone violate cannot become formally monotone predicate false evaluate execution respective ledger protocol priori unlimited asset asset cryptocurrency simplicity assume asset  treatment easily non  asset specific behavior asset validity asset behaves accord ledger fix operator merge merges ledger ledger denote merge discus concrete instantiation merge later simply assume canonical merge ledger informally execution security definition guarantee subset ledger security assumption satisfied hence uncorrupted ledger individually maintains persistence liveness asset sequence transaction ledger sequentialized via merge operator exist hypothetical sequence transaction compromise ledger merge valid accord validity proceed formalize intuition definition asset syntactically valid transaction asset denote TA valid transaction syntactically valid transaction involve ledger denote TL transaction notational convenience define TA TA TL asset denote asset formally asset TA assume transaction pertains asset belongs ledger distinct TA TA TL TL however treatment easily generalize alleviate restriction generically characterize validity sequence transaction involve asset capture individually asset via notion asset validity simply alphabet asset transaction asset validity capture asset mandate behave denote empty sequence concatenation definition asset validity asset asset validity VA satisfies VA monotonicity VA VA uniqueness transaction VA transaction twice TA VA definition trivial mandate sequence transaction invalid cannot become valid transaction finally reflect uniqueness transaction exist implementation treatment allows simplification definition allows focus asset ledger within sequence transaction definition ledger projection ledger projection respect denote ledger obtain remove transaction simplify notation shorthand   denote projection transaction ledger respect asset individual ledger index naturally define project contains sequence transaction project respect concept transaction capture ledger interoperability syntactic definition transaction ledger mapping mapping TL TL transaction  transaction transaction intuitively transaction TL correspond transaction TL identifies ledger inclusion transaction ledger foresight implementation ledger peg exists transaction eventually valid  response inclusion additionally throughout assume transaction clearly identifiable correspond transaction derive instantiation transaction necessitate action transaction interested mostly transaction action ledger definition ledger transfer ledger mapping refer transaction TL ledger transfer transaction ledger transfer ledger transfer denote  TL formally  TL ledger joint transaction ledger merge operator intuitively merge allows combine multiple ledger transaction across multiple ledger linear ledger input merge global remain ledger foresight ability merge operator enable situation ledger fail respective input merge function merge function definition depends mapping dependence implicit simpler notation definition merge ledger merge function mapping subset ledger ledger merge partition ledger disjoint subsequence merge sequence merge topological soundness transaction  precedes merge validity definition correctness VA validity VA respect mapping merge ledger merge VA index ledger transfer  merge VA source definition ledger transfer asset ledger mandate transaction inclusion transaction consistent VA guarantee transaction indeed liveness security definition ledger protocol protocol possibly dynamically maintains evolve ledger definition peg security ledger protocol peg secure liveness parameter respect assumption ledger merge mapping merge validity VA asset ppt adversary slot satisfied slot negligible probability security parameter ledger persistence satisfies persistence ledger liveness satisfies liveness parametrized firewall  merge   VA source   intuitively firewall guarantee security assumption sidechain violate demand sequence transaction uncompromised ledger valid projection asset validity onto ledger exists sequence transaction compromise ledger justify uncompromised ledger valid sequence actually compromise ledger however ledger longer reliable guarantee uncompromised ledger ahead define validity concrete  constant asset translate mainchain maintain limited liability towards sidechain amount transfer sidechain exceed amount previously towards sidechain plausible sidechain transaction exist justify transfer IV implement pegged ledger construction pegged ledger ouroboros PoS applicable PoS algorand discussion adaptation appendix protocol implement ledger peg security accord definition assumption relative stake adversary detailed challenge implement pegged ledger facilitate secure chain transfer approach transfer refer observation chain certification pegged ledger observation node validates easy enables transfer  certification contains appropriate cryptographic information sufficient validate data issue node allows transfer asset certify accepted node without choice observation chain certification independently direction transfer variant another aspect implement pegged ledger PoS context choice stake distribution underlies PoS chain option independent stake merge stake independent stake coin attribute stake distribution contrast merge stake coin coin via stake declare otherwise remain combination construction exemplary configuration ledger observation apply chain certification  merge stake stakeholder chain development hence node stakeholder oblivious transaction illustrates possibility peg easily adapt configuration ledger reflect asymmetry chain exemplary construction refer mainchain MC sidechain SC elaborate concrete asymmetric fully specify sidechain initialize scratch assume mainchain already exists peg sidechain respect specific asset MC MC MC SC additional asset simplicity assume stake peg accomplish via primary asset presentation construction organize IV introduce novel cryptographic primitive hoc threshold  ATMS fundamental building chain certification afterwards IV secure pegged ledger respect concrete instantiation function merge validity asset IV finally discus specific instantiation ATMS implement pegged ledger introduce primitive hoc threshold  ATMS borrow multi signature threshold signature hoc signer exist IV ATMS useful periodically update anchor trust mainchain sidechain ATMS parametrized threshold digital signature functionality ATMS aggregate public subset aggregate public avk avk sequence individual public aggregate individual signature aggregate signature verify avk impossible individual signature definition ATMS definition ATMS tuple algorithm pgen gen sig ver     pgen parameter generation algorithm security parameter kappa return parameter gen generation algorithm public private vki ski invoke sig ski signature algorithm ordinary signature scheme private message local signature ver pki verification algorithm public message signature return false  VK aggregation algorithm sequence public VK aggregate aggregate public avk  VK avk aggregation algorithm public sequence VK aggregate public avk return false VK avk  VK  signature aggregation algorithm message sequence public VK sequence  local signature verifiable vki vki distinct within VK  combine  later verify respect aggregate public avk VK  avk aggregate signature verification algorithm message aggregate public avk  return false deployment option PoS sidechains definition ATMS correctness ATMS scheme initialize pgen   skn sequence generate via gen VK sequence necessarily unique avk generate invoke avk  VK message  sequence  vki unique sequence VK generate  ski  VK  scheme message sequence ver vki AC  VK avk  avk define security ATMS definition via cryptographic algorithm definition security ATMS scheme pgen gen sig ver     secure ppt adversary polynomial exists negligible function neg  neg algorithm atm function ATMS VK SK   pgen avk    VK   return  avk  avk function function  gen VK VK SK SK return function function    VK return sig SK function function    VK return SK function straightforward secure ATMS tuple pgen gen sig ver EUF cma secure signature scheme ahead  algorithm invoked public participant invoked anyone respective secret public portion publish furthermore adversary generate public private combine define ATMS primitive sidechain construction concrete instantiation ATMS primitive concrete asset  asset fix denote validity VA asset validity construction proof VA allows exhibit feature security treatment illustrate apply complex capable capture smart contract omit extension version account utxo validity manner instantiate VA validity VA asset considers ledger mainchain ledger MC sidechain ledger SC asset transaction TA txid lid sacc rec  txid transaction identifier prevents replay attack assume txid contains sufficient information identify lid inspection syntactic transaction validation lid ledger index transaction belongs index sender ledger  sacc account ledger sender account simplicity assume sacc public account rec index recipient ledger lrec  account public ledger recipient account  lrec denotes local transaction  lrec denotes remote transaction ledger transfer amount transfer signature sender private correspond public sacc plaintext txid sacc rec  correctness lid enforce ledger TA contains transaction lid although sometimes  distinguish account public associate simplicity assume identical derive another assumption essential construction membership algorithm VA detailed algorithm appendix sequence transaction  txm input assume transaction syntactically valid function verifies transaction txi freshness txid validity signature availability sufficient fund account intra ledger transaction rec perform interestingly VA allows ledger transfer transfer express transaction rec transaction lid transaction lid rec transaction identical lid exception txid freshness requirement transaction precede transaction chain transaction similarly intra ledger transaction conform balance conservation VA ledger transaction sender ledger transaction ledger hence asset ledger  lrec validity asset violate validity ensures append sidechain transaction rec eventually valid extend ledger sidechain transaction instantiate  asset outline ledger transfer transaction   lrec  transaction transaction  lrec  lrec otherwise identical lid hence define  lrec exactly transaction instantiate merge easy construct canonical function merge input ledger sequence transaction exploit additional structure blockchains ledger canonical merge ledger lexicographically minimum topologically merge transaction ledger favourably transaction however construction topologically merge function easily statement proposition validity VA accord definition respect merge function define sidechain construction procedure sidechain configuration outline independent stake MC merge stake SC observation MC chain certification SC sidechain creation maintenance asset transfer protocol complex hence protocol detail chosen intention reader easily detail graphical depiction construction reference notation applicable denote analogue mainchain sidechain additional overline pseudocode statement refer action broadcasting transaction maintainer ledger ledger eventually prescribed protocol unless otherwise denote MC resp SC ledger ledger MC resp SC execute protocol similarly denote CMC resp csc currently chain correspond ledger MC resp SC hence MC stable chain CMC sidechain construction rectangle adjacent  omit MC SC epoch dash  epoch signal  activation epoch signal SC awareness SC genesis txsend transaction deposit  transaction deposit txsend transaction withdrawal cert transaction signal trust transition within SC certify pending withdrawal  transaction withdrawal certify cert transaction helper transaction data construction helper transaction blockchains report respective ledger helper transaction appropriate metadata implementation specific peg functionality maintain transaction sidechain sidechain certificate sidechain sidechain failure detailed later moreover concrete implementation pegged ledger extends transaction additional information merkle inclusion proof convenience understood strip transaction blockchain interpret ledger initialisation creation sidechain SC stakeholder mainchain adopt code implement sidechain action stakeholder stake sidechain merely code instal pluggable module client software refer adopt sidechain capture predicate  adoption announce mainchain transaction detailed sidechain identify unique identifier   denote epoch MC adoption transaction sidechain SC activation succeed later epoch jstart slot epoch synchronize MC software module implement sidechain deterministic requirement successful activation sidechain jstart sidechain specific capture predicate  function  respectively typical sidechain MC epoch jstart jstart satisfies jstart  stake MC stakeholder adopt SC constant additionally successful activation failure capture predicate activation failure met predetermine epoch sidechain initialization aborted activation outline detailed description algorithm appendix stakeholder MC sidechain transaction sidechain  mainchain public ATMS freshly generate role explain IV sidechain activation succeed slot epoch jstart stakeholder MC SC construct genesis  SD      SC  randomness leader election MC epoch jstart derive MC epoch jstart reuse compute initial sidechain randomness jstart jstart independently SC ouroboros coin toss protocol furthermore  public parameter aggregate public ATMS scheme creation role IV define mostly notational compatibility SD jstart empty anyway construct  stable stakeholder adopt SC MC transaction sidechain   signify SC initialize sidechain creation expires epoch expiration occurs stakeholder MC SC transaction     MC assume predicate   evaluate MC hence spurious failure transaction invalid maintenance sidechain mainchain sidechain maintain respective stakeholder detailed respective instance ouroboros protocol mainchain maintenance procedure code appendix algorithm algorithm stakeholder stake mainchain stakeholder slot candidate MC chain network model via diffuse functionality filter consensus validity MC  transaction validity  predicate algorithm remain valid chain chooses CMC via  stakeholder evaluates eligible leader slot selection stake distribution  randomness per epoch accordance ouroboros protocol stakeholder slot leader creates transaction currently valid respect CMC per predicate  algorithm appends chain CMC diffuses adopt maintenance procedure SC hence differs algorithm importantly execute stakeholder adopt SC irrespectively stake SC recall slot epoch SC instance ouroboros align slot epoch MC difference  MC CMC naturally replace SC CMC respectively validity chain resp transaction resp predicate  CMC resp  instead predicate  resp  additionally  sequence transaction transaction SC transaction MC intersperse timestamped similarly algorithm straightforward implement sidechain maintainer directly mainchain predicate   algorithm appendix instead stake distribution  distribution SD slot leader selection epoch sidechain  SD contains stake belonging stakeholder adopt SC irrespectively stake MC SC stake SC aware obtain combine distribution SD SC distribution SC aware stake MC SC maintainer via observation MC distribution epoch reflect stake distribution SC aware stake namely slot epoch MC naturally implies fourth parameter  predicate SD instead  finally construction procedure adjust slot epoch sidechain additional ATMS signature sidechain certificate certificate construct described hence whenever mod replace prev valid  certj  certj  certj epoch index deposit SC SC initialize chain transfer MC chain transfer operation consists transaction txsend  MC rec SC identical txi rec contains lid transaction txsend MC transaction  SC whenever stakeholder MC adopt SC transfer fund SC diffuses txsend account SC desire amount honest slot leader MC transaction intra chain transfer transaction maintainer MC account variable  zero whenever txsend MC increase  amount transaction txsend becomes stable MC MC happens slot inclusion stake holder creates diffuses correspond  credit respective amount coin  SC SC akin coinbase transaction transfer exist SC account deposit MC SC relatively merely reliable inclusion txsend MC consequently  SC guaranteed liveness underlie ouroboros instance deposit algorithm code algorithm appendix withdraw MC withdrawal operation cumbersome deposit operation node MC adopt aware sidechain SC transaction withdrawal structure deposit consist txsend  difference SC rec MC transaction handle deposit transaction certificate treatment detailed whenever stakeholder SC withdraw coin SC MC creates diffuses respective transaction txsend transfer detail txsend belongs slot epoch  denote index epoch otherwise  denote index epoch stakeholder epoch  pas   transaction sidechain certificate  generate maintainer SC contains merkle commitment withdrawal transaction txsend SC slot epoch  slot epoch  already stable slot epoch  information maintainer MC inductively validate certificate epoch construction cert detailed assume transaction proof information withdrawal transaction transaction cert broadcast MC network MC  honest slot leader stakeholder withdraw MC creates diffuses transaction  MC transaction MC valid properly contains merkle inclusion proof confirm presence already sidechain certificate amount  MC maintainer decrease  amount transaction code withdrawal algorithm illustrate algorithm appendix certificate transaction construction cert transaction sidechain certificate formally described algorithm appendix role certificate epoch MC epoch denote certj attest withdrawal transaction SC slot slot maintain chain trust MC maintainer cannot verify transaction SC hoc threshold  introduce IV namely certj transaction contains aggregate avkj ATMS previous aggregate avkj certj certj generate SC maintainer contains epoch index pending transaction SC MC sequence transaction SC slot slot transaction SC rec MC picked combine  sort SC pending rangle denote merkle commitment ATMS avkj public slot leader slot epoch threshold hence allows verify signature signature valid respect avkj certj therefore tuple  avkj ATMS signature precede verifies avkj certificate certj construct stake distribution SD SC randomness hence slot leader schedule SC epoch blockchains MC SC slot epoch therefore slot epoch elect slot leader slot already local signature proposal certj deterministic construction certj valid SC chain belonging slot epoch local signature certj chain growth underlie blockchain therefore SC combine signature ATMS later verify ATMS avkj hence certificate certj maintainer MC inclusion transition trust already outline construction ATMS maintain authenticity sidechain certificate epoch epoch inductive detail setup sidechain pgen stakeholder generate invoke ski vki gen gen probabilistic algorithm derandomized fashion coin fix output PRNG init  init fix label hash function ensures uniquely unpredictable suitable ATMS employ public coin parameter ATMS construction induction publish genesis MC stakeholder sidechain message MC ATMS vki subsequently SC initialise stake distribution SD jstart MC participant hence SD jstart jstart slot leader epoch jstart SC refer jstart trust committee trust committee jstart slot leader epoch SC maintainer MC jstart trust committee therefore  public insert genesis SC transaction MC maintainer mainchain correctness  readily verify anyone mainchain procedure  ATMS induction epoch jstart assume exists ATMS previous epoch avkj mainchain maintainer honest SC slot leader slot leader SC epoch local signature sji message  avkj private skj sig skj signature SC maintainer verify epoch index avkj  ensure   avkj VK denote public slot leader SC epoch recomputing merkle commitment  sji valid ver  sji otherwise invalid thanks chain growth underlie ouroboros protocol slot epoch honest sidechain maintainer signature sji desire combine local signature aggregate ATMS signature  sji   combine signature diffuse certj mainchain network mainchain maintainer verify sidechain maintainer  avkj evaluates mainchain effectively committee construct hoc threshold  instantiation ATMS primitive  scheme  construction defer discussion signature ATMS ATMS proof knowledge version homomorphic  individual signature secret belonging necessarily unique public  combine   verify aggregate public avk   ATMS construction procedure pgen gen sig ver exactly  denote merkle commitment arbitrary fix deterministic procedure  sequence public VK vki return avk vki VK  deterministic VK avk simply recomputes verify avk  message signature respective  vki additional public vki aggregate signature    SourceRight click MathML additional feature  denotes unique inclusion proof  merkle commitment vki  finally procedure  message aggregate avk aggregate signature parse verifies public vki indeed belongs leaf commitment VK avk membership proof  computes avk avk  return verifies  signature avk scheme  vki accompany non interactive proof possession pop respective secret pop append public verify communicate protocol conciseness omit proof knowledge description calculation optimistic committee member local signature aggregate avk aggregate signature linear security parameter optimal local signature construction quadratic concrete signature scheme practical parameter cardano implementation signature vki   personal communication mar vki pop vki assume hash function merkle construction data MC optimistic epoch transition avk pending vki pop per epoch participant fail avk vki pop vki pop KB per epoch approximately VI security theorem assumption construction IV implement secure peg accord definition  denote honest majority assumption ouroboros ledger namely  postulate slot majority stake stake distribution sample slot leader slot honest distribution SD SD MC SC respectively assumption amc MC precisely  MC assumption asc SC  MC  SC asc amc SC merge stake hence cannot security guarantee stake MC corrupt worth program SC  MC switch independent stake assumption SC transition  SC respect SD  slot chain become sidechains theorem synchronous  corruption define II construction IV secure ATMS collision resistant hash function peg secure liveness parameter respect assumption amc asc merge VA define IV proof theorem defer version