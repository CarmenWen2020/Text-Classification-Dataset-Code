decentralize exchange DEXs participate financial retain custody fund however transparency blockchain dex combination latency transaction manipulation feasible instance adversary perform exploit typically non public information price asset financial gain formalize analytically  empirically evaluate augment variant sandwich attack involve victim transaction blockchain dex quantify probability adversarial trader undertake attack relative transaction within blockchain adversarial trader earn daily revenue USD perform sandwich attack dex uniswap exchange USD daily trading volume june addition adversary simulate outcome sandwich attack multiple compete adversary account trading environment introduction decade asset trading traditional exchange   collection manipulation technique pump dump scheme trading context cryptocurrencies research date indicates ecosystem awareness  exchange prevent misbehavior exist legislation regulate crypto exchange traditional exchange ignorant trader exploitation  risk decentralize exchange DEXs trader financial asset without asset custody entirety immutable blockchain smart contract offering possibility censorship resistance cannot modify prior execution censorship resistant reliance underlie blockchain public attempt execute within peer peer PP network transparency blockchain layer however combination latency deterministically execute easy undertake hence influence negatively security trader asset focus combination sandwich chain dex knowledge formalize quantify sandwich attack sandwich  trader observes blockchain PP network victim transaction rush squeeze transaction target transaction increase decrease price asset adversary asset afterward asset restrict focus automate maker amm DEXs oppose DEXs limit lob account deterministic enables rely assumption analysis amm DEXs simplify trading algorithmically perform  liquidity ability purchase asset participant uniswap prominent amm dex march amass liquidity nearly USD correspond liquidity amm dex trading volume USD inception november formalize analytically  empirically evaluate sandwich amm DEXs quantify optimal adversarial revenue perform empirical evaluation sandwich attack probability transaction relative within blockchain inform prospect attack finally account scenario multiple adversary likely compete victim transaction perform simulation quantify transaction fee reactive fee counter bidding contest summary contribution formalization sandwich attack mathematical formalization amm mechanism sandwich attack adversary framework manage portfolio asset maximize profitability attack analytic empirical evaluation analytically empirically evaluate sandwich attack amm dex besides adversarial liquidity taker introduce sandwich attack perform adversarial liquidity provider quantify optimal adversarial revenue validate uniswap exchange dex USD trading volume empirical adversary achieve average daily revenue USD without collusion miner absence adversary likelihood transaction another transaction within blockchain transaction fee payment strategy wei multiple attacker simulate sandwich attack multiple simultaneous attacker reactive counter bidding strategy presence attacker respectively reduce profitability attacker eth USD victim transacts eth dai uniswap transaction pending PP layer blockchain congest victim transaction remains pending longer average interval attacker becomes harder attain dex security scalability tradeoff uncovers inherent tension security scalability amm dex dex securely zero price slippage likely fail transaction volume adversarial trader profit otherwise II decentralize exchange decentralize exchange blockchains blockchains bitcoin enable peer transact without trust intermediary core component blockchain hash link chain miner data structure accumulates transaction blockchains execution smart contract constitutes building exchange crucial aspect blockchain transaction execute sequence sequence dependence blockchain exchange detailed extensively exchange built component price discovery mechanism clearing blockchains component encode within smart contract construct decentralize non  exchange non  guarantee trader retains custody asset exchange component implement within smart contract exchange qualifies chain dex clearing realize within smart contract exchange centralize retain non  dex component dex liquidity provider taker liquidity provider participant liquidity financial asset liquidity taker participant asset exchange another asset liquidity liquidity provider distinguish variety dex mechanism price discovery asset stipulates price quantity liquidity provider quote bid price associate volume compete liquidity taker liquidity provider demand liquidity taker facilitate refer automate maker amm predefined pricing algorithm automatically performs price discovery asset within liquidity pool liquidity provider therefore monitor adjust bid price liquidity taker directly amm liquidity automation serf reduce chain transaction mechanism particularly suitable smart contract DEXs underlie blockchain limited transaction per tps amm mechanism denote asset compose asset amm asset consists liquidity pool respectively asset asset liquidity pool amount asset deposit liquidity provider asset liquidity pool amount asset deposit liquidity provider definition depth amm define amount asset amount asset liquidity pool blockchain denote amm DEXs action  liquidity provider deposit asset asset correspond liquidity pool equation  source  liquidity provider  asset asset correspond liquidity pool equation  SourceRight click MathML additional feature  liquidity taker asset increase available liquidity asset exchange asset decrease available liquidity asset equation fee asset respectively calculates amount asset purchase liquidity taker amm exchange chose custom pricing function asset exchange exchange asset pricing cannot constant dynamic purchasing model within exchange asset purchase fee  source constant amm simplest amm mechanism constant maker constant arbitrary asset focus constant model liquidity prevalent amm model denotes remains constant upon taker transaction liquidity provider deposit  pool fund equation  constant amm   SourceRight click MathML additional feature price slippage price slippage price asset price slippage increase decrease price volume available liquidity expectation quantity slippage unexpected price slippage refers additional increase decrease price slippage  submission commitment execution expectation error exchange liquidity actual slippage challenge foresee formation accurate expectation challenge definition execution price liquidity taker issue taker execute execution price amm algorithm slippage execution price difference liquidity taker issue transaction transaction execute amm induce unexpected slippage execution price unexpected price slippage difference unexpected slippage rate unexpected slippage price slippage liquidity taker intend asset exchange price quote asset however amm dex executes transaction price increase liquidity taker unexpected slippage slippage negative liquidity taker asset execution price decrease liquidity taker correspond unexpected slippage sandwich attack amm DEXs traditional financial  trading strategy involves exploit typically non public information pending materially price asset buying asset beforehand asset price runner seek asset pending transaction executes amm DEXs aim mitigate  transparency available liquidity asset pending perform therefore remove role played non public information however amm DEXs exacerbate  quote asset price fully deterministic relative certainty price impact enables adversary perform attack predictable outcome sandwich attack constant amm asset exchange liquidity taker attack liquidity taker liquidity provider attack liquidity taker price slippage amm dex visualize unexpected slippage TA amm TA suffer unexpected slippage concurrent transaction exist TB executes TC assume network delay TC TD underlie induce unexpected slippage TB fundamental intuition delay transaction execute allows adversary profit exploit knowledge direction price attack sandwich attack victim transaction sandwich adversarial transaction model blockchain PP network victim initiate amm dex adversary observes pending victim transaction transaction within memory mempool spy node custom ethereum client miner chooses transaction within accord policy VI victim transaction crypto currency asset eth dai sai veri another crypto asset blockchain fork blockchains typically delayed finality transaction within sandwich attack threat model computationally bound economically rational adversary vii extend threat model multiple adversary observes zero confirmation transaction TV victim trader blockchain PP network adversarial trader issue transaction TA transaction fee propagation TA within blockchain prior TV VI focus novel adversary collude miner weaken adversary quantify bound feasibility profitability propose attack outside adversary collude bribe miner influence transaction within fork chain discard unsuccessful attack moreover assume attack victim transaction independent concurrent attack towards victim transaction liquidity taker attack taker attack liquidity taker target victim liquidity taker emits blockchain PP network amm dex transaction  formalize adversary emits transaction exploit victim transaction TV transaction unconfirmed blockchain PP network miner  execute within adversary influence adversarial transaction relative victim transaction transaction fee amount VI refer interested reader appendix technical detail involve transaction adversarial liquidity taker attack victim taker amm dex transaction TV specifies slippage protection amm adversary goal TA TV TA sequence liquidity provider attack taker novel sandwich attack liquidity provider target victim liquidity taker transaction  blockchain PP network upon victim transaction adversary emits transaction  increase victim slippage  restores pool liquidity  restores asset balance  transaction reduces liquidity amm dex increase victim unexpected slippage  transaction restores percentage liquidity attack finally transaction   adversary balance asset attack liquidity provider earn commission fee proportional liquidity amount asset amm dex attack adversary  asset liquidity pool TV executes  commission fee victim transaction refer interested reader appendix technical detail adversarial liquidity provider attack victim taker TV transacts asset asset adversarial liquidity provider attack victim taker TV transacts asset asset model limitation margin leveraged trading margin trading borrow fund amplify trading profit loss trader commits percentage margin eth dai eth trader commit eth collateral reflect expectation eth price decrease whereas reflect margin platform lend trader eth convert asset dai eth price decrease trader margin profit limitation chain margin platform utilize amm exchange recently attack  platform chain margin enable adversary reduce requirement sandwich attack transaction fee opening closing margin margin trading unlikely affect adversary monetary revenue victim configures fix slippage blockchain fork impact stale analysis transaction stale fork chain confirm chain stale transaction typically inject blockchain client mempool stale  chain stale injection adversarial victim transaction increase failure rate sandwich attack quantitative future IV analytical evaluation perform analytical evaluation sandwich attack uniswap uniswap popular dex average provider per USD liquidity uniswap inception november november identify volume eth USD archive geth node core intel cpu 0GHz 4GB ram TB ssd evaluation uniswap parameter adopt liquidity pool distribution ethereum november analytical sandwich attack adversarial liquidity taker ethereum  eth sai uniswap eth sai eth dai uniswap eth dai information constant formula II plot revenue adversarial taker perform sandwich attack another taker visualize unexpected slippage threshold plot adversary TA TA eth USD eth USD worth transaction fee amount eth transact victim adversarial revenue unexpected slippage protection adversarial taker gain revenue eth USD victim transaction trading eth sai uniswap contrast adversary gain revenue eth USD victim eth instead analytical sandwich attack liquidity taker taker uniswap fee unexpected slippage TV transacts eth sai max revenue TV eth sai sai eth profit eth USD eth fee sub legend apply sub optimal adversarial revenue uniswap exchange coin adversary focus liquidity quantify maximum revenue adversary conditional suitable victim transaction mkr liquidity eth mkr sai eth sai  eth   eth  dai eth dai minimum profitable victim input victim transaction yield profitable attack exchange quantify minimum profitable victim input min input eth transaction fee commission adversary unable profit eth sai per minimum profitable victim input amount increase liquidity pool adversary optimal input increase slightly horizontal victim transaction eth transact victim relatively amount eth uniswap exchange fix slippage liquidity sai mkr yield potential revenue liquidity  dai appropriate victim transaction adversarial liquidity provider revenue adversarial liquidity provider TV visualize adversarial eth USD eth USD adversary withdraw limited amount liquidity without trigger slippage protection victim transaction remove liquidity amm liquidity provider forgo commission uniswap gauge profitability TV purchase eth sai uniswap exchange unexpected slippage optimal strategy withdraw liquidity pool revenue eth USD adversary passive liquidity provider liquidity pool earn eth USD commission loses honest liquidity provider lose purchase eth sai without trigger slippage protection transaction adversary sai amount eth sai addition transaction increase liquidity pool eth sai eth sai attack liquidity pool remains eth sai gain eth liquidity pool sandwich attack optimal revenue adversarial taker uniswap fee eth optimal adversarial revenue quantify optimal adversarial revenue  opportunity liquidity provider uniswap conditional suitable victim transaction  commission fee relatively stable fix slippage adversary satisfy victim slippage limit quantify minimum victim input impact coin erc token configurable coin  uniswap exchange comma plot curve sai instead minimum victim transaction amount increase eth eth victim purchase eth sai minimum victim transaction amount increase eth eth eth sai transaction minimum profitable victim input uniswap fee eth unexpected slippage liquidity taker yield profit TV eth sai overall attack overall analytically evaluate adversarial liquidity taker provider profit undertaking sandwich attack optimal adversarial revenue however depends slippage protection fix unexpected slippage adversary revenue increase linearly amount eth transact adversarial taker provider alternatively fix slippage unexpected slippage yield upper bound victim transaction adversarial optimal profit empirical evaluation experimental setup corresponds model modify adversarial parity client increase maximum transaction pool unconfirmed transaction mempool default python script subscribes modify pub sub functionality parity listens pending transaction target uniswap script computes profitability victim transaction adversarial strategy prof profitable script generates propagates correspond transaction conduct ethereum network eth veri uniswap attack transaction eth veri liquidity eth veri USD uniswap exchange uniswap UI ensure sufficiently representative adversarial node aws ireland vcpu amd epyc ghz nvme ssd max gbps network outcome adversarial transaction TV transaction successful adversarial transaction TV fail sandwich attack liquidity provider taker uniswap fee TV sai eth unexpected slippage achieve max revenue TV remove liquidity eth sai regain liquidity deposit eth sai TV upon rebalancing eth gain profit eth USD eth minimum profitable victim input sai uniswap fee unexpected slippage adversary eth fee cannot gain profit TV sai eth sai comma instead min victim transaction amount increase eth compute adversarial transaction compute optimal adversarial input amount maximum amount transact without slippage protection denote compute binary calculate attack profitable input attack profitable profitable finally uniswap integer exist profit perform ternary optimal input liquidity taker attack taker issue attack TV purchasing veri eth TV trigger uniswap UI default unexpected slippage default  price gwei attack report II average adversary discovers TV within compute TA TA TV remains adversary mempool average achieve rate attempt fail victim transaction TV remain adversarial mempool attack partially successful transaction TA later TV TA TA TV TV respective TV mostly network congestion liquidity provider attack taker initialize adversary liquidity eth veri uniswap contract issue TV purchasing veri eth via uniswap UI  gwei attack adversarial node attack II summary TV remains average mempool blockchain network congest adversarial transaction relatively closer TV within achieve rate attempt II liquidity taker provider attack taker victim transaction TV trigger manually  uniswap UI adversarial node victim difference  adversarial revenue understand financial potential attack estimate theoretical revenue exchange uniswap UI recent assume eth transaction fee within report adversary achieve revenue USD attack taker USD attack liquidity provider transaction profitable attack taker attack provider estimate adversarial revenue exchange uniswap UI assume adversarial eth data slippage adversary understand taker configure slippage plot estimate distribution slippage maximum unexpected slippage calculate slippage transaction therefore slippage estimate taker transaction uniswap transaction average slippage average unexpected slippage estimate maximum permit unexpected slippage uniswap transaction taker maximum unexpected slippage uniswap default estimate maximum permit unexpected slippage uniswap transaction taker maximum unexpected slippage uniswap default overall attack empirical adversarial liquidity taker provider profit undertaking sandwich attack victim uniswap default slippage protection strategy slippage crawl previous transaction uniswap unexpected slippage configuration default slippage therefore profit rate fail mainly ethereum network congest veri relatively inactive VI miner transaction crucial aspect potential profitability sandwich attack miner transaction within blockchains typically prescribe specific consensus loose requirement miner transaction within gain insight crawl ethereum blockchain uniswap launch constitute equivalently data classify transaction empty without transaction price transaction sort descend accord price transaction parity default transaction split accord parity prioritization local transaction penalize transaction within transaction sort descend accord transaction price unknown transaction price parity default strategy treatment transaction depends ethereum client ethereum client geth respectively parity geth sort transaction individual sender account sort nonce afterward merge sort price transaction account parity default prioritizes local retract transaction polish transaction computation sort price transaction local via rpc interface sender transaction locally manage account miner modify transaction inclusion policy arbitrarily individually categorize analyze price transaction extract price transaction sender ignore transaction sender transaction price transaction another transaction nonce extract price sort classify price strategy alternatively verify price consists multiple sublists price price within sublist sort descend sublist priority transaction within priority sort price sublists price local retract normal penalize classify parity default otherwise unknown parity geth sort transaction default price identify client miner moreover heuristic misclassify price instead parity default strategy miner local transaction transaction price classify parity default therefore regard bound future develop precise client fingerprint strategy miner transaction IV roughly miner transaction price likely geth strategy transaction parity default strategy consistent client usage distribution empty miner unknown conclude transaction target transaction probability sufficient wei price wei assume absence adversary transaction price accord source code parity geth transaction fifo principle overall miner transaction price dominance transaction aid adversary likely adversary placement transaction tweak price transaction price distribution investigate price transaction transaction data price eth transaction belong miner transaction average price gwei median price gwei frequently price gwei transaction vii multiple adversary prior analysis considers adversary analyze implication multiple attacker feasibility profitability sandwich attack simulation IV classification miner ethereum miner switch strategy moreover miner strategy transaction price parity default strategy address sole miner empty IV classification miner ethereum miner switch strategy moreover miner strategy transaction price parity default strategy address sole miner empty miner transaction methodology miner transaction methodology extend threat model extend threat model account additional attacker simplicity assume adversary access financial resource internet connection latency computational identify parameter impact outcome simulated attacker intuitively adversary attack victim transaction TV harder endeavor becomes attacker adversary simultaneously attack TV attacker strategy previous suggests transaction fee bidding strategy namely adaptive reactive counter bidding non adaptive blind adversarial strategy assume adversary reactive counter bidding strategy adversary emits transaction fee bid adversary observes compete transaction strategy necessarily optimal estimate bound sandwich attack transaction assume adversary rational attack parameter strategy adversary attempt maximize profit fully exploit victim transaction slippage player VI transaction permutation adversarial transaction adversary manages execute transaction successfully sandwich attack victim transaction fails execute sandwich attack adversary irrational insists execute attack disregard slippage protection adversary lose adversarial transaction fail TA TV TA extend model network layer adversarial transaction propagates within blockchain PP network influence reactive counter bid receives transaction related extensively asynchronous blockchain PP propagation propagation affected factor network topology node internet latency bandwidth network congestion etc assume adversary directly establishes connection miner victim thereby abstract away node network network topology intermediate device replay node route switch tcp congestion equation approximate transaction propagation duration   latency source distribution transaction crawl raw transaction uniswap dai consecutive measurement transaction byte parameter assume normal distribution adversarial victim transaction latency bandwidth distribution percentile statistic apply linear interpolation estimate underlie cumulative probability distribution vii VI adversarial payoff player assumption player rational transaction TA regardless transaction transaction succeed denote transaction fails denote vii latency bandwidth statistic model previous vii latency bandwidth statistic model previous transaction fee transaction price blockchain transaction congestion compete transaction seek influence pace transaction simulation sample price victim transaction normal distribution gwei uniswap dai assume victim sufficient transaction fee transaction empirical data suggests ethereum average interval therefore sample duration victim transaction mempool uniform distribution network congest transaction ethereum mempool longer sometimes however avoid analysis longer pending duration simulation multiple player adversarial transaction fee likely render attack unprofitable miner assume miner transaction descend price maximize revenue VI besides miner configure price bump percentage replace exist transaction mempool geth client configures price bump percentage parity simulation profit adversarial liquidity taker IV adversary uniswap dai slippage victim transaction fix minimum profitable victim input eth USD visualize revenue simulated transaction transaction calculate simulated price consume adversarial transaction consumption randomly sample normal distribution uniswap dai average consumption grows exponentially victim transaction assumption increase transaction price increase adversary competitive attack instance simulation suggests sandwich attack profitable victim transaction remain pending PP network adversary respectively victim transacts eth dai refer interested reader visualization simulation multiple provider attack taker multiple attacker expectation revenue adversary minus transaction fee overhead specifically presence attacker respectively reduce profitability attack victim transacts eth dai uniswap transaction pending PP layer blockchain congest TV remains pending attacker becomes harder attain related besides amm dex decentralise exchange exist limit auction trust hardware payment channel frequency trading related thoroughly rush adversary blockchain transaction strategically malicious blockchain network node miner transaction affect transaction execute within blockchain cryptographic literature capture rush adversary interact protocol financial frequency trading  literature explore trading strategy economic impact arbitrage news reaction strategy etc traditional traditional strategy applicable amm decentralize exchange introduce concept price auction pga trading bot concept miner extractable MEV previous  performance strongly associate latency execution multiple  discover financial exchange besides traditional manipulation technique pump dump scheme previous technique spoof ping misinformation leverage technology social medium artificial intelligence technique trick  algorithm counterbalance inherent trust regulator conduct periodic costly manual audit broker exchange unveil potential misbehavior challenge task dex weak identity regulation simulated sandwich attack compete adversarial liquidity taker taker uniswap fee unexpected slippage simulated sandwich attack compete adversarial liquidity taker taker uniswap fee unexpected slippage simulated price transaction adversary perform reactive counter bidding attack visualize confidence interval simulated price transaction adversary perform reactive counter bidding attack visualize confidence interval IX conclusion version sandwich attack deterministic amm dex combination delay inherent chain exchange transparency DEXs desirable however user asset security risk liquidity provider liquidity taker exploit  trader combination fix trivial slippage trader likely fails cryptography defense moreover affect usability amm DEXes due multiple interaction trust chain component appendix multiple compete adversary sandwich attack remain profitable shed dilemma DEXs default slippage dex scalable per default slippage adversary profit attention unsolved issue engenders future secure decentralize finance