federate FL enables client collaboratively global model gradient synchronize epoch local training however centralize server aggregate gradient compromise forge violate privacy launch attack incurs verify integrity aggregation explore communication efficient verifiable aggregation FL propose VeriFL verifiable aggregation protocol dimension independent communication computation verification epoch client dimension gradient vector FL application dimension independent communication desirable client limited bandwidth dimensional gradient addition propose protocol FL secure aggregation subset client protocol execution experimental protocol efficient setting introduction federate FL become popular paradigm distribute machine nowadays facilitates usage sensitive datasets distribute client mobile phone mobile device sensor without data FL global model subset user instruct upload local parameter synchronous epoch update global model centralize server adopt aggregate parameter user sends update global model user update local model accord global training model convergence federate trivial attack framework federate attack launch adversary corrupt server subset client despite appeal functionality FL vulnerable attack gradient vector uploaded client leak sensitive information private dataset address issue author propose secure aggregation protocol guarantee privacy gradient however recent addition gradient privacy integrity aggregation server easily become failure FL without integrity guarantee server compromise adversary server manipulate global model misclassification involve client specify data consequence backdoor attack lack integrity guarantee aggregation restrict commercial application FL attack corrupt server global model update epoch poison data return model honest client aim misclassification client attack modify aggregation aforementioned attack mitigate verifiable aggregation protocol protocol FL adversary cannot convince honest client accept forge aggregate gradient overwhelm probability definition certainly resist inference attack exploit non encrypt gradient verifiable aggregation protocol secure guarantee input privacy client informally adversary aggregation protocol learns gradient client protocol transcript definition focus realize secure verifiable aggregation protocol communication efficient resource constrain device mobile device google bandwidth resource constrain expensive client global model iteration communication becomes important consideration FL protocol verifiable aggregation protocol communication computation training factor influence communication efficiency verifiable aggregation protocol parameter model particularly important verifiable aggregation protocol communication verification independent parameter model communication efficiency FL research hotspot knowledge previous succeed communication efficient verifiable aggregation protocol communication efficient FL guarantee integrity aggregation recent achieves secure verifiable aggregation zero knowledge proof enforce honest aggregation however communication verification linearly dependent dimension gradient vector linearly communication impractical intend application scenario FL mobile device moreover computation verification unsatisfactory due zero knowledge MB outgo communication computation per client verify aggregation dimensional parameter vector client another trivial achieve verifiable aggregation generic multiparty computation mpc approach communication computational overhead addition communication efficiency verifiable aggregation protocol computation efficient challenge contribution challenge verify integrity aggregation straightforward homomorphic hash compute digest gradient vector aggregate combine hash obtain hash aggregation client hash aggregation hash verify aggregation although yield desirable feature verification communication independent gradient dimension security guarantee security challenge everyone construction access homomorphic hash function simulation proof simulator input gradient vector honest client simulate hash simulate simulator dummy vector however dummy overwhelm probability everyone adversary homomorphic hash function aggregation inconsistency combine hash aggregation immediately yield efficient distinguisher fails simulation straightforward construction secure author security challenge combine homomorphic hash zero knowledge proof however due dimension wise zero knowledge proof protocol expensive computation communication verification linear gradient dimension dimension dependence  gradient dimension FL application motivate another achieve verifiable aggregation overcome security challenge concrete efficiency communication computation contribution communication efficient protocol VeriFL verifiable aggregation FL VeriFL achieves KB dimension independent outgo communication computation per client verify aggregation dimensional parameter vector client outperforms communication computation parameter vector specifically contribution secure verifiable aggregation verify integrity aggregation combine linearly homomorphic hash commitment scheme aggregation server submit gradient consistent previously broadcast hash collision resistance hash scheme guarantee server cannot honest client accept forge addition overcome aforementioned security issue sufficient equivocal commitment scheme achieve security without zero knowledge proof observation develop novel verifiable aggregation protocol notably secure aggregation protocol protocol composable secure protocol mask technique extra functionality secure aggregation protocol achieve aggregation compute server reveal dimension independent communication overhead protocol communication overhead integrity verification independent dimension gradient vector parameter FL model significantly bandwidth client achieve client commit hash gradient vector instead vector commitment facilitate security proof independent gradient dimension linear homomorphism hash scheme ensures sum hash hash sum vector helpful linearly homomorphic hash compress dimensional gradient vector preserve addition approximately halve computation overhead succeed reduce verification construction computation amortize verification protocol consume operation linearly homomorphic hash expensive modular exponentiation dimension gradient vector former generate message future verification inevitable however latter performs integrity verification amortize random coefficient compute linear combination hash aggregation epoch combine hash hash linear combination coefficient aggregation epoch performs integrity verification batch latter amortize factor batch computation overhead approximately reduce former hash II federate secure aggregation federate framework FL summarize user FL access private dataset epoch aggregation server randomly subset user parameter vector obtain previous epoch initialize randomly user locally minimize empirical loss dataset update local model upload gradient aggregation server upon gradient user typically server average gradient obtain update global model   training model convergence secure aggregation author secure dropout tolerant aggregation protocol mask technique specifically mask gradient vector mask generate owner pairwise mask generate client masked gradient denote prg mask     pairwise mask mod SourceRight click MathML additional feature modulus aggregation secret sample   pairwise protocol briefly summarize semi honest version protocol semi honest version protocol adversarial model adversary adversary semi honest additional instruct corrupt server forge aggregation arbitrarily knowledge transcript adversary corrupt aggregation server subset data client semi honest model corrupt gradient honestly notation introduce gradient vector belong  aggregation  bound adversarial model adversary aim infer private gradient honest convince honest forge aggregation goal protocol privacy gradient guarantee integrity aggregation however adversary query model launch statistical attack prevent leakage output functionality implement cryptographic protocol moreover attack precisely infer sensitive information honest neural network generalize FL private input honest previous approximate model converges forge approximate aggregation suffices adversary input corrupt accord partial sum input honest previous observation model replacement attack bypass secure aggregation protocol perturbation significantly affect behaviour machine model prevent attack FL setting another scope literature multiparty computation focus prevent adversary forge aggregation attack model replacement attack adversary chooses input accord protocol transcript challenge multiparty computation cannot distinguish corrupt input without apriori knowledge input VeriFL efficient verifiable aggregation notation denote integer integer denote integer modulo positive integer prime denote vector denote bold entry denote index finite cardinality algorithm assign output otherwise uniformly drawn security parameter denote negl denote negligible function denote algorithm invoked public input secret input formulate pseudo random generator prg  modulus vector dimension cryptographic primitive linear homomorphic hash linearly homomorphic hash scheme consists polynomial algorithm LHH LHH  LHH hash LHH eval detail algorithm construct assume hardness discrete logarithm LHH  input security parameter dimension algorithm output public parameter  description cyclic prime generator distinct simplicity presentation public parameter implicitly parameter LHH hash LHH eval LHH hash dimensional vector input algorithm output linearly homomorphic hash LHH eval hash coefficient linear combination algorithm output linear combination hash  construction LHH satisfies definition collision resistance respect collision  LHH  LHH  LHH   adversary input   distinct vector output iff LHH hash LHH hash wise output definition collision resistance LHH collision resistant ppt adversary exists negligible function negl advantage  LHH  LHH negl sourcefor security parameter vector dimension commitment commitment envelope cannot commit commit secret others decommitment commitment scheme security without communication overhead verification formally security protocol equivocal commitment scheme roughly someone possess trapdoor equivocal commitment scheme commitment however committers trapdoor enables simulator proof fool distinguisher achieves  consequently IV non interactive equivocal commitment scheme define tuple polynomial algorithm com com setup com commit com decommit com equiv com setup input security parameter algorithm output public parameter  trapdoor message commitment  simplicity presentation public parameter implicitly parameter algorithm com commit algorithm committer input message commit uniform randomness output commitment publicly publish randomness serf decommitment commit message secret opening com decommit algorithm receiver input commitment claimed commit message claimed randomness commit com commit output otherwise output com equiv algorithm input commitment com commit desire arbitrary message trapdoor output valid randomness   com formally define definition  com equivocal uniform randomness exists negligible function negl  com setup com commit com equiv com decommit negl SourceRight click MathML additional feature security parameter symmetric encryption symmetric encryption scheme define tuple SE SE keygen SE enc SE dec SE keygen input security parameter algorithm output secret symmetric SE enc algorithm input message encrypt symmetric output algorithm ciphertext SE dec algorithm input ciphertext decrypt correspond symmetric output algorithm message SE enc SE ind cpa secure agreement agreement scheme generate pairwise symmetric encryption generate  prg agreement scheme define tuple KA KA setup KA keygen KA KA setup input security parameter algorithm output public parameter  simplicity presentation public parameter implicitly parameter algorithm KA keygen algorithm generates KA ski  algorithm input secret ski public  output private aki secret secret dropout protocol preserve input privacy secret scheme define tuple SS SS setup SS SS combine SS setup input security parameter algorithm output public parameter  message simplicity presentation public parameter implicitly parameter algorithm SS algorithm input threshold secret output algorithm secret denote assign distinct holder SS combine algorithm input threshold subset output algorithm secret achieve efficient verifiable aggregation verifiable aggregation integrity aggregation achieve FL framework preparation client submit gradient vector server client generate linearly homomorphic hash gradient vector commitment hash formally generates LHH hash com commit sourcein linearly homomorphic hash commitment uniformly random secretly sample serf decommitment commitment client gradient vector server receives client respectively verification client receives server aggregation asks client decommitment com decommit sourcein preparation equality aggregation regard forge terminates output otherwise equality hash LHH hash LHH eval item sourceif equality aggregation verification accept otherwise regard forge terminates output dimension independent communication overhead reduction communication overhead verification usage hash commitment recall outgo message verification client epoch consists commitment decommitment carefully instantiate com commitment decommitment constant outgo communication verification constant independent dimension gradient vector epoch outgo communication verification incoming communication approximately halve computation overhead protocol consume operation verification LHH hash reduce computation overhead verification client verification amortize manner random coefficient compute linear combination hash aggregation epoch combine hash hash linear combination coefficient aggregation epoch formally preset batch aggregation epoch replace aforementioned verification amortize verification amortize verification equality commitment remains unchanged commitment epoch however LHH eval item sourcein prime  hash compute client epoch verifies equality LHH hash  LHH eval  equality equality aggregation pas verification accept otherwise regard forge terminates output LHH hash equality aggregation epoch LHH hash equality amortize factor LHH hash amortize computation verification epoch reduce approximately halve privacy concern dropout tolerance verifiable aggregation protocol FL framework preparation amortize verification composable secure summarize secure verifiable aggregation protocol modify  secure protocol serf aggregation phase composite protocol notably dropout tolerance preserve therefore aggregation phase protocol robust client dropout however potential dropout client report decommitment  extra  introduce extra guarantee client survive dropout amortize verification  tolerate dropout additional computation secret  therefore verification computation verifiable aggregation protocol secure aggregation functionality version VeriFL protocol version VeriFL protocol cryptographic primitive define aggregation phase privacy preserve verifiable aggregation protocol aggregation phase privacy preserve verifiable aggregation protocol verification phase privacy preserve verifiable aggregation protocol verification phase privacy preserve verifiable aggregation protocol IV security analysis protocol ensures integrity aggregation definition privacy individual input definition recall protocol aggregation server building instantiate security parameter verification perform batch threshold dropout survive dropout corrupt aggregation phase fix kappa ell mathcal define mathcal polynomial algorithm message function corrupt mathcal identifier mathcal index transcript corrupt mathcal joint randomness mathcal execution corrupt mathcal mathcal output message reference CRS protocol protocol secure CRS hybrid model specifically accord CRS functionality simulator trapdoor underlie commitment scheme therefore CRS hybrid model simulator protocol obtain trapdoor simulate CRS functionality trapdoor simulated consistent definition integrity aggregation definition integrity achieve adversary forge aggregation client commit homomorphic hash respectively detect overwhelm probability definition integrity aggregation epoch textbf langle rangle partially aggregation input honest mathcal langle rangle textbf langle rangle input corrupt mathcal mathcal langle rangle cap mathcal hash compute commit  integrity aggregation verification batch ell adversary honest accept forge aggregation epoch batch negligible probability align mathrm mathcal output perp array mathcal mathcal setminus mathcal mathcal subseteq ell boldsymbol langle rangle leftarrow boldsymbol langle rangle sum nolimits mathcal langle rangle cap mathcal boldsymbol langle rangle boldsymbol langle rangle mathbb boldsymbol langle rangle leftarrow mathcal mathcal mathcal boldsymbol langle rangle mathbb boldsymbol langle rangle neq boldsymbol langle rangle array qquad qquad qquad qquad qquad qquad qquad qquad qquad geq textsf negl kappa align SourceRight click MathML additional feature definition define input privacy client existence adversary definition aim capture adversary corrupts server subset learns protocol transcript partially aggregation honest adversary learns simulated simulator without secret internal honest knowledge gradient client specifically input privacy define adversary corrupt data simulated partially aggregation honest definition input privacy input privacy honest client exists ppt simulator boldsymbol sim mathcal threshold security parameter kappa batch ell input textbf mathcal mathcal langle rangle mathcal langle rangle mathcal langle rangle mathcal langle rangle ell mathcal mathcal ell align mathcal supseteq mathcal langle rangle mathcal langle rangle supseteq mathcal langle rangle mathcal langle rangle supseteq mathcal langle rangle mathcal langle ell rangle supseteq mathcal supseteq mathcal align sourceand corrupt mathcal mathcal subseteq mathcal cap mathcal mathcal setminus mathcal output boldsymbol sim computationally indistinguishable output textsf mathcal mathcal kappa align hspace textsf mathcal mathcal kappa textbf mathcal mathcal langle rangle mathcal langle rangle mathcal langle rangle mathcal langle rangle ell mathcal mathcal approx textsf sim mathcal mathcal kappa textbf mathcal textbf langle rangle ell mathcal langle rangle mathcal langle rangle mathcal langle rangle mathcal langle rangle ell mathcal mathcal align sourcewhere align boldsymbol langle rangle sum mathcal langle rangle setminus mathcal boldsymbol mathcal langle rangle geq perp otherwise align source lemma assume hardness discrete logarithm security boldsymbol com  verification honest client accept aggregation textbf langle rangle ldots textbf langle ell rangle honestly aggregate server overwhelm probability proof assume exists ppt adversary succeed honest mathcal output forge aggregation textbf langle rangle neq textbf langle rangle sum textbf langle rangle mathcal subseteq ell  mathcal output perp decommitment  successfully decommitment langle rangle langle rangle mathcal mathcal langle rangle cap mathcal adversary freedom decommitment  chooses malformed decommitment decommitment  fails non negligible probability com binding argument applies adversary sends mathcal incorrectly reconstruct decommitment honest  argument implies adversary cannot hash commit  behalf corrupt without mathcal output perp recall protocol specification honestly aggregation textbf langle rangle hash satisfy align textsf LHH textsf hash textbf textsf LHH textsf hash sum ell alpha textbf langle rangle prod sum ell alpha textbf langle rangle prod sum mathcal alpha textbf langle rangle cdot prod sum ell setminus mathcal alpha textbf langle rangle align SourceRight click MathML additional feature meanwhile unchanged hash commit  another linear combination overline textbf leftarrow sum mathcal alpha textbf langle rangle sum ell setminus mathcal alpha textbf langle rangle therefore align hspace textsf LHH textsf hash overline textbf textsf LHH textsf hash sum mathcal alpha textbf langle rangle sum ell setminus mathcal alpha textbf langle rangle prod sum mathcal alpha textbf langle rangle cdot prod sum ell setminus mathcal alpha textbf langle rangle align SourceSince mathcal output perp textsf LHH textsf hash overline textbf equation prod sum mathcal alpha textbf langle rangle prod sum mathcal alpha textbf langle rangle equation sourcewhere textbf langle rangle neq textbf langle rangle mathcal coefficient alpha mathcal uniformly drawn mathbb textsf LHH textsf hash overline textbf equation sum mathcal textbf langle rangle sum mathcal textbf langle rangle equation sourcein textbf langle rangle neq textbf langle rangle mathcal happens probability mathbb negligible security parameter kappa textsf LHH textsf hash overline textbf equation sum mathcal textbf langle rangle neq sum mathcal textbf langle rangle equation SourceRight click MathML additional feature induces collision LHH readily ppt adversary binding com collision resistance definition LHH non negligible probability infeasible assumption completes proof theorem assume hardness discrete logarithm security boldsymbol com VeriFL achieves integrity aggregation accord definition proof theorem straightforward lemma theorem assume security SE KA SS com VeriFL achieves input privacy accord definition CRS hybrid model proof proof identical theorem additionally hash commit  sim input honest compute hash commitment strategy sim hash dummy vector commit dummy hash com hiding secret scheme hide message joint aggregation phase mathcal indistinguishable textsf mathcal mathcal kappa remains joint verification phase mathcal simulated sim simulated commitment commit dummy hash overwhelm probability vector sample sim obtains partially aggregation honest query textbf langle rangle ell recall com equivocal CRS hybrid model sim trapdoor associate  output com setup trapdoor sim  commitment hash input sample behalf honest  com definition guarantee commitment consistent hash simulated input honest therefore successfully  overwhelm probability moreover mathcal unqualified reconstruct secret assumption sim adjust behalf honest reconstruct  obtain  verification phase simulated completes proof evaluation experimental setup performance protocol prototype implementation prototype java jni implement cryptography algorithm linearly homomorphic hash LHH realize elliptic curve nist curve efficient equivocal commitment com folklore hash commitment scheme instantiate sha secure restrict programmable observable global random oracle model secret scheme adopt standard shamir secret agreement elliptic curve diffie hellman nist curve sha symmetric encryption instantiate aes  mode IV pseudo random generator aes ctr mode addition fix modulus maximum client assume client input honestly adversarial model simulate client aggregation server ubuntu lts desktop equip intel cpu ghz GB ram simulation thread networking significantly influence asymptotic computation complexity protocol calculate bandwidth omit evaluation dropout client dropout dropout protocol dropout client protocol metadata client via server  masked gradient server  dropout performance aggregation phase protocol expensive computation overhead recover pairwise mask II dropout client reporting decommitment client via aggregation server  server recover client survive client secret reconstruction algorithm recover expensive computation overhead verification phase comparison VerifyNet dimension independence protocol II dropout amortization dropout batch comparison addition client fix threshold frac parameter remain unchanged readily protocol outgo communication verification client server independent dimension gradient however metric linearly dependent dimension gradient impractical performance dimension comprehensive comparison respect overall overhead easy protocol outperforms VerifyNet completely encourage protocol dimensional gradient vector performance achieve VerifyNet dimensional comparison protocol VerifyNet outgo communication overhead verification computation overhead outgo communication overhead dimension gradient vector increase outgo communication overhead verification per client outgo communication overhead verification server computation overhead per client outgo communication overhead per client computation overhead server outgo communication overhead server comparison protocol VerifyNet outgo communication overhead verification computation overhead outgo communication overhead dimension gradient vector increase outgo communication overhead verification per client outgo communication overhead verification server computation overhead per client outgo communication overhead per client computation overhead server outgo communication overhead server comparison secure aggregation II IV additional verification protocol baseline protocol address input privacy mobile client easy underlined bold protocol introduce additional communication overhead baseline secure aggregation protocol per client dimension gradient vector communication transfer gradient KB proportion overall communication per client additional communication verification protocol insignificant computation overhead protocol affordable application FL uncommon local iteration machine deploy protocol application dropout severe naturally report overall computation overhead protocol local iteration machine computation overhead respect dropout computation overhead respect dropout II outgo communication overhead respect dropout computation overhead respect II dropout IV outgo communication overhead respect II dropout experimental amortize verification growth batch amortize verification overhead per epoch reduce nearly textsf LHH textsf hash batch approximately halve computation overhead client amortization however application dropout epoch batch cannot verification batch severe accumulation dropout therefore expensive overhead secret reconstruction algorithm regard phenomenon tradeoff therefore batch tune application comparison computation verification amortize computation verification computation per client dimension gradient vector client assume dropout comparison computation verification amortize computation verification computation per client dimension gradient vector client assume dropout client computation communication client grows linearly client secret generate  proportional client server grows quadratically client unmask server secret reconstruction algorithm recover secret mask client threshold client proportional client dropout client computation communication independent client protocol execution however metric server influence dropout rate server overhead suffer server acceptable computation outgo communication overhead client increase computation overhead per client outgo communication overhead per client computation overhead server outgo communication overhead server client dimension gradient vector batch assume dropout computation outgo communication overhead client increase computation overhead per client outgo communication overhead per client computation overhead server outgo communication overhead server client dimension gradient vector batch assume dropout computation outgo communication overhead dimension gradient vector increase computation overhead per client outgo communication overhead per client computation overhead server outgo communication overhead server client client batch assume dropout computation outgo communication overhead dimension gradient vector increase computation overhead per client outgo communication overhead per client computation overhead server outgo communication overhead server client client batch assume dropout VI related briefly discus related secure verifiable aggregation federate generic maliciously secure multiparty computation FL involves aggregation server client therefore regard specific multiparty computation although pile guarantee integrity computation existence malicious active adversary suitable FL setting garble circuit protocol malicious adversary expensive communication overhead commit technique cannot deployed secret protocol client entry input additive client expensive communication overhead addition protocol rely homomorphic encryption compute MACs distribute homomorphic decryption sub protocol cannot tolerate dropout threshold manner directly therefore suitable FL setting dropout machine cryptographic protocol cryptographic research regard privacy verifiability issue machine secure model prediction secure model training secure model prediction goal securely query model without reveal model input information model model query advance differs motivation FL secure model training propose model guarantee integrity derive model privacy user unfortunately expensive overhead apply FL setting propose framework convert secret built protocol neural network client suppose entry gradient vector communication overhead dimension vector increase addition client increase preserve robustness dropout client homomorphic encryption address input privacy rely adversarial model secret decryption encrypt gradient client client honest however adversarial model II adversary acquire corrupt client decrypts encrypt gradient undermines security secret decryption threshold manner client mitigate issue unfortunately construction complicates decryption encrypt gradient FL dropout significantly increase communication server client client increase protocol mask efficient addition primitive address input privacy achieve input privacy verifiability cryptographic primitive zero knowledge proof primitive replace consume zero knowledge proof adopt knowledge secure verifiable aggregation FL however adopts zero knowledge proof impractical performance unaffordable communication overhead differential privacy notable privacy preserve cryptographic protocol cannot fully prevent privacy disclosure machine privacy disclosure statistical characteristic confidence information prediction outcome machine algorithm privacy attack leverage statistical characteristic treat cryptographic protocol oracle attack apply machine paradigm securely realize cryptographic protocol protocol implement functionality machine statistical leakage inevitable defense combine cryptographic protocol differential privacy differentially private federate extensively literature exist combine differentially private mechanism multiparty computation statistical characteristic raw input honest client however address verifiability issue FL devote fix issue FL practical overhead differential privacy primary goal straightforward protocol differentially private gaussian laplacian gradient regard noisy gradient input protocol although achieve utility global model direction future explore optimal differentially private mechanism compatible practical secure verifiable aggregation protocol byzantine robust aggregation byzantine client FL arbitrary aggregation server influence model convergence issue popular mitigation byzantine robust aggregation mostly related aggregation protocol alternative aggregation mechanism standard federate average ensure convergence significantly influence byzantine client non iid setting challenge devise byzantine robust aggregation mechanism non iid FL datasets byzantine robust aggregation regard supplement secure verifiable aggregation cryptographic protocol latter guarantee input privacy integrity aggregation respect input secure verifiable aggregation cannot prevent byzantine client malformed input harm training global model however combine byzantine robust aggregation secure verifiable aggregation technical challenge address future adopt completely adversarial model secure verifiable aggregation II byzantine aggregation assume byzantine client arbitrary honest aggregation server server corrupt implicitly assume aggregation server access plaintext stochastic gradient uploaded client violates input privacy byzantine robust aggregation mechanism usually adopt complicate arithmetic median trim federate average challenge devise tailor dropout tolerant protocol mechanism achieve input privacy verifiability additionally vii conclusion realize verifiable aggregation FL communication efficient propose protocol VeriFL VeriFL capable dimensional gradient vector client dropout rate application practical performance notably VeriFL verification outgo communication independent gradient dimension improvement communication gradient vector