mobile compute MEC paradigm fundamentally data cache technique data cached server attach within meter user bound latency guarantee latency sensitive application interactive AR VR application online etc however highly distribute MEC environment cache data corruption integrity ensure exist centralize data integrity assurance scheme render obsolete unique characteristic MEC unlike server server limited compute storage resource deployed massively distribute geographically significant challenge ensure cache data integrity tremendous geographically distribute resource constrain server proposes CooperEDI scheme guarantee data integrity distribute manner CooperEDI employ distribute consensus mechanism management cache server cooperatively ensure integrity cached replica repair corrupt experimentally evaluate performance representative scheme demonstrate CooperEDI effectively efficiently ensure cache data integrity MEC environment introduction growth mobile iot device fuel emergence complicate online application latency interactive virtual augment reality AR VR networked application due usually unpredictable latency user remote compute paradigm capable ensure latency user application network latency fundamentally physical network tackle challenge mobile compute MEC propose 5G enabler technology MEC environment server attach application vendor cache popular data server nearby user bound latency guarantee MEC cache data user geographic proximity ensure data access latency enables cache network refer cache hereafter fundamentally conventional cache content delivery network  illustrates cache comprise server twelve user MEC offering novel opportunity cache various challenge exemplar cache exemplar cache exist cache commonly assume data reliability security unrealistic MEC environment compute facilitate mega data MEC environment distribute dynamic volatile server geographically distribute cannot maintain server therefore infeasible simply assume server fully reliable researcher various corruption data replica refer data replica hereafter cached server software exception hardware fault besides cyberattack hacker tamper data cached server hacker tamper data inject trojan virus security threat user access corrupt data application vendor verify integrity data replica cached cache data integrity compute environment refer  hereafter extensively provable data possession pdp proof retrievability por popular scheme verify user data however data integrity edi fundamentally data edi demand data integrity massive replica cached various server cache instead application vendor local storage cache comprise highly distribute server suffer lack centralize server host data edi incur computation overhead server mobile device resource constrain inspect data replica pdp scheme incurs pressure server backhaul network repair corrupt data replica por scheme extra storage storage constrain server incurs excessive computation overhead mobile device recently pdp centralize scheme edi propose verify data integrity application vendor scheme application vendor data generate variable merkle hash  server generates  data sample replica node hash  application vendor verify individual replica integrity however critical inherent limitation scheme incurs extra traffic backhaul network purpose MEC efficiency application vendor response server integrity verification server immediately prolong entire probabilistic scheme cannot detect data corruption guarantee finally cannot localize repair corrupt data replica data incurs extra communication overhead effectively efficiently tackle edi propose novel scheme CooperEDI guarantee data replica integrity server specifically distribute consensus mechanism server consensus truth valid data replica truth cooperatively verify integrity data replica localize corruption repair corrupt replica without centralize CooperEDI decentralize edi summarizes contribution propose CooperEDI novel decentralize scheme application vendor ensure integrity data replica volatile MEC environment edi application vendor verify data integrity localize repair corrupt data replica evaluate CooperEDI performance representative  scheme edi scheme experimental demonstrate effectiveness efficiency CooperEDI edi organization II overview CooperEDI framework discus CooperEDI detail IV evaluates CooperEDI experimentally discus related VI concludes future II CooperEDI overview server deployed specific communicate via link constitute cache user CooperEDI scheme server cooperatively verify data integrity localize corruption repair corrupt proactively demand interact autonomously without application vendor remote framework data application vendor storage suppose replica cached server cache server denote server denote correspond data replica framework CooperEDI consists phase CooperEDI overview phase setup phase phase app vendor essential parameter CooperEDI threshold data digest generation function server phase perform cycle data replica phase truth determination verify integrity data replica comparison truth valid data without involvement application vendor truth straightforward replica cache corrupt server interact cooperatively data replica valid truth achieve CooperEDI distribute consensus mechanism server truth manager manager server responsible data integrity verification subsequent corruption localization data repair phase corruption localization phase manager sends data inspection message notify server data replica valid notifies individually replica cached server corrupt manager generates digest data truth sends digest localize corrupt data server digest data replica corrupt phase data repair localize corrupt data server data replica damage interact randomly manager retrieve correspond valid data repair data replica CooperEDI scheme phase iterate periodically demand ensure integrity data replica cache integrity assurance data cached individually without fundamentally data structure summarizes data structure CooperEDI generally server employ request response communicate phase truth determination interact truth request truth response truth phase corruption localization manager server data inspection message digest truth attach server localize corrupt data phase data repair server corrupt data replica data request retrieve valid data manager data response valid data data structure CooperEDI CooperEDI procedure discus CooperEDI phase correspond procedure detail phase setup CooperEDI essential parameter phase threshold hash function CooperEDI assigns server threshold parameter determines server commences data integrity assurance phase truth determination specifically server timer commences timeout empirically specify application vendor data integrity inspection repair perform price communication computation overhead vice versa phase data repair server manager perform data repair CooperEDI chooses digest generation function hash MD sha sha server generate data digest phase data digest phase respectively server digest instead data replica communicate phase phase significantly reduces communication overhead incur phase truth determination phase server interact cooperatively truth replica valid research inspire distribute consensus protocol variety domain paxos raft achieve consensus participant network unreliable  processor fundamental assumption participant fail simultaneously assumption majority participant distribute eventually agreement participant fail temporarily assumption research replica cached server cache minority data replica corrupt data replica refer data replica quorum reasonable highly distribute MEC environment likely majority data replica corrupt massive concurrent hardware fault software exception cyberattacks data replica quorum valid employ truth server data replica belong quorum correspond procedure pseudocode assurance server random sends truth request server server passively responds truth request timer suppose request truth determination executes procedure  pseudocode truth request server truth request req contains replica ID digest data replica replica upon receipt truth request req recipient executes procedure  pseudocode respond server generates digest data replica req digest correspond data replica server return truth response notify upon receipt truth request server responds dataEquivalent data replica valid contrast server responds dataEquivalent false upon receipt truth response res server employ procedure  pseudocode data replica belongs quorum specifically inspects response res dataEquivalent data replica majority data replica cached belongs quorum truth server becomes manager phase corruption localization otherwise data replica corrupt reset dataEquivalent passively server truth request data inspection message data replica cached server become manager data replica truth pseudocode truth determination procedure  input replicaId data replica ID replica data replica member server information output req truth request truth request req req replicaId replicaId req digest hash replica generate data digest server member req concurrently procedure procedure  upon receipt truth request req input  server ID replica data replica  ID data replica req truth request output truth response truth response   replicaId replicaId dataEquivalent req digest hash replica false procedure procedure  data replica truth input res truth response output dataEquivalent replica equivalent info replica replica res dataEquivalent dataEquivalent  valid become manager corrupt reset dataEquivalent procedure CooperEDI scheme server posse valid data replica become manager multiple manager manager data inspection message server phase corruption localization server phase receives data inspection message indicates existence manager cancel truth determination passively participates data inspection phase data replica cached truth message server server generates digest data replica truth response incurs communication computation overhead data replica truth truth replica usually suffice data inspection repair therefore detects emergence manager cancel truth determination prevent communication computation overhead phase corruption localization phase consists manager generates sends data inspection message server upon receipt message server verifies integrity data replica corrupt localizes corrupt data manager employ procedure  pseudocode data inspection message server message correspond server data replica corrupt localize corrupt data corrupt introduce phase manager array dataEquivalent data replica cached server data replica data replica corrupt notifies  false message otherwise  attache digest data localize corrupt data upon receipt server executes procedure  pseudocode verify integrity data replica localize corrupt data data digest variable  false indicates valid perform subsequent data repair assurance otherwise generates digest data correspond digest correspond data corrupt corrupt data localize pseudocode corruption localization procedure  input member info server replica data replica  ID data replica dataEquivalent replica equivalent info output data inspection message member data inspection data inspection message replicaId replicaId  dataEquivalent false dataEquivalent false digest null digest data replica digest hash digest digest server procedure procedure  input  data inspection message output  data validity info  false valid data inspection invalid perform corruption localization data replica  digest hash false procedure phase data repair phase server interacts manager repair corrupt data introduce multiple manager receives data inspection message receives message within randomly chooses interacts manager perform data repair overall data repair workload multiple manager server server manager repair corrupt data replica phase server localize corrupt data inspects  creates data request  IDs corrupt data manager via procedure  pseudocode upon receipt  manager responds data response execute procedure  pseudocode repair corrupt data replica replace corrupt data valid data pseudocode data repair procedure  input replicaId data replica ID  data validity info output  data request data request   replicaId replicaId counter  false corrupt   index  manager procedure procedure  manager input  data request output data response    data response   replicaId replicaId      replica  response asynchronously procedure IV experimental evaluation experimentally evaluate CooperEDI performance representative pdp scheme edi scheme experimental setting compete scheme thorough investigation scheme recently propose scheme specifically edi implement scheme edi comparison CooperEDI besides minor modification pdp scheme multi replica verification compute edi generally user pdp scheme inspection request batch data integrity proof generate user verifies data validity inspect proof improve efficiency pdp scheme randomly sample data replica probabilistic data integrity guarantee data integrity proof generate rsa homomorphic function BLS signature unfortunately edi pdp scheme cannot localize repair corrupt data replica scheme propose repair corrupt data por scheme erasure cod scheme network cod scheme however inapplicable cache due excessive computation communication overhead server user refer detailed discussion facilitate comprehensive evaluation scheme derive exist pdp scheme implement comparison CooperEDI pdp derive MR pdp pdp generates data integrity proof rsa homomorphic function inspection multiple data replica data mask mechanism MR pdp remove improve efficiency pdp derive pdp generates BLS signature data integrity proof pdp pdp scheme application vendor sends data integrity verification request server respond data integrity proof application vendor inspects data integrity proof batch performance metric metric evaluate CooperEDI performance corruption detection rate ratio detect corrupt data replica corrupt data replica consumption computation communication data assurance communication overhead introduce CooperEDI scheme application vendor involve data integrity verification corruption localization data repair CooperEDI metric overall communication overhead incur server contrast overall communication overhead server application vendor incur compete scheme performance parameter setting data inspect randomly generate accord data data replica comprise data cached server cache corrupt data replica simulated corruption ratio randomly modify proportion data corrupt data replica pdp scheme pdp pdp randomly sample data data replica inspection CooperEDI inspects data replica moreover edi sample data subtree server randomly selects minimum subtree data inspection extensively evaluate CooperEDI performance parameter varied simulate various edi scenario research parameter varies others fix default II average report sample data sample data replica inspection data replica data replica inspect data data replica MB data data KB corruption ratio percentage corrupt data replica corruption severity percentage corrupt data corrupt data replica II parameter setting virtual machine randomly mapped geographical simulate networked server constitute cache virtual machine equip vcpu 2GB ram ubuntu  specify network latency server another virtual machine deployed amazon simulate application vendor server equip vcpus 2GB ram ubuntu network latency server accord distance network latency application vendor server amazon server fluctuates average scheme comparison implement java  library prime employ pdp perform exponential operation generate data integrity proof pdp employ sha hash function data elliptic curve BLS par sha CooperEDI generate digest data data replica threshold phase truth determination threshold phase data repair experimental edi pdp pdp verify data integrity corruption data replica performance data integrity verification research sample fix data data replica inspection corruption detection rate impact sample corruption severity moreover consumption communication overhead impact sample data replica data corruption detection rate corruption detection rate achieve compete scheme scenario overall observation pdp pdp achieve corruption detection rate edi slightly introduce IV probabilistic scheme sample corruption severity theoretical performance detect corrupt data pdp pdp edi obtains detection rate sample data pdp pdp pdp pdp sample data edi sample data  inspection overall observation CooperEDI achieves corruption detection rate evidence ability guarantee corruption detection pdp pdp edi probabilistic guarantee corruption detection rate demonstrates impact sample compete scheme corruption detection rate increase corruption severity fix impact pdp pdp edi significantly CooperEDI pdp pdp edi sample data inspection increase detect corrupt data specifically increase average corruption detection rate achieve pdp pdp edi increase respectively phenomenon corruption severity increase fix edi corruption severity significantly impact corruption detection rate pdp pdp edi CooperEDI data corrupt data damage easy detect corrupt data fix however impossible pdp pdp edi guarantee corruption detection rate unless sample data inherent weakness probabilistic data integrity scheme similarly CooperEDI ensure rate corruption localization data repair consumption demonstrates increase sample pdp pdp significantly verification pdp pdp generate data integrity proof sample data besides inspect proof application vendor applies edi server generate  increase illustrate earlier improve corruption detection rate however rapidly increase consumption observation evidence conclusion pdp scheme impractical edi contrast CooperEDI consumption stable inspects data integrity verification consumption integrity verification consumption integrity verification consumption scheme data replica increase pdp pdp edi verification increase CooperEDI consumption remains stable data replica inspect pdp pdp edi CooperEDI average respectively inspection increase correspond consumption increase pdp pdp edi centralize scheme data integrity proof inspect application vendor transmit proof application vendor server incurs extra transmission application vendor sample data data server perform inspection consume pdp pdp server sample data data replica application vendor sample correspond data inspection data replica workload application vendor contrast CooperEDI distribute scheme server cooperatively concurrently inspect replica CooperEDI efficient pdp pdp extremely data replica CooperEDI consumption pdp average pdp average edi average respectively phenomenon data increase KB MB increase consumption pdp increase significantly rsa homomorphic function pdp convert sample data integer perform exponential operation prime generate correspond proof increase integer becomes pdp conversion exponential operation pdp consumption increase pdp pdp employ sha hash function data elliptic curve generate integrity proof hash function efficient pdp homomorphic function hash KB data hash MB data advantage pdp achieves efficiency pdp edi consumption decrease increase increase increase edi creates  application vendor entire data server creates  sample data increase impact node  server consumption application vendor decrease consumption server increase interestingly illustrate data rarely impact efficiency CooperEDI CooperEDI deterministic scheme employ entire data replica inspection consumption stable data fix KB KB KB MB MB CooperEDI consumption pdp average pdp average edi average respectively observation illustrate CooperEDI capable verify integrity data replica efficiently align lightweight requirement edi approach introduce communication overhead communication overhead integrity verification CooperEDI scheme manager server elect distribute consensus responsibility coordinate verification centralize edi approach edi inevitably incurs extra communication overhead communication overhead incur compete scheme verify data integrity overall CooperEDI incurs communication overhead edi pdp pdp respectively however edi communication overhead incur backhaul network server application vendor MEC pursuit minimum backhaul network traffic CooperEDI communication overhead incur network ensures practical application cache communication overhead integrity verification significantly increase pdp pdp communication overhead edi CooperEDI sample data pdp pdp transmit data integrity proof application vendor inspection immediately incurs extra communication overhead edi transmits hash tag node server  application vendor therefore communication overhead impact communication overhead data replica increase impact communication overhead pdp pdp edi significantly edi data replica inspect pdp pdp transmit data integrity proof server application vendor server meantime CooperEDI scheme increase involves server truth inspection incurs network traffic overall CooperEDI incurs network traffic pdp pdp edi server transmits digest server CooperEDI scheme contrast pdp pdp scheme server transmit integrity proof application vendor sample data specifically CooperEDI incurs network traffic average pdp network traffic average pdp network traffic average edi data impact communication overhead compete scheme network traffic incur stable increase KB MB pdp pdp edi sample fix data inspection transmit correspond integrity proof data backhaul network network traffic fix sample fix similarly CooperEDI transmits digest instead data inspection incurs extra network traffic increase average across CooperEDI incurs network traffic pdp pdp network traffic edi respectively communication overhead corruption repair introduce pdp pdp edi cannot localize data replica data scheme corrupt data replica detect application vendor transmit entire data correspond server replace corrupt data replica incurs extra backhaul communication overhead contrast CooperEDI capable localize repair corrupt data replica data manager server transmit correspond data correspond server data repair addition data transmit server network significantly reduce overall communication overhead incur CooperEDI scheme backhaul network overhead communication overhead incur repair corrupt data replica CooperEDI scheme pdp pdp edi incur communication overhead transmit entire data data repair communication overhead pdp pdp edi easily CooperEDI communication overhead data repair multiple magnitude scheme illustrates communication overhead incur scheme corruption severity increase CooperEDI outperforms scheme significantly incur communication overhead average increase CooperEDI communication overhead increase MB MB straightforward data repair corrupt data contrast communication overhead incur scheme remain stable transmit entire data regardless corruption severity communication overhead data repair observation illustrate CooperEDI verify repair data replica without incur significant communication overhead traffic pressure backhaul network impact parameter impact parameter CooperEDI overall consumption communication overhead incur corruption detection corruption localization corruption repair evaluate performance various edi scenario impact sample omit CooperEDI inspects entire data replica integrity verification impact data replica impact CooperEDI consumption CooperEDI consumption increase increase however CooperEDI CooperEDI overall increase increase CooperEDI allows multiple manager server concurrently server repair corrupt data besides communication server perform server network minimizes network latency incur demonstrate CooperEDI advantage edi cache comprise massive distribute server increase incurs communication overhead CooperEDI corrupt data replica increase increase valid data transmit data repair impact data replica impact data data significant impact CooperEDI consumption communication overhead increase MB 2GB CooperEDI consumption increase threefold increase server generate data digest entire data replica phase server generate data digest phase data data replica increase increase valid data transmit server facilitate data repair increase CooperEDI communication overhead impact data impact data impact data CooperEDI performance data increase KB MB CooperEDI consumption decrease slightly data replica fix MB reduce data data replica CooperEDI generate data digest phase besides increase decrease corrupt data corrupt replica reduces manager transmit valid data data repair increase decrease CooperEDI communication overhead corrupt data decrease increase reduces communication overhead incur transmission data inspection message phase impact data impact corruption ratio illustrates impact CooperEDI performance increase none data replica corrupt CooperEDI average assurance meantime CooperEDI incurs insignificant communication overhead truth verify data integrity KB data transmit inspection MB data replica comprise KB data demonstrates CooperEDI extra communication resource consumption relatively reliable cache impact corruption ratio data corruption detect CooperEDI attempt localize corruption repair corrupt replica extra corruption ratio increase CooperEDI consumption increase increase CooperEDI consumption stabilizes CooperEDI scheme multiple manager server perform data assurance concurrently extra workload without significantly delay completion assurance advantage CooperEDI edi decentralize manner CooperEDI incurs communication overhead increase twofold manager transmit data digest server localize corrupt data phase transmit valid data server repair corrupt data phase communication overhead incur network traffic incur transmit data data repair network traffic incur valid data MB KB impact corruption severity demonstrate impact corruption severity CooperEDI consumption communication overhead respectively increase along increase increase data corrupt data replica repair manager transmit valid data phase data repair incurs extra consumption communication overhead impact corruption severity discussion workload fairness manager server phase data repair server corrupt data replica manager perform data repair analyze mechanism impact workload fairness multiple manager server chosen manager average workload increase data replica respectively chosen manager chosen server perform data repair phase data repair workload ratio illustrate ratio server data replica corrupt chosen manager indicates average workload individual manager significantly impact workload fairness manager chosen manager serf server average workload chosen manager communicate server transmit valid data increase workload ratio decrease rapidly ability CooperEDI distribute data assurance workload across multiple server particularly important cache server resource constrain impact workload fairness composition CooperEDI consumption CooperEDI consumption phase parameter fix II CooperEDI phase setup phase data repair contributes overall consumption respectively contrast CooperEDI spends overall consumption phase truth determination phase corruption localization respectively consume generate digest improve employ efficient digest generation function addition pdp pdp sample technique employ phase phase sample portion data data instead entire data data digest generation however adoption sample technique CooperEDI probabilistic scheme probabilistic guarantee data corruption discovery repair consumption phase innovation limitation CooperEDI exist scheme CooperEDI solves edi distribute manner CooperEDI scheme server communicate collaboratively detect truth data replica repair corrupt data replica CooperEDI perfect edi MEC environment latency demand centralize coordination remote IV IV CooperEDI outperforms exist significantly detect corrupt data replica addition experimental IV demonstrate CooperEDI incur communication overhead  network another objective MEC another innovation CooperEDI ability detect corrupt data replica repair distribute manner advantage CooperEDI price communication overhead server network unlike exist scheme retrieve truth remote server CooperEDI scheme communicate collaboratively truth besides repair corrupt data data transmit manager server server corrupt data replica incurs communication traffic server related cache content delivery network  intensively widely employ decade reduce latency user access application enable application stringent latency requirement interactive AR VR application networked etc mobile compute MEC 5G technology stack MEC allows resource limited mobile device offload computation task server device capable execute resource intensive application improves user perceive service quality service computation offload attract massive attention researcher recent offload multi user multi server MEC scenario aim maximize cpu utility extend ultra dense iot network heterogeneous server vehicle compute network integrate MEC smart vehicle guo liu collaborative offload task offload server remote later extend unmanned aerial vehicle uav enhance MEC environment uavs employ iot device reliable communication connection offload scenario uavs communication connection server offload perspective specifically propose framework device offload computation task nearby device fulfil cpu capacity constraint MEC allows application vendor offload data network cache server shortens physical distance data user usually within meter minimizes user data access latency service due unique characteristic MEC security issue attract researcher attention recently DDoS attach server propose theory approach mitigate attack propose blockchain trust incentive server facilitate collaborative compute service robustness deploy multiple application replica MEC environment robustness server placement importance urgency security important aspect information forensics security audit data integrity extensively scheme propose pdp scheme popular file audit pdp scheme randomly data file generate correspond data integrity proof verify data integrity inspect proof batch pdp scheme employ corruption data replica however pdp scheme heavyweight inspect tremendous data replica cached cache comprise geographically distribute server confirm experimental comparison demonstrate IV representative pdp scheme implement pdp pdp beyond data integrity audit scheme propose repair corrupt data por erasure cod scheme file erasure cod scheme split generates redundancy parity reed solomon erasure code disperse server valid file rebuilt data parity file tolerance fault extra storage overhead unfortunately scheme impractical MEC environment user access server retrieve file impossible due coverage constraint MEC environment user cannot access server server attach besides redundancy parity expensive server storage resource highly constrain server network cod scheme introduce user retrieve intact file data failure scheme data generate code file linearly combine data random combination coefficient code file server network cod scheme user retrieve file code file capability tolerate data failure however scheme suitable edi user fetch adequate code file due coverage constraint MEC environment limit access server user fetch adequate code file decode incurs extra profound consumption contradicts MEC pursuit latency exist scheme ensure data integrity render obsolete unique characteristic cache user verify data server propose pdp scheme perform verification however mainly focus privacy preservation fails tackle unique challenge data integrity another variant pdp scheme scheme efficiency limitation pdp scheme recently scheme edi propose verify integrity application vendor data replica reduce computation overhead incur verification application vendor server however edi suffers critical limitation traffic backhaul network efficiency probabilistic integrity assurance lack ability localize repair corrupt data replica data propose edi edi elliptic curve cryptography CooperEDI edi guarantee corruption detection rate propose pdp scheme ICL edi data integrity verification improve efficiency however edi ICL edi cannot repair corrupt data replica besides centralize approach suffers efficiency limitation edi limitation giant tackle edi objective inspect amount data replica efficiently localize corruption accurately repair corruption efficiently MEC environment cache comprise massive geographically distribute server user remote centralize remote practical latency incur easily undermine MEC pursuit latency inspire paxos raft CooperEDI scheme distribute consensus tackle edi decentralize manner specifically cache CooperEDI achieves superior performance representative  scheme demonstrate IV VI conclusion future mobile compute MEC application vendor bound latency guarantee latency sensitive application cache popular data server nearby user reduce data access latency however due distribute characteristic MEC cached data replica corruption integrity ensure unique characteristic MEC render exist centralize data integrity assurance scheme obsolete tackle challenge novel scheme CooperEDI propose guarantee data integrity application vendor CooperEDI employ distribute consensus mechanism server cooperatively verify data integrity localize corruption repair corrupt data extensive demonstrate CooperEDI ensure data integrity MEC environment effectively efficiently future investigate attack CooperEDI explore correspond defense mechanism