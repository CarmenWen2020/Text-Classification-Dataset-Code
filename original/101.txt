Recently, deep learning (DL) methods have been introduced very successfully into human activity recognition (HAR) scenarios
in ubiquitous and wearable computing. Especially the prospect of overcoming the need for manual feature design combined
with superior classification capabilities render deep neural networks very attractive for real-life HAR applications. Even though
DL-based approaches now outperform the state-of-the-art in a number of recognition tasks, still substantial challenges remain.
Most prominently, issues with real-life datasets, typically including imbalanced datasets and problematic data quality, still
limit the e↵ectiveness of activity recognition using wearables. In this paper we tackle such challenges through Ensembles
of deep Long Short Term Memory (LSTM) networks. LSTM networks currently represent the state-of-the-art with superior
classification performance on relevant HAR benchmark datasets. We have developed modified training procedures for LSTM
networks and combine sets of diverse LSTM learners into classifier collectives. We demonstrate that Ensembles of deep LSTM
learners outperform individual LSTM networks and thus push the state-of-the-art in human activity recognition using wearables.
Through an extensive experimental evaluation on three standard benchmarks (Opportunity, PAMAP2, Skoda) we demonstrate
the excellent recognition capabilities of our approach and its potential for real-life applications of human activity recognition.
CCS Concepts: •Human-centered computing ! Ubiquitous computing; •Computing methodologies ! Ensemble
methods; Neural networks;
Additional Key Words and Phrases: activity recognition; deep learning; LSTM; ensembles

1 INTRODUCTION
Activity recognition has been a core concern of ubiquitous and wearable computing ever since Weiser formulated his vision of the third generation of computing [Weiser 1991]. Related work now covers an enormous
variety of innovative sensing and analysis approaches that target a plethora of application areas, including
but not limited to novel interaction techniques [Kim et al. 2012], situated support in smart environments
[Hoey et al. 2011], automated health [Pl¨otz et al. 2012] and wellbeing assessments [Kranz et al. 2012], health
care automation [Avci et al. 2010], sports tracking and coaching [Ladha et al. 2013] to name but a few. In
fact, the field has advanced so much that it is now already focusing on application areas that go beyond
activity recognition, such as automated skill or quality assessments (e.g., [Khan et al. 2015]). Still, substantial challenges for human activity recognition in ubiquitous and wearable computing remain and they are
Authors’ addresses: Y. Guan, 89 Sandyford Road, Newcastle University, Newcastle upon Tyne, NE1 8HW, UK; email:
yu.guan@newcastle.ac.uk; T. Pl¨otz, Technology Square Research Building, Georgia Institute of Technology, 85 Fifth Street NW, Atlanta,
GA 30308; email: thomas.ploetz@gatech.edu
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than
the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee. Request permissions from permissions@acm.org.
c 2017 Copyright held by the owner/author(s). Publication rights licensed to ACM. 2474-9567/2017/06-ART11 $15.00
DOI: http://doi.org/10.1145/3090076
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:2 • Y. Guan and T. Pl¨otz
manifold. First and foremost, data recorded using wearable and pervasive sensing modalities1 are inherently
noisy, often containing missing or even erroneous readings due to sensor malfunction. Furthermore, ground
truth annotation for mobile application scenarios is often hard to obtain if not impossible to collect. Accurate
labels are, however, required for, e.g., supervised learning methods but also for validation in general. This is
in stark contrast to the almost e↵ortless collection of (unlabeled) sensor data through mobile devices. Also,
real-world HAR datasets tend to be imbalanced with regards to a biased class distribution of the underlying
sensor data, which causes problems at both training and inference time.
Encouraged by the tremendous success of deep learning (DL) methods, recently the activity recognition
research community has started adopting more complex modelling and inference procedures. These deep
learning methods have the proven potential to significantly push the state-of-the-art in human activity
recognition. Most importantly they allow to overcome the ever so crucial need for feature engineering, that
is, the manual definition of feature extraction procedures, which is often an erroneous or –at the very least–
poorly generalisable endeavour. The biggest advantage of contemporary deep learning methods is their ability
to simultaneously learn both proper data representations and classifiers. Early feature learning methods in
Ubicomp utilised restricted Boltzmann machines (RBM), that is, generative deep learners for deriving task
agnostic feature representations [Pl¨otz et al. 2011; Hammerla et al. 2015]. Recently, more sophisticated
models have successfully been used for challenging HAR tasks, e.g., convolutional neural networks (CNNs)
[Ord´o˜nez and Roggen 2016].
A popular way of using deep learning methods for activity recognition purposes is by modifying the
”standard” processing workflow as it has been widely adopted by the community [Bulling et al. 2014]. This
workflow comprises sliding window based analysis of isolated frames, that is, consecutive (typically overlapping) portions of sensor readings. Instead of manually defining feature representations for these frames,
the raw data are presented to the DL models that automatically extract rich representations of the input data. The use of multiple hidden layers of typically fully connected computing nodes then allows for
complex function approximation that leads to very powerful classifiers. As it stands, deep learning based systems outperform alternatives on standard, challenging activity recognition benchmarks such as Opportunity
[Chavarriaga et al. 2013].
Whilst the predominant modelling approach for deep learning based HAR is based on (variants of) CNN,
recently also sequential modelling methods have been employed very successfully, e.g., [Ord´o˜nez and Roggen
2016; Hammerla et al. 2016]. Specifically, so-called Long Short Term Memory (LSTM) networks [Hochreiter
and Schmidhuber 1997] have been used, that is, recurrent neural networks with principally infinite memory
for every computing node. LSTM models, like any other recurrent neural network, are predestined for the
analysis of sequential data such as streams of sensor data. Processing nodes, i.e., neurons, also referred to
as cells, not only take spatial but also temporal context into account when determining their activation. In
addition to connectivity across the network, these models implement feedback loops where outputs of neurons
directly serve as their input as well. Through adding specific elements to the individual cells, e↵ective memory
functionalities can be realised [Hochreiter and Schmidhuber 1997]. Most recent works in the ubiquitous and
wearable computing arena have substantially pushed LSTM-based recognition systems, rendering them stateof-the-art by outperforming other approaches on relevant, challenging baseline tasks. As such, deep learning
in general and LSTM-based modelling approaches in particular serve as reference for the work presented in
this paper.
Even though deep learning based approaches to activity recognition widely outperform the state-of-theart using non-DL methods, some of the aforementioned challenges for HAR in ubiquitous and wearable
computing remain. Specifically, the problematic data situation –noisy / erroneous data, heavily imbalanced
data distributions etc.– remains largely unaddressed. Furthermore, it is rather surprising to see that models
1Without limiting our scope, in this paper we primarily refer to data recorded using inertial measurement units (IMUs).
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:3
that have been specifically designed for the analysis of sequential data are widely employed –during inference–
in the traditional sliding-window, i.e., frame-based manner.
In this paper we present a framework for deep learning based activity recognition using wearable sensing
data. We substantially extend our previous work where we have alleviated the sliding window paradigm
of sensor data processing [Hammerla et al. 2016]. We employ deep, recurrent LSTM networks for samplewise prediction. For the first time, we combine multiple LSTM learners into ensemble classifiers that enable
substantially improved robustness for challenging, realistic HAR applications. Directly tackling practical
issues of real-world sensing scenarios we develop a novel training method for LSTM models that leads to the
derivation of more robust recognisers. This method acknowledges the fact that noisy, possibly ambiguous or
even erroneous data –as they are typical for HAR scenarios in Ubicomp– negatively influence the performance
of recognition systems. It is worth mentioning that in real-world HAR deployments one cannot easily identify
and subsequently ignore the NULL class, that is data that do not belong to any of the activities of interest
but rather to the background. The larger context of our work aims at ’open-ended’ activity recognition,
that is at deriving and adapting recognition systems without assumptions and limitations that would hinder
actual, ’in-the-wild’ deployments. As such, pre-filtering based on prior domain knowledge does not represent
a reasonable option and we rather aim for a generalised approach, as presented in this paper.
Our training method assumes that a certain percentage of sensor data is ’problematic’ and thus only
utilises a subset of the data in a training iteration. Given that such data issues are normally dicult to
detect and specify a-priori, our subset determination method employs a probabilistic selection approach,
which e↵ectively resembles the general concept of Bagging [Breiman 1996]. Through reiterating the selection
procedure we are able to build Ensemble classifiers for activity recognition. To the best of our knowledge this
paper is the first that uses Ensembles of LSTM learners for an activity recognition scenario. We evaluate
our method on three standard benchmark datasets, namely the Opportunity challenge [Chavarriaga et al.
2013], PAMAP2 [Reiss and Stricker 2012], and the Skoda dataset [Stiefmeier et al. 2008]. By outperforming
the state-of-the-art our results indicate increased robustness of our Ensembles of deep LSTM learners with
regards to typical challenges of human activity recognition in ubiquitous and wearable computing scenarios.
We provide a detailed analysis of our models’ performance, which allows us to draw conclusions for related
real-world applications and future scenarios.
The remainder of this paper is structured as follows. In Sec. 2 we provide a primer on the relevant
background in deep learning for human activity recognition, as well as in Ensemble learning. This overview
serves as reference for the technical developments described later in the paper (and beyond for the wider
Ubicomp audience). Subsequently, we explain in detail our framework for activity recognition using Ensembles
of deep LSTM learners. Sec. 4 presents our experimental evaluation based on the aforementioned three
benchmark datasets and discusses results with a view on real-world applications. Sec. 5 summarises our
work and we discuss in detail practical implications as well as future avenues for extensions and adaptations.
2 BACKGROUND
We aim for developing methods for robust human activity recognition (HAR) using ubiquitous and wearable
sensing modalities. Most prominently but without limiting ourselves we target inertial measurement units
(IMUs). HAR has a long standing history in the wider ubiquitous and wearable computing community. Over
the years a multitude of methods have been developed that facilitate an astonishing variety of applications.
HAR has become one of the pillars of the third generation of computing [Schmidt et al. 1999] and it is more
than likely that future developments will depend on robust and reliable activity recognition from sensor data
as well [Abowd 2016].
Aiming for conciseness we refrain here from reiterating summaries of the general state-of-the-art in activity
recognition. We argue that HAR can now safely be considered common knowledge and thus refer to seminal
papers and tutorials such as [Bulling et al. 2014; Chen et al. 2012; Avci et al. 2010]. More importantly, in
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:4 • Y. Guan and T. Pl¨otz
what follows we will cover the specific algorithmic background for this paper, which spans the following two
main subject areas: i) Deep learning for HAR in ubiquitous and wearable computing; and ii) Ensembles of
classifiers for robust recognition in challenging settings.
2.1 Deep Learning for Human Activity Recognition
In line with its massive success and popularity in many application domains, deep learning [LeCun et al. 2015]
is also about to revolutionise human activity recognition methods in the field of ubiquitous and wearable
computing. The attraction of deep learning not only stems from the fact that the complex models come
with great capacity with regards to classification tasks, they also substantially alleviate the need for feature
engineering as they learn very e↵ective, rich representations of input data.
Early deep learning applications in ubiquitous and wearable computing primarily targeted this representation learning aspect. In [Pl¨otz et al. 2011] deep belief networks, specifically generative Restricted Boltzmann
Machines (RBMs) were employed for feature learning. Based on this, subsequent works explored the e↵ectiveness of pre-trained, fully-connected RBM networks, for example, for automated assessments of disease
states in Parkinson’s patients [Hammerla et al. 2015], in combination with more traditional sequence models (HMMs) [Zhang et al. 2015; Alsheikh et al. 2016], and very successfully for auditory scene analysis in
Ubicomp applications [Lane et al. 2015].
Most popular in the field of human activity recognition using wearables are two variants of deep learning
methods: i) Deep Convolutional Neural Networks (CNNs); and ii) Recurrent Deep Neural Networks, such
as Long Short Term Memory (LSTM) networks. Both types and their use in HAR are summarised in what
follows.
2.1.1 Convolutional Neural Networks for HAR. Arguably the most widely used deep learning approach
in the ubiquitous computing field in general and in human activity recognition using wearables in particular
employ CNNs. CNNs typically contain multiple hidden layers that implement convolutional filters that
extract abstract representations of input data. Combined with pooling and/ or subsampling layers, and fully
connected special layers, CNNs are able to learn hierarchical data representations and classifiers that lead
to extremely e↵ective analysis systems. A multitude of applications are based on CNNs, including but not
limited to [Zeng et al. 2014; Ronaoo and Cho 2015; Yang et al. 2015; Rad et al. 2015].
Recently, sophisticated model optimisation techniques have been introduced that actually allow for the
implementation of deep CNNs in resource constrained scenarios, most prominently for real-time sensor data
analysis on smartphones and even smart watches [Bhattacharya and Lane 2016].
2.1.2 Long Short Term Memory Models for HAR. The de-facto standard workflow for activity recognition in ubiquitous and wearable computing [Bulling et al. 2014] treats individual frames of sensor data
as statistically independent, that is, isolated portions of data are converted into feature vectors that are
then presented to a classifier without further temporal context. However, ignoring the temporal context beyond frame boundaries during modelling may limit the recognition performance for more challenging tasks.
Instead, approaches that specifically incorporate temporal dependencies of sensor data streams seem more
appropriate for human activity recognition. In response to this, recurrent deep learning methods have now
gained popularity in the field. Most prominently models based on so-called LSTM units [Hochreiter and
Schmidhuber 1997] have been used very successfully. In [Ord´o˜nez and Roggen 2016] deep recurrent neural
networks have been used for activity recognition on the Opportunity benchmark dataset. The LSTM model
was combined with a number of preceding CNN layers in a deep network that learned rich, abstract sensor
representations and very e↵ectively could cope with the non-trivial recognition task. Through large scale
experimentation in [Hammerla et al. 2016] appropriate training procedures have been analysed for a number of deep learning approaches to HAR including deep LSTM networks. In all of previous work, including
our own [Hammerla et al. 2016], single LSTM models have been used and standard training procedures
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:5
[ct#1,&ht#1]
[ct ,&ht
]
[xt,&ht#1]
xt
ht
ct#1
Wxo
Who
T Wxf
Whf
T Wxi
Whi
T Wxc
Whc
T
ht
ct
ft
it
ot
ct
~
tanh
tanh
σ σ σ
Fig. 1. LSTM unit according to [Hochreiter and Schmidhuber 1997]. Red, green, blue, and yellow highlighted parts refer to
forget, input, and output gate, as well as the cell. Bias vectors are not shown here for better clarity (see text for description).
have been employed for parameter estimation. The majority of existing methods is based on (variants of)
sliding-window procedures for frame extraction. The focus of this paper is on capturing diversity of the data
during training and to incorporate diverse models into Ensemble classifiers. As such this paper is the first
that pushes beyond optimisation of individual models (as demonstrated, for example, in the meta-study in
[Hammerla et al. 2016]), which leads to significantly improved recognition performance and robustness.
Theoretical Background for LSTMs. Given that LSTM networks form the algorithmic foundations for the
work presented in this paper, we will now briefly summarise their theoretical background. Fig. 1 schematically
illustrates the anatomy of LSTM units as originally introduced in [Hochreiter and Schmidhuber 1997]. In
order to address the problem of vanishing/ exploding gradients as it is typical for large scale vanilla (recurrent)
networks2 based on tanh activation functions, specific mechanisms were introduced for every individual
hidden unit of an LSTM network. These include forget, input, cell, and output gates, as well as a specific
internal structure of individual hidden units – all of which facilitating e↵ective error back-propagation even
for very complex, that is deep model architectures and over prolonged periods of time, e.g., hundreds of time
steps.
For an exemplary one-layer network, the LSTM units take the input signal xt, the hidden state ht1 and
the cell state ct1 from previous LSTM units. The output forwarded consists of the current hidden state ht
as well as the cell state ct. The whole LSTM network has four sets of specific gate parameters and one set
of network output layer parameters, which are defined as follows:
2Vanilla networks are those that are trained using the traditional backpropagation algorithm [McClelland and Rumelhart 1986].
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:6 • Y. Guan and T. Pl¨otz
forget gate parameters: 
Wxf
Whf
2 R(D+H)⇥H, bf 2 RH (1)
input gate parameters: 
Wxi
Whi
2 R(D+H)⇥H, bi 2 RH (2)
cell parameters: 
Wxc
Whc
2 R(D+H)⇥H, bc 2 RH (3)
output gate parameters: 
Wxo
Who
2 R(D+H)⇥H, bo 2 RH (4)
network output layer parameters: WhK 2 RH⇥K, bK 2 RK (5)
where D is the dimension of the input signal, H is the number of LSTM units, and K denotes the number
of classes (in our case: activities). W(·) are weight matrices and b(·) are bias vectors that define the transformation of the particular gate as illustrated in Fig. 1. Given the input and model parameters, the forward
pass can be written as follows:
ft =
 
Wxf
Whf T
[xt, ht1] + bf
!
(6)
it =
 
Wxi
WhiT
[xt, ht1] + bi
!
(7)
c˜t = tanh 
Wxc
WhcT
[xt, ht1] + bc
!
(8)
ct = ft  ct1 + it  c˜t (9)
ot =
 
Wxo
WhoT
[xt, ht1] + bo
!
(10)
ht = ot  tanh(ct) (11)
where ft, it, c˜t, and ot denote outputs of the forget, input, cell, output gates, respectively (inside LSTM
units), and  stands for element-wise multiplication. ct and ht are the outputs of the LSTM units, and can
be passed to the next timestep to iterate the aforementioned process. Given ht, prediction can be performed
and the class probability vector pt = [pt1, pt2, ..., ptK] 2 RK is calculated as follows:
pt = s(WhK
T ht + bK), (12)
where s(·) is a softmax function. The class label ˆ
kt at time t is then assigned to the one with the highest
probability, i.e.,
ˆ
kt = arg max
[1,K]
ptk. (13)
Throughout this paper we refer to an LSTM model (incl. model parameters) as WLSTM.
Fig. 2 gives an illustrative overview of the most prominent deep learning approaches for human activity
recognition using wearable sensing platforms. It shows examples of: i) CNN-based HAR systems (Fig. 2a);
ii) LSTM-based approaches to HAR (Fig. 2b); and iii) combinations of the two (Fig. 2c). Especially the
latter is of particular interest as it combines the e↵ectiveness of CNN-based representation learning with
sequence modelling capabilities of LSTMs. Such a combination has been used very successfully for activity
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:7
(a) [CNN for frame-based HAR
(c/o [Zeng et al. 2014]).
(b) Deep LSTM networks
for HAR (c/o [Hammerla
et al. 2016]).
(c) Combinations of CNN and LSTM (c/o [Morales and Roggen
2016]).
Fig. 2. Deep learning for Human Activity Recognition as it has been used in ubiquitous and wearable computing (selection).
recognition [Ord´o˜nez and Roggen 2016], but also for the exploration of transfer learning scenarios using deep
learning [Morales and Roggen 2016].
2.2 Ensembles of Classifiers
The bulk of general machine learning research is directed towards the development of e↵ective classification
methodologies that can be applied to various recognition tasks. Thereby the focus is typically on pushing
the boundaries for individual classifiers to be employed for modelling and inference. In addition to this, in
recent years the combination of multiple learners into meta-classifiers has gained popularity as it has been
shown that such classifier Ensembles can be very beneficial for the analysis of complex datasets [Kittler
et al. 1998]. Typically, a range of di↵erent base classifiers is estimated either on modified training sets or
on alternative representations of the training data. During inference the whole set of classifiers is applied
to the original recognition task, which results in multiple predictions that are then aggregated in order to
achieve a final classification. Multiple variants have been developed for both generating di↵erent views on
the training data, and for aggregating individual predictions. It has been shown that classifier Ensembles
have great potential to outperform traditional single classifier systems especially on challenging recognition
tasks [Kuncheva 2004].
In the original formulation of the concept of classifier Ensembles the principle constraint for base classifiers
was rather modest, requiring classification accuracy of Ensemble members to just be better than random
– so-called weak learners form the classifier Ensembles. However, in recent years it has been shown that
Ensemble classification is even more e↵ective when strong base classifiers are integrated (e.g., [Kim et al.
2003]). Either way, Ensemble approaches will only lead to improved performance if the underlying base
classifiers capture substantial, mutual diversity, that is, if modelling di↵erent characteristics of a data set.
A prominent approach to Ensemble creation utilises artificially constrained training sets for base learner
training. Through repeated random selection of samples from the training data the so-called Bagging procedure aggregates classifiers that are estimated on bootstrap replicates of all training samples [Breiman
1996]. The popular Boosting procedure pursues an alternative approach to generating diversity in classifier
Ensembles, namely through targeted (re-)weighting of sample data for their consideration into the training
procedure. In an iterative approach Boosting gradually focuses more on those samples that are harder to
classify, i.e., causing higher classification errors [Schapire 1990].
Arguably, deep learning methods can already be interpreted as Ensemble learning methods. Through the
combination of multiple hidden layers, each containing numerous processing nodes that eventually contribute
to an aggregated classification decision (at the output layer of a network) these models e↵ectively resemble
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:8 • Y. Guan and T. Pl¨otz
the principle of Ensemble learning. However, the focus of this paper is at a higher level of abstraction, that
is, on combining multiple complete networks to tackle challenging recognition tasks. So far there has only
been little work on Ensembles of deep learning methods. To the best of our knowledge this paper is the first
that addresses HAR using Ensembles of recurrent LSTM networks.
Examples of deep learning Ensembles include the combination of Support Vector Machines (SVM) into
classifier Ensembles [Qi et al. 2016]. It has been shown that the resulting stacked ”Deep SVMs” outperform non-Ensemble approaches in a variety of standard classification benchmarks – not including time series
analysis such as activity recognition though. Furthermore, stacking methods for Ensemble learning of sets
of deep neural networks have been applied successfully to speech recognition applications where class posterior probabilities as computed by convolutional, recurrent, and fully-connected deep neural networks are
integrated into an Ensemble [Deng and Platt 2014].
The focus of this work is on combining deep learning methods, that are –to date– most e↵ective for human
activity recognition, into classifier Ensembles. Specifically we focus on LSTM networks as base learners
given their superior performance in challenging HAR benchmarks [Ord´o˜nez and Roggen 2016; Hammerla
et al. 2016]. In line with previous work on combining strong learners into Ensembles, we hypothesise that
the combination of diverse individual LSTM networks will lead to more robust and thus improved activity
recognition results in challenging Ubicomp scenarios.
Our hypothesis is supported by (few) recent related works from other application domains where LSTM
models have been integrated into classifier collectives leading to improved recognition results, which is encouraging for real-world HAR. Most related to our work, [Song et al. 2016] have described a system that
utilises Ensembles of LSTM learners for predicting actions from video data. Unlike our approach their Ensemble is based on a range of base learners that are derived specifically for variants of certain activities, that
is the diversity required for building Ensembles is de-facto prescribed. We argue that for real-world HAR
scenarios such a prescription represents an unnecessary and potentially harmful limitation with regards to
flexibility and robustness of the resulting classifier collectivce. As such, whilst our general argumentation for
using strong –LSTM– base learners in Ensembles is identical, we focus on data-driven diversity that leads to
e↵ective and robust recognition systems. Other authors have referred to LSTM Ensembles as well, yet with
a di↵erent –somewhat misguiding– interpretation. For example, [Singh et al. 2015] employed three variants
of LSTM networks (vanilla deep LSTM, and two variants of bi-directional LSTMs) in parallel for biological
sequence analysis and then applied majority voting for final classification. Whilst this approach touches upon
the general idea of classifier Ensembles [Kittler et al. 1998], it does so in a very constrained way, which leaves
substantial room for improvement. The focus of our work is on data-driven generation of diversity through
a novel training procedure that allows for deriving very powerful and especially robust LSTM ensembles as
they are of relevance for real-world HAR scenarios using wearable and pervasive sensing modalities.
3 ENSEMBLES OF DEEP LSTM LEARNERS FOR ACTIVITY RECOGNITION
Our work is mainly motivated by the following observations. Activity recognition based on mobile and
wearable sensing modalities –as it is typical for the field– often face substantial challenges with regard to
data quality and, to some extent, quantity. Firstly, raw sensor data are inherently noisy. High temporal
resolutions of sensing facilities used for direct movement sensing in principle results in substantial variations
of raw sensor data even within the same set of activities, i.e., ambiguous representations. Additionally, faulty
sensor operation not only occasionally leads to erroneous sensor readings that further challenge the quality
of the data. Secondly, the widespread adoption of mobile computing and their integrated sensing facilities
now render the collection of raw, unlabeled data an almost trivial endeavour. However, the collection of
ground truth annotation is substantially more challenging – primarily for practical as well as for ethical
(privacy) reasons. It is this discrepancy that typically leads to rather imbalanced datasets with non-uniform
class distributions, which represents considerable problems for many training and validation approaches.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:9
Training' Data Validation' Data
Test'Data'Streaming
Epoch6wise' bagging
Model' updating
Epoch6wise' output
Wj
LSTM
W1
LSTM
W2
LSTM
Wj
LSTM
.
.
.
{WmLSTM}
Mm=1
Best6M'
models
Score6level' fusion
on'the'M'scores Prediction'
at't'
Sample'at't''xt
.
.
.
Previous'hidden' states'{ht-1
m}
Mm=1
Previous'cell' states'{ct-1
m}Mm=1
Fig. 3. Ensembles of deep LSTM learners for activity recognition – system overview.
Thirdly, even though the popular sliding window, frame-based analysis approach e↵ectively circumvents
the segmentation challenge, that is the need for locating (within a stream of sensor data) episodes of relevant
activities before classifying them, fine grained analysis of complex activities substantially su↵ers from such a
simplification. Strictly speaking, sequential data shall be modelled by and analysed with sequential models.
With growing maturity of the field of HAR and increasingly more complex recognition tasks the research
community is more and more acknowledging this problem. As demonstrated in recent related work (e.g.,
[Hammerla et al. 2016; Morales and Roggen 2016]) deep, recurrent neural networks, i.e., sequential models, have great potential for robust analysis beyond the predominant sliding window, frame based analysis
paradigm.
In response to these observations and with the aim of improving the robustness of activity recognition
systems we have developed a HAR framework based on Ensembles of LSTM learners. We combine multiple
deep, recurrent neural networks into a meta classifier that is substantially more robust w.r.t. the aforementioned challenges in ubiquitous and wearable computing applications of human activity recognition. Fig. 3
gives an overview of our system, which will be described in detail in the subsequent sections. Our approach
is characterised by the following key aspects:
LSTM based HAR. Deep learning has successfully been used in a variety of application domains, including
HAR using ubiquitous and wearable sensing. In line with recent related work (e.g., [Ord´o˜nez and Roggen
2016; Hammerla et al. 2016]) we employ a specific variant, namely deep, recurrent networks based on Long
Short Term Memory (LSTM) units [Hochreiter and Schmidhuber 1997].
Modified Training and Sample-Wise Model Evaluation. The majority of related work in HAR utilises
(variants of) the well established sliding-window, frame-based analysis approach [Bulling et al. 2014]. To some
extent this also holds for the emerging field of deep learning based HAR where portions of contiguous sensor
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:10 • Y. Guan and T. Pl¨otz
readings –frames that are shifted along the time series data with substantial overlap between subsequent
frames– are analysed by the complex networks and predictions are given at the level of frames rather than
samples. We use an alternative approach, namely random sampling of frames with varying length during
model training, and sample-wise model evaluation during inference.
Fusion of multiple LSTM learners into Ensembles. Based on the modified training procedure we are able
to train models that are more robust with regards to aforementioned data challenges. We generalise this
concept through repeated iteration and combine multiple models that have been derived in this manner into
Ensembles of LSTM activity recognition models, which e↵ectively resembles the general concept of Bagging
[Breiman 1996] but now with substantially more complex base learners.
3.1 Motivation for Fusing LSTM Learners
With regards to error types, an ideal classifier should have low bias, and low variance. Bias here corresponds to
the expected error between predicted values and the ground truth, whereas variance measures the variability
of model prediction for a given data point. Real world recognition systems need to find a compromise / define
a tradeo↵ between bias and variance, and the classifiers may su↵er from under- (high bias) or overfitting (high
variance) – depending on representativeness of training data and classifier complexity [Hastie et al. 2009].
For example, simple linear classifiers (such as logistic regression) may have high bias (i.e., underfitting) when
facing non-linear data. Complex non-linear models, such as neural networks, empirically tend to have low bias
(i.e., low training errors), yet they tend to overfit when training datasets are not large / representative enough
(higher variance). In contrast to bias reduction techniques (such as boosting) for simple models [B¨uhlmann
2012], Bagging (i.e., Bootstrap Aggregating) [Breiman 1996] is a variance reduction technique for strong
classifiers. Based on bootstrapped training samples, strong base classifiers are initially trained with high
variance, which can later be reduced through aggregation, e.g., model averaging. The most popular strong
base learners include decision trees [Breiman 2001], neural networks [Zhou et al. 2002], or kernel methods
[Valentini and Dietterich 2004], and the corresponding variances are significantly reduced through bagging,
yielding improved generalisation capabilities.
Motivated by these generic considerations our recognition system is based on Ensembles of LSTMs. Within
the general field of pattern recognition and machine learning it has been shown that individual classifiers
can be integrated into Ensembles and used very successfully for solving challenging recognition tasks (e.g.,
[Kittler et al. 1998; Kuncheva 2004]). Despite the fact that the general machine learning literature largely
argues w.r.t. classifiers for static data (e.g., images), there is no reason for this observation not to be valid
for sequential models as well (cf. App. A for a more formal exploration).
Consequently, we employ strong learners –LSTMs, which have low bias and high variance owing to their
almost universal function approximation capabilities– for deriving our recognition Ensembles. We follow the
previously described general pipeline, that is we bootstrap strong learners, followed by variance reduction
through model averaging. Since computational complexity can quickly become an issue when training deep
neural networks, such as LSTMs, we employ an epoch-wise bagging scheme. That is, our scheme generates one
LSTM base learner per epoch. We have further modified the training procedure by randomising various parts
of it (as described below) aiming at increased diversity amongst base learners, which is crucial for Ensembles.
Through aggregating the resulting base learners, we e↵ectively counteract the high variance problem, i.e.,
the notorious tendency of neural networks to overfit. Most importantly, the developed approach is e↵ective
for sequential base learners (LSTMs in our case), which is advantageous for the analysis of time-series data
as it is relevant for HAR settings.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:11
Epoch&j Epoch&j+1
Model&j Model&j+1
Random initial& position& of&sampling
Random size& of&mini7batches
Random length& of&frames
Data
Streaming
… …
Diversebase&learners
Model&
Updating
Constructing&
Mini7batches
mini7batches& for&
Continuous&updating
Generating
Base&learners
mini7batches& for&
Continuous&updating
Fig. 4. Illustration of the epoch-wise bagging procedure developed in this paper (formal description in Alg. 1).
3.2 Modified Training for LSTM Models
Our activity recognition framework is based on Long Short Term Memory (LSTM) networks as summarised
in Sec. 2.1.2 [Hochreiter and Schmidhuber 1997]. Whilst we employ standard LSTM models at inference
time, our training procedure is di↵erent as it is targeted to meet challenging real-life data scenarios as they
are typical for the field of ubiquitous and wearable computing. Fig. 4 illustrates the developed training
procedure for individual LSTM learners and Alg. 1 summarises the procedure formally (cf. Sec. 2.1.2 for
generic nomenclature).
3.2.1 Epoch-wise Bagging. As per the aforementioned discussion our hypothesis is that model training
procedures in HAR are challenged by both noise in the sensor readings as well as class imbalance. Unfortunately, in real-world scenarios it is typically not straightforward to formalise these challenges w.r.t., for
example, quantifying the percentage of problematic sensor readings let alone identifying them before having
access to recognition results. In our work we acknowledge these challenges and do not attempt to solve this
”chicken-and-egg” problem nor do we require prior knowledge about the challenges of a specific application
domain. Instead, we assume that a certain percentage of the sample data is at least not beneficial if used for
model training and thus it will not be used. Without prior domain knowledge or any other constraints we do
not know which portions of the data are of inferior quality for the model training. Aiming for generalisation
we thus employ a method that creates the e↵ective training set through probabilistic selection of subsets of
the original data and use these for mini-batch based learning of LSTM networks using stochastic gradient
descent (SGD). The method presented here extends our previous work [Hammerla et al. 2016].
Stochastic gradient descent is a standard method for learning generalised deep models [Bottou 2010].
For i.i.d. samples, such as images, the standard procedure is to shu✏e the whole training set before each
epoch and then to generate subsets of the shu✏ed training data –so-called mini-batches– to be used for
model training. The gradient (corresponding to each mini-batch) can then be calculated by minimising an
error (also referred to as loss) function for model updating. However, as it has been shown before due to
the contextual nature of time series data, this uninformed shu✏ing cannot directly be applied [Hammerla
and Pl¨otz 2015]. In order to construct diverse yet usable mini-batches for training models for time series
analysis, in our previous work we have randomly chosen B di↵erent start positions {qb
0}B
b=1 for generating
B frames of contiguous portions of sensor data along the whole training sequence [Hammerla et al. 2016].
This procedure is repeated for every epoch of model training. Mini-batches of every training epoch are
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:12 • Y. Guan and T. Pl¨otz
constructed by selecting frames of sensor data with pre-defined window length L from the chosen B starting
positions within the stream of sensor data. Formally, B frames of contiguous sensor readings are selected
with start/end indices defined as follows:
⇢
[qb
i , qb
i+1]




qb
i+1  qb
i = L, i = 0, 1, 2, ..., imax, qb
imax  qb
0 ⇡ T
B
b=1
, (14)
where T denotes the number of samples within the training data. For training data X 2 RD⇥T , the i-th
mini-batch gi is then created as follows:
gi = {X0
[:, qb
i : qb
i+1]}B
b=1 (15)
where X0 = [X, X] 2 RD⇥2T . (16)
This procedure was originally referred to as ”wrapping around” procedure [Hammerla et al. 2016].
For increased robustness of the resulting HAR models w.r.t. aforementioned challenges of real-world scenarios, in this work we extend the wrapping around procedure into a Bagging scheme for epoch-wise learners.
Instead of using pre-defined, fixed numbers of training frames B (i.e., mini-batch size) and frame length L
–for which it is dicult to find a justification when no or only little prior knowledge about a specific domain is
available at modelling time– we randomly choose Bˆ for each epoch, and within each epoch we also randomly
sample various frame lengths Lˆ.
It is worth mentioning that our general LSTM training scheme is insensitive to specific window lengths
(within a range) because the general capability of LSTMs to ”remember” contextual temporal information
remains unchanged. LSTMs pass their current (internal) cell state and hidden state as inputs to the next
time-step. We avoid hard decisions regarding the length of the contextual window that is being used during a
training step because it is dicult to make such a generalised decision upfront. Practically all of related work
is based on fixed window lengths, which essentially represents some sort of compromise based on heuristics.
Instead we set up various, randomly chosen window lengths as well as randomised starting points / minibatch sizes with the specific goal to increase the diversity for epoch-wise classifiers. Through repeating the
randomised process (over a number of epochs), we make sure that –empirically– we cover the whole sequence
of input data.
However, for each epoch our mini-batches only cover contiguous signal parts of length bT /Bˆc. Overall,
only a total of BˆbT /Bˆc samples are used in each epoch. Specifically, Bˆ frames of contiguous sensor readings
are generated with start/end indices defined as follows:
⇢
[qb
i , qb
i+1]




qb
i+1  qb
i = Lˆi, i = 0, 1, 2, ..., imax, qb
imax  qb
0 = bT /Bˆc
Bˆ
b=1
, (17)
where Bˆ and Lˆi are generated using a discrete, uniformly distributed random number generator.
Inevitably, this procedure results in repetitions and/ or omission of parts of the original training data –
which, according to our aforementioned motivation, is key for robust model training in real-world scenarios.
In our practical experiments we found that on average about 35%  38% of the training data is not used
per epoch – when using a standard, i.e., uniformly distributed random number generator for defining the
training frames. Given that these omitted portions are selected probabilistically this method has the –
intended– positive e↵ect of yielding less correlated epoch-wise classifiers. Essentially, this concept resembles
the aforementioned idea of Bagging [Breiman 1996] – but at the level of bootstrapping for epoch-wise LSTM
learners and without specific model score combination.
3.2.2 Alternative Loss Function for LSTM learners. In addition to employing the most popular cross
entropy loss (CE) function (more details can be found in Appendix A), we also explore the utility of an
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:13
ALGORITHM 1: Epoch-wise bagging for LSTM learners.
Input: training data: X 2 RD⇥T
Output: {Wj
LSTM}MaxEpoch
j=1 – the whole set of individual LSTM learners
initialise the model W0
LSTM ;
for j = 1 to MaxEpoch do
draw random integer Bˆj (i.e., mini-batch size) from discrete uniform distribution U(Blow, Bhigh);
draw Bˆj random integers {qb
0}
Bˆj
b=1 (i.e., starting positions) from discrete uniform distribution U(1, bT(1  1
Bˆj
)c);
initialise: i = 0, Lseq =0;
while Lseq  bT /Bˆj c do
draw random integer Lˆi (i.e., frame length) from discrete uniform distribution U(Llow, Lhigh);
{qb
i+1 = qb
i + Lˆi}
Bˆj
b=1;
construct the current mini-batch gj
i such that gj
i = {X[:, qb
i : qb
i+1]}
Bˆj
b=1 (also see Fig. 4) ;
update the model Wji
LSTM using the calculated gradient (gj
i ) based on a certain loss function (e.g., cross
entropy loss);
i = i +1;
Lseq = Lseq + Lˆi ;
end
output Wj
LSTM for the jth epoch
end
alternative loss function. Specifically, we train base learners using the F1-score loss, which is a cost-sensitive
loss function that is negatively correlated to the approximation of the F1 score for a dataset (cf. [Dembczynski
et al. 2013] for a general introduction). Di↵erent from CE, it is a global cost function for the complete dataset
and it cannot directly be used to measure individual sample’s losses [Jansche 2005]. For a set of N samples,
F1 loss is defined as:
LF 1 = Ek2[1,K]
⇢
1  2
PN
t=1 pt  zt PN
t=1 pt + PN
t=1 zt

, (18)
where  denotes element-wise multiplication, pt is the probabilty vector at time step t (Eq. 12), and zt 2 RK
defines the binary vector indicating correct class label k such that ztk = 1 ^ {ztj = 0}j6=k.
Although F1 loss considers the data imbalance problem, LSTM learners are still trained based on minibatches (for eciency and numerical stability reasons), which may not precisely approximate the ”true”
gradient towards an optimal F1 score over the whole training set – but a reasonable approximation. Owing
to its aforementioned properties, the classifiers generated by F1 loss may have di↵erent behaviours compared
to their CE counterparts, and we expect it may benefit the overall performance by fusing LSTM classifiers
from these two sources.
3.3 Combining Multiple LSTMs into HAR Ensembles
The modified training procedure for individual LSTM learners leads to various models due to varying the
”view” on the training data. As mentioned before this e↵ectively resembles the main concepts of Bagging, i.e.,
a –simplified– variant of Ensemble learning. The general idea of Ensemble classifiers is to create collectives
of individual learners that are each trained on di↵erent views of the sample data. Through introducing
variation, individual learners focus on di↵erent aspects of a problem domain, which in combination leads to
more robust and typically better recognisers in terms of average classification accuracy.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:14 • Y. Guan and T. Pl¨otz
With the concept of epoch-wise bagging as described in the previous section, we already have introduced
a concept for diversifying the training of our activity recognition system. We now generalise this idea by
combining multiple LSTM models into classifier committees. For doing so we focus on generating diversity
from the two main sources discussed in the previous sections:
(1) Diversity of base learners due to random selection of subsets of training data for parameter estimation.
Essentially this corresponds to combining the individual LSTMs obtained from every training epoch.
(2) Diversity of LSTM models caused by employing two di↵erent loss functions for model training, which
leads to variations in resulting LSTM models.
Independent of the cause for diversity in base classifiers (in our case LSTMs) the meta-optimisation
objective for classifier Ensembles is to generate classifiers that are diverse and minimally correlated [Kittler
et al. 1998]. Actual model combination is based on score level fusion as explained below.
According to Alg. 1 our training procedure results in M axEpoch LSTM models {Wj
LSTM}MaxEpoch
j=1 .
Typical for deep learning approaches, M axEpoch is thereby often a large number (M axEpoch = 100 in
this work). Any two models Wj
LSTM and Wj+1
LSTM may be marginally correlated only due to the substantial
variability in the training sets generated for the particular epochs j and j + 1. Our training procedure now
analyses the quality of all M axEpoch models for the separate validation set. Based on these results we then
only preserve the M best models for inclusion into the overall Ensemble – through score level fusion. It is
worth reiterating that we employ our Ensembles of LSTM learners for sample-wise activity recognition. For
every sample, i.e., every time step t, the final softmax layer of each of the M models provide class probability
vectors pm
t as defined in Eq. (12). Class probability vectors e↵ectively describe probability distributions over
the classes (activities) of interest for a specific task. Probability vectors from all M models are then combined
via their arithmetic means resulting in a final score vector pfusion
t :
pfusion
t = 1
M
X
M
m
pm
t . (19)
Fusing the M best performing and typically least correlated LSTM learners leads to substantially improved
model performance. Appendix A provides a more formal exploration of the general concept of integrating
LSTM base learners into Ensemble classifiers.
4 EXPERIMENTAL EVALUATION
In order to validate the e↵ectiveness of our HAR framework we conducted an experimental evaluation. For
this we ran recognition experiments on three benchmark datasets that are considered standard in the field
and thus widely used in the literature. In what follows we will first describe our training and evaluation
methodology, followed by a summary of the details of the datasets used for the evaluation study, and finally
present and discuss our results.
4.1 Model Training, and Evaluation Protocol
All experiments were conducted using the framework introduced in this paper. As such they share a set of
common parameters that are described in what follows thereby covering general model configurations, as
well as training and evaluation methodologies as explained below. Dataset specific modifications –if any–
are discussed in the dataset description subsections. Apart from potential subsampling and modality fusion,
sensor data are used ”as is” that is without employing feature extraction methods be it based on heuristics
[Pl¨otz et al. 2010; Bulling et al. 2014] or on more sophisticated transformations [Hammerla et al. 2013],
which is in line with the majority of recent, Deep Learning based analysis methods in the field of human
activity recognition using wearable sensing platforms.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:15
Table I. Configuration of mini-batch size and frame
length for model training / test.
– mini-batch size Bˆ frame length Lˆ
training U(128, 256) U(16, 32)
(mini-batch wise)
test 1 1
(sample wise)
U(·, ·) denotes a random number generator that draws integers from a discrete uniform distribution with range (·, ·).
4.1.1 Model Configuration. For all experiments that use our LSTM learners, i.e., those based on individual learners as baselines as well as those employing the Ensembles, we use the following LSTM model
configuration. We built two-layer LSTM networks, with each layer containing 256 LSTM units. Dropout was
performed at the first and second hidden layers both with a probability of 0.5. We used the ADAM updating
function [Kingma and Ba 2014], with a learning rate of 0.001. Extending previous work where random starting points have been used for each epoch [Hammerla et al. 2016], during training we dynamically determined
mini-batch size Bˆ and frame lengths Lˆ randomly within a given range (see Tab. I). During test we performed
inference at sample level, i.e., both Lˆ and Bˆ are set to 1. We implemented our framework using Lasagne, a
lightweight Theano library to build deep neural networks. Models were trained on an NVIDIA GPU Tesla
K40, and average training times were 9 ⇠ 12s per epoch for Opportunity/PAMAP2 datasets, and 3 ⇠ 4
seconds per epoch for the Skoda dataset.
4.1.2 Evaluation. Overall we are interested in evaluating the robustness of our proposed method for realworld application scenarios. As such we carefully configured the evaluation protocol aiming for meaningful,
practically relevant, and comparable evaluation results. Based on standard benchmark datasets as described
below we adopted evaluation scenarios as they have been used before, which makes our results comparable to
related work. Specifically, we avoided commonly used but unrealistically over-optimistic evaluation protocols
such as unconstrained n-fold cross-validation [Hammerla and Pl¨otz 2015]. In accordance with previous work
we used hold-out validation and testing protocols where fixed, disjoint portions of a datasets are used for
training, validation and testing. In line with standard procedures in the field, results are reported as mean
F1-scores:
F¯
1 = 1
K
X
K
k=1
2TPk
2TPk + FPk + FNk
, (20)
with k = 1 ...K classes (activities) considered. TPk, FPk, FNk denote the number of true positive, false
positive, and false negative predictions, respectively.
Through our experimental evaluation we analyse the e↵ects the parameters (details explained below)
of our approach have on the overall recognition performance. For every model configuration we ran 30
repetitions of the particular experiments and report averaged F1 scores for each set of experiments (plus
standard deviation). Given the elements of –intentional– randomness in our Ensemble creation procedure,
this protocol captures the performance as it is to be expected for real-world deployments and enables formal
statistical significance testing. For the latter we employ two-tailed independent t-tests and report significance
levels through p values, where p  0.05, p  0.01 and p  0.001 correspond to *, ** and ***, respectively
(in line with the literature, e.g., [Morales and Roggen 2016]).
Note that we report sample-wise prediction results, which is according to our overall motivation and in line
with previous work [Hammerla et al. 2016] but di↵erent to frame-wise results as, for example, reported in
[Ord´o˜nez and Roggen 2016]. For comparability we reran experiments from the literature and where necessary
converted frame-based results to sample-wise prediction.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:16 • Y. Guan and T. Pl¨otz
4.2 Datasets
In line with related work in this field we evaluated our system on three benchmark datasets that have
widely been used within the community. These datasets contain continuous sensor readings from inertial
measurement units that were worn by participants of the particular studies at di↵erent positions at their
bodies. The chosen datasets correspond to three diverse but at the same time typical tasks for human
activity recognition in the field. In line with our general ambition to develop recognition systems for realworld HAR applications, our primary concern is related to the evaluation of challenging, realistic benchmark
datasets – most prominently Opportunity, which, arguably, represents one of the most dicult datasets to
date. However, in order to avoid potential overfitting to one specific scenario and –more importantly– to
demonstrate the generalisability of the developed method, we evaluate our approach on datasets that might
not be directly mirroring real-world deployments but still are widely used in the research community (e.g.,
PAMAP2).
Fig. 5 shows the class distributions for the three datasets illustrating one of the aforementioned challenges
to HAR in ubiquitous and wearable computing. In addition, Fig. 6 gives an overview of average durations
of activities of interests in all three datasets, which shows the substantial variability and thus further challenges for automated recognition. Especially for the Opportunity dataset a substantially imbalanced class
distribution with an additional strong bias towards the NULL class can be observed (Fig. 5a). This is not
unusual for mobile application scenarios where activities of interest are often underrepresented in the overall
dataset due to the continuous recording in real-life scenarios. Prominent examples for such scenarios are
health assessments where problematic activities or behaviours are typically the rare exception within other,
less problematic activities. For example, freeze of gait in Parkinson’s is a common problem amongst patients
but throughout the day such freezing episodes are rare – though very critical w.r.t. health and wellbeing
of the patient and thus require reliable recognition (e.g., [Bachlin et al. 2010]). Another related example
from the literature is the automated assessment of problem behaviour in individuals with Autism, where
aggressive behaviours do occur frequently yet they typically represent the minority of everyday activities
thus resulting in imbalanced datasets [Pl¨otz et al. 2012]. PAMAP2 is a dataset that was recorded in a much
more rigorously scripted and thus constrained manner, which results in a well balanced class distribution –
mainly reasoned by the absence of a NULL class (Fig. 5b). Finally, the Skoda dataset [Stiefmeier et al. 2008]
shows a reasonably well balanced class distribution for the activities of interest (Fig. 5c). However, overall the
dataset is still dominated by the NULL class rendering it biased as one would expect for real-world scenarios
as discussed before. Note that for most real-world deployments of HAR it is rather unrealistic to assume that
simple pre-processing techniques would allow to e↵ectively eliminate background data (NULL class) from
continuous recordings of sensor data. The reason for this is that background activities often are very diverse
and the classification into background vs activities of interest typically corresponds to a non-trivial task
itself, which typically requires more than simple filtering. Furthermore, whilst it may be straightforward to
identify and eliminate faulty sensor readings, noisy sensor data, that are very common in mobile scenarios,
represent a di↵erent kind of challenge that require more sophisticated measures to tackle. In what follows
we will provide detailed summaries of the three datasets and how they have been used in our experimental
evaluations.
4.2.1 Opportunity. The Opportunity dataset is the result of a concerted e↵ort towards collecting a benchmark dataset for human activity recognition using body-worn sensors [Chavarriaga et al. 2013]. It consists
of annotated recordings from a total of four participants who wore an armada of sensors and were instructed
to carry out everyday life domestic activities, specifically focusing on kitchen routine. Data was recorded
using Inertial Measurement Units attached at 12 on-body positions. The sampling frequency for all IMUs
was 30Hz, and annotations are provided for 18 mid-level activities, such as Open Door / Close Door. Every
participant performed five di↵erent runs of the kitchen activities. We replicate the training, validation, and
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:17
(a) Opportunity (b) PAMAP2 (c) Skoda
Fig. 5. Class distributions of the three datasets used for experimental evaluation (best viewed in colour).
test protocol from [Hammerla et al. 2016]. Accelerometer recordings from the upper limbs, the back, and
complete IMU data from both feet were used resulting in a 79-dimensional dataset. All data were normalised
to zero mean and unit variance. The second run from participant 1 was used as validation set, and we use
runs 4 and 5 from participants 2 and 3 as test. The remaining data were used for training (total of approx.
650k samples).
4.2.2 PAMAP2. This dataset was recorded in a scripted and thus rather constrained setting where nine
participants were instructed to carry out a total of 12 activities of daily living, covering domestic activities
and various sportive exercises (Nordic walking, running, etc) [Reiss and Stricker 2012]. Full IMU data (accelerometer, gyroscope, magnetometer) plus temperature and heart rate data were recorded from body-worn
sensing platforms that were attached to the hand, chest and ankle. A total of more than 10 hours of data
was collected. The resulting dataset has 52 dimensions. Sensor data were down-sampled to 33Hz to match
the temporal resolution of the other datasets used. All samples were normalised to zero mean and unit
variance. Again replicating the protocol from [Hammerla et al. 2016], we used runs 1 and 2 for participant 5
for validation, and runs 1 and 2 from the sixth participant as test. The remaining data was used for training
(total of approx. 473k samples).
4.2.3 Skoda. The third dataset used for our experimental evaluation has been recorded in a manufacturing scenario. Specifically, it covers the problem of recognising activities of assembly-line workers in a
car production environment [Stiefmeier et al. 2008]. In the study that led to the collection of the Skoda
dataset a worker wore a number of accelerometers while undertaking manual quality checks for correct assembly of parts in newly constructed cars. These checks translate into 10 manipulative gestures of interest,
including checking the boot, opening/closing engine bonnet, boot and doors, and turning the steering wheel.
Accelerometer data were down-sampled to 33Hz, and we normalised them to zero mean and unit variance.
We used data (raw and calibrated, according to the dataset description in the original publication) recorded
using the 10 accelerometers worn on the right arm of the worker, resulting in 60-dimensional input data. As
for the other two datasets we use hold-out validation and test protocols. The training set contains the first
80% of each class (a total of approx. 190k samples), validation the next 10%, and test contains the remainder
of the dataset.
4.3 Results
Tab. II provides an overview of the results of our experimental evaluation based on Ensembles of LSTM
learners as achieved for the three benchmark datasets. The table contains results (mean F1 scores and standard deviations based on 30 repetitions each, cf. Sec. 4.1.2 for explanation) for various model configurations
(specified in first column):
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:18 • Y. Guan and T. Pl¨otz
(a) Opportunity
(b) PAMAP2
(c) Skoda
Fig. 6. Average durations of activities for the three benchmark datasets used [mean ± std]
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:19
Table II. Results [F1 scores; standard deviation] for sample-wise activity recognition using
variants of Ensembles of LSTM learners. See text for description.
Modelling Method Opportunity PAMAP2 Skoda
(# learners M; loss function [F1, CE, both])
Single (M = 1) – CE(1) 0.674 ± 0.021 0.802 ± 0.045 0.918 ± 0.007
Single (M = 1) – F1(1) 0.654 ± 0.027 0.776 ± 0.050 0.907 ± 0.030
Ensemble (M = 10) – CE(10) 0.716 ± 0.011 0.848 ± 0.021 0.925 ± 0.002
Ensemble (M = 10) – F1(10) 0.706 ± 0.013 0.810 ± 0.033 0.921 ± 0.003
Ensemble (M = 20) – CE(20) 0.720 ± 0.011 0.852 ± 0.026 0.926 ± 0.001
Ensemble (M = 20) – F1(20) 0.714 ± 0.012 0.811 ± 0.032 0.921 ± 0.002
Ensemble (M = 20; 10 each) – CE(10)+F1(10) 0.726 ± 0.008 0.854 ± 0.026 0.924 ± 0.002
Number of base learners for Ensembles. We analysed the e↵ect the incorporation of LSTM models into
the overall recognition framework has on the total HAR performance. For every dataset we tested
Ensembles with the best M = 1 (’Single’), M = 10, and M = 20 individual LSTM learners.
Loss functions. We evaluated the use of standard cross entropy –’Ensemble (CE)’– and F1 scores –
’Ensemble (F1))’– as loss functions, as well as the combination of models based on either of these loss
functions (’Ensemble (CE+F1)’).
Fig. 7 illustrates results of statistical significance tests for all experiments as described in Sec. 4.1.2. Furthermore, Figs. 8 and 9 show class-specific recognition results and confusion matrices for all three recognition
tasks. Averaged confusion matrices in Fig. 9 are given for the best model configuration, namely Ensembles
with CE+F1 loss functions and 10 base learners each.
The results unveil a number of interesting e↵ects our Ensemble based modelling approach has on human
activity recognition. First, integrating more than one base learner into a recognition system indeed has the
positive e↵ect we hypothesised at the outset of our work. In line with related work (cf. Sec. 2.2), it can be
seen that strong learners –LSTM models in our case– can indeed be integrated into very e↵ective ensembles
that outperform single, that is, individual models. Recognition results are consistent across all three tasks,
which is indicated by the relatively small standard deviation (Tab. II), which essentially demonstrates the
e↵ectiveness of our novel training method that generates models that focus well on di↵erent aspects of the
(challenging) sample data. Recognition results improve for both loss functions when increasing the number of
base learners. Practically for all three tasks the classification performance plateaus for M = 10 base learners
(no statistically significant improvements when increasing to M = 20 (with the exception of Opportunity
where doubling the number of base learners to M = 20 [F1 loss] leads to improvements that are just
significant).
The classification performance can be further increased for Opportunity when injecting an additional source
of variation. For this dataset –which shows a strongly biased class distributions– the combination of learners
trained using di↵erent loss functions (CE and F1) further increases the diversity covered by the resulting
ensemble, which pushes the recognition performance in a (strongly) significant manner (’Ensemble (M = 20,
10 each) – CE(10)+F1(10)’ in Tab. II). PAMAP2 does not benefit from diversity in loss function, which is
attributed to the more homogeneous underlying class distribution and thus the lesser need for diversification
of the modelling approach. Note that our LSTM based approach still substantially outperforms the stateof-the-art for all three tasks (see below) and that adding further diversity does not harm those recognition
systems that seemingly have plateaued in their classification performance (such as PAMAP2), which is of
value for practical applications.
The results of the experiments with di↵erent loss functions during model training are interesting in itself.
Cross entropy loss functions are widely used in the literature. However, when evaluating the overall recognition accuracy using F1 scores –as it is ideal for imbalanced data scenarios– it seems more intuitive to use
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:20 • Y. Guan and T. Pl¨otz
Opportunity
PAMAP2
Skoda
Fig. 7. Statistical significance analysis (two-tailed independent t-test) of recognition experiments using variants of LSTM
ensembles, based on 30 trials each. See text for description, best viewed in colour.
the alternative F1 loss function for model optimisation. Interestingly, we did not see any positive e↵ect on
individual learners when changing the loss function. One of the major reason is that the F1 loss is a global
measure [Jansche 2005], while our models are updated based on mini-batches, which may not precisely approximate the ”true” gradient towards an optimal F1 score over the whole data set. Given the features of
both loss functions, we expected these two types of base learners may behave di↵erently in certain scenarios,
and are likely to be less correlated. The experimental results confirm our expectation, and we can see the
Ensemble (CE+F1) leads to improved performance for the most challenging recognition task. Arguably, this
further justifies our motivation for using Ensembles of LSTMs. By mixing learners that were trained with
di↵erent loss functions we further increase the variability as it is of importance for any classifier Ensemble
approach [Kittler et al. 1998].
Fig. 8 provides insights into which activities benefit most from our approach. In line with our original
hypothesis the baseline classifiers struggle the most with those classes that are rather diverse:
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:21
Opportunity. Given the challenging nature of the dataset and the variability of its activity instances
(cf. Fig. 6 for a visualisation of the substantial variability in duration alone), nearly all target activities
benefit from our approach that utilises a combination of base learners that are based on the two di↵erent
loss functions (i.e., CE(10)+F1(10)) achieves the best performance.
PAMAP2. For this rather homogeneous dataset, performance gains are more moderate (still significant)
and are largely centred on ’sitting’, ’stairs’, and ’vacuuming’. Given that humans typically engage in a
range of parallel activities while performing either of these three activities this is a result that supports
our hypothesis that modelling needs to focus on diversity.
Skoda. In line with the previous argumentation the Skoda task benefits the most from our approach for
the opening and closing doors activities.
Overall, our method –that is the Ensemble with combined loss functions ’CE(10)+F1(10)’– produces the
largest performance gains for challenging classes and almost never has a detrimental e↵ect on any of the
activity classes, which is very encouraging for real-world scenarios.
For completeness Fig. 9 shows confusion matrices for all three recognition tasks (each averaged over the
30 trials) and the best performing model configuration (’Ensemble (M=20) – CE(10)+F1(10)’; cf. Tab. II).
Not surprisingly, the largest confusion is caused by the NULL class (if there is one). Also, classes with very
small sample numbers do not benefit as much due to the fact that our learners simply will not be able to
capture as much variability as for larger sample sets.
To contextualise the achieved results we ran reference experiments that allow us to compare our approach
to the state-of-the-art. Note that, according to the literature, the best results on all three datasets are
currently achieved using (variants of) deep learning methods. Consequently, our comparison is focused on
these approaches that e↵ectively serve as benchmarks at the time of writing. These reference experiments
are based on implementations as described in the particular original papers thereby in part making use of
the source code provided by the authors and replicating the model configurations used there [Hochreiter
and Schmidhuber 1997; Hammerla et al. 2016; Ord´o˜nez and Roggen 2016]. Tab. III summarises the results
illustrating the substantial improvement in recognition performance for both Opportunity and PAMAP2.
When analysing our results in light of the class distributions of the particular datasets (Fig. 5) and the
general quality of the sensor readings –as discussed throughout this paper these were the main motivation
for the developing the Ensemble approach– it becomes clear that our method is well suited for real-world,
challenging activity recognition tasks. Specifically for those scenarios with imbalanced class distributions
as they are typical for mobile application scenarios and with challenging data quality Ensembles of LSTM
learners very e↵ectively make use of said data resulting in real gains of recognition performance. The Opportunity challenge is widely known for being both realistic and challenging in the aforementioned sense and
observing substantial improvements through employing our method is very encouraging. The same holds
for the PAMAP2 task, though not at the same magnitude, which is as expected considering the less biased
dataset resulting from more controlled recording settings. Somewhat surprisingly no substantial –yet still
significant– performance boost can be gained for the Skoda task, which we believe is attributed to the fact
that only data for one worker is considered and the task thus does not include challenging test data from
di↵erent environments for robustness evaluation. In this case, our method does not benefit significantly from
its generalisation capability. For this simple task, the baseline models already achieve high specialisation.
Evidence for this assumption is given by the very high baseline results (F¯
1 > 0.9). However, even though
our method does not increase recognition accuracy here, it also does not cause any harm, which is very encouraging for real world applications as neither any assumptions nor prior knowledge about the underlying
class distribution are required for using our approach.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:22 • Y. Guan and T. Pl¨otz
(a) Opportunity (b) PAMAP2
(c) Skoda
Fig. 8. Class-wise recognition results for experiments on benchmark datasets (F1 scores; averages over 30 trials each).
(a) Opportunity (b) PAMAP2 (c) Skoda
Fig. 9. Confusion matrices for all recognition experiments (Ensemble model (CE(10)+F1(10)), best viewed in colour).
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:23
Table III. Comparison of recognition results achieved using our LSTM Ensemble (CE(10)+F1(10)) vs
baselines using the state-of-the-art for sample-wise activity recognition (F1 scores averaged over 30
trials each).
Modelling Method Opportunity PAMAP2 Skoda
LSTM baseline (acc. to [Hochreiter and Schmidhuber 1997]) 0.659 0.756 0.904
DeepConvLSTM (acc. to [Ord´o˜nez and Roggen 2016]) 0.672 0.748 0.912
LSTM-S (acc. to [Hammerla et al. 2016]) 0.684 0.838 0.921
LSTM Ensemble (this work) 0.726 ±0.008 0.854 ±0.026 0.924±0.002
5 DISCUSSION
The main motivation for our work is to develop innovative modelling techniques for robust and reliable
human activity recognition that can be deployed in real-world scenarios. Very much in the general tradition of
Ubicomp and its original vision we strive to have a positive impact on people’s lives, and activity recognition
in ubiquitous computing forms the basis for many research endeavours that follow that vision. As such,
the recognition capabilities of state-of-the-art HAR methods for challenging, that is, real-world scenario is
still leaving substantial room for improvement. For example, even with the latest generation of deep learning
modelling techniques, benchmark results for the Opportunity challenge –arguably one of the most challenging
yet most realistic HAR datasets– still suggests that substantial further research is needed on the way towards
fulfilling the Ubicomp vision.
In this paper we developed an activity recognition framework that targets challenging, real-life scenarios,
specifically addressing noisy and imbalanced datasets as they are typical for mobile applications of human
activity recognition. Our framework is based on the integration of individual deep Long Short Term Memory
(LSTM) networks into Ensemble classifiers. We chose deep learning in general and (unmodified) LSTM models in particular as the starting point for our work because recent related work employing LSTM recognisers
has demonstrated their excellent recognition capabilities including superior classification performance for
many applications in the wider wearable and ubiquitous computing domain. LSTMs represent variants of
recurrent neural networks with principally infinite memory. In line with recent related work we argue that
such sequential models are well suited for the analysis of sensor data streams. Through combining multiple, diverse base LSTM learners into Ensembles we are able to significantly increase the robustness of the
resulting recognition system, which is illustrated by substantial improvements of the recognition accuracy
as validated on three standard benchmark datasets (Opportunity, PAMAP2, Skoda). The core technical
contribution of our work can be summarised as follows:
(1) To the best of our knowledge this is the first time that deep LSTM models are integrated into an
Ensemble based modelling approach for human activity recognition using wearables. With this Ensemble
framework we are able to significantly improve recognition accuracies on standard benchmark datasets.
These datasets represent challenging, real-world HAR scenarios and significantly improving over the
state-of-the-art demonstrates the practical value of our proposed method.
(2) The basis for our Ensemble framework is a modified training procedure for deriving diverse sets of LSTM
based activity recognisers that specifically target problematic data situations in real-life scenarios. The
anatomy of the underlying base LSTM learners remains unchanged (w.r.t. how they have been introduced
in the literature), which, together with its implementation using standard, open-source toolkits, allows
for straightforward replication of our approach (and experiments) and system integration.
(3) We employ our Ensembles of deep LSTM networks for improved, sample-wise activity recognition, which
has substantial potential for future applications of HAR, such as, activity prediction for time-critical
inference.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:24 • Y. Guan and T. Pl¨otz
Our extensive experimental evaluation demonstrates the potential the presented approach has. For all
three analysed standard benchmark datasets the presented approach outperforms the state-of-the-art in a
statistically significant manner. Specifically for challenging HAR scenarios –exemplarily explored using the
Opportunity dataset– substantial gains of classification accuracy can be achieved. Our method e↵ectively
tackles typical problems of real-world deployments of wearable HAR systems namely imbalanced class distribution often with substantially over-represented NULL / background class, as well as noisy if not faulty
sensor readings. We have argued that in real-world deployment it is typically not straightforward to filter out
unwanted samples, such as background or NULL data, and thus the increased robustness provided by our
approach is especially encouraging. Arguably, our method has the greatest potential for those challenging
datasets. In addition the results of our experimental evaluation demonstrate that the method does barely
lead to detrimental results even for the cases where single models already achieve very high classification
accuracies (some activities in PAMAP2 and Skoda). As such our experiments demonstrate a generalisable
applicability.
The focus of this paper was on the development of the basic methodology. As such we have not yet addressed
implementation issues as they would be of relevance for field deployments or products even. However, it
has recently been shown that even complex deep neural networks can e↵ectively be used for inference on
substantially resource constrained platforms such as smartwatches [Bhattacharya and Lane 2016]. In order
to be able to implement complex deep neural networks on such devices sophisticated optimisation techniques
are necessary. The majority of these correspond to pruning e↵orts with regards to the e↵ective parameter
space. Our Ensembles certainly inflate this parameter space, yet the general principle of pruning remains
accessible as we did not change the general nature of the models (the core of our contribution lies in the
modified training procedure) – no dependencies have been introduced that would prevent pruning of the
parameter space. As such we are confident that our models can be implemented on wearable devices for
interactive HAR scenarios. Note that o✏ine analysis scenarios –as they are most common in the Ubicomp
domain, for example, for after the fact analysis in health and wellbeing domains– are not a↵ected at all by
such concerns and our method is directly usable. Importantly our models operate on the basis of sample-wise
prediction. This is a principle advantage for future real-time applications (e.g., fall detection).
APPENDIX
A. REDUCING LOSS IN LSTM ENSEMBLES
Our recognition approach integrates a number of vanilla LSTM models as base learners into an Ensemble
framework. By means of our experimental evaluation we have demonstrated how this approach leads to significantly improved robustness and thus classification performance. In what follows we provide an exemplary
and more formal exploration on why LSTM base learners lead to improved classification performance.
As a sequential model, LSTM takes a current signal xt, and previous states (i.e., hidden state ht1 and
cell state ct1) as inputs and performs sample-wise prediction (Eqs. (6) – (12) in Sec. 2.1.2). For the sake of
clarity but without loss of generality, here we argue based on the example of reduction of cross entropy loss
(referred to as CE), arguably the most popular loss function in the field. Specifically, CE corresponds to the
negative logarithmic loss of the predicted probability for target class k and thus –inversely proportionally–
to the predicted class probability. For example, with class probability ptk for target class k at time t, the
corresponding CE LCE
t is:
LCE
t =  ln ptk. (21)
Let zt 2 RK be the binary vector indicating correct class label k such that ztk = 1 ^ {ztj = 0}j6=k. LCE
t can
also be written in vector form as follows:
LCE
t = (zt)
T ln pt. (22)
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
Ensembles of Deep LSTM Learners for Activity Recognition using Wearables • 11:25
Next we explicitly model the process of reducing LSTM loss –CE in this case– for unseen test data.
Average Loss of M Individual Learners
For test data with t = 1, 2, ..., N samples, the expected CE Lm of the m-th model is given as follows:
Lm = Et(zt)
T ln pm
t , (23)
where E denotes expectation. With this the average loss Lavg for M models can then be written as:
Lavg =  1
M
X
M
m=1
Et(zt)
T ln pm
t (24)
= Etln ptk
with: ln ptk = 1
M
X
M
m=1
ln pm
tk. (25)
Loss when fusing M models
For a fused model, i.e., an Ensemble that has been created through score level fusion of multiple individual
learners, the corresponding CE can be formulated in a similar way. At time step t the CE Lfusion
t of the
Ensemble is defined as follows:
Lfusion
t = (zt)
T ln pfusion
t (26)
where pfusion
t denotes the score level fusion, as defined in Eq. (19). The average CE Lfusion for the t =
1, 2, ..., N test samples can then be written as:
Lfusion = Et(zt)
T ln pfusion
t (27)
= Et(zt)
T ln( 1
M
X
M
m=1
pm
t ) (28)
= Et ln ptk (29)
with: ptk = 1
M
X
M
m=1
pm
tk. (30)
Let  = Lavg  Lfusion denote the di↵erence between average CE of individual LSTM learners and the CE
of the Ensemble for the test data, then we have:
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 2, Article 11, Publication date: June 2017.
11:26 • Y. Guan and T. Pl¨otz
 = Et{ln ptk  ln ptk} (31)
= Et{ 1
M
X
M
m=1
ln pm
tk  ln 1
M
X
M
m=1
pm
tk} (32)
= Et{ 1
M
ln Y
M
m=1
pm
tk  ln 1
M
X
M
m=1
pm
tk} (33)
= Et{ln M
vuut Y
M
m=1
pm
tk  ln 1
M
X
M
m=1
pm
tk} (34)
= Et{ln
M
qQM
m=1 pm
tk
1
M
PM
m=1 pm
tk
}. (35)
Since M
qQM
m=1 pm
tk  1
M
PM
m=1 pm
tk holds for {pm
tk  0}M
m=1 (inequality of arithmetic and geometric means
[Steele 2004]), we have shown that the average model loss for the Ensemble is always less or equal to the
average loss of individual learners, which is beneficial for the targeted application scenario:
Lavg  Lfusion. (36)
Note that Lavg = Lfusion holds if p1
tk = p2
tk = ... = pM
tk , i.e., when fusing M identical LSTM learners. In
general, the Ensemble performance benefits (with improved prediction probabilities for the true classes) by
fusing M diverse, i.e., less correlated models.
Implementation and Source Code
The framework presented in this paper was implemented in Python, using standard libraries as well the
Lasagne [Dieleman et al. 2015] and Theano [Theano Development Team 2016] frameworks. The complete
source code has been made publicly available at github.com/tploetz/LSTMEnsemble4HAR (GNU GPL).