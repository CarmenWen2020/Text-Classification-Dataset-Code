This article proves the completeness of an axiomatization for differential equation invariants described by
Noetherian functions. First, the differential equation axioms of differential dynamic logic are shown to be
complete for reasoning about analytic invariants. Completeness crucially exploits differential ghosts, which
introduce additional variables that can be chosen to evolve freely along new differential equations. Cleverly
chosen differential ghosts are the proof-theoretical counterpart of dark matter. They create a new hypothetical
state, whose relationship to the original state variables satisfies invariants that did not exist before. The
reflection of these new invariants in the original system then enables its analysis.
An extended axiomatization with existence and uniqueness axioms is complete for all local progress properties, and, with a real induction axiom, is complete for all semianalytic invariants. This parsimonious axiomatization serves as the logical foundation for reasoning about invariants of differential equations. Indeed, it
is precisely this logical treatment that enables the generalization of completeness to the Noetherian case.
CCS Concepts: • Mathematics of computing → Ordinary differential equations; • Theory of computation → Proof theory; Modal and temporal logics; Programming logic
Additional Key Words and Phrases: Differential equation axiomatization, invariants, differential dynamic
logic, differential ghosts, Noetherian functions
1 INTRODUCTION
Classically, differential equations are studied by analyzing their solutions, which is at odds with
the fact that solutions are often much more complicated than the differential equations themselves.
This stark difference between the simple local description as differential equations and the complex
global behavior exhibited by their solutions is fundamental to the descriptive power of differential
equations. Poincaré’s qualitative study of differential equations [34] calls for the exploitation of this
difference by deducing properties of solutions directly from the differential equations. This article
completes an important step in this enterprise by identifying the logical foundations for proving
invariance properties of differential equations described by Noetherian functions [3, 11, 12, 41].
This result exploits the differential equation axioms of differential dynamic logic (dL) [29, 32]. dL
is a logic for deductive verification of hybrid systems that are modeled by hybrid programs combining discrete computation (e.g., assignments, tests, and loops), and continuous dynamics specified
using systems of ordinary differential equations (ODEs). By the continuous relative completeness
theorem for dL [29, Theorem 1], verification of hybrid systems reduces completely to the study of
differential equations. Thus, the hybrid systems axioms of dL provide a way of lifting the findings
of this article about differential equations to hybrid systems. The remaining practical challenge is
to find succinct ODE invariants. The dL calculus reduces proving such an invariant to arithmetical
questions, which are decidable if the invariants are in first-order real arithmetic [4].
To understand the difficulty in verifying properties of ODEs, it is useful to draw an analogy
between ODEs and discrete program loops.1 Loops also exhibit the dichotomy between global
behavior and local description. Although the body of a loop may be simple, it is almost always
impractical to reason about the global behavior of loops by unfolding all possible iterations. Instead,
the premier reasoning technique for loops is to study their loop invariants, i.e., inductive properties
that are always preserved across each execution of the loop body.
Similarly, invariants of ODEs describe subsets of the state space from which solutions of the
ODEs cannot escape. The three basic dL principles for reasoning about such invariants are: (1) differential invariants, which enable local reasoning about local change of truth in differential form,
(2) differential cuts, which accumulate knowledge about the evolution of an ODE from multiple
proofs, and (3) differential ghosts, which add differential equations for new ghost variables to the
existing system of differential equations enabling reasoning about the historical evolution of ODE
systems in integral form. These reasoning principles relate to their discrete loop counterparts as follows: (1) corresponds to loop induction by analyzing the loop body, (2) corresponds to progressive
refinement of the loop guards, and (3) corresponds to adding discrete ghost variables to remember intermediate program states. At first glance, differential ghosts seem counter-intuitive: they
increase the dimension of the system, which should be adverse to analyzing it! However, just as
the addition of discrete ghosts allows the expression of new relationships between variables along
executions of a program [26], adding differential ghosts that suitably co-evolve with the ODEs crucially allows the expression of new relationships along solutions to the differential equations. The
ramifications of these new relationships are then used to analyze the original, unaugmented ODEs.
The dL proof calculus internalizes these reasoning principles as syntactic axioms [32]. ODE
invariance proofs in dL are syntactic derivations whose correctness relies solely on the soundness
of these underlying axioms. Crucially, this obviates the need to unfold the mathematical semantics
of differential equations for proving their invariance properties. This separation of syntax and
axiomatics from semantics enables their sound implementation, e.g., in KeYmaera X [10] with
dL’s uniform substitution calculus [32], and their verification in foundational theorem provers [5].
This article extends the authors’ earlier conference version [33] beyond the polynomial setting
and presents a differential equation invariance axiomatization. For extended term languages (and
ODEs) meeting three extended term conditions, this article presents the following contributions:
(1) All analytic invariants, i.e., finite conjunctions and disjunctions of equations between
extended terms, are provable using only the three ODE axioms outlined above.
(2) With axioms internalizing the existence and uniqueness theorems for solutions of differential equations, all local progress properties of ODEs are provable for all semianalytic
formulas, i.e., propositional combinations of inequalities between extended terms.
1In fact, this analogy can be made precise: dL also has a converse relative completeness theorem [29, Theorem 2] that
reduces hybrid systems and their ODEs completely to discrete Euler approximation loops.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
Differential Equation Invariance Axiomatization 6:3
(3) With a real induction axiom that reduces invariance to local progress, the dL calculus is
complete for proving all semianalytic invariants of differential equations.
(4) These are axiomatic completeness results: all (semi)analytic invariance and local progress
questions are provably equivalent in dL to questions about the underlying arithmetic. This
equivalence also yields disproofs when the resulting arithmetic questions are refuted.
These results are proved constructively, yielding practical and purely logical proof-producing
procedures for reducing ODE invariance questions to arithmetical questions in dL. The most subtle
step is the construction of suitable differential ghosts that simplify the analysis as a function of both
the differential equations and desired invariant. The axiomatic approach crucially enables these
contributions, because the axioms internalize basic properties of ODEs and thus remain sound and
complete for all extended term languages meeting the extended term conditions. Furthermore, the
identification of a parsimonious yet complete ODE axiomatization provides the best of both worlds:
parsimony minimizes effort required in implementation and verification of the proof calculus while
completeness guarantees that all ODE invariance reasoning is possible using only syntactic proofs
from the foundational axioms. Since the completeness results prove equivalences, these advantages
continue to hold whether proving or disproving invariance properties of differential equations.
This logical foundation is essential, because it enables compositional syntactic reasoning in dL for
(continuous) differential equations in isolation from other (discrete) parts of the hybrid system [29].
Since Noetherian functions from real analytic geometry [3, 11, 12, 41] generate Noetherian rings
closed under (partial) derivatives, they meet all of the extended term conditions and thus provide
an ideal setting for extending term languages. Noetherian functions include many functions of
practical interest for modeling hybrid systems, e.g., real exponential and trigonometric functions,
which are implicitly definable in dL [28, 29] but do not come with effective reasoning principles.2
Making them first-class members of the term language enables their explicit use in hybrid systems
models and proofs, especially in descriptions of ODE invariants. The study of Noetherian functions
is a major new contribution of this extended version, among others:
(5) Noetherian functions are shown to meet the extended term conditions. Any such extension automatically inherits all of the aforementioned completeness results.
(6) The authors’ earlier results and proofs [33] are generalized to extended term languages.
(7) A stronger proof-theoretical result is shown for algebraic (and analytic) completeness
compared to the earlier result [33] using only scalar differential ghosts.
Just as discrete ghosts can make a program logic relatively complete [26], differential ghosts
achieve completeness for algebraic (and analytic) invariants in dL. Improvement (7) is significant
for conceptual, implementation, and proof purposes. All algebraic (and analytic) invariants can
now be proved using only a constant number of scalar differential ghosts compared to the earlier result [33], which introduces a quadratic number of ghost variables using vectorial differential ghosts.
2 BACKGROUND: DIFFERENTIAL DYNAMIC LOGIC
This section briefly reviews (differential-form) differential dynamic logic (dL), focusing on its continuous fragment. It also establishes the notational conventions used in this article and motivates
the extended term conditions. The interested reader is referred to the literature [29, 32] for a complete exposition of dL, including its discrete and hybrid fragments.
2The relative decidability theorem for dL [29, Theorem 11] needs either an oracle for (continuous) differential equation
properties or an oracle for discrete program properties.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
6:4 A. Platzer and Y. K. Tan
2.1 Syntax
Terms in dL are given by the following grammar, where x ∈ V is a variable from the set of all
variables V, c ∈ Q is a rational constant, and h ∈ {h1,...,hr } are k-ary function symbols:
e, e˜ ::= x | c | e + e˜ | e · e˜ | h(e1,..., ek ) | (e)

Terms generated using only the first four clauses of this grammar correspond to polynomials
over the variables under consideration. For this article, the term language is extended with a finite number of new k-ary fixed function symbols, h ∈ {h1,...,hr }, with fixed interpretations.
As a running example of such an extended term language, consider the unary function symbols
exp,sin, cos, which are always interpreted as the real exponential and trigonometric functions,
respectively:
e, e˜ ::= x | c | e + e˜ | e · e˜ | exp(e) | sin(e) | cos(e) | (e)
 (1)
Of course, the syntactic extension cannot be completely arbitrary, e.g., adding functions h whose
interpretation is nowhere differentiable would fundamentally break the enterprise of studying
ODEs directly by their local behavior. These unsuitable syntactic extensions are ruled out by a set
of extended term conditions. These conditions are developed and motivated along the way, with a
summary in Section 2.4. The class of Noetherian functions, which meets all of these extended term
conditions, is introduced and studied in Section 7. The Noetherian class includes the functions in
the example (exp,sin, cos) so the completeness results also apply to the extended term language
from Equation (1).
Differentials (e) are used in dL for sound differential equations reasoning [32]. The value of
(e) relates to how the value of term e changes with each of its variables as a function also of
how those variables themselves change. The fundamental insight is that, along the evolution of a
differential equation, the value of differential (e) coincides with the analytic time derivative of e
[32, Lemma 35], so that proofs about equations of differentials yield proofs about differential equations. It is crucial for soundness and compositionality that differentials have a local semantics
defined in any state, so that they can be used correctly in any context to draw sound conclusions
from syntactic manipulations mixing dynamic statements about differential equations and static
statements about differentials. The precise semantics of differentials is elaborated in Section 2.2,
while Section 2.3.1 explains how they can be used to obtain a syntactic representation of (semantic) time derivatives along solutions to differential equations. Syntactically, every variable x ∈ V
is assumed to have a corresponding differential variable x  ∈ V, which, like differential terms, are
syntactic representations of the semantic time derivative of x along solutions. Section 2.3.1 also
shows that, when in the context of an ODE, differential terms (and variables) can be provably
turned into terms that do not contain any differentials or differential variables. Therefore, e, e˜ is
used exclusively in this article to refer to such differential-free terms, e.g., (e) is the differential of
e, where e is a differential-free term.
For this article, we write x to refer to a vector of variables x1,..., xn and write e (x), e˜(x) to
emphasize that these terms depend only on variables x free. When this dependency is unimportant,
terms e, e˜ are written as usual without any dependencies. As convenient distinguishing notation,
vectors of terms are written in bold e, e˜, with ei, e˜i for theirith components. These vectorial terms
and their corresponding dimensions are always explicitly specified when used, e.g., in Section 4.1.
Polynomial terms are useful as familiar illustrative examples and they also enjoy special properties
not necessarily shared by extended term languages. The notation p,q is reserved for polynomial
terms, with dependencies p(x),q(x) added when necessary.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
Differential Equation Invariance Axiomatization 6:5
Formulas of dL are given by the following grammar, where ∼ is a comparison operator =, ≥, >
and α is a differential equation (or, more generally, a hybrid program [29, 32]):
ϕ,ψ ::= e ∼ e˜ | ϕ ∧ψ | ϕ ∨ψ | ¬ϕ | ∀x ϕ | ∃x ϕ | [α]ϕ | αϕ
Formulas can be normalized such that every atomic comparison e ∼ e˜ has 0 on the right-hand
side. The notation e  0 is used when there is a free choice between ≥ or >. Other logical connectives, e.g., →, ↔ are definable as usual. For the formula e = e˜ where both e, e˜ have dimension n,
equality is understood component-wise as n
i=1 ei = e˜i and e  e˜ as ¬(e = e˜). The modal formula
[α]ϕ is true iff ϕ is true after all runs of α, and its dual αϕ is true iff ϕ is true after some run of α.
Formulas not containing the first-order quantifiers and modal connectives are called semianalytic formulas and are written as P,Q. The word “analytic” refers to the (semantic) real analyticity [20] of terms when extended with Noetherian functions in Section 7. As usual, the dependencies
P (x),Q(x) are added when necessary. Every semianalytic formula can be normalized to one that
is formed from only conjunctions and disjunctions of atomic comparison formulas. Formulas P,Q
formed from only conjunctions and disjunctions of equalities are called analytic formulas. When
all atomic comparisons in (semi)analytic formulas are restricted to only occur between polynomial terms p ∼ q, the resulting formulas are also known as (semi)algebraic formulas [4]. The firstorder theory of the reals with polynomial terms (and with quantifiers), is decidable by quantifier
elimination [4]. Thus, every first-order formula of real arithmetic is equivalent to a (quantifierfree) semialgebraic formula and no expressiveness is lost by disallowing first-order quantifiers in
the semialgebraic case. Unfortunately, quantifier elimination is impossible even for simple term
language extensions like the exponential function [42]. Furthermore, even for the extended term
language from Equation (1) with trigonometric functions, arithmetic questions are already undecidable [36]. Therefore, special care is taken in this article to distinguish first-order properties of
the real closed fields, i.e., those described by (semi)algebraic formulas [4], from those properties
described by (semi)analytic formulas.
The dL modalities [α] and α are parameterized by a continuous program α (more general hybrid
programs combining discrete and continuous dynamics are supported in dL but not relevant here):
α ::= ··· | x  = f (x) &Q
The continuous program x  = f (x) &Q is an autonomous (vectorial) differential equation system with left-hand side (LHS) x  = (x 
1,..., x 
n ) and right-hand side (RHS) term fi (x) for each
x 
i . Following the notational convention, fi (x) is differential-free so the ODE system x  = f (x) is
given in explicit form [32]. Autonomous ODEs x  = f (x) do not depend explicitly on time on the
RHS. A standard transformation is to add a clock variable t to the system with x  = f (x,t),t = 1
if time dependency on the RHS is desired. The evolution domain constraint Q is a semianalytic
formula restricting the set of states in which the ODE is allowed to evolve continuously; the ODE
is simply written as x  = f (x) when the domain constraint is true. The following running example
ODE is used in this article (see Figure 1):
αe
def
≡ u = −v + u
4
(1 − u2 −v2),v = u + v
4
(1 − u2 −v2) (2)
Following the analogy between ODEs and (discrete) program loops in Section 1, solutions of
an ODE must continuously (locally) follow its RHS. This is visualized in Figure 1 with directional
arrows corresponding to the RHS of αe evaluated at points on the plane. Even though the RHS of
αe are polynomials, its solutions, which must locally follow the arrows, already exhibit complex
global behavior. Figure 1 suggests, e.g., that all points (except the origin) globally evolve toward
the unit circle.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
6:6 A. Platzer and Y. K. Tan
Fig. 1. The red dashed circle u2 + v2 = 1 is approached by solutions of αe from all points except the origin,
e.g., the blue trajectory from ( 1
8 , 1
8 ) spirals toward the circle. The red circle, green region u2 ≤ v2 + 9
2 , and
origin are invariants of the system.
2.2 Semantics
A state ω : V → R assigns a real value to each variable in V; the set of all states is written S.
The semantics of term e in state ω is written as ω[[e]] ∈ R. It is defined as usual for the standard
arithmetic operators, e.g., ω[[e + e˜]] = ω[[e]] +ω[[e˜]]. The semantics of each fixed function symbol
h is given by a corresponding real-valued function h : Rk → R (using the same symbol h for the
LHS syntactic function symbol and its RHS semantic interpretation by a slight abuse of notation):
ω[[h(e1,..., ek )]] = h(ω[[e1]],...,ω[[ek ]])
The semantics of differentials [32] is the sum of partial derivatives ∂ω[[e]]
∂x by all variables x ∈
V multiplied by the values of their associated differential variables x 
, where ω(x 
) selects the
direction in which x evolves locally and ∂ω[[e]]
∂x describes how the value of e changes with a change
of x:
ω[[(e)

]] =

x ∈V
ω(x 
)
∂ω[[e]]
∂x
There are two subtleties to highlight. First, the real-valued functions h are required to be defined
on the domain Rk , so that the term semantics are well-defined in all states. It is possible to extend
dL with terms that are only defined within an open domain of definition rather than the entire real
domain and this would allow, e.g., rational functions to be added to the term language. This article
will not pursue such an extension, although the Noetherian functions from Section 7 and Proposition 7.4 give an implicit way of working with quotients of extended terms. Second, the semantics of
differentials implicitly requires that the partial derivatives ∂ω[[e]]
∂x exist. In fact, partial derivatives
of any order for the semantics of any term must exist, because their differentials (which provably
reduce to differential-free terms by Section 2.3.1), in turn, have differentials that must also have a
well-defined semantics. Following the standard interpretation of function symbols [32], it suffices
to require that the fixed function symbols h are interpreted as smooth C∞ functions, i.e., have partial derivatives of any order. Since the C∞ functions are closed under addition, multiplication and
function composition, the resulting term semantics are also smooth [32], as required.
The semantics of differentials (e) is well-defined for isolated states ω, independent of any ODEs.
Their importance for differential equations reasoning in dL stems from the semantics of hybrid
programs α, which are transition relations, [[α]] ⊆ S×S, between states. The semantics of an ODE,
[[x  = f (x) &Q]], is the set of all pairs of states that are connected by some solution of the ODE:
(ω, ν ) ∈ [[x  = f (x) &Q]] iff there is a duration 0 ≤ T ∈ R and a function φ : [0,T ] → S,
with φ(0) = ω on {x 
}
,φ(T ) = ν, and φ |= x  = f (x) ∧ Q.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
Differential Equation Invariance Axiomatization 6:7
The φ |= x  = f (x) ∧ Q condition checks φ(ζ ) ∈ [[x  = f (x) ∧ Q]], φ(0) = φ(ζ ) on {x, x 
}
 for
all 0 ≤ ζ ≤ T , and, if T > 0, then dφ(t)(x )
dt (ζ ) exists, and is equal to φ(ζ )(x 
) for all 0 ≤ ζ ≤ T .
In other words, φ is a solution of the differential equations x  = f (x) that always stays in the
evolution domain constraint Q. It is also required to hold all variables other than x, x  constant.
Most importantly, the values of the differential variables x  are required to match the value of
the RHS f (x) of the differential equation along the solution. See Reference [32, Definition 7] for
further details.
The semantics of comparison operations and first-order logical connectives are defined as usual,
with [[ϕ]] ⊆ S being the set of states where formula ϕ is true. For example, ω ∈ [[e ≤ e˜]] iff ω[[e]] ≤
ω[[e˜]], and ω ∈ [[ϕ ∧ψ]] iff ω ∈ [[ϕ]] and ω ∈ [[ψ]]. The semantics of modal connectives are
ω ∈ [[[α]ϕ]] iff ν ∈ [[ϕ]] for all ν such that (ω, ν ) ∈ [[α]],
ω ∈ [[αϕ]] iff there is a state ν such that (ω, ν ) ∈ [[α]] and ν ∈ [[ϕ]].
Formula ϕ is valid iff it is true in all states, i.e., [[ϕ]] = S. If the formula P → [x  = f (x) &Q]P is
valid, then the formula P is called an invariant of the ODE, x  = f (x) &Q. Unfolding the semantics,
this means that from any initial state ω ∈ [[P]], any solution φ of x  = f (x) starting in ω, which
does not leave the evolution domain [[Q]], stays in [[P]] for its entire duration. Figure 1 suggests
several invariants for the ODE αe from Equation (2). The unit circle, u2 + v2 = 1, is an equational
invariant, because the direction of flow on the circle is always tangential to it. The open unit disk,
u2 +v2 < 1, is also invariant, because trajectories within the disk spiral toward the circle but never
reach it. The green region described by u2 ≤ v2 + 9
2 is invariant but needs a careful proof.
2.3 Axiomatization
This article uses a standard, classical sequent calculus [27] with the usual rules for manipulating
logical connectives and sequents, e.g., ∨L, ∧R, and cut. A summary of all base axioms and proof
rules used in this article is in AppendixA.3, along with a list of the standard propositional and firstorder sequent calculus proof rules. The semantics of sequent Γ  ϕ is equivalent to the formula
(

ψ ∈Γ ψ ) → ϕ and the sequent is valid iff its corresponding formula is valid. Formulas Γ are
antecedents of the sequent, while formula ϕ is its succedent. Completed branches are marked with
∗ in a sequent proof. An axiom is sound iff all its instances are valid, and a proof rule is sound iff the
validity of all its premises (above the rule bar) imply the validity of its conclusion (below rule bar).
When an implicational or equivalence axiom is used, propositional sequent manipulation steps
are omitted and the proof step is directly labeled with the axiom, giving the resulting premises
accordingly [32]. The calculus includes ∀L, ∃R rules for the reals allowing x to be instantiated
(or witnessed) with a term for the sequents Γ,∀x ϕ  ψ and Γ  ∃x ϕ, respectively. First-order
real arithmetic is decidable [4], so access to such a decision procedure is assumed; proof steps are
labeled with R whenever they follow as a substitution instance of a valid formula of first-order real
arithmetic. Extra care must be taken when using R for extended term languages, as illustrated next.
Example 2.1 (Proving with R). Consider the following two proofs in the extended term language
from Equation (1). The left sequent proves (as a substitution instance) by R, because the negation
of a real number is its additive inverse. In contrast, the right sequent does not prove by R alone
(indicated by the subscript on rule Rexp), because it uses the fact that the real exponential function
is strictly positive:
R
∗
 exp (x) + (− exp (x)) = 0
Rexp
∗
 exp (x) > 0
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
6:8 A. Platzer and Y. K. Tan
An alternative understanding is that rule R can be used to conclude valid properties that follow
only from first-order properties of the real closed fields [4].
All of the axiom and rule (schemata) in this article can be derived from axioms in dL’s uniform
substitution calculus [32], an approach that minimizes the soundness-critical core in implementations of the logic [10]. This presentation is omitted as it is not the focus for this article. Readers
are referred to the authors’ earlier conference version [33] for details.
2.3.1 Differentials and Lie Derivatives. ODEs x  = f (x) precisely specify time derivatives that
their solutions must obey. The deduction of invariants directly from these differential equations
therefore relates to the study of time derivatives of the quantities that the invariants involve. However, directly using time derivatives leads to numerous subtle sources of unsoundness, because
they are semantic objects that only make sense when a “time” axis even exists at all. Such a continuous time axis is furnished by the domain of definition of an ODE solution, but time derivatives
are not otherwise well-defined in arbitrary contexts, e.g., in isolated states or across discrete transitions. It is of utmost importance for soundness that, unlike time derivatives, differentials have
a local semantics that is well-defined in single states, which enables their use in arbitrary contexts for sound syntactic manipulations [32]. The crucial differential lemma [32, Lemma 35] shows
that, along a solution of the ODE x  = f (x), the value of the differential term (e) coincides with
the time derivative d
dt of the value of term e. This relationship allows conclusions to be drawn
about the differential equations directly from syntactic dL proofs involving differentials. The latter syntactic manipulation of differentials is achieved using the differential axioms of dL, which
are given below. In axiom DE, x  = f (x) is understood vectorially, i.e., x is a vector of variables
x1,..., xn, x  the corresponding vector of differential variables x 
1,..., x 
n, and f (x) a vector of
terms f1 (x),..., fn (x).
Theorem 2.2 (Differential Axioms [32]). The following are sound axioms of dL:
DE [x  = f (x) &Q(x)]P (x, x 
) ↔ [x  = f (x) &Q(x)][x  := f (x)]P (x, x 
)
c (c) = 0
+ (e + e˜) = (e) + (e˜)
x  (x) = x 
·
 (e · e˜) = (e) · e˜ + e · (e˜)
Proof Sketch. The soundness proofs for these axioms [32] carry over unchanged for extended
term languages, since fixed function symbols h are interpreted as smooth C∞ functions.
The differential effect axiom (DE) says that the differential variables x  take on the values of
the RHS along solutions to an ODE. This is expressed on its RHS with an assignment x  := f (x)
to the differential variable x 
. The syntax and semantics of this (discrete) assignment are defined
elsewhere [32] but it suffices to understand it here with the assignment axiom of dL:
[:=] [x :=e]ϕ(x) ↔ ϕ(e) (e free for x in ϕ)
Intuitively, axiom [:=] says that property ϕ(x) is true after assigning e to x iff ϕ(e) is true
right now. Together, axioms DE, [:=] allow replacing free occurrences of x  in the postcondition
P (x, x 
) yielding postcondition P (x, f (x)). However, proofs usually involve working with differentials of terms (e) rather than differential variables directly. This is where the differential axioms
(c
, x 
, +
, ·

) are used. Axiom c says that the differential of a constant is 0, while axiom x  says
the differential of a variable (x) is the corresponding differential variable x 
. Axioms +
, ·
 are the
sum and product rules of differentiation, respectively. Soundness of these axioms allows differential terms to be rewritten equationally in all contexts, including in the postcondition of an ODE and
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020. 
Differential Equation Invariance Axiomatization 6:9
within sub-terms. The differential axioms enable sound syntactic differentiation, because differential terms (e) can be rewritten according to these equational axioms until no further differential
sub-terms occur; any remaining differential variables are substituted away using DE, [:=] under
an ODE. Such exhaustive use of differential axioms is simply labeled as ( ) in proofs. The following
example shows such a derivation concretely using a polynomial from the running example:
Example 2.3 (Syntactic Differentiation). The following dL derivation syntactically differentiates
the polynomial v2 − u2 + 9
2 along the ODE αe from (2) for any comparison operator ∼:
 [αe ]4uv + 1
2 (1 − u2 −v2)(v2 − u2) ∼ 0
R  [αe ]2v(u + v
4 (1 − u2 −v2)) − 2u(−v + u
4 (1 − u2 −v2)) ∼ 0
[:=]  [αe ][u
:= −v + u
4 (1 − u2 −v2)][v
:=u + v
4 (1 − u2 −v2)]2vv − 2uu ∼ 0
( )
 [αe ][u
:= −v + u
4 (1 − u2 −v2)][v
:=u + v
4 (1 − u2 −v2)](v2 − u2 + 9
2 ) ∼ 0
DE  [αe ](v2 − u2 + 9
2 ) ∼ 0
The first DE step makes available assignments on u
,v
. The ( ) step is then used to syntactically simplify (v2 −u2 + 9
2 ) yielding 2vv − 2uu
. A subsequent use of [:=] replaces the resulting
differential variables u
,v with their respective RHSes along the ODE. Finally, rule R is used to
rearrange the calculated derivative arithmetically, which results in a (simplified) polynomial term.
Example 2.3 suggests that differentials can always be eliminated under an ODE. This is the case
for differentials of polynomial terms (p)
, but differential axioms are needed for the fixed function
symbols. Consider the case of a unary fixed function symbol h, which is semantically interpreted
as the function h : R → R. Expanding the semantics of term (h(e)) and applying the chain rule:
ω[[(h(e))
]] =

x ∈V
ω(x 
)
∂ω[[h(e)]]
∂x =

x ∈V
ω(x 
)
∂h
∂y
(ω[[e]])
∂ω[[e]]
∂x
= ∂h
∂y
(ω[[e]])

x ∈V
ω(x 
)
∂ω[[e]]
∂x = ∂h
∂y
(ω[[e]])ω[[(e)

]]
The RHS product between ∂h
∂y (ω[[e]]) and ω[[(e)
]] can be represented syntactically provided
that the partial derivative of h with respect to its argument is representable as a term. Assume
(suggestively) that such a term is written as ∂h
∂y (e). The easiest case is to think of ∂h
∂y
as another
unary fixed function symbol and ∂h
∂y (e) as function application, hence the suggestive notation. This
is not strictly necessary, however: ∂h
∂y
can be another term that mentions variable y free, in which
case ∂h
∂y (e) corresponds to substituting e for y in that term. The differential axiom h for fixed
function symbol h uses a product of the (syntactic) partial derivative ∂h
∂y
and differential (e) of e:
h (h(e)) = ∂h
∂y
(e) · (e)

Example 2.4 (Unary Extended Differential Axioms). For the extended term language from Equation (1), the extended terms for the partial derivatives are as usual from calculus:
∂ exp(y)
∂y = exp(y), ∂ sin(y)
∂y = cos(y), ∂ cos(y)
∂y = − sin(y)
Following the axiom schema h
, the differential axioms for these fixed function symbols are
exp (exp(e)) = exp(e) · (e)

, sin (sin(e)) = cos(e) · (e)

, cos (cos(e)) = − sin(e) · (e)

Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
6:10 A. Platzer and Y. K. Tan
Axiomssin
, cos illustrate a syntactic subtlety. Fixed function symbols must only be introduced
in a syntactically complete way with respect to differentials. The unary function symbol sin for
the trigonometric sine function cannot be added without also adding one for the cosine function,
because there would otherwise be no way to express the differential of sin syntactically.3
The following lemma generalizes this syntactic representation condition and gives sound differential axioms for k-ary fixed function symbols:
Lemma 2.5 (Extended Differential Axioms). Let the k-ary fixed function symbol h be semantically interpreted as a differentiable functionh : Rk → R. Suppose its partial derivative ∂h
∂yi (y1,...,yk )
at y1,...,yk is syntactically represented by term ∂h
∂yi for each i such that ω[[ ∂h
∂yi (y1,...,yk )]] =
∂h
∂yi (ω(y1),...,ω(yk )) for all states ω. Then the differential axiom schema h for h is sound:
h (h(e1,..., ek )) =

k
i=1
∂h
∂yi
(e1,..., ek ) · (ei )

Proof. The terms ∂h
∂yi (e1,..., ek ) appearing on the RHS of axiom h are understood as (syntactic) function application of ∂h
∂yi to the arguments e1,..., ek . Soundness of this axiom follows from
the (multivariate) chain rule and the semantics of differential terms. For any given state ω:
ω[[(h(e1,..., ek ))
]] =

x ∈V
ω(x 
)
∂ω[[h(e1,..., ek )]]
∂x =

x ∈V
ω(x 
)

k
i=1
∂h
∂yi
(ω[[e1]],...,ω[[ek ]])
∂ω[[ei]]
∂x
=

k
i=1
∂h
∂yi
(ω[[e1]],...,ω[[ek ]])

x ∈V
ω(x 
)
∂ω[[ei]]
∂x =

k
i=1
∂h
∂yi
(ω[[e1]],...,ω[[ek ]])ω[[(ei )

]]
=

k
i=1
ω[[ ∂h
∂yi
(e1,..., ek )]]ω[[(ei )

]] = ω[[
k
i=1
∂h
∂yi
(e1,..., ek )(ei )

]]
The penultimate step uses the fact that all partial derivatives are syntactically represented in the
term language to replace a semantic function application with its syntactic representation.
With the differential axioms of Lemma 2.5, all differential terms (e) under an ODE x  = f (x) can
be axiomatically rewritten to another term not mentioning differentials and differential variables.
This resulting term is the Lie derivative of term e along ODE x  = f (x), succinctly written as
Lf (x ) (e) def
=
n
i=1
∂e
∂xi
· fi (x)
Unlike (semantic) time derivatives, Lie derivatives can be written down syntactically in the
extended term language. Like time derivatives though, Lie derivatives still depend on the ODE
context in which they are used, so they do not give a compositional means of defining syntactic
differentiation. The use of differentials in dL solves this problem by giving a compositional term
semantics that is defined independently of any hybrid programs or formulas. Along an ODE x  =
f (x), however, the value of Lie derivative Lf (x )
(e) coincides with that of the differential (e) and
dL allows transformation between the two by proof with the differential axioms [32]. The Lie
derivative Lf (x )
(e) is written as .
e when x  = f (x) is clear from the context. The ith higher Lie
3Technically, π could be added and cos(x ) encoded as sin(x + π ) but that also requires another 0-ary function symbol π .
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.           
Differential Equation Invariance Axiomatization 6:11
derivative .
e (i) of term e along the ODE x  = f (x) is defined by iterating the Lie derivation operator:
.
e (0) def
= e, .
e (i+1) def
= Lf (x ) (
.
e (i)
), .
e def
= .
e (1)
2.3.2 Differential Equation Axiomatization. Having enabled meaningful syntactic differentiation with differentials, it suffices to give axioms for working with differential equations. The following are the dL axioms for differential equations [32, Figure 3] as highlighted in Section 1. All axioms are understood for vectorial differential equations as described in Theorem 2.2 for axiom DE.
Theorem 2.6 (Differential Eqation Axiomatization [32]). The following are sound axioms
of dL. In axiom DG, the ∃ quantifier can be replaced with a ∀ quantifier.
DI= [x  = f (x) &Q](e) = 0 → 
[x  = f (x) &Q]e = 0 ↔ (Q → e = 0)

DI [x  = f (x) &Q](e) ≥ 0 → 
[x  = f (x) &Q]e  0 ↔ (Q → e  0)
 ( is either ≥ or >)
DC [x  = f (x) &Q]R → 
[x  = f (x) &Q]P ↔ [x  = f (x) &Q ∧ R]P

DG [x  = f (x) &Q]P ↔ ∃y [x  = f (x),y = a(x)y + b(x) &Q]P
Proof Sketch. The soundness proofs for these axioms [32] carry over unchanged for extended
term languages, since fixed function symbols h are interpreted as smooth C∞ functions.
Differential invariants (DI) reduce questions about invariance of e = 0, e  0 (globally, along
solutions of the ODE) to local questions about differentials. Only two instances (DI=, DI) of the
more general DI axiom [32] are needed here. Axiom DI= says that the value of extended term e
always stays zero if its differential (e) is always zero along the solution. Similarly, axiom DI says
that e stays non-negative (or strictly positive) if its differential is non-negative. Note that axiom
DI only requires (e) ≥ 0 in its premise even for the e > 0 case. These axioms internalize the mean
value theorem (see AppendixA.2). With the differential axioms of Section 2.3.1, the differential (e)
can be soundly and syntactically transformed into the Lie derivative .
e in proofs. Differential cut
(DC) expresses that if the system never leaves R while staying in Q (the outer assumption), then R
may be additionally assumed in the domain constraint when proving the postcondition P (the last
subformula). Even if DC increases the deductive power over DI [31], the deductive power increases
even further [31] with the differential ghost axiom (DG), which adds a fresh variable y to the system
of ODEs for the sake of the proof. Since y is fresh, its initial value can be either existentially (DG)
or universally (DG∀) quantified [32]. The syntactic restriction of DG is that the new ODE must be
linear (or affine) in y, hence a(x),b(x) are not allowed to mention y. This restriction prevents the
newly added equation from unsoundly restricting the duration of existence for solutions to the
differential equations [31], e.g., the (unsound) differential ghost y = y2 may cause finite-time (or
early) blowup of solutions [44]. The added differential ghost variable y co-evolves along solutions
and crucially enables the expression of new (integral) relationships between variables along the
differential equations. These new relationships are then used to deduce invariance properties of
interest in the original system. The systematic construction of appropriate differential ghosts is
central to this article’s completeness results. For example, the equational invariance axiom DI= is
only complete for invariant functions [30]. In Section 3, axiom DG is used to extend this deductive
power to all Darboux (in)equalities, Section 4 extends it further to all analytic invariants.
To utilize axioms DI, DC, DG in proofs, the following axiom and proof rule of dL are also
used [32]:
dW Q  P
Γ  [x  = f (x) &Q]P
K [α](ϕ → ψ ) → ([α]ϕ → [α]ψ )
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.         
6:12 A. Platzer and Y. K. Tan
Differential weakening (dW) drops the ODEs entirely and proves postcondition P directly from
the evolution domain constraint Q. Kripke axiom K is the modal modus ponens for postconditions
of the box modality. Using dW and K, the following proof rule and axiom derive:
M[
] Q,ψ  ϕ Γ  [x  = f (x) &Q]ψ
Γ  [x  = f (x) &Q]ϕ [·]∧ [α](ϕ ∧ψ ) ↔ [α]ϕ ∧ [α]ψ
Monotonicity rule M[
] strengthens the postcondition to ψ if it implies ϕ within the domain
constraint Q of the ODE x  = f (x) &Q. Axiom [·]∧ proves conjunctive postconditions separately,
e.g., DI= derives from DI using [·]∧ with the real arithmetic equivalence e = 0 ↔ e ≥ 0∧ −e ≥ 0.
2.4 Extended Term Conditions
Two natural conditions on the fixed function symbols h ∈ {h1,...,hr } and their semantics have
been uncovered thus far. For this article’s completeness results, a third condition is needed. All
three extended term conditions are assumed throughout this article:
(S) Smoothness. All fixed function symbols h ∈ {h1,... hr } in the extended term language are
interpreted as smooth C∞ functions h : Rk → R.
(P) Syntactic partial derivatives. Each partial derivative ∂h
∂yi of h(y1,...,yk ) has a syntactic
representation in the extended term language in the sense of Lemma 2.5.
(R) Computable differential radicals. The extended term language has computable differential
radicals, i.e., for each extended term e and ODE x  = f (x) with extended terms in its
RHS f (x), there must computably exist an N ≥ 1 and N extended terms дi such that
the higher Lie derivatives of e along x  = f (x) provably satisfy the following differential
radical identity [15]:
.
e (N ) =
N
−1
i=0
дi
.
e (i) (3)
Condition (S) ensures that the semantics are well-defined, while conditions (P) and (R) enable
(complete) syntactic analysis of differential equations invariance by their local (differential) behavior. TheC∞ smoothness required by (S) is subtly weaker than real analyticity [20]. This article often
gives brief but intuitive (semantic) explanations of results, and explicitly indicates when those arguments only apply in the real analytic setting. None of the actual proofs given in this article require
real analyticity. Condition (R) requires an algorithm that computes and proves the identity from
Equation (3). This identity is crucially used for completeness in Section 4 and Section 6, where it is
also motivated logically. It yields a finiteness property on the number of Lie derivatives that need
to be analyzed for any given term e and ODE. From the identity in Equation (3), the first N − 1 Lie
derivatives will turn out to suffice for completely determining the local behavior of extended term
e along the ODE x  = f (x). All three extended term conditions are met by the polynomial term
language without extensions.
Proposition 2.7. Polynomial term languages satisfy the extended term conditions.
Proof Sketch. A full proof is omitted, because this is a corollary of a later result (Theorem 7.7).
Briefly, conditions(S) and (P) are met, because polynomial functions are smooth (even real analytic)
and the polynomials are closed under partial derivatives. Condition (R) generalizes different flavors
of results that have been proved in the literature [15, 22, 25]. The proofs rely on the fact that
polynomials form a Noetherian ring [6], so that the ascending chain of ideals4 formed by successive
4The ideal [4] generated by polynomials p1, ..., ps ∈ R[x] is the set of all their linear combination with polynomial
cofactors дi ∈ R[x], denoted by (p1, ..., ps ) def
= {Σs
i=1дipi : дi ∈ R[x]}.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
Differential Equation Invariance Axiomatization 6:13
(polynomial) Lie derivatives stabilizes. The resulting (polynomial) identity from Equation (3) is a
formula of real arithmetic and can therefore always be proved by the rule R for decidable real
arithmetic.
It is less straightforward to show that an extended term language like Equation (1) meets
these conditions. Indeed, even the simple language extension from Equation (1) already features
exponential rings, which are not Noetherian [40, Remark 1.4.2], and undecidable arithmetic over
the trigonometric functions [36]. In the interest of a general presentation, the question of how to
determine if a candidate term language extension {h1,...,hr } meets the extended term conditions
is deferred till Section 7. Until then, the only assumption about the extended term language is
that it satisfies these three conditions. This suffices for the completeness results, which the next
section begins to show.
3 DARBOUX INVARIANTS
This section exploits differential ghosts for proving an important class of invariance properties.
These are called Darboux invariants, because they are inspired by Darboux polynomials [9]. The
derived proof rule for Darboux equalities corresponds to the case N = 1 in the differential radical
identity from Equation (3), while the subsequent rule for Darboux inequalities is a crucial step
for the completeness result in Section 4. Their derivations also show how analytic and geometric
notions from the theory of differential equations, such as Darboux polynomials [9] and Grönwall’s
lemma [18, 44, Section 29.VI] can be internalized syntactically with differential ghost arguments
without extension to any axiom.
3.1 Darboux Equalities
Assume that the extended term e satisfies the differential radical identity from Equation (3) with
N = 1 and extended term cofactor д, i.e., .
e = дe. Taking Lie derivatives on both sides gives
.
e (2) = Lf (x ) (
.
e) = Lf (x ) (дe) = .
дe + д
.
e = (
.
д + д2)e
By repeatedly taking Lie derivatives, all higher Lie derivatives of e can be written as a product
between e and some cofactor. Now, consider an initial state ω where e evaluates to ω[[e]] = 0, then
ω[[.
e]] = ω[[дe]] = ω[[д]] · ω[[e]] = 0
Because every higher Lie derivative is a product with e, all of them are simultaneously 0 in state
ω. Thus, in the real analytic setting, e = 0 stays invariant along solutions to the ODE starting at ω,
because all its derivatives are 0. This motivates the following proof rule for invariance of e = 0:
dbx Q  .
e = дe
e = 0  [x  = f (x) &Q]e = 0
Rule dbx derives using differential ghosts and is a first hint at their deductive power for equational invariants. A special case of dbx proves invariance for Darboux polynomials, which are polynomials p satisfying the polynomial identity .
p = дp for some polynomial cofactor д. These are
of significant interest in the study of (polynomial) ODEs [9] and invariant generation for hybrid
systems [37]. In Section 4, dbx is generalized vectorially to yield proofs of all analytic invariants
with differential ghosts. Although the rule can be derived from DG directly, this article follows
a detour through a proof rule for Darboux inequalities instead, which is crucially used for this
vectorial generalization.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020. 
6:14 A. Platzer and Y. K. Tan
3.2 Darboux Inequalities
Assume that the extended term e satisfies the Darboux inequality .
e ≥ дe for some extended term
cofactor д. Semantically, in an initial state ω where ω[[e]] ≥ 0, Grönwall’s lemma [18, 44, Section 29.VI] implies that e ≥ 0 stays invariant along solutions starting at ω, because the semantic
value of extended term e is bounded below by a (typically decaying) non-negative exponential solution of the non-autonomous linear differential equation e = д(t)e for the variable e. Here, д(t)
is the time-dependent function corresponding to the value of term д evaluated along the solution
to the differential equations x  = f (x) from ω; see Figure 2(a) for an illustration. Indeed, if e satisfies the Darboux equality .
e = дe with cofactor д, then it satisfies both Darboux inequalities .
e ≥ дe
and .
e ≤ дe, giving an alternative semantic argument for the invariance of e = 0 in rule dbx.
Differentials and Lie derivatives along differential equations x  = f (x) provably coincide
(Section 2.3.1), so axiomatic Darboux inequalities assume [x  = f (x) &Q](e) ≥ дe and Darboux
equalities assume [x  = f (x) &Q](e) = дe instead of .
e ≥ дe and .
e = дe, respectively. Darboux
(in)equality invariance can be proved purely syntactically with the differential ghost axiom DG.
Lemma 3.1 (Darboux (In)eqalities are Differential Ghosts). The Darboux equality DBX
and Darboux inequality DBX axioms derive from DG (and DI, DC) for any extended term cofactor д.
DBX [x  = f (x) &Q](e) = дe → (e = 0 → [x  = f (x) &Q]e = 0)
DBX [x  = f (x) &Q](e) ≥ дe → (e  0 → [x  = f (x) &Q]e  0) ( is either ≥ or >)
Proof. Axiom DBX is derived first before axiom DBX is derived as a corollary. After propositional normalization, the derivation starts with a DG, DG∀ step, introducing a new ghost variable
y satisfying a carefully chosen differential equation y = −дy. Next, ∃R, ∀L pick an initial value for
y. It suffices to pick any y > 0. The augmented ODE is abbreviated with αy ≡ x  = f (x),y = −дy:
[αy &Q](e) ≥ дe, e  0,y > 0  [αy &Q]e  0
∃R, ∀L ∀y [αy &Q](e) ≥ дe, e  0  ∃y [αy &Q]e  0
DG, DG∀[x  = f (x) &Q](e) ≥ дe, e  0  [x  = f (x) &Q]e  0
The augmented ODE αy has a new provable invariant relationship ey  0 (see Figure 2 and
discussion after this proof). To deduce the original property of interest (e  0) from this new
relationship, it suffices to prove y > 0 invariant, because the formula ey  0 ∧ y > 0 → e  0
is provable by R. Axiom DC is used to prove y > 0 separately (right premise abbreviated with 1 )
and assume it in the evolution domain constraints of the left premise. Subsequently, monotonicity
rule M[
] and R strengthen the postcondition to ey  0 using the newly added domain constraint
y > 0:
[αy &Q ∧y > 0](e) ≥ дe, e  0,y > 0  [αy &Q ∧y > 0]ey  0
M[
], R[αy &Q ∧y > 0](e) ≥ дe, e  0,y > 0  [αy &Q ∧y > 0]e  0 1
DC [αy &Q](e) ≥ дe, e  0,y > 0  [αy &Q]e  0
From the left premise, a cut, R step adds ey  0 to the assumptions using the provable arithmetic
formula e  0∧y > 0 → ey  0. Axiom DI is used to prove the inequational invariant ey  0 and
the resulting differential (ey) simplifies with ( ) from Section 2.3.1. An additional DE, [:=] step replaces the differential variable y according to the augmented ODE αy , before a monotonicity M[
]
(with a cut) and R step closes the derivation using the domain constraint y > 0. The differential
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.                            
Differential Equation Invariance Axiomatization 6:15
ghost y = −дy is specifically crafted so that this final arithmetic step proves with R:
∗
R (e) ≥ дe,y > 0  (e)
y + e (−дy) ≥ 0
M[
] [αy &Q ∧y > 0](e) ≥ дe  [αy &Q ∧y > 0](e)
y + e (−дy) ≥ 0
DE, [:=] [αy &Q ∧y > 0](e) ≥ дe  [αy &Q ∧y > 0](e)
y + ey ≥ 0
( )
[αy &Q ∧y > 0](e) ≥ дe  [αy &Q ∧y > 0](ey) ≥ 0
DI [αy &Q ∧y > 0](e) ≥ дe, ey  0  [αy &Q ∧y > 0]ey  0
cut, R [αy &Q ∧y > 0](e) ≥ дe, e  0,y > 0  [αy &Q ∧y > 0]ey  0
The derivation continues from premise 1 with a second differential ghost z = д
2 z analogously:
∗
R Q  (−дy)z2 + 2yz(
д
2 z) = 0
dW  [x  = f (x),y = −дy, z = д
2 z &Q](−дy)z2 + 2yz(
д
2 z) = 0
DE, [:=]  [x  = f (x),y = −дy, z = д
2 z &Q]y
z2 + 2yzz = 0
DI=, ( )
yz2 = 1  [x  = f (x),y = −дy, z = д
2 z &Q]yz2 = 1
∃R, M[
], R y > 0  ∃z [x  = f (x),y = −дy, z = д
2 z &Q]y > 0
DG y > 0  [x  = f (x),y = −дy &Q]y > 0
In the ∃R, M[
], R step, observe that if y > 0 initially, then there exists z such that yz2 = 1.
Moreover, yz2 = 1 is sufficient to imply y > 0 in the postcondition. Rule R again applies here,
since both of these are properties of real arithmetic. The differential ghost z = д
2 z is specifically
constructed so that yz2 = 1 can be proved invariant along the differential equation.
Axiom DBX derives using the derived axiom [·]∧, the equivalence e = 0 ↔ e ≥ 0 ∧ −e ≥ 0 by R,
and the equality (−e) = −(e) provable by ( )
. The ODE is abbreviated with αx ≡ x  = f (x) &Q:
∗ DBX, ∧L, ∧R
[αx ](e) ≥ дe ∧ [αx ](−e) ≥ д(−e), e ≥ 0 ∧ −e ≥ 0  [αx ]e ≥ 0 ∧ [αx ]−e ≥ 0
[·]∧ [αx ]((e) ≥ дe ∧ (−e) ≥ д(−e)), e ≥ 0 ∧ −e ≥ 0  [αx ](e ≥ 0 ∧ −e ≥ 0)
M[
], R [x  = f (x) &Q](e) = дe, e = 0  [x  = f (x) &Q]e = 0
The first two syntactic derivation steps in the derivation of DBX do not appear to have changed
the sequent much, but they correspond to a significant geometric transformation of the problem,
as illustrated in Figure 2(b) and Figure 2(c). In the system extended with differential ghost y, there
is now a new invariant ey  0, which can be observed along solutions! While the value of e decays
(dangerously) toward 0, the chosen differential equation y = −дy yields an (integral) value for
y that counteracts this change, ensuring that their product still always stays non-negative along
all solutions. In fact, the value of ey even remains constant when the extended term e satisfies
the equational identity .
e = дe. The second differential ghost z = д
2 z in the proof is similarly
constructed so that yz2 = 1 can be proved invariant along the differential equation. The geometric
transformation from this second syntactic differential ghost is illustrated in Figure 2(d). Since the
first differential ghost y satisfies a differential equation, the second ghost z exactly balances it out
with the value of yz2 remaining (provably) constant and positive at 1 along solutions (similarly
to Figure 2(b)).
The derivation of DBX illustrates how the ODE axioms of dL (DI, DC, DG) complement each
other in proofs of ODE invariance. For brevity, the same derivation is used for both ≥ and > cases
of DBX even though the latter only needs one ghost (using y = −д
2y and invariant ey2 > 0
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.           
6:16 A. Platzer and Y. K. Tan
Fig. 2. The horizontal axis tracks the evolution of time t along solutions. Dashed lines indicate steps based
on semantical arguments while solid lines indicate constructions used in the syntactical proof of Lemma 3.1.
(a) Solutions of .
e ≥ дe (solid blue) are bounded below by those of the non-autonomous linear differential
equation e  = д(t)e (dashed blue) by Grönwall’s lemma. (b) The differential ghost y = −дy (solid green)
balances out e  = д(t)e, so that the value of ey (dashed red) remains constant at 1. (c) The same ghost
y = −дy also balances out .
e ≥ дe, where the value of ey (solid red) remains non-negative but not necessarily
constant. (d) A second differential ghost z = д
2 z (solid black) balances out y = −дy, so that the value
of yz2 (solid red) remains constant at 1. The constant 1 in the RHS of ey = 1 and yz2 = 1 in (b) and (d),
respectively, is chosen for simplicity. Any positive constant suffices with appropriate initial values of the
differential ghosts.
instead). Axiom DBX also derives directly (similarly to DBX, using the invariant ey = 0 instead)
using just two differential ghosts rather than the four incurred with [·]∧.
Corollary 3.2 (Darboux (In)eqality Rules). The Darboux equality dbx and Darboux inequality dbx proof rules derive from DG (and DI, DC) for any extended cofactor term д.
dbx Q  .
e = дe
e = 0  [x  = f (x) &Q]e = 0
dbx
Q  .
e ≥ дe
e  0  [x  = f (x) &Q]e  0 ( is either ≥ or >)
Proof. The dbx proof rule derives from axiom DBX (and rule dbx from axiom DBX) using
an additional ( )
, DE step to turn the differential (e) into the Lie derivative followed by a dW step:
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.        
Differential Equation Invariance Axiomatization 6:17
Q  .
e = дe
dW  [x  = f (x) &Q]
.
e = дe
( )
, DE, [:=]  [x  = f (x) &Q](e) = дe
DBX e = 0  [x  = f (x) &Q]e = 0
Q  .
e ≥ дe
dW  [x  = f (x) &Q]
.
e ≥ дe
( )
, DE, [:=]  [x  = f (x) &Q](e) ≥ дe
DBX e  0  [x  = f (x) &Q]e  0
Axioms DBX, DBX yield particularly efficient proofs within dL’s uniform substitution calculus [32]. They derive once-and-for-all, independently of the ODE x  = f (x). Subsequently
substituting [32] for specific ODE instances means that only the final Lie derivative calculation
steps DE, ( )
, [:=] are needed for each concrete derived instance of dbx, dbx.
The following example shows a concrete proof utilizing the newly derived proof rules.
Example 3.3 (Proving ODE Properties in dL). Judging by the plot (Figure 1) of the ODE αe
from Equation (2), trajectories from within the open (or closed) disk stay trapped within the disk.
Rather than relying (informally) on a potentially incorrect plot though, this fact can be shown
formally by proving that e  0, with e = 1 − u2 − v2, is an invariant of αe . By calculating the Lie
derivative
Lαe (e) = −2u

−v + u
4
(1 − u2 −v2)

− 2v

u + v
4
(1 − u2 −v2)

= −1
2
(u2 +v2)e
Thus, e satisfies the (polynomial) inequality .
e ≥ дe with polynomial cofactor д = −1
2 (u2 +v2). The
following derivation with dbx proves invariance of 1 − u2 −v2  0:
∗ R  Lαe (1 − u2 −v2) ≥ −1
2 (u2 +v2)(1 − u2 −v2)
dbx1 − u2 −v2  0  [αe ]1 − u2 −v2  0
The term e obeys the special case .
e = дe (Figure 2(b)) in which the seemingly innocuous syntactic introduction of a differential ghost y = −дy even exactly balances out the complicated
(decaying) evolution of e geometrically. Indeed, in this case, e = 0 can also be proved invariant for
the ODE αe using rule dbx. This proves the observation from Figure 1 that the unit circle is also
invariant for αe .
The derivations of axioms DBX, DBX give constructive choices of differential ghosts when
the invariant is a Darboux (in)equality. The derived rule dbx exceeds the deductive power of
DI, DC, because the formula y > 0 → [y = −y]y > 0 is easily provable by dbx using the
Darboux equality .
y = −y, but is not provable with DI, DC alone [31]. The next section builds on
these constructions, showing that the deductive power afforded by axiom DG extends to all true
analytic invariants.
4 ANALYTIC INVARIANTS
Analytic formulas are formed from finite conjunctions and disjunctions of equalities, but, over
R, can be normalized to a single equality e = 0 using the provable real arithmetic equivalences:
e = 0 ∧ e˜ = 0 ↔ e2 + e˜
2 = 0 and e = 0 ∨ e˜ = 0 ↔ ee˜ = 0. Thus, it suffices to restrict attention to
equational formulas e = 0 when proving completeness for analytic invariants.
The key to completeness is the differential radical identity from Equation (3) for e with arbitrary
rank N ≥ 1, which analyzes all higher Lie derivatives simultaneously. Suppose that extended term
e satisfies the identity from Equation (3) with rank N and some cofactors дi . Taking Lie derivatives
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.               
6:18 A. Platzer and Y. K. Tan
on both sides of Equation (3) yields
.
e (N +1) = Lf (x )
(
.
e (N )
) = Lf (x )
(
N
−1
i=0
дi
.
e (i)
) =
N
−1
i=0
Lf (x )
(дi
.
e (i)
) =
N
−1
i=0
 .
дi
.
e (i) + дi
.
e (i+1)

=
N
−1
i=0
 .
дi
.
e (i)

+
N
−2
i=0

дi
.
e (i+1)

+ дN −1
.
e (N ) =
N
−1
i=0
 .
дi
.
e (i)

+
N
−2
i=0

дi
.
e (i+1)

+ дN −1



N
−1
i=0
дi
.
e (i)


The last step follows using Equation (3) to expand .
e (N )
. Observe that the resulting expression
for .
e (N +1) is again a sum over the lower Lie derivatives .
e (i) for i = 0,..., N − 1 multiplied by appropriate cofactors. By repeatedly taking Lie derivatives on both sides, the higher Lie derivatives
.
e (N )
,
.
e (N +1)
,... can all be written as sums over these lower Lie derivatives with appropriate cofactors. Thus, in the real analytic setting, for initial states ω where ω[[e]],ω[[.
e]],...,ω[[.
e (N −1)
]] all
simultaneously evaluate to 0, e = 0 (and similarly for all its higher Lie derivatives) stays invariant
along solutions to the ODE.
This suggests that rule dbx should be generalized by considering higher Lie derivatives. The
canonical technique for generalizing to higher derivatives comes from the study of ODEs. All
(explicit form) ordinary differential equations involving higher derivatives can be transformed
into vectorial systems of differential equations involving only first derivatives but possibly over a
vector of variables [44, Section 11.I]. This transformation can be done syntactically and is precisely
the idea used to derive the (complete) proof rule for analytic invariants by reduction to a suitable
vectorial generalization of rule dbx. This crucial vectorial generalization is derived first.
4.1 Vectorial Darboux Equalities
Suppose that the m-dimensional vector of extended terms e satisfies the vectorial identity .
e = Ge,
where G is an m × m matrix of extended terms and .
e denotes component-wise Lie derivatives of
vector e along x  = f (x), just like (e) denotes component-wise differentials. If all components
of e evaluate to 0 in an initial state, then they all always stay at 0 along x  = f (x), because their
component-wise Lie derivatives all evaluate to 0 in that initial state.
Lemma 4.1 (Vectorial Darboux Eqalities are Diffrential Ghosts). The vectorial Darboux
axiom VDBX derives from DG (and DI, DC), where G is an m × m cofactor matrix of extended terms
and e is an m-dimensional vector of extended terms:
VDBX [x  = f (x) &Q](e)
 = Ge → (e = 0 → [x  = f (x) &Q]e = 0)
Proof. First, observe that the formula e = 0 is provably equivalent in real arithmetic to the
formula − e2
2 ≥ 0, where the term e2
2
def
= m
i=1 e2
i is the squared Euclidean norm of vector e.
The derivation starts with M[
], cut and R to rephrase e = 0 using this equivalence:
∗
( )
, R (e) = Ge  (− e2
2) ≥ д(− e2
2)
M[
] [x  = f (x) &Q](e) = Ge  [x  = f (x) &Q](− e2
2) ≥ д(− e2
2)
DBX [x  = f (x) &Q](e) = Ge, − e2
2 ≥ 0  [x  = f (x) &Q]− e2
2 ≥ 0
M[
], cut, R [x  = f (x) &Q](e) = Ge, e = 0  [x  = f (x) &Q]e = 0
Thanks to this rephrasing, the sequent no longer contains vectorial quantities and the derivation
is completed using a (scalar) DBX step with the extended term cofactor д = G2
F + 1, where
the term G2
F
def
= m
i=1
m
j=1 G2
ij is the squared Frobenius norm of matrix G. All that remains is to
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.            
Differential Equation Invariance Axiomatization 6:19
justify the final ( )
, R step after M[
] by showing that the following arithmetic formula is provable:
(e)
 = Ge → (− e2
2)
 ≥ д(− e2
2) (4)
The differential (− e2
2) is calculated (and proved via ( ) from Section 2.3.1) as follows, where
u · v denotes the dot product of vectors u, v. The last step uses (e) = Ge:
(− e2
2)
 = −(
m
i=1
e2
i )
 = −2
m
i=1
ei (ei )
 = −2(e · (e)

) = −2(e · (Ge))
Thus, it suffices to prove the validity of −2(e · (Ge)) ≥ д(− e2
2), i.e., its truth in all states ω. Validity is first shown semantically. For ease of notation, let ω[[e]],ω[[G]] stand for the respective real
vector and matrix values of e and G evaluated component-wise in state ω. The notation ·2 , ·F
denotes the (real-valued) Euclidean and Frobenius norms for vectors and matrices, respectively.
By the Cauchy-Schwarz inequality [44, Section 28.I], the dot product between vectors ω[[e]] and
ω[[G]]ω[[e]] is bounded by the product of their norms:
ω[[e]] · (ω[[G]]ω[[e]]) ≤ ω[[e]]2 ω[[G]]ω[[e]]2
The norm ω[[G]]ω[[e]]2 of this matrix-vector product is bounded by the product of their matrix
and vector norms, because the Euclidean and Frobenius norms are compatible [44, Section 14.II]:
ω[[G]]ω[[e]]2 ≤ ω[[G]]F ω[[e]]2
Expanding the (square) inequality 0 ≤ (ω[[G]]F − 1)
2 yields an upper bound on the Frobenius
norm ω[[G]]F by its squared value:
2 ω[[G]]F ≤ ω[[G]]2
F + 1
Chaining these (in)equalities yields
ω[[−2(e · (Ge))]] = −2(ω[[e]] · (ω[[G]]ω[[e]])) ≥ −2 ω[[e]]2 ω[[G]]ω[[e]]2
≥ −2 ω[[e]]2 ω[[G]]F ω[[e]]2 = −2 ω[[G]]F ω[[e]]2
2
≥ (ω[[G]]2
F +1)(− ω[[e]]2
2) = ω[[д(− e2
2)]]
where ω[[G]]2
F + 1 is precisely the semantic value of cofactor д in state ω. Since this semantic argument for the validity of the implication in Equation (4) only depends on first-order properties of
the real closed fields, which is decidable [4], the implication is provable syntactically by ( )
, R.
Corollary 4.2 (Vectorial Darboux Eqality Rule). The vectorial Darboux equality proof
rule vdbx derives from DG (and DI, DC), where G is an m ×m cofactor matrix of extended terms and
e is an m-dimensional vector of extended terms:
vdbx Q  .
e = Ge
e = 0  [x  = f (x) &Q]e = 0
Proof. Rule vdbx derives from derived axiom VDBX using ( )
, DE, [:=] to provably transform
between (e) and .
e, just like rule dbx derives from derived axiom DBX in Corollary 3.2.
The use of axiom DBX in the derivation of axiom VDBX corresponds to Grönwall’s lemma [18,
44, Section 29.VI], as illustrated in Figure 2(a). In case e starts with value 0 initially and satisfies
the Darboux inequality .
e ≥ дe, the constant zero solution of the differential equation e = д(t)e
bounds it from below. In Figure 2(a), this corresponds to the case where both blue lines lie exactly
on the horizontal axis. The proof uses the (squared) Euclidean and Frobenius norms to reduce a
vectorial equality (e = 0) to a scalar inequality (− e2
2 ≥ 0), which enables further analysis using
scalar differential ghosts. The convenient choice of compatible norms ensures that all syntactic
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.     
6:20 A. Platzer and Y. K. Tan
proof steps are done within the extended term language. Since all norms are equivalent on finitedimensional vector spaces [44, Section 10.III], this reduction can also be done using other norms
with suitable syntactic representations. Convenient choices of norms are a common technique in
the study of differential equations [44].
An alternative derivation of rule vdbx is given in the authors’ earlier conference version [33]
based on Liouville’s formula [44, Section 15.III]. That alternative derivation has an alternative
geometric interpretation as a continuous change of basis that is expressed purely syntactically [33]
but requires the use of vectorial differential ghosts and a number of ghost variables that is quadratic
in the dimension. The new derivation in Lemma 4.1 uses exactly 2 scalar differential ghosts in the
DBX step independent of dimension and relies only on basic properties of real arithmetic. In fact,
just like the scalar Darboux axioms, axiom VDBX for m-dimensional extended terms e derives
once-and-for-all so no differential ghosts are needed for its subsequent use.
4.2 Completeness for Analytic Invariants
Returning to extended terms e satisfying the differential radical identity from Equation (3), a
proof rule for invariance of e = 0 based on higher Lie derivatives derives as a direct instance of
derived rule vdbx:
Theorem 4.3 (Differential Radical Invariants are Vectorial Darboux). The differential
radical invariant proof rule dRI derives from vdbx (which in turn derives from DG).
dRI
Γ,Q  N −1 i=0
.
e (i) = 0 Q  .
e (N ) = N −1 i=0 дi
.
e (i)
Γ  [x  = f (x) &Q]e = 0
Proof Summary (Appendix B.3). Rule dRI derives from rule vdbx by transforming the identity
from Equation (3) involving higher Lie derivatives of e into a vectorial Darboux equality involving only first Lie derivatives of the extended term vector. The proof uses the following choice of
cofactor matrix G and vector of terms e:
G =











01 0 ... 0
0 0 . . . . . . .
.
.
.
.
. .
.
. . . . . . . 0
0 0 ... 0 1
д0 д1 ... дN −2 дN −1











, e =










e
.
e (1)
.
.
.
.
e (N −2)
.
e (N −1)










The matrix G has 1 on its superdiagonal and the дi cofactors in the last row. The left premise of
dRI is used to show e = 0 initially, while its right premise is used to show the premise of vdbx.
For any extended term e in the LHS of normalized equation e = 0, the computable differential
radicals condition (R) requires that the differential radical identity from Equation (3) (computably)
exists and proves with associated rank N and cofactors дi for e. The resulting (provable) identity
from Equation (3) proves the right premise of dRI.
5 The succedent in the remaining left premise
of dRI thus gives a finitary characterization for when all Lie derivatives of e evaluate to zero in
the initial state. This motivates the following definition of a finite formula summarizing that all
higher Lie derivatives of e are zero:
Definition 4.4 (Differential Radical Formula). The differential radical formula .
e (∗) = 0 for extended term e of rank N ≥ 1 from the identity in Equation (3) with Lie derivatives along x  = f (x)
5Theorem 4.3 shows Q can be assumed when proving the right premise. A finite rank must exist either way, but assuming
Q may reduce the number of higher Lie derivatives of e that need to be considered for the proof (as in Example 7.10).
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.                      
Differential Equation Invariance Axiomatization 6:21
is defined to be
.
e (∗) = 0
def
≡
N
	−1
i=0
.
e (i) = 0
The finiteness of .
e (∗) = 0 depends on Lie derivatives along the particular differential equation
x  = f (x) of interest, because, without considering the ODE, no corresponding chain of higherorder differentials would stabilize. The rest of this article focuses on Lie derivatives to utilize
this finiteness property but relies under the hood on dL’s axiomatic proof transformation from
differentials.
The completeness of derived rule dRI can be proved semantically by extending earlier arguments [15] to extended term languages. Even better: the following equivalent characterization in
arithmetic of the future truth of analytic formulas along differential equations (including analytic
invariants) derives axiomatically using the extensions developed in Section 5.
6 In contrast to the
semantic completeness argument, this syntactic characterization enables complete proofs and complete disproofs of analytic invariance within the dL calculus. In other words, disproving the RHS of
the characterization under assumptions Γ, yields a dL proof of Γ  ¬[x  = f (x) &Q]e = 0.
Theorem 4.5 (Analytic Completeness). The differential radical invariant axiom DRI derives in
dL when Q is a semianalytic formula formed from conjunctions and disjunctions of strict inequalities:
DRI [x  = f (x) &Q]e = 0 ↔ 
Q → .
e (∗) = 0

Proof Summary (Appendix B.3). The “←” direction derives (for any Q) by an application of
derived rule dRI, whose right premise closes by the identity in Equation (3). The “→” direction
relies on existence and uniqueness of solutions to differential equations, which are internalized as
axioms in Section 5.
For the proof of Theorem 4.5, the additional axioms are only required for syntactically deriving the “→” direction (completeness) of DRI. The “←” direction (soundness) derives using dRI,
which, by Theorem 4.3, can be derived using only DI, DC, DG. Thus, the base dL axiomatization
with differential ghosts is complete for proving properties of the form [x  = f (x) &Q]e = 0, because dRI provably reduces all such questions to Q → .
e (∗) = 0. The validity of this resulting
semianalytic formula is a purely arithmetical question. In fact, the base dL axiomatization decides
[x  = f (x) &Q]p = 0 in the case where x  = f (x) is polynomial and Q is semialgebraic, because
the resulting RHS of DRI is semialgebraic, and hence, a formula of decidable real arithmetic [4].
The same applies for the next result, which is a corollary of Theorem 4.5 but applies beyond the
continuous fragment of dL.
Corollary 4.6 (Analytic Hybrid Program Completeness). For analytic formulas P and analytic hybrid programs α, i.e., whose tests and domain constraints are negations of analytic formulas,
it is possible to compute an extended term e such that the equivalence [α]P ↔ e = 0 is derivable in
dL, provided that the term language is Noetherian (defined in Appendix C).
Proof Summary (Appendix C). By structural induction on α analogous to Reference [29, Theorem 1], using Theorem 4.5 for the differential equations case and the Noetherian term language
for loops.
6With these axiomatic extensions, the requirement in Theorem 4.5 that Q is formed from strict inequalities is not necessary. A derived equivalence axiom for analytic invariance with arbitrary semianalytic domain constraint Q is given
in Theorem 6.10.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
6:22 A. Platzer and Y. K. Tan
The Noetherian condition of Corollary 4.6 implies the computable differential radicals condition (R). Polynomial term languages are Noetherian so Corollary 4.6 shows that dL decides [α]P
where P and α are both algebraic. However, the Noetherian condition fails even for simple extended
term languages such as (1). The stronger Noetherian condition is only required when the analytic
hybrid program α contains loops. Otherwise, the weaker condition (R) suffices for Corollary 4.6.
5 EXTENDED AXIOMATIZATION
This section presents the axiomatic extension that is used for the rest of this article. The purpose of
this axiomatic extension is to internalize standard properties of differential equations, such as existence and uniqueness [44, Section 10.VI] as syntactic reasoning principles. The extension requires
that the system x  = f (x) locally evolves x, i.e., it has no fixpoint at which f (x) is the 0 vector. This
can be ensured syntactically, e.g., by requiring that the system contains a clock variable x 
1 = 1 that
tracks the passage of time. Such a clock can always first be added using axiom DG if necessary.
5.1 Existence, Uniqueness, and Continuity
The differential equations of dL are smooth. Hence, the Picard-Lindelöf theorem [44, Section 10.VI]
guarantees that for any initial state ω, a unique solution of the system x  = f (x), i.e., φ : [0,T ] → S
with φ(0) = ω, exists for some duration T > 0. The solution φ can be extended (uniquely) to its
maximal open interval of existence [44, Section 10.IX] and φ(ζ ) is smooth with respect to ζ .
Lemma 5.1 (Continuous Existence, Uniqeness, and Differential Adjoints). The following axioms are sound. In Cont and Dadj, y are fresh variables (so not in x  = f (x) &Q(x) or e):
Uniq x  = f (x) &Q1 ∧ Q2P ↔ 
x  = f (x) &Q1P

∧ 
x  = f (x) &Q2P

Cont x = y → 
x  = f (x) &e > 0x  y ↔ e > 0

Dadj x  = f (x) &Q(x) x = y ↔ y = −f (y) &Q(y)y = x
Proof Summary (AppendixA.1). Uniq internalizes uniqueness, Cont internalizes continuity of
the values of e and existence of solutions, and Dadj internalizes differential adjoints by the group
action of time on ODE solutions, which is another consequence of existence and uniqueness.
The uniqueness axiom Uniq says that if a state has two solutions φ1,φ2, respectively, staying
in evolution domains Q1,Q2 and whose endpoints satisfy P, then, by uniqueness, one of φ1 or φ2
is a prefix of the other, and therefore, that prefix stays in both evolution domains Q1 ∧ Q2 and
satisfies P at its endpoint. The continuous existence axiom Cont expresses a notion of local progress
for differential equations. It says that from an initial state satisfying x = y, the system can locally
evolve to another state satisfying x  y while still staying in the open set of states characterized by
e > 0 iff the initial state is already in that open set. This uses the assumption that the system locally
evolves x at all. The differential adjoints axiom Dadj expresses that x can flow forward to y iff y can
flow backward to x along the negated ODE. It is at the heart of the “there and back again” axiom
that equivalently expresses properties of differential equations with evolution domains in terms
of properties of forwards and backwards differential equations without evolution domains [29].
Although all three axioms are stated as (conditional7) equivalences to support intuition, the main
properties of interest are their “←” directions. For example, the “→” direction of Uniq derives from
domain constraint monotonicity for the diamond modality (derived rule dRW· below). These
7Axiom Cont is sound even without the condition from assumption x = y. It is stated conditionally to align with the
intuition of local evolution from an initial state satisfying x = y.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
Differential Equation Invariance Axiomatization 6:23
diamond monotonicity principles are given below as they are useful for working with the newly
introduced axioms. They derive by duality from the usual dL box modality principles:
Corollary 5.2 (Derived Diamond Modality Domain Rules and Axioms). The following axiom and its corollary proof rule derive in dL:
DR· [x  = f (x) & R]Q → 
x  = f (x) & RP → x  = f (x) &QP

dRW·
R  Q Γ  x  = f (x) & RP
Γ  x  = f (x) &QP
Proof Summary (AppendixA.2). Axiom DR· is the diamond version of dL’s domain refinement axiom that underlies axiom DC; if solutions never leave Q when staying in R (first assumption), then any solution staying in R (second assumption) must also stay in Q (conclusion). The
rule dRW· derives from DR· using rule dW on its first assumption.
5.2 Real Induction
The final axiomatic extension is based on the real induction principle [7], which is briefly recalled:
Definition 5.3 (Inductive Subset [7]). The subset S ⊆ [a,b] is called an inductive subset of the
compact interval [a,b] iff for all a ≤ ζ ≤ b and [a, ζ ) ⊆ S,
1 ζ ∈ S.
2 If ζ < b, then (ζ , ζ + ϵ] ⊆ S for some ϵ > 0.
Here, [a, a) is the empty interval, hence 1 requires a ∈ S.
Proposition 5.4 (Real Induction [7]). The subset S ⊆ [a,b] is inductive iff S = [a,b].
Proof. In the “ ⇐ ” direction, S = [a,b] is inductive by definition. For the “ ⇒ ” direction, let
S ⊆ [a,b] be inductive. Suppose S  [a,b], so that the complement set S = [a,b] \ S is nonempty.
Let ζ be the infimum of S, then ζ ∈ [a,b], since [a,b] is left-closed. First, note that [a, ζ ) ⊆ S.
Otherwise, ζ is not an infimum of S, because there would exist a ≤ τ < ζ , such that τ ∈ S. By 1 ,
ζ ∈ S. Next, if ζ = b, then S = [a,b], contradiction. Thus, ζ < b, and by 2 , (ζ , ζ + ϵ] ⊆ S for some
ϵ > 0. Since ζ ∈ S, this implies that ζ + ϵ is a greater lower bound of S than ζ , contradiction.
Proposition 5.4 is based on the completeness of the reals [7] for compact intervals [a,b] of R.
Applying it to the time axis of ODE solutions yields real induction along solutions of differential
equations. For brevity, only the real induction axiom for systems without evolution domain constraints is presented here, leaving the general version to AppendixA.1, since evolution domains
are definable in dL [29].
Lemma 5.5 (Real Induction). The real induction axiom RI is sound, where y is fresh in
[x  = f (x)]P:
RI [x  = f (x)]P ↔ ∀y [x  = f (x) & P ∨ x = y]

x = y → P ∧ x  = f (x) & P ∨ x = yx  y

Proof Summary (AppendixA.1). The RI axiom follows from the real induction principle [7]
and the Picard-Lindelöf theorem [44, Section 10.VI].
Real induction axiom RI can be understood in relation to Definition 5.3: its RHS is true in a
state iff the subset of times at which the solution satisfies P is inductive. First, ∀y [...](x = y →
... ) can be understood as quantifying over all final states (x = y) reached by trajectories staying
within P except possibly at the endpoint x = y. This corresponds to [a, ζ ) ⊆ S in Definition 5.3.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.          
6:24 A. Platzer and Y. K. Tan
Fig. 3. The half-open green disk is not invariant for the ODE αe from Equation (2), because the red and blue
trajectories spiral out of it toward the unit circle at a closed (solid green) or open (dashed green) boundary,
respectively.
The left conjunct (P) under the box modality expresses that P is still true at such an endpoint,
corresponding to 1 in Definition 5.3. The right conjunct (x  = f (x) & P ∨ x = yx  y) expresses
that P continues to remain true locally when following the ODE for a short time, corresponding
to 2 in Definition 5.3.
To see the topological significance of RI, recall the ODE αe from Equation (2) and consider
a set of points that is not invariant. Figure 3 illustrates two trajectories that leave the half-open
candidate invariant disk characterized by the disjunctive formula: u2+v2 < 1
4 ∨u2+v2 = 1
4 ∧u ≥ 0.
Trajectories starting in the disk leave it through its boundary but only in one of two ways: either at
a point that is also in the disk (red trajectory exiting right) or that is not in the disk (blue trajectory
exiting left). The left conjunct of RI rules out trajectories like the blue one exiting left in Figure 3,
while the right conjunct rules out trajectories like the red trajectory exiting right.
The right conjunct of axiom RI also suggests a way to use it: axiom RI reduces proofs of invariance to local progress properties under the box modality. This motivates the following syntactic
modality abbreviation for local progress into an evolution domain Q:
x  = f (x) &Q def ≡ x  = f (x) &Q ∨ x = y x  y
All proofs in this article use the modality with an initial assumption x = y, where y is fresh. In
this case, where ω[[x]] = ω[[y]], since the ODE locally evolves x, the  modality has this semantics:
ω ∈ [[x  = f (x) &Q]] iff there is a function φ : [0,T ] → S with T > 0,φ(0) = ω,
φ solves the ODE x  = f (x) and φ(ζ ) ∈ [[Q]] for all ζ in the half-open interval (0,T ].
Thus, the abbreviation  is a continuous-time version of the next modality of temporal logic [8]
for differential equations. Conventionally, such a next state operator is excluded from continuoustime generalizations of temporal logic [8], because there is no unique “next” state in the continuous
setting. The local progress modality  overcomes this by instead quantifying over some time
interval (0,T ], withT > 0, of states along the solution. Intuitively, the exclusion of time 0 is because
the  modality describes what solutions will do next (or locally) rather than what it is doing now.
A precise (topological) explanation is provided in Appendix B.2. A complete characterization of
local progress for all semianalytic formulas is derived in Section 6. As a corollary this shows that,
like its discrete counterpart, the  modality is self-dual for semianalytic Q.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
Differential Equation Invariance Axiomatization 6:25
The final derived rule rI shows what the added axioms and local progress provide. Axiom RI
reduces global invariance properties of ODEs to local progress properties. These local progress
properties are provable using Cont, Uniq and the existing dL axioms, as shown in the next section.
Corollary 5.6 (Real Induction Rule). The real induction proof rule rI derives from RI, Dadj.
Variables y are fresh in the ODE x  = f (x) and formula P:
rI x = y, P  x  = f (x) & P x = y, ¬P  x  = −f (x) & ¬P
P  [x  = f (x)]P
Proof Summary (AppendixA.2). Rule rI derives from axiom RI, where the left/right premises
of the rule correspond, respectively, to the right/left conjunct of the RHS of RI. Axiom Dadj is used
to syntactically flip signs in the right premise.
6 SEMIANALYTIC INVARIANTS
From now on, assume domain constraint Q ≡ true, since it is definable [29] and not central to the
core idea of this section. Using the generalizations of RI, rI from AppendixA, the case of semianalytic invariants for ODEs with arbitrary semianalytic evolution domain Q is given in Appendix B.
The first step in invariance proofs for semianalytic P is to use derived rule rI, which yields
premises of the form x = y, P  x  = f (x) & P (modulo sign changes and negation). These
premises express local progress properties of the ODE x  = f (x). Analogously to the equivalent
arithmetic reduction of equational properties of differential equations in Theorem 4.5 using
the finite differential radical formula (Definition 4.4), the key insight is that local progress for
any semianalytic formula is also (provably) completely characterized by a finite semianalytic
progress formula.
6.1 Local Progress
The characterization of local progress was previously used implicitly for semialgebraic invariants [16, 22]. This section shows how it can be derived syntactically in dL for extended term
languages and proves the completeness of this characterization. The derivation is built up systematically, starting from the base case of atomic inequalities before moving on to the full semianalytic
case. Interesting properties of this characterization, e.g., self-duality, are observed along the way.
6.1.1 Atomic Inequalities. Consider the atomic inequality e  0. Intuitively, to show local
progress into such an inequality, it is sufficient to locally consider the first (significant) Lie derivative of e, because the sign of a smooth function is locally dominated by the sign of its first
non-zero derivative (if one exists). The key to its syntactic rendition is the following lemma for
non-strict inequalities:
Lemma 6.1 (Local Progress Step). The local progress step axiom LPi≥ derives from Cont. Variables y are fresh in the ODE x  = f (x) and extended term e:
LPi≥ x = y → (e ≥ 0 ∧ (e = 0 → x  = f (x) & .
e ≥ 0xy) → x  = f (x) &e ≥ 0xy)
Proof. The proof starts with a ∨L case split, since e ≥ 0 is equivalent to e > 0 ∨ e = 0 by R.
The resulting premises are, respectively, abbreviated 1 for e > 0 and 2 for e = 0, and continued
below:
1 2
R, ∨L
x = y, e ≥ 0, e = 0 → x  = f (x) & .
e ≥ 0xy  x  = f (x) &e ≥ 0xy
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.      
6:26 A. Platzer and Y. K. Tan
From premise 1 , since the value of e is already positive initially, it must locally stay positive.
Using dRW·, the non-strict inequality in the domain constraint of the succedent is strengthened
to a strict one, after which Cont closes the derivation:
∗ Cont x = y, e > 0  x  = f (x) &e > 0xy
dRW·x = y, e > 0  x  = f (x) &e ≥ 0xy
From premise 2 , the local sign of e cannot be determined from its initial value alone. The proof
looks to the Lie derivative of e, which is assumed to be locally non-negative (in the implication
e = 0 → ... ). Axiom DR· reduces this to a box modality, after which DI finishes the proof.
∗
DI, ( )
, DE, [:=] e = 0  [x  = f (x) & .
e ≥ 0]e ≥ 0
DR· e = 0,x  = f (x) & .
e ≥ 0xy  x  = f (x) &e ≥ 0xy
→L e = 0, e = 0 → x  = f (x) & .
e ≥ 0xy  x  = f (x) &e ≥ 0xy
Similar to DBX, DBX, and VDBX, a version of LPi≥ derives once-and-for-all using differentials ((e) ≥ 0) in domain constraints. This presentation is omitted to keep with this article’s
syntactic convention that domain constraints are always (differential-free) semianalytic formulas
(Section 2.1). Mathematically, to conclude that e is locally non-negative, it is important that the Lie
derivative .
e is assumed to be locally non-negative rather than just initially non-negative. Just as
the local sign of e cannot be determined (directly) when its initial value is zero, the same is true for .
e. This difference drives the use of higher Lie derivatives when LPi≥ is generalized below. Syntactically, this difference manifests in both DR·, DI proof steps, which crucially rely on the formula .
e ≥ 0 appearing in their respective domain constraints rather than simply as an initial assumption.
Observe that LPi≥ allows derivations to pass from reasoning about local progress8 for e ≥ 0 to
local progress for its (first) Lie derivative .
e ≥ 0 whilst accumulating e = 0 in the antecedent. This is
reminiscent of derivative tests from elementary calculus used for testing the local behavior around
a given stationary point of a (sufficiently) smooth function. The difference is that (syntactic) Lie
derivatives have to be used for soundness instead of analytic time derivatives, but these notions
are provably equatable along ODEs using differentials [32, Lemma 35]. Similar to these derivative
tests, if the first Lie derivative is indeterminate as well, then the derivation can look to the second
higher Lie derivative, and so on. Deductively, this is done by repeated use of derived axiom LPi≥:
Γ  e ≥ 0
Γ, e = 0  .
e ≥ 0
Γ, x = y, e = 0,..., .
e (k−1) = 0  x  = f (x) & .
e (k) ≥ 0xy
LPi≥ ... LPi≥ Γ, x = y, e = 0  x  = f (x) & .
e ≥ 0xy
LPi≥ Γ, x = y  x  = f (x) &e ≥ 0xy
The rightmost premise closes whenever the (strict) inequality .
e (k) > 0 can be proved from the
accumulated antecedents. The local sign of e (and of all its Lie derivatives below the kth one) is
dominated by that of .
e (k)
, because all of the lower (Lie) derivatives have indeterminate sign. The
8The local progress property used in LPi≥ is syntactically simpler than for the  modality (no x = y in the domain
constraints). For non-strict inequalities, the two are equivalent but the syntactic simplification in LPi≥ allows its re-use as
a lemma in proving  local progress for both non-strict and strict inequalities.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.           
Differential Equation Invariance Axiomatization 6:27
use of Cont, dRW· finishes that proof, because the solution must then locally enter .
e (k) > 0:
Γ, x = y, e = 0,..., .
e (k−1) = 0  .
e (k) > 0
∗ Cont x = y,
.
e (k) > 0  x  = f (x) & .
e (k) > 0xy
dRW·x = y,
.
e (k) > 0  x  = f (x) & .
e (k) ≥ 0xy cut Γ, x = y, e = 0,..., .
e (k−1) = 0  x  = f (x) & .
e (k) ≥ 0xy
The extended term conditions of smoothness (S) and syntactic partial derivatives (P) guarantee
that all of the (infinitely many) higher Lie derivatives of e are well-defined semantically and syntactically. Derivations, however, are finite syntactic objects and can only mention finitely many
Lie derivatives. Thus, one might suspect they are insufficient (hence incomplete) when, e.g., none
of the higher Lie derivatives has a definite sign or if (infinitely many) different choices of k are
needed in the proof depending on the initial state that satisfies assumptions Γ.
This is where the third, computable differential radicals condition (R) is crucially used. When N
is the rank of e according to the identity from Equation (3), then once the derivation has gathered
e = 0,..., .
e (N −1) = 0, i.e., .
e (∗) = 0 in the antecedents, derived rule dRI proves the invariant e = 0
and ODEs always locally progress in invariants. Furthermore, this shows (mathematically) that it is
unnecessary to go to higher Lie derivatives when proving local progress for e > 0, because none of
the signs of the higher Lie derivatives of e beyond N will be sign-definite. Thus, the rank provides
a uniform and finite bound for the number of Lie derivatives of e that need to be analyzed in
any state, regardless of assumptions Γ. This finiteness property motivates the following definition,
which gathers the above open premises to obtain a finite formula characterizing the first significant
Lie derivative of e:
Definition 6.2 (First Significant Lie Derivative). The progress formula .
e (∗) > 0 for extended term
e of rank N ≥ 1 from the identity in Equation (3) with Lie derivatives along x  = f (x) is defined
to be
.
e (∗) > 0
def
≡e ≥ 0 ∧ (e = 0 → .
e ≥ 0) ∧ (e = 0 ∧ .
e = 0 → .
e (2) ≥ 0)
∧···∧ 
e = 0 ∧ .
e = 0 ∧···∧ .
e (N −3) = 0 → .
e (N −2) ≥ 0

∧

e = 0 ∧ .
e = 0 ∧···∧ .
e (N −2) = 0 → .
e (N −1) > 0

The progress formula .
e (∗) ≥ 0 is defined to be .
e (∗) > 0 ∨ .
e (∗) = 0. The formulas .
e−(∗) > 0 (or .
e−(∗) ≥ 0) are identical except their Lie derivatives are along ODE x  = −f (x) instead.
Lemma 6.3 (Local Progress ). The local progress inequality axioms LP≥∗ , LP>∗ derive from
LPi≥ and thus from Cont. Variables y are fresh in the ODE x  = f (x) and extended term e:
LP≥∗ x = y → .
e (∗) ≥ 0 → x  = f (x) &e ≥ 0
LP>∗ x = y → .
e (∗) > 0 → x  = f (x) &e > 0
Proof Summary (Appendix B.2). Both axioms derive after unfolding the syntactic abbreviation
of the  modality. Axiom LP≥∗ derives by the preceding discussion with iterated use of derived
axioms LPi≥ and dRI. Axiom LP>∗ derives similarly, but with an additional tweak to weaken the
strict inequality e > 0, so that axiom LPi≥ can be used.
The difference between the derivations of LP≥∗ and LP>∗ is mainly technical and boils down to
the handling of the assumptions about the initial state, and in particular, x = y (see Appendices A.2
and B.2). Intuitively, the difference arises from the fact that the formula e ≥ 0 characterizes a topologically closed set while e > 0 characterizes an open set. To locally progress into a set from initial
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.     
6:28 A. Platzer and Y. K. Tan
state ω, the state ω must already be in the topological closure of that set. Closed sets are equal to
their closure so, e.g., ω must already satisfy e ≥ 0 to locally progress into it. Sets that are not closed
(e.g., open sets) are not equal to their closure as they lack points on their topological boundary. An
example of this is the half-open disk illustrated in Figure 3. Thus, it is possible to locally progress
into such sets from their topological boundary without ω already starting in the set.
6.1.2 Semianalytic Formulas. Semianalytic formulas P normalize propositionally to the following disjunctive normal form with extended terms eij , e˜ij :
P ≡


M
i=0



m
	
(i)
j=0
eij ≥ 0 ∧
n
	
(i)
j=0
e˜ij > 0



(5)
Progress formulas lift homomorphically to semianalytic formulas in normal form:
Definition 6.4 (Semianalytic Progress Formula). The semianalytic progress formula .
P (∗) for a
semianalytic formula P in the normal form of Equation (5) and Lie derivatives along x  = f (x) is
defined to be
.
P (∗) def
≡


M
i=0



m
	
(i)
j=0
.
eij (∗) ≥ 0 ∧
n
	
(i)
j=0
.
e˜ij (∗) > 0



The formula .
P−(∗) takes Lie derivatives along ODE x  = −f (x) instead.
A mention of the notation .
P (∗) is understood as the progress formula for semianalytic formula
P after it is rewritten propositionally to any equivalent normal form of Equation (5).
Lemma 6.5 (Semianalytic Local Progress). The local progress formula axiom LPR derives from
Cont, Uniq. Variables y are fresh in the ODE x  = f (x) and semianalytic formula P:
LPR x = y →  .
P (∗) → x  = f (x) & P
Proof Summary (Appendix B.2). The shape of the semianalytic progress formula .
P (∗) guides
the proof. The derivation is sketched at a high level here for the representative example formula:
P ≡ (e1 ≥ 0 ∧ e˜1 > 0) ∨ (e2 ≥ 0 ∧ e˜2 > 0)
.
P (∗) ≡ (
.
e1
(∗) ≥ 0 ∧ .
e˜1
(∗) > 0) ∨ (
.
e2
(∗) ≥ 0 ∧ .
e˜2
(∗) > 0)
To show local progress into a disjunction, it suffices to show local progress into either disjunct.
The derivation starts by decomposing .
P (∗) according to its (outermost) disjunction and accordingly
decomposing P in the local progress succedent with dRW·. The premise for the second disjunct
resulting from the ∨L step is symmetric and omitted here:
x = y, .
e1
(∗) ≥ 0 ∧ .
e˜1
(∗) > 0  x  = f (x) &e1 ≥ 0 ∧ e˜1 > 0
dRW·x = y, .
e1
(∗) ≥ 0 ∧ .
e˜1
(∗) > 0  x  = f (x) & P
∨L x = y,
.
P (∗)  x  = f (x) & P
To show local progress into a conjunction, by Uniq, it suffices to show local progress into
both conjuncts separately. The derivation continues using Uniq, ∧R to split the conjunctive local progress succedent before the derived axioms LP≥∗ , LP>∗ are used to finish the proofs of the
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.    
Differential Equation Invariance Axiomatization 6:29
atomic cases:
∗ LP≥∗
x = y, .
e1
(∗) ≥ 0  x  = f (x) &e1≥0
∗
LP>∗
x = y,
.
e˜1
(∗) > 0  x  = f (x) &e˜1>0
Uniq, ∧R x = y, .
e1
(∗) ≥ 0,
.
e˜1
(∗) > 0  x  = f (x) &e1 ≥ 0 ∧ e˜1 > 0
Completeness could potentially be lost in several steps of the proof of Lemma 6.5, e.g., the use
of ∨L at the start of the derivation, or the implicational axioms LP≥∗ , LP>∗ . The converse (completeness) direction of axiom LPR therefore does not follow immediately from Lemma 6.5. Instead,
the axiom LPR can be re-used to derive its own strengthening to an equivalence. This equivalence
justifies the syntactic abbreviation , recalling that the  modality of temporal logic is self-dual.
It also shows that the progress formulas are congruent over equivalences.
Theorem 6.6 (Local Progress Completeness). The local progress axiom LP derives from Cont,
Uniq. Variables y are fresh in the ODE x  = f (x) and semianalytic formula P:
LP x = y → 
x  = f (x) & P ↔ .
P (∗)

Corollary 6.7 (Duality and Congruence). The duality axiom ¬ and congruence proof rule
for progress formulas CLP derive from LP and thus from Cont, Uniq. Variables y are fresh in the ODE
x  = f (x) and semianalytic formulas P, R.
¬ x = y → 
x  = f (x) & P ↔ ¬x  = f (x) & ¬P
CLP
P ↔ R .
P (∗) ↔ .
R(∗)
Proof Summary for Theorem6.6 and Corollary 6.7 (Appendix B.2). The axioms (and proof
rule) follow from the homomorphic definition of semianalytic progress formulas, which implies
that any semianalytic formula P in the normal form of Equation (5) has a corresponding normal
form for ¬P such that the equivalence ¬(
.
P (∗)
) ↔ .
(¬P)(∗) is provable. Classically, in any state, either
formula .
P (∗) or ¬(
.
P (∗)
) is true. Therefore, by LPR, the ODE must (exclusively, by uniqueness) either
locally progress into P or ¬P from this state. Both axioms LP, ¬ are derivable consequences
of this fact, as shown syntactically in Appendix B.2. Rule CLP follows from LP by congruential
equivalence [32].
Congruence rule CLP shows that any equivalent choice of normal form in Equation (5) for
semianalytic formula P gives a local progress formula that is (provably) equivalent to .
P (∗)
. Note that
the rule works for all (semianalytic) equivalences, including arithmetical ones, e.g., exp (x) = 1 ↔
x = 0 from Equation (1), so CLP does not follow immediately from the homomorphic definition of
progress formulas.
6.2 Completeness for Semianalytic Invariants
Combining derived axiom LP and derived rule rI yields an effective proof rule that reduces a semianalytic invariance question to questions involving purely arithmetic formulas:
Theorem 6.8 (Semianalytic Invariants). The semianalytic invariant proof rule sAI derives from
RI, Dadj, Cont, Uniq for semianalytic formula P:
sAI
P  .
P (∗) ¬P  .
(¬P)
−(∗)
P  [x  = f (x)]P
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
6:30 A. Platzer and Y. K. Tan
Proof. This follows immediately by rewriting the premises of rule rI with the
equivalence LP.
Completeness ofsAI was first proved semantically for polynomial terms languages [22], making
crucial use of semialgebraic sets and real analytic solutions to polynomial ODE systems. The proof
rule sAI derives syntactically in dL and generalizes to semianalytic invariants for extended term
languages. Its completeness derives syntactically too, which yields dL disproofs of semianalytic
invariance when arithmetic counterexamples can be found.
Theorem 6.9 (Semianalytic Invariant Completeness). The semianalytic invariant axiom SAI
derives from RI, Dadj, Cont, Uniq for semianalytic formula P:
SAI ∀x (P → [x  = f (x)]P) ↔ ∀x

P → .
P (∗)

∧ ∀x

¬P → .
(¬P)
−(∗)

In Appendix B, a generalization of Theorem 6.9 is proven that handles semianalytic evolution
domains Q using LP and a corresponding generalization of axiom RI. The same appendix also
proves the following generalization of Theorem 4.5 for semianalytic evolution domains:
Theorem 6.10 (Analytic Completeness with Semianalytic Domains). The differential radical invariant axiom DRI& derives from Cont, Uniq for semianalytic formula Q:
DRI& [x  = f (x) &Q]e = 0 ↔ 
Q → e = 0 ∧ (
.
Q(∗) → .
e (∗) = 0)

Thus, dL is complete for proving invariance of all (semi)analytic P of differential equations, because it reduces all such questions equivalently to first-order formulas, e.g., on the RHS of derived
axiom SAI. In addition, dL decides invariance properties for all first-order real arithmetic formulas
P, because quantifier elimination [4] can equivalently rewrite P to (semialgebraic) normal form of
Equation (5) first. Unlike for Theorem 4.5 and its generalization Theorem 6.10, which equivalently
reduce the future truth of analytic postconditions directly, Theorem 6.9 and its generalized version
in Appendix B are only equivalences for invariants P, the search of which is the only remaining
challenge.
Of course, the complete proof rule sAI can be used to prove all of the suggested invariants
for the ODE αe from Equation (2). However, Example 3.3 gives a significantly simpler proof for
the invariance of 1 − u2 − v2  0 with dbx. This has implications for implementations of sAI:
simpler proofs help minimize dependence on real arithmetic decision procedures. For semianalytic
formulas (that are not semialgebraic), proof rules resulting in simpler arithmetic premises might
even be preferable, because validity of these arithmetic premises is undecidable in general [36].
Logically, when P is formed from only strict (respectively, non-strict) inequalities then the left
(respectively, right) premise of sAI closes trivially. This logical fact corresponds to the topological
fact that the set P characterizes is topologically open (respectively, closed) so only one of the two
exit trajectories in Section 5.2 can occur.
7 NOETHERIAN FUNCTIONS
This section studies the class of Noetherian functions that meets all of the extended term conditions required in Section 2.4 and therefore inherits all soundness and completeness results of the
preceding sections, including Theorems 4.5 and 6.9.
7.1 Mathematical Preliminaries
The following definition of Noetherian functions is standard, although the parameters that are
used for studying the complexity of these functions [3, 11, 12] have been omitted. The notation
h : H ⊆ Rk → R is used for real-valued functions with domain H, i.e., an open, connected subset
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
Differential Equation Invariance Axiomatization 6:31
of Rk . With a slight abuse of notation, polynomials p ∈ R[x] over indeterminates x = (x1,..., xn )
and their corresponding polynomial functions p(x1,..., xn ) in Rn → R are used interchangeably.
Definition 7.1 (Noetherian Chain and Noetherian Function). A Noetherian chain is a sequence of
real analytic functions h1,...,hr : H ⊆ Rk → R such that all partial derivatives in H for all
i = 1,..., k and j = 1,...,r have the following form, where each qij ∈ R[y, z] is a polynomial in
k + r indeterminates with y = (y1,...,yk ), z = (z1,..., zr ):
∂hj
∂yi
(y) = qij (y,h1 (y),...,hr (y)) (6)
The function h : H ⊆ Rk → R is Noetherian iff it can be written as h(y) = p(y,h1 (y),...,hr (y)),
where p ∈ R[y, z] is a polynomial in k + r indeterminates and h1,...,hr is a Noetherian chain. In
that case, h is said to be generated by this polynomial and Noetherian chain, respectively, but the
choice of generating chain and polynomial for h is not unique.
For the term language extension from Equation (1), exp is a one-element Noetherian chain,
because ∂ exp(y)
∂y = exp(y), while sin, cos form a two-element Noetherian chain. All three functions
together form a three-element Noetherian chain. More generally, the union of any (finite) number
of Noetherian chains is a Noetherian chain. By definition, any element of a Noetherian chain is
itself a Noetherian function so exp,sin, cos are also Noetherian functions. It is often useful to
consider Noetherian functions over a larger domain than the generating chain, e.g., h(x,y) =
exp(y) + sin(x) with h : R2 → R. In this case, the domain of definition of the generating chain
is implicitly extended by treating them as functions over the dimensionally larger domain, e.g.,
with exp(x,y),sin(x,y) : R2 → R, which ignore their first and second argument, respectively.
This is compatible with Definition 7.1, because the partial derivatives with respect to the ignored
arguments is trivially zero.
Proposition 7.2 gives important closure properties of the Noetherian functions generated by the
same Noetherian chain, which are crucial later and explain the name Noetherian function [12, 41].
Proposition 7.2 ([3, 11, 12]). The set R of Noetherian functions generated by a given Noetherian
chain h1,...,hr : H ⊆ Rk → R is a Noetherian ring that is closed under partial derivatives.
Proof. Let y = (y1,...,yk ), z = (z1,..., zr ) abbreviate indeterminates as in Definition 7.1. The
set R is a ring under the usual addition and multiplication of real-valued functions, because the
corresponding generating polynomials form a ring. Now, R is Noetherian because it is a finitely
generated algebra [6, Section 2.11, Corollary 3] over the Noetherian polynomial ring R[y]. The
following constructive proof yields a computational method that is used later.
Consider an ascending chain of ideals I0 ⊆ I1 ⊆ ··· in R. For each Ii , associate the set of
generating polynomials Ji
def
= {p | p(y,h1 (y),...,hr (y)) ∈ Ii} ⊆ R[y, z] with respect to the generating Noetherian chain. Each Ji is an ideal in R[y, z], because the corresponding Ii are themselves
ideals. By construction, Ji ⊆ Ji+1, because Ii ⊆ Ii+1 for all i. Since J0 ⊆ J1 ⊆ ··· is an ascending
chain of ideals in R[y, z], which is a Noetherian polynomial ring, it must stabilize at some N with
JN = JN +1 = ··· . Correspondingly, the chain of ideals Ii stabilizes (at the latest) at N so R is Noetherian. The chain I0 ⊆ I1 ⊆ ··· may stabilize earlier than the corresponding Ji chain but that is
not important here.
To show that R is closed under partial derivatives, let h(y) = p(y,h1 (y),...,hr (y)) ∈ R with
p ∈ R[y, z]. For the partial derivative of h with respect to yi , applying the chain rule yields
∂h
∂yi
(y) = ∂p(y,h1 (y),...,hr (y))
∂yi
= ∂p
∂yi
(y,h1 (y),...,hr (y)) +
r
j=1
∂p
∂zj
(y,h1 (y),...,hr (y))
∂hj
∂yi
(y)
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020. 
6:32 A. Platzer and Y. K. Tan
By definition, ∂p
∂yi (y,h1 (y),...,hr (y)) ∈ R, since ∂p
∂yi is a polynomial in R[y, z]. Each summand
∂p
∂zj
(y,h1 (y),...,hr (y)) ∈ R, since ∂p
∂zj is a polynomial in R[y, z], and ∂hj
∂yi (y) ∈ R by definition,
because h1,...,hr is a Noetherian chain. Hence, all RHS sub-terms are in R, and so ∂h
∂yi (y) ∈ R.
Proposition 7.2 implies that adding Noetherian functions to their generating chains yields another Noetherian chain generating the same Noetherian ring R of Noetherian functions, because
R is closed under ring addition and multiplication. Beyond closure properties for a single Noetherian chain, the class of all Noetherian functions is also closed under other mathematical operations,
including function composition, multiplicative inverses, and function inverses (with appropriate
assumptions) [3]. Closure under function composition is proved constructively as it is used later.
Proposition 7.3 ([3]). If h : H ⊆ Rk → R is Noetherian and υ : ϒ ⊆ Rl → Rk has a compatible
image υ(ϒ) ⊆ H where each component υi : ϒ ⊆ Rl → R for i = 1,..., k is Noetherian, then the
function composition f = h(υ1,...,υk ) : ϒ ⊆ Rl → R is Noetherian.
Proof. Let y = (y1,...,yk ), z = (z1,..., zr ),γ = (γ1,...,γl ) abbreviate indeterminates.
The composed function f is well-defined on ϒ, since υ(ϒ) ⊆ H. By assumption, h(y) =
p(y,h1 (y),...,hr (y)) for some generating Noetherian chain h1,...,hr : H ⊆ Rk → R and polynomial p ∈ [y, z]. Since the union of Noetherian chains is Noetherian and by Proposition 7.2, assume
without loss of generality, that the Noetherian functions υi for i = 1,..., k are members of the
same generating Noetherian chain υ1,...,υs : ϒ ⊆ Rl → R with k ≤ s. Putting these together,
f can be written as f = p(υ, f1,..., fr ), where υ = (υ1,...,υk ) and the function compositions
fi
def
= hi (υ1,...,υk ) for i = 1,...,r. From this representation, f is generated by polynomial p over
the sequence:
υ1,...,υs , f1,..., fr (7)
To show the sequence in Equation (7) is a Noetherian chain, it suffices to check that the
f1 ..., fr obey the condition on partial derivatives in Equation (6), because υ1,...,υs is already
a Noetherian chain. For each fi (γ ) : ϒ ⊆ Rl → R, taking the partial derivative with respect to γj
and applying the chain rule:
∂fi
∂γj
(γ ) = ∂hi (υ1 (γ ),...,υk (γ ))
∂γj
=

k
l=1
∂hi
∂yl
(υ1 (γ ),...,υk (γ )) ∂υl
∂γj
(γ )
It suffices to check that each sub-term appearing on the RHS sum are generated as polynomials
over the sequence in Equation (7). The case for each ∂υl
∂γj
(γ ) follows immediately, because
υ1,...,υs is a Noetherian chain. Since h1,...,hr is a Noetherian chain, each ∂hi
∂yl is a polynomial
combination ∂hi
∂yl = til (y,h1,...,hr ) for some polynomial til ∈ R[y, z] and, thus, ∂hi
∂yl is generated
by the chain in Equation (7):
∂hi
∂yl
(υ1,...,υk ) = til (υ,h1 (υ),...,hr (υ)) = til (υ, f1,..., fr )
Before turning to the study of Noetherian functions in dL, it is helpful to first understand how
they help with its differential equations reasoning. Polynomial ODEs are very expressive and earlier results [17, 23, 28] make use of polynomial ODEs to implicitly characterize (and thus, eliminate)
real analytic functions appearing in initial value problems (IVPs). IVPs are specified by a system
of ODEs, x  = f (x), defined over domain D with RHS f (x) : D ⊆ Rn → Rn and real initial
value X0 ∈ D ⊆ Rn. The IVP is called Noetherian (respectively, polynomial) when all components
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
Differential Equation Invariance Axiomatization 6:33
of the RHS f (x) are Noetherian functions (respectively, polynomials). Both Noetherian and polynomial functions are analytic and therefore continuously differentiable. Under the assumption of
continuously differentiable RHS, the Picard-Lindelöf theorem [44, Section 10.VI] guarantees that
the IVP has a unique maximal solution φ(t) : (α, β) → Rn with −∞ ≤ α < 0 < β ≤ ∞ such that
φ(0) = X0 and dφ(t)
dt = f (φ(t)). Uniqueness and maximality here means that every solution of the
IVP is a truncation of φ to a smaller existence interval. The following generalizes aforementioned
results [17, 23, 28] to the Noetherian setting:
Proposition 7.4. Function φ : (α, β) → Rn with −∞≤α<0<β≤∞ is the (coordinate-projected)
solution of a Noetherian IVP iff it is the (coordinate-projected) solution of a polynomial IVP.
Proof. In the (trivial) converse “ ⇐ ” direction, suppose function φ solves the polynomial IVP
x  = p(x,y),y = q(x,y) with initial values X0 ∈ Rn,Y0 ∈ Rr . Let φx ,φy denote the projection
onto the x and y coordinates of φ, respectively. Every solution of polynomial ODEs is a univariate
Noetherian function [12]. Therefore, the Noetherian IVP given by x  = p(φx (τ ),φy (τ )), τ  = 1 with
the same initial value for x and 0 for τ trivially has the (unique) solution (φx (t),t) : (α, β) → Rn×R.
In the (nontrivial) “ ⇒ ” direction, suppose that φ is the solution to the Noetherian IVP x  = f (x)
where each fi (x) : D ⊆ Rn → R is Noetherian, and with initial value X0 ∈ D. By uniqueness of
solutions, it suffices to construct a polynomial IVP, so that φ(t) solves it in the x coordinates.
Since the union of Noetherian chains is itself a Noetherian chain, assume without loss of generality that the functions f1,..., fn are generated by the same Noetherian chain h1,...,hr and
that fi = pi (x,h1 (x),...,hr (x)) for some polynomials pi ∈ R[x,y] in n + r indeterminates for
i = 1,...,n. Introduce new variables yj for j = 1,...,r, which are meant to take on the respective
value of hj along solutions to the ODE. Accordingly, the RHS of the Noetherian ODE is rewritten
by replacing each fi with pi (x,y), i.e., the desired polynomial ODEs for x is x  = p(x,y).
It remains to ensure that each of these newly introduced variables yj take on their intended
values hj (φ(t)) along the solution φ. By Equation (6), the partial derivatives for each hj can be
written as polynomials qij ∈ R[x,y] over the generating Noetherian chain. By the chain rule:
dhj (φ(t))
dt =
n
i=1
∂hj (x)
∂xi
(φ(t)) dφi (t)
dt =
n
i=1
qij 
φ(t),h1 (φ(t)),...,hr (φ(t)) dφi (t)
dt
Back-substituting into the RHS of this equation using the intended values for yj and the new
ODEs for x, yields the following additional ODEs for y:
y
j =
n
i=1
qij (x,y)pi (x,y)
The RHS of these additional ODEs are polynomials in R[x,y], which completes the desired
polynomial IVP with the initial values Y0
def
= (h1 (x0),...,hr (x0)) ∈ Rr for y. The construction of
this polynomial IVP is correct-by-construction because of the mechanical chain rule computation.
A solution to this IVP is given by the pair (φ(t),y(t)) : (α, β) → Rn × Rr where yj (t) def
= hj (φ(t)) :
(α, β) → R. By uniqueness of solutions, this completes the proof of the “ ⇒ ” direction.
In the “ ⇒ ” direction of Proposition 7.4, the constructed polynomial IVP may involve additional
ODEs over the variablesy (with their respective initial values). The number of additional equations
required in this construction is the length of the shortest Noetherian chain that generates the RHS
of the input Noetherian ODE. The polynomial IVP may have a larger maximal interval of existence
than the input Noetherian IVP if it leaves the domain D of the input RHS. In the “ ⇐ ” direction,
only one additional time variable τ is required. Consequently, the solution of any n-dimensional
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.    
6:34 A. Platzer and Y. K. Tan
IVP that is the coordinate projection of the solution of a polynomial IVP (of potentially much larger
dimension) is the coordinate projection of the solution of an (n + 1)-dimensional Noetherian IVP.
The constructive proof of the “ ⇒ ” direction in Proposition 7.4 yields an approach for transforming input Noetherian IVPs to polynomial IVPs assuming that the Noetherian functions can
be effectively associated with generating Noetherian chains and polynomials.
Example 7.5 (Flight Dynamics [28, Equation 1]). A simple planar model of curved aircraft motion
is given by the following ODE system, where (x,y) are the aircraft’s planar coordinates, θ its
angular orientation, and ν,ω its linear and angular velocity, respectively [28, Equation (1)]:
x  = ν cos (θ ), y = ν sin (θ ), θ  = ω
Consider an IVP for this ODE with initial values x = X0,y = Y0, θ = Θ0 ∈ R. The linear and
angular velocities ν,ω are left as symbolic constants in this model.
The RHS of the ODE is generated by the Noetherian chain: sin (θ ), cos (θ ). Introducing additional
variables z1, z2 for the elements of this chain, and replacing the RHS for x 
,y according to their
generating polynomials with respect to the chain gives
x  = νz1, y = νz2, θ  = ω
A symbolic calculation (see Proposition 7.4) yields the following ODEs that z1, z2 must obey:
z
1 = ωz2, z
2 = −ωz1
To finish constructing the polynomial IVP, set the initial values z1 = sin (Θ0), z2 = cos (Θ0). The
resulting ODE has higher dimension but a polynomial RHS.
The utility of adding Noetherian functions to dL is not an increase in expressiveness of the
differential equations. Rather, it allows Noetherian ODEs to be written down naturally instead of
relying on implicit polynomial characterization such as in Example 7.5. More importantly, they
make it possible to use formulas as ODE invariants that are not semialgebraic. By Theorems 4.5
and 6.9, the dL ODE axiomatization provides an effective and complete calculus for (dis)proving the
resulting semianalytic ODE invariants involving Noetherian functions. This requires Noetherian
functions to meet the extended term conditions from Section 2.4, which is shown next.
7.2 Extended Term Conditions for Noetherian Functions
Assume from now on that the fixed k-ary function symbols h1,...,hr are interpreted semantically
as members of a Noetherian chain h1,...,hr : Rk → R, respectively. Recall that extended dL
terms are formed syntactically from these function symbols according to the grammar (Section 2.1).
As discussed in Section 2.2, the choice of domain Rk for these functions ensures that the term
semantics is well-defined in all states. The first two extended term conditions are straightforward
to check:
(S) All Noetherian functions are, by definition, C∞ smooth (even real analytic) so the semantics of differentials are well-defined.
(P) The partial derivative of each hj (y1,...,yk ) : Rk → R with respect to yi satisfies Equation (6) for some polynomial qij ∈ R[y, z]. Since polynomials are generated by addition
and multiplication, these partial derivatives ∂h
∂yi (y1,...,yk ) are syntactically represented
by the extended term:
qij 
y1,...,yk ,h1 (y1,...,yk ),...,hr (y1,...,yk )

Thus, Lemma 2.5 adds the (sound) differential axioms for each fixed function symbol hj
and therefore, all Lie derivatives are representable in the extended term language.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
Differential Equation Invariance Axiomatization 6:35
The final condition (R) is more involved and relies crucially on closure properties of Noetherian
functions. A syntactic subtlety arises for extended terms with nested function applications such as
exp(exp(x)). Its semantics is the iterated real exponential function generated by the two-element
Noetherian chain exp(x), exp(exp(x)). Thus, even though the fixed function symbols h1,...,hr
form a Noetherian chain, the extended term grammar could produce extended terms that do not
correspond to Noetherian functions generated by that chain. The following lemma resolves this
issue by computing another (syntactic) Noetherian chain that generates it instead:
Lemma 7.6. The semantics of every extended term e over Noetherian functions is a Noetherian
function and e can be effectively associated with a (syntactic) Noetherian chain that generates it.
Proof. By structural induction on extended dL term e. The cases for variables and constants
are obvious, while the cases for addition and multiplication follow inductively from closure under
ring operations (Proposition 7.2) and the fact that finite unions of Noetherian chains are Noetherian
chains. The only difficult case is whene is a function compositionh(e1,..., ek ), where e1,..., ek are
extended terms. Inductively, each e1,..., ek semantically is a Noetherian function. Moreover, h is
(semantically) a Noetherian function by the assumption that the interpretation of all fixed function
symbols is an element of some Noetherian chain. Thus, Proposition 7.3 implies that the semantics
of their composition is also a Noetherian function. Let υ1,...,υs be the union of Noetherian chains
obtained inductively for e1,..., ek . The (constructive) proof of Proposition 7.3 shows that the Noetherian chain in Equation (7) given byυ1,...,υs , f1,..., fr generates h(e1,..., ek ), where υ1,...,υs
are syntactically represented by extended terms using the induction hypothesis on e1,..., ek and
each fi
def
= hi (e1,..., ek ) is an extended term by construction.
Lemma 7.6 makes it possible to unambiguously refer to “the” generating Noetherian chain and
polynomial for any extended term e by giving an effective procedure for finding their syntactic
representations in the extended term language. Together with Proposition 7.2, this suffices to prove
that the extended term language has the computable differential radicals condition (R).
Theorem 7.7. Term languages with Noetherian functions satisfy the extended term conditions.
Proof. Conditions (S) and (P) have already been shown above. It remains to show condition (R),
i.e., any ODE x  = f (x) and extended term e has a computable (and provable) differential radical
identity from Equation (3). By Lemma 7.6, the terms f (x), e are (semantically) Noetherian and so,
by taking the union of Noetherian chains, are defined by the same generating Noetherian chain
υ1,...,υs . The ring R generated by this chain is Noetherian by Proposition 7.2 and is closed under
partial derivatives. Recall that the Lie derivative of e along x  = f (x) is given by
Lf (x ) (e) def
=
n
i=1
∂e
∂xi
· fi (x)
Every sub-term on the RHS of its Lie derivative is contained in the ring R, because it already
contains the RHS of the ODEs, f (x), and is closed under the partial derivatives of e. Inductively,
all higher Lie derivatives .
e (i) for i = 0, 1,... are contained in R and are therefore generated by the
chain υ1,...,υs with .
e (i) = pi (x,υ1,...,υs ) for polynomials pi ∈ R[x,y] and y = (y1,...,ys ).
Following the proof of Proposition 7.2, consider this ascending chain of polynomial ideals:
(p0) ⊆ (p0,p1) ⊆ (p0,p1,p2) ⊆ ···
This chain stabilizes with the provable polynomial identitypN = N −1 i=0 qipi for some polynomial
cofactors qi ∈ R[x,y] and N ≥ 1. The rank N and the polynomial cofactors qi are computable by
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
6:36 A. Platzer and Y. K. Tan
successive ideal membership checks [15, 16, 22]. Mapping this back into elements of R gives the
required provable identity for the Lie derivatives of e by choosing дi
def
= qi (x,υ1,...,υs ):
.
e (N ) =
N
−1
i=0
дi
.
e (i)
An immediate corollary is that term language extensions with Noetherian functions inherit all
earlier soundness and completeness results, e.g., from Sections 4.2 and 6.2.
Corollary 7.8 (Noetherian Invariant Completeness). The dL proof calculus is complete for
(semi)analytic invariants of ODEs for term languages extended with Noetherian functions.
Proof. This follows from the extended term conditions for Noetherian functions (Theorem 7.7)
and the completeness Theorems 4.5 and 6.9.
7.3 Extended Term Language Example
This section illustrates constructions from Sections 7.1 and 7.2 using the extended term language
from Equation (1). The first example shows the computations from Lemma 7.6 and Theorem 7.7:
Example 7.9 (Syntactic Manipulation of Noetherian Functions). Consider the ODE x  =
exp(sin(x)) and the term e = x + x2. The Noetherian chain for e is empty, because it is already a
polynomial while the Noetherian chain associated with exp(sin(x)) isυ1 = sin(x),υ2 = cos(x),υ3 =
exp(sin(x)). The higher Lie derivatives of e are all extended terms generated by the chain υ1,υ2,υ3:
.
e (1) = υ3 + 2υ3x .
e (2) = υ2
3υ2 + 2(υ2
3υ2x +υ2
3 ) = (2υ3 +υ2υ3 + 2υ2υ3x)((1 + 2x)
.
e (1) − 4υ3e)
The (polynomial) identity for .
e (2) in terms of .
e (1)
, e and their cofactors is obtained computationally
by ideal membership checks for the polynomial ring R[x,y1,y2,y3] (the indeterminate yi corresponds to υi for i = 1, 2, 3), following Proposition 7.2.
The next example illustrates how the extended term language allows effective proofs of more
invariants than possible with polynomial term languages.
Example 7.10 (Expressivity of Noetherian Invariants). The polynomial invariant 1 − u2 − v2 = 0
was proved for the ODE αe from Equation (2) in Example 3.3. With respect to Figure 1, this means
that a trajectory starting at the point (1, 0) stays on the circle. However, this invariant yields no
information about how fast the trajectory loops around the circle or whether it revolves clockwise
or anti-clockwise. In the extended term language, the most precise invariant can be proved, namely,
the solution to the ODEs from this initial point. The solution is a trigonometric function of time
(given below), and so cannot be expressed as a polynomial (or semialgebraic) invariant [4]. The
precise solution also shows that the motion is anti-clockwise, as suggested by Figure 1.
The following derivation uses a DC to add the known polynomial invariant 1−u2−v2 = 0, which
proves by dbx as in Example 3.3. The right premise after the differential cut assumes 1−u2−v2 = 0
in the ODE’s evolution domain constraint. It is abbreviated 1 and continued below:
∗ dbx, R
u = 1,v = 0,t = 0  [αe ,t = 1]1 − u2 −v2 = 0 1
DC u = 1,v = 0,t = 0  [αe ,t = 1](u−cos(t) = 0 ∧v−sin(t) = 0)
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
Differential Equation Invariance Axiomatization 6:37
From 1 , first calculate the Lie derivatives, abbreviating c = u − cos(t),s = v − sin(t):
Lαe,t=1 (c) = Lαe,t=1 (u − cos(t)) = −v + u
4
(1 − u2 −v2) + sin(t) = −s + u
4
(1 − u2 −v2)
Lαe,t=1 (s) = Lαe,t=1 (v − sin(t)) = u + v
4
(1 − u2 −v2) − cos(t) = c + u
4
(1 − u2 −v2)
Under the domain constraint assumption 1−u2−v2 = 0, the additional u
4 (1−u2−v2) term in both
Lie derivatives simplifies to 0. The derivation starts with a cut of the postcondition c = 0 ∧ s = 0.
This arithmetic premise, abbreviated 2 , is discussed afterwards. Continuing on the right premise,
the vdbx step closes successfully using real arithmetic manipulations only:
2
∗
R 1 − u2 −v2 = 0 
 .
c
.
s

=
 0 −1
1 0   c
s

vdbx c = 0 ∧ s = 0  [αe ,t = 1&1 − u2 −v2 = 0](c = 0 ∧ s = 0) cutu = 1,v = 0,t = 0  [αe ,t = 1&1 − u2 −v2 = 0](c = 0 ∧ s = 0)
The premise 2 is valid, but involves properties of trigonometric functions (cos(0) = 1,sin(0) =
0) so it cannot be proved using R. Instead, extended arithmetic Rexp,sin,cos is needed:
∗ Rexp,sin,cosu = 1,v = 0,t = 0  u − cos(t) = 0 ∧v − sin(t) = 0
The extended arithmetic theory is undecidable in general [36] and so, unlike R, rule Rexp,sin,cos
cannot be implemented via an underlying decision procedure. Yet, simple arithmetic questions
such as 2 , which just involve the evaluation of trigonometric functions can be easily checked.
The above derivation takes advantage of a known Darboux equality for 1 − u2 − v2 to simplify
the proof using vdbx. The proof could have instead directly made use of Theorem 4.5 by encoding
c = 0 ∧ s = 0 as c2 + s2 = 0 and then calculating the rank of c2 + s2 (which involve trigonometric
functions) according to Theorem 7.7. This also works, but c2 + s2 has rank 3, and the resulting
cofactors are too large to even fit on this page.
The final example highlights an important insight from Proposition 7.4. Even though this article
only considers extended term languages with terms that are defined everywhere, it is possible to
use logical formulas to implicitly characterize more terms, making use of closure properties of the
Noetherian functions [3]. The following example illustrates implicit characterization of quotients
that are defined everywhere in the domain of interest:
Example 7.11 (Implicit Characterization of Quotients). The trigonometric tangent function tan(x)
is Noetherian and defined on the interval (−π
2 , π
2 ). Consider the following “formula”, where x is
restricted in the domain constraint to never reach a point where the RHS tan(x) is undefined:
x = 1
2 → [x  = tan(x) & −1 ≤ x ≤ 1]x ≥
1
2
This “formula” is not formally in the syntax of dL formulas, because tan is not defined
everywhere. However, Proposition 7.4 can be used to ask an equivalent question in dL. Recall
from calculus:
tan(x) = sin(x)
cos(x)
∂ 1
cos(x )
∂x = sin(x)
(cos(x))2
Thus, sin(x), cos(x), 1
cos x forms a three-element Noetherian chain that generates tan(x). For
brevity, by partially following the IVP construction of Proposition 7.4, the “formula” is rephrased
as an actual dL formula with y representing 1
cos x along the ODE. After replacing x  = sin(x)y,
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
6:38 A. Platzer and Y. K. Tan
the required differential equation for y is calculated symbolically with y = sin(x)y2 (sin(x)y) =
sin2 (x)y3:
x = 1
2
∧ cos(x)y − 1 = 0 → [x  = sin(x)y,y = sin2 (x)y3 & −1 ≤ x ≤ 1]x ≥
1
2
For non-zero denominator, the initial value 1
cos(x ) of y is logically characterized by the formula
cos(x)y−1 = 0. The following Lie derivative calculation shows that cos(x)y−1 satisfies a Darboux
equality and so cos(x)y − 1 = 0 can be proven invariant along the ODE (abbreviated as α) by dbx:
Lα (cos(x)y − 1) = − sin(x)(sin(x)y)y + cos(x)(sin2 (x)y3
) = sin2 (x)y2 (cos(x)y − 1).
The rephrased formula proves after a DC with this Darboux invariant for y using the ODE
invariant x ≥ 1
2 and rule sAI (or its generalization with domain constraints from Appendix B).
Briefly, the invariance of x ≥ 1
2 provably reduces to the following arithmetic premise, which is
valid and falls within a decidable fragment of arithmetic with trigonometric functions [24]:
−1 ≤ x ≤ 1, cos(x)y − 1 = 0, x = 1
2
 sin(x)y > 0
8 RELATED WORK
This related work discussion focuses on deductive verification of hybrid systems. An overview
of approaches to hybrid systems verification is available elsewhere [8]. Readers interested in
ODEs [44], real analysis [20, 44], algebra [6], and real algebraic geometry [4] are referred to
the cited textbooks. The orthogonal task of efficiently generating invariants is investigated elsewhere [15, 22, 37].
Proof Rules for ODE Invariants. Numerous useful but incomplete proof rules for ODE invariants [31, 35, 37, 39] are surveyed elsewhere [16]. The soundness and completeness theorems
for dRI and sAI were previously proved semantically [15, 22]. These earlier results are limited to
(semi)algebraic invariants as they depend on specific semantic properties limited to polynomials.
The extended term conditions (Section 2.4) and Noetherian functions (Section 7) generalize these
results, showing that all (semi)analytic invariance questions reduce completely to arithmetic.
In their original presentation [15, 22], dRI and sAI are algorithmic procedures for checking invariance of semialgebraic sets, requiring, e.g., checking ideal membership for all polynomials in
the semialgebraic decomposition. This makes them difficult to implement soundly within a small,
trusted axiomatic core [10]. This article shows that, by relying on the logic dL, these rules can be
derived from a small set of axiomatic principles. Although these derivations also leverage ideal
computations, they are only used in derived rules. With the aid of a theorem prover, derived rules
can be implemented as tactics that crucially remain outside its soundness-critical axiomatic core.
Deductive Power and Proof Theory. The derivations shown in this article are fully general, which
is necessary for completeness of the resulting derived rules. The number of conjuncts in the
progress and differential radical formula for an extended term e is equal to the rank of e. Known
upper bounds for the rank, even in the case of polynomials in n variables, are doubly exponential
in n2 lnn [25]. Many simpler classes of invariants can be proved using simpler derivations, as exemplified by Examples 3.3 and 7.10. This is where a study of the deductive power of sound, but
incomplete, proof rules [16] is essential. For ODE invariants of a simpler class, it suffices to use a
proof rule that is complete for just that class. This intuition is echoed in an earlier study [31] of
the relative deductive power of differential invariants (DI), differential cuts (DC), and differential
ghosts (DG). The first completeness result (Theorem 4.5) shows that dL with DG is complete for
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
Differential Equation Invariance Axiomatization 6:39
algebraic and analytic invariants. Other proof-theoretical studies of dL [29] reveal surprising correspondences between its hybrid, continuous, and discrete aspects in the sense that each aspect can
be axiomatized completely and effectively relative to any other aspect. Corollary 4.6 constructively
exploits their combination.
Noetherian Functions. This article only touched on basic properties of Noetherian functions. The
model-theoretic study of Noetherian functions and the related Pfaffian functions is fascinating in
its own right [3, 11, 12]. Pfaffian functions are generated by chains satisfying (6) except with triangular dependencies in their partial derivatives [12], and notably, the expansion of the real field with
Pfaffian functions is o-minimal [38, 43, 45]. Such o-minimal expansions have been studied in reachability analysis for o-minimal hybrid systems [19, 21], because they admit the construction of finite bisimulations for reachability analysis algorithms. In contrast, expansions with (more general)
Noetherian functions, e.g., (unrestricted) trigonometric sine and cosine, are not o-minimal, because
they can be used to characterize the natural numbers. This is a barrier to the construction of finite
bisimulations [21] but not for deductive approaches, as long as the relevant arithmetic is provable.
Undecidability of arithmetic is a delicate issue [36], but this article’s completeness results show
that ODE invariance verification completely reduces to arithmetic! Many (necessarily incomplete)
approaches and tools for handling special functions are available, e.g., resolution with upper and
lower bounds as implemented in MetiTarski [1], δ-decidability as implemented in dReal [13, 14], or
heuristic inference-based approaches as implemented in Polya [2]. Specialized decision procedures
may also be applicable for restricted fragments of arithmetic [24], as in Examples 7.9 and 7.11. Even
in settings where all of these automated tools fail to verify an arithmetic question, the system
designer can provide further mathematical intuition with an interactive proof in KeYmaera X [10].
The findings of this article identify Noetherian functions as a more general unifying theme behind earlier results in continuous/hybrid systems verification. Besides the completeness results for
invariants, Proposition 7.4 also generalizes earlier results [17, 23, 28] to the Noetherian setting. This
idea is called differential axiomatization [28], because it axiomatizes ODEs involving special functions that have undecidable arithmetic using polynomial ODEs. Similarly, [23, Proposition 1] gives
an algorithm for replacing a fixed set of functions appearing in IVPs with polynomials ones. The
result from Reference [17, Theorem 4] only applies in the case of univariate Noetherian functions.
9 CONCLUSION
This article demonstrates the impressive deductive power of differential ghosts: They prove all
Darboux invariants and, as a consequence, all analytic invariants for extended term languages
with the extended term conditions. Even scalar differential ghosts suffice for this result, but the
question of whether their deductive power extends to even larger classes of invariants is left open.
The article then introduces extensions to the dL axiomatization and shows how they can be
used to extend completeness to semianalytic invariance. The case of (semi)algebraic invariants is
even decidable, but the results prove completeness for much larger classes of (semi)analytic invariants. Table 1 gives an instructive overview of the key mathematical properties of solutions
and terms that the soundness of each differential equation axiom rests on. With these axioms,
mathematical reasoning for differential equations can be carried out syntactically and axiomatically within the dL proof calculus. This concise and foundational axiomatization of mathematical properties is precisely what enables generalizations of the authors’ earlier results [33] to the
(semi)analytic setting with Noetherian functions. A subtle question is left open: the extended term
conditions in Section 2.4 do not require that the fixed function symbols h be real analytic even if
Noetherian functions are always real analytic. This suggests that there may still be a gap between the extended term conditions and Noetherian functions. Are there C∞ smooth (or even real
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
6:40 A. Platzer and Y. K. Tan
Table 1. Properties of ODE Solutions Underlying
the Differential Equation Axioms of dL
ODE Axiom Mathematical Property
DI Mean value theorem
DC Prefix-closure of solutions
DG Picard-Lindelöf theorem
Cont Existence of solutions
Uniq Uniqueness of solutions
Dadj Group action on solutions
RI Completeness of field R
analytic) functions that meet the extended term conditions but are not Noetherian functions? In
other words, are Noetherian functions exactly the class of functions for which completeness results are possible? Certainly, this article’s completeness results continue to hold for any functions
meeting those conditions, which would make both positive and negative results interesting.
APPENDIX
A DIFFERENTIAL DYNAMIC LOGIC AXIOMATIZATION
A.1 Extended Axiomatization Soundness
This section proves the soundness of the axiomatic extension from Section 5. For the solution
φ : [0,T ] → S, its truncation to the interval [0,t] for some 0 ≤ t ≤ T is denoted φ|t : [0,t] → S,
with φ|t (ζ ) = φ(ζ ) for ζ ∈ [0,t]. The shorthand notation φ([a,b]) ∈ [[P]] means φ(ζ ) ∈ [[P]] for
all a ≤ ζ ≤ b, where the interval [a,b] is required to be a closed subinterval of the interval [0,T ].
Analogously, φ((a,b)) is used when the interval is open, and similarly for the half-open cases.
As explained in Section 5, the soundness of the extended axioms requires that the ODE system
x  = f (x) always locally evolves x. An easy syntactic check ensuring this condition is if the system
already contains an equation x 
1 = 1 that tracks the passage of time, which can be added using axiom DG if necessary before using the axioms. However, the soundness proofs are more general and
only use the assumption that the ODE system locally evolves x, whether by x 
1 = 1 or otherwise.
The soundness proofs make use of dL’s coincidence lemmas [32, Lemmas 10 and 11]:
Lemma A.1 (Coincidence for Terms and Formulas [32]). The following coincidence properties
hold for dL, where free variables FV(e), FV(ϕ) are defined as expected [32, Sections 2.3 and 2.4].
• If the states ω, ν agree on the free variables of term e (FV(e)), then ω[[e]] = ν[[e]].
• If the states ω, ν agree on the free variables of formula ϕ (FV(ϕ)), then ω ∈ [[ϕ]] iff ν ∈ [[ϕ]].
A.1.1 Existence, Uniqueness, and Continuity. First, the axioms from Lemma 5.1 internalizing
basic existence and uniqueness properties of solutions of differential equations are proved sound.
Proof of Lemma 5.1. Let ω be an arbitrary initial state. When interpreted as a function of the
variables x, the RHS f (x) of the ODE system x  = f (x) is continuously differentiable. Therefore,
by the Picard-Lindelöf theorem [44, Section 10.VI], from ω, there is an interval [0, τ ), τ > 0 on
which there is a unique, continuous solution φ : [0, τ ) → S with φ(0) = ω on {x 
}
. The solution
may be uniquely extended in time (to the right), up to its maximal open interval of existence [44,
Section 10.IX].
Uniq The “→” direction follows directly from monotonicity of domain constraints because of
the propositional tautology Q1 ∧ Q2 → Q1 (and similarly for Q2). For the “←” direction,
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020. 
Differential Equation Invariance Axiomatization 6:41
suppose that initial state ω satisfies both conjuncts with ω ∈ [[x  = f (x) &Q1P]] and
ω ∈ [[x  = f (x) &Q2P]]. Expanding the definition of the diamond modality, there exist
two solutions φ1 : [0,T1] → S, φ2 : [0,T2] → S from ω such that φ1 |= x  = f (x) ∧ Q1
and φ2 |= x  = f (x) ∧ Q2, with both φ1 (T1) ∈ [[P]] and φ2 (T2) ∈ [[P]]. Suppose T1 ≤ T2.
Since φ2 ([0,T2]) ∈ [[Q2]] and, by uniqueness, φ1 is a truncation of φ2 to a smaller existence
interval, φ1 |= x  = f (x) ∧ (Q1 ∧ Q2). At time T1, the solution satisfies φ1 (T1) ∈ [[P]], so
ω ∈ [[x  = f (x) &Q1 ∧ Q2P]], as required. The case for T2 < T1 is similar, except with
φ2 |= x  = f (x) ∧ (Q1 ∧ Q2) and satisfying φ2 (T2) ∈ [[P]] at time T2 instead.
Cont Assume that ω satisfies the outermost implication, i.e., ω ∈ [[x = y]]. The (inner) “→” direction follows by definition, because for there to be a solution staying in e > 0 at all, the initial
state ω must already satisfy e > 0 (evolution domains are differential-free). For the (inner)
“←” direction, suppose further that ω ∈ [[e > 0]]. Since x   e as e is differential-free (Section 2.1), coincidence (LemmaA.1) implies φ(0) ∈ [[e > 0]]. As a composition of continuous
evaluation [32, Definition 5] with the continuous solution φ, φ(t)[[e]] is a continuous function of time t. Thus, φ(0) ∈ [[e > 0]] implies φ([0,T ]) ∈ [[e > 0]] for some 0 < T ≤ τ and the
truncated solution φ|T satisfies φ|T |= x  = f (x) ∧e > 0. Since y is constant for the ODE but
x  = f (x) was assumed to locally evolve (for example with x 
1 = 1), there is a time 0 < ϵ ≤ T
at which φ(ϵ ) ∈ [[x  y]]. The truncation φ|ϵ witnesses ω ∈ [[x  = f (x) &e > 0x  y]].
Dadj The “←” direction follows immediately from the “→” direction by swapping the names
x,y, because −(−f (x)) = f (x). Therefore, it suffices to prove the “→” direction. Suppose
ω ∈ [[x  = f (x) &Q(x) x = y]]. Unfolding the semantics, there is a solution φ : [0,T ] →
S, of the system x  = f (x), with φ(0) = ω on {x 
}
, with φ([0,T ]) ∈ [[Q(x)]] and
φ(T ) ∈ [[x = y]]. Since the variables y do not appear in the differential equations x  = f (x),
their values are constant along the solution φ. Consider the time- and variable-reversal
ψ : [0,T ] → S, where
ψ (τ )(z) def
=
⎧⎪⎪⎪⎪
⎨
⎪⎪⎪⎪
⎩
φ(T − τ )(xi ) z = yi
−φ(T − τ )(x 
i ) z = y
i
ω(z) otherwise
By construction, ψ (0) agrees with ω on {y
}
, because φ(T ) ∈ [[x = y]]. The signs of the differential variables y
i are negated along ψ. By uniqueness, the solutions of x  = −f (x) are
the time-reversed solutions of x  = f (x). As constructed, ψ is the time-reversed solution for
x  = f (x) except the x were replaced by y instead. Moreover, since φ([0,T ]) ∈ [[Q(x)]],
by construction and coincidence from LemmaA.1, ψ ([0,T ]) ∈ [[Q(y)]]. Therefore, ψ |=
y = −f (y) ∧ Q(y). Finally, observe that ψ (T )(y) = φ(0)(x), but ψ holds the values
of x constant, thus ψ (T )(x) = ω(x) = φ(0)(x) and so ψ (T ) ∈ [[y = x]] and ψ witnesses
ω ∈ [[y = −f (y) &Q(y)y = x]].
A.1.2 Real Induction. The following real induction axiom with domain constraints is proved
sound. Axiom RI from Lemma 5.5 follows as an instance with no domain constraint, i.e., Q ≡ true:
RI& [x  = f (x) &Q]P ↔ ∀y [x  = f (x) &Q ∧ (P ∨ x = y)]

x = y →
P

a
∧

x  = f (x) &Q ∨ x = yx  y → x  = f (x) & P ∨ x = yx  y


b

Similar to axiom RI, the axiom RI& is based on the real induction principle [7] but also accounts
for an arbitrary domain constraint Q. Its RHS conjuncts labeled a and b correspond to 1 and 2
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.        
6:42 A. Platzer and Y. K. Tan
in Definition 5.3, respectively. The quantification ∀y [... &Q](x = y → ... ) now only considers
final states (x = y) reachable by trajectories that always stay withinQ, and within P except possibly
at the endpoint x = y. The conjunct a expresses that P is still true at such an endpoint. The
conjunct b expresses that P continues to remain true locally but only when Q itself remains true
locally. This added assumption for Q corresponds to the “If ζ < b, then ...” assumption in 2
of Definition 5.3. The conjunct b can be rewritten succinctly with the local progress  modality
as x  = f (x) &Q → x  = f (x) & P. With completeness for local progress (Theorem 6.6),
this gives a first hint at how RI& will be used to obtain a complete proof rule for semianalytic
invariants with domain constraints in Appendix B.
Lemma A.2 (Real Induction with Domain Constraints). The real induction axiom RI& is
sound, where y is fresh in [x  = f (x) &Q]P.
Proof (Implies Lemma 5.5). The conjuncts on the RHS of RI& are labeled as a and b , respectively, as shown above. Consider an initial state ω, both directions of the axiom are proved separately.
“→” Assume the LHS of RI& is true initially with  ω ∈ [[[x  = f (x) &Q]P]]. Unfolding the
quantification and box modality on the RHS, let ωy be identical to ω except where the
values for y are replaced with any arbitrary values d ∈ Rn. Consider any solution φy :
[0,T ] → S, where φy |= x  = f (x) ∧ (Q ∧ (P ∨ x = y)), φy (0) = ωy on {x 
}
, and
φy (T ) ∈ [[x = y]].
The following similar solution φ : [0,T ] → S keeps y constant at their initial values in
ω:
φ(t)(z) def
= ⎧⎪
⎨
⎪
⎩
φy (t)(z) z ∈ {y}

ω(z) z ∈ {y}
By construction, φ(0) is identical to ω on {x 
}
 and φ is identical to φy on {y}
. Since y
is fresh in x  = f (x) &Q, by coincidence (LemmaA.1) the latter implies that φ |= x  =
f (x) ∧Q. By assumption , φ(T ) ∈ [[P]], which implies that φy (T ) ∈ [[P]] by coincidence
(LemmaA.1), since y is fresh in P. This proves conjunct a . Unfolding the implication
and diamond modality of conjunct b , assume there is another solution ψy : [0, τ ] → S
from φy (T ) with ψy |= x  = f (x) ∧ (Q ∨ x = y) and ψy (τ ) ∈ [[x  y]]. Note that
ψy (0) = φy (T ) exactly rather than just on {x 
}
, because both states have the same
values for the differential variables. To show the RHS of the implication in b , i.e., that
φy (T ) ∈ [[x  = f (x) & P ∨ x = yx  y]], it suffices to show:ψy |= x  = f (x)∧P, because
P propositionally implies P ∨ x = y. In particular, since ψy already satisfies the requisite
differential equations and ψy (τ ) ∈ [[x  y]], it remains to show that ψy stays in the evolution domain P for its entire duration, i.e., ψy ([0, τ ]) ∈ [[P]]. Let 0 ≤ ζ ≤ τ and consider
the concatenated solution Φ : [0,T + ζ ] → S defined by
Φ(t)(z) def
=
⎧⎪⎪⎪⎪
⎨
⎪⎪⎪⎪
⎩
φy (t)(z) t ≤ T, z ∈ {y}

ψy (t −T )(z) t > T, z ∈ {y}

ω(z) z ∈ {y}
As with φ, the solution Φ is constructed to keep y constant at their initial values in ω.
Since ψy must uniquely extend φy [44, Section 10.IX], the concatenated solution Φ is a
solution starting from ω, solving the system x  = f (x). It stays inQ for its entire duration
by coincidence (LemmaA.1), because φy (T ) ∈ [[Q]] and all states satisfying x = y agree
with φy (T ) on the free variables of formula Q. In other words, Φ |= x  = f (x) ∧ Q.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.            
Differential Equation Invariance Axiomatization 6:43
By , Φ(T + ζ ) ∈ [[P]], which implies ψ (ζ ) ∈ [[P]] by coincidence (LemmaA.1) and so
ψy ([0, ζ ]) ∈ [[P]], as required.
“←” Assume the RHS of RI& is true in initial state ω and show the LHS. Consider an arbitrary solution φ : [0,T ] → S starting from ω such that φ |= x  = f (x) ∧ Q. To show
φ([0,T ]) ∈ [[P]], using the real induction principle (Proposition 5.4), it suffices to show
that the set of times S def
= {ζ : φ(ζ ) ∈ [[P]]} is an inductive subset of [0,T ], i.e., it satisfies
properties 1 and 2 in Definition 5.3. So, assume that [0, ζ ) ⊆ S for some time 0 ≤ ζ ≤ T .
The proof instantiates quantified variables y on the RHS of RI& to match the values of
x at φ(ζ ). Since y is constant for the ODE, this allows properties of φ(ζ ) to be deduced
using the RHS (namely, a , b ) by mediating between φ and its augmentation φy below.
More precisely, consider the state ωy identical to ω, except where the values for variables
y are replaced with the corresponding values of x in φ(ζ ). Correspondingly, consider the
solution φy : [0, ζ ] → S identical to φ but which keeps y constant at those initial values
in ωy rather than in ω:
ωy (z) def
= ⎧⎪
⎨
⎪
⎩
ω(z) z ∈ {y}

φ(ζ )(xi ) z = yi
φy (t)(z) def
= ⎧⎪
⎨
⎪
⎩
φ(t)(z) z ∈ {y}

ωy (z) z ∈ {y}
By construction and coincidence (LemmaA.1), φy is a solution from initial state ωy ,
solving φy |= x  = f (x) ∧ Q and φy (ζ ) ∈ [[x = y]]. By assumption and coincidence
(LemmaA.1), φy ([0, ζ )) ∈ [[P]]. Therefore, φy ([0, ζ ]) ∈ [[Q ∧ (P ∨ x = y)]]. Unfolding the
quantification, box modality and implication on the RHS yields φy (ζ ) ∈ [[ ∧ a b ]].
1 By a , φy (ζ ) ∈ [[P]] so by coincidence (LemmaA.1), φ(ζ ) ∈ [[P]] as required for 1 .
2 Further assume that ζ < T and show φ((ζ , ζ + ϵ]) ∈ [[P]] for some ϵ > 0. Observe that
since ζ < T , there is a solution that extends from state φ(ζ ), i.e., ψ : [0,T −ζ ] → S, where
ψ (τ ) def
= φ(τ + ζ ) and with ψ |= x  = f (x) ∧ Q. Construct the corresponding solution
ψy : [0,T − ζ ] → S that extends from state φy (ζ ) and still keeps y constant at ωy :
ψy (t)(z) def
= ⎧⎪
⎨
⎪
⎩
ψ (t)(z) z ∈ {y}

φy (ζ )(z) z ∈ {y}
By coincidence (LemmaA.1),ψy |= x  = f (x) ∧Q, so by weakening the domain constraint,
ψy |= x  = f (x) ∧ (Q ∨x = y). Since φy (ζ ) ∈ [[x = y]] by construction and the differential
equation is assumed to always locally evolve (for example with x 
1 = 1), there must be some
duration 0 < δ < T −ζ (recallT −ζ > 0) after which the value of x has changed from its initial value held constant in y, i.e., ψy (δ ) ∈ [[x  y]]. The truncation ψy |δ witnesses the LHS
of the implication in b with: φy (ζ ) ∈ [[x  = f (x) &Q ∨ x = yx  y]]. Using this with the
implication in b yields φy (ζ ) ∈ [[x  = f (x) & P ∨ x = yx  y]]. Unfolding the semantics,
this gives a solution that, by uniqueness, is a truncation ψy |ϵ of ψy , for some ϵ > 0, that
satisfies ψy |ϵ ([0, ϵ]) ∈ [[P ∨ x = y]]. From a and coincidence (LemmaA.1), all states satisfying x = y agree with φ(ζ ) on the free variables of formula P thus ψy |ϵ ([0, ϵ]) ∈ [[P]].
By construction, ψy |ϵ (τ ) coincides with φ(τ + ζ ) on x for all 0 ≤ τ ≤ ϵ, which implies
φ((ζ , ζ + ϵ]) ∈ [[P]] by LemmaA.1.
Conjunct b of RI& can also be written as x  = f (x) &Qx  y → x  = f (x) & Px  y,
because Q and P can be assumed true in the context where the conjunct appears. This flexibility
can be seen from its soundness proof above and will be made explicit syntactically in CorollaryA.5.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.          
6:44 A. Platzer and Y. K. Tan
A.2 Derived Rules and Axioms
This section derives additional dL axioms and proof rules that are used in subsequent derivations
in the appendices. Most of these are already derived elsewhere [29, 32] so their proofs are omitted.
A.2.1 Basic Rules and Axioms. This section presents basic dL axioms and proof rules and
derived versions that do not rely on the axiomatic extension of Section 5 but are used in the
appendices.
Theorem A.3 (Base Axioms and Proof Rules [29, 32]). The following are sound axioms and
proof rules of dL:
· αϕ ↔ ¬[α]¬ϕ
K [α](ϕ → ψ ) → ([α]ϕ → [α]ψ )
G
 ϕ
Γ  [α]ϕ
V ϕ → [α]ϕ (no free variable of ϕ is bound by α)
B x  = f (x) &Q(x)∃yP (x,y) ↔ ∃y x  = f (x) &Q(x)P (x,y) (y  x)
DW [x  = f (x) &Q]Q
DX [x  = f (x) &Q]P ↔ (Q → P ∧ [x  = f (x) &Q]P) (x   P,Q)
DMP [x  = f (x) &Q](Q → R) → ([x  = f (x) & R]P → [x  = f (x) &Q]P)
The first three axioms ·, K, V and proof rule G are standard reasoning principles for dynamic
logics [29]. They apply generally for any hybrid program α. Axiom · expresses the duality between the diamond and box modalities, allowing conversion between the two with a double negation. Kripke axiom K is the modal modus ponens for postconditions of the box modality. Vacuous
axiom V says if no free variable of ϕ is changed by hybrid program α, then the truth value of ϕ is
also unchanged. The Gödel generalization rule G reduces proofs of [α]ϕ to validity of ϕ but must
discard all assumptions in antecedent Γ for soundness.
The ODE Barcan axiom B specializes the Barcan axiom [29] to ODEs in the diamond modality,
allowing an existential quantifier ∃y to be commuted with the diamond modality. The quantified
variables y are required to be fresh in the ODE x  = f (x) (i.e., y  x). The differential weakening
axiom DW expresses that domain constraints are always obeyed along ODE solutions. It underlies
the derived proof rules dW, M[
], which ease manipulation of domain constraints. The differential skip axiom DX expresses a reflexivity property of differential equation solutions. If domain
constraint Q is false in an initial state ω, then the formula [x  = f (x) &Q]P is trivially true in ω,
because no solution of the ODE starting from ω stays in the domain constraint. Conversely, if Q
is true in ω, then the postcondition P must already be true in ω because of the trivial solution of
duration zero. The condition x   P,Q of axiom DX is met as P,Q are differential-free (Section 2.1).
Axiom DMP is the modus ponens principle for domain constraints of ODEs, which underlies differential cuts DC [32].
Proof of TheoremA.3. The soundness of all axioms and proof rules in Theorem A.3 are proved
elsewhere [32], except DX, DMP, which are proved here, since they are written differently elsewhere.
DX Let ω be an initial state. Classically, either ω ∈ [[Q]] or not. If ω ∈ [[Q]], then, propositionally, it suffices to assume ω ∈ [[[x  = f (x) &Q]P]] and show ω ∈ [[P]]. Since ω ∈ [[Q]], there
is a trivial solution φ : [0, 0] → S where φ |= x  = f (x) ∧ Q and φ(0) = ω on
{x 
}
. By assumption, φ(0) ∈ [[P]]. Since x   P, coincidence (LemmaA.1) implies ω ∈ [[P]].
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.      
Differential Equation Invariance Axiomatization 6:45
Conversely, if ω ∈ [[¬Q]], then, propositionally, it suffices to show ω ∈ [[[x  = f (x) &Q]P]].
The box modality is vacuous, because, by definition, no solution φ : [0,T ] → S can exist
for any T ≥ 0 with φ |= x  = f (x) ∧ Q. Any such solution would require φ(0) ∈ [[Q]] by
definition. However, because x   Q, coincidence (LemmaA.1) with state ω gives ω ∈ [[Q]],
contradiction.
DMP Let ω be an initial state satisfying both formulas on the left of the implications in DMP, i.e.,
1 ω ∈ [[[x  = f (x) &Q](Q → R)]] and 2 ω ∈ [[[x  = f (x) & R]P]]. Consider any solution
φ : [0,T ] → S where φ(0) = ω on {x 
}
, and φ |= x  = f (x) ∧ Q. By definition, φ(ζ ) ∈ [[Q]]
for all ζ ∈ [0,T ], and so by 1 , φ(ζ ) ∈ [[Q → R]] for all ζ ∈ [0,T ]. Therefore, φ(ζ ) ∈ [[R]] for
all ζ ∈ [0,T ], and thus φ |= x  = f (x) ∧ R. By 2 , φ(T ) ∈ [[P]] as required.
The axioms and proof rules of Theorem A.3 combine to derive further useful axioms and proof
rules. Diamond Kripke axiom K· derives from K by dualizing its inner implication with · [29]:
K· [α](ϕ → ψ ) → (αϕ → αψ )
Axiom · also yields dual readings for the ODE axioms and proof rules. For example, the DI
axiom internalizes the mean value theorem [44, Appendix B.I].
Corollary A.4 (Mean Value Theorem). The mean value theorem axiom MVT derives from DI:
MVT e ≥ 0 ∧ x  = f (x) &Qe < 0 → x  = f (x) &Q(e)
 < 0
Proof. The derivation takes contrapositives (dualizing with ·) before DI finishes it:
∗ DI e ≥ 0,[x  = f (x) &Q](e) ≥ 0  [x  = f (x) &Q]e ≥ 0
·, ¬L, ¬R e ≥ 0,x  = f (x) &Qe < 0  x  = f (x) &Q(e) < 0
Axiom V is particularly useful when working with constant assumptions. If formula R(y) is true
initially and y has no differential equation in x  = f (x), then it continues to be true along solutions
to the differential equations from the initial state, because y remains constant along these solutions
and the truth value of R(y) depends only on the value of its free variables y [32]. Axiom V proves
this for box modalities in succedents and, by duality, for diamond modalities in antecedents, e.g.:
∗ VR(y)  [x  = f (x) &Q]R(y) Γ  [x  = f (x) &Q ∧ R(y)]P
DC Γ, R(y)  [x  = f (x) &Q]P
Conversely, if a constant assumption R(y) is true in a final state reachable by an ODE x  = f (x),
then it must already be true initially. This is shown formally by the derivation below which uses
a classical case split with a cut on whether the formula R(y) is already true initially:
∗
Γ, R(y),x  = f (x) &Q(P ∧ R(y))  R(y) Γ, ¬R(y),x  = f (x) &Q(P ∧ R(y))  R(y) ∨LΓ, R(y) ∨ ¬R(y),x  = f (x) &Q(P ∧ R(y))  R(y) cut Γ,x  = f (x) &Q(P ∧ R(y))  R(y)
The left premise closes trivially. For the right premise, a contradiction is derived with · as
follows, where the V, M[
] step uses the propositional tautology ¬R(y) → ¬(P ∧ R(y)):
∗ V, M[
] ¬R(y)  [x  = f (x) &Q]¬(P ∧ R(y))
·, ¬L¬R(y),x  = f (x) &Q(P ∧ R(y))  false
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.        
6:46 A. Platzer and Y. K. Tan
In the sequel, these routine steps are omitted and proof steps manipulating constant assumptions
are simply labeled with V directly.
Axiom DMP derives the diamond refinement axiom DR· and its corollary dRW· from Corollary 5.2, which provide tools for working with ODE domain constraints in the diamond modality:
Proof of Corollary 5.2. Axiom DR· derives from DMP (the roles of Q and R are flipped) by
dualizing with the · axiom. The last K, dW step uses the propositional tautology Q → (R → Q).
∗ K, dW [x  = f (x) & R]Q  [x  = f (x) & R](R → Q)
DMP [x  = f (x) & R]Q,[x  = f (x) &Q]¬P  [x  = f (x) & R]¬P
·, ¬R, ¬L [x  = f (x) & R]Q,x  = f (x) & RP  x  = f (x) &QP
Rule dRW· derives from DR· by simplifying its left premise with rule dW.
A.2.2 Extended Derived Rules and Axioms. This section derives additional rules and axioms that
make use of the axiomatic extensions from Section 5.
Local Progress Properties. The local progress modality  excludes the initial state (x = y) in the
domain constraint when expressing local progress for formula Q. Recall:
x  = f (x) &Q def ≡ x  = f (x) &Q ∨ x = y x  y
The disjunct x = y in the domain constraint makes local progress an interesting question for
formulas characterizing sets that are not topologically closed (e.g., open sets as characterized by
the formula e > 0). As axiom Cont shows, the formula x  = f (x) &e > 0x  y, which does not
exclude x = y in the evolution domain constraint is already equivalent to e > 0. A precise syntactic
characterization of this difference is shown by the following derived axiom:
Corollary A.5 (Initial State Inclusion). The following axiom derives in dL. Variables y are
fresh in the ODE x  = f (x) and formula Q:
Init x = y → 
x  = f (x) &Qx  y ↔ Q ∧ x  = f (x) &Q
Proof. First, by dualizing via · both sides of axiom DX, the following equivalence is derived:
x  = f (x) &QP ↔ (Q ∧ (P ∨ x  = f (x) &QP))
The derivation of Init starts by using this derived equivalence (DX, ·), followed by a series of
equivalent propositional rewrites that simplify the logical structure of the succedent. The propositional steps are shown below, first removing the disjunct x  y using the assumption x = y, and
then pulling out the common conjunct Q as an antecedent assumption:
x = y,Q  x  = f (x) &Qx  y ↔ x  = f (x) &Q
x = y  Q ∧ x  = f (x) &Qx  y ↔ Q ∧ x  = f (x) &Q
x = y  Q ∧ (x  y ∨ x  = f (x) &Qx  y) ↔ Q ∧ x  = f (x) &Q
DX, · x = y  x  = f (x) &Qx  y ↔ Q ∧ x  = f (x) &Q
Both directions of the resulting equivalence are proved separately by unfolding the abbreviation
. In the “→” direction, a dRW·step suffices, becauseQ → Q∨x = y is a propositional tautology:
∗ dRW·x = y,Q,x  = f (x) &Qx  y  x  = f (x) &Q ∨ x = yx  y
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.            
Differential Equation Invariance Axiomatization 6:47
In the “←” direction, the derivation starts with a DR· step that reduces to the box modality.
Since the formulas x = y and Q are true initially, a V, DC step introduces the constant assumption
Q(y) into the domain constraint, which is Q with y in place of x. The derivation closes with dW:
∗ dW  [x  = f (x) & (Q ∨ x = y) ∧ Q(y)]Q
V, DC x = y,Q  [x  = f (x) &Q ∨ x = y]Q
DR·x = y,Q,x  = f (x) &Q ∨ x = yx  y  x  = f (x) &Qx  y
It is not possible to locally progress into both formula P and its negation ¬P simultaneously, by
uniqueness. This is the “→” direction of the duality axiom ¬ for local progress from Corollary 6.7.
The converse “←” is more involved and relies on the characterization axiom LP later.
Corollary A.6 (Local Progress Duality “→”). The following axiom derives from Uniq. Variables y are fresh in the ODE x  = f (x) and formula P:
¬→ x = y → 
x  = f (x) & P → ¬x  = f (x) & ¬P
Proof. The derivation starts with ¬R, after which the resulting local progress antecedents are
combined by Uniq, giving a conjunction of their domain constraints, because (P∨x = y)∧(¬P∨x =
y) is propositionally equivalent to (P∧¬P)∨x = y. The conjunction P∧¬P in the domain constraint
is propositionally equivalent to false and no local progress is possible into an empty set of states:
x  = f (x) & P ∧ ¬P  false
Uniqx  = f (x) & P,x  = f (x) & ¬P  false ¬R x  = f (x) & P  ¬x  = f (x) & ¬P
The derivation is completed by unfolding the  syntactic abbreviation, and shifting to the box
modality by · duality. The final step after using dW is a propositional tautology:
∗
(P ∧ ¬P) ∨ x = y  x = y
dW  [x  = f (x) & (P ∧ ¬P) ∨ x = y]x = y
·, ¬L
x  = f (x) & (P ∧ ¬P) ∨ x = yx  y  false
x  = f (x) & P ∧ ¬P  false
Reflection. The next two derived axiomsrfl· and rfl internalize a mathematical property of ODE
invariants. Namely, the formula P is invariant for the forwards ODE x  = f (x) iff its negation ¬P
is invariant for the backwards ODE x  = −f (x). This invariant reflection principle is used in Appendix B for proving completeness for semianalytic invariants, and to flip the signs in the second
premise of rule rI. It is useful in its own right as it allows freely switching between proving invariance for either the forwards or backwards ODEs, e.g., if one direction yields simpler arithmetic.
Corollary A.7 (Reflection). The reflection axioms rfl·, rfl derive from Dadj:
rfl· ∃x (P (x) ∧ x  = f (x) &Q(x)R(x)) ↔ ∃x (R(x) ∧ x  = −f (x) &Q(x)P (x))
rfl ∀x (P (x) → [x  = f (x) &Q(x)]P (x)) ↔ ∀x (¬P (x) → [x  = −f (x) &Q(x)]¬P (x))
Proof. Axiom rfl derives from rfl· by instantiating with R(x) def
≡ ¬P (x) and negating both
sides of the equivalence with ·. The diamond reflection axiom rfl· is derived from Dadj. Both
implications are proved separately and the “←” direction follows by instantiating the proof of the
“→” direction, since −(−f (x)) = f (x). The “→” direction is proved below.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.     
6:48 A. Platzer and Y. K. Tan
In the derivation below, the formulas are bound renamed [32] for clarity. After Skolemizing,
the first K·, dW step introduces an existentially quantified y under the diamond modality in the
antecedent by monotonicity using the provable first-order formula R(x) → ∃y (x = y ∧ R(y)):
P (x),x  = f (x) &Q(x)∃y (x = y ∧ R(y))  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
K·, dW P (x),x  = f (x) &Q(x)R(x)  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
∃L, ∧L ∃x (P (x) ∧ x  = f (x) &Q(x)R(x))  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
The ODE Barcan B axiom moves the existentially quantified y out of the diamond modality,
since y is not in x  = f (x). A subsequent V step also moves the postcondition R(y) out from the
diamond modality into the antecedents:
P (x), R(y),x  = f (x) &Q(x)x = y  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
V P (x),x  = f (x) &Q(x)(x = y ∧ R(y))  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
∃L
P (x), ∃y x  = f (x) &Q(x)(x = y ∧ R(y))  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
B
P (x),x  = f (x) &Q(x)∃y (x = y ∧ R(y))  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
The derivation continues using differential adjoints Dadj to syntactically flip the antecedent
differential equations from evolving x forwards to evolving y backwards. The V, K· step then
strengthens the postcondition to P (y) exploiting that the (negated) ODE does not modify x, so
that P (x) remains true along the ODE. This completes the proof using y as a witness for ∃y:
∗ ∃R R(y),y = −f (y) &Q(y)P (y)  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
V, K·P (x), R(y),y = −f (y) &Q(y)y = x  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
Dadj P (x), R(y),x  = f (x) &Q(x)x = y  ∃y (R(y) ∧ y = −f (y) &Q(y)P (y))
Real Induction Rule. The real induction rule with domain constraints corresponding to axiom
RI& is derived next. It is stated with the  modality from Section 5. The real induction rule rI
from Corollary 5.6 derives as an instance with domain constraint Q ≡ true.
Corollary A.8 (Real Induction Rule with Domain Constraints). The real induction proof
rule rI& (with two stacked premises) derives from RI&, Dadj, Uniq. Variables y are fresh in the ODE
x  = f (x) and formulas P,Q:
rI&
x = y, P,Q,x  = f (x) &Q  x  = f (x) & P
x = y, ¬P,Q,x  = −f (x) &Q  x  = −f (x) & ¬P
P  [x  = f (x) &Q]P
Proof (Implies Corollary 5.6). The derivation starts by rewriting the succedent with RI&, the
resulting right conjunct is abbreviated with R def ≡ x  = f (x) &Q → x  = f (x) & P. The M[
]
step rewrites the postcondition equivalently using the propositional tautology P∧R ↔ P∧(P → R),
which allows the left conjunct P to be assumed when proving the right conjunct R (the implication
x = y is also distributed over the conjunction). The two conjuncts are then split by [·]∧, ∧R, with
the resulting two premises labeled 1 and 2 , respectively. These are shown and proved below:
1 2
[·]∧, ∧R P  [x  = f (x) &Q ∧ (P ∨ x = y)]

(x = y → P) ∧ (x = y ∧ P → R)

M[
] P  [x  = f (x) &Q ∧ (P ∨ x = y)](x = y → P ∧ R)
∀R P  ∀y [x  = f (x) &Q ∧ (P ∨ x = y)](x = y → P ∧ R)
RI& P  [x  = f (x) &Q]P
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020. 
Differential Equation Invariance Axiomatization 6:49
The premise 2 yields the top premise of rule rI& directly (unfolding the abbreviation for R):
x = y, P,Q,x  = f (x) &Q  x  = f (x) & P →R, ∧L Q  (x = y ∧ P → R)
dW P  [x  = f (x) &Q ∧ (P ∨ x = y)](x = y ∧ P → R)
Continuing from premise 1 , the derivation splits classically on whether x = y is true initially,
yielding two further premises labeled 3 when x = y and 4 when x  y:
3 4 ∨L
x = y ∨ x  y, P  [x  = f (x) &Q ∧ (P ∨ x = y)](x = y → P) cut P  [x  = f (x) &Q ∧ (P ∨ x = y)](x = y → P)
From 3 , the antecedents x = y and P imply that P (y) is true initially by a cut. Since y is held
constant by the ODE x  = f (x), a monotonicity step M[
] followed by V completes the proof:
∗ V P (y)  [x  = f (x) &Q ∧ (P ∨ x = y)]P (y) cut, M[
]
x = y, P  [x  = f (x) &Q ∧ (P ∨ x = y)](x = y → P)
From 4 , the derivation continues by dualizing to the diamond modality, and using rfl· to syntactically reverse the direction of the ODE. The dRW· step weakens the resulting postcondition
of the diamond modality with the propositional tautology xy ∧ P → xy:
x = y, ¬P,x  = −f (x) &Q ∧ (P ∨ x = y)xy  false
dRW·x = y, ¬P,x  = −f (x) &Q ∧ (P ∨ x = y)(xy ∧ P)  false
rfl· xy, P,x  = f (x) &Q ∧ (P ∨ x = y)(x = y ∧ ¬P)  false
·, ¬R xy, P  [x  = f (x) &Q ∧ (P ∨ x = y)](x = y → P)
The diamond modality in the antecedent splits by axiom Uniq into two assumptions with domain
constraints Q and P ∨ x = y, respectively. With a use of derived axiom Init, all the antecedents of
the bottom premise of rule rI& are gathered, leaving only its succedent:
x = y, ¬P,Q,x  = −f (x) &Q,x  = −f (x) & P  false
Init x = y, ¬P,x  = −f (x) &Qx  y,x  = −f (x) & P ∨ x = yx  y  false
Uniq x = y, ¬P,x  = −f (x) &Q ∧ (P ∨ x = y)x  y  false
Continuing with the derived implication ¬→ results in the bottom premise of rule rI&:
x = y, ¬P,Q,x  = −f (x) &Q  x  = −f (x) & ¬P ¬L x = y, ¬P,Q,x  = −f (x) &Q, ¬x  = −f (x) & ¬P  false
¬→ x = y, ¬P,Q,x  = −f (x) &Q,x  = −f (x) & P  false
The rule rI& discards any additional context in the antecedents of its premises. This is due to the
use of RI&, which focuses on particular states along trajectories of the ODE x  = f (x). It would be
unsound to keep any assumptions about the initial state that depend on x, because the state being
examined may not be the initial state! However, assumptions that do not depend on x remain true
along the ODE. These constant assumptions can be kept with uses of V throughout the derivation
above or added into Q before using rI& by a DC that proves with V. Such additional steps are
elided and rule rI& is used directly while keeping these constant assumptions around.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.            
6:50 A. Platzer and Y. K. Tan
A.3 Axioms and Proof Rules Summary
For the sake of a self-contained presentation, this section presents all the propositional and firstorder sequent calculus proof rules used in this article. Propositional and first-order logic is not the
focus of this article so a simplified treatment is used. A full treatment of these rules can be found
elsewhere [27]. For ease of reference, this section also compactly references all base (and extended)
dL axioms and proof rules but does not repeat them explicitly because of space considerations. All
other (derived) axioms and proof rules in this article derive from this dL axiomatization.
Propositional and First-Order Proof Rules. Rule R for first-order real arithmetic is explained in Section 2.3. The following are sound propositional and first-order sequent calculus proof rules. In
rules ∀L, ∃R, an arbitrary (extended) term e can be used to instantiate the respective quantifiers.
In rules ∃L, ∀R, the Skolem variable y is fresh, i.e., does not occur free, in the conclusion:
¬L
Γ  ϕ
Γ, ¬ϕ  false
∧L
Γ,ϕ1,ϕ2  ψ
Γ,ϕ1 ∧ ϕ2  ψ
∨L
Γ,ϕ1  ψ Γ,ϕ2  ψ
Γ,ϕ1 ∨ ϕ2  ψ
¬R
Γ,ϕ  false
Γ  ¬ϕ
∧R
Γ  ϕ1 Γ  ϕ2
Γ  ϕ1 ∧ ϕ2
cut
Γ  ψ Γ,ψ  ϕ
Γ  ϕ
→L
Γ  ϕ1 Γ,ϕ2  ψ
Γ,ϕ1 → ϕ2  ψ
∀L
Γ,ϕ(e)  ψ
Γ,∀x ϕ(x)  ψ
∃L
Γ,ϕ(y)  ψ
Γ, ∃x ϕ(x)  ψ
→R
Γ,ϕ1  ϕ2
Γ  ϕ1 → ϕ2
∀R
Γ  ϕ(y)
Γ  ∀x ϕ(x)
∃R
Γ  ϕ(e)
Γ  ∃x ϕ(x)
Base Axioms and Proof Rules. All base axioms and proof rules of dL are in Theorem A.3. The base
differential axioms are in Theorem 2.2, while Lemma 2.5 provides differential axioms for extended
terms. The base differential equation axioms DI, DC, DG are in Theorem 2.6.
Extended Axiomatization. The extended axioms Uniq, Cont, Dadj are in Lemma 5.1. The extended real induction axiom RI and its generalization RI& are in Lemmas 5.5 and A.2, respectively.
Hybrid Program Axioms. These are presented in Theorem C.1 for use only in Appendix C.
B COMPLETENESS
This appendix gives completeness proofs for the derived rules dRI, sAI and the derived local
progress characterization LP. Completeness of dRI is proved by showing that DRI is a derived
axiom. A similar approach is taken for completeness of sAI by showing SAI is a derived axiom.
This syntactic approach to proving completeness of dRI and sAI demonstrates the versatility of
the dL calculus. It also enables complete disproofs of invariance properties as opposed to just failing
to apply a complete proof rule. To conclude that invariance is disproved after applying an algorithmic procedure (like the presentations of (semi)algebraic dRI and sAI [15, 22]), one would need to
trust, in addition to soundness, that no completeness errors are present in the implementation.
Recall that axioms Cont, RI& have an additional syntactic requirement, e.g., the presence of
x 
1 = 1, which is assumed to be met throughout this appendix, using axiom DG if necessary.
B.1 Progress Formulas
The following are useful logical rearrangements of the progress formulas for extended term e:
Proposition B.1 (Atomic Progress Formula Eqivalences). Let N be the rank of extended
term e. The following are provable equivalences on the progress and differential radical formulas for e:
.
e (∗) > 0 ↔ e > 0 ∨ (e = 0 ∧ .
e > 0) ∨ ... (8)
∨ 
e = 0 ∧ .
e = 0 ∧···∧ .
e (N −3) = 0 ∧ .
e (N −2) > 0

Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.
Differential Equation Invariance Axiomatization 6:51
∨ 
e = 0 ∧ .
e = 0 ∧···∧ .
e (N −2) = 0 ∧ .
e (N −1) > 0

.
e (∗) ≥ 0 ↔ e ≥ 0 ∧ 
e = 0 → .
e ≥ 0

∧ ... (9)
∧ 
e = 0 ∧ .
e = 0 ∧···∧ .
e (N −3) = 0 → .
e (N −2) ≥ 0

∧ 
e = 0 ∧ .
e = 0 ∧···∧ .
e (N −2) = 0 → .
e (N −1) ≥ 0

¬(
.
e (∗) > 0) ↔ .
(−e)
(∗) ≥ 0 ¬(
.
e (∗) ≥ 0) ↔ .
(−e)
(∗) > 0 (10)
¬(
.
e (∗) = 0) ↔ .
e (∗) > 0 ∨ .
(−e)
(∗) > 0 (11)
Proof. The equivalences are proved one at a time. By linearity of Lie derivatives,
.
(−e)(i) = −(
.
e (i)
) proves in real arithmetic for any i. The proof also uses these provable real
arithmetic equivalences:
e ≥ 0 ↔ e = 0 ∨ e > 0 − e ≥ 0 ∧ e ≥ 0 ↔ e = 0 ¬(e > 0) ↔ −e ≥ 0
(8) This equivalence follows by real arithmetic, and simplifying with propositional rearrangement as follows (here, the remaining conjuncts of .
e (∗) > 0 are abbreviated to ... ):
e ≥ 0 ∧ ((e = 0 → .
e ≥ 0) ∧ ... ) ↔ e > 0 ∧ ((e = 0 → .
e ≥ 0) ∧ ... )
∨ e = 0 ∧ ((e = 0 → .
e ≥ 0) ∧ ... )
The first disjunct on the RHS simplifies by real arithmetic to e > 0, since all of its implicational conjuncts contain e = 0 on the left of an implication. The latter disjunct simplifies to
e = 0 ∧ (
.
e ≥ 0 ∧ ... ), yielding the provable equivalence:
.
e (∗) > 0 ↔ e > 0 ∨ e = 0 ∧ (
.
e ≥ 0 ∧ ... )
The equivalence (8) proves by iterating this expansion on the RHS of this equivalence for
its nested conjuncts with higher Lie derivatives.
(9) This equivalence proves by expanding the formula .
e (∗) ≥ 0, which yields a disjunction
between .
e (∗) > 0 and .
e (∗) = 0. The latter formula is used to relax the strict inequality in the
last conjunct of .
e (∗) > 0 to a non-strict inequality.
(10) The equivalence for ¬(
.
e (∗) > 0) follows by negating both sides of equivalence (8) and
moving negations on the RHS inwards propositionally, yielding the provable equivalence:
¬(
.
e (∗) > 0) ↔

¬(e > 0) ∧ (e = 0 → ¬(
.
e > 0)) ∧ ...
∧ 
e=0 ∧ .
e=0 ∧···∧ .
e (N −2)
=0 → ¬(
.
e (N −1) > 0)

The desired equivalence derives by negating the inequalities and by equivalence (9)
for .
(−e)(∗) ≥ 0. The equivalence for ¬(
.
e (∗) ≥ 0) derives by negating both sides of the
equivalence for ¬(
.
e (∗) > 0), since −(−e) = e.
(11) By (10), the following equivalence is provable:
¬(
.
e (∗) > 0) ∧ ¬( .
(−e)
(∗) > 0) ↔ ( .
(−e)
(∗) ≥ 0) ∧ (
.
e (∗) ≥ 0)
By rewriting with (9), the RHS of this equivalence is provably equivalent to the formula .
e (∗) = 0 in real arithmetic. Negating both sides yields the provable equivalence (11).
The provable equivalences (10) are particularly important, because they underlie the next proposition, from which the complete characterization of local progress follows:
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020. 
6:52 A. Platzer and Y. K. Tan
Proposition B.2 (Negated Semianalytic Progress Formula). Let the semianalytic formula P
be in the normal form of Equation (5). Then ¬P can be put into normal form such that ¬(
.
P (∗)
) ↔ .
(¬P)(∗) is provable:
¬P ≡


N
i=0



a
	
(i)
j=0
dij ≥ 0 ∧
b
	
(i)
j=0
˜dij > 0



Proof. The proof uses propositional tautologies ¬(A ∧ B) ↔ ¬A∨¬B and ¬(A ∨ B) ↔ ¬A∧¬B.
Formula P is negated (in the normal form of Equation (5)) and all sub-terms are negated so the
inequalities have 0 on the RHS, yielding the following provable equivalence. The resulting RHS is
abbreviated by ϕ:
¬P ↔
	
M
i=0
 m


(i)
j=0
−eij > 0 ∨
n


(i)
j=0
−e˜ij ≥ 0

 ϕ
Negating both sides of the progress formula for P and simplifying propositionally proves
¬(
.
P (∗)
) ↔
	
M
i=0



m


(i)
j=0
¬( .
eij (∗) ≥ 0) ∨
n


(i)
j=0
¬(
.
e˜ij (∗) > 0)



Rewriting the RHS with equivalences (10) from Proposition B.1 yields the following provable equivalence. The resulting RHS is abbreviated by ψ:
¬(
.
P (∗)
) ↔
	
M
i=0



m


(i)
j=0
.
(−eij)
(∗) > 0 ∨
n


(i)
j=0
.
(−e˜ij)
(∗) ≥ 0


  ψ
Observe that ϕ,ψ have the same conjunctive normal form shape. Distribute the outer conjunction
over the inner disjunctions in ϕ to obtain the following provable equivalence, whose RHS is a
normal form for ¬P (for some indices N, a(i),b(i) and extended terms dij , ˜dij):
¬P ↔


N
i=0



a
	
(i)
j=0
dij ≥ 0 ∨
b
	
(i)
j=0
˜dij > 0



Distribute the disjunction in ψ following the same syntactic steps taken for ϕ to obtain the following provable equivalence:
ψ ↔


N
i=0



a
	
(i)
j=0
.
dij (∗) ≥ 0 ∨
b
	
(i)
j=0
.
˜dij (∗) > 0



Rewriting with the equivalences derived so far, and using the above normal form for ¬P, yields
the required, provable equivalence:
¬(
.
P (∗)
) ↔ .
(¬P)
(∗)
B.2 Local Progress
This section derives the characterizations of local progress from Section 6.1. These characterizations are used in the completeness proofs for both analytic and semianalytic invariants.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.           
Differential Equation Invariance Axiomatization 6:53
B.2.1 Atomic Inequalities. The proof of Lemma 6.3 was outlined in Section 6.1. The case where
 is ≥ is proved first, while the more technical case where  is > is proved subsequently.
Proof of Lemma 6.3 (LP≥∗ ). Let N be the rank of extended term e with respect to x  = f (x)
from the identity in Equation (3). For the derivation of LP≥∗ , the additional flexibility of the 
modality with a disjunct x = y in the domain constraint is not needed. This disjunction is removed
after unfolding the  abbreviation using a dRW· monotonicity step. The definition of .
e (∗) ≥
0 is also unfolded, with both disjuncts handled separately. The premises are labeled 1 and 2 ,
respectively.
x = y,
.
e (∗) > 0  x  = f (x) &e ≥ 0x  y x = y,
.
e (∗) = 0  x  = f (x) &e ≥ 0x  y ∨L x = y,
.
e (∗) > 0 ∨ .
e (∗) = 0  x  = f (x) &e ≥ 0x  y
dRW· x = y,
.
e (∗) > 0 ∨ .
e (∗) = 0  x  = f (x) &e ≥ 0 ∨ x = yx  y
x = y,
.
e (∗) ≥ 0  x  = f (x) &e ≥ 0
From 2 , dRW· strengthens the inequality e ≥ 0 in the domain constraint to an equation e = 0.
The derivation continues using DR·, because by dRI, e = 0 is provably invariant. The proof is
completed with Cont using the trivial arithmetic fact 1 > 0:
∗ dRI .
e (∗) = 0  [x  = f (x) & 1 > 0]e = 0
∗ Contx = y  x  = f (x) & 1 > 0x  y
DR· x = y,
.
e (∗) = 0  x  = f (x) &e = 0x  y
dRW· x = y,
.
e (∗) = 0  x  = f (x) &e ≥ 0x  y
From 1 , the premise is lined up for the derived step axiom LPi≥. The proof proceeds by closing
the (left) premises obtained by iterating LPi≥ for higher Lie derivatives. In this way, the derivation
continues until the final (rightmost) open premise, which is abbreviated here and continued below:
∗ R.
e (∗) > 0  e ≥ 0
∗ R.
e (∗) > 0, e = 0  .
e ≥ 0
x = y,
.
e (∗) > 0,...  ... LPi≥ ... LPi≥ x = y,
.
e (∗) > 0, e = 0  x  = f (x) & .
e ≥ 0x  y
LPi≥ x = y,
.
e (∗) > 0  x  = f (x) &e ≥ 0x  y
The open premise corresponds to the last conjunct of .
e (∗) > 0. The implication in the conjunct
uses the gathered antecedents e = 0,..., .
e (N −2) = 0 after which Cont, dRW· completes the proof:
∗ Cont, dRW· x = y,
.
e (N −1) > 0  x  = f (x) & .
e (N −1) ≥ 0x  y cut x = y,
.
e (∗) > 0, e = 0,..., .
e (N −2) = 0  x  = f (x) & .
e (N −1) ≥ 0x  y
Unlike the non-strict case just derived for Lemma 6.3, the strict case (where  is >) crucially
uses the fact that the  modality excludes the initial state, so that it is possible to locally progress
into the strict inequality e > 0 without already satisfying it in the initial state. Topological considerations made this exclusion irrelevant for the non-strict case (see Section 6.1), as derived axiom
Init explains logically. The idea behind the remaining proof of Lemma 6.3 for the strict case is to
syntactically embed this difference into the derivation of LP>∗ . Moreover, this syntactic transformation reduces the proof to the non-strict case, so that the derived step axiom LPi≥ can again
be used to progressively analyze higher Lie derivatives. The following proposition is used for the
transformation:
Proposition B.3. Let d = ek for some k ≥ 1 and x  = f (x) be an ODE with extended terms
e,d, f (x). For each 0 ≤ i ≤ k − 1, there (computably) exists an extended term cofactor д such that the
identity .
d(i) = дe is provable in real arithmetic.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.               
6:54 A. Platzer and Y. K. Tan
Proof. The proof proceeds by induction on k.
• For k = 1, d = e1 so .
e (0) = e hence the cofactor д = 1 suffices.
• For d = ek+1, the jth Lie derivative of d for 0 ≤ j ≤ k is given by Leibniz’s rule:
.
d(j) = L(j)
f (x ) (eke) =

j
i=0

j
i
 .
(ek )
(j−i) .
e (i)
The induction hypothesis implies
.
(ek )(j−i) = дie is a provable identity for some computable
extended term cofactor дi for each 1 ≤ i ≤ j. The final summand for i = 0 is

j
0
 .
(ek )
(j) .
e (0) =
.
(ek )
(j)
e
Thus, the cofactor д =
.
(ek )(j) + j
i=1

j
i

дi
.
e (i) yields the identity .
d(j) = дe. This identity is
provable, because it only depends on first-order properties of real arithmetic.
For d = ek , k ≥ 1, Proposition B.3 implies that the formula e = 0 → k−1 i=0
.
d(i) = 0 is provable in
real arithmetic for extended terms e,d. This enables the remaining proof of Lemma 6.3.
Proof of Lemma 6.3 (LP>∗ ). Let N ≥ 1 be the rank of extended term e with respect to x  = f (x).
This rank bounds the number of higher Lie derivatives of e that need to be considered.
The derivation starts by unfolding the syntactic abbreviation of the  modality and reducing
to the non-strict case with dRW· and the real arithmetic fact e−d ≥ 0 → e > 0 ∨ x = y for the
abbreviation d def
= |x − y|
2N , which is a (polynomial) term, ((x1 − y1)
2 + ··· + (xn − yn )
2)N :
∗ Re−d ≥ 0  e > 0 ∨ x = y x = y,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y
dRW· x = y,
.
e (∗) > 0  x  = f (x) &e > 0 ∨ x = yx  y
x = y,
.
e (∗) > 0  x  = f (x) &e > 0
Next, the initial assumption x = y in the antecedent is used. The first cut proves using the
formula of real arithmetic: x = y → |x − y|
2 = 0. As remarked, with |x − y|
2 = 0 and N ≥ 1, by
Proposition B.3, |x − y|
2 = 0 → N −1 i=0
.
d(i) = 0 is a provable real arithmetic formula. The second
cut proves using this fact. The resulting open premise is abbreviated 1 :
x = y,
N −1 i=0
.
d(i) = 0,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y cut, R x = y, |x − y|
2 = 0,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y cut, R x = y,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y
To continue from 1 , observe that for 0 ≤ i ≤ N − 1, by linearity of the Lie derivative:
L(i)
f (x ) (e−d) = .
e (i) − .
d(i)
Using the conjunction N −1 i=0
.
d(i) = 0 in the antecedents, the formula .
(e−d)(i) = .
e (i) proves by a
cut and real arithmetic for 0 ≤ i ≤ N − 1. This justifies the next real arithmetic step from 1 , with
the assumptions Γd
def
≡ N −1 i=0
.
(e−d)(i) = .
e (i)
. Intuitively, Γd allows the derivation to locally work
with higher Lie derivatives of e instead of higher Lie derivatives of e − d in subsequent steps:
Γd , x = y,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y
cut, Rx = y,
N −1 i=0
.
d(i) = 0,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.               
Differential Equation Invariance Axiomatization 6:55
The derivation is completed using the same technique of iterating LPi≥, as shown in the earlier
proof of Lemma 6.3 for the non-strict case LP≥∗ . It starts with a single LPi≥ step. The left premise
closes by real arithmetic, because .
e (∗) > 0 has the conjunct e ≥ 0, and Γd provides e −d = e, which
imply e − d ≥ 0. The right premise is abbreviated 2 :
∗ RΓd ,
.
e (∗) > 0  e−d ≥ 0 Γd , x = y,
.
e (∗) > 0, e−d = 0  x  = f (x) & .
(e−d)(1)
≥0x  y
LPi≥ Γd , x = y,
.
e (∗) > 0  x  = f (x) &e−d ≥ 0x  y
From 2 , local progress for the first Lie derivative of e−d is shown. The first step simplifies
formula e−d = 0 in the antecedents using Γd . The derived axiom LPi≥, together with Γd , simplifies
and proves the left premise. The right premise is abbreviated 3 , shown and continued below:
∗ Re = 0 → .
e ≥ 0, e = 0  .
e (1) ≥ 0
R Γd ,
.
e (∗) > 0, e = 0  .
(e−d)(1)
≥0 3
LPi≥ Γd , x = y,
.
e (∗) > 0, e = 0  x  = f (x) & .
(e−d)(1)
≥0x  y
R Γd , x = y,
.
e (∗) > 0, e−d = 0  x  = f (x) & .
(e−d)(1)
≥0x  y
The derivation continues from 3 similarly for higher Lie derivatives of e−d, using Γd to replace .
(e−d)(i) with .
e (i)
, and then using the corresponding conjunct of .
e (∗) > 0. The final open premise
obtained from 3 by iterating LPi≥ corresponds to the last conjunct of .
e (∗) > 0:
Γd , x = y,
.
e (∗)
>0, e=0,..., .
e (N −2)
=0  x  = f (x) & .
(e−d)(N −1)
≥0x  y
LPi≥ ...
LPi≥ Γd , x = y,
.
e (∗)
>0, e = 0,
.
e (1) ≥ 0  x  = f (x) & .
(e−d)(2)
≥0x  y
R Γd , x = y,
.
e (∗)
>0, e=0, .
(e−d)(1)
≥0  x  = f (x) & .
(e−d)(2)
≥0x  y
The gathered antecedents e = 0,..., .
e (N −2) = 0 are, respectively, obtained from Γd by real
arithmetic. The proof is closed with dRW·, Cont, similarly to the non-strict case:
∗
Cont x = y, .
(e−d)(N −1)
>0  x  = f (x) & .
(e−d)(N −1)
>0x  y
cut, R Γd , x = y,
.
e (N −1)
>0  x  = f (x) & .
(e−d)(N −1)
>0x  y
dRW· Γd , x = y,
.
e (N −1)
>0  x  = f (x) & .
(e−d)(N −1)
≥0x  y
cut Γd , x = y,
.
e (∗) > 0, e=0, .., .
e (N −2)
=0  x  = f (x) & .
(e−d)(N −1)
≥0x  y
B.2.2 Semianalytic Formulas. The proof in the semianalytic case is outlined in Section 6.1. It
lifts derived axioms LP≥∗ and LP>∗ according to the homomorphic definition of the semianalytic progress formula, using Uniq to prove local progress into a conjunction of two formulas
simultaneously.
Proof of Lemma 6.5. By congruential equivalence [32], assume, without loss of generality,
that formula P is propositionally rewritten to the same normal form of Equation (5) as in the
corresponding semianalytic progress formula .
P (∗)
. Throughout this proof, similar premises
are collapsed in proofs and directly indexed by i, j. The ith disjunct of P is abbreviated with
Pi
def
≡ m(i)
j=0 eij ≥ 0 ∧ n(i)
j=0 e˜ij > 0.
The derivation starts by splitting the (outermost) disjunction in .
P (∗) with ∨L. For each resulting
premise (indexed by i), local progress is proved for the corresponding disjunct Pi of P. The domain
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.              
6:56 A. Platzer and Y. K. Tan
change with dRW· proves because Pi ∨x = y → P ∨x = y is a propositional tautology for each i:
x = y,
m(i)
j=0
.
eij (∗) ≥ 0 ∧ n(i)
j=0
.
e˜ij (∗) > 0  x  = f (x) & Pi
dRW·x = y,
m(i)
j=0
.
eij (∗) ≥ 0 ∧ n(i)
j=0
.
e˜ij (∗) > 0  x  = f (x) & P
∨L x = y,
.
P (∗)  x  = f (x) & P
It suffices now to prove local progress in Pi . The uniqueness axiom Uniq splits conjuncts in
Pi . The dRW· step distributes x = y in domain constraint from  over conjunctions using the
propositional tautology (R1∧R2)∨x = y ↔ (R1∨x = y)∧(R2∨x = y). This leaves premises (indexed
by j) for the non-strict and strict inequalities of Pi , which are closed by LP≥∗ and LP>∗ , respectively:
∗ LP≥∗
x = y, .
eij (∗) ≥ 0  x 
=f (x) &eij≥0
∗
LP>∗
x = y,
.
e˜ij (∗) > 0  x 
=f (x) &e˜ij>0
Uniq, dRW· x = y,
m(i)
j=0
.
eij (∗) ≥ 0∧ n(i)
j=0
.
e˜ij (∗) > 0  x 
=f (x) & Pi
Using Proposition B.2, the implicational semianalytic local progress axiom LPR from Lemma 6.5
is strengthened to an equivalent characterization of semianalytic local progress.
Proof of Theorem 6.6. By congruential equivalence [32], assume, without loss of generality,
that formula P is propositionally rewritten to the same normal form of Equation (5) as in the corresponding semianalytic progress formula .
P (∗)
. By Proposition B.2, there is a normal form for ¬P
with the provable equivalence ¬(
.
P (∗)
) ↔ .
(¬P)(∗)
. The “←” direction of the inner equivalence is
LPR. The derivation in the “→” direction of the inner equivalence starts by reducing to the contrapositive statement by propositional logic transformations. The final step rewrites the negation in
the antecedents using the above normal form for ¬P from Proposition B.2:
x = y, .
(¬P)(∗)  ¬x  = f (x) & P
R x = y, ¬(
.
P (∗)
)  ¬x  = f (x) & P
cut, ¬L, ¬R
x = y,x  = f (x) & P  .
P (∗)
By the derived axiom LPR from Lemma 6.5, the progress formula for ¬P in the antecedent implies
local progress for ¬P. The proof is completed with derived axiom ¬→ of CorollaryA.6:
∗ ¬→x = y,x  = f (x) & ¬P  ¬x  = f (x) & P
LPR x = y, .
(¬P)(∗)  ¬x  = f (x) & P
Proof of Corollary 6.7. Self-duality axiom ¬ derives by using LP twice together with the
provable equivalence ¬(
.
P (∗)
) ↔ .
(¬P)(∗) from Proposition B.2 (and double negation elimination):
∗
LPx = y  x  = f (x) & P ↔ .
P (∗)
Rx = y  x  = f (x) & P ↔ ¬ .
(¬P)(∗)
LPx = y  x  = f (x) & P ↔ ¬x  = f (x) & ¬P
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.        
Differential Equation Invariance Axiomatization 6:57
Local progress congruence rule CLP derives similarly by introducing an initial assumption x = y
with cut, R, ∃L, equivalently rewriting with LP, and congruential equivalence [32] in the last step:
 P ↔ R
 x  = f (x) & P ↔ x  = f (x) & R
LP x = y  .
P (∗) ↔ .
R(∗)
cut, R, ∃L  .
P (∗) ↔ .
R(∗)
B.3 Analytic Invariants
This section derives the analytic completeness axiom DRI (and its generalization DRI&), thus proving completeness for analytic (Noetherian) invariants and also for analytic postconditions.
B.3.1 Differential Radical Invariants. The differential radical invariants proof rule dRI derives
from vdbx by turning the differential radical identity from Equation (3) into a provable vectorial
Darboux equality.
Proof of Theorem 4.3. Let e be an extended term satisfying both premises of the dRI proof rule
and let e be the vector of extended terms with components ei
def
= .
e (i−1) for i = 1, 2,..., N. The
derivation starts by setting up the premise for an application of derived rule vdbx. In the first step,
axiom DX is used to assume that the domain constraint Q is true initially. On the left premise after
the cut, arithmetic equivalence N −1 i=0
.
e (i) = 0 ↔ e = 0 is used to rewrite the succedent to the left
premise of dRI. On the right premise, monotonicity M[
] strengthens the postcondition to e = 0:
Γ,Q  N −1 i=0
.
e (i) = 0
RΓ,Q  e = 0
e = 0  [x  = f (x) &Q]e = 0
M[
]
e = 0  [x  = f (x) &Q]e = 0 cut Γ,Q  [x  = f (x) &Q]e = 0
DX Γ  [x  = f (x) &Q]e = 0
Continuing from the right premise, the component-wise Lie derivative of e is defined as (
.
e)i =
Lf (x )
(ei ) = .
e (i)
. The vector .
e will be obtained from e by matrix multiplication with an N × N
extended term cofactor matrix G with 1 on its superdiagonal, and the дi cofactors in the last row:
G =











01 0 ... 0
0 0 . . . . . . .
.
.
.
.
. .
.
. . . . . . . 0
0 0 ... 0 1
д0 д1 ... дN −2 дN −1











, e =










e
.
e (1)
.
.
.
.
e (N −2)
.
e (N −1)










, .
e =










.
e (1)
.
e (2)
.
.
.
.
e (N −1)
.
e (N )










The vectorial equation .
e = Ge is provably equivalent to the equation .
e (N ) = N −1 i=0 дi
.
e (i)
. To see
this, note that for indices 1 ≤ i < N, matrix multiplication yields
(
.
e)i = .
e (i) = (e)i+1 = (Ge)i
Therefore, all but the final component-wise equality are trivially valid and prove by R. The
remaining (non-trivial) equation for i = N is (
.
e)N = (Ge)N . The LHS of this equation simplifies
with (
.
e)N = .
e (N )
, while the RHS simplifies by matrix multiplication to:
(Ge)N =

N
i=1
дi−1 (e)i =

N
i=1
дi−1
.
e (i−1) =
N
−1
i=0
дi
.
e (i)
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.                                  
6:58 A. Platzer and Y. K. Tan
Hence, real arithmetic equivalently turns the formula .
e = Ge into the succedent of the right
premise of rule dRI. An application of derived rule vdbx from Corollary 4.2 with cofactor matrix G
followed by rule R yields the remaining right premise of rule dRI, completing the derivation:
Q  .
e (N ) = N −1 i=0 дi
.
e (i)
R Q  .
e = Ge
vdbxe = 0  [x  = f (x) &Q]e = 0
The derivation of rule dRI uses a specific choice of cofactor matrixG in rule vdbx to prove invariance of the equation e = 0. This suffices for analytic completeness, because analytic formulas can
always be normalized to a single equation in real arithmetic. However, such normalization may not
yield the computationally most efficient way of proving an analytic invariant (see Example 7.10).
B.3.2 Completeness for Analytic Invariants. The analytic completeness axiom with semianalytic domain constraints DRI& from Theorem 6.10 is derived next, making use of LPR from
Lemma 6.5. The completeness argument can be summarized by contrapositives: if the local
progress formula .
e (∗) = 0 is false in an initial state, then some higher Lie derivative of e is
non-zero and gives a definite (local) sign to the value of e, which, by LPR implies progress to e  0.
For completeness, axiom DRI& also handles the vacuous case where domain constraint Q is false
initially (Q → ... ) and the stuck case where the domain constraint is true initially but cannot
locally progress ( .
Q(∗) → ... ).
Proof of Theorem 6.10 (Implies Theorem 4.5). For formulas Q formed from conjunctions and
disjunctions of strict inequalities, Q → .
Q(∗) is provable in real arithmetic, so axiom DRI follows as
an arithmetical corollary of DRI&. The derivation of axiom DRI& starts by rewriting its LHS equivalently with axiom DX. This is followed by a series of equivalent propositional rewrites that simplify
the logical structure of the succedent. The propositional steps are shown below, first pulling out
the common implication Q then the common conjunct e = 0 as antecedent assumptions:
Q, e = 0 

[x  = f (x) &Q]e = 0

↔  .
Q(∗) → .
e (∗) = 0

Q 

e = 0 ∧ [x  = f (x) &Q]e = 0

↔ 
e = 0 ∧ (
.
Q(∗) → .
e (∗) = 0)



Q → e = 0 ∧ [x  = f (x) &Q]e = 0

↔ 
Q → e = 0 ∧ (
.
Q(∗) → .
e (∗) = 0)

DX  [x  = f (x) &Q]e = 0 ↔ 
Q → e = 0 ∧ (
.
Q(∗) → .
e (∗) = 0)

Next, a cut of the first-order formula ∃y x = y proves trivially in real arithmetic and Skolemizing
it with ∃L yields an initial state assumption (x = y for fresh variables y). To make use of this initial
state assumption, the derivation continues with a classical case split on whether the semianalytic
progress formula .
Q(∗) is true initially. The resulting premises are labeled 1 (for the .
Q(∗) disjunct)
and 2 (for the ¬(
.
Q(∗)
) disjunct) and continued below:
1 2
∨L x = y,Q, e = 0,
.
Q(∗) ∨ ¬(
.
Q(∗)
) 

[x  = f (x) &Q]e = 0

↔  .
Q(∗) → .
e (∗) = 0

cut x = y,Q, e = 0 

[x  = f (x) &Q]e = 0

↔  .
Q(∗) → .
e (∗) = 0

∃L ∃y x = y,Q, e = 0 

[x  = f (x) &Q]e = 0

↔  .
Q(∗) → .
e (∗) = 0

cut, R Q, e = 0 

[x  = f (x) &Q]e = 0

↔  .
Q(∗) → .
e (∗) = 0

The premise 2 corresponds to the case where solutions are stuck in the initial state, because
no local progress in the domain constraint Q is possible. Topologically, this corresponds to the
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
Differential Equation Invariance Axiomatization 6:59
situation where initial states are on the boundary of the set characterized by Q (and also in Q)
9
but the ODE locally leaves Q. Since e = 0 is already true in this stuck state, it trivially remains true
for all solutions staying in domain constraint Q. The derivation from 2 starts with a propositional
simplification of the succedent, since its RHS is vacuously equivalent to true by assumption ¬(
.
Q(∗)
).
The local progress characterization axiom LP equivalently rewrites the sub-formula .
Q(∗) to local
progress for Q before axiom · unfolds the  modality turning it into a box modality formula:
x = y, e = 0,[x  = f (x) &Q ∨ x = y]x = y  [x  = f (x) &Q]e = 0
· x = y, e = 0, ¬(x  = f (x) &Q)  [x  = f (x) &Q]e = 0
LP x = y, e = 0, ¬(
.
Q(∗)
)  [x  = f (x) &Q]e = 0
R x = y, e = 0, ¬(
.
Q(∗)
) 

[x  = f (x) &Q]e = 0

↔  .
Q(∗) → .
e (∗) = 0

By axiom V, the constant assumption e (y) = 0 (with y in place of x) strengthens the postcondition of the antecedent box modality to e = 0 using the provable arithmetic formula
e (y) = 0 ∧ x = y → e = 0. A subsequent DMP, dW step finishes the proof using the propositional
tautology Q → Q ∨ x = y:
∗
Q  Q ∨ x = y
DMP, dW [x  = f (x) &Q ∨ x = y]e = 0  [x  = f (x) &Q]e = 0
V x = y, e = 0,[x  = f (x) &Q ∨ x = y]x = y  [x  = f (x) &Q]e = 0
From premise 1 , the succedent propositionally simplifies to ([x  = f (x) &Q]e = 0) ↔ .
e (∗) = 0
by assumption .
Q(∗)
. The two directions of this simplified succedent are proved separately. In the
“←” direction, the derivation uses rule dRI by setting N to the rank of extended term e, so that
the succedent of its left premise is exactly .
e (∗) = 0. The right premise resulting from dRI closes
by real arithmetic, since N is the rank of e, it must, by definition satisfy the provable differential
radical identity from Equation (3):
∗
R  .
e (N ) = N −1 i=0 дi
.
e (i)
dRI .
e (∗) = 0  [x  = f (x) &Q]e = 0
The derivation in the “→” direction starts by reducing to the contrapositive statement with
duality · and propositional logical manipulation:
x = y,Q,
.
Q(∗)
, ¬(
.
e (∗) = 0)  x  = f (x) &Qe  0
¬L, ¬R
x = y,Q,
.
Q(∗)
, ¬x  = f (x) &Qe  0  .
e (∗) = 0
· x = y,Q,
.
Q(∗)
,[x  = f (x) &Q]e = 0  .
e (∗) = 0
By derived axiom LP, the antecedent assumption .
Q(∗) is equivalently rewritten to local progress for
Q before Init (CorollaryA.5) is used to strengthen it with the assumptionQ. The final step rewrites
the resulting negated differential radical formula in the antecedents to two progress formulas by
(11) from Proposition B.1. Subsequent splitting with ∨L yields two premises, which are abbreviated
9This situation is impossible for domain constraints Q characterizing topologically open sets, which is the semantical
reason for derived axiom DRI having a simpler RHS characterization than DRI&.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.  
6:60 A. Platzer and Y. K. Tan
3 (for disjunct .
e (∗) > 0) and 4 (for disjunct .
(−e)(∗) > 0), respectively, and continued below:
3 4
∨Lx = y,x  = f (x) &Qx  y,
.
e (∗) > 0 ∨ .
(−e)(∗) > 0  x  = f (x) &Qe  0
R x = y,x  = f (x) &Qx  y, ¬(
.
e (∗) = 0)  x  = f (x) &Qe  0
Init x = y,Q,x  = f (x) &Q, ¬(
.
e (∗) = 0)  x  = f (x) &Qe  0
LP x = y,Q,
.
Q(∗)
, ¬(
.
e (∗) = 0)  x  = f (x) &Qe  0
Continuing from 3 , the assumption .
e (∗) > 0 is rewritten with LP>∗ to obtain local progress
for e > 0. Unfolding the  abbreviation, the uniqueness axiom Uniq combines the two diamond
modality formulas in the antecedent:
x  = f (x) &Q ∧ (e > 0 ∨ x = y)x  y  x  = f (x) &Qe  0
Uniqx  = f (x) &Qx  y,x  = f (x) &e > 0 ∨ x = yx  y  x  = f (x) &Qe  0
x  = f (x) &Qx  y,x  = f (x) &e > 0  x  = f (x) &Qe  0
LP>∗
x = y,x  = f (x) &Qx  y,
.
e (∗) > 0  x  = f (x) &Qe  0
The succedent’s domain constraint is strengthened to match the antecedent’s using rule dRW·,
since Q ∧ (e > 0 ∨ x = y) → Q is a propositional tautology. The Kripke axiom K· reduces the
succedent to the box modality, after which the proof finishes with a dW step, because the formula
e > 0 ∨ x = y in the domain constraint implies the succedent by real arithmetic:
∗ R Q ∧ (e > 0 ∨ x = y)  (x  y → e  0)
dW  [x  = f (x) &Q ∧ (e > 0 ∨ x = y)](x  y → e  0)
K· x  = f (x) &Q ∧ (e > 0 ∨ x = y)x  y  x  = f (x) &Q ∧ (e > 0 ∨ x = y)e  0
dRW·x  = f (x) &Q ∧ (e > 0 ∨ x = y)x  y  x  = f (x) &Qe  0
The remaining premise 4 follows similarly, except that the progress formula .
(−e)(∗) > 0 enables
the cut x  = f (x) & −e > 0, which leads to the same postcondition e  0 in the succedent.
B.4 Completeness for Semianalytic Invariants with Semianalytic Evolution Domains
The following generalized version of rule sAI from Theorem 6.8 additionally handles evolution
domain constraints. It derives from derived rule rI& and derived axiom LP.
Theorem B.4 (Semianalytic Invariants with Semianalytic Domain Constraints). The
semianalytic invariant proof rule with semianalytic domain constraints sAI& derives from
RI&, Dadj, Cont, Uniq for semianalytic formulas P,Q:
sAI&
P,Q,
.
Q(∗)  .
P (∗) ¬P,Q,
.
Q−(∗)  .
(¬P)
−(∗)
P  [x  = f (x) &Q]P
Proof (Implies Theorem 6.8). Rule sAI& derives from rule rI& derived in CorollaryA.8 and
the characterization of semianalytic local progress LP derived in Theorem 6.6. The x = y assumptions provided by rI& are used to convert between local progress modalities and the semianalytic
progress formulas by LP, but, by weakening, x = y can be elided again in the premises of sAI&.
Recalling the earlier discussion for derived rule rI&, axiom V can be used, as usual, to keep constant context assumptions that do not depend on variables x for the ODEs x  = f (x) in rule sAI&,
because it immediately derives from rI&, which supports constant contexts. The proof rule sAI&
is complete for invariance properties. This is proved syntactically, enabling complete disproofs of
invariance. The completeness of sAI from Theorem 6.9 follows as a special case, where Q ≡ true.
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.                          
Differential Equation Invariance Axiomatization 6:61
Theorem B.5 (Semianalytic Invariant Completeness with Semianalytic Domains).
The semianalytic invariant axiom with semianalytic domain constraints SAI& derives from
RI&, Dadj, Cont, Uniq for semianalytic formulas P,Q:
SAI& ∀x (P → [x  = f (x) &Q]P) ↔ ∀x

P ∧ Q ∧ .
Q(∗)
→ .
P (∗)

 a
∧ ∀x

¬P ∧ Q ∧ .
Q−(∗)
→ .
(¬P)
−(∗)


b
Proof (Implies Theorem 6.9). The left and right conjunct on the RHS of SAI& are abbreviated
a and b , respectively. The “←” direction derives by sAI&. The antecedents a and b are firstorder formulas quantified over x, the variables evolved by the ODE x  = f (x). They are kept as
constant context in the antecedents of the premises when applying rule sAI& and later instantiated
by ∀L:
∗
∀L, →L
a , P,Q,
.
Q(∗)  .
P (∗)
∗
∀L, →L
b , ¬P,Q,
.
Q−(∗)  .
(¬P)
−(∗)
sAI& a , b , P  [x  = f (x) &Q]P
∀R, →R a , ∀ b x (P→[x  = f (x) &Q]P)
In the “→” direction, the derivation proceeds by contraposition in both cases after ∧R. For b ,
the derived invariant reflection axiom (rfl) is used to syntactically turn the invariance assumption
for the forwards ODE into an invariance assumption for the backwards ODE:
∀x (P→[x  = f (x) &Q]P)  a
∀x (¬P→[x  = −f (x) &Q]¬P)  b
rfl ∀x (P→[x  = f (x) &Q]P)  b ∧R ∀x (P→[x  = f (x) &Q]P)   ∧ a b
Continuing from the left premise (with a in its succedent), standard logical manipulation is
used to dualize both sides of the sequent. The ∃L step Skolemizes the existential in the antecedent,
with the resulting x used to witness the (then) existentially quantified succedent with ∃R:
P,Q,
.
Q(∗)
, ¬(
.
P (∗)
)  x  = f (x) &Q¬P
∃R, ∧R P,Q,
.
Q(∗)
, ¬(
.
P (∗)
)  ∃x (P ∧ x  = f (x) &Q¬P)
∃L ∃x

P ∧ Q ∧ .
Q(∗) ∧ ¬(
.
P (∗)
)

 ∃x (P ∧ x  = f (x) &Q¬P)
·, ¬L, ¬R ∀x (P→[x  = f (x) &Q]P)  ∀x

P ∧ Q ∧ .
Q(∗)
→ .
P (∗)

Next, an initial state assumption x = y is introduced by a cut, R followed by ∃L to Skolemize
the resulting existential quantifier. The antecedent assumption ¬(
.
P (∗)
) is replaced with .
(¬P)(∗)
equivalently, by Proposition B.2. Both local progress formulas in the antecedents are then replaced
equivalently with the local progress modalities using the derived axiom LP:
x = y, P,Q,x  = f (x) &Q,x  = f (x) & ¬P  x  = f (x) &Q¬P
LP x = y, P,Q,
.
Q(∗)
, .
(¬P)(∗)  x  = f (x) &Q¬P
R x = y, P,Q,
.
Q(∗)
, ¬(
.
P (∗)
)  x  = f (x) &Q¬P
∃L ∃y x = y, P,Q,
.
Q(∗)
, ¬(
.
P (∗)
)  x  = f (x) &Q¬P
cut, R P,Q,
.
Q(∗)
, ¬(
.
P (∗)
)  x  = f (x) &Q¬P
By Init from CorollaryA.5, local progress for Q is strengthened, while  can only be unfolded
for ¬P. The two resulting diamond modality formulas are combined with Uniq:
x  = f (x) &Q ∧ (¬P ∨ x = y)x  y  x  = f (x) &Q¬P
UniqP,x  = f (x) &Qx  y,x  = f (x) & ¬P ∨ x = yx  y  x  = f (x) &Q¬P
Init x = y, P,Q,x  = f (x) &Q,x  = f (x) & ¬P  x  = f (x) &Q¬P
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.   
6:62 A. Platzer and Y. K. Tan
With a K·, dW step, the diamond modality in the antecedent strengthens to ¬P in its postcondition with the propositional tautology Q ∧ (¬P ∨ x = y) → (x  y → ¬P). A dRW· step
completes the proof using the propositional tautology Q ∧ (¬P ∨ x = y) → Q:
∗ dRW· x  = f (x) &Q ∧ (¬P ∨ x = y)¬P  x  = f (x) &Q¬P
K·, dWx  = f (x) &Q ∧ (¬P ∨ x = y)x  y  x  = f (x) &Q¬P
The remaining derivation from the right premise (with b in its succedent) is similar using local
progress for the already reflected backwards differential equations instead.
C HYBRID PROGRAMS
This appendix is devoted to proving Corollary 4.6. The syntax of hybrid programs and the axioms
of dL for handling the hybrid program operators are recalled [29, 32] below. Readers are referred
to the literature [29, 32] for a complete definition of hybrid program semantics.
The syntax of hybrid programs α, β is given by the following grammar. The formula Q is semianalytic in both tests ?Q and in evolution domain constraints of ODEs x  = f (x) &Q:
α, β ::= x :=e | ?Q | x  = f (x) &Q | α ∪ β | α; β | α∗ (12)
The following dL axioms are sound for reasoning about hybrid programs [32]:
Theorem C.1 (Hybrid Program Axioms [32]). The following are sound axioms of dL.
[:=] [x :=e]ϕ(x) ↔ ϕ(e) (e free for x in ϕ)
[?] [?Q]ϕ ↔ (Q → ϕ)
[∪] [α ∪ β]ϕ ↔ [α]ϕ ∧ [β]ϕ
[;] [α; β]ϕ ↔ [α][β]ϕ
[
∗] [α∗]ϕ ↔ ϕ ∧ [α][α∗]ϕ
I [α∗]ϕ ↔ ϕ ∧ [α∗](ϕ → [α]ϕ)
The loop induction rule derives from induction axiom I using Gödel’s generalization rule G [29]:
loop ϕ  [α]ϕ
ϕ  [α∗]ϕ
Corollary 4.6 is proved using the equivalent characterization of future truth of analytic formulas
along ODEs from Theorem 4.5. It applies to the fragment of dL programs generated by the grammar
from Equation (12), where formula Q in tests and domain constraints are negations of analytic
formulas (so d  0 for some extended term d). The loop-free fragment further removes the α∗
clause from the grammar in Equation (12).
The set of extended terms always forms a ring, because the +, · operations are interpreted as
the usual real-valued addition and multiplication and hence obey the ring axioms [6] for R. The
extended term language is said to be Noetherian if its corresponding ring of extended terms is
Noetherian. Similar to the computable differential radicals condition (R), an algorithm is assumed
that decides (and proves) ideal membership in the ring of extended terms.
In particular, polynomial term languages without extensions are Noetherian and have decidable
ideal membership. Extended term languages are not necessarily Noetherian, even if all additional
fixed function symbols are Noetherian functions. For example, the extended term language from
Equation (1), even only with exp, is not Noetherian [40, Remark 1.4.2].
Proof of Corollary 4.6. The analytic formula P is provably equivalent in real arithmetic to a
formula e = 0 for some extended term e by normalizing with the provable arithmetic equivalences
e = 0 ∧ e˜ = 0 ↔ e2 + e˜
2 = 0 and e = 0 ∨ e˜ = 0 ↔ ee˜ = 0. Assume without loss of generality that it
is already written in this form (and accordingly for the negative analytic formulas in α).
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.    
Differential Equation Invariance Axiomatization 6:63
Following [29, Theorem 1], the proof proceeds by structural induction on the form of α, showing
that for some (computable) extended term e˜, the equivalence [α]e = 0 ↔ e˜ = 0 is derivable in dL.
• Case x  = f (x) &d  0. The formula d  0 is a strict inequality so Theorem 4.5 derives
[x  = f (x) &d  0]e = 0 ↔ (d  0 → .
e (∗) = 0). Let N be the rank of e, so that .
e (∗) = 0
expands to N −1 i=0
.
e (i) = 0 and let e˜ = d(
N −1 i=0 (
.
e (i)
)
2), giving the provable real arithmetic
equivalence (d  0 → .
e (∗) = 0) ↔ e˜ = 0. Rewriting with this derives in dL the equivalence:
[x  = f (x) &d  0]e = 0 ↔ e˜ = 0
• Case x :=e. By axiom [:=], [x :=e]e˜(x) = 0 ↔ e˜(e) = 0 derives and e˜(e) is an extended term.
• Case ?d  0. By axiom [?], [?d  0]e = 0 ↔ (d  0 → e = 0) derives. Rewriting with the
provable real arithmetic equivalence (d  0 → e = 0) ↔ de = 0 derives the equivalence:
[?d  0]e = 0 ↔ de = 0
• Case α ∪ β. By axiom [∪], [α ∪ β]e = 0 ↔ [α]e = 0 ∧ [β]e = 0 derives. By the induction
hypothesis on α, β, the equivalences [α]e = 0 ↔ e˜1 = 0 and [β]e = 0 ↔ e˜2 = 0 derive for
some extended terms e˜1, e˜2. Moreover, e˜1 = 0 ∧ e˜2 = 0 ↔ e˜
2
1 + e˜
2
2 = 0 is provable in real
arithmetic. Rewriting with the derived equivalences derives the equivalence:
[α ∪ β]e = 0 ↔ e˜
2
1 + e˜
2
2 = 0
• Case α; β. By axiom [;], [α; β]e = 0 ↔ [α][β]e = 0 derives. By the induction hypothesis on
β, the equivalence [β]e = 0 ↔ e˜2 = 0 derives for some extended term e˜2. Rewriting with
this equivalence derives [α; β]e = 0 ↔ [α]e˜2 = 0. By the induction hypothesis on α, the
equivalence [α]e˜2 = 0 ↔ e˜1 = 0 derives for some extended term e˜1. Rewriting with the
chain of derived equivalences derives the equivalence:
[α; β]e = 0 ↔ e˜1 = 0
• Case α∗. This case crucially requires that the extended term language is Noetherian. First,
construct the sequence of terms e˜i defined inductively with e˜0
def
= e and e˜i+1 is the term
satisfying the derived equivalence [α]e˜i = 0 ↔ e˜i+1 = 0 obtained by applying the induction
hypothesis on α with postcondition e˜i = 0 for i = 0, 1, 2,... . Since the term language is
assumed to be Noetherian, the following ascending chain of ideals stabilizes:
(e˜0) ⊆ (e˜0, e˜1) ⊆ (e˜0, e˜1, e˜2) ⊆ ···
Moreover, by decidable ideal membership for the extended term language, there is a (smallest) computable k such that e˜k satisfies the following provable identity, with cofactor terms
дi :
e˜k =

k−1
i=0
дie˜i (13)
The following equivalence is provable by real arithmetic: k−1 i=0 e˜
2
i = 0 ↔ k−1 i=0 e˜i = 0. Thus,
to derive the equivalence [α∗]e = 0 ↔ k−1 i=0 e˜
2
i = 0, it suffices to show that the equivalence
[α∗]e = 0 ↔ k−1 i=0 e˜i = 0 is derivable. The two directions of this claim are shown separately:
“→” This direction is straightforward using k times the iteration axiom [
∗] together with derived axiom [·]∧. By construction, the formulas [α]e˜i = 0 are provably equivalent to
Journal of the ACM, Vol. 67, No. 1, Article 6. Publication date: March 2020.               
6:64 A. Platzer and Y. K. Tan
e˜i+1 = 0 using derived equivalences, which derives the required implication:
∗
e˜0 = 0 ∧ e˜1 = 0 ∧ e˜2 = 0 ∧···∧ e˜k−1 = 0  k−1 i=0 e˜i = 0
e = 0 ∧ [α]e = 0 ∧ [α][α]e = 0 ∧···∧ [α] ... [α]  k−1 times
e = 0  k−1 i=0 e˜i = 0
[
∗], [·]∧ ···
[
∗], [·]∧ e = 0 ∧ [α]e = 0 ∧ [α][α][α∗]e = 0  k−1 i=0 e˜i = 0
[
∗], [·]∧ e = 0 ∧ [α][α∗]e = 0  k−1 i=0 e˜i = 0
[
∗] [α∗]e = 0  k−1 i=0 e˜i = 0
“←” The postcondition of the box modality is strengthened to k−1 i=0 e˜i = 0 by monotonicity
with K, G, recalling that e˜0
def
= e, so k−1 i=0 e˜i = 0 → e = 0 is a propositional tautology.
Subsequently, the loop rule is used to prove k−1 i=0 e˜i = 0 is a loop invariant of α∗:
k−1 i=0 e˜i = 0  [α]
k−1 i=0 e˜i = 0
loopk−1 i=0 e˜i = 0  [α∗]
k−1 i=0 e˜i = 0
K, Gk−1 i=0 e˜i = 0  [α∗]e = 0
By axiom [·]∧ and ∧R, each conjunct of the postcondition (indexed by 0 ≤ i ≤ k − 1) is
proved separately. By construction, each [α]e˜i = 0 is provably equivalent to e˜i+1 = 0:
∗
R, ∧Rk−1 i=0 e˜i = 0  k−1 i=0 e˜i+1 = 0
k−1 i=0 e˜i = 0  k−1 i=0 [α]e˜i = 0
[·]∧ k−1 i=0 e˜i = 0  [α]
k−1 i=0 e˜i = 0
The premises for indices 0 ≤ i < k − 1 all close trivially, because e˜i+1 = 0 is already
in the antecedent. The last premise for index i = k − 1 has succedent e˜k = 0. However,
this follows (by construction and R) from the antecedent using the provable identity from
Equation (13).                   