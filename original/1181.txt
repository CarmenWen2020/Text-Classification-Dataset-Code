Abstract
Though constructing a sequential system model may be technically uncomplicated and rather ‘straightforward’, its result is often cumbersome and difficult to analyze since all possible interleavings of system's actions have to be present. This naturally raises the interest to the possibility of automatic synthesis of models that are able to grasp behavioral parallelism of the system. Boolean Petri nets are a classical formalism that enjoys generic concepts of concurrency, synchronization and conflict, and allows to obtain a concise yet expressive system representation. Let τ be a Boolean type of nets. The problem of τ-synthesis consists in deciding whether a given transition system A is isomorphic to the reachability graph of a Boolean Petri net N of type τ (a τ-net, for short). In case of a positive decision, N should be constructed. Another instance of the synthesis problem takes the dependencies of places into account: A place p of a τ-net depends on a transition t if p can influence t, that is, a marking of p can inhibit the firing of t, or if p can be influenced by t, that is, the firing of t can change a marking of p. The problem τ-synthesis of Boolean nets with restricted dependencies (τ-SOBNWRD) consists in deciding for a given transition system A and natural number d whether there exists a Boolean Petri net N of type τ such that, firstly, the reachability graph of N and A are isomorphic and, secondly, every place p of N depends on at most d transitions. For many Boolean types that allow independence, the (unrestricted) τ-synthesis problem is NP-complete, and for all of them τ-SOBNWRD inherits the NP-completeness. In this paper, we enhance our understanding of τ-SOBNWRD from a parameterized point of view: We show for 27 of the 128 thinkable Boolean types that allow independence that τ-SOBNWRD parameterized by d is W[1]-hard, and for 75 of them that the problem is W[2]-hard.

Keywords
Petri net
Transition system
Synthesis
Parameterized complexity

1. Introduction
Petri nets [1] are widely used for modeling of parallel processes and distributed systems due to their ability to express the relations of causal dependency, conflict and concurrency between system's actions. In system analysis, one aims to check behavioral properties of such models, and many of these properties are decidable [2] for Petri nets and their reachability graphs which represent system behavior. The task of system synthesis is opposite: A system model has to be constructed from a given specification of the desired behavior. The behavioral specification is often of sequential nature, e.g., a set of action traces, or a formal language, or a labeled transition system. The present paper focuses on the latter: The goal of synthesis is then to construct a Petri net whose reachability graph is isomorphic to the input transition system. The availability of a synthesized net model of the system can be beneficial in several ways. In comparison to the sequential description of the system given by a transition system, the presence of concurrency/parallelism in a Petri net on a fine-grained level allows to encompass the full interleaving in the behavior in a concise yet clear way. As a result, this yields a usually much more compact system model without loss of the expressiveness, as long as the synthesis terminates successfully. Besides, the algorithms of automatic synthesis ensure that the constructed model is correct-by-design, and hence it does not require any further verification. Moreover, the well-developed theory of Petri nets [2], [3] suggests a wide range of methods and techniques for behavioral and structural analysis of the synthesized model, supporting possible improvements and optimizations in the initial system. All these allow many areas to successfully employ Petri net synthesis, e.g., extracting concurrency from sequential specifications like TS and languages [4], process discovery [5], supervisory control [3] or the synthesis of speed independent circuits [6].

The complexity of Petri net synthesis strongly depends on the restrictions which are implied by the specification, or imposed on the target system model, or both, and ranges from undecidable [7] via NP-complete [8], [9] down to polynomial [10], [11].

In this work, we study the complexity of synthesis for Boolean nets [12], where each place contains at most one token, for any reachable marking. A place of such a net is often considered as a Boolean condition which is true if the place is marked and false otherwise. In a Boolean Petri net, a place p and a transition t are related by one of the Boolean interactions: no operation (), input (), output (), unconditionally set to true (), unconditionally reset to false (), inverting (), test if true (), and test if false (). These interactions define in which way p and t influence each other: The interaction  () defines that p must be true (false) before and false (true) after t's firing;  () implies that t's firing proves that p is false (true);  means that p and t do not affect each other at all, meaning that they are independent;  () implies that p may initially be both false or true but after t's firing it is false (true);  means that t inverts p's current Boolean value.

Boolean Petri nets are classified by the sets of interactions between places and transitions that can be applied. A set τ of Boolean interactions is called a type of net. The eight possible interactions give a total of 256 different types. A net N is of type τ (a τ-net) if it applies at most the interactions of τ. For a type τ, the τ-synthesis problem consists in deciding whether a given transition system A is isomorphic to the reachability graph of some τ-net N, and in constructing N if it exists. The complexity of Boolean net synthesis varies significantly for different Boolean types: While τ-synthesis for elementary net systems (the case of ) is shown to be NP-complete [13], the same problem for flip-flop nets () is polynomial [11].

This paper is an extended version of [14], [15] and addresses the computational complexity of a special instance of τ-synthesis called τ-Synthesis of Boolean nets with restricted dependencies (τ-SOBNWRD), which sets a limitation for the number of connections of each place. This synthesis setting targets to those τ-nets in which every place must be in relation  with all but at most d transitions of the net, while the synthesis input is not confined. In system modeling [16], places of Petri nets are usually meant as conditions or resources, while transitions are meant as actions or agents. Hence, the formulation of d-restricted synthesis takes into consideration not only the concurrency perspective but also possible a priori limitations on the number of agents which compete for the access to some resource in the modeled system. From the theoretical perspective, the problem of synthesis has been extensively studied in the literature for the conventional Petri nets and their subclasses, which are often defined via various structural restrictions: Recently, improvements of the existing synthesis techniques have been suggested for choice-free (transitions cannot share incoming places) [17], weighted marked graphs (each place has at most one input and one output transition) [10], [18], fork-attribution (choice-free and at most one input for each transition) [19] and other net classes [20], [21]. In these works, the limitations were mainly subject to the quantity of connections between places and transitions. On the other hand, the results on synthesis of k-bounded (never more than k tokens on a place) [22], safe (1-bounded) and elementary nets [12] investigate classes which are defined through behavioral restrictions. Further, generalized settings of the synthesis problem for these and some other classes were studied [23], and NP-completeness results for many of them were presented. In contrast to this multitude of P/T net classes, for Boolean nets, only the constrains for the set of interactions have appeared in the literature, deriving for instance flip-flop nets [11], trace nets [24], inhibitor nets [25]. This kind of constrain can be considered as behavioral limitation, leaving out the question of synthesis of possible structurally defined subclasses of Boolean nets. The present paper aims to piece out the shortage by investigating the notion of d-restriction which limits the amount of connections between a place and transitions. On the other hand, the paper presents an inclusive (with regard to the possible Boolean types of nets) and systematic approach to the characterization of τ-Synthesis complexity.

The place environment restrictions were initially introduced in [14], where the complexity of d-restricted synthesis has been studied for a number of Boolean types, and the W[1]-hardness of this problem has been proven. A later work [15] tackles the problem for many types that necessarily include interactions  and  and demonstrates the W[2]-hardness of d-restricted synthesis for these types, which makes a clear distinction to the earlier results. In this paper, we systematize these results and extend them by providing -hardness of τ-SOBNWRD for the prominent types that are referred to as elementary net systems () [26], inhibitor nets () [25], event/condition nets () [12] and contextual nets () [27]. According to the W-hierarchy of parameterized complexity, these results establish that no fixed-parameter-tractable synthesis algorithm can be found for the types under consideration.

From this point of view, the synthesis parameterized by the place environments stays in a range with the synthesis parameterized by the behavioral states' environments (every state of the input transition system has a limit on the incoming and outgoing arcs) studied in [28].

The paper is organized as follows. After introducing of the necessary definitions in Section 2, the contributions on the parameterized complexity of τ-SOBNWRD are presented in Sections 3: We establish that τ-SOBNWRD belongs to the complexity class XP and demonstrate -Hardness by reductions of the problems Regular Independent Set and Odd Set and -Hardness by reductions of Hitting Set. Section 4 summarizes the paper.

2. Preliminaries
In this section, we introduce necessary notions alongside with examples to support them, and provide some basic results that we use throughout the paper. Let us begin with the basic notions of parameterized complexity (used in this paper) and its hierarchy, and refer to [29], [30] for further detailed explanations.

Definition 1 Parameterized problem

A parameterized problem is a language 
⁎
, where Σ is a fixed alphabet and  is the set of natural numbers. For an input 
⁎
, k is called the parameter. We define the size of an instance , denoted by , as , that is, k is encoded in unary.

Among the parameterized decision problems, the class of fixed-parameter tractable (FPT) problems is of special interest: The interest to this class is motivated by the fact that some of parameterized NP-hard problems can be solved by algorithms which are exponential only in the size of the parameter and polynomial in the size of the input. Hence, for fixed parameter values, these problems can be solved efficiently.

Definition 2 Fixed-parameter tractability

Let  be two computable functions. The parameterized language L is slice-wise polynomial (XP), if there exists an algorithm  such that, for all 
⁎
, algorithm  decides whether  in time bounded by 
; if the runtime of  is even bounded by 
, then L is called fixed-parameter tractable (FPT).

In order to classify parameterized problems as being FPT or not, the W-hierarchy  is defined [29, p. 435]. It is believed that all the sub-relations in this sequence are strict and that a problem is not FPT if it is -hard for some .

For a parameterized problem, a standard way to show that it is -hard is to use a parameterized reduction from some other problem which is already known to be -hard.

Definition 3 Parameterized reduction

Let 
⁎
 be two parameterized problems. A parameterized reduction from 
 to 
 is an algorithm that given an instance  of 
, outputs an instance 
 of 
 in time 
 for some computable function f such that  is a yes-instance of 
 if and only if 
 is a yes-instance of 
 and 
 for some computable function g. If 
 is -hard and there is a parameterized reduction from 
 to 
, then 
 is -hard, too.

A behavioral specification of a system is often given in a sequential form, e.g., a formal language, a set of traces, a transition system. The present paper tackles the latter case.

Definition 4 Transition System

A (deterministic) transition system (TS, for short)  is a directed labeled graph with the set of states S, the set of events E and partial transition function , where 
 is graphically depicted as an edge from node s to node 
 labeled by e, and denoted as

Image 1
. For
Image 1
, we say s is a source and 
 is a target of e, respectively. An event e occurs at a state s, denoted by
Image 2
, if  is defined. A sequence 
⁎
 occurs at a state s, denoted by
Image 3
, if it is the empty sequence ε or there are states 
 such that 
 and 
 is defined for all . An initialized TS  is a TS with a distinct state  such that every state  is reachable from ι by a directed labeled path.
In the remainder of this paper, if not explicitly stated otherwise, we assume all TS to be initialized and if a TS A is not explicitly defined, then we refer to its components consistently by  (states) and  (events) and 
 (transition function) and 
 (initial state).

In this paper, we study the complexity of constructing Boolean Petri nets from transition systems. A Petri net models a given system by means of places which represent the local states of the system, and transitions which represent the actions (or events) in the system. In a Boolean Petri net, a place can carry a token (be marked): This is interpreted as a condition is set to true; if place has no token on it (is unmarked), the corresponding condition is considered to be false. The global state of the modeled system is given by the marking of the net. A global marking of a net defines for each place whether it contains a token. The initial state of the system corresponds to the initial marking of the net. The enablement of the transitions (as events of the system) is determined by the flow of the net, and an occurrence of an event in the system is modeled by the firing of the corresponding transition. The flow defines how many tokens a place must contain to enable a transition and in which way the firing of the transition changes the content of the place.

Boolean Petri nets are classified according to the abilities of places and transitions to influence each other (flow). In order to deal with these classes in a uniform way, the notion of types of nets has been developed in [12]:

Definition 5 Type of nets

A Boolean type of net 
 is a (non-initialized) TS such that 
 is a subset of the set of Boolean interactions: 
. Each interaction  is a binary partial function  as defined in Fig. 1. For all  and all 
, the transition function of τ is defined by 
. Since a type τ is completely determined by 
, we often identify τ with 
.

Fig. 1
Download : Download high-res image (27KB)
Download : Download full-size image
Fig. 1. All interactions i of I. If a cell is empty, then i is undefined on the respective x.

Due to the symmetrical nature of some Boolean interactions, in our study we consider Boolean types of nets to be different up to a congruence:

Definition 6 Congruence

Two Boolean types of nets 
 and 
 are congruent, notated by 
, if there are bijective mappings 
 and 
 such that an edge

Image 1
is present in 
 if and only if the image
Image 4
of this edge under φ and ψ is present in 
.
Basing on the notion of type, τ-nets are defined, where the events 
 correspond to possible relations between places and transitions and the partial transition function 
 describes how the contents of places can be changed by the firing of a transition and, moreover, which contents can inhibit such a firing:

Definition 7

τ-Nets
Let 
 be a type of nets. A Petri net 
 of type τ, (τ-net, for short) is given by finite and disjoint sets P of places and T of transitions, an initial marking 
, and a (total) flow function 
. A τ-net realizes a certain behavior by firing sequences of transitions: A transition  can fire in a marking 
 if 
 is defined for all . By firing, t produces the next marking 
 where 
 for all . This is denoted by

Image 5
. Given a τ-net 
, its behavior is captured by a transition system 
, called the reachability graph of N. The state set of 
 is the reachability set , that is, the set of all markings that, starting from initial state 
, are reachable by firing a sequence of transitions. For every reachable marking M and transition  with
Image 5
, the state transition function 
 of 
 is defined by 
. The dependency number 
 of a place p of N is the number of transitions whose firing can possibly influence p or be influenced by the marking of p. The dependency number 
 of a τ-net N is defined as 
. For , a τ-net is called (dependency) d-restricted if 
.
Example 1

Fig. 2 shows type  and 2-restricted τ-net 
 with places 
, flow-function 
, 
, 
 and initial marking 
. Since

Image 6
and
Image 7
, the transition a can fire in 
, which leads to the marking 
. After that, b can fire, which results in the marking 
. The reachability graph 
 of N is depicted on the right hand side of Fig. 2.
Fig. 2
Download : Download high-res image (32KB)
Download : Download full-size image
Fig. 2. The type  and a τ-net N and its reachability graph AN.

According to Definition 7, for every τ-net N, there is always a TS 
, that reflects the global behavior of N, namely the corresponding reachability graph. Moreover, by firing all possible sequences of transitions, the reachability graph 
 can be computed effectively. Naturally, this raises the question whether a given TS A corresponds to the behavior of a τ-net N. Furthermore, in case of a positive decision, N should be constructed. This is the subject of the following search problem:


Download : Download high-res image (27KB)
Download : Download full-size image
If an input  of τ-Synthesis allows a positive decision, then we want to construct a corresponding τ-net N purely from A. Since A and the reachability graph 
 of N shall be isomorphic, the events E of A become transitions of N. The places, the flow function and the initial marking of N originate from so-called τ-regions of A.

Definition 8

τ-Regions
Let τ be a Boolean type of nets and  be a TS. A τ-region of A is a pair  of support 
 and signature 
 such that for every edge

Image 8
of A the image
Image 9
is present in τ. A region  is d-restricted if it maps all but at most d events to , i.e., .
A region  models a place p and its initial marking 
 as well as the corresponding part of the flow function  of a sought τ-net if it exists. In particular,  models  and  models the number of tokens that p contains initially and, more generally,  models the number of tokens  in the marking M that corresponds to the state s according to the isomorphism φ that justifies 
.

Definition 9 Synthesized net

Every set  of τ-regions of  defines the synthesized τ-net 
 with set of places , set of transitions E, flow function  and initial marking 
 for all  and all .

To make sure that a synthesized net N realizes the behavior of a TS exactly, distinct states s and 
 of A must correspond to different markings M and 
 of the net. Moreover, the firing of a transition e needs to be inhibited at a marking M, when the event e does not occur at the state s that corresponds to M by the isomorphism φ. This is stated by so-called separation atoms and separation properties.

Definition 10

τ-State Separation
Let τ be a type of nets and  a TS. A pair 
 of distinct states of A defines a state separation atom (SSA, for short). A τ-region  solves 
 if 
. The meaning of R is to ensure that 
 contains at least one place R such that 
 for the markings M and 
 corresponding to s and 
, respectively. If  is a state of A and, for all states 
 such that 
, there is a τ-region that solves 
 then s is called τ-solvable. If every state of A or, equivalently, every SSA of A is τ-solvable, then A has the τ-state separation property (τ-SSP, for short).

Definition 11

τ-Event State Separation
Let τ be a type of nets and  a TS. A pair  of event  and state  where e does not occur at s, that is

Image 10
, defines an event state separation atom (ESSA atom, for short). A τ-region  solves  if  is not defined at  in τ, that is, 
. The meaning of R is to ensure that there is at least one place R in 
 such that 
 is not defined for the marking M that corresponds to s via the isomorphism, that is, e cannot fire in M. If, for all  such that
Image 10
, there is a τ-region that solves , then e is called τ-solvable. If every event of A or, equivalently, every ESSA of A is τ-solvable, then A has the τ-event state separation property (τ-ESSP, for short).
The two separation properties bring us to the notion of a τ-admissible set of regions as the one that ensures both properties.

Definition 12

Witness, τ-admissible set
A set  of τ-regions is a (τ-) witness of the τ-ESSP (τ-SSP) of A if, for every ESSA (SSA),  contains a τ-region that solves this ESSA (SSA). If A has the τ-SSP and the τ-ESSP, then A is called τ-solvable. A set  that is a witness of both the τ-SSP and the τ-ESSP of A is called τ-admissible.  is d-restricted if every region  of  is d-restricted.

The following theorem, borrowed from [12, p. 163], summarizes the already implied connection between the existence of τ-admissible sets of A and (the solvability of) τ-synthesis:

Theorem 1

[12]
Let A be a TS and τ a type of nets. The reachability graph 
 of a τ-net N is isomorphic to A if and only if there is a τ-admissible set  of A such that 
.

Example 2

Let . The TS 
 of Fig. 3 has the τ-ESSP and the τ-SSP: The region 
, which is defined by 
 and 
 and  and , solves the ESSA 
 and 
 as well as the SSA 
 and 
 and 
 and 
. Moreover, the region 
, which is defined by 
, 
,  and  solves the remaining ESSA 
 and 
 as well as the SSA 
 and 
 of 
. Since 
 and 
 solve all SSA and ESSA, 
 is a τ-admissible set. Fig. 3 sketches the synthesized net 
 and its reachability graph 
. The isomorphism φ between 
 and 
 is given by 
, 
, 
 and 
.

Fig. 3
Download : Download high-res image (29KB)
Download : Download full-size image
Fig. 3. The TS A1, the -Net N1 and the reachability graph 
 of N1.

The main subject of the present paper is the complexity of τ-synthesis for a special class of Boolean Petri nets: Those where the marking of a place can influence or be influenced only by an a priori limited number of transitions. For a place p, this is formally determined by the number of transitions e which are linked to p by a meaningful flaw, i.e., . The bound for the net flaw is naturally translated into a parameter for sought regions. Hence the task of synthesis can be formulated as the following parameterized problem:


Download : Download high-res image (53KB)
Download : Download full-size image
Example 3

Let 
, 
, 
 and 
 be defined as in Fig. 4. The TS 
 has no ESSP atoms. Hence, it has the 
-ESSP and 
-ESSP. The only SSP atom of 
 is 
. It is 
-solvable by 
 with 
, 
, 
. Thus, 
 has the 
-admissible set 
, and the 
-net 
 with 
 and 
 solves 
. Fig. 5 depicts N (left) and its reachability graph 
 (right). The SSP atom 
 is not 
-solvable, thus, neither is 
. TS 
 has ESSP atoms 
 and 
, which are both 
-unsolvable. The only SSP atom 
 in 
 can be solved by the 
-region 
 with 
, 
, 
, 
. Thus, 
 has the 
-SSP, but not the 
-ESSP. None of the (E)SSP atoms of 
 can be solved by any 
-region. Notice that the 
-region 
 maps two events to a signature different from . Thus, in case of d-restricted 
-synthesis, 
 would not be valid for .

Fig. 4
Download : Download high-res image (27KB)
Download : Download full-size image
Fig. 4. The type 
, the TSs A1 and A2 and the type 
.

Fig. 5
Download : Download high-res image (13KB)
Download : Download full-size image
Fig. 5. The 1-restricted τ1-net N, where τ1 is defined according to Fig. 4 and 
 according to Example 3, and its reachability graph AN.

3. Fixed parameter intractability of τ-Synthesis of Boolean Nets with Restricted Dependency
Speaking in terms of classical complexity theory, one easily finds out that the problem τ-SOBNWRD belongs to the class NP, just as the decision version of (unrestricted) τ does [28]. Moreover, there is a trivial reduction of (the decision version of) τ-Synthesis to τ-SOBNWRD: Since a τ-region can map at most all events of a TS  not to , A is τ-solvable if and only if A is τ-solvable by -restricted τ-regions. Thus, if τ-synthesis is NP-complete, then τ-SOBNWRD is also NP-complete. In particular, by the results of [28], the latter applies to the types of Fig. 6 §2, §3, §6-§9.

Fig. 6
Download : Download high-res image (211KB)
Download : Download full-size image
Fig. 6. An overview of the discovered lower bounds for the parameterized complexity of τ-SOBNWRD.

In this section, we investigate the computational complexity of τ-SOBNWRD from a parameterized point of view. In order to do so, we first argue that τ-SOBNWRD belongs to the complexity class XP. After that, we argue for 99 of 128 thinkable Boolean types of nets that contain , however, that there is little hope that τ-SOBNWRD is fixed parameter tractable, since the problem is -hard or -hard for these types. Fig. 6 provides an overview of our findings, which we obtain by suitable parametrized reductions of well-known intractable problems. Notice that, for the types of Fig. 6 §4, §5, the unrestricted synthesis problem is solvable in polynomial-time. However, our parameterized reductions are actually polynomial-time many to one reductions, which implies the NP-completeness of τ-SOBNWRD for these types, too. The results of Fig. 6 §2, §4 - §9 have already been presented in our earlier works [14], [15]. However, we partly provide substantially simplified proofs (reductions) in the current paper. Moreover, the results for the types of Fig. 6 §3 are completely new and cover the prominent types that are referred to as elementary net systems () [26], inhibitor nets () [25], event/condition nets () [12] and contextual nets () [27].

Lemma 1

If τ is a Boolean type of nets, then τ-SOBNWRD belongs to the complexity class XP.

Proof

Let  be a TS,  and let  be the maximal number of edges that A possibly has, that is, 
. A τ-region  is implicitly defined by  and sig. We are interested in regions of A for which there is an  such that . For every event , we have at most  interactions that are different from . Since , we have to consider at most 
  regions at all, which can be estimated by 
.

To check if the chosen signature actually implies regions of A and to solve the (E)SSP atoms of A, we need to construct the regions explicitly, that is, we have to compute sup. To do so, we firstly compute a spanning tree 
 of A, which is doable in time 
 by the algorithm of Tarjan [31] and needs to be done only once. In 
, there is exactly one path from ι to s for all , and 
 has  edges. Thus, having a spanning tree,  and sig, it costs time at most  to compute sup. The effort to compute all potentially interesting regions explicitly is thus at most 
. After that, we check for any fixed potential region if it is actually a well-defined region, that is, whether

Image 1
implies
Image 11
. For a fixed region, this is doable in time . Thus the effort to compute all interesting regions of A is 
.
For a fixed separation atom 
 or  we simply have to check if 
 or if 
 is not defined, respectively, which is doable in time . Since we have at most 
 separation atoms and at most 
 regions, the check for the (E)SSP is doable in time 
. Finally, if we add up the effort to get all interesting regions and the effort to check whether these regions witness the (E)SSP of A, then we obtain that the effort of the problem is bounded by 
. □

The remainder of this section is dedicated to the proof of the parameterized intractability of τ-SOBNWRD for all types of Fig. 6 §2 - §9. We obtain the announced lower bounds by suitable parametrized reductions. The following lemma is a tool that spares us the need to actually present a reduction for every type. More exactly, the following Lemma 2 allows us to restrict our investigations to one of several congruent types:

Lemma 2

Let 
 and 
 be two Boolean types of nets, which are congruent, such that the mappings φ and ψ that justify 
 in accordance to Definition 6 satisfy . Let  be a TS and . There is a 
-admissible set of d-restricted regions of A if and only if there is a 
-admissible set of d-restricted regions of A.

Proof

Let φ and ψ be the mappings that justify 
 such that . Let α and β be some arbitrary but fixed ESSA and SSA of A, respectively.

⇒: We show that if there is a 
-region R of A that solves α or β, then there is a 
-region 
 of A that solves α or β, respectively. So let  be 
-region of A. We define 
 such that 
 for all  and 
 for all . 
 is a 
-region of A, because for all edges

Image 1
of A holds:
Image 12
.
Assume that R solves the SSA α, that is, 
. Since φ is bijective, we get that 
. Hence, 
 solves α.

Assume that R solves the ESSA β, that is,

Image 13
. Assume, for a contradiction, that there is 
, such that
Image 14
. Since φ is surjective, this implies that there is a 
 with . This implies
Image 15
and thus
Image 16
. But this contradicts the assumption that R solves the ESSA β. Consequently,
Image 17
is true and 
 solves β.
Moreover, since , we obtain that 
 implies 
. Similarly, one proves the opposite direction. □

3.1. -hardness by reduction of Regular Independent Set
In this section, we deal with the types of Fig. 6 §2 - §3 and argue that τ-SOBNWRD is -hard for these types, that is, we prove the following theorem:

Theorem 2

τ-SOBNWRD is -hard if τ is a Boolean type of nets such that:

1.
 or  or

2.
 and .

In order to prove Theorem 2, we provide parameterized reductions of the well-known independent set problem restricted to regular graphs:


Download : Download high-res image (75KB)
Download : Download full-size image
Example 4

The instance  of RIS, where 
 is 2-regular with 
, 
, 
, 
 allows a positive decision, since 
 defines an independent set of size 2 for .

It is well-known that RIS is -complete, see for example [29]. The proofs of both Theorem 2.1 and Theorem 2.2 base on parameterized reductions of RIS. In particular, for the proof of Theorem 2.1, we will restrict ourselves to the types . The claim for the remaining types of this item then follows by Lemma 2. The reductions for Theorem 2.1 and Theorem 2.2 differ in detail. However, they follow a common main idea that we introduce in the following.

In the remainder of this section, unless explicitly stated otherwise, let  be an arbitrary but fixed input of RIS with edge set 
 such that 
 and (without loss of generality) 
 for all . Moreover, let  be the number such that  for all .

Of course, on the top-level, the target of the reduction is a pair  that consists of a TS A and a natural number d such that A has a d-restricted τ-admissible set if and only if  has an independent set of size κ. In the following, we give some basic ideas on how we ensure that a τ-admissible set of A guarantees the existence of a sought independent set.

First of all, for every  the TS A has a directed labeled path 
 on which the nodes of the edge 
 occur as events: Moreover, by construction, the TS A has an ESSA α, such that the following condition is satisfied: If  is a τ-region of A that solves α, then there are exactly rκ indices 
 such that 
 and 
 for all . As a result, for all , the image 
 of 
 under R is a path from 1 to 0 in τ. Hence, there is an element 
 such that . Now the following is to observe: Firstly, if two distinct  correspond to node events such that , then , that is, X and Y are independent. Otherwise, there would be  such that 
 and the image 
 of the path 
 on which the nodes occur as events would be a path

Image 19
in τ. This is a contradiction, since
Image 20
implies 
 and  is not defined at 0. Consequently, the set  defines an independent set. Secondly, since every node is adjacent to exactly r other nodes, that is, it is a member of exactly r edges, there have to be at least κ node events with an  signature in order to satisfy that every one of the rκ paths 
 has a node event whose signature equals . As a result, the set  contains at least κ nodes, which makes it a sought independent set for . Hence, if there is a τ-admissible set for A, which implies its τ-ESSP, then α is τ-solvable and thus  has a sought independent set.
Conversely, if there is a sought independent set for , then the construction of A ensures that there is a d-restricted τ-admissible set for A.

In the following, we present the construction of  according to the studied types of nets.

Proof of Theorem 2.1.  Unless explicitly stated otherwise, let  be arbitrary but fixed. For a start, we define . The TS A has the following gadget H with events 
 and 
 that provides the announced ESSA 
: Moreover, for every , the TS A has the following gadget 
 that represents 
 by applying 
 and 
 as events and, particularly, provides the announced path 
. Moreover, the gadget 
 has exactly rκ events 
 that occur consecutively on a path. If  and , then we say 
 is the j-th a-event associated with 
:

Finally, for every , the TS A has the following gadget 
:

Notice that, for all , the gadget 
 applies the j-th a-event of 
, and the events 
 occur consecutively in a row.

The initial state of A is 
. Fresh events 
 and 
 join the introduced gadgets H, 
 and 
 into the TS A and make all states reachable from 
. More exactly, for all , the TS A has the edge

Image 24
, and it has the edge
Image 25
. Moreover, A has the edge
Image 26
and, for all , the edge
Image 27
. The resulting TS is 
, and it is easy to see that  is obtained by a parameterized reduction. Notice that Fig. 7 provides a full example of the TS A, which results from the input of Example 4.
Fig. 7
Download : Download high-res image (230KB)
Download : Download full-size image
Fig. 7. An example of TS A corresponding to Theorem 2.1 that bases on the instance of Example 4. The red colored area corresponds to the region R1 that is defined in Lemma 5 and solves α = (k1,h0). The TS A is also a part of the reduction for Theorem 2.2. Both the red and the green colored area then correspond to the region R1 of Lemma 13 that solves α. (For interpretation of the colors in the figures, the reader is referred to the web version of this article.)

Lemma 3

If there is a τ-admissible set for A, then there is an independent set with at least κ elements for .

Proof

Since there is a τ-admissible set for A, there is a τ-region that solves 
. Let  be such a region. Obviously, 
 and 
 is not possible, since this would imply

Image 28
, a contradiction. Hence, 
 and 
, which implies 
 and thus 
. According to the introduction of our general approach, it suffices to show that there are rκ indices 
 such that 
 and 
 for all : Let  be arbitrary but fixed. By 
 and 
, we get 
 and 
. Consequently, the image of the path
Image 29
under R is a path from 1 to 0 in τ. Hence, there is an  such that 
 and this index is unique, since  cannot occur twice on such a path. By 
, we have 
, and by 
 we get 
. Since there is no path from 0 to 1 in τ, this implies 
. By the arbitrariness of j, this implies that there are rκ pairwise distinct events 
 selecting rκ distinct 
 (representing 
) such that 
 and 
 for all . As argued in the introduction of our approach, this implies that  defines an independent set of  of size at least κ. □
For the opposite direction, we assume that  is an independent set of  that satisfies  and argue that A has a τ-admissible set  of d-restricted regions. To do so, we present a series of lemmas that – step by step – prove for the individual events that they are τ-solvable by d-restricted regions. All presented regions  are defined implicitly, that is, by the support value of the initial state 
 and sig. In particular, we let 
 for all regions and thus restrict ourselves to the definition of sig.

Lemma 4

The event 
 is τ-solvable by d-restricted τ-regions.

Proof

Let  be arbitrary but fixed and let 
 be the pairwise distinct indices such that 
 for all . The following region 
 solves 
 for all 
 and all 
: for all , if 
, then ; otherwise .

The following region 
 solves 
 for all 
: for all , if 
, then 
; if 
, then ; otherwise . Of course, 
 is to be ignored if .

Since i was arbitrary, this shows that 
 is τ-solvable by d-restricted τ-regions for all relevant states of 
 and H.

The following region 
 solves 
 for all 
: for all , if 
, then ; if 
, then ; otherwise . Notice that this region satisfies .

Let  be arbitrary but fixed and let 
 be the distinct indices (different from 0!) such that 
 for all . The following region 
 solves 
 for all 
; for technical reasons, we have to differentiate the three cases (1)  and (2)  and (3) :

(1): for all , if 
, then , else .

(2): for all , if 
, then , else .

(3): for all , if 
, then , else . □

Lemma 5

If there is an independent set with κ elements for , then 
 is τ-solvable by d-restricted τ-regions.

Proof

Let  be an independent set with κ elements for . Recall that every  is a member of r different sets. Hence, there are exactly rκ indices 
 such that 
 for all . The following region 
 solves α: for all , if 
, then ; if 
, then ; otherwise . Notice that . Moreover, Fig. 7 sketches 
, where the red area corresponds exactly to the states that are mapped to 0.

The following region 
 solves 
 for all  that satisfy

Image 30
: for all , if 
, then , else .
The following region 
 solves 
 for all 
: for all , if 
, then ; if 
, then , else .

It remains to argue for the ESSA that involve states of 
. Let  be arbitrary but fixed. The event 
 occurs at 
 and the ESSA 
 is already solved by 
. In the following, we define the region 
 that solves 
 for all remaining 
. Let 
 be the  pairwise distinct indices such that 
 for all . (
 are exactly the sets of M that contain the node 
.) In order to define 
 appropriately, we distinguish the three cases (1)  and (2)  and (3)  and let, for all , if 
, then 
 and

(1): if 
, then , else .

(2): if 
, then , else .

(3): if 
, then , else .

Notice that  is always true for 
. □

Lemma 6

If 
, then e is τ-solvable by d-restricted regions.

Proof

Let  and  be arbitrary but fixed.

The following region 
 solves 
 for all 
: for all , if 
, then ; if 
, then , else .

Next, we argue that 
 is τ-solvable for all relevant 
. If , then we are already finished, since the region 
 as defined in Lemma 4 solves the corresponding ESSA. Let's consider the case : Let 
 select the  remaining sets that contain 
, that is, 
 for all . Moreover, let 
 be pairwise distinct.

The following region 
 solves 
 for all 
: for all , if 
, then ; if 
, then , else . Notice that 
 also solves 
.

The following region 
 solves 
 for all 
: for all , if 
, then , else .

In order to complete the proof of this lemma, it remains to argue, that 
 is accordingly solvable for all relevant 
. The (just defined) region 
 solves 
 for all . Hence, if , then we are already finished. Let's consider the case . Let 
 select an arbitrary but fixed (node) event that does not occur in 
 (which exists, since 
). Let 
 select the  other occurrences of X, that is, 
 for all . Moreover, let 
 be pairwise distinct. The following region 
 solves 
 for all 
: for all , if 
, then ; if 
, then , else . □

Lemma 7

If , then it is τ-solvable by d-restricted regions.

Proof

Let  be arbitrary but fixed and let 
 be the pairwise distinct indices such that 
 for all .

The following region 
 solves  for all 
: for all , if , then , else .

Let  be arbitrary but fixed. In order to complete the proof, we have to argue that  is solvable for all relevant states of 
.

Let 
 and let 
 be pairwise distinct. The following region 
 solves  for all 
 and if 
, then also for 
: for all , if 
, then , else .

Notice that if 
, then we are already finished. Let's consider the case that 
, that is, we have to solve 
. Let 
 select the other  occurrences of 
, that is, 
 and, particularly, 
 for all . Let 
 be pairwise distinct. The following region 
 solves 
: for all , if , then ; if 
, then ; if 
, then , else . □

Lemma 8

If 
, then e is τ-solvable by d-restricted regions.

Proof

Let  be arbitrary but fixed. The following region 
 solves 
 for all 
 and 
: for all , if 
, then ; if 
, then , else .

The following region 
 solves 
 for all relevant 
 and for all 
: for all , if 
, then , otherwise , where we simply ignore 
 if . This completes the proof. □

Lemma 9

If 
, then e is τ-solvable by d-restricted regions.

Proof

The following region 
 solves 
 for all relevant : for all , if 
, then , else .

Let  be arbitrary but fixed. The following region 
 solves 
 for all 
: for all , if 
, then , else .

The following region 
 solves 
 for the remaining relevant states, that is, for all 
: for all , if 
, then ; if 
, then , else . This completes the proof. □

The following lemma is essentially a corollary that follows from Lemma 4 to Lemma 9 and finally completes the proof of Theorem 2.1:

Lemma 10

If there is an independent set with κ elements for , then there is a τ-admissible set of d-restricted regions for A.

Proof

It is easy that if 
, then e is τ-solvable by d-restricted regions. Hence, by the statements from Lemma 4 to Lemma 9, there is a set  of d-restricted τ-regions that witnesses the τ-ESSP of A. Moreover, one easily finds out, that the corresponding regions solve also all SSA of A. Hence the claim. □

Proof of Theorem 2.2.  In order to prove Theorem 2.2, we again present a parameterized reduction of RIS to τ-SOBNWRD, which reduces an input  to a pair  such that there is an independent set with κ elements for  if and only if there is a τ-admissible set of d-restricted regions for A. In particular, the current reduction extends the one presented for the proof of Theorem 2.1: We first define . The current TS A has all the states and edges of the TS, defined for the proof of Theorem 2.1. Furthermore, for all  and all , the current TS A has the following gadget 
 that applies the event 
:

These gadgets are connected with 
 and, moreover, with each other by The result is the TS 
. Fig. 8 shows the gadgets 
 that occur from Example 4 and the edges that connect them. For convenience, we define 
 and 
 and 
 and 
 and 
 and 
 and 
.

Fig. 8
Download : Download high-res image (216KB)
Download : Download full-size image
Fig. 8. The gadgets F0,0,…,F3,3 of the TS A according to the reduction for Theorem 2.2 based on Example 4. The green colored area corresponds to the region R1 of Lemma 13 that solves α = (k1,h0).

Lemma 11

If there is a τ-admissible set for A, then there is an independent set with κ elements for .

Proof

Since there is a τ-admissible set for A, there is a τ-region that solves 
. Let  be such a region. Since R solves α, we have either 
 and 
 or 
 and 
. We restrict ourselves to the former case, since the arguments for the latter are similar. So be 
 and 
, which immediately implies 
 and thus 
. By 
 and 
, we get 
, implying 
, and 
 for all  and all . Hence, since all a-events have a signature that is different from , similar to the proof of Lemma 3, one argues that there are exactly rκ different indices 
 such that 
 and thus 
 for all . This makes  a sought independent set of . □

For the opposite direction, we again present a series of lemmas that treat the events of A individually and, altogether, show that they are solvable by d-restricted τ-regions. Moreover, the corresponding regions witness also the τ-SSP of A.

Lemma 12

The event 
 is τ-solvable by d-restricted regions.

Proof

Let  be arbitrary but fixed. The region 
 of Lemma 4 is also a τ-region. Hence, we are allowed to consider 
 to be solved for all 
.

The following region 
 solves 
 for all 
: if , then 
, otherwise 
; for all , if 
, then ; if 
, then ; if  and 
, then ; otherwise . Of course, if , then we simply ignore 
.

Let  be arbitrary but fixed. Let 
 select the  distinct sets that, besides of 
, contain the node 
, that is, 
 for all . Moreover, let 
 be pairwise distinct. The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then ; if  and 
, then ; otherwise .

One easily finds out that 
 can be solved for all 
 by regions that are defined similar to 
 for all  and all . This proves the lemma. □

Lemma 13

If there is an independent set with κ elements for , then 
 is τ-solvable by d-restricted regions.

Proof

Let  be an independent set of size κ of . Moreover, let 
 select the exactly rκ sets of M that intersect with , that is, 
 for all . The following region 
 solves α: 
; for all , if 
, then ; if 
, then , else . Notice that .

One easily finds out that 
 is properly τ-solvable for all 
. (Especially since 
 does not occur in 
, 
 for all  and all .)

Let  be arbitrary but fixed. Moreover, let 
 select the  sets that, besides of 
, contain the node 
, that is, 
 for all . Eventually, let 
 be pairwise distinct. The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then ; if 
, then , else . Notice that . □

Lemma 14

If 
, then e is τ-solvable by d-restricted regions.

Proof

Let  and  be arbitrary but fixed.

We first deal with the ESSA that originate from the states of 
: Notice that the region 
 of Lemma 12 solves 
 for all relevant states of 
. Hence, we assume that . The following region 
 solves 
 for all 
, where we differentiate between the three cases (1)  (implying that  and  exist) and (2)  and (3) : 
; for all , if 
, then ; if 
, then ;

(1): if 
, then ; if 
, then , else .

(2): if 
, then ; if 
, then , else .

(3): if 
, then ; if 
, then , else .

The following regions complete the solvability of 
 for all remaining states of 
 (that is 
); again we have to differentiate the three cases (1)  and (2)  and (3) :

(1): The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else . To solve 
 for all 
, we use a region 
, which is defined similar to 
, but maps 
 to  and 
 to .

(2): The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

(3): The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else . The region 
 that solves 
 for all 
 is defined similar to 
, but maps 
 to  and 
 to .

Let's consider the ESSA 
 such that 
. We differentiate the simple case (1)  and the more difficult case .

(1): The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

(2): The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

Let 
 the  distinct indices such that 
 for all , and let 
 be pairwise distinct. The following region 
 solves 
 for all 
: 
; for all , if 
, then , else .

It is easy to see that there are regions that are similar to the just presented ones and, altogether, solve 
 for all 
. □

Lemma 15

If , then X is τ-solvable by d-restricted regions.

Proof

Let  be arbitrary but fixed, and let 
 be the pairwise distinct indices such that 
 for all .

The following region 
 solves  for all 
: 
; for all , if 
, then ; if 
, then , else .

Notice that this region 
 also solves  for all 
. Obviously, 
 can be modified in a way that 
 are mapped to  and 
 are mapped to  (with the necessary modifications of the v- and w-events). Thus,  can also be solves for all 
. Similarly, one argues that  is also solvable for all 
.

It remains to argue that  is solvable for all relevant 
. Let  be arbitrary but fixed. The following region 
 solves  for all 
 and if 
, then also for 
: 
; for all , if 
, then , else .

It remains to consider the case 
 and to solve 
. Let 
 select the other occurrences of 
 in M. The following region 
 solves 
: 
; for all , if 
, then ; if 
 or 
 or 
 or 
, then , else . Notice that 
 satisfies . We can assume  and thus . This is the case, since

Image 33
is solvable in polynomial time if . □
The following lemma essentially states that the remaining events of A are also τ-solvable by d-restricted regions. Since this statement is easy to verify, we provide the lemma without proof:

Lemma 16 Without Proof

If , then e is τ-solvable by d-restricted regions.

Finally, the following lemma completes the proof of Theorem 2.2:

Lemma 17

If  has an independent set of size κ, then A has a τ-admissible set of d-restricted regions.

Proof

It is easy to see that if 
 are states of A that belong to different gadgets, then the corresponding SSA 
 is τ-solvable by a d-restricted region. Otherwise, if the distinct states s and 
 belong to the same gadget, then one of regions of Lemma 12 to Lemma 16 already solves the SSA 
. Since these regions also witness the τ-ESSP of A, the claim follows. □

3.2. -hardness by reduction of Odd Set
The following theorem addresses the types of Fig. 6 §4 and §5 and states that τ-SOBNWRD is -hard for these types:

Theorem 3

τ-SOBNWRD is -hard if τ is a Boolean type of nets such that

1.
 with  and  or

2.
 with  and .

The proof of Theorem 3 bases on reductions of the problem

Image 34
, which is known to be -complete [29]:

Download : Download high-res image (49KB)
Download : Download full-size image
Example 5

The instance  with 
 such that 
, 
, 
 and 
 allows a positive decision, since 
 is a fitting odd set for .

It is noteworthy, that the unrestricted τ-Synthesis problem is tractable for the types of Theorem 3. In particular, τ-SOBNWRD has not yet been characterized from the point of view of classical complexity theory. However, just like before, our parameterized reductions are also polynomial-time reductions. Hence, for these types, we show NP-hardness (and thus NP-completeness) and -hardness of τ-SOBNWRD at the same time.

The proof of Theorem 3.1 and the proof of Theorem 3.2 require different reductions. This results, for example, from the fact that if τ is a type of Theorem 3.2, then an ESSA  is not τ-solvable if e is a target of s, that is,

Image 35
. Hence, every target of e has also to be a source of e. Unfortunately, this easily leads to unsolvable ESSA if, for example, . Consequently, the reductions have to be different. However, both reductions follow a common principle that can be sketched as follows. In the remainder of this section, until stated explicitly otherwise, let  be an arbitrary but fixed input of OS such that 
 and 
, where 
 (and thus 
) for all .
We reduce  to an input  of BτRMBP such that there is a sought odd set for  if and only if there is a τ-admissible set of d-restricted regions for A. By construction, we have  for a linear function f. Moreover, the TS A has a path 
 that represents the set 
 for all . In particular, the elements of 
 occur on 
 as events in accordance to the following sketch:

Let  be arbitrary but fixed. By construction, the TS A has an ESSA α such that the following implication is satisfied: if  is a d-restricted τ-region that solves α, then 
. Consequently, the image 
 of 
 under R is a path from 0 to 1 or a path from 1 to 0 in τ. On the one hand, this implies that there is an element 
 whose signature  causes this change of state in τ. For the current types, it is true that  causes such a change of state if and only if . In particular, 
 implies  for every edge

Image 37
of A. On the other hand, the number of state changes between 0 and 1 on the path 
 must be odd. In other words, the number 
 is odd. The following figure sketches the situation for 
 and 
 and 
 and  for all 
:
By the arbitrariness of i, this is simultaneously true for all paths 
, which represent the sets 
. Hence,  is an odd set for . Moreover, the region R is d-restricted, and the construction ensures  by the parameter. Consequently,  defines a sought odd set for .

For the opposite direction, the construction of A and d ensures that there is a τ-admissible set of d-restricted regions if there is an odd set with at most κ elements for . In the following two subsections, we provide the announced reductions and prove their functionality.

Proof of Theorem 3.1.  First of all, we define . The TS A has the following gadget H, which provides the ESSA 
:

Moreover, for all , the TS A has the following gadget 
 that represents the set 
 by using its elements as events:

Finally, we obtain the announced TS by connecting the individual gadgets in a suitable way. Since we have to ensure that all ESSA of A are τ-solvable by d-restricted regions, it requires a lot of effort to connect the gadgets correctly. In order to not lose track of the gadgets functionality, we postpone the introduction of the connecting edges for a moment. Instead, we first show that the introduced gadgets already enable us to conclude from the τ-solvability of α by a d-restricted region to an odd set with at most κ elements if of :

Lemma 18

Let A be a TS that has the gadgets H and 
. If there is a τ-admissible set of d-restricted regions of A, then there is an odd set with at most κ elements of .

Proof

Since there is τ-admissible set  of d-restricted regions of A, there is a d-restricted τ-region that solves α. Let  be such a region, that is, we have either  and 
 or  and 
. In the following, we only discuss the case  and 
, since the other case is symmetric to this one.

For a start, let's discuss the case  and 
. Let  be arbitrary but fixed. Since , we get 
 and 
. By 
, we conclude  and . Since 
, this implies  and thus 
. Hence, the image 
 of the path

Image 41
under R is a path from 0 to 1 in τ. This implies that the number of changes between 0 and 1 along this path 
 is odd. Moreover, for all 
, the signature 
 of 
 causes such a change of state if and only if 
. This immediately implies, that the number 
 is odd. Since i was arbitrary, the set  satisfies that 
 is odd for all . Moreover,  is true, since  and  and . Hence,  is a sought odd set of .
Let's discuss the case where  and 
. Let  arbitrary but fixed. By , we get 
. By 
 and 
, we conclude  and . Since 
, this implies  and thus 
. Consequently, the image 
 of the path

Image 42
under R is a path from 1 to 0 in τ. Similar to the former arguments, one obtains that  is an odd set with at most κ elements for . □
In the following, we introduce how the individual gadgets are connected to finally build the TS A. Since we have to ensure that all the ESSA of A are solvable by d-restricted τ-regions, connecting the gadgets suitably is elaborate and needs a lot of additional edges and states. In order to keep the reader on board, we will introduce the necessary ingredients step by step and provide as much of basic intuition as possible.

Actually, we would like to connect the gadgets essentially via their initial states 
 and 
 along a simple directed path whose events occur only once. However, we have to ensure the existence of the mentioned regions. Hence, for all , we first extend the gadget 
 to a gadget

Image 43
, where 
 is a directed path that is composed of so-called relevant paths. These relevant paths originate from the necessity to solve, for all 
, the event e at all the states of 
 that – along 
 – occur before the unique source of e in 
. In order to connect 
 and H, which yields A, we then apply the edge
Image 44
for all . The resulting TS 
 is a (directed labeled) tree with initial state 
 and can be sketched as follows:
In order to obtain a more detailed understanding of the intuition behind the relevant paths, let 
 and 
 be arbitrary but fixed. The ESSA 
 has to be solved. We aim for a d-restricted τ-region  such that 
 and . If 
, that is, s occurs after the source of 
 in 
, then we obtain a fitting region as follows: 
 and 
 and  for all 
. In particular, R maps exactly the successor states of the sources of 
 in A to 0 and all the other states to 1. R is well-defined, since 
 never occurs twice along the same path. The following figure sketches the situation restricted to 
:

If 
, that is, s occurs before the source 
 of 
 in 
, then we want to define  with 
 in such a way that – restricted to 
, respectively 
 – only the source 
 of 
 in 
 is mapped to 1 and, moreover, 
 and 
 is satisfied. The following figure sketches the situation for 
:

In particular, the only aim of the events 
 with  is to ensure that  is satisfied for every source q of 
 in A. Of course, the number of these events shall be small, that is, we want to respect the parameter. Now let  be arbitrary but fixed such that 
. That is, there is 
 such that 
. In order to define R suitably, we have to consider the following two cases: Firstly, the case 
, that is, there is a 
 with 
, and, secondly, the case 
. The first case is convenient: Since 
, we have 
 and by 
 we already get 
 for the source of 
 in 
. The following figure sketches the situation:

If we deal with the second case, that is, 
, then we need along the sub-path of 
 that starts at 
 and terminates at 
 an event e, whose signature ensures 
. Certainly, we have to ensure that e and its signature do not interfere with the situation in 
 sketched above, that is, . Hence, we need e to be a new event that occurs on the path between 
 and 
. The following figure sketches the situation for 
 and 
:

Now it is very important to observe the following: The element 
 can be a member of many different sets of M of which 
 is not a member. Let's say that 
 are exactly these (pairwise distinct) sets, where 
. The situation sketched above happens now in every gadget 
. If we apply for every 
 its own 
, which is then mapped to  in order to satisfy  for the source q of 
 in 
, then we obtain 
 for the region . Unfortunately, the number of occurrences of 
 in M is not bounded by the parameter κ, but possibly depends on the size of M. In such a case, R would not respect the parameter. (These thoughts also show, why we do not use the events 
, which have a unique occurrence in A.) On the other hand, if we use the same event y for all 
, which has the described functionality for the sources of 
, then the sketched problems are transferred from 
 to y and its corresponding ESSA.

We obtain a solution for these issues by the application of relevant paths (of 
), instead of single events. In the following, we formally introduce the notion of relevant paths, which ensure that we obtain  for the sources of 
 in a way that respects the parameter.

Let  be arbitrary but fixed. In order to be able to refer uniformly to the events 
 and w, we define 
 for all 
 as well as 
. Let 
 be arbitrary but fixed and let 
 be exactly the indices distinct from i such that 
 and 
 for all . (Notice that possibly .) For all , we say that (the event) 
 is relevant for 
. Furthermore, it is the relevant path of 
 caused by 
 and its occurrence at j-th position in 
. We also say that 
 are the relevant paths (of A) caused by 
 and its occurrence at j-th position in 
.

Armed with these concepts, if  is arbitrary but fixed, then we are now able to define the gadgets 
: If there are no relevant paths for 
, then

Image 51
. Otherwise, let 
 with 
 and 
 be the events, which are pairwise distinct with respect of their occurrences and position in the T-gadgets of A, that are relevant for 
 and let 
 be the corresponding relevant paths of 
. We obtain 
 by the connection of the paths as follows: We say 
 are the c-events of 
 and, for convenience, define 
.
The following example completely develops the TS A that results from Example 5:

Example 6

The gadgets 
 for the instance of Example 5 are defined as follows:

In the following, we successively determine all relevant paths of A:

1.
 is (only) relevant for 
, since 
. The relevant path is

2.
 is relevant for 
 and 
, since 
. We obtain the following relevant paths, caused by w and its occurrence at second position in 
:

3.
 is (only) relevant for 
, since 
. The relevant path is

4.
 is relevant for 
 and 
, since 
. We obtain the following relevant paths, caused by w and its occurrence at second position in 
: Notice that 
, but the relevant paths caused by w and its occurrence at second position in 
 are different from the relevant paths caused by w and its occurrence at second position in 
.

5.
 is (only) relevant for 
, since 
. The relevant path is

6.
 is relevant for 
 and 
, since 
. We obtain the relevant paths

7.
 is (only) relevant for 
, since 
. The relevant path is

8.
 is relevant for 
 and 
, since 
. We obtain the relevant paths

The TS A, based on Example 5, can now be sketched as follows, where we abridge the relevant paths by their names:

In the following, we show that there is a τ-admissible set of d-restricted regions for A if there is a fitting odd set for . By the following lemma, for many events of A, we can restrict ourselves to the ESSA  such that, firstly, s occurs along a path before a and, secondly, a and s occur in the same gadget of A:

Lemma 19

Let  be an event of A and

Image 63
a path of A on which a occurs and 
 a gadget of A on which a does not occur: . If a occurs only once on every path of A, then the ESSA  is solvable by a d-restricted τ-region for all 
 and for all .
Proof

The following τ-region  solves  for all 
: 
; for all , if , then , else .

The following τ-region  solves  for all , where 
 for a : if , then 
, else 
; for all , if , then ; if 
, then , else . Analogously, one finds a region for the case . □

Notice that – except for k – every event of A satisfies the requirements of Lemma 19. In the following, we deal with the events of A and their corresponding ESSA individually and prove their solvability.

Lemma 20

If there is an odd set with at most κ elements for , then k can be solved by d-restricted τ-regions.

Proof

Let  be an odd set with at most κ elements for .

(k): The following region 
 solves  for 
 and for all

Image 64
: 
; for all , if , then ; if , then , else . Since , we have .
Let  be arbitrary but fixed. The following region 
 solves  for all relevant 
: if , then 
, otherwise 
; for all , if , then ; if 
, then , else .

Similarly, 
 can be solved by a fitting region. Since i was arbitrary, the claim follows. □

Lemma 21

The event w is solvable by d-restricted τ-regions.

Proof

Let  be arbitrary but fixed. The following region 
 solves  for all 
 and all 
: 
; for all , if , then ; if , then , else .

The following region 
 solves  for all 
 and uses the relevant paths that are defined for 
 (if they exist) or, more exactly, the corresponding event 
 (if it exists): 
; for all , if , then ; if 
, then , else .

By the arbitrariness of i and Lemma 19, we obtain the τ-solvability of w by d-restricted regions. □

Lemma 22

If , then X is τ-solvable by d-restricted regions.

Proof

Let  and 
 be arbitrary but fixed. For all 
, the solvability of 
 follows by a region that is similar to 
 of Lemma 21. For all 
, the solvability of 
, which particularly implies , follows by a region that is similar to 
 of Lemma 21 and uses the relevant paths for 
 or, more exactly, the event 
 (if it exists). Lemma 19 completes the τ-solvability of 
 by d-restricted regions. By the arbitrariness of i and j, this proves the lemma. □

Let's deal with the events of the relevant paths.

Lemma 23

If 
 is an event of A, then e can be solved by d-restricted τ-regions.

Proof

Let  and 
 be arbitrary but fixed. Moreover, let 
 be exactly the pairwise distinct indices such that 
 are the relevant paths that are caused by 
 and its occurrence at j-th position in 
. That means, we have to show the τ-solvability of the events 
 and 
.

Let  be arbitrary but fixed. It is easy to see that 
 can be solved by a 2-restricted τ-region: The events 
 as well as the unambiguous c-event 
, which is the direct predecessor of 
, occur exactly once in A. Hence, the region 
 with 
, 
 and  as well as  for all 
 is well-defined and solves 
.

It remains to discuss the τ-solvability of the events 
. Let  be arbitrary but fixed. The event 
 is the direct predecessor of 
 in 
. Moreover, 
 is the direct predecessor of 
 in all gadgets 
 if . Otherwise, 
 occurs exactly once in A, namely in 
. The following region 
 solves 
: 
; for all , if 
, then ; if 
, then , else . Fig. 9 sketches 
 for  restricted to 
. □

Fig. 9
Download : Download high-res image (90KB)
Download : Download full-size image
Fig. 9. A sketch of the region R6 of Lemma 23 for the case ℓ = 1 that solves the event 
, restricted to the relevant paths 
. The green area corresponds exactly to the states with a positive support. It is easy to see, in which way this snippet can be extended to A without increasing the number of events whose signature is different from .

The following lemma completes the proof of Theorem 3.1:

Lemma 24

If there is an odd set with at most κ elements for , then there is a τ-admissible set of d-restricted regions for A.

Proof

It is easy to see that the events 
 and 
 of the gadget 
 can be solved by d-restricted regions for all . One easily finds out that the same is true for the events 
. The τ-solvability of the other events follows from Lemma 20 to Lemma 23. Finally, the discussed regions, which witness the τ-ESSP of A, also witness the τ-SSP of A. This proves the lemma. □

Proof of Theorem 3.2.  For a start, we define . After that, we proceed with the construction of A. It is an essential aspect of τ that if

Image 1
is an edge of A, then an ESSA 
 is not τ-solvable. This results from the fact that if , then 
 is always implied. Hence,  and
Image 65
is not possible. To deal with this obstacle, the construction ensures that if
Image 1
is an edge of A, then the edge
Image 66
is also present in A. We denote this graphically by a bi-directional edge
Image 67
.
The TS A has the following gadgets 
 and 
 that provide the ESSA 
:

Furthermore, for all , the TS A has the following gadget 
, which represents the set 
 by applying its elements as events:

Moreover, for all , we extend the gadget 
 to the gadget

Image 70
. In particular, the path 
 is again the connection of the relevant paths 
 that are similarly defined to the ones for the proof of Theorem 3.1. Only the following exception is to consider: Every event e occurs at a bi-directional edge, that is, where there was only the edge
Image 1
before, there is now also the edge
Image 71
. Finally, in order to connect the introduced gadgets, for all , we add the bi-directional edges
Image 72
and
Image 73
and
Image 74
. The resulting TS 
 can be sketched as follows:
The proof of the following lemma analyzes the functionality of the gadgets of A:

Lemma 25

If there is a τ-admissible set of d-restricted regions of A, then there is an odd set with at most κ elements for .

Proof

Since there is a τ-admissible set of d-restricted regions, there is a d-restricted τ-region that solves α. Let  be such that region, which implies either  and 
 or  and 
. In the following, we discuss only the case  and 
, since the arguments for the other one are similar.

Let  be arbitrary but fixed. Since , we get 
 for every edge

Image 76
of A. By 
 and 
, we get immediately . Moreover, by 
, we conclude that the image 
 of the path
Image 77
is a path from 1 to 1 in τ. This implies that the number of state changes along this path 
 is even. Hence,  is even. By , we obtain that there is exactly one further event  such that . In the following, we only discuss the case  and , since the case  and  is similar.
Since  and , we obtain that

Image 78
implies 
 and
Image 79
implies 
 for all edges
Image 78
and
Image 79
of A. By 
, this implies 
 and 
. In particular, the image 
 of the path
Image 80
is a path from 1 to 0 in τ. This implies that the number of state changes between 1 and 0 along this path –and thus the number 
– is odd. Since i was arbitrary, we conclude that if , then the number 
 is odd for all . Moreover, since R is -restricted and  for all , we also have . This proves the lemma. □
In order to complete the proof of Theorem 3.2, it remains to show that if there is an odd set with at most κ elements for , then there is a τ-admissible set of d-restricted regions of A. Again, we treat the events of A individually. For the sake of simplicity, we discuss only the case  and get along with regions that use only  and . By  and Lemma 2, it follows that there is also a fitting τ-admissible set if , since the latter implies . Moreover, the following observation also allows to simplify the proof: It is easy to see, that if  is an ESSA of A such that e and s occur in different gadgets, then  is suitably solvable: one defines the obvious region that maps e to  and the states of the unique gadget in which s occurs to 0 and all the other states to 1. (Of course, the signature of the events of  can be defined suitably.) Hence, in the following, we restrict ourselves to ESSA  for which e and s belong to the same gadget.

Lemma 26

If there is an odd set with at most κ elements for , then k is solvable by d-restricted τ-regions.

Proof

Let  be an odd set for , which satisfies .

The following region 
 solves α: 
; for all , if , then ; if , then , else . Since , we have that 
 is -restricted.

Let  be arbitrary but fixed. The following region 
 solves  for all 
 and all relevant 
: if , then 
, else 
; for all , if , then ; if 
, then , else .

Obviously,  is suitably solvable for all 
. Since i was arbitrary, the claim follows. □

Lemma 27

The event y is solvable by d-restricted τ-regions.

Proof

Let  be arbitrary but fixed.

The following region 
 solves  for all 
 and all 
: 
; for all , if , then ; if 
, then , else .

The following region 
 solves  for all relevant 
: if , then 
, else 
; for all , if , then ; if 
, then , else . Since i was arbitrary, the claim follows. □

Lemma 28

If there is an odd set with at most κ elements for , then there is a τ-admissible set of d-restricted τ-regions for A.

Proof

Obviously, if , then e can be solved by d-restricted regions. By Lemma 26 and Lemma 27, the same applies to k and y. Hence, regarding the τ-ESSP of A, it remains only to discuss the events of : It is easy to see, that every event of  can be suitably solved. For the other events, one finds regions that are similar to the ones of Lemma 21 for w, Lemma 22 for  and for Lemma 23 for . Of course one has to observe that the event, which has to be solved, should be mapped to  instead of : For example, for the region 
 of Lemma 21, if one simply replaces  by , then one gets a region of the current TS A that solves  for all 
. Finally, one easily finds out that the d-restricted regions that witness the τ-ESSP of A, also witness the τ-SSP of A. □

3.3. -hardness by reduction of Hitting Set
In this section, we provide a lower bound for the parameterized complexity of τ-SOBNWRD for the types of nets of Fig. 6 §6 - §9. More exactly, we will show that the problem is at least -hard for these types. The following theorem summarizes our findings:

Theorem 4

τ-SOBNWRD is -hard if τ is a Boolean type of nets such that

1.
 or ,

2.
 with  and ,

3.
 or  or  or  and ,

4.
 or .

The proof of Theorem 4 bases on parameterized reductions of the problem Hitting Set, which is known to be -complete [29]:


Download : Download high-res image (50KB)
Download : Download full-size image
Example 7

The instance  with 
 and 
, where 
, 
, 
 and 
, allows a positive decision, since 
 defines a fitting hitting set of .

For every item of Theorem 4, the corresponding types need their own particular reduction. However, all the (four) necessary reductions follow a common approach. The main idea of this approach is similar to the one presented in Section 3.2: We reduce the input  of HS to a pair , such that there is a τ-admissible set of d-restricted regions of A if and only if there is a hitting set with at most κ elements for . In order to achieve this goal, for every , the TS A has a path 
 that represents the set 
 by using its elements as events:

Moreover, we construct an ESSA α, such that if  is a d-restricted τ-region that solves α, then 
 for all . As a result, there is an element 
 such that , since the image 
 of 
 under R is a path from 0 to 1 or a path from 1 to 0 in τ. The following figure sketches the situation for 
 and 
 and 
 and  for all 
 (where  is arbitrary but fixed): The set  then satisfies 
 for all . Furthermore, by , we ensure that  is true. So far, the current approach is similar to the one of Section 3.2. The main difference is the fact that the signature  of τ can potentially both state changing and state preserving, namely if . For example, in the situation sketched above, there can be arbitrarily many events in 
 that have a -signature as long as there is at least one of them with such a signature (which is not followed by ,  or ). In particular,

Image 83
is a path in τ. On the one hand, this means – as for the previous reductions of RIS or OS – a sought set  for  can be defined by the elements of , whose signature (possibly) causes a change of state τ. On the other hand, the set 
 is not subject to any further restrictions as, for example, having just one event like for RIS or, for example, being odd like for OS.
The property, that potentially arbitrarily many events of 
 can have a -signature (or a -signature, depending on τ), is also particularly relevant for finding a d-restricted τ-region  that solves α. The existence of R, and thus the existence of the paths in τ sketched above, depends on the existence of a sought hitting set , whose elements cause the necessary state changes in τ by their signature. Since  can be both state changing (from 0 to 1) and state preserving (from 1 to 1),  need not to satisfy any other restrictions than 
 for all  and . In that case, exactly the elements of  get a -signature and ensure that 
 is a path from 0 to 1 in τ. (The situation is similar for .) These considerations emphasize that, for the current types, the -hardness of τ-SOBNWRD follows naturally from the presence of  and , according to which interaction is actually present. In particular, it is not easy to see, in which way this approach can be transferred to the types of nets without  and , although τ-SOBNWRD may also be -hard for these types. More generally, the exact classification of the problem in XP is still an open question. Eventually, all in all, the construction of A ensures that there is a τ-admissible set of d-restricted regions, if there is a sought hitting set for .

In the remainder of this section, we present the announced reductions in detail and thus prove Theorem 4.

Proof of Theorem 4.1.  In the remainder of this section, unless explicitly stated otherwise, let  be arbitrary but fixed. We show the statement of Theorem 4.1 for τ. By Lemma 2, this proves the statement also for the types that satisfy .

First of all, we define . The TS A has the same gadgets as the TS constructed for the proof of Theorem 3.1. For the sake of readability, we briefly present these gadgets again: A has the following gadget H, which provides 
: For every , the TS A has the following gadget 
, applying the elements of 
 as events:

In contrast to the TS for Theorem 3.1, the present connection of the gadgets 
 is substantially simpler, since we do not need the relevant paths. Recall that we needed the relevant paths for the construction of d-restricted regions that prove the τ-ESSP and thus, more exactly, the solvability of 
. However, the interaction  allows us to define such regions without those relevant paths, given that a sought odd set exists. We will give a more specific explanation when we are dealing with the solvability of these events. In order to finally build A, for every , we apply the edges

Image 86
and
Image 87
as well as the edge
Image 88
. The resulting TS is 
. Notice that Fig. 10 provides a full example of A, which results from Example 7.
Fig. 10
Download : Download high-res image (84KB)
Download : Download full-size image
Fig. 10. The TS A according to the reduction for the proof of Theorem 4.1 that results from Example 7. The green area sketches the region R1 of Lemma 32 that solves (X3,s) for all s ∈ {⊥2,t2,0,t2,1}.

In the following, we prove the announced functionality of A.

Lemma 29

If there is a τ-admissible set of d-restricted regions for A, then there is a hitting set with at most κ elements for .

Proof

Since there is a τ-admissible set of d-restricted regions of A, there is a d-restricted τ-region of A that solves α. Let  be such a region. Since R solves the ESSA 
, we have either  and 
 or  and 
. In the following, we discuss only the first case, since the second one is similar. So let  and 
.

For a start, we investigate the case  and 
. Let  be arbitrary but fixed. By , we get  and 
 for all edges

Image 1
of A. Moreover, by 
 and 
 we obtain  and . By 
, this implies  and thus 
. In particular, the image 
 of the path
Image 41
is a path from 0 to 1 in τ. Consequently, 
. By the arbitrariness of i, this implies for the set  that 
 for all . Moreover, since  and  and R is -restricted, we also have .
We proceed with the case  and 
. Let  be arbitrary but fixed. By , we get 
 for all edges

Image 1
of A. Moreover, by 
 and 
, we get  and . Furthermore, by 
 and , we obtain  and thus 
. Consequently, since 
, the image 
 of the path 
 is a path from 1 to 0 in τ. Similar to the discussion of the former case, by the arbitrariness of i, we get that  is a hitting set with at most κ elements for . □
For the opposite direction we first investigate the solvability of the events of A by d-restricted τ-regions. Similar to our other reductions, essentially, these regions also witness the τ-SSP of A.

Lemma 30

If there is a hitting set with at most κ elements for , then k is τ-solvable by d-restricted τ-regions.

Proof

Let  be a hitting set for  that satisfies .

The following region 
 solves  for all

Image 89
: 
; for all , if , then ; if , then , else . Obviously, 
 is d-restricted, since .
The following region 
 solves  for all relevant 
: 
; for all , if , then ; if , then , else .

Certainly, for all 
, the ESSA  is τ-solvable by a d-restricted τ-region. □

Lemma 31

The event w is τ-solvable by d-restricted regions.

Proof

Let  be arbitrary but fixed. The following region 
 solves  for all 
 and all 
: if , then 
, else 
; for all , if 
, then ; if 
, then , else .

It is easy to see that, for all 
 and all 
, the ESSA  is τ-solvable by a d-restricted region. Since i was arbitrary, this proves the lemma. □

Lemma 32

If , then X is τ-solvable by d-restricted regions.

Proof

Let  and 
 be arbitrary but fixed.

The following region 
, solves 
 for all 
: if , then 
, else 
; for all , if 
, then ; if  and  or  and 
 then ; if 
, then , else .

Incidentally, at this point, it becomes obvious that we do not need the relevant paths due to the presence of : If 
 and 
 occur both in the same gadget 
 such that , then 
 occurs before 
, since 
. Although, by the definition of 
, it holds  for the unambiguous source s of 
 in 
, in contrast to the interaction , the interaction  forces no change of state in τ. Hence, it holds  for the unambiguous source of 
 in 
, such that 
 is well-defined.

Fig. 10 sketches 
 for 
, that is  and , where the green area corresponds exactly to the states whose support is positive. Notice that 
 also occurs before 
 in 
.

It is easy to see that, for all 
 and all 
, the ESSA 
 can be solved by d-restricted τ-regions. Since i and j were arbitrary, the claim follows. □

Lemma 33

If there is a hitting set with at most κ elements for , then there is a τ-admissible set of d-restricted regions for A.

Proof

It is easy to see, that if , then e can be solved by d-restricted τ-regions. Moreover, it is also easy to see, that all SSA of A are also solvable by d-restricted τ-regions. Hence, by Lemma 30 to Lemma 32, this proves the claim. □

Proof of Theorem 4.2.  In the remainder of this section, unless explicitly stated otherwise, let τ be an arbitrary but fixed type in accordance to Theorem 4.2. For a start, we define . The TS A has the following gadget H, which provides the ESSA 
:

Moreover, for all , the TS A has the following gadget 
, which represents the set 
 by using its elements as events:

Finally, we connect the gadgets 
 and H by further edges. In order to do so, for all , we apply the edges

Image 86
and
Image 92
. Moreover, for all , we add the edges
Image 87
and
Image 93
. Finally, we apply the edges
Image 88
and
Image 94
, and obtain the TS 
. Notice that Fig. 11 shows the TS A that results from Example 7.
Fig. 11
Download : Download high-res image (101KB)
Download : Download full-size image
Fig. 11. The TS A according to the reduction for Theorem 4.2 that results from Example 7. The green area sketches the region R1 from the proof of Lemma 35 that solves α = (k,h1) and bases on the hitting set 
. In particular, the green area corresponds exactly to the states that have a positive support.

Let's prove the functionality of the reduction.

Lemma 34

If there is a τ-admissible set of d-restricted regions of A, then there is a hitting set with at most κ elements for .

Proof

Since there is a τ-admissible set of d-restricted regions of A, there is a d-restricted τ-region that solves α. Let  be such a region. Since R solves α, we have either  and 
 or  and 
. In the following, we restrict ourselves to the former case, since the latter is similar. Moreover, notice that every event of e of A occurs at a loop

Image 95
. Consequently,  for all events e of A. So let  and 
, and let  be arbitrary but fixed. By , we immediately obtain 
 for every edge
Image 76
of A. Moreover, by 
 and 
, we get  and thus 
 for every edge
Image 96
of A. All in all, we get 
 and 
. Hence, the image 
 of the path
Image 97
is a path from 1 to 0 in τ. Consequently, there is an event 
 whose signature causes the state change between 1 and 0, that is, . Since i was arbitrary and ,  and R is -restricted, the set  is a fitting hitting set for . □
For the opposite direction, we have to show that all ESSA and all SSA of A are solvable by d-restricted τ-regions, if there is a hitting set with at most κ elements for . In order to do so, we discuss the events of A individually. Moreover, we assume that  and get along with regions that do not use . Hence, if , which implies , then the proof of the opposite direction follows by Lemma 2.

Lemma 35

If there is a hitting set with at most κ elements for , then k is τ-solvable by d-restricted regions.

Proof

Let  be a fitting hitting set.

The following region 
 solves α: 
; for all , if , then ; if , then , otherwise . Since , the region 
 is -restricted.

Let  be arbitrary but fixed. The following region 
 solves  for all 
: if , then 
, else 
; for all , if , then ; if 
, then ; if 
, then , else .

Clearly, 
 can be solved by a d-restricted τ-region. Since i was arbitrary, the claim follows. □

Lemma 36

The event o is τ-solvable by d-restricted regions.

Proof

Let  be arbitrary but fixed. The following region 
 solves  for all 
: if , then 
, else 
; for all , if , then ; if 
, then ; if 
, then , else .

Obviously, 
 is solvable by a d-restricted τ-region. Since i was arbitrary, the claim follows. □

Lemma 37

If , then X is solvable by d-restricted τ-regions.

Proof

Let  and 
 be arbitrary but fixed. If 
, then the following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else . Notice that 
 holds for every set 
 of M. Hence, 
 is well defined.

If , then the following region 
 solves 
 for all 
: if , then 
, else 
; for all , if 
, then ; if 
, then ; if 
, then , else .

Clearly, 
 can be solved by a  restricted τ-region. Since i and j were arbitrary, the claim follows. □

One easily finds out that the remaining ESSA of A, that is, the ones that involve events from ⊖ and 
, are suitably solvable by d-restricted τ-regions. The same applies to the SSA of A. Altogether, this proves the following lemma and thus completes the proof of Theorem 4.2:

Lemma 38

If there is a hitting set with at most κ elements for , then there is a τ-admissible set of d-restricted regions for A.

Proof of Theorem 4.3.  In the remainder of this section, unless explicitly stated otherwise, let  or  and  be arbitrary but fixed. We present the reduction of HS for τ. The remaining types of Theorem 4.3 are then covered by Lemma 2.

For a start, we define . The TS A has the following gadgets 
 and 
 that provide the ESSA 
:

Moreover, for every , the TS A has the following gadget 
 that represents 
 by using its elements as events:

Notice that every event 
 occurs always on a regular edge that is followed by a bi-directional X-labeled edge:

Image 100
. Moreover, for all 
, the event 
, whose occurrences encompass the occurrences of 
 in 
, occurs only in 
. That means, if 
 occurs in another gadget 
, say as 
, then it is encompassed by 
 in 
, but 
 and 
 are distinct.
In order to connect the introduced gadgets, for every , we add the bi-directional edge

Image 72
. Moreover, for every , we apply the edge
Image 101
as well as the edges
Image 73
and
Image 74
. As a result, we obtain the TS 
. Fig. 12 shows the TS A that results from Example 7.
Fig. 12
Download : Download high-res image (124KB)
Download : Download full-size image
Fig. 12. The TS A in accordance to the reduction for Theorem 4.3 that results from Example 7.

Lemma 39

If there is a τ-admissible set of d-restricted τ-regions of A, then there is a hitting set with at most κ elements for .

Proof

Let  be a d-restricted τ-region that solves 
, that is, either  and 
 or  and 
. In the following, we discuss only the case  and 
, since the other one is similar. So let  and 
, which implies 
 for every edge

Image 76
of A. By 
 and 
, we get . Moreover, by 
, it follows that the image 
 of the path
Image 77
is a path from 1 to 1 in τ. Hence, the number of state changes between 1 and 0 along this path must be even. Notice that a bi-directional edge
Image 67
satisfies 
 if and only if . In particular, this implies that the number  is even. Since , there is exactly one event  such that . In the following, we restrict ourselves to the case , which implies , since the case  is similar.
Let  be arbitrary but fixed. By 
 and  and , we get 
 and 
. In particular, the image 
 of the path

Image 102
is a path from 0 to 1 in τ. In the following, we argue that this implies  for at least one event 
: Assume, for a contradiction, it holds  for all 
. Let 
 be arbitrary but fixed. The event 
 occurs only at bi-directional edges. Hence, if 
, then we get 
 by 
. Otherwise, if 
, then we obtain 
. In particular, in any case we have 
. Since j was arbitrary, this implies 
, which is a contradiction. Hence, we conclude 
. By the arbitrariness of i, if , then we have 
 for all . Moreover, since  for all  and R is -restricted, we also have . □
In order to deal with the opposite direction, we investigate the τ-solvability of the events of A individually. For the sake of simplicity, we restrict ourselves to the case , since the arguments for the case , which implies , are similar. Moreover, if  is an ESSA of A such that e and s belong to different gadgets, then, by , it is easy to see that  is τ-solvable by d-restricted regions. Hence, in the following, we discuss only the ESSA where e and s belong to the same gadget of A.

Lemma 40

If there is a hitting set with at most κ elements for , then k is τ-solvable by d-restricted regions.

Proof

Let  be a sought hitting set.

The following region 
 solves α: 
; for all , if , then ; if , then ; if , then , else . Since , the region 
 is -restricted.

The following region 
 solves  for all 
 and all 
: 
; for all , if , then ; if , then , else .

It is easy to see that  can be suitably solved for all 
. □

Lemma 41

The event y can be solved by d-restricted τ-regions.

Proof

Let  be arbitrary but fixed. The following region 
 solves  for all 
: if , then 
, else 
; for all , if , then ; if 
, then , else .

The following region 
 solves  for all 
: if , then 
, else 
; for all , if , then ; if 
, then , else .

Clearly,  is suitably solvable for all 
. Since i was arbitrary, the claim follows. □

Lemma 42

For all  and all 
, the event 
 is τ-solvable by d-restricted regions.

Proof

Let  and 
 be arbitrary but fixed. The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

Due to the region 
, restricted to 
, we only have to deal with some states “left” of the occurrence of 
, namely 
 in case , and “right” of 
, namely 
 in case 
. Let's consider these cases (which are not mutual exclusive).

For a start, let's consider the case . The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

Now let's consider the case 
. The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then , else .

The following region 
 solves 
 for all 
: 
; for all , if 
, then ; if 
, then ; if 
, then ; else .

Since i and j were arbitrary, the claim follows. □

Lemma 43

If , then X can be solved by d-restricted τ-regions.

Proof

Let  and 
 be arbitrary but fixed. The following region 
 solves 
 for all relevant states 
: if , then 
, else 
; for all , if 
, then ; if 
, then , else . Since i and j were arbitrary, the claim follows. □

It is easy to see that every 
 can be solved by d-restricted τ-regions. Moreover, one also finds easily out that every SSA of A can be solved by a 3-restricted τ-region. Hence, together with the just presented lemmas, the following lemma is justified and thus so is Theorem 4.3.

Lemma 44

If there is a hitting set with at most κ elements for , then there is a τ-admissible set of d-restricted regions for A.

Proof of Theorem 4.4.  In what follows, unless explicitly stated otherwise, we assume . The statement of Theorem 4.4 for the type  then follows by Lemma 2. For a start, we define . The TS A has the following gadgets 
 and 
 that provide the ESSA 
:

Moreover, for all , the TS A has the following gadget 
, which represents 
 by using its elements as events:

In order to connect the just introduced gadgets, again, we use relevant paths: If  is arbitrary but fixed, then we refer by 
 to the events 
 and their position in the gadget 
. Just like for the reduction for the proof of Theorem 3.1, we first extend 
 to the gadget

Image 43
, where 
 is again the connection of the paths that are relevant for 
. After that we add the same connecting edges. The result is the TS 
, which can be sketched as follows:
Lemma 45

If there is a τ-admissible set of d-restricted regions for A, then there is a hitting set with at most κ elements for .

Proof

Let  be a d-restricted τ-region that solves α, and let  be arbitrary but fixed. We immediately get  and 
. Moreover, by , we get  and 
 for all edges

Image 76
of A. By 
 and 
, it follows . Furthermore, it follows  by 
 and 
. By 
 and 
 and  and , we also get 
 and 
. Again, the image 
 of the path
Image 106
is a path from 1 to 0 in τ. Hence, we have 
. Since R is d-restricted and by the arbitrariness of i and  and , we get that  contains at most κ elements and satisfies 
 for all . □
For the opposite direction, we first discuss the solvability of the events k and o, respectively:

Lemma 46

If there is a hitting set with at most κ elements for , then k is τ-solvable by d-restricted regions.

Proof

Let  be a fitting hitting set for .

The following region 
 solves 
 and  for all

Image 107
: 
; for all , if , then ; if , then ; if , then , else . Since , we have .
The following region 
 solves  for all the remaining relevant states 
 and 
: 
; for all , if , then ; if 
, then , else .

Similar to the argumentation in Lemma 20, one shows that  is suitably solvable for the remaining states s of A, that is, in particular, for the states of the relevant paths. □

Lemma 47

The event o is τ-solvable by d-restricted τ-regions.

Proof

The following region 
 solves  for all relevant states 
: 
; for all , if , then ; if 
, then , else .

The following region 
 solves  for all 
 and for all 
: 
; for all , if , then ; if , then , else . □

In order to complete the proof of the opposite direction, firstly, it remains to show that all the other events of A are solvable by d-restricted τ-regions. Secondly, one has to argue that the same applies to the SSA of A. One easily finds out, that the corresponding regions can be defined similar to the ones for the proof of Theorem 4.1 or, more exactly, for the proof of Lemma 24. In particular, one observes that these regions get along with the interactions  and the interaction  is never used. By this observation and Lemma 46 as well as Lemma 47, we obtain the following lemma that finally completes the proof of Theorem 4.4:

Lemma 48

If there is a hitting set with at most κ elements for , then there is τ-admissible set of d-restricted regions of A.

4. Conclusion
In the present paper, the parameterized complexity of synthesis of Boolean Petri nets has been studied for nets with restricted place environments: the parameter is of a structural nature and it restricts the maximal number of transitions which can influence or be influenced by each place of the net. The problem has been studied for the Boolean types equipped with the interaction , i.e., the ones that allow a place and a transition to be independent. Out of the 128 of possible types of this kind, we establish 27 to be hard for the complexity class  and 75 to be hard for : This is achieved by reductions of the known parameterized problems from the respective classes. The complexity of τ-synthesis with restricted place environments remains open for 25 more types equipped with  (the rest 4 being trivial) and suggests a natural continuation of this line of work. From a different perspective, the demonstrated results rule out the parameter under consideration for fixed-parameter algorithms, unlike the known results for the occupancy number restricted τ-synthesis [32] of Boolean Petri nets where the parameter is behavioral.