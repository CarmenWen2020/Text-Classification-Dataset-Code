Abstract
The prefix palindromic length  of an infinite word u is the minimal number of concatenated palindromes needed to express the prefix of length n of u. Since 2013, it is still unknown if  is unbounded for every aperiodic infinite word u, even though this has been proven for almost all aperiodic words. At the same time, the only well-known nontrivial infinite word for which the function  has been precisely computed is the Thue-Morse word t. This word is 2-automatic and, predictably, its function  is 2-regular, but is this the case for all automatic words?

In this paper, we prove that this function is k-regular for every k-automatic word containing only a finite number of palindromes. For two such words, namely the paperfolding word and the Rudin-Shapiro word, we derive a formula for this function. Our computational experiments suggest that generally this is not true: for the period-doubling word, the prefix palindromic length does not look 2-regular, and for the Fibonacci word, it does not look Fibonacci-regular. If proven, these results would give rare (if not first) examples of a natural function of an automatic word which is not regular.

Keywords
Palindrome
Palindromic length
Prefix palindromic length
k-Automatic word
k-Regular sequence
Paperfolding word
Rudin-Shapiro word
Period-doubling word
Fibonacci word
Fibonacci-automatic word

1. Introduction
A palindrome is a finite word  such that  for every i, like  or . We consider decompositions, or factorizations, of a finite word as a concatenation of palindromes. In particular, we are interested in the minimal number of palindromes needed for such a decomposition, which we call the palindromic length of a word. For example, the palindromic length of  is 3 since this word is not a concatenation of two palindromes, but .

In this paper, we consider the palindromic length of prefixes of infinite words. This function of an infinite word  is denoted by 
: here 
 is defined as the palindromic length of the prefix  of length n of u.

The following conjecture was first formulated, in slightly different terms, in a 2013 paper by Puzynina, Zamboni, and the first author [13].

Conjecture 1

For every aperiodic word u, the function 
 is unbounded.

In fact, the paper [13] contains two versions of the conjecture: one with the prefix palindromic length and the other with the palindromic length of any factor of u. Saarela later proved the equivalence of these two statements [19].

In the same initial paper [13], the conjecture was proven for the case when u is p-power-free for some p, as well as for a more general case covering almost all aperiodic infinite words. Its proof for all Sturmian words required a special technique [12]. The full conjecture remains unsolved.

While upper bounds on the prefix palindromic length can be obtained by usual techniques [5], any lower bounds [10], [14] or precise formulas for 
 are astonishingly difficult to obtain, except for the following trivial observation.

Remark 1

If an infinite word u contains palindromes of length at most K, then 
 for all n.

Up to our knowledge, the only nontrivial previously known infinite word whose prefix palindromic length has been found precisely [11] is the Thue-Morse word with its many beautiful properties [4]. This sequence is 2-automatic, and so it was not surprising that its prefix palindromic length is 2-regular and its first differences are 2-automatic. Although the prefix palindromic length does not fall into the class of functions of k-automatic words which are known to always be k-regular [7], we are not aware of any natural functions which would not have this property.

In this paper, we explore the limits of the method used for the Thue-Morse word by considering other automatic words. We prove that  is k-regular for every k-automatic word containing a finite number of distinct palindromes and find this function for the paperfolding word and the Rudin-Shapiro word. At the same time, we also give computational results allowing to conjecture that for the period-doubling word, which contains infinitely many palindromes, the prefix palindromic length is not 2-regular, and for the Fibonacci word, it is not Fibonacci-regular. At the very least, if a regularity exists, it must be very complicated. If in at least one of these examples the function will be proven to be not regular, it would give a first example of a reasonable easily defined function of an automatic word which is not regular.

2. Automatic words
Throughout this paper, we use the notation  for a factor of a finite or infinite word u starting at position i and ending at j. Note that for technical reasons, we start numbering symbols of finite words with 1 and of infinite words with 0.

Definition 1

Let u be an infinite word. Then we define the PPL-difference sequence 
 of u by setting 
 for . Notice that we always have 
, and setting 
 by convention, we get 
.

The following lemma was first proven in the 2015 conference version of the paper [17] and then generalised by Saarela [19, Lemma 6].

Lemma 1

For every word u and for every , we have

Therefore a PPL-difference sequence can only take the values ‚àí1, 0, or 1. We prefer to use the alphabet  in place of . So, the PPL-difference can be considered as an infinite word over a three-letter alphabet; in particular, this word is useful for many algorithms related to palindromes [6].

As the name suggests, a word  is called k-automatic if there exists a deterministic finite automaton A such that every symbol  of u can be obtained as the output of A with the base-k representation of n as the input. For the technical details of this definition and for basic examples, we refer the reader to [3]. In this paper, we mostly do not use this definition but several equivalent ones. To introduce them, we need more notions.

Definition 2

A morphism 
‚Åé
‚Åé
 is a map satisfying  for all words 
‚Åé
. Clearly, a morphism is uniquely determined by images of symbols of Œ£ and can be naturally extended to the set of infinite words over Œ£. If there exists a k such that all images of symbols are of length k, the morphism is called k-uniform; a 1-uniform morphism is called a coding.

If for some morphism 
‚Åé
‚Åé
 and for a letter  the image  starts with a, then there exists at least one finite or infinite word u starting with a which is a fixed point of œÜ, that is, it satisfies the equation . If in addition œÜ is k-uniform for , the fixed point starting with a is unique and is denoted as 
.

The following statement is a combination of two results. The case when œà is a coding is Cobham's theorem [8], which can also be found in the monograph of Allouche and Shallit [3] as Theorem 6.3.2. The case when œà is a m-uniform morphism for  is a combination of Cobham's theorem and Corollary 6.8.3 of the same monograph.

Theorem 1

An infinite word u is k-automatic if and only if 
 for some k-uniform morphism œÜ and a uniform morphism œà. Moreover, the morphisms can always be chosen so that œà is a coding.

If 
, where the morphisms œÜ and œà are not obliged to be uniform, the word ùï¶ is called morphic. As the previous theorem shows, the class of morphic words includes all k-automatic words for all k.

Definition 3

The k-kernel 
 of an infinite word  is the set of arithmetic subsequences of u with differences of the form 
 and starting positions inferior to the difference:

An infinite word u is k-automatic if and only if 
 is finite [3, Thm. 6.6.2].

In what follows, we will need and use the equivalent definitions of a k-automatic words based on uniform morphisms and on the k-kernel.

Example 1

For the Thue-Morse word , which is 2-automatic, the three definitions work as follows:

‚Ä¢
The definition involving the automaton: the symbol , , is 0 if the number of 1's in the binary representation of n is even and 1 if it is odd.

‚Ä¢
The definition involving morphisms: 
, where  and ; the coding œà from the formula 
 here is trivial (, ) and can be omitted.

‚Ä¢
The definition involving the 2-kernel: t can be described as the word starting with 01 and obtained by alternating the symbols of t and of the word 
 obtained from t by exchanging 0's and 1's. It is not difficult to see that the 2-kernel of t contains only two elements: t and 
.

The following definition is closely related to automatic words.

Definition 4

A -valued sequence is k-regular if the -module generated by its k-kernel is finitely generated.

This definition implies in particular that k-automatic sequences are k-regular (we may always assume that a word is over an integer alphabet). A sequence is k-automatic if and only if it is a bounded k-regular sequence [3, Thm. 16.1.5].

Many sequences related to k-automatic sequences are k-regular, as it follows from an important decidability result by Charlier, Rampersad, and Shallit [7]. In particular, this is true for the function of factor complexity defined as the number of factors of length n of the word for each n and for the number of distinct palindromes of length n in the word. In fact, the latter function is even k-automatic since it is bounded [2]. Thus it is natural to ask if the sequence 
 is k-regular when u is k-automatic. The next lemma shows that in order to study this question, it suffices to study the PPL-difference sequence.

Lemma 2

Let u be an infinite word. Then the sequence 
 is k-regular if and only if the PPL-difference sequence 
 is k-automatic.

Proof

The set of k-regular sequences over  is closed under componentwise shift, sum, and difference [3, Thm. 16.2.1, Thm. 16.2.5]. Therefore 
 is k-regular if and only if 
 is k-regular. By Lemma 1, the sequence 
 is bounded. The conclusion follows from the above-cited fact that a bounded k-regular sequence is k-automatic [3, Thm. 16.1.5]. ‚ñ°

The first author studied in [10], [11] the PPL-difference sequence 
 of the Thue-Morse word t from Example 1 and characterized it as the fixed point of the following 4-uniform morphism:
 

This means in particular that 
 is 4-automatic and thus 2-automatic [3, Thm. 6.6.4]. Hence 
 is 2-regular. This result is so far the only one that completely determines the functions 
 and 
 for any nontrivial infinite word u.

Notice that the result on the Thue-Morse word is not covered by the main result of this paper, since the Thue-Morse word contains infinitely many palindromes. Every prefix of length 
 of the Thue-Morse word is a palindrome, so Theorem 2 below does not apply to it.

3. Automatic first differences
The following theorem is the main result of this paper.

Theorem 2

If a k-automatic word u contains a finite number of distinct palindromes, then the PPL-difference sequence 
 is k-automatic.

Proof

Let p be the length of the longest palindrome in u. Then for every index n, the last palindrome in an optimal decomposition of  as a product of palindromes starts at one of the positions , ‚Ä¶, . Thus 
 is determined by , ‚Ä¶,  and the word  (we will often omit the subscripts in proofs to improve readability). This simple consideration is a base for the following proposition.

Proposition 1

For every n such that , the number 
 is uniquely determined by the numbers 
, 
, 
, ‚Ä¶, 
, and the word . The number 
 is uniquely determined by 
, 
, ‚Ä¶, 
, and the word .

Proof

Let us prove the first statement. Clearly, for every i such that , we have so that , ‚Ä¶,  can be reconstructed from , , , ‚Ä¶, . Now let us proceed by induction on . The preceding computation establishes the base case. Since there are no palindromes in u of length greater than p, we have(1) The numbers  are determined by , , ‚Ä¶, , and  by hypothesis. The induction step is complete.

To prove the second statement, we replace  in the previous paragraph by a parameter P and let  for all , so that . Then for , the number  can be found directly as the sum of the known values of the sequence d. Now for , that is, for , suppose that the values of  are known for all . The claim is true for , that is, for , establishing the base case. For the induction step, it suffices to rewrite (1) as and to subtract P to obtain  as a function of the previous values of D and the word : Now it remains to combine this expression for i and for  and to use the formula  to obtain the needed statement. ‚ñ°

By Theorem 1, we may suppose that 
, where  is a coding and 
 is a k-uniform morphism over an alphabet Œ£. Without loss of generality, by passing from œÜ to a power of œÜ if necessary, we may assume that . Let The word u is a concatenation of these Œõ-blocks of length k, and we consider u as  with .

Consider an occurrence , where , of a factor v of u. We define the type of this occurrence as the sequence 
. Clearly, for each word v, its occurrences have at most 
 different types; we denote the set of possible types of v by . Notice that the words , , ‚Ä¶ have types because their lengths are greater than p.

The following proposition is a direct corollary of Proposition 1.

Proposition 2

For every , the type of the occurrence  is determined by the word , the word , and the type of .

This proposition can be interpreted as follows: given a word  and the type of , we can uniquely determine the types of ,  and so on, and thus, due to Proposition 1, find the PPL-difference sequence d. The process can be described by a transducer with

‚Ä¢
set of states , where S is a special starting state;

‚Ä¢
input alphabet Œõ;

‚Ä¢
output set 
; and

‚Ä¢
set of transitions defined as follows:

‚Äì
The starting transition marked as 
 goes from S to the state ;

‚Äì
A state  is linked to a state 
 by a transition marked as  if a Œõ-block A of type t is followed by a Œõ-block B of type 
 in u and the respective block of length k in d is w (meaning in particular that 
 is a prefix of w).

The transitions are well defined due to Proposition 1, Proposition 2, and the number of states is finite as  and each word in Œõ has at most 
 types. It is evident that the transducer describes the construction of d from the Œõ-blocks of u.
Since the sequence of Œõ-blocks of u is k-automatic by the construction, we see that the sequence d is obtained by feeding it to a uniform transducer (a uniform transducer outputs only words of common length). By a theorem of Cobham [8] (see also [3, Thm. 6.9.2] and the discussion preceding it), a uniform transduction of a k-automatic sequence is again k-automatic, so we conclude that d is k-automatic. Notice that if we replaced k by its power, we still obtain the same conclusion as a sequence is 
-automatic if and only if it is k-automatic [3, Thm. 6.6.4]. ‚ñ°

Example 2

Consider the 2-automatic fixed point
 of the morphism
  It is not difficult to see that the longest palindromes in u are of length 3, so, in order to construct the transducer of the proof of Theorem 2, we consider u as a fixed point of the 4-uniform morphism
  For the alphabet Œõ, we now have  where , , . The first values of 
 starting from  are , and thus the sequence 
 starts with . Hence the first transition of the transducer is
 
 The next transition should describe the first differences in B which follows an occurrence of A with type . It can be checked that it is
 
 Continuing to consider blocks and their types in their order of appearance in u, we can analogously find that every symbol of Œõ can have four types , , , . Thus the transducer has 13 states. The possible transitions from A are the following:
 
 
 
 
 
 
 In particular, a block A of any type except for  can be followed only by the block B of type .

The remaining transitions are obtained by changing the letters in the above transitions according to the cycle  since the initial morphism Œº is symmetric with respect to this cycle. For example, from the transition
 
 we obtain in this fashion the transition
 
 This gives a total of 19 transitions. To be completely rigorous, we should prove that no additional states and transitions exist. Suppose the opposite and consider the first transition which is not as above. Let it be a transition from  to  for some t (any other combination can be considered analogously). The first time this transition is taken must be preceded by a transition from the list, that is, by the transition 
. Hence BAA should be a factor of u, but it is easy to check that this is not the case. Similarly if there is a transition 
, then we find that u should contain the forbidden factor BAC, and so on.

It can be shown that the output of the transducer equals the infinite word 
, where
  and
  Here the symbols s, d, e, u, h mean respectively the starting block s of u, the situation when the next block of u is down (d), equal (e) or up (u) to the previous block according to the cyclic order . And h (for ‚Äúhigh‚Äù) stands for the situation when the block is exactly the third in an ascending sequence of blocks.

In this example, we managed to construct the morphisms for 
 because we understand the underlying structure. Unfortunately, Cobham's theorem used in the proof of Theorem 2 only gives a hyperexponential bound on the number of the states of an automaton generating 
. Hence the theorem itself does not give a practical way to find 
 and the associated morphisms. In what follows, we consider two well-known examples and find their prefix palindromic length ‚Äúby hand‚Äù.

4. Classic examples
The examples considered in this section, namely, the paperfolding word and the Rudin-Shapiro word, are closely related to each other, and are known to contain a finite number of distinct palindromes [1].

4.1. Paperfolding word
Recall that the paperfolding word 
 is the 2-automatic word
 where
  and the coding œà is defined as , .

The longest palindromes in the paperfolding word are of length 13, so Theorem 2 can be applied to it: its first difference sequence 
 is 2-automatic. The blocks considered in the proof of Theorem 2 could be of length 16, since it is the smallest integer power of 2 which exceeds the length of the longest palindrome. However, to simplify the transducer, it is more convenient to consider blocks of length 64.

Theorem 3

The sequence 
 over the alphabet

Image 1
is equal to 
, where
  and
  with .
Proof

Let v be the fixed point 
 of 
 and w be the fixed point 
 of 
 starting with 
. The word v is obtained from w by the identification 
, 
, 
, 
. The subscript of a letter occurring in w indicates that the letter (after identification) in v is preceded by the letter indicated by the subscript, that is, 
 is corresponded to a preceded by b in v etc. The letter 
 simply corresponds to the first occurrence of a in v.

We know by Theorem 2 that a transducer T mapping 
 to 
 exists. Here we set the parameter k of the proof of Theorem 2 to equal 26. This means that T outputs blocks of length 64. Write 
 as a concatenation of Œõ-blocks . For the claim, it suffices to prove that the output of T on  equals 
 for all n.

The factors of v of length 2 appear in its prefix of length 13. This means that the prefix of 
 of length 
, which is a concatenation of Œõ-blocks, contains all possible adjacent Œõ-blocks at least once. We can directly check that 
 coincides with the prefix of 
 of length 
 meaning that 
 equals the output of T on . Let us now make the following observation. The prefix of length 18 of each 
-image is followed by the word  of length 15. Since the longest palindrome in 
 has length 13, Proposition 1 implies that for , the type of  depends on P and , not on the type of . Since P occurs in the same position in every 
-image, we see that the type of  depends only on .

Let  be such that the type of  depends only on  and that the output of T on  matches 
 for all . By Proposition 1, the type of  is determined by  and its type. Since T outputs 
 when reading  and 
 contains P at position 18 independently of the letter , it follows from Proposition 1 that the type of  depends only on . Since  and all factors of v of length 2 appear in its prefix of length 13, there exists  such that  and . The output of T on the transition 
 must match that of 
 because T is deterministic and the type of the Œõ-block is irrelevant in both cases. Therefore T outputs 
 when reading . It now suffices to show that  in order to conclude by induction that 
.

We have 
 for all i. It is straightforward to verify that œà is injective on the set of Œõ-blocks and that 
 is injective, so we deduce from the equalities  and  that  and . From the first paragraph of the proof, we infer that . The claim follows. ‚ñ°

4.2. Rudin-Shapiro word
The Rudin-Shapiro word 
 is the 2-automatic word
 where
  and the coding œà is defined by , .

The longest palindromes in the Rudin-Shapiro word are of length 14, so Theorem 2 can be applied to it: its first difference sequence 
 is 2-automatic. The following theorem describes it.

Theorem 4

The sequence 
 over the alphabet

Image 2
is equal to
 where
  and
  with .
Proof

As previously for the paperfolding word, we define a new morphism 
 obtained from 
 by adding to each letter information on the preceding one:
  The morphism 
 and its fixed point v are obtained from 
 and its fixed point w by the identification 
, 
, 
, 
.

We proceed as in the proof of Theorem 3. We set the parameter k of the proof of Theorem 2 to equal 26. Write 
 as a concatenation of Œõ-blocks . All factors of v of length 2 appear in its prefix of length 14, so all adjacent Œõ-block appear in the prefix of 
 of length 
. Taking the prefix of length 
 of 
, we observe that it coincides with the word 
 where
  Each 
-image of a letter ends with the word  of length 12. This word P is shorter than the longest palindrome in 
, so we cannot directly deduce that the type of the block  depends only on . By Proposition 1, the number 
 depends on the previous 14 values of 
 that correspond to a palindrome ending at position 
 of 
. We claim that such a palindrome has length at most 12. This implies that 
 is determined by the previous 12 values of 
. If such a palindrome has length greater than 12, it must be of length 14 as 
 contains no palindromes of length 13. Two of the Œõ-blocks end with 110100011101 and the remaining two end with 001011100010. It is straightforward to see that neither suffix can be covered by a palindrome of length 14 in the required way. Thus the palindrome has length at most 12. A similar argument can be repeated for the number 
. Since each 
-image ends with P of length 12, we deduce by Proposition 1 that the type of  depends only on  not on its type. We may now repeat the arguments of the proof of Theorem 3 and conclude that 
 (indeed 
 is injective and œà is injective on the set of Œõ-blocks).

To prove the theorem, it remains to notice the symmetry in 
 and identify 
 as B, 
 as C, 
 as D, 
 as E. After renaming 
 as A, we see that 
 equals 
 after this identification. Thus 
 and the claim follows. ‚ñ°

5. Computational results and conjectures
This section contains results of computational experiments which thus do not give any theorems but only conjectures. For a fast computation of the prefix palindromic length, we used an implementation [20] of the Eertree data structure [17]; see also [18] for related algorithms.

5.1. Period-doubling word
Theorem 2 and the result for the Thue-Morse word allow to conjecture that the PPL-difference sequence 
 of a k-automatic word is always k-automatic. The following example, however, suggests that this is not the case.

The period-doubling word 
 is the 2-automatic word
 where
  Clearly, it contains infinitely many palindromes, including all prefixes of length 
. Thus Theorem 2 does not apply to it.

In our computational experiment, we estimate the cardinality of the 2-kernel of the PPL-difference sequence 
 of 
. If 
 is 2-automatic, its 2-kernel must be finite. We estimate the number of its elements as follows.

Let . Consider a sequence 
 from the 2-kernel of 
 and compute its prefix 
 such that 
. Only finitely many different words 
 are nonempty: in particular, all such words of length at least 2 correspond to , so there are finitely many parameters to consider. Then we exclude from the set of words 
 those which are proper prefixes of another word of this set. Let 
 be the number of nonempty words 
 that remain. Then, clearly, the 2-kernel of 
 contains at least 
 elements.

The following table collects the values of 
 for .


4m	4	42	43	44	45	46	47	48	49	410	411‚ÄØ=‚ÄØ4194304
km	2	9	22	66	145	297	584	1046	1816	3047	5051
km/km‚àí1		4.5	2.444	3.0	2.197	2.048	1.966	1.791	1.736	1.678	1.658
Our data thus indicates that the 2-kernel of 
 contains at least 5051 distinct sequences. Moreover, a four times longer prefix gives at least 1.65 times larger 2-kernel, and the ratio decreases too slowly to conjecture that it would tend to 1. This makes an impressive contrast with all the previous examples where the size of the kernel rapidly stabilizes. Based on this, we formulate the following conjecture.

Conjecture 2

The sequence 
 of the period-doubling word 
 is not 2-automatic, and so the prefix palindromic length 
 of 
 is not 2-regular.

Another way to show that a sequence is not automatic would be to prove that it has superlinear factor complexity function [3, Thm. 10.3.1]. However, it does not look to be the case : we computed the factor complexity of 
 for lengths up to 500 and found that, except for initial values, the values closely follow a straight line with slope about 200. So, we could suggest that even if the PPL-difference function of the period-doubling word is not 2-automatic, it can still be morphic.

5.2. Fibonacci word
The Fibonacci word 
 is the fixed point 
 of the morphism
  The Fibonacci word is a classic example of an infinite word; it is not k-automatic for any k but is Fibonacci-automatic in the sense which we explain below.

As usual, we define the Fibonacci numbers by the recurrence relation 
, 
, and 
 for . Every positive integer n can be uniquely expressed as 
 with 
, 
, and 
 for . In this case, we call the word 
 the Fibonacci representation of n and use the notation 
. For example, we have 
 and 
. We also fix 
.

As is well-known, 
 if and only if 
 ends with 1; in the opposite case, we have 
. Thus every symbol of the Fibonacci word can be computed from the Fibonacci representation of its index by a simple automaton. This means that the Fibonacci word is Fibonacci-automatic. In general, an infinite word x is Fibonacci-automatic if there exists a deterministic finite automaton A such that every symbol  is the output of A with input 
. Many functions of the Fibonacci word are known to be Fibonacci-automatic or Fibonacci-regular; for the definition and discussions of Fibonacci-regular sequences, see [16], [9].

Analogously to a k-kernel for k-automatic sequences, we define the Fibonacci-kernel of a sequence w as follows. For every finite word 
‚Åé
, define 
 as the increasing sequence of all numbers n such that 
 ends with the suffix s. For example, 
, 
, 
, and 
 is empty since the Fibonacci representation cannot contain two consecutive 1's.

Now we define a sequence  as the subsequence of w with indices from 
, namely, 
. At last we define the Fibonacci-kernel of w as the set of nonempty sequences  for all 
‚Åé
.

For example, the Fibonacci-kernel of the Fibonacci word 
 consists of three elements: the Fibonacci word 
 itself and the sequences 
 and 
. Indeed, we have 
 and 
 for every finite word p (or the sequences 
 and 
 are empty).

Notice that the Fibonacci-kernel of an infinite word always contains the empty sequence because 11 does not occur in Fibonacci representations. We largely ignore this fact.

Analogously to the proof for k-automatic words, it can be shown that a sequence is Fibonacci-automatic if and only if its Fibonacci-kernel is finite.

The existing family of decidability results on Fibonacci-automatic words [16], [9] is mostly analogous to the k-automatic case. It would be interesting to find an example of a reasonable function of the Fibonacci word which takes a finite number of values and is not Fibonacci-automatic. It seems that the PPL-difference sequence 
 of the Fibonacci word is a good candidate for that.

Similar to the period-doubling word from the previous subsection, we consider words determined by the (nonempty) sequences of the Fibonacci-kernel of 
 and the prefix of 
 of length 
 for . Let again 
 be the number of the corresponding nonempty words that are not prefixes of each other. Our computations give the following values for 
 for .


5	21	89	377	1597	6765	28657	121393
km	3	11	31	88	207	504	1139	2377
km/km‚àí1		3.67	2.82	2.85	2.35	2.43	2.26	2.09
While this evidence is not as strong as in the case of the period-doubling word, we conclude that the Fibonacci-kernel of 
 has at least 2377 elements and the kernel does not seem to stabilize. We make the following conjecture.

Conjecture 3

The sequence 
 of the Fibonacci word 
 is not Fibonacci-automatic, and so the prefix palindromic length 
 of 
 is not Fibonacci-regular.

All Fibonacci-automatic words have linear factor complexity [15, Thm. 3.4], so, as for the period-doubling word, a superlinear factor complexity function would give another evidence supporting the conjecture. However, the sequence 
 seems to have linear factor complexity based on the first 500 values, and so, can still be morphic even if not Fibonacci-automatic.

6. Conclusion
In this paper, we have proven a general theorem on the prefix palindromic length of automatic words containing finitely many distinct palindromes and considered in detail two particular cases when this theorem is applicable. These results were somehow predictable since they state that a reasonable function of a k-automatic word is k-regular. What is more surprising is the computational evidence that in some other situations this is not the case: it seems that there exist simple k-automatic words, such as the period-doubling word, such that their prefix palindromic length is not k-regular. If proven, this result would enrich the whole theory of k-regularity.