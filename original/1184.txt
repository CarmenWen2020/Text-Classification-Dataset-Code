Abstract
The problem of computing a connected network with minimum interference is a fundamental problem in wireless sensor networks. Several models of interference have been studied in the literature. The most common one is the receiver-centric, in which the interference of a node p is defined as the number of other nodes whose transmission range covers p. In this paper, we study the problem of assigning a transmission range to each sensor, such that the resulting network is strongly connected and the total interference of the network is minimized.

For the one-dimensional case, we show how to solve the problem optimally in  time. For the two-dimensional case, we show that the problem is NP-complete and give a polynomial-time 2-approximation algorithm for the problem.

Keywords
Computational geometry
Wireless sensor networks
Interference
NP-hardness
Approximation algorithms

1. Introduction
Wireless sensor networks have received significant attention in the last two decades due to their potential civilian and military applications [7], [10]. A wireless sensor network consists of numerous devices that are equipped with processing, memory, and wireless communication capabilities. This kind of network has no pre-installed infrastructure, rather all communication is supported by multi-hop transmissions, where intermediate nodes relay packets between communicating parties. Since each sensor has a limited battery and each transmission decreases the battery charge, energy consumption is a critical issue in wireless sensor networks. One way to conserve energy is to minimize the interference of the network. High interference increases the probability of packet collisions and therefore packet retransmission, which can significantly affect the effectiveness and the lifetime of the network.

In wireless networks design, the nodes are modeled as a set of points in the plane and each node u is assigned a transmission range . A node v can receive the signal transmitted by a node u if and only if , where  is the Euclidean distance between u and v. There are two common ways to model the induced communication graph: symmetric and asymmetric. In the symmetric model [9], [12], [14], [15], [17], there is an undirected edge between points p and q if and only if , and in the asymmetric model [1], [2], [3], [18], there is a directed edge from node p to node q if and only if .

Several models of interference have been studied in the literature. The model of Burkhart et al. [5] measures the number of nodes affected by the communication over a single edge. This model was also studied by Moaveni-Nejad and Li [13], who further introduced the sender-centric model that measures the number of receiving nodes affected by the communication of a single sender. They showed that both problems can be solved optimally in polynomial-time, in the symmetric and asymmetric models.

Von Rickenbach et al. [18] argued that the sender-centric model of interference is not realistic, because the interference is actually felt by the receivers. Further, they argued that the model was overly sensitive to the addition of single nodes. Instead, they formulated the receiver-centric model; minimizing the maximum interference received at a node, where the interference received at a node p is the number of nodes q () such that . In the one-dimensional case, i.e., when the points are located on a line, Von Rickenbach et al. [18] showed that one can always construct a network with  interference, in the symmetric model. Moreover, they showed that there exists an instance that requires  interference, and gave an 
 approximation algorithm for this case. Tan et al. [15] proved that the optimal network has some interesting properties and, based on these properties, one can compute a network with minimum interference in sub-exponential time. Brise et al. [3] extend this result for the asymmetric model.

In the two-dimensional case, the problem has been shown to be NP-hard [3], [4]. Halldórsson and Tokuyama [9] showed how to construct a network with  interference for the symmetric model, extending the result of [18]. For the asymmetric model, Fussen et al. [8] showed that one can always construct a network with  interference.

Another model of interference is to minimize the total interference of the network. That is, given a set P of points in the plane, the goal is to assign ranges to the points to obtain a connected communication graph in which the total interference is minimized. For the symmetric model, Moscibroda and Wattenhofer [14] studied the problem in general metric graphs. They gave an  approximation algorithm for the problem, and they showed that this algorithm is asymptotically optimal by proving a corresponding  lower bound. Lam et al. [12] proved that the problem is NP-complete for points in the plane. For the one-dimensional case, Tan et al. [15] showed how to compute an optimal network in 
 time.

For the asymmetric model, Bilò and Proietti [2] studied the problem of minimizing the total interference (sum of interference of each node) in general metric graphs. They gave a logarithmic approximation algorithm for the problem by reducing it to the power assignment problem in general graphs. Agrawal and Das [1] studied the problem in two-dimensions. They gave two heuristics with experimental results.

Our results  In this paper, we consider the problem of minimizing the total interference in the asymmetric model. We first give an 
-time algorithm that solves the problem optimally, when the points are located on a line. Then, we show that the problem is NP-complete for points in the plane and give a 2-approximation algorithm for the problem. Our approach in the solution of the one-dimensional problem is somewhat unconventional and involves assigning to each point both a left range and a right range, see Section 3. We note that the approach of Tan et al. [15] (who considered the problem in the symmetric model) would yield a significantly worse time bound in our case, and that it would be interesting to check whether our approach can be applied also in their setting to obtain an improved running time.

2. Network model and problem definition
Let P be a set of sensors in the plane. Each sensor  is assigned a transmission range . A sensor q can receive a signal from a sensor p if and only if q lies in the transmission area of p. We consider P as a set of points in the plane and the range assignment to the sensors as a function 
. The communication graph induced by P and ρ is a directed graph 
, such that , where  is the Euclidean distance between p and q. 
 is strongly connected if, for every two points , there exists a directed path from p to q in 
. A range assignment ρ is called valid if the induced graph 
 is strongly connected.

Given a communication graph 
, in the receiver-centric interference model, the interference of a point p is defined as . In the sender-centric interference model, the interference of a point p is defined as . The total interference of 
 is defined as
  
 

In the Minimum Total Interference (MTIP) problem, we are given a set P of points in the plane and the goal is to find a range assignment ρ to the points of P, such that the graph 
 induced by P and ρ is strongly connected and 
 is minimized.

3. MTIP in 1D
In this section, we present an exact algorithm that solves MTIP in 
 time in 1D. Let 
 be a set of n points located on a horizontal line. For simplicity, we assume that for every , 
 is to the left of 
.

For each , let 
 be the set 
. For , a sink tree 
 of 
 rooted at 
 is a directed tree that contains a directed path from each point 
 to 
. Given a range assignment 
 to the points in 
, let 
 be the graph induced by 
 and let 
 be the total interference of 
. For , let 
 be a range assignment to the points of 
, such that the induced graph 
 contains a sink tree of the points 
 rooted at 
. We say that 
 is x-optimal if and only if 
 is minimum.

We define the weight of an edge 
 in a directed graph  to be 
. Let  be the complete directed graph on P, i.e., 
, and let 
 be the subgraph of G induced by 
. For a sink tree 
 in 
, let 
 denote its weight.

Lemma 3.1

Let 
 be an x-optimal range assignment to the points in 
, and let 
 be a minimum-weight sink tree rooted at 
 in 
. Then, 
.

Proof

Let 
 be the graph induced by 
. Since 
 is x-optimal 
 contains a sink tree T of the points of 
 rooted at 
. Let  be the weight of T. According to the weights definition w, we have 
. Therefore, 
. On the other hand, let 
 be a range assignment to the points of 
 obtained from 
 as follows. Set 
, and for each 
, set 
. Notice that this range assignment is valid since the out-degree of every point in a sink tree is 1, except the root. Consider the graph 
 induced by 
. Clearly, this graph contains 
 and 
. Therefore, 
. ■

By Lemma 3.1, to compute an x-optimal range assignment 
, it is sufficient to compute a minimum-weight sink tree rooted at 
 in 
. In Section 3.1, we show how to compute a minimum-weight sink tree 
 in 
, for every  and for every . Then, in Section 3.2, we use these trees to devise a dynamic programming algorithm that solves MTIP in 
 time.

3.1. Computing all sink trees
In this section, we show how to compute a minimum-weight sink tree rooted at 
 and a minimum-weight sink tree rooted at 
 in 
, for every , in 
 time. The following observation follows from the way we constructed G.

Observation 3.2

Let 
, 
, and 
 be three points of P. If 
, then 
.

Let 
 be a minimum-weight sink tree rooted at 
 in 
, where , and let 
 denote its weight. The following lemma reveals the special structure of 
. A similar lemma was proved by Brise et al. [3] for the problem of minimizing the maximum interference.

Lemma 3.3

For every two distinct edges 
 and 
 in 
,

(i)
if 
, then 
; and

if 
, then 
.

Proof

(i)
Assume towards a contradiction that there exist two edges 
 and 
, such that 
, and 
 or 
; see Fig. 1. Notice that there is no path from 
 to 
 in 
, otherwise, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
. Thus, the path from 
 to 
 in 
 does not contain 
. We distinguish between two cases.

Fig. 1
Download : Download high-res image (59KB)
Download : Download full-size image
Fig. 1. Illustration of the proof of Lemma 3.3.

Case 1: 
; see Fig. 1(a). By Observation 3.2, 
. Therefore, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
.

Case 2: 
. If 
, then, by Observation 3.2, 
; see Fig. 1(b). Therefore, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
. And, if 
, then, by Observation 3.2, 
; see Fig. 1(c). Therefore, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
.

Case 1: 
. Since 
 is a sink tree, the out-degree of each point in 
 is at most 1. Hence, the case 
 cannot happen. Therefore, 
; see Fig. 2(a). In this case, there is no path from 
 to 
 in 
, otherwise, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
. Thus, the path from 
 to 
 in 
 does not contain 
. Moreover, by Observation 3.2, 
. Therefore, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
.

Case 2: 
; see Fig. 2(b). Notice that, since 
 is a sink tree, either no path from 
 to 
 or no path from 
 to 
 exists in 
 (otherwise, 
 contains a cycle). Assume, w.l.o.g., that there is no path from 
 to 
 in 
, which also means that 
. Thus, the path from 
 to 
 in 
 does not contain the point 
. By Observation 3.2, 
. Therefore, by replacing 
 by 
 in 
, we obtain a sink tree rooted at 
 in 
 of weight less than 
, which contradicts the minimality of 
. ■

Consider a minimum-weight sink tree 
 of weight 
 rooted at 
 in 
. Let 
 be the edge connecting 
 to 
 in 
. Thus, 
 partitions 
 into two sub-trees 
 rooted at 
 and 
 rooted at 
; see Fig. 3. By Lemma 3.3, 
 contains the points of 
 and 
 contains the points of 
. Moreover, since 
 is a minimum-weight sink tree rooted at 
 in 
, 
 is a minimum-weight sink tree rooted at 
 in 
 and 
 is a minimum-weight sink tree rooted at 
 in 
. Therefore, 
. Similarly, 
.

Fig. 3
Download : Download high-res image (10KB)
Download : Download full-size image
Fig. 3. A minimum-weight sink tree 
 rooted at pi. (pj,pk) partitions 
 into Ti and Tj.

Based on the aforementioned, to compute 
 (resp., 
), we compute 
 (resp., 
), for each  (resp., for each ), and take the minimum over these values. That is,
 
  and
 
 

We compute 
 and 
, for each , using dynamic programming as follows. We maintain two tables 
 and 
 each of size , such that 
 and 
, for each . We fill the tables using Algorithm 1.

Algorithm 1
Download : Download high-res image (40KB)
Download : Download full-size image
Algorithm 1. ComputeAllSinks(G,w).

Notice that, when we fill the cells 
, all the cells 
 and 
, for each , are already computed, and when we fill the cells 
, all the cells 
 and 
, for each , are already computed. Therefore, each cell in the table is computed in  time, and the whole table is computed in 
 time.

3.2. Solving MTIP in 1D
In this section, we present an 
-time algorithm that solves MTIP in 1D. That is, given a set of points 
 on an horizontal line, the algorithm computes a range assignment ρ for P, such that the graph 
 induced by ρ is strongly connected and 
 is minimized. For simplicity, we assume that for every , 
 is to the left of 
.

Given a range assignment 
, the interference of a point , denoted by 
, is equal to the number of points in  of distance at most  from p (where  is the range assigned to p by ρ), i.e., 
. The cost of an assignment ρ, is defined as 
. Notice that, 
, where 
 is the graph induced by ρ.

Instead of assigning each point in P a range, we assign each point two directional ranges, left range assignment, 
, and right range assignment, 
. A pair of assignments 
 is called a left-right assignment. Let 
 be a left-right assignment. The graph 
 induced by 
 contains a directed edge 
 if and only if one of the following holds: (i)  and 
, or (ii)  and 
. 
 is called valid if the graph induced by 
 is strongly connected. For each point , let 
 and let 
. The cost of 
, is defined as 
.

Notice that each left-right assignment 
 for P can be converted to a range assignment ρ with the same cost by assigning each point  a range 
. On the other hand, each range assignment ρ for P can be converted to a left-right assignment with the same cost, by assigning each point , 
. To be more precise, either 
 or 
 should be reduced to , where q is the farthest point in the appropriate direction (see Observation 3.4). Therefore, instead of finding an optimal range assignment, our algorithm exploits the additional structure of left-right assignments and finds such an assignment of minimum cost.

Given a left-right assignment 
, let 
 and 
. In addition to the  function, we define 
, and refine the notion of optimal solution to include only solutions 
 that minimize 
 among all solutions with minimum 
.

Observation 3.4

Let 
 be an optimal solution. Then, for every point 
, 
, for some , and 
, for some .

For every , let 
 be the set 
.

Lemma 3.5

There exists an optimal solution 
 satisfying the following properties. Let 
 be a point in P, such that, 
, for some , and 
, for some 
. Then,

for each point 
, 
;

for each point 
, 
;

for each point 
, 
; and

for each point 
, 
;

Proof

Assume towards a contradiction that there exists a point 
, such that 
, for some ; see Fig. 4(a,b). Let 
 be the assignment obtained from 
 by assigning 
 a range 
. Thus, (i) the graph induced by 
 is still strongly connected, (ii) 
 and 
, and (iii) 
. Therefore, 
 is a valid assignment, 
, and 
, which contradicts the minimality of 
.

Fig. 4
Download : Download high-res image (63KB)
Download : Download full-size image
Fig. 4. Illustration of the proof of Lemma 3.5.

The proof is symmetric to the proof of .

Assume that there exists a point 
, such that 
, for some 
; see Fig. 4(c). Assume, w.l.o.g., that 
 (the case 
 is symmetric). By , 
. Let 
 be the assignment obtained from 
 by assigning 
 a range 
 and assigning 
 a range 
. Thus, (i) the graph induced by 
 is still strongly connected, (ii) 
 and 
, and (iii) 
. Therefore, 
 is a valid assignment, 
, and 
, which implies that 
 is an optimal solution satisfying the lemma.

The proof is symmetric to the proof of . ■

Let  be the complete directed graph on P, in which 
, for each directed edge 
. Let 
 be the subgraph of G induced by 
. Let 
 be an assignment for the points of 
, such that the graph induced by 
 contains a sink tree 
 rooted at 
, where . In Lemma 3.1, we proved that, for any , 
 is an x-optimal assignment (i.e., 
 is of minimum interference) if and only if 
 is a minimum-weight sink tree rooted at 
 in 
. Combining this with Lemma 3.5, we have the following corollary.

Corollary 3.6

Let 
 be an optimal solution satisfying the properties of Lemma 3.5. Let 
 be a point in P, such that, 
, for some , and 
, for some ; see Fig. 5. Then, the graph induced by 
 is a minimum-weight sink tree 
 rooted at 
 in 
, and the graph induced by 
 is a minimum-weight sink tree 
 rooted at 
 in 
.

Fig. 5
Download : Download high-res image (54KB)
Download : Download full-size image
Fig. 5. Illustration of Corollary 3.6.

Lemma 3.7

Let 
 be an optimal solution satisfying the properties of Lemma 3.5 and let 
 be the strongly connected graph induced by 
. Let 
 be a point in P, such that, 
, for some , and 
, for some . Then, for each point 
, 
.

Proof

Assume towards a contradiction that there exists a point 
, such that 
. We distinguish between two cases.

Case 2: 
. By  in Lemma 3.5, 
; see Fig. 7. By Corollary 3.6, the graph induced by 
 is a minimum-weight sink tree 
 rooted at 
. Therefore, since the out-degree of each point in 
 is at most one and 
 is of minimum 
, either 
 or 
, which contradicts the assumption that 
 and 
. ■

Fig. 7
Download : Download high-res image (31KB)
Download : Download full-size image
Fig. 7. Illustration of Case 2 in the proof of Lemma 3.7.

For each , let  denote the cost of an optimal solution 
 for the sub-problem defined by the set 
, in which 
; see Fig. 8. Therefore, the cost of an optimal solution for the whole problem is . For each , let 
 denote the difference between 
 and 
. That is, 
 

Fig. 8
Download : Download high-res image (69KB)
Download : Download full-size image
Fig. 8. Computing OPT(i,k).

If , then, clearly . Otherwise, 
 and thus there exists a point 
, such that 
, and, by Lemma 3.5 and Lemma 3.7, there exists a point 
, such that 
. Moreover, for , by Corollary 3.6, the graph induced by 
 is a minimum-weight sink tree 
 rooted at 
 in 
, and the graph induced by 
 is a minimum-weight sink tree 
 rooted at 
 in 
; see Fig. 8. If  and , then 
. Therefore,

Based on the aforementioned, to compute , we compute 
, for each  and for each , and take the minimum over these values. That is, if , then , otherwise 
 
 
 For each , let  
 
 and observe that  depends only on t. Therefore, 
 

We compute , for each , using dynamic programming as follows. We maintain two tables M of size  and C of size , such that , for each , and , for each . In Section 3.1, we computed two tables 
 and 
 each of size , such that 
 and 
, for each . Algorithm 2 uses these tables to fill the table M and returns .

Algorithm 2
Download : Download high-res image (70KB)
Download : Download full-size image
Algorithm 2. SolveMTIP(G,w).

Notice that, when we fill the cell , the cells  are already computed, for each  and for each . Moreover, when we fill the cell , the cell  is already computed. Since for each , the cell  is filled  times (for each ) and computed by taking the minimum over 
, for each , the total time for filling the table C is 
. Moreover, each cell  is computed by taking the minimum over 
, for each . Thus, each cell  is computed in  time, and the whole table is computed in 
 time. Therefore, the total running time of Algorithm 2 is 
.

The following theorem summarizes the result of this section.

Theorem 3.8

Let P be a set of n points located on a horizontal line. Then, one can compute in 
 time a range assignment ρ to the points of P, such that the induced graph 
 is strongly connected and its total interference is minimized.

4. MTIP in 2D
In this section, we prove that MTIP is NP-complete in 2D and present a polynomial-time 2-approximation algorithm for the problem.

Theorem 4.1

MTIP in 2D is NP-complete.

Proof

Given a range assignment ρ as a certificate, it is easy to verify in polynomial-time whether the graph induced by ρ is strongly connected and whether its total interference is bounded by a given value I. This implies that MTIP is in NP.

To prove hardness of MTIP, we adapt the proof of Buchin [4], making modifications necessary to address MTIP. For completeness, we supply the reduction details. The proof is based on a reduction from the problem of deciding whether a grid graph contains a Hamiltonian cycle, which is known to be NP-hard [11]. A grid graph is a graph whose vertex set is a subset of the integer grid , and two vertices are connected by an edge if and only if the distance between them is equal to 1.

Let  be a grid graph, where 
. We construct in polynomial-time a set P of 5n points in the plane, and show that G contains a Hamiltonian cycle iff there exists a range assignment ρ such that the induced graph 
 is strongly connected and 
. We assume that the degree of each vertex in G is at least 2, otherwise G cannot contain a Hamiltonian cycle.

We first transform the vertices of G to a set 
 of n points on a grid of side length 3.4, such that two vertices 
 and 
 are adjacent in G if and only if 
 and 
 (the points corresponding to 
 and 
) are adjacent in the new grid; see Fig. 9. Then, for each point 
, we locate four points 
, and 
 on the grid edges incident to 
, such that the distance between 
 and each one of them is equal to 1; see Fig. 9(b). Put 
. We will refer to 
 as the center of 
 and to the other four points as connectors. Let  
 
 be the resulting set. Clearly,  and P can be constructed in polynomial-time.

Fig. 9
Download : Download high-res image (46KB)
Download : Download full-size image
Fig. 9. (a) A grid graph G. (The bold edges form a Hamiltonian cycle.) (b) The resulting set P. Each set Pi ⊆ P corresponds to a vertex vi in G and consists of 5 points 
.

Lemma 4.2

Let ρ be a valid range assignment of P and let 
 be the graph induced by ρ. Then, for each , 
.

Proof

Since ρ is a valid assignment, for each 
, we have . Hence, 
 and , for each 
. Moreover, since 
 is strongly connected, the transmission range of at least one of the points of 
 must cover at least one point from 
, which means that either 
 or  for at least one connector 
. If 
, then 
 (since the degree of each vertex in G is at least 2), and therefore, 
; see Fig. 10(a). Otherwise, at least one connector 
 has . Then, , and therefore 
; see Fig. 10(b). ■

Fig. 10
Download : Download high-res image (32KB)
Download : Download full-size image
Fig. 10. SI(Pi)≥9.

Corollary 4.3

Let ρ be a valid range assignment of P. Then, if 
, for some , then 
, exactly one connector 
 has , and each of the other three connectors 
 has 
.

Proof

During the proof of Lemma 4.2, we showed that if 
, then 
, and hence 
. Thus, 
 and 
. Moreover, for each point 
, , and if , then . Since 
, exactly one point 
 has , which completes the proof of the lemma. ■

We now prove the correctness of the reduction. Suppose that G contains a Hamiltonian cycle C. We compute a valid range assignment ρ to the points of P, such that 
. Consider C as a directed cycle, such that, each vertex in C has in-degree 1 and out-degree 1. For each vertex 
 in G we assign ranges to the points of 
 as follows. We assign 1 to the center 
, assign 1.4 to one of the connectors (according to the outgoing edge incident to 
 in C), and assign 1 to each of the other three connectors. Since C is a Hamiltonian cycle, the graph induced by ρ is strongly connected. Moreover, 
, for each , and therefore 
.

Conversely, suppose that there exists a valid range assignment ρ to the points of P, such that 
. By Lemma 4.2, 
, for each . Since 
, we conclude that 
, for each . Moreover, by Corollary 4.3, in each set 
, exactly one connector p has  (where 
 and each of the other connectors 
 has 
). We construct a Hamiltonian cycle C in G as follows. For every two sets 
 and 
, we add the edge 
 to C if and only if the connector 
 assigned range  covers a point in 
. Thus, C is a subgraph of G, and, since 
 is strongly connected, C is connected. Moreover, since each set 
 has exactly one point which reaches a point not in 
, the degree of each vertex in C is exactly 2. Therefore, C is a Hamiltonian cycle in G. ■

5. Approximation algorithm for MTIP in 2D
Let P be a set of n points in the plane. Let 
⁎
 be an optimal range assignment to the points of P. Let 
⁎
 be the graph induced by 
⁎
, and put 
⁎
. In this section, we present a polynomial-time approximation algorithm that computes a valid range assignment ρ, such that 
.

Let s be a point of P. A broadcast tree for P rooted at s is a directed tree rooted at s, which contains a directed path from s to each point . A sink tree for P rooted at s is a directed tree rooted at s, which contains a directed path from each point  to s. We introduce two variants of MTIP, namely MTIP1 and MTIP2. In MTIP1, the goal is to compute a range assignment 
 to the points of P, such that the graph induced by 
 contains a broadcast tree 
 for P rooted at s of minimum total interference. And, in MTIP2, the goal is to compute a range assignment 
 to the points of P, such that the graph induced by 
 contains a sink tree 
 for P rooted at s of minimum total interference.

Let 
 and 
 be optimal range assignments for MTIP1 and MTIP2, respectively, and let 
 and 
 be the corresponding broadcast and sink trees. We compute a new range assignment ρ as follows. For each point , we set 
. Let 
 be the graph induced by ρ. Then, 
 is strongly connected, since given two points , one can get from p to q by first following the directed path in 
 from p to s and then following the directed path in 
 from s to q. In the next lemma we bound 
.

Lemma 5.1

.

Proof

Consider the graph 
⁎
. Since 
⁎
 is strongly connected, there exists a directed path from s to each of the points in  and vice versa. Thus, 
⁎
 contains broadcast and sink trees rooted at s. Let 
 and 
 be such broadcast and sink trees, respectively. Clearly, 
 and 
. Since 
 is a broadcast tree of minimum total interference and 
 is a sink tree of minimum total interference, we have 
 and 
. Moreover, since 
, we have 
. ■

We now show how to solve MTIP1 and MTIP2 optimally, and therefore, by Lemma 5.1, we can obtain a valid range assignment ρ, such that 
.

Solving MTIP1

An optimal range assignment 
 for MTIP1 can be found easily. We assign s the range 
, and for each point , we assign p the range 
. Clearly, 
 induces a broadcast tree 
 rooted at s and 
, which is optimal.

Solving MTIP2

The algorithm in this case is more involved. Let  be the complete weighted directed graph on P, such that the weight of  is . Let 
 be a sink tree rooted at s in G, and let 
 denote its weight. Let 
 be a range assignment to the points of P, such that the graph induced by 
 contains a sink tree 
 rooted at s. The following lemma generalizes Lemma 3.1 and its proof is identical.

Lemma 5.2

 is an optimal range assignment for MTIP2 if and only if 
 is a minimum-weight sink tree rooted at s in G.

By Lemma 5.2, to compute an optimal range assignment 
 for MTIP2, it is sufficient to compute a minimum-weight sink tree rooted at s in G. We compute a minimum-weight sink tree rooted at s in G using Edmonds' algorithm [6] (for finding minimum directed spanning trees in directed graphs).

We construct the (inverse) complete weighted directed graph 
, such that the weight of 
 is 
. Clearly, 
 is a broadcast tree rooted at s in 
 of weight W if and only if T (the tree obtained by inverting the edges of 
) is a sink tree rooted at s in G of weight W. Therefore, in order to compute a minimum-weight sink tree rooted at s in G, it suffices to compute a minimum-weight broadcast tree rooted at s in 
. Since a minimum-weight broadcast tree rooted at s in 
 can be computed in 
 time [16] using Edmonds' algorithm, we can compute a minimum-weight sink tree rooted at s in G in 
 time. Moreover, since G and 
 can be constructed in 
 time, we can solve MTIP2 in 
 time (applying Lemma 5.2).

The following theorem summarizes the result of this section.

Theorem 5.3

Let P be a set of n points in the plane. Then, one can compute in 
 time a valid range assignment ρ to the points of P, such that the graph 
 induced by ρ is strongly connected and its total interference is at most .

6. Conclusion
In this paper, we considered the problem of computing a range assignment to a set of sensors in the plane, so that the induced communication graph is strongly connected and the total interference of the network is minimized. We presented an 
-time algorithm that solves this problem in the one-dimensional case. For the two-dimensional case, we showed that the problem is NP-complete and gave a polynomial-time 2-approximation algorithm for the problem. It would be interesting to see if the techniques presented in this paper can be utilized to tackle the problem of minimizing the maximum interference in the plane.