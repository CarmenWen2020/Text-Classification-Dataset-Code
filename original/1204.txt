Abstract
In this paper, we focus on the uniform bipartition problem in the population protocol model. This problem aims to divide a population into two groups of equal size. In particular, we consider the problem in the context of arbitrary communication graphs. As a result, we investigate the solvability of the uniform bipartition problem with arbitrary communication graphs when agents in the population have designated initial states, under various assumptions such as the existence of a base station, symmetry of the protocol, and fairness of the execution. When the problem is solvable, we present protocols for uniform bipartition. When global fairness is assumed, the space complexity of our solutions is tight.

Keywords
Population protocol
Uniform bipartition
Distributed protocol

1. Introduction
1.1. Background
In this paper, we consider the population protocol model introduced by Angluin et al. [1]. The population protocol model is an abstract model for low-performance devices. In the population protocol model, devices are represented as anonymous agents, and a population is represented as a set of agents. Those agents move passively (i.e., they cannot control their movements), and when two agents approach, they are able to communicate and update their states (this pairwise communication is called an interaction). A computation then consists of an infinite sequence of interactions.

Application domains for population protocols include sensor networks used to monitor live animals (each sensor is attached to a small animal and monitors e.g. its body temperature) that move unpredictably (hence, each sensor must handle passive mobility patterns). Another application domain is that of molecular robot networks [2]. In such systems, a large number of molecular robots collectively work inside a human body to achieve goals such as transport of medicine. Since those robots are tiny, their movement is uncontrollable, and robots may only maintain extremely small memory.

In the population protocol model, many researchers have studied various fundamental problems such as leader election protocols [3] (A population protocol solves leader election if starting from an initially uniform population of agents, eventually a single agent outputs leader, while all others output non-leader), counting [4], [5], [6] (The counting problem consists in counting how many agents participate to the protocol; As the agents' memory is typically constant, this number is output by a special agent that may maintain logarithmic size memory, the base station), majority [7] (The majority problem aims to decide which, if any, initial state in a population is a majority), k-partition [8], [9], [10] (The k-partition problem consists in dividing a population into k groups of equal size), etc.

In this paper, we focus on the uniform bipartition problem [11], [9], [10], whose goal is to divide a population into two stable groups of equal size (the difference is one if the population size is odd). To guarantee the stability of the group, each agent eventually belongs to a single group and never changes the group after that. Applications of the uniform bipartition include saving batteries in a sensor network by switching on only one group, or executing two tasks simultaneously by assigning one task to each group. Moreover, the uniform bipartition can be applied to some of the computations of population protocol. By repeating the uniform bipartition h times, we can divide a population into k groups of equal size, where n is the number of agents and k is 
. This implies that the uniform bipartition can be regarded as a calculation of . Contrary to previous work that considered complete communication graphs [11], [10], we consider the uniform bipartition problem over arbitrary graphs. In the population protocol model, most existing works consider the complete communication graph model (every pairwise interaction is feasible). However, realistic networks command studying incomplete communication graphs (where only a subset of pairwise interactions remains feasible) as low-performance devices and unpredictable movements may not yield a complete set of interactions. Moreover, in this paper, we assume the designated initial states (i.e., all agents share the same given initial state), and consider the problem under various assumptions such as the existence of a base station, symmetry of the protocol, and fairness of the execution. Although protocols with arbitrary initial states tolerate a transient fault, protocols with designated initial states can usually be designed using fewer states, and exhibit faster convergence times. Actually, it was shown by Yasumi et al. [9] that, with arbitrary initial states, constant-space protocols cannot be constructed in most cases even assuming complete graphs.

1.2. Related works
The population protocol model was proposed by Angluin et al. [1], who were recently awarded the 2020 Edsger W. Dijkstra prize in Distributed Computing for their work. While the core of the initial study was dedicated to the computability of the model, subsequent works considered various problems (e.g., leader election, counting, majority, uniform k-partition) under different assumptions (e.g., existence of a base station, fairness, symmetry of protocols, and initial states of agents).

The leader election problem was studied from the perspective of time and space efficiency. Doty and Soloveichik [12] proved that  expected parallel time is required to solve leader election with probability 1 if agents have a constant number of states. Relaxing the number of states to a polylogarithmic value, Alistarh and Gelashvili [13] proposed a leader election protocol in polylogarithmic expected stabilization time. Then, Gąsieniec et al. [14] designed a protocol with  states and  expected time. Furthermore, the protocol of Gąsieniec et al. [14] is space-optimal for solving the problem in polylogarithmic time. Sudo et al. [15] presented a leader election protocol with  states and  expected time. This protocol is time-optimal for solving the problem. Finally, Berenbrink et al. [16] proposed a time and space optimal protocol that solves the leader election problem with  states and  expected time. In the case of arbitrary communication graphs, it turns out that self-stabilizing leader election is impossible [17] (a protocol is self-stabilizing if its correctness does not depend on its initial global state). This impossibility can be avoided if oracles are available [18], [19] or if the self-stabilization requirement is relaxed: Sudo et al. [20] proposed a loosely stabilizing protocol for leader election (loose stabilization relates to the fact that correctness is only guaranteed for a very long expected amount of time).

The counting problem was introduced by Beauquier et al. [6] and popularized the concept of a base station. Space complexity was further reduced by follow-up works [5], [21], until Aspnes et al. [4] finally proposed a time and space optimal protocol. On the other hand, by allowing the initialization of agents, the counting protocols without the base station were proposed for both exact counting [22] and approximate counting [23], [22]. Alistarh et al. [23] proposed a protocol that computes an integer k such that 
 
 in  time with high probability using  states. After that, Berenbrink et al. [22] designed a protocol that outputs either  or  in 
 time with high probability using  states. Moreover, they proposed the exact counting protocol that computes n in  time using 
 states with high probability.

The majority problem was addressed under different assumptions (e.g., with or without failures [7], deterministic [24], [25] or probabilistic [26], [27], [28], [25] solutions, with arbitrary communication graphs [29], etc.). Those works also consider minimizing the time and space complexity. Berenbrink et al. [30] show trade-offs between time and space for the problem.

To our knowledge, the uniform k-partition problem and its variants have only been considered in complete communication graphs. Lamani et al. [31] studied a group decomposition problem that aims to divide a population into groups of designated sizes. Yasumi et al. [8] proposed a uniform k-partition protocol with no base station. Umino et al. [32] extended the result to the R-generalized partition problem that aims at dividing a population into k groups whose sizes follow a given ratio R. Also, Delporte-Gallet et al. [33] proposed a k-partition protocol with relaxed uniformity constraints: the population is divided into k groups such that in any group, at least  agents exist, where n is the number of agents.

Most related to our work is the uniform bipartition solution for complete communication graphs provided by Yasumi et al. [11], [9]. For the uniform bipartition problem over complete graphs with designated initial states, Yasumi et al. [11], [9] studied space complexity under various assumptions such as: (i) an initialized base station, a non-initialized base station, or no base station (an initialized base station has a designated initial state, while a non-initialized has an arbitrary initial state), (ii) asymmetric or symmetric protocols (asymmetric protocols allow interactions between two agents with the same state to map to two resulting different states, while symmetric protocols do not allow such a behavior), and (iii) global or weak fairness (weak fairness guarantees that every individual pairwise interaction occurs infinitely often, while global fairness guarantees that every recurrently reachable configuration is eventually reached). Furthermore, they also study the solvability of the uniform bipartition problem with arbitrary initial states. Table 1 shows the minimum number of states to solve the uniform bipartition with designated initial states over complete communication graphs.


Table 1. The minimum number of states to solve the uniform bipartition problem with designated initial states over complete graphs [11], [9].

Base station	Fairness	Symmetry	Upper bound	Lower bound
initialized/non-initialized base station	global	asymmetric	3	3
symmetric	3	3
weak	asymmetric	3	3
symmetric	3	3

no base station	global	asymmetric	3	3
symmetric	4	4
weak	asymmetric	3	3
symmetric	unsolvable
There exist some protocol transformers that transform protocols for some assumptions into ones for other assumptions. Angluin et al. [1] proposed a transformer that turns a protocol for complete communication graphs into a protocol for arbitrary communication graphs. This transformer requires the quadruple state space and works under global fairness. In this transformer, agents exchange their states even after convergence. For the uniform bipartition problem, since agents must keep their groups after convergence, they cannot exchange their states among different groups and thus such a transformer [1] cannot directly apply to the uniform bipartition problem. Bournez et al. [34] proposed a transformer that transforms an asymmetric protocol into a symmetric protocol by assuming additional states. In the approach by Bournez et al. [34], only protocols with complete communication graphs were considered, and the transformer works under global fairness. We use the same idea to construct a symmetric uniform bipartition protocol under global fairness without a base station.

1.3. Our contributions
In this paper, we study the solvability of the uniform bipartition problem with designated initial states over arbitrary graphs. A summary of our results is presented in Table 2. Let us first observe that, as complete communication graphs are a special case of arbitrary communication graphs, the impossibility results by Yasumi et al. [9] remain valid in our setting. With a base station (be it initialized or non-initialized) under global fairness, we extend the three states protocol by Yasumi et al. [9] from complete communication graphs to arbitrary communication graphs. With a non-initialized base station under weak fairness, we propose a new symmetric protocol with  states, with the assumption that an upper bound P of the number of agents is given to agents. These results yield identical upper bounds for the easier cases of asymmetric protocols and/or initialized base station. In addition, we also show a condition of communication graphs where the number of states in the protocol can be reduced from  to constant. Concretely, we show that the number of states in the protocol can be reduced to  if we assume communication graphs such that every cycle either includes the base station or its length is not a multiple of l, where l is a positive integer greater than three. On the other hand, with no base station under global fairness, we prove that four and five states are necessary and sufficient to solve uniform bipartition with asymmetric and symmetric protocols, respectively. In the same setting, in complete graphs, three and four states are necessary and sufficient. So, one additional state enables problem solvability in arbitrary communication graphs in this setting. With no base station under weak fairness, we prove that the problem cannot be solved, using a similar argument as in the impossibility result for leader election by Fischer and Jiang [35]. Overall, we show the solvability of uniform bipartition in a variety of settings for a population of agents with designated initial states assuming arbitrary communication graphs. In cases where the problem remains feasible, we provide upper and lower bounds with respect to the number of states each agent maintains, and in all cases where global fairness can be assumed, our bounds are tight.


Table 2. The minimum number of states to solve the uniform bipartition problem with designated initial states over arbitrary graphs. P is a known upper bound of the number of agents, and l ≥ 3 and h are positive integers.

Base station	Fairness	Symmetry	Upper bound	Lower bound
initialized/non-initialized base station	global	asymmetric	3a	3b
symmetric	3a	3b
weak	asymmetric	3P + 1a	3b
3l + 1 for no l ⋅ h cyclea	
symmetric	3P + 1a	3b
3l + 1 for no l ⋅ h cyclea	

no base station	global	asymmetric	4a	4a
symmetric	5a	5a
weak	asymmetric	unsolvablea
symmetric	unsolvableb
a
Contributions of this paper.

b
Deduced from Yasumi et al. [9].

2. Definitions
2.1. Population protocol model
A population whose communication graph is arbitrary is represented by an undirected connected graph , where V is a set of agents, and  is a set of edges that represent the possibility of an interaction between two agents. That is, two agents  and  can interact only if  holds. A protocol  consists of Q and δ, where Q is a set of possible states for agents, and δ is a set of transitions from  to . Each transition in δ is denoted by 
, which means that, when an interaction between an agent x in state p and an agent y in state q occurs, their states become 
 and 
, respectively. Moreover, we say x is an initiator and y is a responder. When x and y interact as an initiator and a responder, respectively, we simply say that x interacts with y. Transition 
 is null if both 
 and 
 hold. We omit null transitions in the descriptions of protocols. Protocol  is deterministic if, for any pair of states , exactly one transition 
 exists in δ. We consider only deterministic protocols in this paper. Protocol  is symmetric if, for every transition 
 in δ, 
 exists in δ. In particular, if a protocol  is symmetric and transition 
 exists in δ, 
 holds. If a protocol is not symmetric, the protocol is asymmetric. A global state of a population is called a configuration, defined as a vector of (local) states of all agents. A state of agent a in configuration C, is denoted by . Moreover, when C is clear from the context, we simply use  to denote the state of agent a. A transition between two configurations C and 
 is described as 
, and means that configuration 
 is obtained from C by a single interaction between two agents. For two configurations C and 
, if there exists a sequence of configurations 
 such that 
 holds for every i (), we say 
 is reachable from C, denoted by 
⁎
. An infinite sequence of configurations 
 is an execution of a protocol if 
 holds for every i (). An execution Ξ is weakly-fair if, for each pair of agents 
, v (resp. 
) interacts with 
 (resp., v) infinitely often.1 An execution Ξ is globally-fair if, for every pair of configurations C and 
 such that 
, 
 occurs infinitely often when C occurs infinitely often. Intuitively, global fairness guarantees that, if configuration C occurs infinitely often, then every possible interaction in C also occurs infinitely often. Then, if C occurs infinitely often, 
 satisfying 
 occurs infinitely often, we can deduce that 
 satisfying 
 also occurs infinitely often. Overall, with global fairness, if a configuration C occurs infinitely often, then every configuration 
⁎
 reachable from C also occurs infinitely often.

In this paper, we consider three possibilities for the base station: initialized base station, non-initialized base station, and no base station. In the model with a base station, we assume that a single agent, called a base station, exists in V. Then, V can be partitioned into 
, the singleton set containing the base station, and 
, the set of agents except for the base station. The base station can be distinguished from other agents in 
, although agents in 
 cannot be distinguished. Then, the state set Q can be partitioned into a state set 
 for the base station, and a state set 
 for agents in 
. The base station has unlimited resources (with respect to the number of states), in contrast with other resource-limited agents (that are allowed only a limited number of states). So, when we evaluate the space complexity of a protocol, we focus on the number of states 
 for agents in 
 and do not consider the number of states 
 that are allocated to the base station. In the sequel, we thus say a protocol uses x states if 
 holds. When we assume an initialized base station, the base station has a designated initial state. When we assume a non-initialized base station, the base station has an arbitrary initial state (in 
), although agents in 
 have the same designated initial state. When we assume no base station, there exists no base station and thus 
 holds. For simplicity, we use agents only to refer to agents in 
 in the following sections. To refer to the base station, we always use the term base station (not an agent). In the initial configuration, both the base station and the agents are not aware of the number of agents. However, in a protocol in Section 3.2 and results for lower bounds, we assume that an upper bound P of the number of agents is given.

2.2. Uniform bipartition problem
Let 
,  be a function that maps a state of an agent to red or . We define the color of an agent a as . Then, we say that agent a is red (resp., ) if  (resp., ) holds. If an agent a has state s such that  (resp., ), we call a a red agent (resp., a  agent). For some population V, the number of red agents (resp.,  agents) in V is denoted by  (resp., ). When V is clear from the context, we simply write  and .

A configuration C is stable with respect to the uniform bipartition if there exists a partition 
, 
 of 
 that satisfies the following conditions:

1.
 holds, and

2.
For every configuration 
 such that 
⁎
, each agent in 
 (resp., 
) remains red (resp., ) in 
.

An execution 
, 
, 
, … solves the uniform bipartition problem if Ξ includes a configuration 
 that is stable for uniform bipartition. Finally, a protocol  solves the uniform bipartition problem if every possible execution Ξ of protocol  solves the uniform bipartition problem.

3. Upper bounds with a non-initialized base station
In this section, we prove some upper bounds on the number of states that are required to solve the uniform bipartition problem over arbitrary graphs with designated initial states and a non-initialized base station. More concretely, with global fairness, we propose a symmetric deterministic protocol with three states by extending the protocol by Yasumi et al. [9] from a complete communication graph to an arbitrary communication graph. In the case of weak fairness, we present a symmetric protocol with  states, where P is a known upper bound of the number of agents. Recall that we consider only deterministic protocols in this paper.

3.1. Upper bound for symmetric protocols under global fairness
The state set of agents in this protocol is 
, and we assume that  and  hold. The designated initial state of agents is . The idea of the protocol is as follows: the base station assigns red and  to agents whose state is  alternately. As the base station cannot meet every agent (the communication graph is arbitrary), the positions of state  are moved throughout the communication graph using transitions. Thus, if an agent with  state exists somewhere in the network, the base station has infinitely many chances to interact with a neighboring agent with  state. This implies that the base station is able to repeatedly assign red and  to neighboring agents with  state unless no agent anywhere in the network has  state. Since the base station assigns red and  alternately, the uniform bipartition is completed after no agent has  state.

To make red and  alternately, the base station has a state set 
, 
. Using its current state, the base station decides which color to use for the next interaction with a neighboring agent with  state. Now, to move the position of an  state in the communication graph, if an agent with  state and an agent with red (or ) state interact, they exchange their states. This implies that eventually an agent adjacent to the base station has  state and then the agent and the base station interact (global fairness guarantees that such interaction eventually happens). Transition rules of the protocol are the following (for each transition rule 
, transition rule 
 exists, but we omit the description).

1.

2.

3.

4.

From these transition rules, eventually each agent transitions to red or . Hence, there exist  red (resp., ) agents, and   (resp., red) agents if the base station has 
 (resp., 
) as an initial state. When no agent has  state, the protocol converges (indeed, no interaction is defined when no agent has  state). Therefore, the protocol solves the uniform bipartition problem.

We now prove the correctness of the protocol.

Theorem 1

In the population protocol model with a non-initialized base station, there exists a symmetric protocol with three states per agent that solves the uniform bipartition problem with designated initial states assuming global fairness in arbitrary communication graphs.

Proof

Recall that  (resp., ) denotes the number of agents in state s such that  (resp., ) holds, thus initially  and  hold. We show that eventually  holds and no agent ever changes its state afterwards. Transition rules 1 and 2 indicate that, if the base station has state 
 (resp., 
), and an agent with  state interact, the agent state becomes red (resp., ), and the base station state becomes 
 (resp., 
). By repeating these transitions, agents are assigned red and  alternately, and the number of agents in state  decreases. This implies that, eventually  holds by alternating transition rules 1 and 2 (transition rules 1 and 2 are never enabled simultaneously, and executing one disables it while enabling the other). Transition rules 3 and 4 indicate that, if an agent with  state and an agent with red (or ) state interact, they exchange their states. From the global fairness hypothesis and transition rules 3 and 4, if there exists an agent with  state, the base station and a neighboring agent with  state eventually interact. Thus, transition rules 1 and 2 occur repeatedly unless no agent has . After all agents have red or  state, no agent ever changes its color. Recall that agents are assigned red and  alternately and thus  holds after those assignments. Moreover, the arguments do not depend on the initial state of the base station, and the proposed protocol is symmetric. Therefore, the theorem holds. □

Note that, under weak fairness, this protocol does not solve the uniform bipartition problem. This is because we can construct a weakly-fair execution of this protocol such that some agents keep  state infinitely often. For example, we can make an agent keep  by constructing an execution as follows: If the agent (in ) interacts with an agent in red or , the next interaction occurs between the same pair of agents.

3.2. Upper bound for symmetric protocols under weak fairness
3.2.1. A protocol over arbitrary graphs
In this protocol, every agent x has variables 
, r, b} and 
, 1, 2, …, P}. Variable 
 represents the color of agent x. That is, for an agent x, if 
 or 
 holds,  holds. On the other hand, if 
 holds,  holds. The protocol is given in Protocol 1.

Protocol 1
Download : Download high-res image (149KB)
Download : Download full-size image
Protocol 1. Uniform bipartition protocol with 3P + 1 states.

The basic strategy of the protocol is the following.

1.
Create a spanning tree rooted at the base station. Concretely, agent x assigns its depth in a tree rooted at the base station into variable 
. Variable 
 is initialized to ⊥. Variable 
 obtains the depth of x in the spanning tree as follows: If the base station and an agent p with 
 interact, 
 becomes 1. If an agent q with 
 and an agent p with 
 interact, 
 becomes 
. By these behaviors, for any agent x, eventually variable 
 has a depth of x in a tree rooted at the base station.

2.
Using the spanning tree, carry the initial color ini toward the base station and make the base station assign r and b to agents one by one. Concretely, if agents x and y interact and both 
 and 
 hold, x and y exchange their colors (i.e., ini is carried from x to y). Hence, since ini is always carried to a smaller , eventually an agent z with 
 obtains ini. After that, the base station and the agent z interact and the base station assigns r or b to z. Note that, if the base station assigns r (resp., b), the base station assigns b (resp., r) next.

Then, for any agent v, eventually 
 holds. Hence, there exist  red (resp., ) agents, and   (resp., red) agents if variable RB in the base station has r (resp., b) as an initial value. Therefore, the protocol solves the uniform bipartition problem.
From now, we demonstrate the correctness of the protocol. Let  
, 
, and 
. First of all, by the pseudocode, we can observe that #r, #b, and  do not change except for an interaction between the base station and an agent v such that 
 and 
 hold. This is because #r, #b, and  are changed only by lines 3–4.

Lemma 1

For any weakly-fair execution of Protocol 1, unless an interaction occurs between the base station and an agent v such that 
 and 
 hold, #r, #b, and  do not change.

We now show three basic properties of variable . First, we have the following lemma because, in the pseudocode, agent v never changes 
 if 
 holds.

Lemma 2

For any agent v, when 
 holds in a configuration, 
 does not change afterwards.

Then, we show the remaining properties of variable .

Lemma 3

For any agent v, 
 holds after some configuration in any weakly-fair execution of Protocol 1.

Proof

By the weak fairness assumption, for any agent 
 adjacent to the base station, eventually 
 and the base station interact. By lines 6–7 of the pseudocode, 
 holds after the interaction with the base station. From Lemma 2, for any agent v, once 
 holds, 
 holds perpetually. As the graph is connected, if there is a pair of agents v and 
 such that 
 and 
 hold, there is a pair of adjacent agents 
 and 
 such that 
 and 
 hold. Hence, eventually such agents 
 and 
 interact by the weak fairness assumption, and after the interaction occurs, 
 holds. By using a similar argument, for any agent v, eventually 
 holds. □

Lemma 4

For any agent 
, when 
 is neither ⊥ nor one, then 
 is adjacent to an agent 
 such that 
 holds. When 
 is 1, 
 is adjacent to the base station.

Proof

We focus on interactions such that an agent v assigns a value other than ⊥ to 
. By Lemma 2, Lemma 3, the number of such interactions for a given agent is exactly one. We consider two cases.

First, we consider the case when 
 becomes one by the interaction. From the protocol, 
 can become one only if the base station and v interact. Hence, v is adjacent to the base station.

Next, we consider the case that 
 becomes neither ⊥ nor one by the interaction. From the protocol, if the interaction happens between v and an agent w, 
 becomes 
 by the interaction. By Lemma 2, 
 and 
 never change afterward. Thus, the lemma holds. □

From the above lemmas, we show that eventually  holds in any weakly-fair execution of the protocol.

Lemma 5

For any weakly-fair execution of Protocol 1,  holds after finite time.

Proof

For the purpose of contradiction, let us assume that, after some configuration C,  never decreases. Let us consider a configuration 
 such that 
 holds for any agent v in 
, and 
 appears after C. By Lemma 3, such 
 exists. In 
, let 
, and let 
 be an agent such that 
 holds. By Lemma 4, either 
 holds or 
 is adjacent to an agent 
 such that 
.

First, we consider the case when 
 holds. By Lemma 4, 
 is adjacent to the base station. Since 
 holds, there is not an agent 
 such that 
 holds. Hence, from the protocol, 
 keeps ini unless 
 and the base station interact. Thus, eventually 
 with 
 and the base station interact. Then,  decreases in this case.

Next, we consider the case that 
 is adjacent to an agent 
 such that 
. From the protocol, since 
 holds, 
 keeps ini unless an interaction happens between 
 and an agent 
 such that 
 holds. From the weak fairness, eventually 
 and such 
 interact and 
 becomes ini. At that time, the smallest depth of agents with color ini decreases. By repeating this behavior similarly, eventually some agent 
 with 
 obtains color ini. After that, 
 and the base station interact and  decreases. This is a contradiction. □

Next, we prove that  always holds in any weakly-fair execution of the protocol.

Lemma 6

For any configuration in any weakly-fair execution of Protocol 1, (i)  holds if  holds, and (ii)  holds if  holds.

Proof

Consider an execution 
, 
, … of the protocol. We prove the lemma by induction on the index of a configuration. In the base case (
),  holds and thus alternatives (i) and (ii) of the lemma hold immediately.

For the induction step, assume that there exists an integer  such that the lemma holds in 
. Consider an interaction at 
. We consider two cases.

First, we consider the case where, for an agent v such that 
 and 
 hold, the base station and v do not interact. By Lemma 1, when the base station and such v do not interact, #r, #b, and  do not change. Moreover, from the protocol, RB does not change at the interaction, and thus both alternatives (i) and (ii) of the lemma hold in this case.

Next, we consider the case where, for an agent v such that 
 and 
 hold, the base station and v interact.

•
In the case where  holds in 
: After the interaction at 
, #r increases by one and RB becomes b. By the induction assumption, since  holds in 
,  and  hold in 
. Hence, alternatives (i) and (ii) of the lemma hold.

•
In the case where  holds in 
: After the interaction at 
, #b increases by one and RB becomes r. By the induction assumption, since  holds in 
,  and  hold in 
. Hence, alternatives (i) and (ii) of the lemma hold.

Thus, the lemma holds. □
Using Lemma 5, Lemma 6, we show that the protocol solves the uniform bipartition problem.

Theorem 2

Protocol 1 solves the uniform bipartition problem. That is, there exists a protocol with  states and designated initial states that solves the uniform bipartition problem under weak fairness assuming arbitrary communication graphs with a non-initialized base station.

Proof

By Lemma 5, Lemma 6,  holds in any weakly-fair execution of the protocol and eventually  holds in the execution. Moreover, from the protocol, when there exists no agent v such that 
, any agent x does not change its 
. Thus, the protocol solves the problem. Additionally, the protocol works with  states. This is because, if 
 holds, 
 holds. That is, 
 takes ⊥, 1, 2, …, P for ini, and takes 1, 2, …, P for r and b.

Therefore, the theorem holds. □

3.2.2. A protocol with constant states over a restricted class of graphs
In this subsection, we show that the space complexity of Protocol 1 can be reduced to constant for communication graphs such that every cycle either includes the base station or its length is not a multiple of l, where l is a positive integer at least three.

We modify Protocol 1 as follows. Each agent maintains the distance from the base station by computing modulo l plus 1. That is, we change lines 12 and 14 in Protocol 1 to 
 and 
, respectively. Now 
, …, l} holds for any agent x. Then we define the relation 
 as follow: 
 holds if and only if 
 holds, and we use 
 instead of 
 in lines 16 and 20.

We can easily observe that these modifications do not change the essence of Protocol 1. For two agents x and y, we say  if 
 holds. Each agent x eventually assigns a depth of x minus 1 modulo l plus 1 to 
, and at that time there exists a path 
 such that 
 is a neighbor of the base station, 
 holds, and 
 holds for any . In addition, there exists no cycle 
 such that 
 holds for any . This is because, from the definition of relation ‘≺’, the length of such a cycle should be a multiple of l, but we assume that underlying communication graphs do not include a cycle of agents in 
 whose length is a multiple of l. Hence, similarly to Protocol 1, we can carry the initial color ini toward the base station and make the base station assign r and b to agents one by one.

Corollary 1

There exists a protocol with  states and designated initial states that solves the uniform bipartition problem under weak fairness assuming arbitrary communication graphs with a non-initialized base station if, for any cycle of the communication graphs, it either includes the base station or its length is not a multiple of l, where l is a positive integer at least three.

4. Upper and lower bounds with no base station
In this section, we show upper and lower bounds of the number of states to solve the uniform bipartition problem with no base station and designated initial states over arbitrary communication graphs. Concretely, under global fairness, we prove that the minimum number of states for asymmetric deterministic protocols is four, and the minimum number of states for symmetric protocols is five. Under weak fairness, we prove that the uniform bipartition problem cannot be solved without a base station using proof techniques similar to those Fischer and Jiang [35] used to show the impossibility of leader election. Recall that we consider only deterministic protocols in this paper.

4.1. Upper bound for asymmetric protocols under global fairness
In this subsection, over arbitrary graphs with designated initial states and no base station under global fairness, we give an asymmetric protocol with four states.

We define a state set of agents as 
, and function f as follows: 
 and 
. We say an agent has a token if its state is 
 or 
. Initially, every agent has state 
, that is, every agent is red and has a token. The transition rules are given in Protocol 2 (for each transition rule 
 except for transition rule 1, transition rule 
 exists, but we omit the description).

Protocol 2
Download : Download high-res image (45KB)
Download : Download full-size image
Protocol 2. Uniform bipartition protocol with four states.

The basic strategy of the protocol is as follows. When two agents with tokens interact and one of them is red, a red agent transitions to  and the two tokens are deleted (transition rules 1 and 2). Since n tokens exist initially and the number of tokens decreases by two in an interaction,   agents appear and  red agents remain after all tokens (except one token for the case of odd n) disappear. To make such interactions, the protocol moves a token when agents with and without a token interact (transition rules 3, 4, 5, and 6). Global fairness guarantees that, if two tokens exist, an interaction of transition rule 1 or 2 happens eventually. Therefore, the uniform bipartition is achieved by the protocol.

From now, we prove the correctness of the protocol. We define #r, #b, 
, 
 as the number of agents that have state r, b, 
, 
, respectively. Let 
 and 
 be the number of red and  agents, respectively. Let 
 be the number of agents with tokens.

Lemma 7

In any globally-fair execution of Protocol 2, 
 holds in any configuration.

Proof

Consider an execution 
, 
, … of the protocol. We prove the equation by induction on the index of a configuration. The base case is the case of 
. In this case, the equation holds because all agents have 
 initially. For the induction step, assume that the equation holds in 
 . Consider an interaction at 
 for each transition rule.

•
Transition rule 1: When the transition rule 1 occurs at 
, #r and #b increase by one.

•
Transition rule 2: When the transition rule 2 occurs at 
, 
 decreases by one, and #b increases by two.

•
Transitions rule 3 and 4: When the transition rule 3 or 4 occurs at 
, #r, #b, and 
 do not change.

•
Transition rule 5: When the transition rule 5 occurs at 
, #b decreases by one, and #r and 
 increase by one.

•
Transition rule 6: When the transition rule 6 occurs at 
, #b increases by one, and #r and 
 decrease by one.

For every case, ⁎
 holds in 
. Therefore, the lemma holds. □
Lemma 8

For any globally-fair execution of the Protocol 2,  holds after finite time.

Proof

First of all, there is no transition rule that increases . This implies that, if  holds at some configuration,  holds thereafter. Hence, for the purpose of contradiction, we assume that there exists a globally-fair execution Ξ of the protocol where  continuously holds after some configuration.

Consider a configuration C that occurs infinitely often in Ξ. Note that C is stable and satisfies . First, we show that a  agent exists in C. In the initial configuration, all agents have 
. Thus, by the first interaction, an agent with b occurs by transition rule 1. Since there is no transition that decreases the number of  agents, there exists a  agent in C. In addition, since 
 holds by Lemma 7, a red agent exists in C. Consider two agents 
 and 
 such that 
 is adjacent to 
, and 
 is red, and 
 is  in C.

Since tokens can move through a graph without changing colors by swapping states (transition rules 3,4,5, and 6), a configuration 
 such that 
 and 
 have a token is reachable from C. When 
 and 
 interact at 
,  holds in 
. From the global fairness assumption, since C occurs infinitely often in Ξ, 
 also occurs infinitely often. Since  continuously holds after some configuration, this is a contradiction. □

Next, by using these lemmas, we show that Protocol 2 solves the problem under the assumptions.

Theorem 3

Protocol 2 solves the uniform bipartition problem. That is, there exists a protocol with four states and designated initial states that solves the uniform bipartition problem under global fairness over arbitrary communication graphs.

Proof

Since  is reduced only by transition rules 1 and 2,  is reduced by two in an interaction. This implies that, by Lemma 8, when n is even (resp., odd),  (resp., ) holds after some configuration C.

First, we consider the case that n is even. By Lemma 7, if  holds,  holds. Hence, since  holds,  holds at C. Moreover, since agents can change their colors only if  holds, they do not change their colors after C. Hence C is a stable configuration, and thus the uniform bipartition is completed.

Next, we consider the case that n is odd. When  holds, we consider two cases. If an agent in state 
 exists at C, by Lemma 7,  holds and thus 
 holds. If an agent in state 
 exists at C, by Lemma 7,  holds and thus 
 holds. Hence, in both cases,  holds at C. Since agents can change their colors only if  holds, they do not change their colors after C. Hence C is a stable configuration, and thus the uniform bipartition is completed. □

4.2. Upper bound for symmetric protocols under global fairness
In this subsection, with arbitrary communication graphs with designated initial states and no base station under global fairness, we give a symmetric protocol with five states. We obtain the symmetric protocol by applying a transformer proposed in [34] to the protocol in subsection 4.1. The transformer simulates an asymmetric protocol on a symmetric protocol. To do this, the transformer requires additional states. Moreover, the transformer works with a complete communication graphs. We show that one additional state is sufficient to transform from the asymmetric uniform bipartition protocol to symmetric one even if we assume arbitrary graphs.

Observe that, with designated initial states and no base station, clearly no symmetric protocol can solve the problem if the number of agents n is two (the state of the two agents is the same in the initial state, so symmetry is never broken and uniform bipartition cannot occur). Thus, we assume that  holds.

We define a state set of agents as 
, and function f as follows: 
 and 
. We say an agent has a token if its state is 
, 
, or 
. Initially, every agent has state 
, that is, every agent is red and has a token. The transition rules are given in Protocol 3.

Protocol 3
Download : Download high-res image (67KB)
Download : Download full-size image
Protocol 3. Uniform bipartition protocol with five states.

The idea of Protocol 3 is similar to Protocol 2. That is, when two agents with tokens interact and one of them is red, a red agent transitions to , and the two tokens are deleted. Then, eventually   agents appear and  red agents remain after all tokens (except one token for the case of odd n) disappear. However, to make a red agent transition to a  agent in the first place, Protocol 2 includes transition rule 1 that makes agents with the same states transition to different states. This implies that Protocol 2 is not symmetric. Hence, by borrowing the technique proposed in [34], we improve Protocol 2 so that the new protocol (Protocol 3) makes a red agent transition to a  agent without such a transition (and two tokens are deleted at that time). Concretely, we realize it as follows. In Protocol 3, there are two states 
 and 
 that are red and have a token. When two agents with 
 interact, they transition to 
, and vice versa (transition rules 1 and 2). Thus, under global fairness, eventually an agent with 
 interacts with an agent with 
 and then one of them transitions to , and two tokens are deleted (transition rule 3). Observe that these transitions do not affect the essence of Protocol 2. This is because the numbers of  agents, red agents, and tokens do not change after transition rules 1 and 2, and a red agent transitions to , and two tokens are deleted at transition rule 3.

We now prove the correctness of Protocol 3 along the proof in subsection 4.1. We define #r, #b, 
, 
, 
 as the number of agents that have state r, b, 
, 
, 
, respectively. Let 
 and 
 be the number of red and  agents, respectively. Let 
 be the number of agents with tokens.

Recall that a mechanism of symmetry breaking (transition rules 1, 2, and 3) does not affect the essence of Protocol 2. In particular, if 
 
 holds, Protocol 3 is equal to Protocol 2. Thus, since an equation of Lemma 7 holds in any configuration of any execution of Protocol 3 and 
 is not related to the equation, the following corollary holds.

Corollary 2

In any globally-fair execution of Protocol 3, 
 holds in any configuration.

If a  agent occurs, both red agent and  agent exist afterwards with Protocol 3. This is because, similarly to Protocol 2, there is no transition rule that decreases the number of  agents in Protocol 3, and red agents also exist by Corollary 2.

Now, we simply show that eventually a  agent occurs in any execution Ξ. When 
 holds, only transition rules 1, 2, and 3 can occur. Hence, from the global fairness assumption, there is a configuration C such that, for some adjacent agents x and y, x has 
 and y has 
 in C and C occurs infinitely often in Ξ. Then, eventually x with 
 and y with 
 interact. By the interaction, transition rule 3 happens and thus one  agent occurs.

Thus, we can observe that both red agent and  agent exist after some configuration. Then, clearly we can obtain the following lemma by the same argument as in Lemma 8.

Lemma 9

For any globally-fair execution of Protocol 3,  holds after some configuration.

Finally, we show, similarly to Theorem 3, that Protocol 3 solves the uniform bipartition problem.

Theorem 4

Protocol 3 solves the uniform bipartition problem. That is, there exists a symmetric protocol with five states and designated initial states that solves the uniform bipartition problem under global fairness with arbitrary communication graphs.

Proof

Since  is reduced only in transition rules 3, 4, and 5,  is reduced by two in an interaction. This implies that, by Lemma 9, when n is even (resp., odd),  (resp., ) holds after some configuration C.

After  holds, Protocol 3 is substantially the same as Protocol 2 because transition rules 1, 2, and 3 do not occur if  holds. Thus, we can prove the remaining part in the same way as Theorem 3 by using Corollary 2 instead of Lemma 7. □

4.3. Lower bound for asymmetric protocols under global fairness
In this section, we show that, over arbitrary graphs with designated initial states and no base station under global fairness, there exists no asymmetric protocol with three states.

To prove this, we first show that, when the number of agents n is odd and no more than , each agent changes its own state to another state infinitely often in any globally-fair execution Ξ of any uniform bipartition protocol, where P is a known upper bound of the number of agents. This proposition holds regardless of the number of states in a protocol.

After that, we prove impossibility of an asymmetric protocol with three states. From the above proposition, in any globally-fair execution of any uniform bipartition protocol, agents change their states infinitely often. Now, since the number of states is three, the number of red states or the number of  states is one. This implies that some agents change their color after a stable configuration. Thus, no protocol can solve the uniform bipartition problem.

From now, we show that, in any globally-fair execution Ξ of a protocol Alg solving uniform bipartition over an arbitrary communication graph such that the number of agents  is odd, all agents transition their own state to another state infinitely often.

Lemma 10

Assume that there exists a uniform bipartition protocol Alg with designated initial states over arbitrary communication graphs assuming global fairness. Consider a graph  such that the number of agents n is odd and no more than . In any globally-fair execution 
, 
, … of Alg over G, each agent changes its state infinitely often.

Proof

Let 
, 
, 
, 
, …, 
. Assume, for the purpose of contradiction, that there exists 
 that does not change its state after some stable configuration 
 in globally-fair execution Ξ. Let 
 be a state that 
 has after 
. Since the number of states is finite, in Ξ, there exists a stable configuration 
 that appears infinitely often after 
. Without loss of generality,  holds after 
. Let 
 be an agent that is adjacent to 
. Let 
 be a set of states that 
 has after 
.

Next, consider a communication graph 
 that satisfies the following.

•
, where 
, 
, 
, …, 
 and 
, 
, 
, …, 
.

•
.

Over 
, we construct an execution 
 such that, agents in 
 and 
 behave similarly to Ξ until states of agents in 
 and 
 converge, and then make interactions so that 
 satisfies global fairness. Concretely, consider a globally-fair execution 
, 
, 
, 
, … over 
 as follows:

•
For , when 
 interacts with 
 at 
, 
 interacts with 
 at 
, and 
 interacts with 
 at 
.

•
After 
, agents make interactions so that 
 satisfies global fairness.

The outline of the remaining part of the proof is as follows. Since Ξ is globally-fair, we can show that the following facts hold after states of agents in 
 and 
 converge in 
.

•
 has state 
 as long as 
 has a state in 
.

•
 has a state in 
 as long as 
 has state 
.

From these facts, in 
, 
 continues to have state 
 and 
 continues to have a state in 
. Hence, in 
, each agent in 
 cannot notice the existence of agents in 
, and vice versa. Thus, since we assume, without loss of generality, that  holds in stable configuration 
 of Ξ, 
 holds in a stable configuration of 
.
Now, we show the details of the proof.

In the following, for configuration 
 in 
 and configuration C in Ξ, we say 
 of 
 (resp., 
) is equivalent to C if 
 (resp., 
) holds for any 
. Observe that, by the definition of 
, 
 of 
 and 
 is equivalent to 
.

From now, by induction on the index of configuration, we prove the proposition that, for any configuration 
 that occurs after 
, there is a configuration 
 (resp., 
) such that 1) 
 of 
 (resp., 
) is equivalent to 
 (resp., 
) and 2) 
 (resp., 
) appears infinitely often in Ξ.

The base case is 
. Since 
 appears infinitely often in Ξ and 
 of 
 and 
 is equivalent to 
, the base case holds.

For the induction step, assume that, for 
, there are configurations 
 and 
 that satisfy the conditions. We consider two cases for an interaction at 
. The first case considers an interaction of 
 and 
, and the second case considers other interactions.

First, we consider the case that 
 and 
 interact at 
. By the assumption, we have 
, 
, and 
. Hence, since 
 does not change its state even when it interacts with 
 at 
, any transition rule is of the form 
, where s is some state. This implies that, when 
 and 
 interact at 
, 
 keeps the state 
. Thus, 
 of 
 is still equivalent to 
. Additionally, since 
 and 
 hold, 
 changes its state similarly to the case that 
 interacts with 
 in 
. That is, letting 
 be a configuration immediately after 
 and 
 interact at 
, 
 of 
 is equivalent to 
. Since 
 occurs infinitely often in Ξ and Ξ is globally fair, 
 occurs infinitely often in Ξ. Thus, the proposition holds for 
.

Next, we consider the case that at least one agent other than 
 and 
 joins an interaction at 
. By the definition, no edge other than 
 connects 
 and 
. Hence, if 
 and 
 interact at 
, either 
 or 
 holds. In the former case, letting 
 be the configuration immediately after 
 and 
 interact at 
, 
 of 
 is equivalent to 
 and 
 of 
 is still equivalent to 
. In the latter case, letting 
 be the configuration immediately after 
 and 
 interact at 
, 
 of 
 is still equivalent to 
 and 
 of 
 is equivalent to 
. Since 
 and 
 occur infinitely often in Ξ and Ξ is globally fair, such 
 and 
 occur infinitely often in Ξ and thus the proposition holds in the case.

Recall that, we assumed that  after 
 in Ξ. Hence, 
 and 
 holds after 
 in 
. Thus, 
 holds after 
 in 
. Since 
 is globally fair, this is a contradiction. □

From now, by using Lemma 10, we show the theorem.

Theorem 5

There exists no uniform bipartition protocol with three states and designated initial states over arbitrary communication graphs assuming global fairness when the upper bound of the number of agents  is given.

Proof

For the purpose of contradiction, we assume that such a protocol Alg exists.

Let 
 be a state set of agents. Without loss of generality, 
 and 
 hold. Consider a globally-fair execution Ξ of Alg over graph G such that the number of agents is odd and no more than . By Lemma 10, after some stable configuration 
 in Ξ, each agent changes its state infinitely often. This implies that each agent with 
 transitions to 
 or 
 after 
. That is, each  agent transitions to red state after 
. Since 
 is stable, this is a contradiction. □

Furthermore, by Lemma 10, we can obtain the following corollary.

Corollary 3

Assume that there exists a uniform bipartition protocol with designated initial states over arbitrary communication graphs assuming global fairness (when the upper bound P of the number of agents is not given). Consider a graph  such that the number of agents n is odd. In any globally-fair execution 
, 
, … of the protocol over G, each agent changes its state infinitely often.

By this corollary, we have the following theorem by the same argument as in Theorem 5.

Theorem 6

There exists no uniform bipartition protocol with three states and designated initial states over arbitrary communication graphs assuming global fairness (when the upper bound P of the number of agents is not given).

4.4. Lower bound for symmetric protocols under global fairness
In this section, we show that, with arbitrary communication graphs, designated initial states, and no base station assuming global fairness, there exists no symmetric protocol with four states. Recall that, with designated initial states and no base station, clearly any symmetric protocol never solves the problem if the number of agents n is two. Thus, we assume that  holds, where P is a known upper bound of the number of agents. Note that the symmetric protocol proposed in subsection 4.2 solves the problem for .

In this subsection, we newly define 
 as follows:

•
For states q and 
, we say 
 if there exists a sequence of states 
 such that, for any i , transition rule 
 exists.

Moreover, we say two agents are homonyms if they have the same state. Intuitively, 
 means that an agent in state q can transition to 
 by a sequence of interactions with homonyms.

Theorem 7

There exists no symmetric protocol for the uniform bipartition with four states and designated initial states over arbitrary graph assuming global fairness when P is fourteen or more.

For the purpose of contradiction, suppose that there exists such a protocol Alg. To begin with, we give a roadmap of the proof. In this proof, by using a property of symmetry, fist we prove some lemmas to show the existence of a state 
 that satisfies the following conditions.
1.
State 
 is an initial state of each agent, and, for a state 
, there are transition rules 
 and 
.

2.
There is no transition rule that increases the number of agents with 
 or 
.

3.
If a given graph is a complete graph, the number of agents with 
 or 
 converges to at most 1.

4.
Agents can change their colors only if an agent with 
 and an agent with 
 interact.

5.
If a given graph is a complete graph with three agents, there exists a stable configuration such that there exists exactly one agent with 
 and other agents have different color from a color of s.

Then, we consider a graph 
 shown as the right side of Fig. 2. On the graph, we consider four subgraphs 
, 
, 
, and 
. By making interactions on each subgraph, we make a configuration such that, agents on subgraph 
 have 
, and other agents have different color from a color of s and have neither 
 nor 
 (this is possible by the above conditions 3 and 5). Then, we make agents on 
 transition to an initial state (this is possible by the above condition 1). After that, we make interactions on 
 until agents converge. Let C be a resulting configuration. By the above condition 3, in C, the number of agents with 
 or 
 on 
 is at most 1. Moreover, in C, other agents (agents not on 
) have neither 
 nor 
. Thus, by the above condition 2, the number of agents with 
 or 
 on 
 is at most 1 after C. By the above condition 4, agents do not change their colors after C. Since agents not on 
 have different color from a color of s, they have the same color. Thus, after C, there are at least eight agents with the same color whereas the number of agents is twelve. Therefore, the uniform bipartition problem cannot be solved.

Fig. 2
Download : Download high-res image (43KB)
Download : Download full-size image
Fig. 2. An image of graphs G and G′.

Now, we show the details of the proof. Let R (resp., B) be a state set such that, for any  (resp., 
),  (resp., 
) holds. First, we show that the following lemma holds from Lemma 10.

Lemma 11

 holds.

Proof

Assume, for the purpose of contradiction, that  holds. Without loss of generality, assume that  and  hold (clearly  holds and thus only this combination is valid), and let r be the state belonging to R.

Consider a graph G such that the number of agents is odd and no more than . At least one agent stabilizes to r in a globally-fair execution of Alg with G. By Lemma 10, the agent changes its state to a state in B afterwards. This is a contradiction. □

Let 
 and r (resp., 
 and b) be states belonging to R (resp., B). In addition, without loss of generality, assume that 
 is the initial state of agents.

From the property of symmetry, the following lemma holds.

Lemma 12

Consider a symmetric transition sequence 
, 
, 
, … starting from 
. For any i, 
 holds.

Proof

For the purpose of contradiction, suppose that 
 holds for some i. Consider a complete communication graph  such that the number of agents n is four, where 
, 
, 
, 
.

Consider a globally-fair execution Ξ as follows:

•
 (resp., 
) interacts with 
 (resp., 
) i times.

•
After that, make interactions so that Ξ satisfies global fairness.

Since the initial state of agents is 
, all agents have 
 after the i interactions. By the assumption, since 
 holds, every agent keeps state 
 after that. Hence, Ξ cannot reach a stable configuration. Since Ξ is globally fair, this is a contradiction. □

Additionally, we can extend Lemma 12 as follows (we show the detail of this proof later):

Lemma 13

There exists some state 
 such that 
 and 
 hold.

Without loss of generality, assume that 
 and 
 
 exist. For some population V, we denote the number of agents with 
 (resp., 
) belonging to V as 
 (resp., 
). Moreover, let  be the sum of 
 and 
. When V is clear from the context, we simply denote them as 
, 
, and , respectively.

From now, we show that Theorem 7 holds if the following lemmas and corollary hold. We show the detail of these intermediate proofs later (To show Lemma 14, P must be fourteen or more).

Lemma 14

There does not exist a transition rule such that  increases after the transition.

Lemma 15

Consider a globally-fair execution Ξ of Alg with some complete communication graph G. After some configuration in Ξ,  holds.

Corollary 4

Consider a state set 
, 
. When 
 or 
 holds, if transition rule 
 exists then 
 and 
 hold.

Consider a globally-fair execution 
, 
, 
, … of Alg with a complete communication graph  such that the number of agents is three, where 
, 
, 
. In a stable configuration of Ξ, either  or  holds.

First, consider the case of .

Since  holds and  is odd, by Lemma 10 red agents keep exchanging r for 
 in Ξ. Hence, there exists a stable configuration 
 of Ξ such that there exists exactly one agent that has 
. Without loss of generality, we assume that the agent is 
.

Consider the communication graph 
 that includes four copies of G. The details of 
 are as follows:

•
Let 
, 
, 
, 
, …, 
. We define a partition of 
 as 
, 
, 
, 
, 
, 
, 
, 
, 
, and 
, 
, 
. Let 
, 
, 
, 
.

•
, 
, 
, 
, , 3, 6, .

An image of G and 
 is shown in Fig. 2.

Consider the following execution 
, 
, 
, … of Alg with 
.

•
For , when 
 interacts with 
 at 
, 
 interacts with 
 at 
, 
 interacts with 
 at 
, 
 interacts with 
 at 
, and 
 interacts with 
 at 
.

•
After 
, make interactions between agents in 
 until states of agents in 
 converge and 
 holds. We call the configuration 
.

•
After 
, make interactions so that 
 satisfies global fairness.

Until 
, agents in 
, 
, 
, and 
 behave similarly to agents in V from 
 to 
. This implies that, in 
, every agent in 
 has state 
. From Lemma 15, since 
 is the initial state of agents, it is possible to make interactions between agents in 
 until states of agents in 
 converge and 
 holds. Moreover, since 
 is the only agent that has 
 in 
, no agent in 
﹨
 has state 
 or 
 in 
. Hence,  holds in 
. By Corollary 4, if  does not hold, no agent can change its color. Thus, since  holds after 
 by Lemma 14, no agent can change its color after 
. Since 
 and 
 are  in 
, 
, 
, 
, 
, 
, 
, 
, and 
 are  in 
. In addition, 
 holds. Hence, 
 holds. Since no agent can change its color after 
 and 
 is globally-fair, this is a contradiction.

Next, consider the case of . In this case, we can prove in the same way as the case of . However, in the case, we focus on 
 instead of 
. That is, we assume that agents in 
 (i.e., 
, 
, 
, and 
) have 
 in 
. From 
, we make 
 (resp., 
) interact with 
 (resp., 
) once. Then, by Lemma 13, all of them transition to 
. After that, since all agents in 
 have 
, we can construct an execution such that only agents in 
 interact and eventually 
 holds. As a result, we can lead to contradiction in the same way as the case of .

Proofs of Lemmas 13, 14, and 15, and Corollary 4
From now, we prove Lemma 13, Lemma 14, Lemma 15, and Corollary 4. First, we show the proof of Lemma 13.

Lemma 13

There exists some state 
 such that 
 and 
 hold.

Proof

Consider a globally-fair execution 
, 
, 
, … of Alg with a complete communication graph G such that the number of agents n is six. First, consider a state q such that there are two or more agents with q in a stable configuration 
 of Ξ. Observe that, for any state 
 such that 
 holds, 
 holds. This is because, if such equation does not hold, it contradicts the definition of the stable configuration (i.e., it contradicts the fact that each agent cannot change its own color after a stable configuration). Using this fact, we show that the lemma holds.

Since the number of states is four and Lemma 12 holds, there are three possible symmetric transition sequences starting from 
 as follows:

1.
For distinct states 
, 
, 
, and 
, there exists a transition sequence 
 → 
, 
, 
, 
, …, where 
.

2.
For distinct states 
, 
, and 
, there exists a transition sequence 
, 
 → 
, 
, 
, …, where 
.

3.
For distinct states 
 and 
, there exists a transition sequence 
 → 
, 
, 
, ….

Case 1: Assume, for the purpose of contradiction, that the transition sequence 1 holds. Let 
 be a state such that  holds. By the assumption, in a stable configuration 
 of Ξ,  is three. This implies that there exist two agents with 
 or p. If there exist two agents with 
 in 
, they can transition to 
 such that 
 holds by a sequence of interactions with homonyms. Hence, by the definition of stable configurations, there exists at most one agent with 
 in 
 and thus there exist two or more agents with p.

We consider cases of 
, 
, and 
. In the case of 
, 
 holds. By the transition sequence 1, p can transition to 
 by a sequence of interactions with homonyms. By the definition of stable configurations, since 
 holds, this case this case cannot occur. In the case of 
 or 
, 
 holds. By the transition sequence 1, p can transition to 
 by a sequence of interactions with homonyms. By the definition of stable configurations, since 
 holds, this case cannot occur. Thus, the transition sequence 1 does not hold.

Case 2: Assume, for the purpose of contradiction, that the transition sequence 2 holds. We show that 1) 
 holds and 2) 
 holds. After that, from these facts, we show that 3) the transition sequence 2 does not hold.

First we show 1) 
 holds. Assume, for the purpose of contradiction, that either 
 or 
 is a red state and the other is a  state (since 
 is red state, either 
 or 
 is  state). In this case, since 
 can transition to  state by a sequence of interactions with homonyms, there exists at most one agent with 
 in 
 of Ξ. Hence, in 
, there exists two red agents with 
 or 
. By the transition sequence 2, 
 (resp., 
) can transition to 
 (resp., 
) by a sequence of interactions with homonyms. Since 
 holds, this contradicts the definition of stable configuration.

Next, we show 2) 
 holds. For the purpose of contradiction, assume that 
 holds. In this case, 
 and 
 can transition to 
 by a sequence of interactions with homonyms. In addition, 
 holds. From 1) 
, since  is three in a stable configuration 
 of Ξ, there exist two agents with 
 or 
. These facts contradict the definition of stable configuration.

Finally, we show 3) the transition sequence 2 does not hold.

Consider a complete communication graph 
 such that the number of agents n is six, where 
, 
, 
, …, 
. Moreover, consider a globally-fair execution 
 as follows:

•
, 
, and 
 interact with 
, 
, and 
 once, respectively.

•
After that, make interactions so that 
 satisfies global fairness.

After the first item, all agents have 
. Hence, from 1) 
 and 2) 
 (i.e., 
 and 
 hold), there exists transition rule 
 such that 
 does not hold. Since transition rules 
 and 
 exist and only 
 and 
 are  states, a stable configuration 
 of 
 can reach 
 such that both 
 and 
 exist in 
. Additionally, since 
 exists, some agent can change its color after 
. Since 
 is stable, this is a contradiction. Thus, the transition sequence 2 does not hold.

Case 3: Since Cases 1 and 2 do not hold, Case 3 holds. Thus, by proving that 
 holds, we can obtain the lemma. Assume, for the purpose of contradiction, that 
 holds. Consider a globally-fair execution 
 of Alg with a complete communication graph 
 such that the number of agents is six. Since transition rules 
 
 and 
 exist and 
 holds, there exists transition rule 
 such that 
 does not hold. Since transition rules 
 and 
 exist and only 
 and 
 are red state (and the number of red agents is three in any stable configuration), a stable configuration 
 of 
 can reach 
 such that both 
 and 
 exist in 
. In addition, since 
 exists, some agent can change its color from 
. Since 
 is stable, this is a contradiction. Therefore, 
 holds and thus the lemma holds. □

Next, from Lemma 10, Lemma 13, we prove the following lemmas.

Lemma 16

Consider a globally-fair execution Ξ of Alg with some complete communication graph . In any stable configuration of Ξ, there is at most one agent with 
 and at most one agent with 
.

Proof

For the purpose of contradiction, assume that there exists a stable configuration 
 of Ξ such that there are more than one agent with 
 (or more than one agent with 
). Since  is a complete communication graph, two agents with 
 (or two agents with 
) can interact. By Lemma 13, 
 (resp., 
) transitions to 
 (resp., 
). Since 
 holds and 
 is stable, this is a contradiction. □

Lemma 17

Consider a globally-fair execution Ξ of Alg with a complete communication graph  such that the number of agents n is odd and no more than . There exists a stable configuration 
 (resp., 
) such that there exists exactly one agent with 
 (resp., 
), and 
 (resp., 
) occurs infinitely often in Ξ.

Proof

Consider a globally-fair execution Ξ of Alg with a complete communication graph  such that the number of agents n is odd and no more than . From Lemma 16, if some agent change its state to 
 (resp., 
) in a stable configuration of Ξ, there exists exactly one agent with 
 (resp., 
) in the resulting configuration. Thus, from Lemma 10, since red agents (resp.,  agents) keep exchanging r for 
 (resp., b for 
) in Ξ, there is a stable configuration 
 (resp., 
) of Ξ such that there exists exactly one agent with 
 (resp., 
) and 
 (resp., 
) occurs infinitely often in Ξ. □

Lemma 18

There exist transition rules , , and .

Proof

Consider a globally-fair execution Ξ of Alg with a complete communication graph  such that the number of agents n is seven. Consider a stable configuration 
 (resp., 
) of Ξ such that there exists exactly one agent with 
 (resp., 
) and 
 (resp., 
) occurs infinitely often in Ξ. From Lemma 17, such 
 and 
 exist. Note that, since we assume that  holds, we can use Lemma 17 (because  holds and n is odd). Since the number of agents n is seven, there exist at least two agents with r and at least two agents with b in 
 and 
. Hence, since G is a complete graph and 
 and 
 are stable, we can say the following.

•
If 
 exists, 
 holds.

•
If 
 exists, 
 holds.

•
If 
 exists, 
 and 
 hold.

In addition, by Lemma 16, 
 and 
 are not 
, and, 
 and 
 are not 
. Therefore, the lemma holds. □
From these lemmas, we can prove Lemma 14.

Lemma 14

There does not exist a transition rule such that  increases after the transition.

Proof

For the purpose of contradiction, assume that such a transition rule exists. By Lemma 18, transition rules , , and  exist and these transition rules do not increase . Hence, there exists 
 such that , and ini, 
, 
 hold.

Consider a globally-fair execution Ξ of Alg with a complete graph  such that the number of agents n is five. Moreover, consider a stable configuration 
 (resp., 
) such that there exists exactly one agent with 
 (resp., 
) and 
 (resp., 
) occurs infinitely often in Ξ. From Lemma 17, such 
 and 
 exist. Note that, because  and n is odd, we can use Lemma 17. Since the number of agents n is five, there exists at least one agent with r and at least one agent with b in 
 and 
. This implies that, an agent with 
 (resp., 
) can interact with an agent with r in 
 (resp., 
). Similarly, an agent with 
 (resp., 
) can interact with an agent with b in 
 (resp., 
). Moreover, since G is a complete graph and Ξ is globally fair, those interactions happen infinitely often.

First, we consider the case that 
 and  hold. Consider an interaction between an agent with 
 and an agent with r in 
. Since any agent cannot change its color in a stable configuration, both agents transition to 
 by the interaction. However, by Lemma 16, two agents cannot have 
 in any stable configuration. This is a contradiction. Thus, 
 and  do not hold. In a similar way, 
 and  do not hold.

Next, we consider the case that 
 and  hold. Consider an interaction between an agent with 
 and an agent with b in 
. Let 
 be configuration that can be obtained from 
 by the interaction. Since any agent cannot change its color after a stable configuration, one 
 and one 
 occur by the interaction. By Lemma 16, there exist exactly one 
 and exactly one 
 in 
. This implies that, since 
 is stable and n is five, there exists at least one agent with b and thus an agent with 
 can interact with an agent with b in 
. Hence, we can obtain 
 from 
 by making interaction between an agent with 
 and an agent with b. Clearly, in 
, there exist two agents with 
. This contradicts Lemma 16 and thus 
 and  do not hold. In a similar way, we can prove that 
 and  do not hold. Hence, for any  and 
, transition rule 
 with 
, 
 does not exist. Consequently the lemma holds. □

By the existence of 
 and 
, we can prove the following lemma.

Lemma 19

There exists a transition rule 
 such that  or  holds.

Proof

For the purpose of contradiction, assume that, if there is 
, 
 and 
 hold.

Consider a globally-fair execution Ξ of Alg with a complete communication graph  such that the number of agents is three. By Lemma 16, there exists at most one agent with 
 and at most one agent with 
 in a stable configuration of Ξ. However, by the assumption and the existence of 
 and 
, all agents have 
 or 
 permanently in Ξ. This is a contradiction. □

By Lemma 14, Lemma 16, Lemma 19, we show the proof of Lemma 15.

Lemma 15

Consider a globally-fair execution Ξ of Alg with some complete communication graph G. After some configuration in Ξ,  holds.

Proof

Consider 
 such that  holds in 
 and 
 occurs infinitely often in Ξ. By Lemma 16, such a configuration exists. Moreover, by Lemma 14,  holds even after 
. First, consider the case that  holds in 
. By Lemma 14,  holds after 
 and thus the lemma holds immediately in this case. Next, consider the case that  holds in 
. By Lemma 16, in 
, there exists an agent 
 (resp., 
) with 
 (resp., 
). By Lemma 19, when 
 interacts with 
 at 
,  holds in 
. By global fairness, 
 occurs infinitely often in Ξ. By Lemma 14,  holds after 
 and thus the lemma holds. □

From Lemma 15, Lemma 10, we can obtain the following lemma.

Lemma 20

Let 
 and . If  exists,  and  hold.

Proof

Assume, for the purpose of contradiction, that there exists  such that  or  holds.

Consider a globally-fair execution Ξ of Alg with a complete communication graph  such that the number of agents n is five. Because  and n is odd, we can use Lemma 17. Hence, by Lemma 16, Lemma 17, there exists a stable configuration 
 (resp., 
) of Ξ such that there is 
 (resp., 
), which is the only agent with 
 (resp., 
) in 
 (resp., 
) and there is 
 with rb. By the assumption, when 
 (resp., 
) interacts with 
 at 
 (resp., 
), 
 (resp., 
) or 
 changes its color. Since 
 and 
 are stable, this is a contradiction. □

From Lemma 18, Lemma 20, we can obtain the following corollary.

Corollary 4

Consider a state set 
, 
. When 
 or 
 holds, if transition rule 
 exists then 
 and 
 hold.

4.5. Impossibility under weak fairness
In this subsection, assuming arbitrary communication graphs and designated initial states and no base station, we show that there is no protocol that solves the problem under weak fairness. Fischer and Jiang [35] proved the impossibility of leader election for a ring communication graph. We borrow their proof technique and apply it to the impossibility proof of a uniform bipartition problem.

Theorem 8

There exists no protocol that solves the uniform bipartition problem with designated initial states and no base station under weak fairness assuming arbitrary communication graphs.

Proof

For the purpose of contradiction, let us assume that there exists such a protocol Alg.

First, consider a complete graph G with three agents 
, 
, and 
. Let 
, 
, and 
 be the edges of G. Furthermore, let 
, 
, 
, …, 
, … be an execution of Alg, where 
 is a stable configuration. Without loss of generality, we assume that  and  hold in 
.

Next, consider a ring 
 with six agents such that two copies of G are combined to form 
. Let 
, 
, 
, 
, 
, and 
 be agents of 
, and let 
, 
, 
, 
, 
, 
, 
, 
, 
, 
, and 
, 
 be edges of 
 (see Fig. 3).

Fig. 3
Download : Download high-res image (20KB)
Download : Download full-size image
Fig. 3. Graphs G and G′.

Now, let us construct the following execution 
, 
, 
, 
 ….

•
For x and y such that either  or  holds, when 
 interacts with 
 at 
, 
 interacts with 
 at 
, and 
 interacts with 
 at 
.

•
When 
 interacts with 
 at 
, 
 interacts with 
 at 
, and 
 interacts with 
 at 
. Similarly, when 
 interacts with 
 at 
, 
 interacts with 
 at 
, and 
 interacts with 
 at 
.

If configurations C of G and 
 of 
 satisfy the following condition, we say that those configurations are .

•
For i , 
 holds.

From now, by induction on the index of configuration, we show that 
 and 
 are equivalent for any . Clearly 
 and 
 are equivalent, so the base case holds immediately. For the induction step, we assume that 
 and 
 are equivalent, and then consider two cases of interaction at 
.

First we consider the case that, for x and y such that either  or  holds, 
 interacts with 
 at 
. In this case, at 
, 
 interacts with 
 and, at 
, 
 interacts with 
. By the induction assumption, 
 and 
 hold. Thus, agents 
 and 
 change their state similarly to 
, and agents 
 and 
 change their state similarly to 
. Hence, 
 and 
 are equivalent in this case.

Next, we consider the case that 
 and 
 interact at 
. When 
 interacts with 
 at 
, 
 interacts with 
 at 
 and 
 interacts with 
 at 
. When 
 interacts with 
 at 
, 
 interacts with 
 at 
 and 
 interacts with 
 at 
. By the induction assumption, 
 and 
 hold. Thus, agents 
 and 
 change their state similarly to 
, and agents 
 and 
 change their state similarly to 
. Hence, 
 and 
 are equivalent in this case.

Thus, 
 and 
 are equivalent for any .

This implies that, after 
,  and  hold. Moreover, since Ξ is weakly fair, clearly 
 is weakly fair. This is a contradiction. □

5. Concluding remarks
Discussion. In this paper, we consider the uniform bipartition problem with designated initial states assuming arbitrary communication graphs. We investigated the problem solvability, and even provided tight bounds (with respect to the number of states per agent) in the case of global fairness. Concretely, with no base station under global fairness, we proved that four is the minimum number of states per agent to enable asymmetric protocols, and five is the minimum number of states per agent to enable symmetric protocols. With the base station, we showed that three is the minimum number of states per agent. Hence, we clarified that, for the uniform bipartition under global fairness, there is a difference of just two states between the protocol with and without the base station. On the other hand, the existence of the base station can give additional advantages such as termination detection. Let us assume that the base station knows the exact number of agents n and is initialized. In our protocols with the initialized base station, since only the base station assigns colors to agents, the base station assigns a color n times. Hence, the base station can detect the termination of the uniform bipartition by counting the number of times the base station assigns a color.

Under weak fairness, we proved the impossibility to obtain an asymmetric protocol with no base station. With a base station, we proposed a symmetric protocol with  states under weak fairness. The protocols under weak fairness cover a wider range of executions than a globally-fair execution. Actually, in our protocols under global fairness, some configurations can occur multiple times. This implies that, in the worst case, the configuration occurs many times and the number of interactions (causing non-null transitions) until convergence cannot be bounded. On the other hand, in our protocol under weak fairness, any configuration cannot occur multiple times (except when a null transition occurs). Thus, the number of interactions (causing non-null transitions) until convergence can be bounded.

Future works. Our work raises interesting open problems:

•
Is there a relation between the uniform bipartition problem and other classical problems such as counting, leader election, and majority? We pointed out the reuse of some proof arguments, but the existence of a more systematic approach is intriguing.

•
What is the time complexity of the uniform bipartition problem? An important line of study is to clarify the expected time complexity under a probabilistic scheduler. A trade-off between the time complexity and the space complexity is also interesting.

•
Is the uniform bipartition problem in arbitrary communication graphs with arbitrary initial states feasible? In case the answer is yes, what is the space complexity?