Abstract
A 2-interval is the union of two disjoint intervals on the real line. Two 2-intervals D1 and D2 are disjoint if their intersection is empty (i.e., no interval of D1 intersects any interval of D2). There can be three different relations between two disjoint 2-intervals; namely, preceding (<), nested (⊏) and crossing (≬). Two 2-intervals D1 and D2 are called R-comparable for some R∈{<,⊏,≬}, if either D1RD2 or D2RD1. A set D of disjoint 2-intervals is R-comparable, for some R⊆{<,⊏,≬} and R≠∅, if every pair of 2-intervals in D are R-comparable for some R∈R. Given a set of 2-intervals and some R⊆{<,⊏,≬}, the objective of the 2-interval pattern problem is to find a largest subset of 2-intervals that is R-comparable.

The 2-interval pattern problem is known to be W[1]-hard when |R|=3 and NP-hard when |R|=2 (except for R={<,⊏}, which is solvable in quadratic time). In this paper, we fully settle the parameterized complexity of the problem by showing that it is W[1]-hard for both R={⊏,≬} and R={<,≬} (when parameterized by the size of an optimal solution). This answers the open question posed by Vialette ((2008) [22]).

Keywords
Two-interval pattern
Interval graphs
Parameterized complexity

1. Introduction
Interval graphs and their generalizations are often used to study problems in resource allocation, scheduling, and DNA mapping. In 2002, Vialette [20] proposed a geometric description of RNA helices in an attempt to improve the understanding of the computational complexity for finding structured patterns in RNA sequences. In particular, Vialette modelled the RNA secondary structure using a set of 2-intervals, and examined the properties of the geometric graphs arising from such representations [22].

A 2-interval is the union of two disjoint intervals on the real line. Two 2-intervals  and  are disjoint if their intersection is empty; that is, no interval of  intersects any interval of . While looking for certain RNA structures, some common approaches to cope with intractability are either to restrict the class of pseudoknots [18] or to apply heuristics [8], [17], [19]. Vialette [21] proposed that one can obtain a relevant set of 2-intervals from an RNA sequence by selecting stable stems, e.g., using a simplified thermodynamic model without accounting for loop energy. Then, the prediction of the RNA structure is equivalent to finding a maximum subset of non-conflicting (i.e., disjoint) 2-intervals.

Vialette [20] introduced the 2-interval pattern problem in a generalized way such that one can specify an abstract model in a set of 2-intervals, and the problem seeks for a largest subset of 2-intervals in the given model. Note that we can define three different relations between two disjoint 2-intervals (e.g., see Fig. 1(a)): one 2-interval lies entirely to the left of the other one (called preceding and denoted by <), one 2-interval is nested within the other one (called nested and denoted by ⊏), and the intervals of the two 2-intervals alternate on the real line (called crossing and denoted by ≬). Two 2-intervals  and  are R-comparable for some  if either  or . A set  of disjoint 2-intervals is -comparable, for some  and , if every pair of 2-intervals in  are R-comparable for some . In the 2-interval pattern problem, we are given a set of 2-intervals and a set , and the objective is to compute a largest subset of 2-intervals that is -comparable. Fig. 1(b) illustrates such an example.

Fig. 1
Download : Download high-res image (38KB)
Download : Download full-size image
Fig. 1. (a) An example for showing the three possible relations between a pair of 2-intervals; here, the same-colour intervals form a 2-interval. Then, (a,a′)<(d,d′), (d,d′)⊏(b,b′) and (c,c′)≬(d,d′). (b) An instance of 2-interval pattern problem with  and the 2-intervals are {(v,w),(q,s),(r,u),(p,t)}. The 2-intervals {(p,t),(r,u)} form a largest subset that is -comparable.

The 2-interval pattern problem and its variants have been used to model various scenarios in the context of RNA structure prediction [21], [13] and to measure similarity between genomes with duplicates [1]. The 2-interval pattern problem is now a widely-studied problem (e.g., see the subsequent section for a literature review) and the main topic of this paper.

1.1. Related work
Vialette [21] observed that if , then the 2-interval pattern problem is polynomial-time solvable by reductions to the Maximum Independent Set problem on interval graphs, or to the Maximum Clique problem on comparability graphs. The running time of these algorithms has been improved since then, and expressed in terms of the number of input 2-intervals and various interval-related parameters such as their lengths or overlap [7]. For the case where  = 2, the problem is solvable in polynomial time when  [21]. However, the problem is known to be -hard if  or , even if the intervals of every 2-interval have unit length [21], [4]. If  (i.e., ), then the problem is -hard [3].

The approximability of the -hard models of the 2-interval pattern problem has also been studied in the literature. For , a 4-approximation algorithm was given by Bar-Yehuda et al. [3]. Crochemore et al. [9] gave polynomial-time algorithms for the problem with approximation factors 4 when , and 6 when . The 6-approximation algorithm for  runs in  time, which can be faster than the known exact algorithm for the problem [7]. They also showed that the results hold for the weighted case; i.e., when each 2-interval is associated with a weight and the goal is to find a maximum weight subset. If the intervals of every input 2-interval have unit length, then for  and , the approximation factors are improved to  for the weighted case and  for the unweighted case, where  [13]. For  (and arbitrary input 2-intervals), Jiang [11] improved the approximation factor to 2 and subsequently to  for any  [12].

Several variants of the 2-interval pattern problem have been studied based on restrictions on the input 2-intervals. In particular, Blin et al. [5] (see also [4]) considered the disjoint 2-interval pattern problem: every pair of input intervals is disjoint (i.e., non-overlapping); that is, if any two intervals x and y overlap, then . This variant is also called the point 2-interval pattern problem because one can think of each input interval as a point. This version of the problem is polynomial-time solvable for  [15] and  [7]. However, Li and Li [14] proved that the point 2-interval variant is -complete when .

The 2-interval pattern problem is -hard when , because in this case, the problem is equivalent to computing a maximum independent set on 2-interval graphs, and the latter is known to be -hard [10]; see Section 3 for more details. For , to the best of our knowledge, the only parameterized algorithm is the work of Blin et al. [4] who proved that the problem is fixed-parameter tractable, but only when , the input intervals all have unit length and the tractability is with respect to the forward crossing number: the maximum number of 2-intervals that cross a 2-interval “from the right”. Table 1 shows a summary of known results on the 2-interval pattern problem and its point 2-interval variant.


Table 1. Complexity of the 2-interval pattern problem. Our results are marked with (⁎). In the table, L is the total length of the 2-intervals (measured including the gap between the two intervals), d is the maximum number of 2-intervals over any point (a 2-interval is over a point even if the point lies in the gap between the two intervals). Here L ≤ dn ≤ n2.

2-interval	Point 2-interval
{⊏}	 [5]	 [5]
{<}	 [19]	 [19]
{≬}	 [7]	 [7]
{<,⊏}	 [7]	 [7]
{⊏,≬}	-hard [19], -hard⁎	 [7]
{<,≬}	-complete [5], -hard⁎	-complete [14]
{<,⊏,≬}	-hard [2], -hard [10]	 [15]
1.2. Our results
In this paper, we answer a question of Vialette [22] by proving that the 2-interval pattern problem is -hard for  and  when parameterized by the size of an optimal solution.

Our -hardness result is inspired by the reduction of the k-Independent Set problem used by Fellows et al. [10]. Their reduction requires all three relations (i.e., they prove the -hardness of the 2-interval pattern problem when ). Prior to our work, it was known that the complexity of the problem is polynomial when  [7], but it was unknown whether the problem is fixed-parameter tractable (when parameterized by the size of an optimal solution) or it is -hard for  and . Hence, our -hardness result fully settles the parameterized complexity of the 2-interval pattern problem. Our results are marked by an 
⁎
 in Table 1.

2. Preliminaries
In this section, we give some definitions and notation that will be used throughout the paper.

A 2-interval D is the union of two disjoint intervals on the real line; that is,  and the interval A lies to the left of the interval B. For a pair of disjoint intervals , we write  when I is to the left of J. Two 2-intervals  and  are disjoint if . Moreover, for two disjoint 2-intervals  and , we say that  is preceding  if , and write this as . We call them nested () when , and finally, crossing () when .

We say that two 2-intervals  and  are R-comparable, for some , if (i)  and  are disjoint and (ii) either  or . Let S be a set of n 2-intervals on the real line, and let  such that . Then, a set  is called -comparable if every pair of 2-intervals in  are R-comparable for some . Given S and some , the objective of the 2-interval pattern problem is to compute a largest subset  such that  is -comparable.

Given a graph G and a parameter k, the k-Independent Set problem asks whether there is an independent set of size k in G. Fellows et al. [10] proved that the k-Independent Set problem is -hard on 2-interval graphs. This result implies that the 2-interval pattern problem is -hard when  as a 2-interval graph is the intersection graph of a set of 2-intervals on the real line. Our -hardness results are also based on showing reductions from the k-Multicoloured Clique, which is known to be -hard [16]. The problem is defined as follows.


Download : Download high-res image (50KB)
Download : Download full-size image
3. -hardness
In this section, we prove that the 2-interval pattern problem is -hard when  and . Our reduction is inspired by that of Fellows et al. [10]. Let  be an instance of the k-Multicoloured Clique (we assume w.l.o.g. for our purposes that c is a proper colouring1). We construct a set  of 2-intervals such that G has a multicoloured clique of size k if and only if  contains a set of  disjoint 2-intervals that are pairwise comparable in one of the relations in ; the value of  will be clear from our construction. We first describe an outline of the construction and the corresponding gadgets. Then, we give the details on how to organize the gadgets on the real line specific to each of the sets  and . For a colour , let  denote the set of vertices of G that have colour i. Moreover, for every distinct pair of colours , let  denote the set of edges  of G such that . That is,  consists of all the edges whose end vertices are coloured with colours i and j.

Outline  The construction consists of two main types of gadgets: selection and validation. By selection gadgets, we ensure that 2-intervals representing k vertices with distinct colours and  edges with distinct pairs of colours are selected. By validation gadgets, we ensure that every selected vertex is incident to  edges connecting the other  selected vertices. We group the 2-intervals corresponding to vertices of the same colour together in a vertex-selection gadget in such a way that any feasible solution for the 2-interval pattern problem will have two 2-intervals corresponding to one vertex per vertex-selection gadget. Similarly, we group the 2-intervals corresponding to edges with the same pairs of colours  together in a edge-selection gadget such that any feasible solution for the 2-interval pattern problem will have four 2-intervals corresponding to one edge  with . We will then organize the gadgets on the real line in such a way that any feasible solution will contain  2-intervals that are -comparable.

Given G and a vertex colouring of G with k colours, we associate two 2-intervals  and  for each vertex . Moreover, we associate four 2-intervals for each edge : two 2-intervals  and  for each “direction” of the edge and two 2-intervals  and  that are undirected. The two 2-intervals for “directed” edges will be used for validation, and we will show below how they are constructed. Therefore, the number of 2-intervals of the constructed instance will be . We next give the details of each type of gadgets.

Vertex-selection gadget  For each colour , we construct a vertex-selection gadget. The gadget has two components, which we denote by  and ; see Fig. 2 for an illustration. The component  has  “rows” of intervals, each of which has  “columns”; each row corresponds to a vertex of G with colour c. The intervals in the same column pairwise intersect. Moreover, for the intervals in a fixed column j, we assign an offset such that each interval in row  intersects the interval that is in column  and row ; see Fig. 2. The component  consists of two columns of intervals, and each column has  rows. Here, we assign an offset such that the interval in the first column and row i intersects the interval in the second column and row  (see Fig. 2).

Fig. 2
Download : Download high-res image (115KB)
Download : Download full-size image
Fig. 2. A vertex-selection gadget and the two 2-intervals Iv and  corresponding to a vertex v.

For each vertex , we associate two 2-intervals  and  as follows. The first 2-interval  is composed of the interval in the first column of  that corresponds to v and the interval in the first column of  that corresponds to v. The second 2-interval  is composed of the interval in the last column of  that corresponds to v and the interval in the second column of  that corresponds to v. These 2-intervals are illustrated with dashed lines in Fig. 2. Each of the remaining  columns in  corresponds to a colour in . These  intervals are later paired with intervals from edge-selection gadgets to form 2-intervals that correspond to “directed” edges. Notice that the intervals of the first column of  pairwise intersect, ensuring that at most one 2-interval corresponding to a vertex with colour c can appear in any feasible solution. Similarly, for the  intermediate intervals of  (i.e., the intervals of  excluding those in the first and last column), it means that all the edges of a k-multicoloured clique with at least one endpoint with colour c are incident to the same vertex in .

Lemma 1

Let S be feasible a solution for the 2-interval pattern problem, and consider the vertex-selection gadget T corresponding to colour c. Moreover, let  be the set of 2-intervals such that each 2-interval in M has at least one interval in T. If , then all the intervals in  are selected from the same row of T.

Proof

Since there are  columns in the component  of T, M cannot have more than  2-intervals, where each contains at least one interval from T. Hence, , this means that M must contain exactly one interval from every column of  and hence, one from every column of . Consider the interval in the first column of  (that is in M) and assume that this interval is in row i, for some ; it corresponds to a vertex . We now show that every other interval in  must also be in row i. Since  and S is a feasible solution, then the interval in the first column of  and row i must also be in M because these two intervals form one of the two 2-intervals corresponding to v. Now, suppose that the interval in M that is from the second column of  is in row . Clearly,  (i.e.,  lies below i) because otherwise the interval of M that is in the first column of  would intersect this interval due to the offset. Since  and S is a feasible solution, M must contain the interval in the last column of  that is in row  (as only these two would form a valid 2-interval while considering ). If 
, then it is not possible to have exactly one interval from column j of 
 in M for all  because the offset would imply that at least two intervals must intersect in M. Therefore, 
. In the same way, we can show that the subsequent intervals of  must also be in row i.

Observe that the assignment of two 2-intervals for each vertex 
 and placement of their second intervals in 
 with an offset allowed us to argue that the remaining intervals are also selected from the same row of the vertex-selection gadget. We will use a similar construction to argue the same for edge-selection gadgets. It may appear to the readers that perhaps we do not need 
 and only 
 with one 2-interval for each vertex would suffice. But note that although this would force the selection of remaining intervals from the same row, it is impossible to place such a gadget on the real line while maintaining -comparability. To ensure -comparability, we will need to place 
 and 
 on different parts of the real line, possibly far apart from each other.

Edge-selection gadget  For each distinct pair of colours , we construct an edge-selection gadget. The gadget has two main components, which we denote by 
 and 
. The component 
 has 
 rows of intervals each of which corresponds to an edge  of G such that ; see Fig. 3(a). Each row has four columns of intervals; the intervals in the same column pairwise intersect. Moreover, there is an offset such that an interval in column t intersects the interval in column  that is in the row immediately above it. The component 
 has 
 rows and only two columns. There is also an offset between the intervals similar to the offset defined for the intervals in 
; see Fig. 3(b). The row r in 
 corresponds to an edge  if and only if the row r in 
 corresponds to the edge .

Fig. 3
Download : Download high-res image (111KB)
Download : Download full-size image
Fig. 3. An illustration of the two components of an edge-selection gadget; namely, (a) C1(i,j) and (b) C2(i,j). The two 2-intervals I{u,v} and 
 corresponding to the edge (u,v)∈E(G) are shown dashed-dotted red. (For interpretation of the colours in the figure(s), the reader is referred to the web version of this article.)

Recall that for each edge in , we associate four 2-intervals; we next describe the construction of these 2-intervals. Let  such that ,  and . Then, the 2-interval 
 (
) is composed of the interval in the first column (last column) of the row corresponding to  in 
 and the first interval (second interval) of the row corresponding to  in 
. See Fig. 3 for an illustration. The 2-interval 
 (associated with the “directed” edge ) is composed of the interval in the second column of 
 and the interval in the vertex-selection gadget of i that is in the row corresponding to vertex u and the column for colour j. The 2-interval corresponding to the “directed” edge  is constructed in a similar way: it consists of the interval in the third column of 
 and the interval in the vertex-selection gadget of j that is in the row corresponding to vertex v and the column for colour i. Fig. 4 illustrates an example for constructing the two 2-intervals corresponding to such “directed” edges. Note that the latter two 2-intervals that correspond to “directed” edges are used for validation: they ensure that if the 2-intervals of a vertex u with colour i is selected, then all the selected edges with an endpoint of colour i are incident to u.

Lemma 2

Let S be a feasible solution for the 2-interval pattern problem, and consider an edge-selection gadget T. If there are four 2-intervals in S such that each of them has at least one interval in T, then all such four 2-intervals must have intervals from the same row of T.

Proof

The proof uses an argument similar to the one we used in the proof of Lemma 1. Suppose that T corresponds to edges with colours i and j, where . Now, consider the gadget 
. Clearly, S can have at most one interval from each column of 
. Since S has four 2-intervals that have at least one interval in T, the set S contains exactly one interval from each column of T. Suppose that the interval of the first column of 
 (that is in S) is at row t for some 
. Notice that this interval forms a 2-interval with the first interval in row t of 
 and so that interval must also be in S (these two intervals form a valid 2-interval and S is a feasible solution). We now show that the interval of the last column of 
 (that is in S) must also be at row t. Suppose for the sake of contradiction that it is at a row 
. First, by construction, this interval forms a 2-interval with the second interval in row 
 of 
 and so that interval must also be in S. If 
, then the second interval in row 
 of 
 intersects with the first interval in row t of 
 by the construction and so they cannot both be in S—a contradiction. Moreover, if 
, then S cannot contain an interval from both the second and third columns of 
 because at least one of them intersects the interval of S that is in either the first or the last column of 
—a contradiction. Therefore, 
 and so the two intervals in S that are in 
 are also from the same row t. Finally, the fact that 
 forces the intervals in the second and third columns of 
 (that are in S) to be also from the row t.

Fig. 4
Download : Download high-res image (81KB)
Download : Download full-size image
Fig. 4. An illustration of the two 2-intervals corresponding to the “directed” edges (u,v) and (v,u), assuming c(u)=1 and c(v)=2. The dashed (red) rectangles shown in gadgets I1(⋅) indicate the first and last columns of intervals in the gadget.

By the above constructions, we obtain the set  of 2-intervals as
 Since we associate each vertex with two 2-intervals and each edge with four 2-intervals, we have . The construction of our gadgets can all be done in -time. In the following, we show the arrangement of the gadgets on the real line specific to each of  and . Then, we show that any k-multicoloured clique in G corresponds to  
  pairwise disjoint 2-intervals of . For brevity, let 
  for the rest of this section.

3.1. Hardness for 
We now show how to arrange the gadgets on the real line when . To this end, consider the ordering  of colours. We place the gadgets on disjoint regions of the real line from left to right as follows. First, for each pair of colours i and j, , we place the gadget 
 on the line in lexicographic order; that is, we first place the gadgets 
 for all , then the gadgets 
 for all  and so on. Then, we place the gadgets 
 () from left to right in the increasing order of c. Next, we place the gadgets 
,  in the same order as we placed their corresponding gadgets 
. Finally, we place the gadgets 
 () in the same order as we placed their corresponding gadgets 
. See Fig. 5 for an example. This forms our instance 
 of the 2-interval pattern problem, where  and 
 . Clearly, this arrangement can be done in -time. Moreover, one can verify that any two disjoint 2-intervals in this instance are -comparable, where .

Lemma 3

Graph G has a k-multicoloured clique if and only if the 2-interval pattern problem on  has a feasible solution of size 
 for .

Proof

 Suppose that G has a k-multicoloured clique. For each colour c, let 
 be the vertex in the clique with colour c. Then, for every colour c, we select the two 2-intervals 
 and 
 from the vertex-selection gadget corresponding to c. Moreover, for every pair of colours i and j with , we select the four 2-intervals 
 and 
. In this way, we have selected 
 2-intervals in total. Moreover, by the arrangement of gadgets on the real line, one can verify that this set of 
 2-intervals is disjoint and, hence, -comparable by the above observations.

 Consider a set S of 
 2-intervals that is a feasible solution for the 2-interval pattern problem with respect to . Observe that  has 
 columns as follows:  
  columns for the vertex selection gadgets, and  
  columns for the edge selection gadgets. Since the two intervals in S are disjoint, no two of these 2-intervals can contain intervals from the same column of . Therefore, each vertex-selection gadget contributes  2-intervals to S. By Lemma 1, these  2-intervals all come from the same row of the gadget. Hence, we select the k vertices corresponding to these k rows. We now claim that they are a feasible solution for the k-multicoloured clique. Clearly, each selected vertex has a unique colour. Moreover, take any colour c and let u be the vertex that we selected with colour c. Recall that all the intervals of S that come from the vertex-selection gadget c are in the same row as that of u. There are  of them (excluding those corresponding to u itself) and each is paired with an interval in an edge-selection gadget corresponding to the pair 
 of colours, for all colours 
. Therefore, there exists an edge between u and every other selected vertex and so the k selected vertices are indeed a feasible solution for the k-multicoloured clique.

Fig. 5
Download : Download high-res image (126KB)
Download : Download full-size image
Fig. 5. The arrangement of gadgets for . Here c(u)=1 and c(v)=2. The two 2-intervals Iu and 
 corresponding to a vertex u of G are shown in dashed-dotted red. The two 2-intervals I{u,v} and 
 corresponding to an edge (u,v) of G are shown in dashed blue. The two 2-intervals I(u,v) and I(v,u) used for validation are shown in solid black.

The following theorem summarizes the result of this section.

Theorem 4

The 2-interval pattern problem is -hard for .

3.2. Hardness for 
We now show that the 2-interval pattern problem is -hard even when . To this end, we show how to arrange the gadgets on the real line such that any pair of two 2-intervals are -comparable. Then, one can prove a result similar to Lemma 3 for , concluding that the problem is -hard even for . Here, we only show the arrangement.

Consider the ordering  of colours. We place the gadgets on disjoint regions of the real line from left to right as follows.

We first place the gadgets 
 for all , then the gadgets 
 for all  and so on. Then, we place the gadgets 
,  in the same order as we placed their corresponding gadgets 
. Next, we place the gadgets 
 () from left to right in the increasing order of c. Finally, we place the gadgets 
 () in the same order as we placed their corresponding gadgets 
. See Fig. 6 for an example.

Fig. 6
Download : Download high-res image (118KB)
Download : Download full-size image
Fig. 6. The arrangement of gadgets for . Here c(u)=1 and c(v)=2. The two 2-intervals Iu and 
 corresponding to a vertex u of G are shown in dashed-dotted red. The two 2-intervals I{u,v} and 
 corresponding to an edge (u,v) of G are shown in dashed blue. The two 2-intervals I(u,v) and I(v,u) used for validation are shown in solid black.

This forms our instance 
 of the 2-interval pattern problem, where  and 
 . Clearly, this arrangement can be done in -time and one can verify that every of pair of 2-intervals are -comparable. We thus have the following theorem.

Theorem 5

The 2-interval pattern problem is -hard for .

4. Conclusion
In this paper, we showed that 2-interval pattern problem is -hard when  and ; hence, fully settling the parameterized complexity of the problem when parameterized by the size of an optimal solution. It would be interesting to examine -algorithms with respect to other parameters such as the maximum number of pairwise intersecting 2-intervals. Another direction would be to consider the fine-grained complexity of the point 2-interval version of the problem.