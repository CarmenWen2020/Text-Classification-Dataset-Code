Abstract
An orientation D of a graph  is a digraph obtained from G by replacing each edge by exactly one of the two possible arcs with the same end vertices. For each , the indegree of v in D, denoted by , is the number of arcs with head v in D. An orientation D of G is proper if , for all . An orientation with maximum indegree at most k is called a k-orientation. The proper orientation number of G, denoted by , is the minimum integer k such that G admits a proper k-orientation. We prove that determining whether  is NP-complete for chordal graphs of bounded diameter, but can be solved in linear-time in the subclass of quasi-threshold graphs. When parameterizing by k, we argue that this problem is FPT for chordal graphs and argue that no polynomial kernel exists, unless NP . We present a better kernel to the subclass of split graphs and a linear kernel to the class of cobipartite graphs.

Concerning bounds, we first prove that if G is split, then  and that if G is a k-uniform block graph, then . These bounds are tight. We also present new families of trees having proper orientation number at most 2 and at most 3. Actually, we prove a general bound stating that any graph G having no adjacent vertices of degree at least  has proper orientation number at most c. This implies new classes of (outer)planar graphs with bounded proper orientation number. We also prove that maximal outerplanar graphs G whose weak-dual is a path satisfy . Finally, we present simple bounds to the classes of chordal claw-free graphs and cographs.

Keywords
Proper orientation
Chordal graphs
Kernelization
Split graphs
Block graphs

1. Introduction
For basic notions and notations on Graph Theory and (Parameterized) Computational Complexity, the reader is referred to [1], [2], [3], [4]. All graphs in this work are considered to be finite and simple.

An orientation D of a graph  is a digraph obtained from G by replacing each edge by exactly one of the two possible arcs with the same endvertices. For each , the indegree of v in D, denoted by 
, is the number of arcs with head v in D. We use the notation 
 when the orientation D is clear from the context. An orientation D of G is proper if 
, for all . An orientation with maximum indegree at most k is called a k-orientation. The proper orientation number of a graph G, denoted by 
, is the minimum integer k such that G admits a proper k-orientation. We say that a proper orientation D of a graph G is optimal if 
.

This graph parameter was introduced by Ahadi and Dehghan [5]. They observed that it is well defined for any graph G, since one can always inductively obtain a proper -orientation by removing a vertex of maximum degree. Note that every proper k-orientation D of a graph G defines a proper -coloring  such that 
, for each . Hence, we have:(1)

With respect to Computational Complexity, given a graph G and a positive integer k, deciding whether 
 is NP-complete, even if G is the line graph of a regular graph [5]; or if G is a planar subcubic graph [6]; or if G is planar bipartite with maximum degree 5 [6]. Observe that the above equation together with the latter two results imply that the problem is para-NP-complete even on planar graphs when parameterized by k. Our first contribution in Section 2.1 is to prove that this problem is still NP-complete even if restricted to chordal graphs. Our reduction also implies that no polynomial kernel to the problem restricted to chordal graphs can exist, unless NP ⊆ coNP/poly.

In [7], the authors generalize the notion of proper orientations for edge-weighted graphs and present some complexity results for trees and graphs of bounded treewidth. In particular, they show an algorithm that decides whether 
 when G has treewidth at most t whose complexity is 
. By using this previous result, in Section 2.2 we argue that this problem admits a fixed parameter tractable (FPT) algorithm parameterized by k when G is chordal. This is a contrast with the general para-NP-completeness of the problem. This also implies on the existence of kernel for the problem, even though, as previously said, such a kernel cannot be of polynomial size unless NP ⊆ coNP/poly. We then present better kernels for split graphs and cobipartite graphs, although the general computational complexity for these classes remains open. In Section 2.3, we also show that if G is a quasi-threshold graph G, then 
 and thus one can compute 
 in linear time, since G is chordal and  can be computed in linear time by a Lex-BFS [8].

Concerning bounds, in Section 3.1, we first prove that if G is a split graph, then 
 and that this bound is tight, thus answering Problem 9(a) presented in [6]. We would like to emphasize that Problem 9(b) [6] has a trivial answer as, for any cobipartite graph G, we have that 
. Also in [6] the authors prove that 
 for a tree T and that this bound is tight. A simpler proof of this fact was provided by [9]. This result has been generalized to the weighted case in [7]. In [10], the authors prove that the more general class of cacti graphs G satisfy 
 and prove that this bound is tight. Their tight example is actually more general. We say that a block graph G is k-uniform if every clique of G has size k. In [10], the authors prove that, for every integer , there exists a k-uniform block graph G such that 
. Note that such example is tight for trees () and cacti (). In Section 3.2, we prove that their bound is tight, i.e., we prove that, for every , if G is a k-uniform block graph, then 
. Note that, in particular, this implies the bound of [6] for trees. We also show that if G is a k-uniform block graph in which each maximal clique has at most two cut-vertices and , then 
; moreover, this bound is tight. Note that for , this subclass of block graphs corresponds to the ones of trees and there exist trees with proper orientation number equal to 4 [6].

Now, observe that the previously mentioned algorithm on graphs having bounded treewidth [7], combined with the fact that cacti have treewidth at most 2, imply that there is a polynomial-time algorithm to compute 
, when G is a cactus graph. However, there is so far no characterization even of trees T satisfying 
, for . Some partial results are presented in [6]. Still in Section 3.2, we provide a general bound stating that if G has no adjacent vertices of degree at least , then 
. This result implies that if T is a tree with no adjacent vertices of degree at least , then 
, for .

A major question regarding the proper orientation number is whether there exists a positive integer c such that 
, for any (outer)planar graph G. This seems a challenging problem, and has been previously asked in [6]. Some upper bounds on subclasses of planar graphs have been provided in [10], [9]. Recently, Ai et al. [11] presented upper bounds for subclasses of triangle-free outerplanar graphs. The previous result also implies that (outer)planar graphs having no adjacent vertices of large degree have bounded proper orientation number. In Section 3.3, we also prove that a maximal outerplane graph G whose weak-dual graph is a path satisfies 
. Observe that, since outerplanar graphs have treewidth at most 2, the proper orientation number of this subclass of outerplanar graphs can also be computed in polynomial time by the algorithm presented in [7].

In [10], the authors observe that claw-free planar graphs have bounded maximum degree, and thus bounded proper orientation number. In Section 3.4, we observe that claw-free chordal graphs G also has bounded maximum degree, and as a consequence we get that 
.

It is well known that the class of quasi-threshold graphs is the intersection of cographs and interval graphs. To the more general class of cographs, we present a simple tight upper bound in Section 3.5. Note that this class is not a subclass of chordal graphs. Finally, in Section 4 we present several related open problems for further research.

For completeness, we emphasize that other closely related weighted parameters have also been defined and studied in the literature [12], [13].

In the remainder of the text, we use the following notation. Given disjoint vertex sets A and B of a graph G, we denote by  the set of edges between A and B in G. The neighborhood of a vertex v in a subgraph H of G is denoted by 
, that is, the set of neighbors of v that are in . The degree of v in H, is denoted by 
. We omit the subscript when it is clear from the context.

2. Computational complexity
2.1. NP-completeness of Proper Orientation on chordal graphs with bounded diameter
A chordal graph is a graph in which every cycle of length at least 4 has a chord, that is, an edge joining two non-consecutive vertices of the cycle. Let us consider the computational complexity of the following decision problem.



Download : Download high-res image (64KB)
Download : Download full-size image
We prove that Proper Orientation is NP-complete for chordal graphs of bounded diameter. This result is a reduction from the well known Vertex Cover problem on cubic graphs, which is NP-complete [2]. A vertex cover of a graph G is a vertex set  such that every edge of G has an endvertex in D. The vertex cover number  is the size of a minimum vertex cover of G.



Download : Download high-res image (60KB)
Download : Download full-size image
We first present a set of gadgets that we use in our reduction. We start by providing a structure that, given a vertex v and some , prevents v from having indegree i in every proper k-orientation D of the input graph G. For this, we build a gadget such that v is adjacent to a vertex u, and we ensure that u has indegree i and that the edge uv must be oriented towards u in any proper k-orientation of G. In order to build such a structure, we define below another gadget  containing vertices 
, and such that 
 must have indegree j in every proper k-orientation of G, for each . Fig. 1a depicts .

Fig. 1
Download : Download high-res image (122KB)
Download : Download full-size image
Fig. 1. In Fig. 1a, each dashed rectangle represents a clique. For simplicity, we omitted the edges from vj to the cliques Kℓ, for every j ∈ {0}∪[2] and every j + 1 ≤ ℓ ≤ 3. In Fig. 1b u′ must have indegree i, since it is adjacent to v1,v2,…,vi−1 of S(k), and uu′ must be oriented towards u′.

Definition 1

Given a non-negative integer k, let  be constructed as follows. First add to  a clique K on  vertices 
. Then, for each , add to  a clique 
 on  vertices such that the only common vertex of 
 with other vertices in  is 
. Finally, add edges from 
 to all vertices of 
, for every  and every .

Proposition 2

Given a non-negative integer k, let  the graph constructed as in Definition 1. Then  is a chordal graph.

Proof

By induction on k. Clearly  is chordal since it consists of a single vertex, 
. Now, observe that if we remove 
 from K, and exactly one vertex 
 of 
 for each , then we obtain graph . By induction hypothesis, let 
 be a perfect elimination ordering of . We claim that each vertex in 
 is a simplicial vertex in . Indeed, because 
 and 
, we get that 
 and 
 are simplicial. Now, consider , and note that 
. By construction, we know that 
 is an edge of  for every 
 and every 
. It follows that 
 is indeed a clique. We then get that the ordering obtained from 
 by adding X at the beginning is a perfect elimination ordering of . □

Proposition 3

For a positive integer k, let G be a graph such that  is an induced subgraph of G and let K be the clique 
, as presented in Definition 1. Then, in any proper k-orientation D of G, we have that 
, for each 
. Moreover, for every edge  such that  and , we have that uv must be oriented towards u.

Proof

Consider a proper k-orientation D of G. One should first observe that, if 
 is any clique on  vertices in G, then we get that D restricted to 
 must be transitive and we must have exactly one vertex in 
 with indegree j, for every . This implies that any edge uv between a vertex 
 and a vertex 
 must be oriented towards u. Now, observe that 
 is the intersection of two cliques K and 
 of cardinality  in  (see Fig. 1a). We then get that in any proper k-orientation D of G we must have 
.

Since 
 is adjacent to all vertices in 
, which is a clique of size k by Definition 1, we get that the vertices in 
 must have indegree from 1 to k, i.e. there is exactly one vertex in 
 with indegree j, for each . Moreover, since 
, then if 
, we have that 
 is oriented towards u. Consequently, 
. Note that the orientation of 
 is also transitive and every edge , such that 
 and 
, must be oriented towards u.

Applying this argument inductively, we deduce that 
, for each , and any edge uv with  and  must be oriented towards u. □

Proposition 3 shows that, in any proper k-orientation of a graph G having  as a subgraph and having a vertex  that is adjacent to 
, for some , the indegree of u must be distinct from j. Moreover we also have that the edge 
 must be oriented towards u. This allows us to be able to forbid certain indegrees for u, but with the disadvantage of increasing the indegree of u. In order to avoid increasing the indegree, we construct the following additional gadget (see Fig. 1b).

Definition 4

Given a positive integer k and , let  be the graph obtained from  by adding a vertex 
, called the head of , such that 
 is adjacent to the vertices 
 in the clique K of .

Observe that, since  is obtained from  by adding a simplicial vertex, it follows by Proposition 2 that  is also a chordal graph. We say that a graph G has a pendant  at  if G has  as an induced subgraph and the only edge between  and  is 
, where 
 is the head of .

Proposition 5

Let G be a graph having a pendant  at some , with . Then, every proper k-orientation D of G is such that 
 and 
 is oriented towards 
.

Proof

Let D be any proper k-orientation of G. By Proposition 3, we have that the edges 
 of  (see Fig. 1b) must be oriented towards 
, for every , and thus 
. Since 
, we deduce that the edge 
 must be oriented towards 
, which implies that 
. □

Now observe that Proposition 5 allows us to forbid indegree  to a vertex u having a pendant  attached to it. Thus, the above construction enables us to associate a list assignment 
 of indegrees such that u must have indegree in  in a proper k-orientation of G, for every . Observe that, since , Proposition 5 cannot be used to forbid the values 0 and 1 from appearing in the list of a vertex.

We are now ready to present our reduction. Recall that a split graph is a graph whose vertex set can be partitioned into a clique and an independent set. Notice that a split graph is a subclass of chordal graphs.

Theorem 6

Proper Orientation is NP-complete on chordal graphs of bounded diameter.

Proof

Proper Orientation is already known to be in NP [5]. Let  be an instance of Vertex Cover, such that G is a cubic graph. We may assume that , as otherwise Vertex Cover can be solved in linear time, and that G is connected.

Let 
. In the sequel, we construct an instance 
 of Proper Orientation from , such that 
 is a chordal graph of bounded diameter and G has a vertex cover of size at most k if and only if 
 admits a proper 
-orientation D.

Let 
 be the split graph obtained from , such that  is a clique,  is an independent set and we add an edge between the vertex  to only  and . Therefore, 
 for each , since G is cubic; and 
, for each .

We continue the construction of 
 from H, by using the gadgets 
. To each vertex , we add a pendant 
 at each vertex, for each  (see Fig. 2). Moreover, we add a pendant 
 at u, for each . Finally let Z be the graph obtained by two cliques of size 
 sharing a unique vertex . For each , we add  distinct subgraphs 
 and connect u to 
, for each . This completes the construction of 
.

Fig. 2
Download : Download high-res image (212KB)
Download : Download full-size image
Fig. 2. Graph G′ in the reduction of Theorem 14. The remaining gadgets in the vertices of  and , as well as the edges from  to , are omitted for simplicity.

Since we obtain a split graph H from G and add to it chordal subgraphs 
 and Z attached by a cut-vertex that belongs to no chorless cycles, then one may observe that 
 is chordal. Moreover, since the diameter of any split graph is at most three, we can also deduce that the diameter of 
 is at most nine (in Fig. 2, take the distance between a vertex in 
 from an 
 attached to  to another similar vertex in another 
 attached to 
 and such that 
).

Let us now prove that if G has a vertex cover S of size at most k, then 
 admits a proper 
-orientation D. Let  be a vertex cover of G of size exactly k (we add arbitrary extra vertices, if necessary). Let us consider the same set  in 
. Since S is a vertex cover of G, recall that each vertex of  is adjacent to at least one vertex of S.

We construct a proper 
-orientation D of 
 as follows. First, add to D any proper 
-orientation of each pendant subgraph 
, for . Recall that they must verify Proposition 5. Similarly, add to D any proper 
-orientation of each subgraph corresponding to Z. Note that  must be a source in D, to each such subgraph. It already implies that 
, to each vertex . It suffices now to orient the edges with both endpoints in H. Now, take an arbitrary transitive orientation 
. For each edge vu such that  and , orient vu towards u. Then, observe that 
, for every . Moreover, each vertex  is the head of at least one arc with tail in S, as S is a vertex cover of G. To each vertex  and each vertex  orient the edge uv towards v, in case it exists; and take an arbitrary transitive orientation of the edges in 
. Observe that D is proper as the indegrees of vertices in  belong to 
 (recall that G is cubic) and the indegrees of vertices in  belong to  (as S is a vertex cover).

Reciprocally, assume now that 
 admits a proper 
-orientation D. Thus, observe that the indegree 
 of each  must be at least  in any proper 
-orientation D of 
, due to the subgraphs 
. Moreover, 
 cannot be , due to the pendant 
 at v and Proposition 5. Thus, in D there must exist a vertex  such that the edge uv is oriented towards v.

Since the vertices in  cannot have indegrees in , due to the pendant subgraphs 
, for each , it follows that each indegree in 
 must be assigned to exactly one vertex of . This implies that there exist a set S on k vertices in  with indegrees in . Hence, all edges from vertices of S to the vertices of 
 must be oriented from S towards 
 and that all edges from a vertex u in  to a vertex v in  must be oriented towards v. Thus, each vertex  must be adjacent to a vertex of S, which implies that S is a vertex cover of G of cardinality k. □

2.2. Remarks when the value of the solution is a parameter
Let us comment a few words about the Parameterized Complexity of determining the proper orientation number of a graph when parameterized by the value of the solution. Let us formally define the problem:



Download : Download high-res image (83KB)
Download : Download full-size image
It is important to recall that Parameterized Proper Orientation is para-NP-complete in the class of planar bipartite graphs [6]. On the other hand, we can use previous results to deduce that this problem is FPT when restricted to chordal graphs.

Proposition 7

Parameterized Proper Orientation can be solved in time 
, for any chordal graph G on n vertices.

Proof

The algorithm presented in [7] decides whether 
, when G has treewidth at most t, in time 
. Thus, given a chordal graph G, one may compute  in polynomial time, as they are perfect. In case , then the answer to Parameterized Proper Orientation is trivially “NO”. Otherwise, note that a chordal graph with  is a graph with treewidth at most k. Then, one can use the algorithm in [7] to solve Parameterized Proper Orientation in time 
. □

It is well known that if there exists an  algorithm to solve a problem Π parameterized by k, then Π admits a kernel of size  [3]. Thus, Parameterized Proper Orientation has a kernel of size 
 in the class of chordal graphs. In the sequel, we argue that a kernel of size polynomial on k is unlikely to exist. For this, we need the following definition and result.

Definition 8 AND-cross-composition

Let 
⁎
 be a language and 
⁎
 be a parameterized language. We say that L AND-cross-composes into Q if there exists a polynomial equivalence relation  and an algorithm , called a cross-composition, satisfying the following conditions. The algorithm  takes as input a sequence of strings 
⁎
 that are equivalent with respect to , runs in time polynomial in 
, and outputs one instance 
⁎
 such that:

1.
 for some polynomial function , and

2.
 if and only if 
, for every .

Theorem 9

[4], [14]
Assume that an NP-hard language L AND-cross-composes into a parameterized language Q. Then Q does not admit a polynomial compression, unless NP ⊆ coNP/poly.

Now, given two graphs G and H, the disjoint union, or simply union, of G and H is the graph  such that  and . Although the problem is not monotone for subgraphs even in trees [10], one can observe that:

Proposition 10

If 
, then 
.

By just taking the disjoint union of t instances of Proper Orientation in chordal graphs with the same k (this is the equivalence relation ), we have an AND-cross-composition to an instance of Parameterized Proper Orientation in chordal graphs as the disjoint union of chordal graphs is chordal and Proposition 10 holds. By Theorem 9, it follows that:

Corollary 11

Parameterized Proper Orientation restricted to chordal graphs does not admit polynomial kernel, unless NP ⊆ coNP/poly.

In [6] the authors show that determining whether 
 can be done in polynomial time for a split graph G, but even the problem of deciding whether 
 remains open [6]. They also argue about the computational complexity of determining 
 when G is cobipartite. In case determining whether 
 turns out NP-complete for split graphs and cobipartite graphs, then a natural question is to wonder about its parameterized version. Note that split graphs are chordal and thus Proposition 7 can be applied. Below, we give a better kernel for split graphs, and provide a linear kernel for cobipartite graphs.

Proposition 12

Parameterized Proper Orientation admits a 
-kernel for split graphs.

Proof

Let  be an instance of Parameterized Proper Orientation such that G is split. Let  be a partition of  such that K is a maximum clique of G and S is a stable set. By Proposition 10, we can suppose that G is connected. Write , and let  
 . We construct, in polynomial time, an equivalent instance 
 such that 
.

If , then the answer is “NO” (and thus one can just output 
 in this case). Now, we assume that . Two vertices u and v in a graph G are twins if 
. We partition the vertices of S into at most 
 subsets 
 of twins, for 
.

Claim 1

If there exists 
 such that 
, then removing 
 vertices from 
 builds a smaller graph 
 such that 
 if, and only if, 
.

Proof

Note that if D is a proper k-orientation of G such that exactly ℓ edges with one endpoint in K and the other in S are oriented towards K, then: 
 
 
 
 
  Since 
, note that at most M vertices of 
 are tails of arcs pointing towards their (common) neighbors in K, and thus all the other 
 vertices of 
 are sinks in D. Thus, they all have the same indegree in D (equal to their degree) and the same neighborhood (since they are twins). Thus, the removal of 
 of these vertices leads to 
 and note that the orientation provided by G is still proper in 
. Recall that the problem is not monotone and thus this step is indeed necessary.

On the other hand, if 
 is a proper k-orientation of 
, since we left  vertices in 
, at least one of these vertices, say 
⁎
 must be a sink in 
, by the previous analysis. Consequently, no vertex in 
⁎
 may have indegree equal to 
⁎
⁎
. Thus, we may extend such orientation of 
 into an orientation D of G by just letting the removed vertices be sinks as well in D.  ■

By applying Claim 1 to each feasible 
, 
, we build a graph 
 as required. □

Proposition 13

Parameterized Proper Orientation admits a linear kernel for cobipartite graphs.

Proof

The proof is straightforward as either , in which case the answer is “NO” (and one can output the equivalent instance 
), or we have that . □

2.3. Linear-time algorithm on quasi-threshold graphs
The join of G and H is the graph , such that  and . With a slight abuse of notation, we refer to  to be the join of the trivial graph  and H. A quasi-threshold graph [15] is isomorphic to a 
, or can be formed by a finite sequence of two operations: the disjoint union of two quasi-threshold graphs or the join of a new vertex and a quasi-threshold graph. This decomposition theorem can be applied to easily prove the following result.

Theorem 14

If G is a quasi-threshold graph, then 
 and 
 can be computed in linear time.

Proof

It suffices to prove that 
, since the second part follows by the fact that G is a chordal graph. By induction on the number n of vertices of G. It is trivial that 
 for . If 
, then, by Proposition 10, 
. If , then , which implies that 
. Let D be an optimal proper orientation of H. Let 
 be an extension of D to G by orienting all edges vu towards u. Then all indegrees in D are increased by exactly 1 and the indegree of v is 0 in 
. Hence 
 and the theorem follows. □

3. Bounds
3.1. Split graphs
In this section, we prove that 
 is linearly upper bounded by , when G is split and we present a tight example.

Theorem 15

Let G be a split graph. Then, 
.

Proof

Let  be a split graph partitioned into a maximal clique  and an independent set . Note that . From now on, we will use .

Let 
 be the subset of  of size h such that 
. Note that each vertex in 
 has  neighbors in  and at least  neighbors in . Let 
 be any ordering of 
 and let 
 be an arbitrary set of  edges connecting 
 to vertices of , for each 
. Let us build a proper -orientation of G.

First, orient all the edges in 
 towards 
 and orient all edges in 
 towards 
, for each . If , orient the edges in 
 towards 
 and we explain later how to complete such orientation. Otherwise, orient all the remaining non-oriented edges towards . Note that, in both cases, we have that 
, for each .

If , the orientation is already completely described. Observe that, in this case, 
, 
 for every , and 
 for every . Thus, we have the desired proper -orientation in this case.

Otherwise, if , then 
, while every vertex of  has indegree 0 so far. This means that we have a partial proper -orientation, which we extend as follows. Let 
 be the graph obtained by removing the edges that have already been oriented and let 
 be an ordering over the vertices in 
 such that, for every , we have 
, where 
. To complete such partial orientation, orient all the edges of 
 from 
 to 
, for every , and all the remaining non-oriented edges in 
 towards . We prove that the obtained orientation is a proper -orientation of G. For this, we prove that for every :

1.
, for every 
; and

2.
.

Observe that, because 
 for every , it follows that the orientation is a proper -orientation.
To see that (1) holds, suppose, without loss of generality that , which means that 
 is oriented towards 
. We then have that 
. To see that (2) holds, observe that if 
, then 
 since . On the other hand, if 
, then 
 by the construction of 
. □

Next, we prove that the upper bound on Theorem 15 is tight. The tight example is obtained from a clique K of size ω by adding several independent sets having as neighbors the same subset of vertices of K. The idea is to increase the average indegree of K in any proper orientation, which leads to the lower bound.
Theorem 16

For every positive integer ω, there exists a split graph G with  such that 
.

Proof

The proof is done by constructing a split graph G, with , from a complete graph 
 and taking some independent set that forces a vertex to have high indegree.

Given an integer , let 
 be an independent set having  
  vertices, each connected to a different set of k vertices in . In a proper orientation of our graph, either every arc leaves  and goes into 
 or at least one arc from 
 goes into . If every arc goes into 
, then the indegree of every vertex in 
 is k, therefore no vertex in  could have indegree k. Otherwise, there is at least one arc coming from 
 and into .

To construct our split graph G, let  be a set composed of  copies of 
, for every . It holds that  is an independent set, since the neighborhood of each 
 is , and that , since no vertex in  is adjacent to every vertex in . Consider a proper orientation of the graph G.

If no vertex in  has indegree in the set , then, for every vertex , it holds that 
. Since  is complete, then every indegree in  must be unique, which, by the Pigeonhole Principle, means that there is at least one vertex u such that 
.

Otherwise, let  be the indegree of some vertex in . Then, by the construction of G, there exists at least one edge oriented towards  from each copy of 
, which means that: 
 
 

Notice that if  did not have any vertex with indegree higher than , then: 
 
 
 

Comparing these two expressions, we conclude that there must exist a vertex  such that 
.

Therefore, in a proper orientation of G, we have 
. By Theorem 15, we deduce that 
. □

3.2. Uniform block graphs
Let us first prove a general result that we need in the sequel.

Proposition 17

Given a graph G, a subset  and a proper k-orientation 
 of  such that, for each  and , we have 
, then 
 can be extended into a proper -orientation D of G such that:

•
if , then 
; and

•
if , then 
.

Proof

Let 
. We start constructing a proper orientation D of G by orienting all edges in  as in the orientation 
 and by orienting all edges in 
 toward their endpoints in 
. Let 
 be such partial orientation of G.

Note that no two adjacent vertices  may have equal indegrees in D, since D is an extension of 
 and all their incident edges have already been oriented, we have that 
. By hypothesis, we cannot have two vertices  and 
 with equal indegree in D either as 
.

Thus, we just need to care about orienting the edges in 
 while ensuring that no two vertices 
 have the same indegree. In fact, notice that if a vertex 
 is such that all edges incident to u are already oriented in 
, then u has no neighbors in 
. Thus, we just need to worry about vertices of 
 having at least one neighbor in 
.

To do this, for each 
, we choose a vertex 
 incident to some non-oriented edge in 
, and we orient all the non-oriented edges incident to 
 toward 
, thus obtaining a partial orientation 
. We then let 
. Let us define in which order to choose such vertices.

For each vertex 
, we define 
 to be the number of edges incident to v that are non-oriented in the partial orientation 
 and we define its potential indegree at step i as 
. We take 
 to be such that 
 and 
. As previously said, orientation 
 is then obtained from 
 by orienting all the 
 non-oriented edges incident to 
 at 
 toward 
.

We claim that 
 is a proper orientation of G. By contradiction, suppose that there are two adjacent vertices u and v such that 
. As we argued, this is only possible if 
 and u and v had incident non-oriented edges in 
. Without loss of generality, suppose that u is chosen before v at step i to have its incident non-oriented edges to be oriented towards u. In particular, the edge uv is oriented towards u. Thus, observe that 
, a contradiction. □

As an easy corollary, we get the following.

Corollary 18

For any graph G and , there exists a proper -orientation D of G such that 
.

Proof

It suffices to apply Proposition 17 when . □

A block graph is a graph whose 2-connected components are complete graphs. A block graph G is k-uniform if every block of G has size .

In the next definition there is a slight abuse of notation as we consider that the first color of a proper coloring of a graph G might be zero. Let G be any graph, , and  be positive integers. We say that an orientation D of G is a proper orientation compensated by  if 
 and the following is a proper coloring of G:
 

A block is called a leaf block if it contains exactly one cut-vertex of G. In what follows, given a k-uniform block graph G, we show how to obtain a proper -orientation of G by removing blocks in the vicinity of the leaf blocks, orienting the remaining graph, then extending the orientation to the removed blocks. For this, we treat smaller cases first.

We say that a block graph G is a path block graph if its block cut-point graph is a path. Note that it thus consists of a sequence of cliques 
 such that 
 for every . Denote by 
 the vertex in 
.

Lemma 19

Given , let G be a k-uniform path block graph with clique sequence 
, let 
 be a non-cut-vertex, and  be positive integers such that either  or . Then, there exists a proper ℓ-orientation of G compensated by , where .

Proof

By induction on q. If , then let D be any transitive orientation of G corresponding to a total ordering 
 of  such that 
. Thus, 
 for each , and in particular 
 as required. Consequently, 
, for every . Note that, regardless  or , we have that D is a proper c-orientation of G compensated by .

Now suppose  and let 
 be obtained from G by removing the vertices in 
. In case , let 
 be a proper -orientation of 
 in which 
 has indegree zero (it exists, by Corollary 18). Let D be an orientation of G obtained from 
 by taking a transitive orientation of 
 in such a way that 
 is the source and u has in-degree exactly d. Note that D is a proper ℓ-orientation of G compensated by .

Assume then that  (which implies that , by hypothesis). In case , let 
 be a proper ℓ-orientation of 
 compensated by 
. Let D be an orientation of G obtained from 
 by taking a transitive orientation of 
 in such a way that 
 is the sink and u is the source. Again, since  and since 
 is a proper ℓ-orientation of 
 compensated by 
, note that D is a proper ℓ-orientation of G compensated by . Finally, suppose that . Analogously, let 
 be a proper ℓ-orientation of 
 compensated by 
. Let D be an orientation of G obtained from 
 by taking a transitive orientation of 
 in such a way that 
 has indegree  and u is the source (recall that ). Once more, one may deduce that D is a proper ℓ-orientation of G compensated by . □

Let us now introduce some notations that we use in the next key lemmas. Consider that G is a connected k-uniform block graph, for . Recall that its block-cutpoint graph is a tree T. With a slight abuse of notation, when we refer to a block B, we also mean the vertex in T corresponding to B. Thus, we consider that G is rooted at some block R (it means rooting T at the vertex corresponding to R). Given a cut-vertex u, let 
 be the parent block of u (similarly, the vertex corresponding to 
 is the parent of u in the block-cutpoint tree rooted at R), and 
 be its children blocks (defined analogously). We denote by 
 the component of  containing 
, and by 
 the subgraph of G induced by 
. We say that u is a path connector if 
 is a path block graph for every . We also call each 
 a path block, i.e. the vertices in 
 together with the vertices in its descendant blocks induce a path block subgraph.

As we prove our main result by contradiction, we say that a k-uniform block graph G for  is a minimum counter-example (MCE for short) if G is a connected k-uniform block graph such 
 having p blocks, but any connected k-uniform block graph H with less than p blocks satisfies 
.

Lemma 20

If G is a rooted MCE, then each path connector u of G has at most two children blocks.

Proof

By contradiction, assume that u is a path connector of G having  children blocks. Because G is k-uniform, note that 
, as .

Let 
. Since G is an MCE, let 
 be a proper -orientation of 
. In the sequel, we show how to extend 
 to a proper -orientation D of G, contradicting that 
.

If 
, then to each 
 we apply Corollary 18 and obtain a proper orientation 
 of 
 in which u is a source, for each . Since 
, each 
 is a proper -orientation of 
. Thus, if we extend 
 by using 
 in each 
 we obtain a proper -orientation of G, a contradiction.

Thus, assume that 
. Let 
 be the set of forbidden indegrees to u. Let . Note that c exists since . We want to ensure that we can extend 
 to a proper -orientation of G in such a way that u has indegree c.

Define 
 as the missing indegree for u. Observe that 
 (recall that 
). Let 
, 
, 
 and 
, for each . By Lemma 19, let 
 be a proper -orientation of 
 compensated by 
, for each . Again, if we extend 
 by using 
 in each 
 we obtain a proper -orientation of G, a contradiction. □

Let us add some notation. If G is a rooted k-uniform block graph, , formed by a root block B with cut-vertices 
 and such that each 
 is a path connector, then we say that G is a crossroad block graph, and we call block B the cross-point block. Now, if u is a cut-vertex in a rooted k-uniform block graph G that is not a path connector and such that every children block of u is either a path block or a cross-point block, then we say that u is a cluster cut-vertex.

Lemma 21

If G is a rooted MCE, then G has no cluster cut-vertex.

Proof

By contradiction, let u be a cluster cut-vertex of G having  children blocks 
 and parent block 
. Since u is a cluster cut-vertex, at least one of its children blocks must be a cross-point block. Without loss of generality, assume that 
 is a cross-point block and let 
 be the cut-vertices of 
 distinct from u. Note that . Moreover, since each 
 is a path connector, by Lemma 20 we get that 
 has at most two children blocks 
 and 
 and thus 
.

Case : Let 
. Since G is an MCE, let 
 be a proper -orientation of 
. Let us show how to extend 
 into a proper -orientation D of G, contradicting the hypothesis that 
.

Note that 
. In order to obtain D from 
, first take a transitive orientation 
 of 
 such that u is the source and 
 satisfies 
, for each . Then, let 
 be a proper -orientation of 
 compensated by 
; and, if 
 exists, let 
 be a proper -orientation of 
 compensated by 
, otherwise let 
.

Let D be the orientation of G obtained by the union of 
, 
 and 
, for every  and each . Note that D is a proper -orientation of G as 
 is transitive, 
, 
 and Lemma 19 holds.

Case : In case 
 and 
 are both cross-point blocks, then we can use the same idea as in case  twice as we may extend a proper -orientation of 
 to 
 and then to 
.

Suppose then that 
 is a path block. Let 
 be a proper -orientation of 
. In case 
, then again we can use the same idea as in case  to extend 
 into a proper -orientation D of G.

Otherwise, note that since 
, then u is the tail of  arcs whose heads are in 
. In order to obtain D, we first remove the orientation of all edges in 
. Then, we take a transitive orientation 
 of 
 such that 
 is a source and 
. Let 
. Note that S has  values that we now use to set the indegrees of 
 (
 will have indegree ). Let 
 be any injective function. Now, using Lemma 19, we take a proper -orientations:

•
 of 
 compensated by 
;

•
 if 
 is empty, or compensated by 
 otherwise;

•
 of 
 compensated by 
, for each ;

•
 if 
 is empty, or compensated by 
, for each .

Finally, take any proper -orientation 
 of 
 compensated by 
. Note that the orientation D obtained by the union of all such orientations is a proper -orientation of G because 
, 
 is transitive, g is injective, 
 does not belong to the image of g and Lemma 19 holds.
Case : let 
. Since G is an MCE, let 
 be a proper -orientation of 
. Again, we extend 
 into a proper -orientation D of G, contradicting the hypothesis that 
.

In case 
, then we claim that we can extend 
 to G by using Corollary 18. In fact, the subgraph 
⁎
 of G induced by 
 has maximum degree  thanks to Lemma 20. Thus, by Corollary 18 we can obtain a proper -orientation 
⁎
 of 
⁎
 in which u is a source. By joining 
⁎
 to 
, we obtain a proper -orientation of G.

Thus, assume that 
. We first increase the indegree of u to ease the process of extending 
. Let 
 be the forbidden indegrees to u by its neighbors in 
. Note that  and thus there exists . Let 
 be integers in  such that 
 is equal to c.

To obtain D, we first take transitive orientations 
 of 
 in such a way that u has indegree 
, for each . Thus, we set the indegree of u to be 
. Now, since the indegree of u is greater than , one can easily apply Lemma 19 to find orientations to the path blocks that are descendant of each 
, for each . □

We are finally ready to prove the main result of this section.

Theorem 22

Let G be a k-uniform block graph. Then 
.

Proof

Since 
 for any tree T [6], [9], and 
 for any cactus graph G [10], we assume that .

By contradiction, let G be an MCE having q blocks. Note that  as otherwise 
. Furthermore, G cannot be a path block graph as otherwise 
.

Consider G to be rooted in some block R. Since G is not a path block graph, there must be a cut-vertex u of G whose children blocks are either cross-point blocks or path blocks. However, this contradicts Lemma 21 as u is a cluster cut-vertex. □

Now we deal with the subclass of connected k-uniform block graphs in which each block contains at most two cut-vertices, .

Proposition 23

If G is a connected k-uniform block graph such that  and each block contains at most two cut-vertices, then 
.

Proof

Let us consider the block cut-point tree T of G. Recall that  has a vertex 
 corresponding to each maximal clique C of G and a vertex 
 corresponding to each cut-vertex x of G. Also, a vertex 
 is adjacent to 
 in T if, and only if, . We further consider that the descendants of each vertex of T are ordered (thus, we refer to the leftmost descendant as being the first in such ordering).

The idea is to build a proper -orientation D of G by just using transitive orientations of the maximal cliques of G, while ensuring that the cut-vertices x have in-degree 
. We claim that it is enough to prove that there are no two adjacent cut-vertices with in-degree . Indeed, this is true since: vertices of in-degree zero are sources (implying that their neighbors have in-degree at least one); the orientation of each maximal clique is transitive; and vertices that are not cut-vertices have degree in G, and thus in-degree in D, at most .

If G has no cut-vertices, then G is complete and 
. Otherwise, we root T at a leaf node 
, and let r be the cut-vertex of R. We start building D by orienting R with any transitive orientation in which r is a source.

Now, we consider a more general setup in which we have a partial orientation D of G, we have to choose a transitive orientation of a clique 
 and we know that the clique C in the path between 
 and R is already oriented. Let x be the common cut-vertex of C and 
. During the construction of D, we will ensure x has at most two arcs of C oriented towards x. Thus, we choose the orientation of 
 according to the following case analysis.

If x is the unique cut-vertex of 
, i.e. 
 is a leaf block of G, then we orient 
 with any transitive orientation satisfying that x is a source in 
. Otherwise, let 
 be the other cut-vertex of 
 (recall that, by hypothesis, there are at most two of them).

If x is a source of C, then orient 
 in such a way that x is also a source of 
 and 
 has in-degree one in 
. Note that x will have in-degree zero in D in this case.

Consider now the case in which x has in-degree one in C. If 
 is the leftmost child of 
 in T, then we choose any transitive orientation of 
 such that x is a sink in 
 and 
 is a source in 
. Otherwise, take any transitive orientation of 
 in which x is a source in 
 and 
 has in-degree two in 
 (note that this is possible since ). Observe that, since the leftmost child of 
 is always oriented in a way that x is a sink, we get that x will have in-degree k in D.

Finally, consider now the case in which x has in-degree two in C. We proceed analogously to the previous case. If 
 is the leftmost child of 
 in T, then we choose any transitive orientation of 
 such that x is a sink in 
 and 
 is a source in 
. Otherwise, take any transitive orientation of 
 in which x is a source in 
 and 
 has in-degree one in 
. Similarly as before, observe that in this case x will have in-degree  in D.

By construction, note that we cannot have two adjacent cut-vertices with the same in-degree . □

Let us now provide a tight example for Proposition 23. Note that, unlike Proposition 23, this example also holds for trees. Actually, Proposition 24 generalizes the example of a tree having proper orientation number 3 that appeared in [6].

Proposition 24

For every , there exists a k-uniform block graph such that each block contains at most two cut-vertices and 
.

Proof

For a given positive integer , let us build  as follows. We start with a clique and pick two distinct vertices, u and v. On each, we add k-cliques, denoted by 
 whose common vertex is only u and 
, whose common vertex is only v. For each clique 
, , , pick another vertex 
 to which we attach another k-clique. We claim that 
.

Suppose, by contradiction, that 
 and let D be a proper k-orientation of . By symmetry, we assume that the edge uv is oriented towards u.

Let us first prove that 
. Suppose that 
. Notice that every vertex 
 satisfies 
. We conclude that 
, which means that u must receive all its ℓ arcs from 
. It is a contradiction, since .

Thus, 
. Since , then for at least one of the k cliques 
, let us say 
, u acts like a source, meaning that 
. Using an analogous proof as the one for u, we conclude that 
, which is a contradiction, since 
. Therefore, 
. □

Thanks to Proposition 7 and to the fact that trees have proper orientation number at most 4 [6], we know that there is a polynomial-time algorithm to compute 
, for a tree T. However, the structure of trees satisfying 
, for , is not known. In [6], the authors present two classes of trees T satisfying 
, for  and . Next, we present a result that reveals another class of trees satisfying such inequalities thanks to Proposition 17.

Corollary 25

Let G be a graph and c be any positive integer. If G has no two adjacent vertices of degree at least , then 
.

Proof

Let S be the set of vertices of degree at least . Since S is an independent set, we have that 
 and we can apply Proposition 17 to obtain the desired proper c-orientation of G. □

Corollary 25 indicates new families of trees and (outer)planar graphs having bounded proper orientation number. It also implies in particular that:

Corollary 26

If T is a tree having no two adjacent vertices of degree at least three, then 
. If T is a tree having two no two adjacent vertices of degree at least four, then 
.

3.3. Maximal outerplanar graphs
A simple graph G is maximal outerplanar if it is outerplanar and no edge can be added to G so that the obtained graph is still outerplanar. A maximal outerplane graph G is a planar embedding of a maximal outerplanar graph. Note that, by definition, the outerface of a maximal outerplane graph G is the only face that might not be of degree three and thus these graphs are chordal.

Lemma 27

Given an integer  and a graph G, let 
 such that 
 is a path in G and 
, for each .

Proof

Note that since 
 we cannot have a conflict between v and one of its neighbors 
, for any , because in any extension 
 of 
 to G, we have 
, for each . Thus, we just need to consider some case analysis with respect to the possible indegrees of 
 and 
 in 
.

In what follows, we use the possible alternating orientations of P according to the parity of ℓ. If ℓ is odd, then such path admits two orientations with no two consecutive arcs in the same direction. One orientation in which 
 and 
 are sinks in the path, to which we refer as 
 and another in which both are sources, to which we refer as 
. In case ℓ is even, we consider the two possible alternating orientations as well, one in which 
 is a source and 
 is a sink, which we name 
, and the other in which the opposite occurs and we name 
. Moreover, for each , we denote the subpath 
 of P by 
.

Let us first argue how to extend the orientation 
 to G. In case ℓ is even, we can extend 
 to G by using one of the orientations 
 or 
, unless 
 or 
. If 
, we orient the edge 
 toward 
 and orient the subpath 
 with the orientation 
. In case 
, we orient the edges 
 and 
 toward 
, the edges 
 and 
 toward 
 and orient the subpath 
 with the orientation 
 (note that since ℓ is even, 
 has an even number of vertices and we need this path to contain at least one edge - this is true because ).

Let us consider then the case in which ℓ is odd. In this case, one can use one of the orientations 
 or 
 over the path P to obtain a proper k-orientation D of G, unless 
. By symmetry, we assume without loss of generality that 
 and 
. We orient 
 towards 
 and complete the orientation 
 with the orientation 
.

Let us consider now how to extend the orientation 
. Note that the only difference is that the edge 
 is oriented towards 
. Consider first that ℓ is even. In case 
 and 
, we can use the orientation 
 to extend 
 to G. In case 
 and 
, we can use the orientation 
 to extend 
 to G. In case 
 and 
, we orient the edge 
 towards 
 and we orient the path 
 with the orientation 
. In case 
 and 
, we orient the edges 
 and 
 towards 
 and we orient 
 with the orientation 
.

Finally, suppose that ℓ is odd. Similarly, we can use one of the orientations 
 or 
 to extend 
 to G unless 
; or 
 and 
. In case 
, then we orient 
 towards 
 and we orient the path 
 with the orientation 
. In case 
 and 
, we orient the edges 
 and 
 towards 
 and we orient 
 with the orientation 
. □

Theorem 28

If G is a maximal outerplane graph whose weak-dual is a path, then 
.

Proof

We prove the theorem by induction in the number of vertices of G. If , then we have nothing to prove as 
.

Let 
 and 
 be the maximal outerplane graphs obtained from G by removing the vertices 
 (note that 
 or 
 might be composed of a single edge). By induction hypothesis, 
 and 
 admit proper 13-orientations 
 and 
, respectively.

We construct a proper 13-orientation D of G from 
 and 
 by keeping the vertices 
, 
, 
, 
 with the same indegrees provided by 
 and 
. For this, we orient all edges 
, 
, 
 and 
 toward v and we orient 
 and 
 toward 
 and 
, respectively, as depicted in Fig. 4. Thus, in the sequel we show how to orient the remaining edges incident to 
 in order to obtain a proper 13-orientation of G.

Because the edges 
, 
, 
 and 
 are oriented toward v note that 
. In order to ensure that v has no conflict with its neighbors in 
, we orient the least number edges in 
, following this order, towards v. It means that if 
, then none of these edges is oriented towards v. In case , but , then we only orient the edge 
 towards v, and so on. All edges 
, for every , are oriented towards 
. Let us now argue how to orient the edges of the path 
 to complete the orientation D while ensuring that it is proper.

In case , as we said, we set 
 by orienting all edges 
 toward 
, respectively. Thus, we can extend such orientation to the edges of the path P, by Lemma 27 (note that 
 corresponds to 
 in Lemma 27, and in this case we know that the edge 
 is oriented towards 
).

Suppose now that , but . In this case, we orient 
 towards v and we orient 
 toward 
, for each . Again, it remains to orient the edges of the path P. First, we choose an orientation of 
 to extend the partial orientation we have so far in a way that the indegree of 
 is distinct from 
. Then, now it remains to orient the edges of the path 
 and again we may apply Lemma 27 (note that 
 corresponds to 
 in Lemma 27, but now the edge 
 is not necessarily oriented towards 
).

The remaining cases can be solved analogously. Notice that, in the last case, all edges 
, 
, 
 and 
 are oriented towards v. Then, after extending the partial orientation, step by step, to the vertices 
, 
, 
 and 
, it remains to orient the path 
. Since , this path has at least 6 vertices as required by Lemma 27. □

We emphasize that we just wanted to prove that there is a constant upper bound to the proper orientation number of the graphs in this class. This upper bound can probably be improved by a more careful case analysis.

3.4. Claw-free chordal graphs
Given two graphs G and H, we say that G is H-free if H is not an induced subgraph of G. A claw is the connected graph on four vertices having three of them with degree one. The following proposition is quite straightforward.

Proposition 29

If G is a chordal claw-free graph, then 
.

Proof

We prove that the neighborhood of any vertex  can be partitioned into at most three cliques. If  is a clique or  we have nothing to prove. So let  be such that  and we may consider that there are at least two other vertices in  distinct from u and w.

Since G is claw-free, note that any vertex  must be adjacent to at least one of the vertices in . Denote by 
⁎
. Again, since G is claw-free, observe that 
⁎
 must be a clique, as otherwise one may use w and v to find an induced claw in G. Analogously, one may define 
⁎
 and observe that 
⁎
 must also be a clique. Finally, vertices in 
⁎
⁎
 must be adjacent to both u and w. Thus, now we use the hypothesis that G is chordal to deduce that 
 must be a clique, as otherwise one may find a chordless cycle on four vertices using  and two non-adjacent vertices of 
. □

3.5. Cographs
It is well known that cographs are exactly the 
-free graphs. Thus, they are 
-free graphs, for each , but they may contain chordless 
's and thus they are not necessarily chordal.

The class of cographs is recursively defined as follows: 
 is a cograph; if 
 and 
 are cographs, then 
 is a cograph; if 
 and 
 are cographs, then 
 is a cograph.

If G is a 
, then 
. The case of disjoint union is solved by Proposition 10. However, computing the proper orientation number of a cograph which is the join of two other cographs 
 and 
 - even if we know optimal solutions for 
 and 
 - seems not trivial. Here, we provide some bounds. Recall that 
 
.

Proposition 30

Let 
 be graphs on 
 vertices, respectively, and let 
. Then,
 
 

Proof

To prove the upper bound, it suffices to take proper 
-orientations of 
, for each , and either orient all edges of 
 toward their endpoint in 
 or all edges toward their endpoint in 
. Note that such an orientation D is proper as either 
 and 
, for each 
 and each 
; or the analogous holds when we orient all edges in 
 toward 
.

Now, let 
, for each . To prove the lower bound, since G is the join of two graphs 
 and 
, at least half of the edges in 
 must be oriented towards 
 or towards 
. Let D be a proper 
-orientation of G and suppose that these edges are oriented towards 
 (the other case is analogous). Then, we have that:
 
 
 
 
 
 
 □

Simple graphs with average degree as large as possible are certainly complete graphs. Note that if 
 is a complete graph on k vertices, for each  and for some positive integer k, then 
 is a complete graph on 2k vertices. Thus, for each , we have 
 
 
, 
 and 
. Consequently, the lower bound provided by Proposition 30 is equal to 
 
 
 
 
. On the other hand, the upper bound is equal to , which is tight. A natural question is how to improve such lower bound.

4. Further research
We provided upper bounds for split graphs and cographs. As we mentioned, the computational complexity of determining 
 when G is split or cobipartite is still open [6]. We further propose the following problem:

Problem 31

What is the computational complexity of determining 
, when G is a cograph?

As discussed in Section 2.1, a 
-kernel exist to Parameterized Proper Orientation when restricted to chordal graphs. One could try to improve such kernel, although, as we commented, no polynomial kernel may exist, unless NP ⊆ coNP/poly.

Concerning bounds, we believe that finding a constant upper bound for (outer)planar graphs, a question posed in [6], is one of the most challenging open problems about this parameter.

We provided upper bounds to some subclasses of chordal graphs G in function of . Our bound for split graphs and our remark on cobipartite graphs answer Problem 9 in [6]. We suggest the following related question:

Problem 32

Does there exist a constant c such that 
, for any chordal graph G?

In particular, we show that such constant exist for the case of k-uniform block graphs. Since the problem is not monotone, one may wonder whether 
 holds for every block graph G.