Abstract
RSA (Rivest-Shamir-Adleman) cryptosystem is the most popular asymmetric key cryptographic algorithm used in computer science and information security. Recently, an RSA-like cryptosystem was proposed using a novel product that arises from a cubic field connected to the cubic Pell equation. The relevant key equation is 
 with . This RSA variant is claimed to be robust against the Wiener's attack and hence the bit-size of the private key could be shorter, namely 
. In this paper, we explore the further security analysis and investigate the potential small private exponent attack. We show that such RSA variant is particularly vulnerable to the lattice-based method. To be specific, we can carry out the lattice-based small private exponent attack if 
, which is less secure than the standard RSA. Furthermore, we conduct numerical experiments to verify the validity of the proposed attack.

Previous
Next 
Keywords
Cryptanalysis

RSA variant

Cubic Pell equation

Lattice-based method

Small private exponent attack

1. Introduction
RSA [1] is currently the most widely used public key cryptosystem in the world. In the standard RSA cryptosystem, a public modulus N is the product of two large primes p and q of the same bit-size, namely . The key equation is , where  is Euler's totient function.  and  are called the public and private keys, respectively. In the encryption process, a message string is transformed into an integer m and then encrypted as 
. The decryption process computes 
. As e and d are calculated as exponents in the encryption and decryption phases, they are called public and private exponents as well. In this paper, we assume 
, 
 and further use two parameters α and δ in the cryptanalysis for simplicity.

The standard RSA scheme has been generalized by various approaches such as modifying the modulus [2] and modifying the decryption process [3] to gain a significant speed-up in the practical implementation. Besides, several RSA variants like [4], [5] have been proposed to be more secure against the broadcast attack [6]. In this paper, we focus on the RSA variant based on cubic Pell equation that was proposed in [5]. It defines a novel product that is applied in the encryption and decryption processes. We conclude the modified key equation arisen from such RSA variant, which can be written as(1)
 Generally, we have  as 
. Moreover, α and δ can be set to exceed the above range for particular security considerations in practice. We introduce the relevant RSA variant and its mathematical background below. One may refer to [5] for more details.

This RSA variant was recently proposed by Murru and Saettone. It is related to an interesting definition of product that arises from a cubic field connected to the cubic Pell equation. Let  be a field and 
 be an irreducible polynomial in . We consider the quotient field
  induces a product • between two triples like 
. The product 
 is calculated as
 The norm of an element  is given by 
. Considering the unitary elements, we obtain the cubic Pell curve
 where 
 is the more natural cubic Pell equation for a non-cubic integer r. Starting from , we consider the quotient group 
⁎
⁎
 with a non-standard product ⊙. The group B can be rewritten as
⁎
 where  stands for the equivalent set. Fixing an element , the elements of B can be seen as  with , or  with , or . Now the group B is The rules for computing the commutative product ⊙ in B are defined as follows, where  is the identity.

•
;

•

–
 
 
, ;

–
 
, 
;

–
, otherwise;

•

–
 
 
, ;

–
 
, ;

–
, otherwise.

The RSA variant scheme is based on the following useful facts. Letting 
 and fixing , we have 
 in this case. Thus, B is a cyclic group of order 
 
, with respect to a well-defined product ⊙. An analog of the little Fermat's theorem holds.
 for any 
 and 
. Moreover, the power using the product ⊙ can be evaluated through a generalization of the Rédei rational functions. When , for two prime numbers p and q of the same bit-size, it follows from the above power computation that
 which can be seen as an analog of the Euler's theorem. The proposed public-key cryptosystem in [5] using the product ⊙ is described as follows.

Key Generation.
Randomly choose two prime numbers of the same bit-size  and compute the modulus . Randomly choose an integer e such that 
 along with a non-cubic integer r in 
 and 
. Compute d such that 
. The public encryption key is  and the corresponding secret decryption key is .

Encryption.
Given a pair of plaintexts 
 and 
 in 
, they are encrypted by

Decryption.
Given a pair of ciphertexts 
 and 
 in 
, the receiver can decrypt them by evaluating

In summary, this RSA variant scheme uses a new group equipped with a non-standard product whose powers can be evaluated means of some generalized Rédei functions. The authors claim that the proposed scheme is more secure than the standard RSA in broadcast scenarios since the corresponding trapdoor function is not a simple monomial power as in the standard RSA. Furthermore, the authors claim that Wiener's attack [7] is not usable against the proposed RSA variant scheme. For the same reason, further attacks exploiting continued fractions also fail in such case. Hence, the private key of bit-size less than 
 can be used without being affected by Wiener's attack.

It is interesting to investigate whether the proposed scheme in [5] can be used with a much shorter private exponent in theory and in practice as claimed. Surprisingly, we conclude that the RSA variant based on cubic Pell equation is particularly vulnerable to the lattice-based small private exponent attack.

We first review several small private exponent attacks below. In 1990, Wiener [7] showed that one can break the standard RSA scheme when the private key d is less than 
 
. This bound was further improved to 
 
 in [8]. Wiener's attack utilizes the continued fraction approach to deal with the key equation . If d is small enough,  will be one of the convergents of the continued fraction expansion of the public rational fraction . Thus, k and d can be recovered by computing the continued fraction expansion of .

Later in 1999, Boneh and Durfee [9] introduced the small inverse problem and further improved the insecure bound to 
 using Coppersmith's lattice-based techniques [10]. The aim of the lattice-based method is to find the small roots of the modular equation  with known A and e. Moreover, Herrmann and May [11] presented an elementary method to solve the same equation using the linearization technique that is applied to construct smaller dimensional lattices. Though it does not improve the insecure bound, it simplifies the lattice construction and reduces the practical consumption. More small private exponent attacks [12], [13], [14], [15], [16], [17], [18] and other types of cryptanalyses [19], [20], [21], [22], [23] on RSA and its variants have been proposed using the lattice-based method.

The small inverse problem is a natural extension of the small private exponent attack on the standard RSA and has been studied in [9], [24], [25], [26]. In 2012, Kunihiro [25] presented a lattice-based method to solve small inverse problems with a higher degree. To be specific, for a monic polynomial  of degree , integers C and e, a lattice-based algorithm was proposed to find all small roots of a bivariate modular equation . A similar approach as the linearization technique is employed for especially evaluating the lattice determinant. We adapt the lattice-based method in [25] to conduct the small private exponent attack on the RSA variant based on cubic Pell equation.

In this paper, we first derive the critical modular equation to be solved from the modified key equation (1). It can be rewritten as
 Thus, we are required to solve a small inverse problem with degree two. The critical modular equation is(2)
 for  and 
 with small roots  and . We propose the small private exponent attack for a general case when using full-size public key 
, which is stated below.

Proposition 1

Let  be a modulus of the RSA variant based on cubic Pell equation. Two prime factors p and q are of the same bit-size. Let 
 be a valid public key and 
 be its corresponding private key such that 
. Then N can be efficiently factored in polynomial time if

It is oblivious that the RSA variant based on cubic Pell equation can be broken in polynomial time for small private key 
. Moreover, it indicates that such RSA variant is even more vulnerable than the standard RSA since  is much greater than  reported in [9]. Concretely,  is twice of .
The rest of the paper is organized as follows. We review some mathematical facts and useful lemmas of the lattice-based method in Section 2. In Section 3, we present the small private exponent attack on the RSA variant based on cubic Pell equation in detail. In Section 4, we verify the validity of the proposed attack by computer experiments. Finally, we conclude the paper in Section 5.

2. Preliminaries
In this section, we introduce Coppersmith's techniques [10], [27] based on the LLL lattice reduction algorithm [28] and summarize a crucial condition for finding the small roots of modular/integer polynomial equations. We briefly explain how to solve multivariate modular polynomial equations using the idea of Coppersmith's techniques. One may refer to [29], [30], [31] for more details.

Problem 1

Let 
 be an irreducible multivariate polynomial defined over , which has a small root 
 modulo a known positive integer such that 
. The question is to recover the desired root 
 in polynomial time under the established upper bounds 
.

We start with the lattice theory and the lattice reduction algorithm. A lattice  spanned by linearly independent vectors 
 is the set of their integer linear combinations, which is denoted by
 
 By regarding each 
 as a row/column vector, they generate a lattice basis matrix B. The determinant of  is defined as 
, where 
 is a transpose of B. The rank of  is w and we always consider a full-rank lattice for . We have  for a full-rank lattice since B is a square matrix. Moreover, the determinant of a triangular basis matrix can be easily estimated as the product of its diagonal entries.

The LLL algorithm proposed by Lenstra, Lenstra and Lovász [28] is practically used for computing approximately short reduced vectors due to its efficient running outputs. We provide the following substratal lemma that has been proven in [29].

Lemma 1

Let  be a lattice spanned by basis vectors 
. The LLL algorithm outputs a reduced basis 
 satisfying
 
 
 in time polynomial in w and in the bit-size of the entries of the basis matrix.

Howgrave-Graham [32] later refined on Coppersmith's techniques to propose a succinct lemma, which is used for judging if the roots of a modular equation are roots over . For a given polynomial 
, its norm is defined as 
.

Lemma 2

Let 
 be an integer polynomial, which is a sum of at most w monomials. Let 
 and R be some positive integers. Suppose that

1.
, where 
,

2.
.

Then 
 holds over the integers.
Hence, the root-finding problem in modular polynomial equations can be reduced to the case of that in equation over the integers by using Lemma 2. Further combining with Lemma 1, one can solve a given modular equation under a certain condition. The main idea of the lattice-based method is to construct a set of shift polynomials modulo R with the common root and then reduce them to several integer equations. The basis matrix generating by the shift polynomials' coefficient vectors spans a w-dimensional lattice. One can use the LLL algorithm to obtain short lattice vectors and transform them into polynomial equations. If the norms of the polynomials are sufficiently small, the equations hold over the integers.
When one obtains the first ℓ reduced vectors through the LLL algorithm, he/she can extract the solutions if
 
 
 which can be roughly reduced to 
 when ignoring the lower terms. Eventually, one can efficiently extract the common root of the derived integer equations by the Gröbner basis computation [33] or resultant computation.

In summary, we have four steps to solve a multivariate modular polynomial equation using the lattice-based method.

Shift Polynomials.
Using 
 and given modulus to generate a collection  of shift polynomials 
 such that 
 is a common root modulo R.

Lattice Generation.
Let 
 be a row vector derived from the coefficient vector of 
 for all . Hence, one can generate the lattice 
.

Lattice Reducion.
Applying the LLL reduction algorithm on , one can get the first n many reduced basis vectors 
. One can transform the vectors to polynomials 
 sharing the common root 
 over .

Root Extraction.
If derived integer polynomials 
 for  are algebraically independent, the equation system 
 can be solved using the Gröbner basis computation. Hence, one extracts the desired root 
.

We do not mention how to solve integer polynomial equations since it makes use of the essential idea of solving modular equations by adding an auxiliary parameter. We further apply the lattice technique introduced in [25], which can make it easier to construct a triangular lattice matrix in our attack scenario.

Notice that solving multivariate equations is heuristic because the newly derived polynomials are not guaranteed to be algebraically independent. In this paper, we assume that the polynomials derived from the reduced vectors of the LLL algorithm are algebraically independent as discussed in the literature of the lattice-based attacks on RSA and its variants. In fact, there are barely existing works that contradict this assumption.

Assumption 1

The integer polynomials finally obtained from the lattice-based method are algebraically independent. Thus, the common root of the derived polynomial equations can be efficiently recovered by the Gröbner basis computation.

3. Small private exponent attack
We aim to produce the lattice-based attack on the RSA variant based on cubic Pell equation for sufficient small private key d, i.e. small private exponent δ. Applying the subtle technique introduced in [25], we solve the crucial modular equation (2) and present the small private exponent attack.

We address how to find all small roots of the bivariate modular equation
 Let 
 for 
 with  and 
. We transform the original polynomial  into
 Letting 
, we have 
. The shift polynomials 
 are defined as
 for a fixed positive integer s and non-negative integers . We denote the set of shift polynomials by  for
 where the corresponding index set 
 is defined by
 for a parameter  to be optimized later. The definitions of 
 and 
 are modified from the original ones in [25].

Let 
 be a solution of  and 
, it is easy to see that all the shift polynomials 
 in  share the common small root 
 modulo 
.

The polynomial order 
 is defined as 
 if

•
; or

•
 and 
; or

•
, 
 and 
.

The monomial order 
 is defined as 
 if
•
; or

•
 and 
; or

•
, 
 and 
.

We can substitute each occurrence of 
 by the term . The lattice basis matrix is generated by taking the coefficient vectors of 
 as row vectors, where  and Z denote the upper bounds on the root 
. Additionally, the rows and columns are arranged according to the above orders 
 and 
, which guarantees that the lattice basis matrix is triangular (this property has been proven in [25]). Table 1 shows a toy example for two parameters  and , where symbols “–” denote the non-zero off-diagonal entries and other off-diagonal entries are 0.


Table 1. A toy example of the lattice basis matrix for s = 2 and τ = 1.

1	y	x	xy	z	yz	y2z	x2	x2y	xz	xyz	z2	yz2	y2z2	y3z2
g[0,0,0]	e2														
g[0,1,0]		e2Y													

g[1,0,0]			e2X												
g[1,1,0]				e2XY											
g[0,0,1]			–	–	eZ										
g[0,1,1]	–			–	–	eYZ									
g[0,2,1]	–	–			–	–	eY2Z								

g[2,0,0]								e2X2							
g[2,1,0]									e2X2Y						
g[1,0,1]								–	–	eXZ					
g[1,1,1]			–						–	–	eXYZ				
g[0,0,2]			–					–	–	–	–	Z2			
g[0,1,2]			–	–	–				–	–	–	–	YZ2		
g[0,2,2]	–		–	–	–	–				–	–	–	–	Y2Z2	
g[0,3,2]	–	–		–	–	–	–				–	–	–	–	Y3Z2
Since 
, 
 and , we can figure out 
, 
 and 
 when omitting small terms compared to N. We are able to compute the lattice determinant, which can be calculated as 
 
 
 
 
 
 
 
 
 By counting the numbers of X, Y, Z and e appearing in the diagonal entries, we know the contributions of the shift polynomials to . We omit the rounding of τk as  is negligible in the asymptotic analysis for sufficiently large s.

We compute the dimension w of the full-rank lattice  and the contributions of the shift polynomials denoted by 
, 
, 
 and 
, respectively. 
  
  
 
 
 
 
 
 
 
 
  
  
 
 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
 
 Hence, we have 
 for the above values. Substituting the values of  and e, the lattice determinant  is approximately equal to
 
 
 
 
 
 which can be simplified into
 
 
 
 
 when omitting the lower order term 
. Consider the condition 
 for 
, we substitute the values of e and deduce
 
 Hence, we deal with the exponents in 
 and obtain
 It can be simplified into
 The value of the left side reaches its minimum by setting  and then the inequality becomes
 Hence, we obtain the final condition Note that we must have  and hence . Combining it with  and , we have . We discuss more about how to solve the modular equation (2) for other cases like  and . The optimizing parameter τ is no longer  when considering other values of α.

For , we can infer that  and hence τ should be less than 0. In this case, we take  and obtain . Combining it with , we have  leading to , which contradicts the prerequisite . Therefore, we cannot solve the modular equation (2) for .

For , we can infer that  and hence τ should be greater than 1. In this case, we take  and obtain . Combining it with , we have  leading to , which satisfies the prerequisite . Besides, we should ensure , which can be reduced to . Therefore, we can solve the modular equation (2) for  using .

Once we extract the common root 
, we can easily factorize N using the value of . The above results of our attacks are illustrated in Fig. 1. It is oblivious that we gain a significant finding of the insecure bound on δ through the lattice-based method. The RSA variant based on cubic Pell equation is not so secure as claimed.

Fig. 1
Download : Download high-res image (167KB)
Download : Download full-size image
Fig. 1. The curves denote the asymptotic insecure bound on δ with respect to various α's. The gray region indicates the vulnerable attack scenarios of the proposed small private exponent attack on the RSA variant based on cubic Pell equation.

To summarize, we propose the small private exponent attack on the RSA variant based on cubic Pell equation for the public key e of an arbitrary bit-size (i.e. an arbitrary value of α) as follows.

Proposition 2

Let  be a modulus of the RSA variant based on cubic Pell equation. Two prime factors p and q are of the same bit-size. Let 
 be a valid public key and 
 be its corresponding private key such that 
. Then N can be efficiently factored in polynomial time if
 
 
 
 
 

For the general case when 
, we obtain the solvable condition  as stated in Proposition 1 directly from Proposition 2. Note this insecure bound is much higher than that derived in the small private exponent attack on the standard RSA. Thus, the RSA variant based on cubic Pell equation is much more vulnerable to attacks using the lattice-based method.

4. Experimental results
In this section, we verify the validity of the proposed small private exponent attack on the RSA variant based on cubic Pell equation. The experiments are carried out in SageMath1 under Windows 10 running on a laptop with Intel Core i7-8550U CPU 1.80 GHz. The numbers for generating the concrete parameters of RSA variant instances are chosen at random.

For each numerical experiment, we first generate a 1024-bit RSA modulus N (i.e. 
) with the private key d of predetermined bit-size. Then we generate the corresponding public key e according to the modified key equation 
. Moreover, we gradually increase the bit-size of the public key e to achieve greater α when performing the small private exponent attack.

For conducting the proposed attack, we choose a suitable s with an optimal τ to construct the lattice. The experimental results are given in Table 2. The 
-column provides the bit-size of the public key of the generated RSA variant instance. The 
-column provides the bit-size of the private key used in the experiments for our lattice settings, which are indicated by the s, τ and w-columns. The 
-column provides the experimental results of the insecure small private exponent in our attacks. The respective time consumption (recorded in seconds) of the LLL algorithm and the Gröbner basis computation are given in the TLLL and TGB-columns.


Table 2. The experimental results on the proposed small private key attack.

δe	s	τ	w	TLLL	TGB
1024	2044	439	0.428	3	1	26	0.419	0.100
1024	2047	467	0.456	4	1	40	6.807	0.137
1024	2048	485	0.473	5	1	57	126.737	0.115
1024	2047	496	0.484	6	1	77	3430.796	0.162
1024	2045	504	0.492	7	0.857	93	6149.896	0.146
1024	2045	514	0.501	8	1	126	23610.149	0.093
1024	2047	524	0.511	9	1	155	78149.222	10.715
During each experiment, we could collect abundant polynomials satisfying the solvable requirements. In other words, we could obtain sufficient reduced basis vectors after running the lattice reduction algorithm. The running time of the LLL algorithm heavily depends on the lattice dimension and the entries of the lattice basis matrix. As showed in Table 2, the running time gets longer as the above parameters get larger. The polynomial equations sharing the common root over the integers are derived from the vector-to-polynomial transformation of the outputted lattice basis vectors.

We concisely comment on the root-extraction procedure of the proposed attack. We put the derived polynomials into the Gröbner basis computation and obtain  that leads to the factorization of N. We successfully recover the common root in all the experiments, where we generate the RSA variant instances using the parameters showed in Table 2. The time consumption of the Gröbner basis computation is much lower than that for running the LLL algorithm. Unfortunately, the experimental results are still a few bits away from the asymptotic insecure bound due to the restricted computing resource. If we apply the lattice-based method with much higher-dimensional lattices, the practical attack results can be further improved.

5. Conclusions
We propose an effective lattice-based attack on the RSA variant based on cubic Pell equation using Coppersmith's techniques in this paper. Though such RSA variant is designed using complicated product and power computations, the key equation 
 is quite simple. We focus on how to solve the bivariate modular equation 
 and present the small private exponent attack on this RSA variant. Further attack results for the public key e of arbitrary bit-size are also presented and illustrated. We justify the validity of the proposed small private exponent attack by numerical computer experiments.

