Abstract
For graphs G and T, and a family of graphs \mathcal {F} let \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) denote the maximum possible number of copies of T in an \mathcal {F}-free subgraph of G. We investigate the algorithmic aspects of calculating and estimating this function. We show that for every graph T, finite family \mathcal {F} and constant \epsilon >0𝜖>0 there is a polynomial time algorithm that approximates \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) for an input graph G on n vertices up to an additive error of \epsilon n^{v(T)}𝜖𝑛𝑣(𝑇). We also consider the possibility of a better approximation, proving several positive and negative results, and suggesting a conjecture on the exact relation between T and \mathcal {F} for which no significantly better approximation can be found in polynomial time unless P=NP𝑃=𝑁𝑃.

Introduction
Many natural computational problems can be formulated as graph modification problems. In these we are given an input graph G and we aim to apply the smallest number of modifications and get a graph which has some predefined property. Both the allowed modifications and the desired properties vary. The most common modifications are adding, deleting, or editing edges or vertices. As for the desired properties, these are usually either graph properties coming from classical graph theory or properties motivated by real world applications such as Molecular Biology [8, 14, 15], Circuit Design [11] or Machine Learning [6].

Garey and Johnson [13] considered 18 edge and vertex modification problems. Yannakakis [22] proved that such modification problems are NP-hard for properties such as outerplanar and transitively orientable, Asano [4], and Asano and Hirata [5] established NP-hardness for several properties expressible through forbidding families of minors or topological minors, El-Mallah and Colbourn [11] proved NP-hardness for properties defined by forbidden minors and induced subgraphs. In [22] Yannakakis posed the question of proving NP-hardness not only for specific properties, but for general families of properties.

In [18] Natanzon, Shamir and Sharan studied edge modification problems for hereditary properties such as being Perfect. They showed that not only are these problems NP-hard, even finding an approximate answer, up to some constant multiplicative factor, is NP-hard. Other works have also investigated the question of approximation, see for example [16] and [7].

In [1] Alon, Shapira and Sudakov investigated this question for the general family of monotone graph properties.Footnote 1 The only relevant edge-modification for such properties is edge deletion. Note that any monotone property can be defined as the property of a graph being \mathcal {F}-free where \mathcal {F} is an appropriate (finite or infinite) family of graphs. Thus the question becomes the following: for a graph G, let \mathrm {ex}(G,K_2,\mathcal {F})ex(𝐺,𝐾2,) denote the maximum number of edges in a subgraph of G that contains no copy of F\in \mathcal {F}𝐹∈. The following theorem shows that this value can be approximated as follows.

Theorem 1.1
( [1]) For any fixed \epsilon > 0𝜖>0 and any family of graphs \mathcal {F} there is a deterministic algorithm that given a graph G on n vertices computes \mathrm {ex}(G,K_2,\mathcal {F})ex(𝐺,𝐾2,) up to additive error of \epsilon n^2𝜖𝑛2 in time O(n^2)𝑂(𝑛2).

A complimentary theorem shows that excluding simple cases, a significantly better approximation is NP-hard

Theorem 1.2
( [1]) Let \mathcal {F} be a family of graphs and let G be a graph on n vertices. Then,

1.
If there is a bipartite graph in \mathcal {F}, then there is a fixed \delta > 0𝛿>0 for which it is possible to approximate \mathrm {ex}(G,K_2,\mathcal {F})ex(𝐺,𝐾2,) within an additive error of n^{2-\delta }𝑛2−𝛿 in polynomial time.

2.
On the other hand, if there are no bipartite graphs in \mathcal {F}, then for any fixed \delta > 0𝛿>0 it is NP-hard to approximate \mathrm {ex}(G,K_2,\mathcal {F})ex(𝐺,𝐾2,) within an additive error of n^{2-\delta }𝑛2−𝛿.

Note that if G=K_n𝐺=𝐾𝑛, the complete graph on n vertices, then finding \mathrm {ex}(K_n,K_2,\mathcal {F})ex(𝐾𝑛,𝐾2,) is the classical Turán question. This question and its many variations are in the heart of extremal graph theory. Recently in [3] the systematic study of the following variation was initiated

Definition 1.3
For graphs G and T and a family of graphs \mathcal {F} let \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) denote the maximum number of copies of T in an \mathcal {F}-free subgraph of G.

Following the spirit of Theorems 1.1 and 1.2 and the above generalization of the classical Turán theorem, we consider the following question. Given a forbidden family of graphs \mathcal {F}, a graph T, and a constant \epsilon >0𝜖>0, is there a polynomial time algorithm that given a graph G determines \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) up to an additive error of \epsilon n^{v(T)}𝜖𝑛𝑣(𝑇)? If so, is the problem of finding a significantly better approximation NP-hard?

We answer the first question by proving the following

Theorem 1.4
For every constant \epsilon >0𝜖>0, finite family of forbidden graphs \mathcal {F} and fixed graph T, there is a deterministic polynomial time algorithm that given a graph G on n vertices approximates \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) within an additive error of \epsilon n^{v(T)}𝜖𝑛𝑣(𝑇).

The proof is based on variants of Szemerédi’s regularity lemma, extending the methods in [1].

As for the question of better approximation, the natural generalization of the easy part of Theorem 1.2 holds also in our case. For a fixed graph T, an m blow-up of T is the graph obtained by replacing each vertex of T by an independent set of size m and each edge by a complete bipartite graph between the corresponding independent sets.

Proposition 1.5
Let T be a fixed graph and let \mathcal {F} be a family of graphs such that there is a graph F\in \mathcal {F}𝐹∈ which is a subgraph of a blowup of T. Then there is a fixed \epsilon :=\epsilon (T,\mathcal {F})>0𝜖:=𝜖(𝑇,)>0 such that \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) can be calculated in polynomial time up to additive error of n^{v(T)-\epsilon }𝑛𝑣(𝑇)−𝜖 for any graph G on n vertices.

The above is a straightforward application of the following simple proposition from [3].

Proposition 1.6
( [3]) Let T be a fixed graph. Then \mathrm {ex}(n,T,F) =\Omega (n^{v(T)})ex(𝑛,𝑇,𝐹)=Ω(𝑛𝑣(𝑇)) if and only if F is not a subgraph of a blow-up of T. Otherwise, \mathrm {ex}(n, T,F) \le n^{v(T)-\epsilon }ex(𝑛,𝑇,𝐹)≤𝑛𝑣(𝑇)−𝜖 for some \epsilon :=\epsilon (T,F) >0𝜖:=𝜖(𝑇,𝐹)>0

If indeed F is a subgraph of a blow up of T, then for \epsilon :=\epsilon (T.F)>0𝜖:=𝜖(𝑇.𝐹)>0, if n is large enough we have that

\begin{aligned}0\le \mathrm {ex}(G,T,F)\le \mathrm {ex}(K_n,T,F)\le n^{v(T)-\epsilon }+0.\end{aligned}

0≤ex(𝐺,𝑇,𝐹)≤ex(𝐾𝑛,𝑇,𝐹)≤𝑛𝑣(𝑇)−𝜖+0.

Thus 0 is a trivial approximation of \mathrm {ex}(G,T,F)ex(𝐺,𝑇,𝐹) up to additive error of n^{v(T)-\epsilon }𝑛𝑣(𝑇)−𝜖. For any family of graphs \mathcal {F}, if F\in \mathcal {F}𝐹∈ then \mathrm {ex}(G,T,\mathcal {F})\le \mathrm {ex}(G,T,F)ex(𝐺,𝑇,)≤ex(𝐺,𝑇,𝐹), and the required result follows.

As for the extension of the second part of Theorem 1.2 we prove the following special case

Theorem 1.7
Let k > m\ge 2𝑘>𝑚≥2 be integers, then for every \epsilon >0𝜖>0 approximating \mathrm {ex}(G,K_m,K_k)ex(𝐺,𝐾𝑚,𝐾𝑘) up to additive error of n^{m-\epsilon }𝑛𝑚−𝜖 is NP-hard for a given input graph G on n vertices.

We believe that excluding the cases covered by Proposition 1.5 no better approximation is possible, and so we suggest the following conjecture.

Conjecture 1.8
For every graph T, family of graphs \mathcal {F} such that no F\in \mathcal {F}𝐹∈ is a subgraph of a blow-up of T, and \epsilon >0𝜖>0, it is NP-hard to approximate \mathrm {ex}(G,T,\mathcal {F})ex(𝐺,𝑇,) up to additive error of n^{v(T)-\epsilon }𝑛𝑣(𝑇)−𝜖 for a given input graph G on n vertices.

The rest of the paper is organized as follows. Section 2 is dedicated to definitions and preliminary results, most of these concern variations of the regularity lemma. Section 3 is the proof of the main lemma used to establish Theorem 1.4. Sections 4 and 5 contain the proofs of Theorems 1.4 and 1.7 respectively, and finally Section 6 includes some further remarks concerning Conjecture 1.8 and open problems.

Regularity Lemmas and Auxiliary Results
From here on let \epsilon _1,\epsilon _2...𝜖1,𝜖2... and \delta _1,\delta _2,...𝛿1,𝛿2,... be positive constants depending on \epsilon 𝜖, T and \mathcal {F} and tending to zero as \epsilon 𝜖 tends to zero. In some cases the indices refer to the lemma or theorem from which the corresponding constant arises. Additionally, let t=v(T)𝑡=𝑣(𝑇) denote the number of vertices of T.

Two Versions of the Regularity Lemma
Given a graph G and two disjoint sets of vertices A,B\subset V(G)𝐴,𝐵⊂𝑉(𝐺), let e(A, B) denote the number of edges with one end point in each set and let the density of edges between the sets be defined as:

\begin{aligned} d(A,B)=\frac{e(A,B)}{|A|\cdot |B|} \end{aligned}

𝑑(𝐴,𝐵)=𝑒(𝐴,𝐵)|𝐴|⋅|𝐵|

Definition 2.1
(\epsilon 𝜖-Regular Pair) Given a graph G and a pair of disjoint sets of vertices A,B\subset V(G)𝐴,𝐵⊂𝑉(𝐺), we say that the pair (A, B) is \epsilon 𝜖-regular, if for any two subsets A' \subseteq A𝐴′⊆𝐴 and B' \subseteq B𝐵′⊆𝐵, such that |A'| \ge \epsilon |A||𝐴′|≥𝜖|𝐴| and |B'| \ge \epsilon |B||𝐵′|≥𝜖|𝐵|, the inequality |d(A', B')-d(A, B)| \le \epsilon |𝑑(𝐴′,𝐵′)−𝑑(𝐴,𝐵)|≤𝜖 holds.

Definition 2.2
(\epsilon 𝜖-Regular partition) Given a graph G and \epsilon >0𝜖>0 a partition P = \{V_i\}_{i=0}^k𝑃={𝑉𝑖}𝑘𝑖=0 of V(G) for which |V_i|=|V_j||𝑉𝑖|=|𝑉𝑗| for every i,j\ge 1𝑖,𝑗≥1, |V_0|<k|𝑉0|<𝑘, and all but at most \epsilon \left( {\begin{array}{c}k\\ 2\end{array}}\right) 𝜖(𝑘2) of the pairs (V_i, V_j )(𝑉𝑖,𝑉𝑗) are \epsilon 𝜖-regular is called an \epsilon 𝜖-regular partition.

The following theorem is the regularity lemma of Szemerédi [20]. It is convenient to use the following version which appears, for example, in [12], Theorem 3.7.

Theorem 2.3
( [12, 20])

For any \epsilon >0𝜖>0 and integer k there exist integers N_{2.3}:=N(\epsilon ,k)𝑁2.3:=𝑁(𝜖,𝑘) and K_{2.3}:=K(\epsilon ,k)𝐾2.3:=𝐾(𝜖,𝑘) such that the following holds. If |V|>N_{2.3}|𝑉|>𝑁2.3 then for any partition V=V_0\cup ...\cup V_k𝑉=𝑉0∪...∪𝑉𝑘 with |V_0|<k|𝑉0|<𝑘 and |V_1|=...=|V_k||𝑉1|=...=|𝑉𝑘| and any graph G on the vertex set V there exists a partition V=U_0\cup ... \cup U_{k'}𝑉=𝑈0∪...∪𝑈𝑘′ such that

1.
|U_0|< k' <K_{2.3}|𝑈0|<𝑘′<𝐾2.3.

2.
For each U_i𝑈𝑖 with i\ge 1𝑖≥1 there is V_j𝑉𝑗 such that U_i\subset V_j𝑈𝑖⊂𝑉𝑗.

3.
|U_1|= \ldots =|U_{k'}||𝑈1|=…=|𝑈𝑘′|.

4.
U_0\cup \ldots \cup U_{k'}𝑈0∪…∪𝑈𝑘′ is an \epsilon 𝜖-regular partition of G.

We will also need the following algorithmic version of the regularity lemma that uses a stronger notion of regularity. For the following see [2] and [19]

Definition 2.4
(f-Regular partition) For a function f : {\mathbb {N}}\rightarrow (0, 1)𝑓:ℕ→(0,1) and a graph G we say that a partition P = \{V_i\}_{i=0}^k𝑃={𝑉𝑖}𝑘𝑖=0 of V(G) such that |V_0|<k|𝑉0|<𝑘 and |V_i|=|V_j||𝑉𝑖|=|𝑉𝑗| for every i,j\ge 1𝑖,𝑗≥1 is an f-regular partition if all pairs (V_i, V_j ), 1 \le i < j \le k(𝑉𝑖,𝑉𝑗),1≤𝑖<𝑗≤𝑘, are f(k)-regular.

Theorem 2.5
( [2]) For every l, \epsilon > 0𝑙,𝜖>0 and non-increasing function f : {\mathbb {N}}\rightarrow (0, 1)𝑓:ℕ→(0,1), there is an integer K_{2.5}:= K_{2.5}(f, \epsilon , l)𝐾2.5:=𝐾2.5(𝑓,𝜖,𝑙) so that for a given graph G on n vertices, with n>K_{2.5}𝑛>𝐾2.5, one can add or remove at most \epsilon n^2𝜖𝑛2 edges of G and get a graph G_0𝐺0 that has an f-regular partition of order k, where l \le k \le K_{2.5}𝑙≤𝑘≤𝐾2.5. Furthermore, the needed changes and the partition can be found in polynomial time.

Note that in [2] the definition of f-regular partition is slightly different. There is no set V_0𝑉0 and the sizes of the sets are such that for every i, j, \big ||V_i|-|V_j|\big |\le 1∣∣|𝑉𝑖|−|𝑉𝑗|∣∣≤1. It is easy to check that the two versions are equivalent. For simplicity we will use the version which has a set V_0𝑉0 and k sets of equal size throughout the paper.

Definitions of Weighted Graphs and Partition Graphs
We use the following definitions for weighted graphs.

Definition 2.6
1.
A weighted graph W is a graph on n vertices with a weight function w:E(K_n)\rightarrow [0,1]𝑤:𝐸(𝐾𝑛)→[0,1], where we identify between w(e)=0𝑤(𝑒)=0 and e\notin E(W)𝑒∉𝐸(𝑊).

2.
For a fixed graph T let \mathcal {T} be the the set of copies of T in W and let

\begin{aligned} \mathcal N(W,T)=\sum _{T\in \mathcal {T} } \prod _{(v_i,v_j)\in E(T)}w(v_i,v_j). \end{aligned}

(𝑊,𝑇)=∑𝑇∈∏(𝑣𝑖,𝑣𝑗)∈𝐸(𝑇)𝑤(𝑣𝑖,𝑣𝑗).

Call W a T-free graph if \mathcal N(W,T)=0(𝑊,𝑇)=0. (Note that in an unweighted graph G, \mathcal N(G,T)(𝐺,𝑇) is just the number of copies of T in G.)

3.
Let W'𝑊′ be a weighted graph on V(W) with a weight function w':E(W')\rightarrow [0,1]𝑤′:𝐸(𝑊′)→[0,1]. We say that W'𝑊′ is a conventional subgraph of W if \forall e\in K_n∀𝑒∈𝐾𝑛 either w'(e)= w(e)𝑤′(𝑒)=𝑤(𝑒) or w'(e)=0𝑤′(𝑒)=0.

Given a graph G and an \epsilon 𝜖-regular partition of it, say P=\{V_i\}𝑃={𝑉𝑖}, we would like to associate a weighted graph to G and P and to relate subgraphs of the weighted graph to subgraphs of G. To do this we use the following definitions:

Definition 2.7
1.
Given a graph G and an \epsilon 𝜖-regular partition P=\{V_i\}_{i=0}^k𝑃={𝑉𝑖}𝑘𝑖=0 of its vertices define the (\epsilon ,d)(𝜖,𝑑)-partition graph W to be a weighted graph on k vertices \{v_1,...,v_k\}{𝑣1,...,𝑣𝑘}. The weight function is w (v_i,v_j)=d(V_i,V_j)𝑤(𝑣𝑖,𝑣𝑗)=𝑑(𝑉𝑖,𝑉𝑗) if (V_i,V_j)(𝑉𝑖,𝑉𝑗) is an \epsilon 𝜖-regular pair with density at least d and w(v_i,v_j)=0𝑤(𝑣𝑖,𝑣𝑗)=0 otherwise.

2.
For a conventional subgraph of W, say W'𝑊′, let G_{W'}𝐺𝑊′ be the following subgraph of G on the same set of vertices V(G)=V(G_{W'})𝑉(𝐺)=𝑉(𝐺𝑊′). An edge e=\{u,u'\}\in E(G)𝑒={𝑢,𝑢′}∈𝐸(𝐺) is also an edge of G_{W'}𝐺𝑊′ if and only if u\in V_i, u'\in V_j𝑢∈𝑉𝑖,𝑢′∈𝑉𝑗 and w'(v_i,v_j)>0𝑤′(𝑣𝑖,𝑣𝑗)>0. The vertices of V_0𝑉0 form an independent set.

Embedding and Counting Copies of Fixed Graphs
For a graph R and an integer h let R(h) be the h-blowup of R, that is the graph obtained by replacing each vertex with an independent set of size h, and each edge with a complete bipartite graph between the corresponding independent sets.

Theorem 2.8
(Embedding Lemma, see, e.g., [17]) Given d>\epsilon > 0𝑑>𝜖>0, a graph R, and a positive integer m_{2.8}𝑚2.8, construct a graph G by replacing every vertex of R by m_{2.8}𝑚2.8 vertices, and by replacing each edge of R by an \epsilon 𝜖-regular pair of density at least d. Let F be a subgraph of R(h) of maximum degree \Delta > 0Δ>0, let \delta =d-\epsilon 𝛿=𝑑−𝜖 and \epsilon _0=\delta ^{\Delta }/(2+\Delta )𝜖0=𝛿Δ/(2+Δ). If \epsilon \le \epsilon _0𝜖≤𝜖0 and h-1\le \epsilon _0 m_{2.8}ℎ−1≤𝜖0𝑚2.8 then F\subset G𝐹⊂𝐺.

As we aim to use the embedding lemma with an (\epsilon ,d)(𝜖,𝑑) partition graph, we need to choose d to suit a family of graphs \mathcal {F}. Let \Delta (\mathcal {F})=\max _{F\in \mathcal {F}}\{\Delta (F)\}Δ()=max𝐹∈{Δ(𝐹)}, and let v(\mathcal {F})=\max _{F\in \mathcal {F}}\{v(F)\}𝑣()=max𝐹∈{𝑣(𝐹)}. For a fixed \epsilon 𝜖 and family \mathcal {F} let \epsilon _0=\epsilon 𝜖0=𝜖 and let d_{2.8}:=d(\epsilon ,\Delta (\mathcal {F}))=\delta +\epsilon 𝑑2.8:=𝑑(𝜖,Δ())=𝛿+𝜖 as they appear in Theorem 2.8. Note that d_{2.8}𝑑2.8 tends to zero as \epsilon 𝜖 tends to zero. Let m_{2.8}:=m_{2.8}(\epsilon ,\mathcal {F})=v(\mathcal {F})\frac{1}{\epsilon }𝑚2.8:=𝑚2.8(𝜖,)=𝑣()1𝜖.

Lemma 2.9
Let W be a weighted graph on n vertices, \epsilon >0𝜖>0 be a constant and P=\cup _{i=1}^k V_i𝑃=∪𝑘𝑖=1𝑉𝑖 a partition of V(W) into k\ge \frac{t^2}{\epsilon }𝑘≥𝑡2𝜖 parts of equal size. Let \mathcal {T}'′ be the set of all copies of T in W using at least two vertices from the same V_i𝑉𝑖. Then

\begin{aligned} \sum _{T\in \mathcal {T}'} \prod _{(v_i,v_j)\in E(T)}w(v_i,v_j)<\epsilon n^t. \end{aligned}

∑𝑇∈′∏(𝑣𝑖,𝑣𝑗)∈𝐸(𝑇)𝑤(𝑣𝑖,𝑣𝑗)<𝜖𝑛𝑡.

Proof
As w(v_i,v_j)\le 1𝑤(𝑣𝑖,𝑣𝑗)≤1 note that \sum _{T\in \mathcal {T}'} \prod _{(v_i,v_j)\in E(T)}w(v_i,v_j)\le |\mathcal {T}'|∑𝑇∈′∏(𝑣𝑖,𝑣𝑗)∈𝐸(𝑇)𝑤(𝑣𝑖,𝑣𝑗)≤|′|, and so it is enough to bound the number of copies of T in \mathcal {T}'′. A copy from \mathcal {T}'′ uses vertices from at most t-1𝑡−1 sets of the partition, and in each such set there are \frac{n}{k}𝑛𝑘 vertices. Thus

\begin{aligned} |\mathcal {T}'|<\left( {\begin{array}{c}t\\ 2\end{array}}\right) k^{t-1}(\frac{n}{k})^{t}< \frac{t^2}{k}n^t \end{aligned}

|′|<(𝑡2)𝑘𝑡−1(𝑛𝑘)𝑡<𝑡2𝑘𝑛𝑡

as \epsilon \ge \frac{t^2}{k}𝜖≥𝑡2𝑘 the required result follows. \square ◻

Note that the above lemma can be used for unweighted graphs by choosing w(v_i,v_j)\in \{0,1\}𝑤(𝑣𝑖,𝑣𝑗)∈{0,1} appropriately.

Lemma 2.10
Let T be a graph on t vertices, let G be a graph on n vertices, P=V_0\cup \{V_i\}_{i=1}^k𝑃=𝑉0∪{𝑉𝑖}𝑘𝑖=1 an \epsilon 𝜖-regular partition of its vertices and let W be its (\epsilon ,d_{2.8})(𝜖,𝑑2.8) partition graph. Then there exists \delta _{2.10}:=\delta _{2.10}(\epsilon ,t)𝛿2.10:=𝛿2.10(𝜖,𝑡), that tends to zero when \epsilon 𝜖 and d_{2.8}𝑑2.8 tend to zero, such that

\begin{aligned} |\mathcal N(G,T)-|V_i|^{t}\mathcal N(W,T)|<\delta _{2.10} n^{t} \end{aligned}

|(𝐺,𝑇)−|𝑉𝑖|𝑡(𝑊,𝑇)|<𝛿2.10𝑛𝑡

Proof
Let \mathcal N^P(G,T)𝑃(𝐺,𝑇) be the number of copies of T in G using at most one vertex from each set \{V_i\}_{i=1}^k{𝑉𝑖}𝑘𝑖=1 and not using vertices from V_0𝑉0, edges between sets (V_i,V_j)(𝑉𝑖,𝑉𝑗) which are not \epsilon 𝜖-regular or with density smaller than d_{2.8}𝑑2.8. Call these copies conventional.

There are at most \epsilon t^2\left( {\begin{array}{c} k\\ 2\end{array}}\right) (\frac{n}{k})^2 n^{t-2} \le \epsilon n^{t}𝜖𝑡2(𝑘2)(𝑛𝑘)2𝑛𝑡−2≤𝜖𝑛𝑡 copies of T using an edge of an irregular pair, there are at most t^2\left( {\begin{array}{c}k\\ 2\end{array}}\right) d_{2.8}(\frac{n}{k})^2n^{t-2}\le d_{2.8} n^t𝑡2(𝑘2)𝑑2.8(𝑛𝑘)2𝑛𝑡−2≤𝑑2.8𝑛𝑡 copies using edges between sets of small density and there are at most tkn^{t-1}𝑡𝑘𝑛𝑡−1 copies using a vertex from V_0𝑉0. Together with Lemma 2.9 we get that for \delta _0>0𝛿0>0 that tends to zero when \epsilon 𝜖 and d_{2.8}𝑑2.8 tend to zero

\begin{aligned} |\mathcal N(G,T)-\mathcal N^P(G,T)|<\delta _0 n^t. \end{aligned}

|(𝐺,𝑇)−𝑃(𝐺,𝑇)|<𝛿0𝑛𝑡.

(1)

Let \mathcal {T}=\{T_i\}={𝑇𝑖} be the set of all copies of T in W. For a given copy T_i𝑇𝑖 let V(T_i)=\{v_{i_1},..,v_{i_t}\}𝑉(𝑇𝑖)={𝑣𝑖1,..,𝑣𝑖𝑡} be the sets of vertices in W that T_i𝑇𝑖 uses, let V_{i_1},..,V_{i_t}𝑉𝑖1,..,𝑉𝑖𝑡 be the corresponding sets in P and let \mathcal N(G,T_i)(𝐺,𝑇𝑖) be the number of copies of T in G using a vertex from V_{i_j}𝑉𝑖𝑗 for the role of v_{i_j}𝑣𝑖𝑗.

A simplified version of Lemma 1.6 from [9] is the following

Lemma 2.11
Let T be a fixed graph on t vertices, and let G be a graph with an \epsilon 𝜖-regular partition into t parts P=V_1,...,V_t𝑃=𝑉1,...,𝑉𝑡. Let d_{i,j}𝑑𝑖,𝑗 be the density between the sets V_i𝑉𝑖 and V_j𝑉𝑗, and assume that d_{i,j}=0𝑑𝑖,𝑗=0 for every \{i,j\}\not \in E(T){𝑖,𝑗}∉𝐸(𝑇). Then for \delta _{2.11}:=\delta _{2.11}(\epsilon ,t)𝛿2.11:=𝛿2.11(𝜖,𝑡) that tends to zero as \epsilon 𝜖 rends to zero,

\begin{aligned} |\mathcal N(G,T)-|V_1|^t\prod _{(i,j)\in E(T)}d_{i,j}|\le \delta _{2.11} |V_1|^t \end{aligned}

|(𝐺,𝑇)−|𝑉1|𝑡∏(𝑖,𝑗)∈𝐸(𝑇)𝑑𝑖,𝑗|≤𝛿2.11|𝑉1|𝑡

In our case, when counting the number of copies of T_i𝑇𝑖 we focus only on the sets V_{i_1},..,V_{i_t}𝑉𝑖1,..,𝑉𝑖𝑡, and assume that the density between two sets that do not correspond to an edge of T is zero. Thus,

\begin{aligned} |\mathcal N(G,T_i)-|V_1|^t\prod _{(v_{i_k},v_{i_j})\in E(T_i)}w(v_{i_k},v_{i_j})|\le \delta _{2.11} |V_1|^t \end{aligned}

|(𝐺,𝑇𝑖)−|𝑉1|𝑡∏(𝑣𝑖𝑘,𝑣𝑖𝑗)∈𝐸(𝑇𝑖)𝑤(𝑣𝑖𝑘,𝑣𝑖𝑗)|≤𝛿2.11|𝑉1|𝑡

Each conventional copy of T in G can be mapped to a copy T_i𝑇𝑖 in W by mapping each vertex v of T to the set V_i𝑉𝑖 it is contained in. Thus \mathcal N^P(G,T)=\sum _{T_i\in \mathcal {T}}\mathcal N(G,T_i)𝑃(𝐺,𝑇)=∑𝑇𝑖∈(𝐺,𝑇𝑖).

Finally, note that |V_1|\le \frac{n}{k}|𝑉1|≤𝑛𝑘, and together with the above we get

\begin{aligned} |\mathcal N^P(G,T)-|V_1|^t\mathcal N(W,T)|&=|\sum _{T_i\in \mathcal {T}}\big ( \mathcal N(G,T_i)-|V_1|^t\prod _{(v_i,v_j) \in E(T_i)}w(v_i,v_j)\big )| \\&\le \sum _{T_i\in \mathcal {T}} |\mathcal N(G,T_i)-|V_1|^t\prod _{(v_i,v_j)\in E(T_i)}w(v_i,v_j)|\\&\le |\mathcal {T}|\delta _{2.11} |V_1|^t\le k^t\delta _{2.11} (\frac{n}{k})^t=\delta _{2.11}n^t \end{aligned}

|𝑃(𝐺,𝑇)−|𝑉1|𝑡(𝑊,𝑇)|=|∑𝑇𝑖∈((𝐺,𝑇𝑖)−|𝑉1|𝑡∏(𝑣𝑖,𝑣𝑗)∈𝐸(𝑇𝑖)𝑤(𝑣𝑖,𝑣𝑗))|≤∑𝑇𝑖∈|(𝐺,𝑇𝑖)−|𝑉1|𝑡∏(𝑣𝑖,𝑣𝑗)∈𝐸(𝑇𝑖)𝑤(𝑣𝑖,𝑣𝑗)|≤||𝛿2.11|𝑉1|𝑡≤𝑘𝑡𝛿2.11(𝑛𝑘)𝑡=𝛿2.11𝑛𝑡

This together with (1) gives the required result. \square ◻

Homomorphisms of Graphs and Homomorphism Freeness
Definition 2.12
Given graphs G and F we say that the function \varphi :V(F)\rightarrow V(G)𝜑:𝑉(𝐹)→𝑉(𝐺) is a homomorphism from F to G if it maps edges to edges.

Definition 2.13
Given a graph G and a family of graphs \mathcal {F}, we say that G is \mathcal {F}-homomorphism-free (\mathcal {F}_{hom}ℎ𝑜𝑚-free, for short), if there is no homomorphism from F to G for any F\in \mathcal {F}𝐹∈.

Definition 2.14
For a weighted graph W, a graph T and a family of graphs \mathcal {F} define the homomorphism extremal number to be

\begin{aligned} \mathrm {ex}_{hom}(W,T,\mathcal {F})=\max \{\mathcal N(W_0,T): W_0 \text{ is } \text{ a } \text{ conventional } \text{ subgraph } \text{ of } W \text{ and } \text{ is } \mathcal {F}_{hom}\text{-free } \} \end{aligned}

exℎ𝑜𝑚(𝑊,𝑇,)=max{(𝑊0,𝑇):𝑊0 is  a  conventional  subgraph  of 𝑊 and  is ℎ𝑜𝑚-free }

Lemma 2.15
Let G be a graph, \mathcal {F} a finite family of graphs, \epsilon >0𝜖>0, P=\cup _{i=0}^k V_i𝑃=∪𝑘𝑖=0𝑉𝑖 an \epsilon 𝜖-regular partition of G and W its (\epsilon ,d_{2.8})(𝜖,𝑑2.8)-partition graph. If v(G)\ge m_{2.8}k𝑣(𝐺)≥𝑚2.8𝑘, then the following holds:

1.
If G is \mathcal {F}-free then W is \mathcal {F}_{hom}ℎ𝑜𝑚-free.

2.
If W is \mathcal {F}_{hom}ℎ𝑜𝑚-free then G_W𝐺𝑊 is \mathcal {F}-free.

Proof
For the first part, assume towards contradiction that there is a graph F\in \mathcal {F}𝐹∈ such that there is a homomorphism of it into W. To apply Lemma 2.8 first note that this means that F is a subgraph of W(v(\mathcal {F}))𝑊(𝑣()), which is the graph obtained by replacing every vertex of W by an independent set of size v(\mathcal {F})𝑣() and every edge with positive weight by a complete bipartite graph between the corresponding independent sets. Furthermore, as n\ge m_{2.8}k𝑛≥𝑚2.8𝑘 and the edges correspond to \epsilon 𝜖-regular pairs in the partition with density at least d_{2.8}𝑑2.8 we get that indeed G must contain a copy of F. This is a contradiction as we assumed that G is \mathcal {F}-free.

As for the second part, assume that there is a copy of some F\in \mathcal {F}𝐹∈ in G_W𝐺𝑊. Let V(F)=\{v_1,...,v_f\}𝑉(𝐹)={𝑣1,...,𝑣𝑓} be the vertices of this copy and assume that in the copy in G_W𝐺𝑊 vertex v_j𝑣𝑗 comes from the set V_{k_j}𝑉𝑘𝑗. If (v_i,v_j)(𝑣𝑖,𝑣𝑗) is an edge in the copy F, this means that there is an edge between the vertices v_{k_i},v_{k_j}𝑣𝑘𝑖,𝑣𝑘𝑗 in W. Thus the mapping v_i\rightarrow v_{k_i}𝑣𝑖→𝑣𝑘𝑖 is a homomorphism. As we assumed that W is \mathcal {F}_{hom}ℎ𝑜𝑚-free this is a contradiction. \square ◻

Auxiliary Lemmas
Here we prove simple lemmas to be used in the proof of Theorem 1.4.

Lemma 2.16
Let G and G'𝐺′ be graphs on n vertices, such that one can edit (i.e. add or remove) \frac{\delta }{t^2} n^2𝛿𝑡2𝑛2 edges of G and get G'𝐺′. Then for every fixed graph T and family of graphs \mathcal {F},

\begin{aligned} |ex(G,T,\mathcal {F})-ex(G',T,\mathcal {F})|\le \delta n^{t}. \end{aligned}

|𝑒𝑥(𝐺,𝑇,)−𝑒𝑥(𝐺′,𝑇,)|≤𝛿𝑛𝑡.

Proof
Let E be the set of edges we need to delete from G to make it a subgraph of G'𝐺′, and let G_0𝐺0 be the subgraph of G which is \mathcal {F}-free and has the maximum possible number of copies of T. If G'_0𝐺′0 is the subgraph of G_0𝐺0 obtained by deleting from it any edges from E then G'_0𝐺′0 is an \mathcal {F}-free subgraph of G'𝐺′ and the following holds

\begin{aligned} \mathrm {ex}(G',T,\mathcal {F})\ge \mathcal N(G'_0,T)\ge \mathcal N(G_0,T)-\frac{\delta }{t^2} t^2 n^2n^{t-2}= \mathrm {ex}(G,T,\mathcal {F})-\delta n^{t}. \end{aligned}

ex(𝐺′,𝑇,)≥(𝐺′0,𝑇)≥(𝐺0,𝑇)−𝛿𝑡2𝑡2𝑛2𝑛𝑡−2=ex(𝐺,𝑇,)−𝛿𝑛𝑡.

As this is symmetric for G and G'𝐺′ we get the needed result. \square ◻

Lemma 2.17
For every \epsilon >0𝜖>0 and r\in {\mathbb {N}}𝑟∈ℕ there is \delta _{2.17}:=\delta _ {2.17}(\epsilon ,r)𝛿2.17:=𝛿2.17(𝜖,𝑟) that tends to zero as \epsilon 𝜖 tends to zero such that for every set of constants 0<\alpha _1,...,\alpha _r<10<𝛼1,...,𝛼𝑟<1

\begin{aligned} \prod _{i=1}^r(\alpha _i-\epsilon )>\prod _{i=1}^r\alpha _i-\delta _{2.17} \end{aligned}

∏𝑖=1𝑟(𝛼𝑖−𝜖)>∏𝑖=1𝑟𝛼𝑖−𝛿2.17

Proof
As \alpha _i<1𝛼𝑖<1 the following holds

\begin{aligned} \prod _{i=1}^r(\alpha _i-\epsilon )=&\prod _{i=1}^r\alpha _i+\sum _{i=1}^r(-\epsilon )^i\sum _{I\subset [r],|I|=r-i}\prod _{j\in I}\alpha _j\\ \ge&\prod _{i=1}^r\alpha _i-\sum _{i=1}^r\epsilon ^i\sum _{I\subset [r],|I|=r-i}\prod _{j\in I}\alpha _j\\ \ge&\prod _{i=1}^r\alpha _i-\sum _{i=1}^r\epsilon ^i\left( {\begin{array}{c}r\\ i\end{array}}\right) \\ =&\prod _{i=1}^r\alpha _i-\big ((1+\epsilon )^r-1\big ) \end{aligned}

∏𝑖=1𝑟(𝛼𝑖−𝜖)=≥≥=∏𝑖=1𝑟𝛼𝑖+∑𝑖=1𝑟(−𝜖)𝑖∑𝐼⊂[𝑟],|𝐼|=𝑟−𝑖∏𝑗∈𝐼𝛼𝑗∏𝑖=1𝑟𝛼𝑖−∑𝑖=1𝑟𝜖𝑖∑𝐼⊂[𝑟],|𝐼|=𝑟−𝑖∏𝑗∈𝐼𝛼𝑗∏𝑖=1𝑟𝛼𝑖−∑𝑖=1𝑟𝜖𝑖(𝑟𝑖)∏𝑖=1𝑟𝛼𝑖−((1+𝜖)𝑟−1)

Thus taking \delta _{2.17}=\big ((1+\epsilon )^r-1\big )𝛿2.17=((1+𝜖)𝑟−1) gives the needed result. \square

The Main Lemma
The algorithm for Theorem 1.4 gets a graph G and uses the regularity lemma to get a partition graph W, and then solves the extremal question for W. To prove the correctness of the algorithm we need to show that indeed the answer for W gives a good estimate for the original extremal question on the graph G.

Lemma 3.1
Let T be a fixed graph, \mathcal {F} a finite family of graphs, \epsilon >0 and k \in {\mathbb {N}}. Then there exists \delta _{3.1}:=\delta _{3.1}(\epsilon ,T,\mathcal {F}) that tends to zero as \epsilon tends to zero, for which the following holds. Let G be a graph on n vertices, let P be an f(k)-partition of G into k parts as in Theorem 2.5 where f(k)=\min \{\epsilon ,k\cdot K_{2.3}^{-1}\} and let W be the (f(k),d_{2.8}) partition graph it gives. Then

\begin{aligned} \mathrm {ex}(G,T,\mathcal {F})\le (\frac{n}{k})^{t}\mathrm {ex}_{hom}(W,T,\mathcal {F})+\delta _{3.1} n^{t} \end{aligned}

Proof
(Proof of Lemma 3.1) Let W_0 be a conventional subgraph of W such that \mathcal N(W_0,T)=\mathrm {ex}_{hom}(W,T,\mathcal {F}). Assume towards contradiction that G has an \mathcal {F}-free subgraph G_{\mathrm {ex}} such that

\begin{aligned} \mathcal N(G_{\mathrm {ex}},T)> \mathcal N(W_0,T)(\frac{n}{k})^{t}+\delta _{3.1} n^{t}. \end{aligned}

(2)

where \delta _{3.1} is chosen in the end and tends to zero as \epsilon tends to zero.

Using Theorem 2.3 we can find a refinement of P=\{V_i\}_{i=1}^k which is an \epsilon -regular partition of G_{\mathrm {ex}} into k_0\cdot k< K_{2.3} parts where k_0\ge \frac{1}{\epsilon }. Call this partition Q=V_0\cup \{\{V_{i,j}\}_{j=1}^{k_0}\}_{i=1}^{k}, where V_{i,j}\subset V_i. Note that as |V_0|<K_{2.3} and all of the other sets are of equal size, we get that

\begin{aligned} |V_{i,j}|> K^{-1}_{2.3}\cdot n= k(K_{2.3})^{-1}\cdot \frac{n}{k} \ge kK^{-1}_{2.3}\cdot |V_i|, \end{aligned}

and so as P is an f-regular partition with f(k)\le k K_{2.3}^{-1} it holds that

\begin{aligned} d_G(V_i,V_j)>d_G(V_{i,l_i},V_{j,l_j})-\epsilon \end{aligned}

(3)

for every choice of 1<l_i,l_j<k_0 and 1<i,j<k, where d_G is the density in G. Note that here we used the strong regularity in an essential way, as |V_{i,l_i}| is far smaller than |V_i|.

Let W^* be the (\epsilon ,d_{2.8}) partition graph of Q and G_{\mathrm {ex}}. Note that by Lemma 2.10 and by (2) this means that

\begin{aligned} \left( \frac{n}{k\cdot k_0}\right) ^t \mathcal N(W^*,T)\ge \mathcal N(G_{\mathrm {ex}},T)-\delta _{2.10} n^{t} \ge \left( \frac{n}{k}\right) ^t\mathcal N(W_0,T)+(\delta _{3.1}- \delta _{2.10}) n^{t} \end{aligned}

and in particular

\begin{aligned} \left( \frac{1}{k_0}\right) ^t\mathcal N(W^*,T)\ge \mathcal N(W_0,T)+(\delta _{3.1}-\delta _{2.10})k^t. \end{aligned}

(4)

To obtain a contradiction to the existence of G_{\mathrm {ex}} we first prove the following lemma

Lemma 3.2
There exists a choice of r_i\in [k_0] for every i\in [k] such that the following holds. Let W^{**} be the subgraph of W^* spanned by the vertices v_{1, r_1},...,v_{k,r_k} then

\begin{aligned} k_0^t \mathcal N(W^{**},T)\ge \mathcal N(W^*,T)-\epsilon _{2.9} (k\cdot k_0)^t \end{aligned}

Proof
Let \mathcal {T}^* be the set of copies of T in W^* such that for every two vertices of the copy, v_{i,k_i} and v_{j,k_j}, i\ne j. Using Lemma 2.9 we get that

\begin{aligned} \sum _{T\in \mathcal {T}^*}\prod _{(v_i,v_j)\in E(T)} w^{*}(v_i,v_j)>\mathcal N(W^*,T)-\epsilon _{2.9} (kk_0)^t. \end{aligned}

For every i let us choose r_i uniformly at random, and let W' be the subgraph spanned by the chosen vertices. For T\in \mathcal {T}^* let A(T) be the event that all of the vertices of T are in W'. Then

\begin{aligned} {\mathbb {E}}[k_0^t \mathcal N(W',T)]&={\mathbb {E}}\big [k_0^t \sum _{T\in \mathcal {T}^{*}} \mathbf {1}_{A(T)} \prod _{v_i,v_j\in E(T)} w^*(v_i,v_j)\big ] \\&=k_0^t \sum _{T\in \mathcal {T}^{*}}\frac{1}{k_0^t}\prod _{v_i,v_j\in E(T)} w^*(v_i,v_j)>\mathcal N(W^{*},T)-\epsilon _{2.9} (k\cdot k_0)^t \end{aligned}

Thus, there must be some choice of r_1,...,r_k that gives the needed inequality. \square

Given the graph W^{**}, that is the choice of r_i for every i, we can now find an \mathcal {F}_{hom}-free conventional subgraph of W, say W_1, for which \mathcal N(W_1,T)>\mathcal N(W_0,T).

Take (v_i,v_j) to be an edge of W_1 if and only if (v_{i,r_i},v_{j,r_j}) is an edge of W^{**}. First note that by (3) and the fact that G_{\mathrm {ex}} is a subgraph of G we get that

\begin{aligned} w_1(v_i,v_j)&=d_G(V_i,V_j) \ge d_{G}(V_{i,r_i},V_{j,r_j})-\epsilon \nonumber \\&\ge d_{G_{\mathrm {ex}}}(V_{i,r_i},V_{j,r_j})-\epsilon =w^{**}(v_{i,r_i},v_{j,r_j})-\epsilon . \end{aligned}

(5)

Second, the mapping \varphi :V(W^{**})\rightarrow V(W_1), \varphi (v_{i,r_i})=v_i maps edges with non-negative weight to edges with non-negative weight. Thus as W^{**} is \mathcal {F}_{hom}-free then so is W_1. Finally, note that if \mathcal {T}(W_1) and \mathcal {T}(W^{**}) are the copies of T in W_1 and W^{**} respectively, then \varphi is a bijection between them. Thus, the following holds

\begin{aligned} \mathcal N(W_1,T)&=\sum _{T\in \mathcal {T}(W_1)} \prod _{(v_i,v_j)\in E(T)}w_{1}(v_i,v_j)\\&=\sum _{T\in \mathcal {T}(W^{**})} \prod _{(v_{i,r_i},v_{j,r_j})\in E(T)}w_{1}\big (\varphi ^{-1}(v_{i,r_i}),\varphi ^{-1}(v_{j,r_j})\big )\\&\overset{(5)}{\ge }\sum _{T\in \mathcal {T}(W^{**})} \prod _{(v_{i,r_i},v_{j,r_j})\in E(T)}(w^{**}(v_{i,r_i},v_{j,r_j})-\epsilon )\\&\overset{2.17}{\ge } \mathcal N(W^{**},T)-\delta _{2.17}k^t\\&\overset{2.17}{>}(\frac{1}{k_0})^t \mathcal N(W^{*},T)-\epsilon _{2.9}k^t-\delta _{2.17}k^t\\&\overset{(4)}{\ge } \mathcal N(W_0,T)+(\delta _{3.1}-\delta _{2.10}-\epsilon _{2.9}-\delta _{2.17}) k^t >\mathcal N(W_0,T) \end{aligned}

The last inequality holds since \delta _{3.1} can be chosen so that \delta _{3.1}>\delta _{2.10}+\epsilon _{2.9}+\delta _{2.17}.

The existence of such W_1 is the needed contradiction, as we chose W_0 to be a conventional \mathcal {F}_{hom}-free subgraph of W that has the maximum possible value of \mathcal N(W_0,T). Thus there cannot be a graph G_{\mathrm {ex}} which is \mathcal {F}-free and has more than (\frac{n}{k})^{t}\mathrm {ex}_{hom}(W,T,\mathcal {F})+\delta _{3.1} n^{t} copies of T. \square

Proof of Theorem 1.4
The algorithm itself is rather straightforward. Let n_0=m_{2.8}K_{2.5}, if V(G)<n_0 we can use brute-force as there is a constant number of options to check. If V(G)>n_0 then for \epsilon _1 >0 Theorem 2.5 gives us an efficient algorithm for finding \epsilon _1 n^2 edges to add or remove from G and to find a k\cdot K_{2.3}^{-1}-regular partition P=V_0\cup \{V_i\}_{i=1}^k of the edited graph, where K_{2.5}> k>\frac{1}{\epsilon _1}.

In Theorem 2.5 we change \epsilon _{1} n^2 edges, and as |V_0|<K_{2.5} we can remove all edges using a vertex from V_0, and change at most \epsilon _{1} n^2+K_{2.5}n<\epsilon _2 n^2 edges of the original graph G. This will give us a graph that has an f(k)-partition of its vertices into k parts of equal size. Call this graph G^*.

By Lemma 2.16 if we prove that we found the approximated answer for G^*, up to an additive error of \epsilon _3n^t, then we have also found an answer for G itself up to an additive error term of (\epsilon _2+\epsilon _3)n^t. Thus we may focus on the graph G^*, remembering that

\begin{aligned} |\mathrm {ex}(G,T,\mathcal {F})-\mathrm {ex}(G^*,T,\mathcal {F})|\le (\epsilon _2+\epsilon _3)n^t \end{aligned}

(6)

Let W be the (\epsilon _1,d_{2.8}) partition graph of P and G^*. We use brute-force to find a conventional subgraph of it, say W_0, which is \mathcal {F}_{hom}-free and maximizes \mathcal N(W_0,T). As W has a constant number of vertices, we can do this in constant time (not depending on the size of G). By Lemma 2.15G^*_{W_0} is \mathcal {F}-free, and so

\begin{aligned} \mathcal N(G^*_{W_0},T)\le \mathrm {ex}(G^{*},T,\mathcal {F}) \end{aligned}

To prove that G^*_{W_0} gives the needed approximation, it is left to show that

\begin{aligned} \mathcal N(G^*_{W_0},T)\ge \mathrm {ex}(G^{*},T,\mathcal {F})-\epsilon n^{t}. \end{aligned}

Indeed Lemma 2.10 shows that

\begin{aligned} |\mathcal N(G^*_{W_0},T)-(\frac{n}{k})^t\mathcal N(W_0,T)|<\delta _{2.10} n^{t}. \end{aligned}

(7)

By Lemma 3.1 there is no \mathcal {F}-free subgraph of G^* that has more than (\frac{n}{k})^t\mathcal N(W_0,T)+\delta _{3.1}n^t copies of T, thus

\begin{aligned} |\mathrm {ex}(G^*,T,\mathcal {F})-(\frac{n}{k})^t\mathcal N(W_0,T)|<\delta _{3.1}n^t. \end{aligned}

(8)

Thus by using equations (6), (7), and (8) we get that

\begin{aligned} |\mathcal N(G^*_{W_0},T)-\mathrm {ex}(G,T,\mathcal {F})|<(\epsilon _2+\epsilon _3+ \delta _{3.1}+\delta _{2.10})n^t \end{aligned}

and as \epsilon _2,\epsilon _3,\delta _{3.1} and \delta _{2.10} all tend to zero as \epsilon tends to zero, their sum can be made as small as needed. \square

Proof of Theorem 1.7
Before we prove the theorem, we establish the following two simple lemmas.

Lemma 5.1
For any integers 2\le m<k it is NP-hard to calculate \mathrm {ex}(G,K_m,K_k) exactly.

Proof
We show that calculating \mathrm {ex}(G,K_m,K_k) exactly is at least as hard as calculating \mathrm {ex}(G,K_2,K_k) exactly, which by Theorem 1.2 is NP-hard.

Given a graph G, we construct a graph G' by adding n^{m+1} disjoint copies of K_m on each edge. These copies use m-2 new vertices each, and a single edge from G. As there are at most n^{m} copies of K_m in G itself, it is easy to check that

\begin{aligned} \mathrm {ex}(G',K_m,K_k)\le \mathrm {ex}(G,K_2,K_k)n^{m+1}+n^{m} \le \mathrm {ex}(G',K_m,K_k)+n^{m}. \end{aligned}

Therefore

\begin{aligned} \frac{\mathrm {ex}(G',K_m,K_k)}{n^{m+1}}-\frac{1}{n}\le \mathrm {ex}(G,K_2,K_k) \le \frac{\mathrm {ex}(G',K_m,K_k)}{n^{m+1}} \end{aligned}

implying that for n>1 \mathrm {ex}(G,K_2,K_k) can be calculated exactly from the exact value of \mathrm {ex}(G',K_m,K_k). \square

Lemma 5.2
Let G be a graph, let N be an integer and let G' be the N-blowup of G. Then for every 2 \le m < k we have \mathrm {ex}(G',K_m,K_k) = \mathrm {ex}(G,K_m,K_k) \cdot N^m.

Proof
Suppose without loss of generality that V(G) = [n]. For each i \in [n] let U_i \subseteq V(G') be the blowup-set corresponding to the vertex i \in V(G). Thus |U_1| = \dots |U_n| = N and V(G') is the disjoint union U_1 \cup \dots \cup U_n. Let F be a K_k-free subgraph of G satisfying \mathcal {N}(F,K_m) = \mathrm {ex}(G,K_m,K_k). Then the N-blowup of F is a K_k-free subgraph of G' with \mathcal {N}(F,K_m) \cdot N^m = \mathrm {ex}(G,K_m,K_k) \cdot N^m copies of K_m. This shows that \mathrm {ex}(G',K_m,K_k) \ge \mathrm {ex}(G,K_m,K_k) \cdot N^m. In the other direction, let F' be a K_k-free subgraph of G' satisfying \mathcal {N}(F',K_m) = \mathrm {ex}(G',K_m,K_k). For each 1 \le i \le n, let u_i be a random vertex of U_i. Set F := F'[\{u_1,\dots ,u_n\}]. By linearity of expectation, we have

\begin{aligned} {\mathbb {E}}[\mathcal {N}(F,K_m)] = \mathcal {N}(F',K_m) \cdot N^{-m}. \end{aligned}

On the other hand, note that F is K_k-free (as it is a subgraph of F'), and that F is a subgraph of G. It follows that \mathcal {N}(F,K_m) \le \mathrm {ex}(G,K_m,K_k) with probability 1. We conclude that

\begin{aligned} \mathrm {ex}(G',K_m,K_k) \cdot N^{-m} = \mathcal {N}(F',K_m) \cdot N^{-m} = {\mathbb {E}}[\mathcal {N}(F,K_m)] \le \mathrm {ex}(G,K_m,K_k), \end{aligned}

as required. This completes the proof. \square

Now we are ready to prove Theorem 1.7

Proof
We show that the problem of approximating \mathrm {ex}(G,K_m,K_k) up to additive error |V(G)|^{m-\varepsilon } is as hard as the problem of computing \mathrm {ex}(G,K_m,K_k) exactly. Let G be a graph on n vertices. Set N = (2n)^{m/\varepsilon }, and let G' be the N-blowup of G. Note that G' can be constructed from G in polynomial time. Suppose R is an integer satisfying |R - \mathrm {ex}(G',K_m,K_k)| \le |V(G')|^{m-\varepsilon } = (nN)^{m-\varepsilon } < \frac{1}{2}N^{m}. By Lemma 5.2, we have \left| \frac{R}{N^m} - \mathrm {ex}(G,K_m,K_k) \right| < \frac{1}{2}. It follows that \mathrm {ex}(G,K_m,K_k) is the integer nearest to the number \frac{R}{N^m}. Therefore if we can approximate \mathrm {ex}(G',K_m,K_k) up to additive error |V(G')|^{m-\varepsilon } in polynomial time, then we can also compute \mathrm {ex}(G,K_m,K_k) exactly in polynomial time, where here we use the fact that |V(G')| = nN is polynomial in n. But this is NP-hard by Lemma 5.1, completing the proof. \square

Concluding Remarks and Open Questions
Improving on Theorem 1.7
In the introduction we have posed the following conjecture,

Conjecture 1.8 For every graph T, family of graphs \mathcal {F} such that no F\in \mathcal {F} is a subgraph of a blow-up of T, and \epsilon >0, it is NP-hard to approximate \mathrm {ex}(G,T,\mathcal {F}) up to additive error of n^{v(T)-\epsilon } for a given input graph G on n vertices.

Allowing a smaller additive error, we can get the above for a large family of graphs.

Proposition 6.1
For any \epsilon >0, 3-connected graph T on t vertices and a family of 3-connected graphs \mathcal {F} such that no F\in \mathcal {F} is a subgraph of a blow-up of T, it is NP-hard to approximate \mathrm {ex}(G,T,\mathcal {F}) up to additive error of n^{t-2-\epsilon }.

Proof
We show that the question of calculating \mathrm {ex}(G,K_2,\mathcal {F}) exactly can be reduced to the question of approximating \mathrm {ex}(G,T,\mathcal {F}) up to additive error of n^{c(t-2)/(c+2)-\epsilon '} where c is a constant as large as needed and 0<\epsilon '<\epsilon . As every F\in \mathcal {F} is not a subgraph of a blow-up of T, in particular it is not bipartite, and thus the former is known to be NP-hard by Theorem 1.2. As c can be as large as we want it can be chosen so that c(t-2)/(c+2)-\epsilon '>t-2-\epsilon .

Given a graph G on n vertices, let us construct G^{+} as follows. Let T' be a subgraph of T obtained by removing two arbitrary vertices connected by an edge, say \{u,v\}. For each edge e\in G add t-2 independent sets of size n^{c} to the graph. Connect the appropriate pairs of sets by complete bipartite graphs to create a blow-up of T', and then connect sets corresponding to neighbors of u and v in T to the two endpoints of e. Call the new copies of T created external and the copies spanned by G internal.

Note that N:=v(G^{+})\le n+(t-2)n^{c}n^2 and N^{c(t-2)/(c+2)-\epsilon '}<\frac{1}{5}n^{c(t-2)}. Furthermore, in G^{+} every edge of G takes part in a fixed number of external copies of T in G^+, say X_T\ge n^{c(t-2)} and in at most O(n^{t-2}) internal copies. In addition, no new copies of graphs from \mathcal {F} are created. This is true as T and the graphs in \mathcal {F} are 3-connected and no graph in \mathcal {F} is a subgraph of a blow-up of T.

Let {\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F})=\mathcal N(G^+,T)-\mathrm {ex}(G^+,T,\mathcal {F}) where \mathcal N(G^+,T) is the number of copies of T in G^+, and similarly {\overline{\mathrm {ex}}}(G,K_2,\mathcal {F})=|E(G)|-\mathrm {ex}(G,K_2,\mathcal {F}). First note that

\begin{aligned} {\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F})&\le {\overline{\mathrm {ex}}}(G,K_2,\mathcal {F})X_T+O(n^{t}). \end{aligned}

Indeed, by deleting {\overline{\mathrm {ex}}}(G,K_2,\mathcal {F}) edges from G we can make G^{+} into an \mathcal {F}-free graph, as all of the copies of \mathcal {F} are spanned by the vertices coming from G. Removing these edges will remove all of the external copies of T using them together with some internal copies.

Furthermore, if we removed {\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F}) copies of T from G^{+} and made it \mathcal {F}-free, we may assume that we have done this by removing only edges from G, say e of them, and that G was made \mathcal {F}-free. Each edge of G takes part in at least X_T distinct copies of T, so

\begin{aligned} {\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F})\ge e X_T \ge {\overline{\mathrm {ex}}}(G,K_2,\mathcal {F})X_T. \end{aligned}

From the above

\begin{aligned} \frac{{\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F})-O(n^t)}{X_T}\le {\overline{\mathrm {ex}}}(G,K_2,\mathcal {F}) \le \frac{{\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F})}{X_T}, \end{aligned}

and as

\begin{aligned} \frac{N^{c(t-2)/(c+2)-\epsilon '}}{X_T}\le \frac{1}{5} \text{ and } \frac{O(n^t)}{X_t}<\frac{1}{5}, \end{aligned}

if we calculated {\overline{\mathrm {ex}}}(G^{+},T,\mathcal {F}) up to an additive error of N^{c(t-2)/(c+2)-\epsilon '} then we calculated {\overline{\mathrm {ex}}}(G,K_2,\mathcal {F}) up to an additive error of 2/5, as this is an integer this means we have calculated it exactly and this is known to be NP-hard. \square

The full assertion of Conjecture 1.8 remains open. The following questions address several special cases.

1.
Is approximating \mathrm {ex}(G,K_m,K_{m+1}) up to additive error of n^{m-\epsilon } NP-hard for any integer m\ge 2 and any \epsilon >0? The case m=2 is proved in [1] and we can also prove it for m=3.

2.
Given a family of graphs \mathcal {F} such that \chi (F)\ge m+2 for every F\in \mathcal {F}, is it NP-hard to approximate \mathrm {ex}(G,K_m,\mathcal {F}) up to additive error of n^{m-\epsilon } for every \epsilon >0? Theorem 1.7 is of course a special case of this.

Calculating \mathrm {ex}(G,T,F) Exactly
Proposition 6.1 implies that for many graphs T and F there is no efficient algorithm that calculates \mathrm {ex}(G,T,F) exactly. Nevertheless, for some special cases this calculation is possible in polynomial time. We mention two simple examples.

Proposition 6.2
For a graph G on n vertices the following can be solved in polynomial time

1.
\mathrm {ex}(G,kK_2,K_{1,2}), where kK_2 is a matching of size k\ge 1.

2.
\mathrm {ex}(G,K_2,K_{1,{t+1}}).

Proof
Part 1 is trivial. It is known since Edmonds [10] that given an input graph G a matching of maximum size can be found in polynomial time. As any K_{1,2}-free subgraph of G is a matching it is clear that maximizing the largest matching also maximizes the number of copies of kK_2.

The proof of part 2 follows the idea of the proof of the f-factor theorem of Tutte [21]. Given a graph G, we may assume that it has no isolated vertices. First, replace each vertex v\in V(G) with an independent set of size d(v), say V(v)=\{v_1,...,v_{d(v)}\}, and for every edge e=\{u,v\} of G choose arbitrarily vertices v_i,u_j and connect them, making sure that at the end of the processes each vertex of the new graph is of degree exactly one. Note that there is a one-to-one correspondence between edges in the new graph and edges in G.

Second, for every independent set V(v) corresponding to a vertex v\in V(G) such that d(v)\ge t+1, add a new independent set U(v) of size d(v)-t. Connect all of the vertices in V(v) to all the vertices in U(v). Call the new graph obtained by this processes G^*.

By [10] there is a polynomial time algorithm that finds a maximum matching in G^*, call this maximum matching M. Note that we may assume that M saturates all the vertices in the sets U(v). Indeed, if some w\in U(v) is not saturated we may add to M an edge between w and some vertex of V(v), say v_1, that is not adjacent to U(v) in M and if prior to this addition there was an edge in M adjacent to v_1, delete it. A vertex v_1 must exist as V(v)>U(v) and the replacement of edges does not make the size of M smaller.

Each edge in M that is not adjacent to some U(v) corresponds to an edge of G. Let us keep in G only these edges and call the new graph G'. For every vertex v the set U(v) was saturated in M and so the number of edges adjacent to V(v) and a vertex not in U(v) is at most |V(v)|-|U(v)|=d_G(v)-(d_G(v)-t)=t. Thus the new graph G' is a subgraph of G with maximum degree at most t. The number of edges in G' is exactly the number of edges in M that are not adjacent to some U(v), that is e(G')=|M|-\sum _{v\in V(G)}(d_G(v)-t).

It is left to show that G' has the maximum possible number of edges. Indeed, assume that G^{''} is a subgraph of G with maximum degree at most t which has more edges than G'. Looking at G^* take into a matching M' each edge corresponding to an edge in G''. This results in a matching as each v_i\in V(v) has exactly one neighbor outside of U(v). In addition, for each v\in V(G) choose d_G(v)-t edges between U(v) and V(v) to add to M' while keeping it a matching. As the maximum degree in G'' is at most t there will be |U(v)|=d_G(v)-t unsaturated vertices in V(v) to connect to U(v). The resulting matching will be of size e(G'')+\sum _{v\in V}(d_{G}(v)-t)>|M|, in contradiction to the maximality of M.

Thus we get that \mathrm {ex}(G,K_2,K_{1,t+1})=e(G')=|M|-\sum _{v\in V(G)}(d_G(v)-t)=|M|-\frac{1}{2}e(G)+v(G)t, and we can find |M|, e(G), and v(G) in polynomial time.

\square

It would be interesting to characterize all pairs of graphs T and F for which \mathrm {ex}(G,T,F) can be calculated exactly in polynomial time, for a given input graph G.