Predicting user behavior makes it possible to provide personalized services. Destination prediction (e.g. predicting a future
location) can be applied to various practical applications. An example of destination prediction is personalized GIS services,
which are expected to provide alternate routes to enable users to avoid congested roads. However, the destination prediction
problem requires critical trade-offs between timing and accuracy. In this paper, we focus on early destination prediction as the
central issue, as early recognition in destination prediction has not been fully explored. As an alternative to the traditional
two basic approaches with trajectory tracking that narrow down the candidates with respect to the trip progress, and Next
Place Prediction (NPP) that infers the future location of a user from user habits, we propose a new probabilistic model based
on both conventional models. The advantage of our model is that it drastically narrows down the destination candidates
efficiently at the early stage of a trip, owing to the staying information derived from the NPP approach. In other words, our
approach achieves high prediction accuracy by considering both approaches at the same time. To implement our model, we
employ SubSynE for state-of-the-art prediction based on trajectory tracking as well as a multi-class logistic regression based
on user contexts. Despite the simplicity of our model, the proposed method provides improved performance compared to
conventional approaches based on the experimental results using the GPS logs of 1,646 actual users from the commercial
services.
CCS Concepts: • Information systems → Location based services; • Human-centered computing → Ubiquitous
computing; • Computing methodologies → Modeling methodologies; • Networks → Location based services;
Additional Key Words and Phrases: Destination prediction, User location, Next place prediction, Sequence modeling, Early
recognition
1 INTRODUCTION
The wide spread use of smartphones has made it easier for service providers to analyze the current context of
users, such as current location, weather, and heart rate, and increase the number of applications that provide
services according to such context (e.g. context-awareness services). Location data become important data
sources for many services because these can be acquired from many devices. Sen et al. [21] investigated the recommendation of music according to the current context. Woerndl et al. [23] developed a recommendation
system based on collaborative filtering that incorporates the current context, and evaluated it with a point of
interest (POI) recommendation system. Examples of commercial applications include myThings1 and IFTTT2,
which provide services that perform actions, such as sending push notifications and e-mails whenever users
enter or leave a location by using GPS data.
By combining user-behavior prediction, it is possible to help users save time by preparing the services to be
provided in advance based on their preferences and routines. Parate et al. [19] focused on the waiting time to
use a mobile application and investigated the preparation of an application beforehand using an algorithm that
predicted the next application to be used and when. Okoshi et al. [17] considered the problem that mobile phones
require user effort to choose when and where to receive push notifications, and investigated predicting a good
time for users to receive notifications.
Predicting the future location of users (e.g., destinations) is one of the most important topics in user-behavior
prediction and has attracted much interest among researchers. By predicting destination, it is possible to recommend a detour without having to wait for a query from the user. For example, when a train is delayed, provide
advertisements and search words according to the destination, and suggest news articles to read or videos to
watch on the way to the destination. For example, T-connect provides agent services3 that send traffic information,
weather at the destination, etc., without being given the destination, but predicting it based on the travel history,
day of the week, and time of day once the car engine starts. Google Now4 provides information relevant to a user
based on location history, checkout history, and schedule.
In the destination prediction problem, there is a trade-off between prediction accuracy and timing. In particular,
there is a trade-off between the percentage of trips completed and the accuracy of destination prediction. In this
context, we refer to a trip as the movement from one location to another. For destination prediction in the early
stage of a trip, it is necessary to use only information that can always be referred to (e.g., starting location, day
of the week, and time of day). However, it is also necessary to predict the destination with high accuracy and
therefore, modify the prediction by considering the amount of information that increases as the trip progresses,
such as information on the route that has been taken. For this application, it is useless to provide the detour route
after the user has encountered a blocked road. Thus, it is necessary to narrow down the destination with high
accuracy in the early stage of the trip. Route guidance for a blind man is another example of applying destination
prediction. For this application, if early prediction is not possible, it might force the user to take the long wrong
way. POI recommendations for tourists on the way to a destination could also be considered. For this application,
if destination prediction is delayed, then the opportunity to recommend a POI that the user may be interested in
is lost.
In contrast to destination prediction from GPS traces, a variety of work on early recognition in computer
vision has been actively explored [20, 22]. M. S. Ryoo [20] tackled early recognition systems in human activity
recognition from streaming videos because activity recognition is required before fully executing the activity.
Early prediction of emotion is also one of the challenging tasks. For example, early prediction of student frustration
provides the opportunity to improve the learning environment [15]. However, in destination prediction research
there only are a few studies focusing on this trade-off relationship. In this study, we address a new approach to
accurately predict destination in the early stage of a trip, which we call early destination prediction with trajectory
tracking.
As mentioned above, multiple data sources such as trip trajectories, and user contexts (e.g., day of the week) are
used for improving the accuracy of destination prediction [7, 11, 14, 24, 27]. In this study, in order to formulate
1https://mythings.yahoo.co.jp/
2https://ifttt.com/
3http://tconnect.jp/detail/3289602/
4https://www.google.com/intl/ja/landing/now/
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
Early Destination Prediction with Spatio-temporal User Behavior Patterns • 142:3
destination prediction as a simple model, it is possible to categorize these sources into two types: trip information
obtained from the trip trajectory and user contexts obtained at the starting phase, such as the day of the week
and the time of day. Based on how data sources are leveraged; existing destination prediction methods can be
classified into two types. One is trajectory-based prediction which is based on trip information, and the other is
Next Place Prediction which is based on user contexts.
In the literature, location traces are modeled as trajectories for destination prediction [11, 24, 25]. In this
approach, the next position during the trip is inferred from the past trip logs (with Markov assumption [24, 25]),
thus the destination candidates are gradually narrowed down as the trip progresses. Hence, the prediction
accuracy improves as the trip progresses. For example, the destination cannot be specified at the starting point of
the trip (e.g., user home), while the office will be detected as the destination when the user reaches the station
closest to one’s office. However, these methods have a low accuracy in the early stage of the trip. This stems
from fact that these methods predict many potential routes because little information can be used as a reference
in the early stage of the trip. For example, if the only information given is that the starting location is at home,
many potential routes will be predicted. This constitutes a disadvantage from the viewpoint of early destination
prediction.
In addition to destination prediction with trajectory tracking, there has also been much significant work on
NPP, which leverages user contexts, such as when and how long the user stayed in a previous location (e.g., the
starting location, the day of the week, and time of day) [7, 9, 13, 16, 27]. By using these methods, predicting the
destination with consistent accuracy regardless of the trip progress is possible, because the user contexts at the
start of one’s trip are fully available. For example, if a user starts a trip at home on Monday morning, one’s office
can be inferred from this context without difficulty. However, if one’s movement gets far from the office but gets
close to a hospital, the office should become a less likely destination. Since trajectory information on trips is not
employed in the NPP setting, the destination cannot be modified with respect to trip progress. In terms of robust
destination prediction from the unexpected trajectories based on user contexts, NPP presents a strong drawback
to the trajectory-based approach.
In this study, we focus on developing a new model to solve the trade-off between accuracy and timing. In other
words, we consider creating a new model to pursue both the accuracy of prediction at the early stage of a trip and
the robustness for unexpected trajectories against user contexts. In this paper, we investigate two conventional
approaches: trajectory tracking and NPP, and carefully consider exploiting the advantages of the two approaches.
The main contribution of this paper is summarized as follows:
(1) This paper provides a brand-new user destination prediction model based on GPS traced log in users’ mobile
phones, what we call early destination prediction from trajectory tracking, that improves the performance
in terms of the trade-off between accuracy and trip progress. We also demonstrate the limitations of the
existing methods.
(2) To the best of our knowledge, our work is the first attempt to factorize complex trajectory tracking with
user contextual information for early destination prediction into two simple models, and to formulate the
task as the product of the two models in a unified manner. We only need to calculate the result of the
destination candidates and their probability. This simplicity provides the capability to choose the options
of the models for trajectory tracking and NPP, respectively. In our paper, we employ SubSynE [24] as a
state-of-the-art trajectory tracking destination predictor. We also employed a multi-class logistic regression
as a state-of-the-art NPP.
(3) We verify the performance of our work using the GPS traces of over 1.6 K users obtained from commercial
services where the trip dataset covers 4,000 km2 around Tokyo. The result demonstrates that our proposed
method achieves much better performance in terms of the trade-off between accuracy and trip progress
than other state-of-the-art methods, such as SubSynE, and multi-class logistic regression.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
142:4 • R. Imai et al.
The remaining sections are organized as follows. First, we discuss the problem of destination prediction as
well as conventional trajectory tracking for destination prediction and NPP, respectively in Section 2. To solve
the problems with the current prediction methods from the viewpoint of early destination prediction with
trajectory tracking, Section 4 presents our model that factorizes the complex early destination prediction task
into a combination of the conventional approaches. Section 5 descries the experimental results using GPS traces
of 1.6 K users obtained from commercial services.
Related work
Though few studies on context aware route based destination prediction have been examined in the literature,
Ziebart et al. [4, 5] presents a pioneering work for this issue using inverse reinforcement learning. The model
presented in [4, 5] offers robust destination prediction in a unified manner, however, the complexity of this
approach is prone to difficulties in feature design due to the nature of inverse reinforcement learning [12].
In contrast to the complex approach for context aware route prediction, our work relies on two conventional
frameworks, the trajectory tracking model and the next place prediction model.
Prediction based on trajectory tracking: Trajectory tracking, which predicts the future trajectory from
historical user trajectory, is frequently used for destination prediction for intelligent car navigation tasks. This
approach makes it possible to modify the prediction as a trip progresses. Basically, this approach is based on
the Markov models of a user trip from one location to the other location [24, 25], Krumm and Horvitz [11]
improve the Markov-based model by focusing on user land types and the route efficiency. Since this approach is
carefully designed with route prediction rather than destination prediction, it has difficulty in obtaining accurate
destination prediction at the early stage of a trip due to the limited trajectory Information. Our work compensates
for the disadvantages of this approach by employing user contexts in addition to trajectories.
Next Place Prediction (NPP): NPP has been recently explored in the ubiquitous computing community
thanks to the availability of mobile phone location logs. This model extracts user location habits by employing
user contexts such as the period of time and day of the week, and then predicts one’s location from the leveraged
user contexts. Thanks to use of user contexts, the prediction accuracy achieves reliable performance at the early
stage of a trip. In the literature, user contexts such as the day of the week, and time of day are frequently used for
an accurate prediction from past trip patterns [13, 16]. In addition to the user contexts mentioned above, the
current user current and thelength of stay at the current location are used for improving the accuracy [7, 27].
Logistic regression and decision trees are often used for this task.
To solve the low prediction performance due to the shortage of the trip patterns from the logs of a single user,
McInerney et al. [14] propose a probabilistic model called, LocHDP (hierarchical Dirichlet processes extending
to user location modeling), which shares the habits of each user. However, NPP could not compensate for the
misclassified prediction result even if the user trajectory was provided incrementally with respect to the progress
of a trip.
Our work compensates for the shortcomings of NPP by providing robust destination prediction for unexpected
trajectories against user contexts.
2 PROBLEM SETTING AND PROBLEMS WITH CURRENT METHODS IN THIS SETTING
Before describing our model, this section presents a problem setting of destination prediction with user trajectories
and user contexts.
2.1 Problem setting
In this paper, destination prediction is defined as the problem of predicting the next destination before reaching
the destination during a trip (i.e. from one staying point to another staying point).
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
Early Destination Prediction with Spatio-temporal User Behavior Patterns • 142:5
As a preprocessing step, the collection of points of interests (POIs) L are extracted by discretizing the raw
GPS traces using clustering techniques such as DBSCAN methods [6]. Let L be the number of the discretized
locations L. The set of destinations Y are selected from the discretized locations when they have a certain length
of staying. Let K < L be the number of destination candidates Y.
In each trip, we assume the sequence of discretized locations can be obtained as l1 ... lT , in which a step is
incremented with respect to a change of discretized location, and T is the total number of steps in a single trip.
In this paper, destination prediction is formulated as a classifying set of destination candidates Y from the
trajectory information from l1:t by t-th step and the user context x such as the time of day and the day of the
week. Specifically, the destination prediction can be formulated as:
yˆ = arg max
y
p(y|x,l1:t ), (1)
while early destination prediction pursues accurate prediction at the early stage of each trip t << T .
2.2 Formulation of current prediction methods and specifying their problems
Before describing our model, we review the conventional approaches: destination prediction with trajectory
tracking, and NPP.
In prediction based on trajectory tracking, the probability of a destination y in step t ∈ {1, 2, ··· ,T } is
formulated as
p(y|l1:t ). (2)
(2) shows that this prediction method takes into account the starting location (that is, location data at l1) as the
user context, but does not take into account the day of the week nor the time of day that cannot be obtained
from the location information.
On the other hand, in NPP, the probability of a destination y in step t ∈ {1, 2, ··· ,T } is formulated as
p(y|x). (3)
(3) indicates that NPP does not take into account trip information.
As shown here, each approach does not leverage all of the user information. In contrast to the traditional
methods, our approach fully exploits all of the information l1:t and x in a unified manner.
3 PROPOSED METHOD: EARLY DESTINATION PREDICTION WITH SPATIO-TEMPORAL
USER-BEHAVIOR PATTERNS
This section presents our proposed model which pursues early destination prediction. Thanks to the simplicity
of our formulation, the model consists of the two approaches mentioned above (that is, destination prediction
with trajectory tracking and NPP). We also describe the models leveraged in our proposed model for destination
prediction with trajectory tracking and NPP.
3.1 Factorizing destination prediction with trajectories and user contexts into two approaches
Owing to the fact that the exploitation of both user contexts and trajectories is required to improve the accuracy
of the destination prediction at an early stage of a trip, this section presents how to use all the information
systematically.
As an example of one of the naive approaches, we merely seek the maximum a posteriori of destination
candidates among the models. Specifically, the model can be formulated as:
p(y|x,l1:t ) = max(p(y|x),p(y|l1:t )). (4)
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
142:6 • R. Imai et al.
However, this model just selects trajectories or user contexts based on the probability of each model, that is, this
model is not able to consider both the user trajectories and contexts at the same time, hence the problem for
early destination prediction remains unsolved.
To resolve this issue, we rethink the model defined in p(y|x,l1:t ). By using the relationship between joint and
conditional probability, the model can be factorized into two elements as:
p(y|x,l1:t ) = p(y,l1:t |x)
p(l1:t ) (5)
∝ p(y,l1:t |x)
= p(y|x)p(l1:t |y, x).
Note that the first term of the right hand side, i.e. p(y|x) is equivalent to NPP. As for the second term: p(l1:t |y, x),
it is natural to think the route l1:t is mainly governed by the destination y, thus the user context x can be ignored
for trajectory modeling. By using this assumption, the probability defined in p(y|x,l1:t ) can be formulated as:
p(y|x,l1:t ) ∝ p(y,l1:t |x) (6)
∝ p(y|x)p(l1:t |y).
Thanks to this assumption, the probability can be factorized into two conventional approaches: trajectory based
destination prediction, and NPP. Qualitatively, the model produces a reliable result by using the NPP approach
when trajectory information is limited at the early stage of a trip while it also produces a reliable result at the last
stage of a trip.
To differentiate our model (6) from the naive one defined in (4), let us demonstrate a typical example qualitatively.
Consider a user whose candidate destinations for weekday morning are two choices: the office and the hospital,
and the route from home to the office and the supermarket are almost the same. In this case, the candidate
destinations are narrowed down to two, the office and the hospital, according to the user context at the time
of departure. But in the case of the naive approach, even if the trip progresses, the only changes the candidate
can make are to the office and supermarket, that is, the destination cannot be narrowed down even if the trip
progresses. This is because the naive approach cannot consider the trip trajectory and user context simultaneously.
On the other hand, our approach is carefully designed to deal with two types of information simultaneously
therefore, the office is extracted as the destination according to the trip trajectory progress and user context.
Since our model is equivalent to the product of the two models, we are free to select between any two models
of NPP and trajectory tracking. In our study, we chose SubSynE [24] as a state of the art trajectory tracking
model, and multi-class logistic regression [10] as a state of the art NPP model, respectively. Though SubSynE
and multi-class logistic regression are not original to our model, the details of these models are described in the
preceding sections in order to fully specify our model.
3.2 Prediction based on trajectory tracking: SubSynE Algorithm
3.2.1 Overview of SubSynE Algorithm. In the proposed method, we obtained predictions using the Markov
model. Let MTotal be the L × L matrix representing the transition probability from state to state. In this context,
states are discretized locations. Then, MTotal is expressed using (7) by using pi→j to represent the transition
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
Early Destination Prediction with Spatio-temporal User Behavior Patterns • 142:7
probability from i to j.
MTotal =









p1→1 ··· p1→j ··· p1→L
.
.
. . . . .
.
.
pi→1 pi→j pi→L
.
.
. . . . .
.
.
pL→1 ··· pL→j ··· pL→L









. (7)
We the optimize transition matrix MTotal ( (7)) by using the SubSynE algorithm [24]. This algorithm optimizes the
transition matrix of the Markov model built from the GPS traces. The SubSynE algorithm reduces the calculation
cost of the SubSyn algorithm [25]. The Markov model prediction is based on a past route and presents a datasparseness problem. In the SubSyn algorithm, the transition matrix M between adjacent states is first created
from partial trajectories obtained by dividing one complete route. By using M, the transition matrix MTotal
including all transition probabilities from one state to another state is created. This algorithm does not optimize
each complete route but rather partial trajectories, and therefore solves the data-sparseness problem. See [24, 25]
for the details of this algorithm.
To employ SubSynE in our model, it is necessary to calculate the likelihood of the route for each destination
using the SubSynE algorithm. The likelihood of route l1:t for destination y is expressed using (8) with M and
MTotal optimized by the training data. In this context, M is the transition matrix between adjacent states. Note
that t−1 i=1 Mnli nli+1 is common to all destinations y because t−1 i=1 Mnli nli+1 depends on only l1:t .
p(l1:t |y) = MTotal
nlt ny
MTotal
nl1ny
	t−1
i=1
Mnli nli+1 (8)
= pnlt →ny
pnl1→ny
	t−1
i=1
Mnli nli+1
∝ pnlt →ny
pnl1→ny
.
3.3 Prediction by NPP: Multi-class logistic regression using staying information as feature
3.3.1 Overview of multi-class logistic regression with user contexts. As the NPP method is utilized in our model,
we employ multi-class logistic regression using user contexts such as the day of the week, time of day, and
starting location extracted from the use log [10]. In this case, the prediction method is formulated as: (9). In this
equation, f(1) is a feature indicating the day of the week by one-hot encoding, f(2) is a feature indicating the
time of day by one-hot encoding, f(3) is a feature indicating the starting point label, and wd = (w1 ⊗ w2 ⊗ w3)
T is
a weight parameter for the destination y.
f(x) = f(x)
(1) ⊗ f(x)
(2) ⊗ f(x)
(3)
,
p(y|x) = exp(wT
y f(x))

K
d=1 exp(wT
df(x))
. (9)
Specifically, we designed and used these features as follows:
• Feature representing day of the week
This feature was defined as a one-hot coding in which Sunday is the first dimension, Monday is the second
dimension, ··· , and Saturday is the seventh dimension. For example, in the case where the user context x
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.        
142:8 • R. Imai et al.
provides Monday as the day of the week, this feature for x is expressed as (10).
f(1)
(x) = [0, 1, 0, 0, 0, 0, 0]. (10)
• Feature representing the time of day
We divided the day into eight time zones and define this feature as a vector representation, where 0:00
to 3:00 is the first dimension, 3:00 to 6:00 is the second dimension, ··· , and 21:00 to 24:00 is the eighth
dimension. In addition, to consider the deviation of time zones, this feature is expressed by Gaussian
smoothing to identify which time zone the starting time is close to. For example, in the case where x
provides 8:00 as the time of the day, because this time is included the third time zone; this feature for x is
expressed as (11).
f(2)
(x) =

f (2)(1)
, f (2)(2)
, ··· , f (2)(8)

,
f (2)(i)
(x) =
exp 
−(3−min(i,8−i))2
2

√
2π . (11)
• Feature representing the starting location
If a user has nu starting locations after discretizing location data (Section 2), and each starting location is
labeled 1 to nu , we define the starting location representing the future as a one-hot encoding. For example,
in the case where the number of starting locations is 5 and x provides the label of the starting location as 2,
this feature for x is expressed as (12).
f(3)
(x) = [0, 1, 0, 0, 0]. (12)
By using the features above, f(1)
, f(2)
, f(3)
, the probability of a destination y is obtained from (9) To optimize
the weight parameter w1, ··· ,wK of (9), we use the L2 norm as a regularization term and the typical gradient
methods for machine learning (FOBOS in our implementation [3]).
4 EXPERIMENTAL RESULTS
4.1 Experimental Objective
In order to determine that the proposed method is more suitable for early destination prediction with trajectory
tracking than the current state-of-the-art destination prediction, we compare the performance of our model
with the trajectory tracking approach and NPP models, as the proposed method combines these two prediction
methods. In addition to evaluating the prediction performance in terms of accuracy, the computational cost of
our model is also evaluated from the application perspective.
4.2 Experimental metric: comparison a prediction accuracy
To evaluate the performance of the models efficiently, we employ the accuracy versus the ratio of a completed
trip as the basic evaluation metric. We represent the percentage of the completed trip as a fraction defined using
(13). Let t be the current step and T be the number of total steps. For each trip, we assign t to each fraction, where
the value of t/T is closest to the fraction. Note that the step interval with respect to t changes is not constant but
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
Early Destination Prediction with Spatio-temporal User Behavior Patterns •
142:9 depends on the changes of location labels.
fraction =
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪
⎩
0
0.2
0.4
0.6
0.8
. (13)
For example, in the case of T = 4,T = 9, the assignments of t for each fraction are listed in Table. 1. In this
Table 1. Example of assignment of t for each fraction
T = 4 T = 9
fraction t t
0 0 0
0.2 1 2
0.4 2 4
0.6 2 5
0.8 3 7
comparison we demonstrate that the proposed method is suitable for our task by confirming that it can predict
the destination with a high accuracy in the early stage of a trip.
4.2.1 Evaluation measures. To specify the performance quantitatively, we employ the two following metrics
as the prediction accuracy measures with respect to the fraction.
• Accuracy
This measure reflects the accuracy of the prediction performance obtained from (6) with respect to the
fraction. The performance is desired to be highly accurate even when the fraction reaches a small level.
• Percentile of top-k true destinations
From an application perspective, such as online advertisement, and the recommendations related to the
destination areas, we also employ top-k true accuracy for the evaluation metric. This metric is inspired
by information retrieval. Specifically, this measure clarifies the accuracy of the top-k candidates of a
destination. If the ground truth destination is included in the top-k candidates, the model accurately
predicts the destination. In contrast to basic accuracy, the top-k metric demonstrates the capacity of each
model to narrow down the destination with respect to the fractions.
4.2.2 Comparison methods. In addition to the state-of-the-art destination prediction, we chose four comparison
methods as follows.
• Baseline: In contrast to the other models, this method is based on the frequency of predicting the destination
regardless of day of the week, or the time of day. No contextual information or trajectory information is
leveraged in this model. We referred to it as a baseline in the experiment.
• SubSynE: This model is a part of our model, and serves as a state-of-the-art prediction model based on
trajectory tracking. We demonstrate only the likelihood of a path (8). By using this likelihood and the
baseline prediction P(y), the probability of a destination predicted by SubSynE is formulated as (14).
p(y = d|l1:t ) = P(l1:t |y = d)P(y = d)

K
d=1 P(l1:t |y = d
)P(y = d
)
. (14)
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
142:10 • R. Imai et al.
• A multi-class logistic regression with user context: This model is a part of our model, and serves as a
state-of-the-art NPP model.
• Naive combination: In this model, the destination is obtained from (4), i.e. the destination candidates are
specified by using a comparison between the two models evaluated separately. We referred to it as a naive
combination in the experiment. This model has the disadvantage that the trip and user contexts, other than
trajectories, cannot be considered at the same time.
4.3 Dataset
4.3.1 Overview of dataset. We obtained a GPS dataset from an application designed by Yahoo! JAPAN 5. The
GPS data included user ID, latitude, longitude, time stamp (JST), speed, and GPS accuracy. For this study, we
leveraged user ID, latitude, longitude, and time stamp.
We collected the GPS data obtained from 1,646 users living around Tokyo from May 1, 2016 to June 30, 2016.
For this study, we defined the area around Tokyo as that within the northern latitude 35.5 – 35.9 degrees and east
longitude 139.2 – 139.95 degrees (Fig. 1). In this setting, we initially chose 1,690 users who had complete GPS
data, and we excluded users who did not have enough trips for training. Specifically, we excluded users whose
number of trips was less than five. Finally, 1,646 users were extracted.
139.2 139.3 139.4 139.5 139.6 139.7 139.8 139.9
Longitude[ °le E]
35.45
35.5
35.55
35.6
35.65
35.7
35.75
35.8
35.85
35.9
35.95
Latitude[ °le N]
Fig. 1. Defined area of Tokyo
4.3.2 Preprocessing of data. As a preprocessing step, we discretize the raw GPS traces from the dataset by
using clustering techniques. Although clustering techniques for GPS traces have been fully explored in the
literature, we employ DBSCAN [6] as the clustering technique in our experiment for the following reasons.
This clustering does not require the number of clusters in advance, unlike k-means clustering [1]. In addition,
DBSCAN is density-based non-hierarchical clustering, the computational quantity can be suppressed O(n logn)
5https://itunes.apple.com/jp/app/yahoo!-fang-zai-su-bao-zhenya/id481914139
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
Early Destination Prediction with Spatio-temporal User Behavior Patterns • 142:11
on average when the amount of GPS data is n by combining the data structures suitable for a spatial index such
as R*-tree [2]. Owing to the fact that GPS data with few spatially close data can be labeled as noise, the data are
suitable for location-based applications, with many examples [8, 18, 26] (For details on the DBSCAN-clustering
algorithm, see [6]). An example of applying DBSCAN clustering to artificial data is shown in Figs. Fig. 2 and
Fig. 3. These figures display how to discretize using DBSCAN clustering.
139.67 139.68 139.69 139.7 139.71
Longitude[ °le E]
35.595
35.6
35.605
35.61
35.615
35.62
35.625
35.63
Latitude[ °le N]
Fig. 2. Artificial data (before clustering)
139.67 139.68 139.69 139.7 139.71
Longitude[ °le E]
35.595
35.6
35.605
35.61
35.615
35.62
35.625
35.63
Latitude[ °le N]
Fig. 3. Artificial data (after clustering)
4.3.3 Extracting candidate of destination and trip. After the clustering phase, a set of destination candidates
are selected if users stay at the same location label at least 20 minutes, i.e. K points are selected as the location
labels. Note that this preprocessing step from the raw GPS traces to location label generation and destination
candidate selection is separately evaluated per user.
4.4 Experimental result
We conducted an experiment to compare the accuracy of destination prediction based on the trip percentage
completion by using five-fold cross validation for each user. Since the GPS data where the user remained for
more than 20 minutes were labelled as "staying". We ignored trips where the starting location and the destination
match because the SubSynE algorithm does not work for them. For training data, we conducted grid-based
data complementation to solve the problem where GPS data was acquired at unique intervals. Specifically, in a
two-dimensional space with the latitude as the vertical axis and longitude as the horizontal axis, we considered
grids that passed the line segment between the GPS data at steps i and i + 1 as those that passed through on
this trip and decided that the dataset should include these GPS grids. Fig. 4 shows an example of this data
complementation. The number in the upper left corner of a cell is the label number for that cell, the arrows are
the direction of trip, the black dots are the GPS data in the dataset, and the white dots are the complemented GPS
data.
Fig. 5 shows the statistics of the step length per trip for all users before data completion. The statistical trend
of the step length dataset demonstrates that users tend to undertake short distance trips more frequently than
travelling long distances.
4.4.1 Result of prediction accuracy.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
142:12 • R. Imai et al.

	

  
   
	

	


	

  
   
	

	

Fig. 4. Example of grid-based data complementation
Accuracy. Fig. ?? shows the experimental results of the accuracy for each percentage of trip completed. The
vertical axis is the average of the percentage of the predicted true destination of each user, and the error bars
represent the 95% confidence intervals of this population mean.
First, we confirmed the effect of user trajectories and user contexts on destination prediction via a comparison
with the baseline and other methods. With regards to SubSynE specifically, it can be seen that the accuracy is
increased as the trip progresses by considering the trip trajectory. On the other hand, focusing on a multi-class
logistic regression, the accuracy achieved at the starting phase of trips is relatively high but is constant with
respect to trips in progress.
In comparison with SubSynE and a multi-class logistic regression, the proposed method provides better
accuracy for any fraction.
Moreover, by comparing the proposed method with the naive combination, it was confirmed that the proposed
method achieves better performance than the naive combination, because it considered both user trajectories and
the user contexts at the same time. In particular, it can be seen that there is a large difference in the early stage of
a trip. In the example of Section 3, even if the trip progresses to a certain degree, the naive combination only
changes the destination candidates from the office and hospital to the office and supermarket and cannot narrow
down the destination. It can narrow down the office (or supermarket) as a destination at the time the route
is changed towards the office or supermarket branches. On the other hand, the proposed method can narrow
down the office as the destination at the early stage of a trip by leveraging trajectories and user contexts. This is
demonstrated in Fig. 6.
We also investigate why the improvement in accuracy with respect to the trip progress is small in SubSynE,
the naive combination, and our model. Fig. ?? shows that there are many trips whose total step length is 4 or less.
When the total step is small, SubSynE is not able to integrate all the possible paths, hence the performance of
trajectory based models is not incrementally improved, as expected. Hence, many small-step trips may affect the
prediction results. In addition, the comparison of the prediction accuracy for small-step trips was not suitable for
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.                            
Early Destination Prediction with Spatio-temporal User Behavior Patterns • 142:13
0 2 4 6 8 10+ 12
Total step
0
1
2
3
4
5
6
The number of trip
x 10 4
Fig. 5. The number of trips for each total step in the dataset
the experimental objective, that is, to confirm that the proposed method was suitable for our task. Therefore, we
extracted trips with total steps of five or more and plotted the prediction results for these trips.
Fig. 7 shows the prediction result for the trips whose total steps are five or more. For SubSynE, the naive
combination, and the proposed method, the increase in accuracy during the trip progress was sharp compared
with the results shown in Fig. 6. This result confirmed that Fig. 6 was affected by many small-step trips and trip
information had the largest effect for long trips.
Percentile of top-k true destinations. In the paragraph regarding Accuracy, we mentioned the results of all trips
were not suitable for our experimental objective because these were biased by many small-step trips. For this
reason, we only plotted the experimental results for trips with total steps of five or more.
Fig. 8, 9, 10, 11, and 12 show the experimental results of the percentile of top-k true destinations predicted
for each k value. The vertical axis represents the percentile of top-k true destinations predicted for each user
and the error bars signify a 95% confidence interval of this population mean as well as the accuracy for each
percentage of trip completed. For any fraction, the proposed method always included the true destination at
a higher percentile than the other methods, even when k was small. These results show that the proposed
method has a high capability of narrowing down a destination by selecting the predicted destinations with a
high probability when compared to the other methods.
Discussion for applications. We discuss the advantages of the proposed method in real applications. For example,
consider the POI recommendation application for a user trip. If this application requires 70% accuracy, then this
application can recommend POI at a fraction of 0.2 with the proposed method, but cannot recommend any POI
with the two existing methods.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
142:14 • R. Imai et al.
0 0.2 0.4 0.6 0.8
Fraction
0.35
0.4
0.45
0.5
0.55
0.6
0.65
0.7
0.75
0.8
Accuracy
Baseline
MultiClassClassifier
SubSynE
Proposed
NaiveCombine
Fig. 6. Accuracy results
As another example, consider displaying web advertisements on a smartphone according to the destination. For
simplicity, consider creating one web advertisement for a destination predicted at a fraction of 0.4, and displaying
these on one page. When the probability that the user’s true destination will be included in the web advertisement
displayed on the page is targeted to 90% or more, two advertisements are displayed with the proposed method,
while four advertisements need to be displayed with the existing methods. Assuming that the advertisement’s
page occupancy rate is 10%, and one advertisement in the display contains ads that users are impressed with, the
percentage of ads that users do not want is only 10% with the proposed method, and 30 % with existing method.
From these results using the above two measures, our model is confirmed to provide robust performance in terms
of the early destination prediction task compared with the other models.
4.5 Measuring computation time
From the application perspective, we also evaluate the computation time in addition to the accuracy of destination
prediction. The computational cost of the training phase and the prediction phase were evaluated and calculated
separately. Specifically, we calculate the computational cost of the two phases per user. We employ a single
computation node with two CPUs (Intel Xeon E5-2630L v3, 1.80 GHz × 2) and 128 GB of RAM in our environment.
4.5.1 Result of computation time measurement.
Training time. The experimental result is shown in Fig. 13. In this figure, the vertical axis depicts the training
time [min] and the horizontal axis is trip value of the training set, that is,the number of trips in the training set.
Even for users that had the longest training time, the training time was only about 5 h. This result shows that
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
Early Destination Prediction with Spatio-temporal User Behavior Patterns • 142:15
0 0.2 0.4 0.6 0.8
Fraction
0.35
0.4
0.45
0.5
0.55
0.6
0.65
0.7
0.75
0.8
Accuracy
Baseline
MultiClassClassifier
SubSynE
Proposed
NaiveCombine
Fig. 7. Accuracy results (total step ≥ 5)
the proposed method can predict the destination within a feasible training time. We did not conduct parallel
processing in this study, however, it is possible to reduce the training time by leveraging parallel processing.
Prediction time. The experiment result is shown in Table 2. In this figure, prediction time is the average of all
predictions. This result demonstrates that the proposed method can generate prediction results immediately
based on the current GPS data provided.
Table 2. Prediction time result
Prediction time[ms] 95% confidence intervals[ms]
3.85 ±0.12
Discussion for applications. Even if the proposed method has a high prediction accuracy, it is meaningless
unless the training time and the prediction time are practical. For example, a prediction method that requires 1
year of training to learn from one day of GPS data is not practical. In addition, a prediction method that requires
several minutes to generate the results from current GPS data is not suitable for early destination prediction,
even if the prediction accuracy is high. Experimental results show that the performance time of the proposed
method is sufficient for our task.
Naive combination is inferior to the proposed method in terms of prediction accuracy. It is obvious that the
calculation time of naive combination is almost equal to the proposed method. Therefore, there is no reason to
use naive combination in practical applications.
Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, Vol. 1, No. 4, Article 142. Publication date:
December 2017.
142:16 • R. Imai et al.
5 CONCLUSION
In this paper, a new behavior prediction scheme for early destination prediction with trajectory tracking is
presented. Basically, our proposed model fully leverages user context to specify the destination candidates at
an early stage of a trip while trajectories are also employed to narrow down the candidates of the destination.
To simplify the model, we mathematically factorize this complex task into the two basic models: destination
prediction with trajectory tracking and the Next Place Prediction task. In the experiment using 1.6 K user location
logs, we compared our model with the conventional models in terms of prediction performance with respect to
the fraction of trips. According to the result, our model achieves better performance than the conventional ones
at any stage of the trip. In addition, we measured the computation time of the proposed method and confirmed
that this computation time is practical from the application perspective.
The limitation of our work is the preprocessing step when we create a set of destination candidates. Specifically,
the current study leverages a type of clustering technique of the raw GPS traces to create a set of candidates.
However, the candidates should not be selected from the raw GPS traces of a limited number of users. Destination
prediction with an unlimited number of destination candidates should be dealt with as an open problem of this
domain.