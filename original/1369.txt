We initiate the parameterized complexity study of minimum t-spanner problems on directed graphs. For a positive integer t, a multiplicative t-spanner of a (directed) graph G is a spanning subgraph H such that the distance between any two vertices in H is at most t times the distance between these vertices in G, that is, H keeps the distances in G up to the distortion (or stretch) factor t. An additive t-spanner is defined as a spanning subgraph that keeps the distances up to the additive distortion parameter t, that is, the distances in H and G differ by at most t. The task of DIRECTED MULTIPLICATIVE SPANNER is, given a directed graph G with m arcs and positive integers t and k, decide whether G has a multiplicative t-spanner with at most 𝑚−𝑘 arcs. Similarly, DIRECTED ADDITIVE SPANNER asks whether G has an additive t-spanner with at most 𝑚−𝑘 arcs. We show that (i) DIRECTED MULTIPLICATIVE SPANNER admits a polynomial kernel of size (𝑘4𝑡5) and can be solved in randomized (4𝑡)𝑘⋅𝑛(1) time, (ii) the weighted variant of DIRECTED MULTIPLICATIVE SPANNER can be solved in 𝑘2𝑘⋅𝑛(1) time on directed acyclic graphs, (iii) DIRECTED ADDITIVE SPANNER is 𝖶[1]-hard when parameterized by k for every fixed 𝑡≥1 even when the input graphs are restricted to be directed acyclic graphs. The latter claim contrasts with the recent result of Kobayashi from STACS 2020 that the problem for undirected graphs is 𝖥𝖯𝖳 when parameterized by t and k.

Introduction
Given a (directed) graph G, a spanner is a spanning subgraph of G that approximately preserves distances between the vertices of G. Graph spanners were formally introduced by Peleg and Schäffer in [16] (see also [17]). Originally, the concept was introduced for constructing network synchronizers [17]. However, graph spanners have a plethora of theoretical and practical applications in various areas like efficient routing and fast computing of shortest paths in networks, distributed computing, robotics, computational geometry and biology. We refer to the recent survey of Ahmed et al. [1] for the introduction to graph spanners and their applications.

We are interested in the classical multiplicative and additive graph spanners in graphs. Let G be a (directed) graph. For two vertices 𝑢,𝑣∈𝑉(𝐺), dist𝐺(𝑢,𝑣) denotes the distance between u and v in G, that is, the number of edges (arcs, respectively, for the directed case) of a shortest (u, v)-path. Let t be a positive integer. It is said that a spanning subgraph H of G is a multiplicative t-spanner if dist𝐻(𝑢,𝑣)≤𝑡⋅dist𝐺(𝑢,𝑣) for every two vertices 𝑢,𝑣∈𝑉(𝐺), i.e., H approximates distances in G within factor t. A spanning subgraph H of G is called an additive t-spanner if dist𝐻(𝑢,𝑣)≤dist𝐺(𝑢,𝑣)+𝑡 for every 𝑢,𝑣∈𝑉(𝐺), that is, H approximates the distances in G within the additive parameter t. The standard task in the graph spanner problems is, given an allowed distortion parameter t, find a sparsest t-spanner, i.e., a spanner with the minimum number of edges. We consider the parameterized versions of this task:

figure a
and

figure b
Informally, the task of these problems is to decide whether we can delete at least k edges (arcs, respectively, for the directed case) in such a way that all the distances in the resulting graph are “t-close” to the original ones.

Previous work. We refer to [1] for the comprehensive survey of the known results and mention here only those that directly concern our work. First, we point that the considered graph spanner problems are computationally hard. It was already shown by Peleg and Schäffer in [16] that deciding whether an undirected graph G has a multiplicative t-spanner with at most ℓ edges is 𝖭𝖯-complete even for fixed 𝑡=2. In fact, the problem is 𝖭𝖯-complete for every fixed 𝑡≥2 [2]. Moreover, for every 𝑡≥2, it is 𝖭𝖯-hard to approximate the minimum number of edges of a multiplicative t-spanner within the factor 𝑐log𝑛 for some 𝑐>1 [12]. The same complexity lower bounds for directed graphs were also shown by Cai [2] and Kortsarz [12]. Stronger inapproximability bounds were given by Elkin and Peleg [7]. Additive t-spanners for undirected graphs were introduced by Liestman and Shermer in [13, 14]. In particular, they proved in [14], that for every fixed 𝑡≥1, it is 𝖭𝖯-complete to decide whether a graph G admits an additive t-spanner with at most ℓ edges. It was shown by Chlamtác et al. [4] that for every integer 𝑡≥1 and any constant 𝜀>0, there is no polynomial-time 2log1−𝜀𝑛/𝑡3-approximation for the minimum number of edges of an additive t-spanner unless 𝖭𝖯⊆𝖣𝖳𝖨𝖬𝖤(2polylog(n)).

The aforementioned hardness results make it natural to consider these spanner problems in the parameterized complexity framework. The investigation of MULTIPLICATIVE SPANNER and ADDITIVE SPANNER on undirected graphs was initiated by Kobayashi in [10] and [11]. In [10], it was proved that MULTIPLICATIVE SPANNER admits a polynomial kernel of size (𝑘2𝑡2). For ADDITIVE SPANNER, it was shown in [11] that the problem can be solved in time 2((𝑘2+𝑘𝑡)log𝑡)⋅𝑛(1), that is, the problem is fixed-parameter tractable (𝖥𝖯𝖳) when parameterized by k and t.

Our results. We initiate the study of MULTIPLICATIVE SPANNER and ADDITIVE SPANNER on directed graphs and further refer to them as DIRECTED MULTIPLICATIVE SPANNER and DIRECTED ADDITIVE SPANNER, respectively. We show that DIRECTED MULTIPLICATIVE SPANNER admits a kernel of size (𝑘4𝑡5). We complement this result by observing that the problem can be solved in (4𝑡)𝑘⋅𝑛(1) time by a Monte Carlo algorithm with false negatives. We leave open the question whether the problem is 𝖥𝖯𝖳 when parameterized by k only. However we show that this is the case when the inputs are restricted to be directed acyclic graphs (DAGs). In fact, we show the more general claim for the weighted variant of the problem called WEIGHTED DIRECTED MULTIPLICATIVE SPANNER, where the input directed graph G is supplied with a weight function 𝜔(⋅) with positive values defining the lengths of the arcs and the distances are defined with respect to these arc lengths. Clearly, DIRECTED MULTIPLICATIVE SPANNER is the special case of this problem with unit arc lengths. We show that WEIGHTED DIRECTED MULTIPLICATIVE SPANNER can be solved in 𝑘2𝑘⋅𝑛(1) on DAGs. We also observe that DIRECTED MULTIPLICATIVE SPANNER is 𝖭𝖯-complete on DAGs. For additive spanners, we show that the problem becomes much harder on directed graphs by showing that DIRECTED ADDITIVE SPANNER is 𝖶[1]-hard for every fixed 𝑡≥1 even on DAGs.

Organization of the paper. In Section 2, we introduce basic notions used in the paper. In Section 3, we prove that DIRECTED MULTIPLICATIVE SPANNER admits a polynomial kernel and sketch an 𝖥𝖯𝖳 algorithm. Further in this section, we show that DIRECTED MULTIPLICATIVE SPANNER is 𝖭𝖯-complete on DAGs and prove that WEIGHTED DIRECTED MULTIPLICATIVE SPANNER is 𝖥𝖯𝖳 for the parameterization by k only for this class of directed graphs. In Section 4, we show hardness for DIRECTED ADDITIVE SPANNER. We conclude in Section 5 by stating some open problems.

Preliminaries
Parameterized Complexity and Kernelization. We refer to the recent books [5, 6, 8] for the detailed introduction. In the Parameterized Complexity theory, the computational complexity is measured as a function of the input size n of a problem and an integer parameter k associated with the input. A parameterized problem is said to be fixed-parameter tractable (or 𝖥𝖯𝖳) if it can be solved in time 𝑓(𝑘)⋅𝑛(1) for some function 𝑓(⋅). A kernelization algorithm for a parameterized problem Π is a polynomial algorithm that maps each instance (I, k) of Π to an instance (𝐼′,𝑘′) of Π such that

(i)
(I, k) is a yes-instance of Π if and only if (𝐼′,𝑘′) is a yes-instance of Π, and

(ii)
|𝐼′|+𝑘′ is bounded by f(k) for a computable function 𝑓(⋅).

Respectively, (𝐼′,𝑘′) is a kernel and 𝑓(⋅) is its size. A kernel is polynomial if 𝑓(⋅) is polynomial. It is common to present a kernelization algorithm as a series of reduction rules. A reduction rule for a parameterized problem is an algorithm that takes an instance of the problem and computes in polynomial time another instance that is more “simple” in a certain way. A reduction rule is safe if the computed instance is equivalent to the input instance.

Graphs. Recall that an undirected graph is a pair 𝐺=(𝑉,𝐸), where V is a set of vertices and E is a set of unordered pairs {𝑢,𝑣} of distinct vertices called edges. A directed graph 𝐺=(𝑉,𝐴) is a pair, where V is a set of vertices and A is a set of ordered pairs (u, v) of distinct vertices called arcs. We say that u and v are incident to (u, v). Note we do not allow loops and multiple arcs (that are irrelevant for distances). We use V(G) and E(G) (A(G), respectively) to denote the set of vertices and the set of edges (set of arcs, respectively) of G. For a (directed) graph G and a subset 𝑋⊆𝑉(𝐺) of vertices, we write G[X] to denote the subgraph of G induced by X. For a set of vertices S, 𝐺−𝑆 denotes the (directed) graph obtained by deleting the vertices of S, that is, 𝐺−𝑆=𝐺[𝑉(𝐺)∖𝑆]; for a vertex v, we write 𝐺−𝑣 instead of 𝐺−{𝑣}. Similarly, for a set of edges (arcs, respectively) S (an edge or arc e, respectively), 𝐺−𝑆 (𝐺−𝑒, respectively) denotes the graph obtained by the deletion of the elements of S (the deletion of e, respectively). A subgraph H of a (directed) graph G is a spanning subgraph of G if 𝑉(𝐻)=𝑉(𝐺). Every directed acyclic graph (DAG) G has a topological ordering of its vertex set, that is there exists 𝜋:𝑉(𝐺)→{1,…,|𝑉(𝐺)|} such that if (𝑢,𝑣)∈𝐴(𝐺) then 𝜋(𝑢)<𝜋(𝑣). The notation 𝑢≺𝑣 denotes 𝜋(𝑢)<𝜋(𝑣) and 𝑢⪯𝑣 denotes that either 𝜋(𝑢)<𝜋(𝑣) or 𝑢=𝑣.

We write 𝑃=𝑣1⋯𝑣𝑘 to denote a path with the vertices 𝑣1,…,𝑣𝑘 and the edges {𝑣1,𝑣2},…,{𝑣𝑘−1,𝑣𝑘} (arcs (𝑣1,𝑣2),…,(𝑣𝑘−1,𝑣𝑘), respectively); 𝑣1 and 𝑣𝑘 are the end-vertices of P and we say that P is a (𝑣1,𝑣𝑘)-path. A single vertex path is trivial, and for a trivial 𝑃=𝑣, P is a (v, v)-path. All considered paths are assumed to be simple, that is, 𝑣1,…,𝑣𝑘 are distinct. The length of a path is the number of edges (arcs, respectively) in the path. Also A(P) denotes the arc set of the path P. For a (u, v)-path 𝑃1 and a (v, w)-path 𝑃2, we denote by 𝑃1∘𝑃2 the concatenation of 𝑃1 and 𝑃2. We use similar notation for walks; the difference between and a path and a walk is that, the vertices of a walk 𝑊=𝑣1⋯𝑣𝑘 are not required to be distinct and a walk may go through the same edges (arcs, respectively) several times. Notice that the concatenation of two paths is a walk but not necessarily a path. For two vertices 𝑢,𝑣∈𝑉(𝐺), dist𝐺(𝑢,𝑣) denotes the distance between u and v in G, that is, the length of a shortest (u, v)-path; we assume that dist𝐺(𝑢,𝑣)=+∞ if there is no (u, v)-path in G. Clearly, dist𝐺(𝑢,𝑣)=dist𝐺(𝑣,𝑢) for undirected graphs but this not always the case for directed graphs.

Let t be a positive integer. It is said that a spanning subgraph H of G is a multiplicative t-spanner if dist𝐻(𝑢,𝑣)≤𝑡⋅dist𝐺(𝑢,𝑣) for every 𝑢,𝑣∈𝑉(𝐺). A spanning subgraph H of G is called an additive t-spanner if dist𝐻(𝑢,𝑣)≤dist𝐺(𝑢,𝑣)+𝑡 for every 𝑢,𝑣∈𝑉(𝐺).

We also consider the weighted variant of spanners for directed graph. Let G be an arc wighted directed graph, that is, we a given a weight (or length) function 𝜔:𝐴(𝐺)→ℝ+ with positive values; we say that 𝜔(𝑒) is the length of an arc e. The length of a weighted path 𝑃=𝑣1⋯𝑣𝑘 is ∑𝑘𝑖=2=𝜔(𝑣𝑖−1,𝑣𝑖); the length of a trivial path is zero. Then the weighted distance dist𝜔𝐺(𝑢,𝑣) is the length of a shortest path with respect to the arc lengths. For real 𝑡≥1 and a weighted directed graph G, it is said that a spanning subgraph H a weighted multiplicative t-spanner if dist𝜔𝐻(𝑢,𝑣)≤𝑡⋅dist𝜔𝐺(𝑢,𝑣) for every 𝑢,𝑣∈𝑉(𝐺); note that the stretch factor t is not required to be an integer.

Directed Multiplicative t-spanners
In this section, we consider DIRECTED MULTIPLICATIVE SPANNER. We show that the problem admits a polynomial kernel and then complement this result by obtaining an 𝖥𝖯𝖳 algorithm. Further, we consider multiplicative spanners on DAGs. We prove that DIRECTED MULTIPLICATIVE SPANNER is 𝖭𝖯-complete on this class of directed graphs and show that WEIGHTED DIRECTED MULTIPLICATIVE SPANNER is 𝖥𝖯𝖳 when parameterized by k only. These results are based on locality of multiplicative spanners in the sense of the following observation made by Peleg and Schäffer [16].

Observation 1
([16]). Let t be a positive integer (or 𝑡>1 be a real for the weighted case). A spanning subgraph H of a directed graph G is a (weighted) multiplicative t-spanner if and only if for every arc (𝑢,𝑣)∈𝐴(𝐺), there is a (u, v)-path in H of length at most t (t times the length of (u, v) in the weighted case).

Let t be a positive integer (or real for the weighted spanners) and let G be a directed graph. For an arc 𝑎=(𝑢,𝑣) of G, we say that a (u, v)-path P is a t-detour for a if the length of P is at most t (t times the length of a in the weighted case) and P does not contain a. By Observation 1, to solve DIRECTED MULTIPLICATIVE SPANNER for (G, t, k), it is necessary and sufficient to identify k arcs that have t-detours that do not contain selected arcs. Then H can be constructed by deleting these arcs. Notice that this observation holds for both unweighted and weighted spanners. However, for the weighted case, the number of arcs in a t-detour may be arbitrary and depends on the length of a.

Polynomial Kernel for DIRECTED MULTIPLICATIVE SPANNER
In this subsection, we show that DIRECTED MULTIPLICATIVE SPANNER admits a polynomial kernel.

Theorem 1
DIRECTED MULTIPLICATIVE SPANNER has a kernel of size (𝑘4𝑡5).

Proof
Let (G, t, k) be an instance of DIRECTED MULTIPLICATIVE SPANNER. Clearly, if 𝑘=0, then (G, t, k) is a yes-instance, and our algorithm returns a trivial yes-instance in this case. We assume from now that 𝑘>0.

We say that 𝑎∈𝐴(𝐺) is t-good if G has a t-detour for a. Let S be the set of t-good arcs. Clearly, S can be constructed in polynomial time by making use of Dijkstra’s algorithm. We follow the idea of Kobayashi [10] for constructing a polynomial kernel for undirected case and show that if S is sufficiently big, then (G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER.

Claim 1
If |𝑆|≥12𝑘(𝑡+1)((𝑘−1)𝑡+2), then (G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER.

Proof of Claim 1
Let |𝑆|≥12𝑘(𝑡+1)((𝑘−1)𝑡+2). For every 𝑎∈𝑆, let 𝑃𝑎 be a t-detour for a.

Let 𝑆0=∅. For 𝑖=1,…,𝑘, we iteratively construct sets of arcs 𝑆1,…,𝑆𝑘 such that

𝑆0⊂𝑆1⊂⋯⊂𝑆𝑘⊆𝑆
and sets of arcs 𝑅𝑖 such that 𝑅𝑖⊆𝑆𝑖∖𝑆𝑖−1 and |𝑅𝑖|=(𝑘−𝑖)𝑡+1 for 𝑖∈{1,…,𝑘} using the following procedure. For 𝑖=1,…,𝑘,

select an arbitrary set 𝑅𝑖 of size (𝑘−𝑖)𝑡+1 in 𝑆∖𝑆𝑖−1,

set 𝑆𝑖=𝑆𝑖−1∪⋃𝑎∈𝑅𝑖((𝐴(𝑃𝑎)∩𝑆)∪{𝑎}).

We show by induction, that the sets 𝑆1,…,𝑆𝑘 and 𝑅1,…,𝑅𝑘 exist. Since |𝑆∖𝑆0|=|𝑆|≥(𝑘−1)𝑡+1, we conclude that 𝑅1 of size (𝑘−1)𝑡+1 can be selected. Assume that the sets 𝑆𝑗 and 𝑅𝑗 have been constructed for 0≤𝑗<𝑖≤𝑘. Observe that because |⋃𝑎∈𝑅𝑗((𝐴(𝑃𝑎)∩𝑆)∪{𝑎})|≤(𝑡+1)|𝑅𝑗|,

|𝑆𝑗∖𝑆𝑗−1|≤|𝑅𝑗|(𝑡+1)=((𝑘−𝑗)𝑡+1)(𝑡+1)
for 1≤𝑗<𝑖. Therefore,

|𝑆𝑖−1|≤∑𝑗=1𝑖−1(((𝑘−𝑗)𝑡+1)(𝑡+1)).
(1)
Notice that

12𝑘(𝑡+1)((𝑘−1)𝑡+2)=∑𝑗=1𝑘(((𝑘−𝑗)𝑡+1)(𝑡+1)).
(2)
Then by (1) and (2),

|𝑆∖𝑆𝑖−1|≥∑𝑗=𝑖𝑘(((𝑘−𝑗)𝑡+1)(𝑡+1))≥(𝑘−𝑖)𝑡+1.
This means that 𝑅𝑖 can be selected and we can construct 𝑆𝑖.

Now we select arcs 𝑎𝑖∈𝑅𝑖 for 𝑖=𝑘,𝑘−1,…,1. Since |𝑅𝑘|=1, the choice of 𝑎𝑘 is unique. Assume that 𝑎𝑘,…,𝑎𝑖+1 have been selected for 1<𝑖+1≤𝑘. Then we select an arbitrary

𝑎𝑖∈𝑅𝑖∖⋃𝑗=𝑖+1𝑘𝐴(𝑃𝑎𝑗).
Because |⋃𝑘𝑗=𝑖+1𝐴(𝑃𝑎𝑗)|≤(𝑘−𝑖)𝑡 and |𝑅𝑖|=(𝑘−𝑖)𝑡+1, 𝑎𝑖 exists.

Let 𝑖∈{1,…,𝑘}. By the choice of 𝑎𝑖, we have that 𝑎𝑖∉𝐴(𝑃𝑎𝑗) for 𝑖<𝑗≤𝑘. From the other side, 𝑎𝑖∉𝐴(𝑃𝑗) for 1≤𝑗<𝑖, because 𝑎𝑖∈𝑅𝑖 and 𝑅𝑖 does not contain the arcs of 𝑃𝑎 for 𝑎∈𝑅𝑗 for 1≤𝑗<𝑖 by the construction of the sets 𝑅1,…,𝑅𝑘. We obtain that the t-detours 𝑃𝑎𝑖 for 𝑖∈{1,…,𝑘} do not contain any 𝑎𝑗 for 𝑗∈{1,…,𝑘}. By Observation 1, 𝐻=𝐺−{𝑎1,…,𝑎𝑘} is a multiplicative t-spanner. Therefore, (G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER. ◻

By Claim 1, we can apply the next rule:

Reduction Rule 1
If |𝑆|≥12𝑘(𝑡+1)((𝑘−1)𝑡+2), then return a trivial yes-instance of DIRECTED MULTIPLICATIVE SPANNER and stop.

From now, we assume that |𝑆|<12𝑘(𝑡+1)((𝑘−1)𝑡+2).

The analog of Reduction Rule 1 is a main step of the kernelization algorithm of Kobayashi [10] for the undirected case, because it almost immediately allows to upper bound the total number of edges of the graph. However, the directed case is more complicated, since the arcs of t-detours for 𝑎∈𝑆 may be outside S contrary to the undirected case, where all the edges of t-detours are in cycles of length at most 𝑡+1 and, therefore, have t-detours themselves. We use the following procedure to mark the crucial arcs of potential detours.

Marking Procedure Let 𝐺′=𝐺−𝑆.

(i)
For every (𝑢,𝑣)∈𝑆, find a shortest (u, v)-path P in 𝐺′ and if the length of P is at most t, then mark the arcs of P.

(ii)
For every ordered pair of two distinct arcs (𝑢1,𝑣1),(𝑢2,𝑣2)∈𝑆,

(a)
find a shortest (𝑢1,𝑢2)-path 𝑃1 in 𝐺′ and if the length of 𝑃1 is at most t, then mark the arcs of 𝑃1,

(b)
find a shortest (𝑣2,𝑣1)-path 𝑃2 in 𝐺′ and if the length of 𝑃2 is at most t, then mark the arcs of 𝑃2,

(c)
find a shortest (𝑣1,𝑢2)-path 𝑃3 in 𝐺′ and if the length of 𝑃3 is at most t, then mark the arcs of 𝑃3.

Observe that marking can be done in polynomial time by Dijkstra’s algorithm. Denote by L the set of marked arcs. Our final rule constructs the output instance.

Reduction Rule 2
Consider the graph 𝐻=(𝑉(𝐺),𝑆∪𝐿). Delete the isolated vertices of H, and for the obtained 𝐺∗, output (𝐺∗,𝑡,𝑘).

We argue that the rule is safe.

Claim 2
(G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER if and only if (𝐺∗,𝑡,𝑘) is a yes-instance.

Proof of Claim 2
Suppose that (G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER. Then, by Observation 1, there are k distinct arcs 𝑎1,…,𝑎𝑘∈𝑆 with their t-detours 𝑃1,…,𝑃𝑘, respectively, such that 𝑎𝑖∉⋃𝑘𝑗=1𝐴(𝑃𝑗). Notice that 𝑎1,…,𝑎𝑘∈𝐴(𝐺∗). Consider 𝑖∈{1,…,𝑘} and let 𝑎𝑖=(𝑢,𝑣).

Suppose that 𝑃𝑖 does not contain arcs from S. Then 𝑃𝑖 is a (u, v)-path in 𝐺′=𝐺−𝑆. By the first step of Marking Procedure, there is a t-detour 𝑃′𝑖 for 𝑎𝑖 whose arcs are in 𝐺′ and are marked. Then 𝑃′𝑖 is a t-detour for 𝑎𝑖 in 𝐺∗ and 𝑎𝑗∉𝐴(𝑃′𝑖) for 𝑗∈{1,…,𝑘}.

Assume that 𝑃𝑖 contains some arcs from S. Let 𝑒1,…,𝑒𝑠 be these arcs (in the path order with respect to 𝑃𝑖 starting from u). Note that 𝑒1,…,𝑒𝑠∈𝐴(𝐺∗) and they are distinct from 𝑎1,…,𝑎𝑘. Let 𝑒𝑗=(𝑥𝑗,𝑦𝑗) for 𝑗∈{1,…,𝑠}. Then 𝑃𝑖 can be written as the concatenation of the paths 𝑃𝑖=𝑄1∘𝑥1𝑦1∘𝑄2∘⋯∘𝑥𝑠𝑦𝑠∘𝑄𝑠+1, where 𝑄1 is the (𝑢,𝑥1)-subpath of 𝑃𝑖, 𝑄𝑗 is the (𝑦𝑗−1,𝑥𝑗)-subpath of 𝑃𝑖 for 𝑗∈{2,…,𝑠}, and 𝑄𝑠+1 is the (𝑦𝑠,𝑣)-subpath of 𝑃𝑖; note that some of the paths 𝑄1,…,𝑄𝑠+1 may be trivial, i.e., contain a single vertex. We allow trivial paths to make the notation for 𝑃𝑖 uniform. Let 𝑗∈{1,…,𝑠+1}. If 𝑄𝑗 is trivial, then 𝑄′𝑗=𝑄𝑗 is a path in 𝐺∗, because the vertices incident to the arcs of S are vertices of 𝐺∗. Suppose that 𝑄𝑗 is not trivial. If 𝑗=1, then by step (ii)(a) of Marking Procedure, there is a (𝑢,𝑥1)-path 𝑄′1, whose arcs are in 𝐺′ and are marked, and the length of 𝑄′1 is at most the length of 𝑄1. For 𝑗=𝑠+1, we have, by step (ii)(b), that there is a (𝑦𝑠,𝑣)-path 𝑄′𝑠+1, whose arcs are in 𝐺′ and are marked, and the length of 𝑄′𝑠+1 is at most the length of 𝑄𝑠+1. Suppose that 2≤𝑗≤𝑠. Then by step (ii)(c), there is a (𝑦𝑗−1,𝑥𝑗)-path 𝑄′𝑗, whose arcs are in 𝐺′ and are marked, and the length of 𝑄′𝑗 is at most the length of 𝑄𝑗. Consider the (u, v)-walk 𝑊𝑖=𝑄′1∘𝑥1𝑦1∘𝑄′2∘⋯∘𝑥𝑠𝑦𝑠∘𝑄′𝑠+1. We have that 𝑊𝑖 is a (u, v)-walk of length at most t in 𝐺∗ such that 𝑎𝑗∉𝐴(𝑊𝑖) for 𝑗∈{1,…,𝑘}. This implies that 𝐺∗ has a t-detour 𝑃′𝑖 in 𝐺∗ such that 𝑎𝑗∉𝐴(𝑃′𝑖) for 𝑗∈{1,…,𝑘}.

We obtain that for every 𝑖∈{1,…,𝑘}, 𝑎𝑖∈𝐴(𝐺∗) has a t-detour 𝑃′𝑖 such that 𝑎1,…,𝑎𝑘∉𝐴(𝑃′𝑖). By Observation 1, we conclude that 𝐺∗−{𝑎1,…,𝑎𝑘} is a multiplicative spanner for 𝐺∗, that is, (𝐺∗,𝑡,𝑘) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER.

For the opposite direction, assume that (𝐺∗,𝑡,𝑘) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER. By Observation 1, there are k distinct arcs 𝑎1,…,𝑎𝑘∈𝐴(𝐺∗) with their t-detours 𝑃1,…,𝑃𝑘, respectively, such that 𝑎𝑖∉⋃𝑘𝑗=1𝐴(𝑃𝑗). Since 𝐺∗ is a subgraph of G, 𝑎1,…,𝑎𝑘 have the same t-detours in G. By Observation 1, (G, t, k) is a yes-instance. ◻

To upper bound the size of 𝐺∗, observe that Marking Procedure marks at most t arcs for each 𝑎∈𝑆 in step (i), that is, at most |S|t arcs are marked in this step. In step (ii), we mark at most 3t arcs for each ordered pair of arcs of S. Hence, at most 3|𝑆|(|𝑆|−1)𝑡 arcs are marked in total in the second step. Since |𝑆|<12𝑘(𝑡+1)((𝑘−1)𝑡+2), we have that 𝐺∗ has (𝑘4𝑡5) arcs. Because 𝐺∗ has no isolated vertices, the number of vertices is (𝑘4𝑡5).

Since each of the reduction rules and Marking Procedure can be applied in polynomial time, we conclude that the total running time of our kernelization algorithm is polynomial. ◻

𝖥𝖯𝖳 Algorithm for DIRECTED MULTIPLICATIVE SPANNER
Combining Theorem 1 with the brute-force procedure that guesses k arcs of G and verifies whether the deletion of these arcs gives a multiplicative t-spanner, we obtain the straightforward 2(𝑘log(𝑘𝑡))+𝑛(1) algorithm for DIRECTED MULTIPLICATIVE SPANNER. If we use the intermediate steps of the kernelization algorithm, then the running time may be improved (upto some constants in the exponent) to (𝑘𝑡)2𝑘⋅𝑛(1). Namely, we can construct the set S of t-good arcs and execute Reduction Rule 1 of the kernelization algorithm. Then we either solve the problem or obtain an instance, where the set S has size at most 12𝑘(𝑡+1)((𝑘−1)𝑡+2)−1≤𝑘2𝑡2. Then for every 𝑅⊆𝑆 of size k, we check whether 𝐺−𝑅 is a multiplicative t-spanner by computing the distances between every pair of vertices. However, we can slightly improve the parameter dependence by making use of the random separation technique proposed by Cai, Chan, and Chan in [3] (we refer to [5, Chapter 5] for the detailed introduction to the technique). In this subsection, we briefly sketch a Monte Carlo algorithm with false negatives for DIRECTED MULTIPLICATIVE SPANNER.

Theorem 2
DIRECTED MULTIPLICATIVE SPANNER can be solved in time (4𝑡)𝑘⋅𝑛(1) by a Monte Carlo algorithm with false negatives.

Proof
Let (G, t, k) be an instance of DIRECTED MULTIPLICATIVE SPANNER. If 𝑘=0 or 𝑡=1, then the problem is trivial: if 𝑘=0, then (G, t, k) is a yes-instance, and if 𝑘>0 and 𝑡=1, then (G, t, k) is a no-instance. From now we assume that 𝑘≥1 and 𝑡≥2.

By Observation 1, (G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER for (G, t, k) if and only if there are k arcs that have t-detours avoiding these arcs. We use random separation to distinguish the arcs that have t-detours and the arcs of the detours. We randomly color the arcs of G by two colors red and blue. An arc is colored red with probability 1𝑡 and is colored blue with probability 𝑡−1𝑡. Then we try to find k red arcs that have t-detours composed by blue arcs. Let R be the set of arcs colored red and let B the set of blue arcs. For (𝑢,𝑣)∈𝑅, it can be checked in polynomial time whether (u, v) has a t-detour with blue arcs by finding the distance between u and v in 𝐺𝐵=(𝑉(𝐺),𝐵). Then we greedily construct the set S of all red arcs with blue t-detours. If |𝑆|≥𝑘, then we conclude that (G, t, k) is a yes-instance by Observation 1.

Suppose that (G, t, k) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER. Then by Observation 1, there are k distinct arcs 𝑎1,…,𝑎𝑘 and their t-detours 𝑃1,…,𝑃𝑘, respectively, such that 𝑎1,…,𝑎𝑘∉𝐿=⋃𝑘𝑖=1𝐴(𝑃𝑖). Notice that |𝐿|≤𝑡𝑘. Then the probability that the considered random coloring colors the arcs 𝑎1,…,𝑎𝑘 red is 𝑡−𝑘 and the probability that the arcs of L are colored blue is at least (𝑡−1𝑡)𝑡𝑘. We have that

(𝑡−1𝑡)𝑡=(1−1𝑡)𝑡≥14.
Therefore, the probability that the arcs 𝑎1,…,𝑎𝑘 are red and their t-detours are blue is at least (4𝑡)−𝑘. Respectively, the probability that the random coloring fails to color the arcs 𝑎1,…,𝑎𝑘 red and their t-detours blue is at most 1−1(4𝑡)𝑘. This implies that if we iterate our algorithm for (4𝑡)𝑘 colorings, then we either find a solution and stop or we conclude that (G, t, k) is a no-instance with the mistake probability at most (1−1(4𝑡)𝑘)(4𝑡)𝑘≤𝑒−1. This gives us a Monte Carlo algorithm with running time (4𝑡)𝑘⋅𝑛(1). ◻

The same approach can be used for undirected graphs and it can be shown that MULTIPLICATIVE SPANNER can be solved by a Monte Carlo algorithm with false negatives in (4𝑡)𝑘⋅𝑛(1) time. This improves the running time given in [10] at the cost of randomization.

The algorithm from Theorem 2 can be derandomized by using universal sets [15] instead of random colorings (see also  [5, Chapter 5]). However, this leads to an algorithm with worst running time that is not better than (𝑘𝑡)2𝑘⋅𝑛(1).

Directed Multiplicative Spanners on Acyclic Graphs
In this section, we show that WEIGHTED DIRECTED MULTIPLICATIVE SPANNER is 𝖥𝖯𝖳 on DAGs when parameterized by k only. Formally, the problem is stated as follows:

figure c
MULTIPLICATIVE SPANNER is know to be 𝖭𝖯-complete for restricted graph families. However, we are not aware of hardness results for the directed variants of the problem on DAGs. Hence, we begin with showing that DIRECTED MULTIPLICATIVE SPANNER and WEIGHTED DIRECTED MULTIPLICATIVE SPANNER are 𝖭𝖯-hard on DAGs. As we are mainly interested in Parameterized Complexity, we do not try to push down the value of t for which DIRECTED MULTIPLICATIVE SPANNER becomes 𝖭𝖯-hard.

Theorem 3
DIRECTED MULTIPLICATIVE SPANNER is 𝖭𝖯-complete for every 𝑡≥7 on DAGs. Moreover, WEIGHTED DIRECTED MULTIPLICATIVE SPANNER is 𝖭𝖯-hard for every 𝑡>1 when the input is restricted to DAGs.

Fig. 1
figure 1
Construction of D for 𝑡=7

Full size image
Proof
We show the theorem for DIRECTED MULTIPLICATIVE SPANNER and then explain how to modify the reduction for WEIGHTED DIRECTED MULTIPLICATIVE SPANNER. We reduce from the INDEPENDENT SET problem that is well-known to be 𝖭𝖯-complete [9]. Given a graph G and a positive integer k, the problem asks whether G has an independent set of size at least k.

Let (G, k) be an instance of INDEPENDENT SET and let 𝑡≥7 be an integer. Denote by 𝑣1,…,𝑣𝑛 the vertices of G and denote 𝑚=|𝐸(𝐺)|.

For every 𝑖∈{1,…,𝑛}, construct two vertices 𝑥𝑖,𝑦𝑖, an arc (𝑥𝑖,𝑦𝑖), and then construct a directed (𝑥𝑖,𝑦𝑖)-path 𝑅𝑖 of length 𝑡−5.

For every {𝑣𝑖,𝑣𝑗}∈𝐸(𝐺) such that 𝑖<𝑗, do the following:

construct a vertex 𝑧𝑖𝑗 and arcs (𝑦𝑖,𝑧𝑖𝑗) and (𝑧𝑖𝑗,𝑥𝑗),

construct 𝑛+1 vertices 𝑢(0)𝑖𝑗,…,𝑢(𝑛)𝑖𝑗 and 𝑛+1 vertices 𝑤(0)𝑖𝑗,…,𝑤(𝑛)𝑖𝑗,

for every ℎ∈{1,…,𝑛}, construct arcs (𝑢(ℎ)𝑖𝑗,𝑤(ℎ)𝑖𝑗), (𝑢(ℎ)𝑖𝑗,𝑥𝑖), and (𝑦𝑗,𝑤(ℎ)𝑖𝑗), and set 𝐴𝑖𝑗={(𝑢(0)𝑖𝑗,𝑤(0)𝑖𝑗),…,(𝑢(𝑛)𝑖𝑗,𝑤(𝑛)𝑖𝑗)}.

Denote the obtained directed graph by D (see Figure 1). Clearly, D is a DAG. To complete the reduction, we set 𝑘′=𝑚(𝑛+1)+𝑘. Let also 𝐴=⋃(𝑣𝑖,𝑣𝑗)∈𝐸(𝐺), 𝑖<𝑗𝐴𝑖𝑗.

We claim that (G, k) is a yes-instance of INDEPENDENT SET if and only if (𝐷,𝑡,𝑘′) is a yes-instance of DIRECTED MULTIPLICATIVE SPANNER.

For the forward direction, assume that 𝑋={𝑣𝑖1,…,𝑣𝑖𝑘} is an independent set of G. Consider

𝑆={(𝑥𝑖𝑗,𝑦𝑖𝑗)∣1≤𝑗≤𝑘}∪𝐴.
Observe that |𝑆|=𝑘+|𝐴|=𝑘+𝑚(𝑛+1)=𝑘′. We show that 𝐻=𝐷−𝑆 is a multiplicative t-spanner. For this, observe that every arc of S has a t-detour with its arcs in H. For every 𝑗∈{1,…,𝑘}, the path 𝑅𝑖𝑗 is a t-detour for (𝑥𝑖𝑗,𝑦𝑖𝑗). Consider an arbitrary arc 𝑎∈𝐴. Then 𝑎=(𝑢(ℎ)𝑖𝑗,𝑤(ℎ)𝑖𝑗) for some indices 𝑖<𝑗 such that {𝑣𝑖,𝑣𝑗}∈𝐸(𝐺) and some ℎ∈{0,…,𝑛}. Because X is an independent set, either 𝑣𝑖∉𝑋 or 𝑣𝑗∉𝑋. In the first case, 𝑢(ℎ)𝑖𝑗𝑥𝑖𝑦𝑖𝑧𝑖𝑗𝑥𝑗∘𝑅𝑗∘𝑦𝑗𝑤(ℎ)𝑖𝑗 has length t and, therefore, is a t-detour for a. Symmetrically, 𝑢(ℎ)𝑖𝑗𝑥𝑖∘𝑅𝑖∘𝑦𝑖𝑧𝑖𝑗𝑥𝑗𝑦𝑗𝑤(ℎ)𝑖𝑗 is a t-detour if 𝑣𝑗∉𝑋. We conclude that every arc of S has a t-detour in H. Hence, H is a multiplicative t-spanner by Observation 1.

For the opposite direction, assume that H is a multiplicative t-spanner of D with at most |𝐴(𝐷)|−𝑘′ arcs. Let 𝑆=𝐴(𝐷)∖𝐴(𝐻). Recall that every arc of S should have a t-detour in D by Observation 1. Then our construction implies that 𝑆⊆{(𝑥𝑖,𝑦𝑖)∣1≤𝑖≤𝑛}∪𝐴, because only these arcs have detours. Let 𝑆′=𝑆∖𝐴. Because |𝑆|≥𝑘′, |𝑆′|≥𝑘. Let 𝑆′={(𝑥𝑖1,𝑦𝑖1),…,(𝑥𝑖𝑠,𝑦𝑖𝑠)} for some 𝑠≥𝑘. We show that 𝑋={𝑣𝑖1,…,𝑣𝑖𝑠} is an independent set of G. For the sake of contradiction, assume that 𝑣𝑖 and 𝑣𝑗 are adjacent in G for some 𝑣𝑖,𝑣𝑗∈𝑋. Consider an arc (𝑢(ℎ)𝑖𝑗,𝑤(ℎ)𝑖𝑗)∈𝐴𝑖𝑗 for arbitrary ℎ∈{0,…,𝑛}. Notice that every (𝑢(ℎ)𝑖𝑗,𝑤(ℎ)𝑖𝑗)-path P in D avoiding (𝑢(ℎ)𝑖𝑗,𝑤(ℎ)𝑖𝑗) contains the arcs (𝑢(ℎ)𝑖𝑗,𝑥𝑖) and (𝑦𝑗,𝑤(ℎ)𝑖𝑗), the paths 𝑅𝑖 and 𝑅𝑗, and some (𝑦𝑖,𝑥𝑗)-path Q. Clearly, the length of Q is at least 2. Then the length of P is at least 2+2(𝑡−5)+2=𝑡+(𝑡−6)>𝑡, because 𝑡≥7. This implies that (𝑢(ℎ)𝑖𝑗,𝑤(ℎ)𝑖𝑗)∉𝑆. Then 𝐴𝑖𝑗∩𝑆=∅ and |𝐴∩𝑆|≤(𝑚−1)(𝑛+1). Since 𝑠≤𝑛, we obtain that |𝑆|=|𝑆∩𝐴|+|𝑆′|≤(𝑚−1)(𝑛+1)+𝑛<𝑚(𝑛+1)≤𝑘′; a contradiction. This proves that X is an independent set of G and concludes the proof of the theorem for DIRECTED MULTIPLICATIVE SPANNER.

For the second claim, we modify the above reduction. Let (G, k) be an instance of INDEPENDENT SET and let 𝑡′>1. We construct the instance (𝐷,𝜔,𝑡′,𝑘′) of WEIGHTED DIRECTED MULTIPLICATIVE SPANNER as follows. First, we construct D for 𝑡=7 and define 𝑘′ exactly in the same way as above. Then we define the weight function 𝜔(⋅):

𝜔(𝑎)=⎧⎩⎨⎪⎪1+5/𝑡′,𝑡′/2,1, if 𝑎∈𝐴, if 𝑎∈𝐴(𝑅𝑖) for some 𝑖∈{1,…,𝑛}, otherwise .
Then by the essentially the same arguments as above, one can show that (G, k) is a yes-instance of INDEPENDENT SET if and only if (𝐷,𝜔,𝑡′,𝑘′) is a yes-instance of WEIGHTED DIRECTED MULTIPLICATIVE SPANNER. ◻

Now we show the main claim of the subsection that WEIGHTED DIRECTED MULTIPLICATIVE SPANNER is 𝖥𝖯𝖳 on DAGs when parameterized by k only.

Theorem 4
WEIGHTED DIRECTED MULTIPLICATIVE SPANNER can be solved in 𝑘2𝑘⋅𝑛(1) time on DAGs.

Proof
Let (𝐺,𝜔,𝑡,𝑘) be an instance of WEIGHTED DIRECTED MULTIPLICATIVE SPANNER. Consider the set S of arcs of G having t-detours. For every 𝑎∈𝑆, denote by 𝑃𝑎 an arbitrary t-detour for a.

Let 𝑎1,𝑎2∈𝑆 be distinct arcs, and let 𝑎1=(𝑢1,𝑣1) and 𝑎2=(𝑢2,𝑣2). Assume that G has a path P such that 𝑎1,𝑎2∈𝐴(𝑃). We claim that 𝑎2∉𝐴(𝑃𝑎1) and 𝑎1∉𝐴(𝑃𝑎2). To show this, assume that 𝑎1 occurs in P before 𝑎2. Then 𝑢1≺𝑣1⪯𝑢2≺𝑣2 with respect to an arbitrary topological ordering of the vertices of D. Suppose that 𝑎2∈𝐴(𝑃𝑎1). Then 𝑃𝑎1 has the (𝑣2,𝑣1)-subpath Q. However, this contradict that 𝑣1≺𝑣2. Symmetrically, if 𝑎1∈𝐴(𝑃𝑎2), then 𝑃𝑎2 has the (𝑢2,𝑢1)-subpath contradicting that 𝑢1≺𝑢2. This proves the claim.

Using the above claim, we now show that if |𝑆|>𝑘(𝑘−1), then (𝐺,𝜔,𝑡,𝑘) is a yes-instance. If there exists an arc 𝑎∈𝑆 such that the set 𝑆′=𝐴(𝑃𝑎)∩𝑆 contains at least k arcs, then 𝐺−𝑆′ is a multiplicative t-spanner by Observation 1. Indeed, because the arcs of 𝑆′ are on the same path 𝑃𝑎, the detours 𝑃𝑒 for 𝑒∈𝑆′ do not contain any arc of 𝑆′ from the previous claim. In the other case, |𝐴(𝑃𝑎)∩𝑆|≤𝑘−1 for every 𝑎∈𝑆. Clearly, |(𝐴(𝑃𝑎)∪{𝑎})∩𝑆|≤𝑘 for every 𝑎∈𝑆. Then because |𝑆|>𝑘(𝑘−1), we can greedily select k distinct arcs 𝑎1,…,𝑎𝑘∈𝑆 such that the sets (𝐴(𝑃𝑎𝑖)∪{𝑎𝑖})∩𝑆 for 𝑖∈{1,…,𝑘} are disjoint. We choose 𝑎1∈𝑆 arbitrarily. Let 2≤𝑖≤𝑘 and assume that 𝑎1,…,𝑎𝑖−1 are selected. Because |𝑆|>𝑘(𝑘−1) and |(𝐴(𝑃𝑎𝑗)∪{𝑎𝑗})∩𝑆|≤𝑘 for every 𝑗∈{1,…,𝑖−1}, we have that |𝑆∖⋃𝑖−1𝑗=1(𝐴(𝑃𝑎𝑗)∪{𝑎𝑗})|>𝑘(𝑘−1)−𝑘(𝑖−1)≥0. Then we arbitrary choose 𝑎𝑖∈𝑆∖⋃𝑖−1𝑗=1(𝐴(𝑃𝑎𝑗)∪{𝑎𝑗}). This way we construct 𝑎1,…,𝑎𝑘. Then we conclude that 𝐺−{𝑎1,…,𝑎𝑘} is a multiplicative t-spanner from Observation 1.

This leads to the following algorithm for WEIGHTED DIRECTED MULTIPLICATIVE SPANNER. First, we construct S. Clearly, it can be done in polynomial time by Dijkstra’s algorithm. If |𝑆|>𝑘(𝑘−1), then we return the answer yes. Otherwise, we consider all subsets 𝑅⊆𝑆 of size k, and for each R, we check whether 𝐺−𝑅 is a multiplicative t-spanner. This can be done by making use of Observation 1 and the Dijkstra’s algorithm. The algorithm returns yes if 𝐺−𝑅 is a multiplicative t-spanner. We return no if we fail to find a spanner this way. Since there are at most (𝑘(𝑘−1)𝑘) sets R, the algorithm runs in 𝑘2𝑘⋅𝑛(1) time. This concludes the proof. ◻

Note that unlike DIRECTED MULTIPLICATIVE SPANNER, the arguments of Theorem 4 do not yield a kernel because even though the weight of t-detours of the arcs of S is bounded, their lengths could be very long because the weights are real numbers.

Directed Additive t-spanners
In this section, we consider DIRECTED ADDITIVE SPANNER and show that the problem is hard on DAGs for every 𝑡≥1.

Theorem 5
DIRECTED ADDITIVE SPANNER is 𝖶[1]-hard on DAGs when parameterized by k for every 𝑡≥1.

Fig. 2
figure 2
Construction of D for 𝑡=1

Full size image
Proof
We reduce from the INDEPENDENT SET problem. Recall that, given a graph G and a positive integer k, the problem asks whether G has an independent set of size at least k. INDEPENDENT SET parameterized k is well-known to be one of the basic 𝖶[1]-complete problems (see [5, 6]).

Let (G, k) be an instance of INDEPENDENT SET and let t be a positive integer. Denote by 𝑣1,…,𝑣𝑛 the vertices of G.

For every 𝑖∈{1,…,𝑛}, construct two vertices 𝑥𝑖,𝑦𝑖, an arc (𝑥𝑖,𝑦𝑖), and then construct a directed (𝑥𝑖,𝑦𝑖)-path 𝑅𝑖 of length 𝑡+1.

For every 𝑖,𝑗∈{1,…,𝑛} such that 𝑖<𝑗, do the following:

if {𝑣𝑖,𝑣𝑗}∈𝐸(𝐺), then construct a directed (𝑦𝑖,𝑥𝑗)-path 𝑃𝑖𝑗 of length 𝑡+3,

if {𝑣𝑖,𝑣𝑗}∉𝐸(𝐺), then construct a directed (𝑥𝑖,𝑦𝑗)-path 𝑄𝑖𝑗 of length 𝑡+3.

Denote the obtained directed graph by D (see Figure 2). It is straightforward to verify that D is a DAG. We show that (G, k) is a yes-instance of INDEPENDENT SET if and only if (D, t, k) is a yes-instance of DIRECTED ADDITIVE SPANNER.

Suppose that 𝐼={𝑣𝑖1,…,𝑣𝑖𝑘} is an independent set of size k in G. Let 𝑆={(𝑥𝑖1,𝑦𝑖1),…,(𝑥𝑖𝑘,𝑦𝑖𝑘)}. We show that 𝐷′=𝐷−𝑆 is an additive t-spanner for D.

We first claim that for every two vertices u and w of D, each shortest (u, w)-path in D contains at most one arc of S. The proof is by contradiction. Assume that there are 𝑢,𝑤∈𝑉(𝐷) and a shortest (u, w)-path P such that P contains at least two arcs of S. Let (𝑥𝑖,𝑦𝑖) and (𝑥𝑗,𝑦𝑗) be such arcs and let 𝑖<𝑗. By the construction, (𝑥𝑖,𝑦𝑖) occurs before (𝑥𝑗,𝑦𝑗) in P. Since the arcs of S correspond to vertices of the independent set I, 𝑣𝑖 and 𝑣𝑗 are not adjacent in G. Therefore, D contains the (𝑥𝑖,𝑦𝑗)-path 𝑄𝑖𝑗 of length 𝑡+3. Since P is a shortest path containing (𝑥𝑖,𝑦𝑖) and (𝑥𝑗,𝑦𝑗), the (𝑦𝑖,𝑥𝑗)-subpath of P should have length at most 𝑡+1. However, by the construction, the distance between 𝑦𝑖 and 𝑥𝑗 is at least 𝑡+3; a contradiction proving the claim.

Now let u and w be two vertices of D. Let P be a shortest (u, w)-path in D. If P is a path in 𝐷′, then dist𝐷′(𝑢,𝑤)=dist𝐷(𝑢,𝑤). Suppose that P is not a path in 𝐷′. Then P contains a unique arc (𝑥𝑖,𝑦𝑖)∈𝑆 by the proved claim. Let 𝑃1 be the (𝑢,𝑥𝑖)-subpath of P and let 𝑃2 be the (𝑦𝑖,𝑤)-subpath. Let 𝑃′=𝑃1∘𝑅𝑖∘𝑃2. Observe that 𝑃′ is a path in 𝐷′. Since the length of 𝑃′ is the length of P plus the length of 𝑅𝑖, that is, 𝑡+1, dist𝐷′(𝑢,𝑤)≤dist𝐷(𝑢,𝑤)+𝑡. This implies that 𝐷′ is an additive t-spanner of D.

Now we assume that (D, t, k) is a yes-instance of DIRECTED ADDITIVE SPANNER. Then there is a set of k arcs 𝑆⊆𝐴(𝐷) such that 𝐷′=𝐷−𝑆 is an additive t-spanner. Observe that if (𝑢,𝑣)∈𝑆, then D has an (u, v)-path P that does not use the arc (u, v). Otherwise, dist𝐷′(𝑢,𝑣)=+∞ and dist𝐷′(𝑢,𝑣)>dist𝐷(𝑢,𝑣)+𝑡. Therefore, 𝑆⊆{(𝑥1,𝑦1),…,(𝑥𝑛,𝑦𝑛)}. Let 𝑆={(𝑥𝑖1,𝑦𝑖1),…,(𝑥𝑖𝑘,𝑦𝑖𝑘)}. We claim that 𝐼={𝑣𝑖1,…,𝑣𝑖𝑘} is an independent set of G. Assume, for the sake of contradiction, that this is not the case and there are 𝑣𝑖,𝑣𝑗∈𝐼 such that 𝑣𝑖 and 𝑣𝑗 are adjacent in G. Let 𝑖<𝑗. Consider the vertices 𝑥𝑖 and 𝑦𝑗 of D. Since {𝑣𝑖,𝑣𝑗}∈𝐸(𝐺), 𝑃=𝑥𝑖𝑦𝑖∘𝑃𝑖𝑗∘𝑥𝑗𝑦𝑗 is an (𝑥𝑖,𝑦𝑗)-path of length 𝑡+5, that is, dist𝐷(𝑥𝑖,𝑦𝑗)≤𝑡+5. The path 𝑃′=𝑅𝑖∘𝑃𝑖𝑗∘𝑅𝑗 has length 3𝑡+5 and is a path in 𝐷′. Any other (𝑥𝑖,𝑦𝑗)-path in 𝐷′ uses at least two paths of length 𝑡+3: one of the paths 𝑃𝑖𝑖′ and 𝑄𝑖𝑖′ for some 𝑖′∈{1,…,𝑛} such that 𝑖′≠𝑗, and one of the paths 𝑃𝑗′𝑗 and 𝑄𝑗′𝑗 for some 𝑗′∈{1,…,𝑛} such that 𝑗′≠𝑖. This means that dist𝐷′(𝑥𝑖,𝑦𝑗)≥2(𝑡+3)>(𝑡+5)+𝑡≥dist𝐷(𝑥𝑖,𝑦𝑗)+𝑡 contradicting that 𝐷′ is an additive t-spanner. We conclude that I is an independent set of G and, therefore, (G, k) is a yes-instance of INDEPENDENT SET. ◻

Conclusion
We proved that DIRECTED MULTIPLICATIVE SPANNER admits a kernel of size (𝑘4𝑡5) and can be solved in (4𝑡)𝑘⋅𝑛(1) randomized time. We also demonstrated that (WEIGHTED) DIRECTED MULTIPLICATIVE SPANNER is 𝖭𝖯-complete on DAGs and can be solved in 𝑘2𝑘⋅𝑛(1) on this class of directed graphs. This leads to the question whether MULTIPLICATIVE SPANNER is FPT on general graphs when parameterized by k only for both undirected and directed cases. Also, is the weighted version of MULTIPLICATIVE SPANNER 𝖥𝖯𝖳 when parameterized by k and t on general graphs? Again, this question is open for both undirected and directed graphs.

Further we proved that DIRECTED ADDITIVE SPANNER is 𝖶[1]-hard for every fixed 𝑡≥1 even if the input graphs are restricted to DAGs. This result leads to the question whether DIRECTED ADDITIVE SPANNER is tractable on some special classes of directed graphs, like planar directed graphs. We believe that this problem may be interesting even if the distortion parameter t is assumed to be a constant.

Another possible direction of research is considering different types of directed graph spanners. For example, what can be said about the roundtrips spanners introduced by Roditty, Thorup, and Zwick [18]? A spanning subgraph H of a directed graph G is a multiplicative t-roundtrip-spanner if for every two vertices u and v, dist𝐻(𝑢,𝑣)+dist𝐻(𝑣,𝑢)≤𝑡(dist𝐺(𝑢,𝑣)+dist𝐺(𝑣,𝑢)), that is, H approximates the sum of the distances between any two vertices in both directions. Is the analog of DIRECTED MULTIPLICATIVE SPANNER for roundtrip spanners 𝖥𝖯𝖳? Notice that we cannot use Observation 1 that is crucial for our results for the new problem. Consider, for example, the directed graph G constructed as follows: construct two vertices u and v and an arc (u, v), and then add a (u, v)-path 𝑃1 and a (v, u)-path 𝑃2 of arbitrary length ℓ≥2 that are internally vertex disjoint. Then it is easy to see that 𝐻=𝐺−(𝑢,𝑣) is a 2-roundtrip spanner for G. However, H has no short detour for (u, v). It is also possible to define additive t-roundtrip-spanners and consider the analog of DIRECTED ADDITIVE SPANNER. We conjecture that this problem is at least as hard as DIRECTED ADDITIVE SPANNER.