The Internet of Things (IoT) is about innovative functionality and better productivity by seamlessly connecting devices. But a major threat is the lack of architecture standards for the industrial Internet and connectivity in the IoT. This article reviews recent IoT architecture evolution and what it means for industry projects.
IMAGINE BEING the engineering head of an automotive-engine manufacturer. Having been making engines over the past decades, your company knows them inside and out. But engines are changing quickly-too fast for many in your company, be it in manufacturing, repair, or service. First, embedded electronics made your engines anything but mechanical. Then, the engines became increasingly connected to other electronic systems in the car. Suddenly there is an explosion of technological opportunities and challenges. You need a device cloud for different configurations and their updates, integration and test capabilities to handle the state explosion of your systems, security skills to keep the machines in a defined mode and thus safe for the public, new tablet applications for diagnosis and repair, connectivity to enterprise-resource-planning systems, and big-data analytics to support engineering and maintenance throughout the life cycle.

The upside is obvious. Knowing typical user needs and orchestrating them in the products and work flows in real time creates a wealth of value:

Flexibility. Products can autonomously adapt to usage scenarios such as assisted living, intelligent buildings, smart transportation, energy, healthcare, transportation, or entire supply chains.

Usability. Even complex products can be operated more easily, thus improving the user experience while mitigating hazards.

Productivity. Service extends toward predictive maintenance and proactive enhancements, improving uptime and thus productivity.

The Internet of Things (IoT) will boost a tremendous amount of innovation, efficiency, and quality. Connecting production, medical, automotive, or transportation systems with IT systems and business-critical information will provide tremendous value to organizations. Major IT companies such as Cisco and SAP have predicted billions of networked devices and a universe of IT-based business services, with expectations of a trillion-dollar business.[1], [2]

But who in your company understands the combined software and IT needs and necessary architectures and technology stack? Not many. Business leaders know the value chain but don't bother about technology. Manufacturing shies away when confronted with software technology. IT departments tend to overlook in their big and distant perspective that there are real products and customers. Engineering departments focus on system development and embedded electronics, and consider IT one of those big things that never work as expected. IoT architecture and modeling solutions must connect heterogeneous communities to understand and work together.

Software engineering for the IoT poses challenges in light of new applications, devices, and services. Mobility, user-centric development, smart devices, e-services, ambient environments, e-health, and wearable or even implantable devices pose specific challenges for specifying software requirements and developing reliable, safe software. Specific software interfaces, agile organization’ and software dependability require particular approaches for security, maintainability, and sustainability. Reference architectures for the IoT aim to help developers meet these challenges.

A Brief History of the IoT
The term “Internet of Things” was first used in 1999 by Kevin Ashton, who worked on a standard for tag-ging objects using RFID for logistics applications. However, the idea of ubiquitous computing goes back to the late 1980s. Since then, researchers have worked on many systems focusing on tags and sensor networks, middleware and cloud technologies, and communication networks.

A highly visible milestone was reached when the Internet Engineering Task Force released IPv6, the protocol that enables the IoT. Recently, the IoT has received a boost from commercial engagement and work on reference architectures driven by the major industries:

Google has announced Brillo as an OS for IoT devices in smart homes.

Devices are commercially available for machine-to-machine (M2M) communication standards such as Bluetooth, ZigBee, IPC Global's standards, and low-power Wi-Fi.

Microsoft has announced that Windows 10 will support embedded systems for widespread micro controllers such as Raspberry Pi 2.

Samsung and other companies have announced a new generation of chips for smart devices.

Many implementation reports have described networked microcontrollers serving as hubs for sensors, actuators, and tagging.

Two alternative names are used for the IoT: Industrial Internet in North America and Industry 4.0 in Europe. However, the preferred name seems to be the Internet of Things.

IoT Architecture and Model Evolution
So far, IoT applications have been based on fragmented software implementations for specific systems and use cases. The big need for reference architectures in industry has become tangible with the fast-growing number of initiatives working toward standardized architectures. These initiatives aim to facilitate interoperability, simplify development, and ease implementation. Table 1 gives a brief overview of them.

For example, the Reference Architecture Model Industrie 4.0 (RAMI 4.0) goes beyond the IoT, adding manufacturing and logistics details. The Industrial Internet

The loT has become the major disruptive technology changing software-and society.
Reference Architecture (IIRA) has a strong industry focus. The Internet of Things-Architecture (loT-A) provides a detailed view of the loT's information technology aspects. Major standardization is happening in M2M communication, employing efficient, scalable, and secure communication stacks. This standardization is based on a modified Open Systems Interconnection (OSI) stack and proposes specifications for the

Table 1 Internet of things (IoT) reference architectures are evolving in close collaboration between research and industry.
Table 1- Internet of things (IoT) reference architectures are evolving in close collaboration between research and industry.
What are Reference Architectures About?
Identifying and structuring an architecture or model is a long, tedious process with much negotiation to abstract from specific needs and technologies. Such a reference can serve as an overall, generic guideline; not all domain applications will require each detail for real-life implementation.

Nevertheless, the requirements are easy to grasp:

Connectivity and communications are important. This might involve one-to-one connectivity (unicast) or data collection and information dissemination to multiple partners (multicast and anycast).

Device management must provide solutions once a device is added or a device configuration changes and must be propagated to other devices.

Data collection, analysis, and actuation are relevant for extracting information and knowledge for offering services.

Scalability is important to handle increased processing volumes for different installation sizes.

Security features are necessary to provide trust and privacy and are required for all aspects of the IoT.

An Io'T reference architecture handles those requirements and forms a superset of functionalities, information structures, and mechanisms. Additional consideration of entities and their interaction leads to a reference model. Such a model integrates aspects of the related enti-ties such as human users, device implementations, and server structures and provides a more complete view of, or templates for, the overall setup and its domain implementation. Both the architecture and model help describe and map technologies to business cases.

Available Architectures
Two major architectures are available: the IoT-A and IIRA. Both architecture proposals have been thoroughly prepared, but the IoT-A has been described in detail and extended. Since its 2012 launch, it has been synchronized with the Io'T community and incorporates multiple views. In contrast, the IIRA still aims for feedback and further detailing.

We now compare these architectures regarding their capabilities and layers according to three perspectives.[3]

The first perspective is semantic orientation-the interpretation of data and information to create knowledge for business cases. The IoT-A concentrates on the generic aspects of informatics instead of the application facets of semantics. In contrast, the IIRA focuses on the functionality of the industry domain, such as business, operations (prognostics, monitoring, optimization, and so on), information (analytics and data), and application (UIs, APIs, logic, and rules). RAMI 4.0, which is domain specific, extends the view of the IIRA toward the life cycle and value streams of manufacturing applications.[4] In particular, it enhances the functional-layer structure by two dimensions-the life cycle and value stream-as well as by hierarchy levels (for further details, see International Electrotechnical Commission [IEC] stan-dards 62890, 62264, and 61512).

The second perspective is Internet orientation and has two aspects. The first is middleware for service support and data management in the cloud and servers. The IoT-A extensively covers the modeling and structuring of IoT business process management, virtual entities, IoT services, and cross-service organization from the functional, information, and domain viewpoints, in an abstract manner. Cloud aspects, in the sense of the server-side architecture and its management, are defined by the implementation. The same applies to agents and code on domain-specific devices. The IIRA also focuses on these aspects but remains closer to business and use cases.

The second aspect is networking, transport, and data links. Both architectures briefly regard these things but refer mostly to M2M communication to cover the OSI stack's lower layers. For instance, the network layer could be implemented by IPv6, whereas network and transport could be based on UDP (User Datagram Prototcol) and CoAP (Constrained Application Protocol). Alternative realizations might employ the lightweight protocol MQTT, which could be used on top of TCP/IP instead of HTTP.

The third perspective is things orientation, which centers on assets such as sensors, actuators, and tags, which are crucial in both the IoT-A and IIRA. This is the classic approach for the automation industry, which tries to define bottom-up a reference around tangible objects and their individual data sources and information needs.

Both architectures have management and security mechanisms across all layers. The architecture proposals help define and explain

Table 2 IoT architectural layers and protocols structured in three perspectives.

the IoT's overall structure. They provide descriptive models of how IoT devices and humans interact and process data, incorporating patterns of M2M communication standards. These models have different perspectives and granularities in describing IoT. Table 2 shows the most recent architectural layers and protocols.
Deployment Hurdles
The IoT is rich in approaches, concepts, and structures. Various initiatives have already delivered IoT models, architectures, and tools. However, a further convergence of approaches and industrial standards is required for simplification. This raises issues about the key IoT enablers.

One key enabler is efficient, secure communication. Many technologies exist to implement the communication stack. Low-power wireless networks that require little implementation effort are necessary, for which security is an important factor.

Device hardware suitable for implementing the IoT is readily available. However, it's questionable whether device-oriented, real-time networked OSs will ever exist for the different application domains or whether the diversity of real-time OSs will continue.

Logic controllers, cyclic or event-based, have been extensively discussed and standardized. Typical use cases have been identified, and solutions are available, which could be reconsidered and adopted for the IoT. Conversely, the industrial-automation community might profit from new development kits for the IoT.

Finally, big-data analytics and the human-machine interface form the front end for users and are close to the business case. Owing to applications' individual characteristics, not much standardization is available yet. However, a first step toward standardization could be semantic description. Standardized languages such as Vorto or Weave are important to describe devices, parameters, user interfaces, and so on.

The IoT has become the major disruptive technology changing software-and society. Businesses, cities, and even countries must now start on this networked digitization. But focusing only on networking isn't enough. Networking depends on the software that collects the information, and that software must be designed for the IoT's unique needs. Now is the time for software and industry leaders to agree on standards and thus avoid systems that are crippled because they can't talk with each other.