This instalment of the Software Technology department discusses how the digital transformation is affecting software technology and the software industry.
From the Editor
Digital transformation is a technology-driven continuous change process of companies and our entire society. Its cornerstone is ubiquitous embedded computing, connectivity, and flexible value streams. Obviously, there's no digital transformation without software. But what are the underlying platforms? What lessons can we take from actual projects? In this instalment of Software Technology, Carlos Duarte and I highlight lessons learned from transformation projects and the underlying technologies and platforms. I look forward to feedback from both readers and prospective article authors. —Christof Ebert

Digital Transformation (DX) is about adopting disruptive technologies to increase productivity, value creation, and the social welfare. Many national governments, multilateral organizations, and industry associations have produced strategic-foresight studies to ground their long-term policies. By proposing the implementation of public policies regarding DX, such groups expect to achieve the goals listed in Table 1.

DX is forecasted to have high annual growth and fast penctrarion.1–[2]3 But there are barriers slowing its dissemination, such inadequate or overly heterogeneous company structures or cultures, the lack of DX strategies and ROI (return on investment) visibility, and even the perception of cannibalization of existing businesses (the “innovator's dilemma”4). External barriers also exist, such as the lack of recognition of how DX will benefit all of society, a shortage of skills and a qualified labor force, lacking or insufficient infrastructure, missing or inadequate regulation and consumer protection, and poor access to funding, particularly for small and medium businesses.

The Industry Perspective on DX
Industry is moving to adopt holistic business models, completely redesign products and services, and establish closer interactions with suppliers and long-term partnerships with customers.5, 6 The widespread implementation of DX will profoundly affect the industry business environment— for example, by providing better value-chain integration and newmarket exploitation, with competitive-advantage gains.

DX is driven by a flood of software technologies. Embedded electronics such as microdevices with sensors and actuators connected through the IoT facilitate ubiquity. Data analytics, cloud storage and services, convergent interactivity and cognition, augmented reality with visualization and simulation, pattern recognition, machine learning, and AI are facilitating a convergence of IT and embedded systems.2, 5 Underlying these, we've identified enabling methods, techniques, and tools, such as agile development for flexible systems, blockchains and Hyperledger to ensure security and trust in distributed transactions, and micro-services and open APIs supporting software architectures.

Let's look at automotive technologies, where digitization is ramping up fast. A modern car incorporates 50 to 120 embedded microcontrollers and is connected over various external interfaces to a variety of cloud and infotainment technologies. Onboard software is in the range of hundreds of millions of lines of code (MLOC) and is still growing exponentially. Automotive software product lines and variants are some of the largest and most complex in industry. It's said that the automobile is rapidly becoming a “computer on wheels.”

Automotive original-equipment manufacturers (OEMs) are equipping next-generation production processes and vehicles with connected embedded sensors and actuators to obtain better intelligence and control. They adapt information and communication technology workflows from their IT systems to each car. Vertical integration is attained by ensuring that product-lifecycle-management systems, enterprise-resource-planning systems, production-planning-and-control systems, and manufacturing-execution systems work in coordination with capital goods on plant floors. Concerning horizontal integration, vehicle parts are delivered with RFID tags to guarantee production traceability.

OEMs work with suppliers that have the same focus, to ensure that the acquired parts come with self-or distance-monitoring facilities. Examples include highly interconnected electronic control units from companies such as Bosch, Continental, Denso and ZF; mechatronic systems from Aptiv, Magna, Mahle, and Schaeffler; and head units and infotainment systems from companies such as Harman, Valeo, Panasonic, and Visteon. In factories, robots from ABB, Denso, Kuka, and Yaskawa assemble complete vehicles from parts with exact monitoring and logging of, for example, screw load torque to ensure compliance with production and safety standards. All software is individually configured for each car by modern IT systems, both in production and after sales with over-the-air upgrades. These movements toward a digital automobile world have already rationalized costs and investments. For example, according to David Powels, former CEO of Volk-swagen's Latin American operations, in the three-year period ending in 2016, the group obtained 30 percent productivity gains in some factories, with a focus on digital process and competencies.7

Table 1. Digital transformation (DX) goals.
Table 1.- Digital transformation (DX) goals.
Other industries are following fast toward DX. Vivo, a company in the Spanish Telefonica group, is adopting the agile-squad model and open innovation as the bases of its DX implementation. The company developed a social software robot called Vivi, which helps customers formulate requests. Ten million sessions have already been opened, and 94 percent of them have been solved in an automated way.

Hospital Samaritano and Hospital Sírio-Libanês, two leading São Paulo institutions, have consistently invested in DX to improve the patient experience and operational performance. Both keep integrated secure electronic health records of patients, which are used in procedures, treatments, prevention, and healthcare planning and decisions.

DX Impacts
DX has been a source of continuous entrepreneurship and business dynamism, particularly in technology-intensive industries. These companies have reorganized themselves to operate simultaneously in two distinct modes. The standard mode keeps traditional businesses and operations running, while a disruptive mode seeks additional opportunities to exploit new markets and innovate in technologies, processes, products, or services. Figure 1 illustrates that value is now created not only in traditional ways (the yellow arrows) but also through digitization (the green arrows).

Figure 1. - Digital transformation is a convergence of hard and soft forces and movements from which additional value emerges. Value is now created not only in traditional ways (the yellow arrows) but also through digitization (the green arrows).
Figure 1.
Digital transformation is a convergence of hard and soft forces and movements from which additional value emerges. Value is now created not only in traditional ways (the yellow arrows) but also through digitization (the green arrows).

Show All

Software technology today is both the driver and effect of disruption. The market leaders are ahead of their competitors because they develop and commercialize new technologies to address customers' future performance needs. However, these companies don't want to cannibalize their current cash cows. So, they're rarely in the forefront of commercializing new technologies that don't initially meet the needs of mainstream customers and that appeal to only small or emerging markets.

So, disruptive companies explore the occupation gaps left by the market leaders. This is a source of innovation and market change, which Clayton Christensen illustrated using price and performance data from the hard-disk-drive industry.4

We performed a systematic classification of the DX technology offerings; Table 2 presents some details. Although we haven't compiled quantitative evidence of the disruptions caused by the analyzed hardware technologies, Organisation for Economic Co-operation and Development studies have recognized that robots, 3D printing, and connected devices have disrupted productivity in their respective markets.1, 2, 5

Likewise, some of the software technologies we studied have been disruptive, but this is due only to their strategic significance, resulting from their penetration, adoption, and perceived value in distinct market segments vis-à-vis the initial markets. Finally, the remaining software technologies we studied can't be considered disruptive because they haven't obtained value recognition outside their initial markets (and therefore aren't included in Table 2). We structured our findings in the form of a knowledge map,6, 8 but here we presented just some branches in textual, pictorial, and tabular form. We hope this compilation will help software engineering (SE) practitioners and researchers develop and implement DX.

The Mutual Influences of DX and SE
With software being key to any DX, mutual influences between DX and SE must exist. But DX disruptions due to SE innovations might emerge at any time and are almost impossible to predict. So, we can only speculate about the implications for SE.

To perform initial verification and validation of our ideas, we organized a debate panel during the 2016 IEEE Requirements Engineering Confercnce.5 During the panel, researchers and practitioners discussed the impact and relationship of requirements engineering and DX in industry and research institutions. The panelists came from companies such as Intel (US), Nokia (Finland), Denso (Japan), Civic (China), and CI&T (Brazil).

The participants agreed that software technologies at the core of DX disruptions have been around for some time. These technologies have caused disruptions because of

early or timely value delivery (agile methods),

usage at larger scales (APIs, microservices, and IPv6),

applications in new domains (3D modeling and printing, control software, and blockchains), and

unpredicted technology combinations (cognitive computing, which combines computer vision, voice recognition, natural-language processing, and machine learning).

So, DX has not led to the development of radically new software technologies. Instead, it has given rise to new software technology applications, owing to the additional requirements that must be satisfied.

Technological solutions' complexity and scale have increased substantially, leading to software systems with many MLOC, usually binding together old and new, in-house and third-party developments. However, the industry objectives for DX—an improved customer experience and operational excellence—have placed time to market, quality, and affordability at the forefront. So, practical DX problems have become tractable with software only with effective development management, reusability, and requirements-engineering methods, techniques, and tools.

The SE branches we've described have many interfaces, which deal with unproven metrics, hard complexity bottlenecks, and imprecise artifacts. The human factor is central to addressing these issues, but the required key competences for problem solving, managing complexity, and dealing with high abstraction levels are often lacking or insufficient.

Table 2. DX technologies.
Table 2.- DX technologies.
Digital Transformation and Systems Engineering
Christof Ebert

At Vector Consulting Services, we've supported many companies in their journey toward digital transformation (DX), with both software technologies and the necessary agile business and development techniques. One key observation from projects is the fast-growing relevance of requirements engineering and systems engineering.

Requirements engineering, in its link with systems engineering, is the decisive success factor for the efficient development of hardware and software systems. Agile systems engineering supports the continuous development of requirements up to validation. It creates understanding of critical dependencies and provides methodological support to address growing complexity. Because systems engineering provides an increased number of abstraction levels and consistent handling of dependencies across a system, specifications become clearer, simpler, and less redundant. This not only increases development speed but also ensures clearly understood domain concepts in a project.

Systems engineering for DX includes

cloud services for environment awareness, location-based services, online apps, remote diagnosis, continuous software updates, and emergency functions;

cybersecurity, usability, and performance for modern software systems;

service-oriented advanced OSs with secure communication platforms;

machine learning and Al—for instance, in multisensor fusion, picture recognition, and data analytics for automated processes such as autonomous driving, medical-surgery support, and industry-scale predictive maintenance; and

system-level modeling, testing, and simulation with models in the loop, and ensuring quality requirements such as safety.

As complexity and scale increase, quality must be ensured end-to-end at the system level. This demands professional methods and tools to ensure robustness, dependability, functional safety, cybersecurity, and usability. Security and robustness tremendously affect business models and potential liability. The more we share and network, the more we're exposed to attacks of all kinds. Usability is an interesting example of how quality factors are increasingly crucial. Across industries and applications, insufficient usability is a major source of hazards, operational failures, and critical failures.

Because quality, deadlines, and cost are pivotal across industries, the push for even better processes and project management is continuing at a fast pace. The demand for more agility and flexibility is rising. System users expect the same adaptive behaviors and continuous-delivery models that they have with their mobile devices. Rapid advances toward autonomous driving and open vehicle communication demand short-cycle recertification after over-the-air software updates. We've observed that only novel development paradigms such as service-oriented architecture can cope with the growing need for flexibility.

DX requires software engineers to organize their work efficiently, act on their own initiative, have excellent communication skills, and successfully perform tasks involving emotion, intuition, creativity, judgment, trust, empathy, and ethics.2

At higher organizational levels, SE managers are expected to change their mind-sets and abandon command and control, moving to more leadership-oriented, risk-taking, and mistake-tolerant approaches. Corporate leaders need to motivate, direct, support, and inspire their autonomous teams, while learning along with them. They must be prepared to face business environments in which hyperawareness, informed decision making, and fast execution rule.

How can people obtain such skills? DX challenges traditional SE education systems to change their methods and content to a digitally transformed reality. Apart from the classroom and learning-by-doing approaches, continuous, just-in-time, and innovative learning methods— such as massive open online courses, gamification, and simulation— will be increasingly demanded.

To meet DX demands, SE will transform completely, leading to changes in how SE education treats human factors. In this new scenario, human resources will be extremely valuable, possibly becoming more important than the underlying technologies.

DX today is the megatrend across industries. However, DX is challenging because it demands a new set of competences, combining embedded-systems development with IT and cybersecurity. Software thus is the cornerstone of DX. In its convergence of classic IT with embedded-systems engineering, DX will completely reshape the landscape of software technologies and processes. (For more on DX and systems engineering, see the sidebar.)

With industry, home, healthcare, and automotive applications being major drivers, IT will converge with embedded systems such as the IoT and Industry 4.0. At the same time, embedded industries will evolve toward IT with cloud solutions and dynamic over-the-air upgrades. Critical industries such as the automotive industry involve practically all the quality requirements, such as safety, cybersecurity, usability, performance, and adaptability. The underlying software components cover anything from embedded real-time firmware to complex secured cloud solutions. Failure to meet any of those quality requirements results in expensive callback actions and legal lawsuits. These challenges will soon reach across industries.

DX is opening the doors for technology innovation, new business models, and cross-industry collaboration. The future is arriving while some are just running in their hamster wheels. Thus, we should be cautious, along the lines of what technology strategist Herman Kahn already observed several decades ago: “Everybody can learn from the past. Today it's important to learn from the future.”9