The transfer of IT and consumer-electronics technologies to the automotive domain will provide major opportunities. However, both these technologies and the automotive industry will require much adaptation. Architectures for automotive electronics are quickly changing. Energy efficiency is evolving the classic powertrain toward high-voltage hybrid and electric engines. Autonomous driving demands multisensor fusion away from functionally isolated control units. Connectivity and infotainment have transformed the car into a distributed IT system with cloud access; over-the-air functional upgrades; and high-bandwidth access to map services, media content, other vehicles, and the surrounding infrastructure.
Architectures for automotive electronics are quickly changing. Energy efficiency is evolving the classic powertrain toward highvoltage hybrid and electric engines. Autonomous driving demands multisensor fusion away from functionally isolated control units. Connectivity and infotainment have transformed the car into a distributed IT system with cloud access: over-the-air functional upgrades: and high-bandwidth access to map services, media content, other vehicles, and the surrounding infrastructure. Here, Matthias Traub, Alexander Maier, and Kai Barbehön of BMW outline the evolution of automotive electronics and IT. I look forward to hearing from both readers and prospective column authors. —Christof Ebert

Digitalization is creating opportunities that will change our understanding of mobility. The automobile as part of the networked world will not only offer new possibilities for informing and entertaining customers but also lead the way by increasing the automation of comfort and assistance functions, moving toward autonomous vehicles.

These innovations will require an ever-faster increase in electronics, software, and communication capabilities. Both the physical architecture and the functional electrical and electronic (E/E) architecture will be the keys to managing the growing complexity. Software quality, remote software updates, the integration of different manufacturers' software, in-house software development, and security will become critical success factors, as will higher data rates, support for various data formats, gateway concepts, fail-operational support, and energy efficiency.

Here, we discuss the major opportunities resulting from transferring IT and consumer-electronics technologies to the automotive domain. For each opportunity, we show the current status and the benefits it could provide.

Opportunities for the Automotive Industry
Players from the digital world (for example, Google, Apple, and Amazon) are showing us opportunities and solutions that we can adapt to the automotive domain.

One approach to such solutions is service-oriented architecture (SOA), including the OS (for example, Apple's iOS). This approach lets developers create efficient new functions (apps) that can be easily integrated in the whole ecosystem of a device (for example, the iPhone). This seamless integration of new functions can help provide personalization for each user. Furthermore, remote updates enable optimization, quality enhancements, and flexible lifecycle management. Other opportunities come from the use of high-performance processors, which are already used in IT, and clear design patterns such as hierar-chization and scalability.

High-Performance Processors Enable Higher Integration
High-performance consumer-electronics processors are enabling new integration platforms in automotive-electronics architectures. These processors' use has introduced powerful, dynamic OSs to the automotive do-main-for example, Linux (see Figure 1). Such OSs are used particularly for multimedia and navigation.


Figure 1.
High-performance processors from the consumer-electronics world will enable new integration platforms in automotive-electronics architectures. AUTOSAR = automotive open system architecture.

Show All

The GENIVI Alliance (www.genivi.org) is working to establish a standard for software architecture, including a dynamic OS. In the near future, electronic control units (ECUs) for other applications (for example, autonomous driving) will require such software architectures. So, the AUTOSAR (Automotive Open System Architecture; www.autosar.org) standard will be enhanced, using the POSIX (Portable Operating System Interface) standard, to create the AUTOSAR Adaptive Platform.1 These new technologies will enable new ways to structure and design E/E architectures.

A Seamless Hierarchical Architecture
Until now, E/E architectures were designed mostly in an evolutionary manner with a focus on local solutions. That meant four things:

The partitioning of functions focused on where computing power was available.

Project-specific and heterogeneous development methods were common in each E/E development area.

All ECUs used the general system requirements of an original equipment manager (OEM), which often led to overdesigned ECUs.

ECU development focused on the ECU's local optima owing to strictly separated responsibilities and objectives.

To address these issues, BMW created a hierarchical E/E architecture for the next generation of cars (see Figure 2). This approach has these benefits:

ECU classification is requirements-based.

Adapted and unified development methods for each ECU class replace local development methods.

Each ECU class has specific system requirements.

System-level optimization is the main focus, driven by the system architects.

Figure 2. - Powerful integration platforms enable a seamless hierarchical electrical and electronic (E/E) architecture for the automotive domain. ECU = electronic control unit.
Figure 2.
Powerful integration platforms enable a seamless hierarchical electrical and electronic (E/E) architecture for the automotive domain. ECU = electronic control unit.

Show All

In this architecture, the central computing platforms (class 1—the top level of Figure 2) partition the main software functions, which are developed mainly in-house. These platforms offer high performance and fulfill the highest security and safety requirements. The integration ECUs (class 2) close the gap between the central computing platforms and commodity ECUs (class 3)—for example, for deploying time-critical functions requiring direct access to sensors or actuators. For simple and non-OEM-specific functions, commodity ECUs and sensors and actuators (class 4) are acceptable. Ideally, these ECUs and the sensors or actuators are based on common OEM or Tier 1 parts.

A Scalable Architecture
Today's network architectures are developed partly at the cost of increased variance and complexity. The design paradigms are often based on sender-receiver communication, which frequently leads to high dependencies and limited extensibility.

For the next generation of network architectures, a central communication server (CCS) will support encapsulation to handle extensibility locally. Such architectures will have these main features (see Figure 3):

A central information server and a broker will handle all network architecture information.

The E/E architecture will be encapsulated and scaled with less variance from a basic vehicle up to a fully equipped vehicle.

Network architecture communication will be structured and hierarchical.

Conversion will be fluid between communication protocols such as LIN (Local Interconnet Network), CAN (Controller Area Network), FlexRay, Ethernet, and the evolving machine-to-machine and vehicle-to-everything wireless protocols.

The physical, information, and service levels will be separate, including firewall features.


Figure 3.
A central communication server will enable a scalable E/E architecture.

Show All

At the system level, the CCS will offer optimization opportunities for both the physical and logical topology. For example, at the physical level, a subgateway could be replaced by the high-performance routing engine of the CCS. For optimization at the logical level, the CCS could decouple the sender-receiver dependencies and create the basis for the stepwise introduction of an SOA.

A Service-Oriented Architecture
Automotive functions must be at the same level of innovation as functions from the IT and consumer-electronics industries. Furthermore, automotive functions are becoming increasingly complex owing to greater dependencies. One example is the evolution from simple cruise control, to active cruise control, to autopilots. Today, the functional view of a system is signal-based. The partitioning of functions is significantly affected by legacy systems, ECU resources, and the organization building the system. Focusing on the ECU level won't be enough to master the complexity.2

So, we introduced an SOA approach at BMW for a next-generation E/E architecture (see Figure 4). An SOA provides substantial abstracted services for the overall system. A stringent encapsulation and hierarchy enable testing against interfaces and using agile methods, and they reduce system complexity. Reuse of software components between vehicle generations will be significantly simpler.

Figure 4. - A service-oriented architecture will help BMW master the increasing complexity of E/E function networks.
Figure 4.
A service-oriented architecture will help BMW master the increasing complexity of E/E function networks.

Show All

The In-Vehicle and Back-End Architectures
The in-vehicle E/E architecture and the back-end architecture are moving closer together. More and more automotive functions exchange data with the back end or execute partly on the back end. So, aspects such as functional separation, encoding, and firewalls are becoming increasingly important. These security patterns already exist in the IT and consumer-electronics industries and can be transferred to the automotive domain.

Connectivity between the in-vehicle network and back end is important. The main aspects are

communication standards such as LTE (Long-Term Evolution), Wi-Fi, and 5G in the future;

the provision of high-quality service; and

the availability of sufficient bandwidth.

The back end provides the basis for various applications. Functions can execute there (for example, for autonomous driving or multimedia). Mobility services for the driver can be provided over the back end. Information transferred from the car to the back end can be analyzed.

The seamless coupling of the in-vehicle and back-end architectures, along with the building blocks we mentioned before (CCS, SOA, and the hierarchical E/E architecture), will constitute a big step toward enabling our E/E infrastructure to deal with the upcoming innovations. Figure 5 shows the overall system structure and the design of software for functions that can execute on an ECU or the back end.

Figure 5. - This overall perspective of the in-vehicle and back-end architectures shows that mechanisms such as those for securityand privacy must handle both architectures to offer seamless functioning. AF = autonomous-driving functions, CD = crowd data, GSM =global system for mobile communication, NFC = near-field communication, and OBD = onboard diagnostics.
Figure 5.
This overall perspective of the in-vehicle and back-end architectures shows that mechanisms such as those for securityand privacy must handle both architectures to offer seamless functioning. AF = autonomous-driving functions, CD = crowd data, GSM =global system for mobile communication, NFC = near-field communication, and OBD = onboard diagnostics.

Show All

Seamless design and documentation of the in-vehicle and back-end architecutres are critical success factors. This includes data handling, remote updates, and software design for functions that can execute on an ECU or the back end. We discuss these aspects in the next section.

Changes for Processes, Methods, and Tools
Currently, the overall E/E development process uses a multitude of methods and tools. Often, each department in a software project has its own design principles, workflow, and tooling. In the future, state-of-the-art methods and tools from the IT industry for designing E/E architectures will eliminate the current heterogeneous situation, creating a more homogeneous development environment. Figure 6 shows the current and future states. This technological evolution will provide

a seamless requirements process from customer interaction to the software architecture;

seamless, complete modeling of E/E architectures based on SOA;

encapsulation of content for distributed development using SOA design principles;

the launching of an agile development process, joint Scrum teams, and shared code repositories; and

continuous integration and early use of virtual integration methods.

Figure 6. - Automotive-electronics development (a) Today and (b) In the future. Seamless design and documentation of the in-vehicle and back-end architectures are critical success factors. ADD = architecture design document, B&C = body and comfort, DA&S = driver assistance and safety, HIL = hardware in the loop, I&C = information and communication, P&C = powertrain and chassis, and SIL = software in the loop.
Figure 6.
Automotive-electronics development (a) Today and (b) In the future. Seamless design and documentation of the in-vehicle and back-end architectures are critical success factors. ADD = architecture design document, B&C = body and comfort, DA&S = driver assistance and safety, HIL = hardware in the loop, I&C = information and communication, P&C = powertrain and chassis, and SIL = software in the loop.

Show All

Digitalization and connectivity will result in changed customer expectations, such as seamless remote updates of functions; new market players, such as Tesla; and the need for new regulations, such as laws covering liability in autonomous driving.

Automotive-electronics development will benefit from IT and consumer-electronics standards but must reinvent many of the technologies so that they meet the stringent demands. Automotive electronics will remain different from classic software systems. The demand for safety, performance, usability, and security leads to the highest expectations of proficiency and quality, which in consumer electronics wouldn't be considered necessary. The intelligent adoption and adaptation of IT and consumer-electronics methods and technologies will enable many opportunities, while avoiding the traps that weakened classic software systems.