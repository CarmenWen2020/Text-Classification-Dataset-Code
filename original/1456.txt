Software developers are generally interested in developing better habits to increase their workplace productivity and well-being, but have difficulties identifying concrete goals and actionable strategies to do so. In several areas of life, such as the physical activity and health domain, self-reflection has been shown to be successful at increasing people's awareness about a problematic behavior, motivating them to define a self-improvement goal, and fostering goal-achievement. We therefore designed a reflective goal-setting study to learn more about developers' goals and strategies to improve or maintain good habits at work. In our study, 52 professional software developers self-reflected about their work on a daily basis during two to three weeks, which resulted in a rich set of work habit goals and actionable strategies that developers pursue at work. We also found that purposeful, continuous self-reflection not only increases developers' awareness about productive and unproductive work habits (84.5 percent), but also leads to positive self-improvements that increase developer productivity and well-being (79.6 percent). We discuss how tools could support developers with a better trade-off between the cost and value of workplace self-reflection and increase long-term engagement.
SECTION 1Introduction
Software developers are motivated to develop better habits to improve their productivity and well-being at work [1], [2], [3]. It is therefore desirable to gain a better understanding of what good work habits and behaviors are, and how we can support developers with the identification of self-improvement opportunities to build better and maintain good habits at work. Prior research has examined developers’ existing work habits, specifically the time they spend on various activities at work (e.g., [4], [5], [6], [7], [8]), their organization of work into tasks (e.g., [9]), and causes of fragmented work (e.g., [6], [10], [11], [12], [13]). Recently, researchers have also looked into the attributes and habits of great software developers [1], [2], [14]. They found that one key trait of successful developers is growth orientation, which means that they are constantly learning and striving to change their behavior to increase efficiency at work.

Goal-setting is one way to foster behavior change, since it allows individuals to define a target or outcome, and make progress towards their goal [15], [16]. In the context of this work, goals refer to desired target or outcome habits that developers set for themselves, to improve productivity and well-being at the workplace. Strategies refer to the system they employ to make progress towards and eventually reach their goals. However, identifying concrete and relevant goals can be challenging, which is why an active area of research is investigating how self-reflection can help individuals to get insights into positive and negative habits, and support them with the identification of meaningful goals that motivate positive behavior changes [17], [18], [19]. This includes mostly personal areas of life, such as health [20], [21], sleep quality [22], [23], students’ learning behavior [24], [25], [26], and physical activity [27], [28], [29]. Research more specific to knowledge workers’ work habits investigated the effects of self-reflection on task completion [30], [31], time management [32], and detachment from work [33], [34].

While developers generally want to play an active role in setting their own goals for work [35], [36], [37], we have not been able to find prior work that investigated goals developers set to improve work habits and productivity. This is why we wanted to study the goals that developers set for themselves to improve and maintain good habits at work, the strategies they pursue to achieve those goals, and the impact their goal-setting has on productivity and well-being. Even though self-reflection has previously been shown to have great potential to foster goal-identification, developers rarely reflect on or review their work in practice [14]. Hence, we further aimed to examine whether encouraging developers to self-reflect continuously on work, results in meaningful insights about work and leads to any work habit goals and -improvements. In particular, our work seeks to answer the following research questions:

Which types of goals do developers set for themselves to improve and maintain good work habits?

What are strategies that help developers make progress towards, and achieve their goals?

What is the potential impact of reflective goal-setting on developers’ goal-identification, goal-achievement monitoring, and work habits?

To investigate these research questions, we combined self-reflection and goal-setting to design a reflective goal-setting study, inspired by the Personal Software Process (PSP) by Humphrey [38] and diary studies in other areas of research. Our study prompts participants on a daily basis to reflect on their work, and asks them to set concrete goals and actionable strategies for improving their work habits. 52 professional software developers completed our study and reflected for two to three work weeks.

Our reflective goal-setting study resulted in a rich set of work habit goals and strategies that we analyzed. They can be broadly categorized into improving time management, avoiding deviations from planned work, improving the impact on the team, maintaining work-life balance, and continuous learning. We found that continuous self-reflection can be an important step towards productive self-improvements in the workplace, since participants stated that it supports the identification of goals (80.8 percent) and actionable strategies (83.3 percent). The daily self-reflections not only increased developers’ awareness about work habits, progress and achievements (84.5 percent), but also led to productive (short-term) behavior changes (79.6 percent). As a result, while initially being skeptical towards “journaling” their work, most participants (96.1 percent) stated afterwards that they could imagine to continue self-reflecting on a regular basis. Few participants, however, mentioned that constantly self-reflecting may increase pressure to always perform well and thus, could turn into a burden without tool support that would make self-reporting more convenient. Overall, we conclude that continuous reflective goal-setting can enable developers to improve and maintain good work habits. We discuss these results with regards to prior work on self-reflection with other types of knowledge workers, and how tools could support developers with their reflective goal-setting and how they might foster long-term self-reflection.

Our contributions are (1) a set of developers’ good work habit goals and strategies to improve productivity based on a field-study, and (2) insights into the use and value of continuous reflective goal-setting, and its ability to support developers with the identification, monitoring and maintenance of good work habits that improve productivity and well-being at work.

SECTION 2Related Work and Background
Work related to our research can be broadly categorized into research that examined developers’ work and productivity, what productive work habits are, and how to foster these with goal-setting and self-reflection.

2.1 Developers’ Work and Productivity
Previous work on how developers spend their time at work has focused on developers’ activities in the IDE, their testing and refactoring practices, and time they spend on understanding versus actually editing code [39], [40], [41], [42]. Other work has investigated developers’ workdays on a more holistic level, investigating how they organize their work overall on activities and tasks (e.g., [4], [5], [6], [7], [8], [9], [43]). The results suggest that developers spend surprisingly little time working on their main coding tasks (from 9 to 61 percent) and that there is a wide variety of other activities that fragment developers’ workdays. A large amount of research has focused on factors that influence developers’ workdays and the effect they have on productivity (e.g., performance, efficiency, quality) and well-being (e.g., job satisfaction, stress level) [44], [45]. On productive days, developers generally manage to make a lot of progress on their tasks, are supported by their co-workers or other peers, and have a minimum amount of context switches [43], [46], [47]. Contrary, some of the biggest impediments to productive work are regular external interruptions, self-distractions and meetings, since they can make it difficult to focus on and make progress on coding tasks for an extended time (e.g., [6], [10], [11], [12], [13]). The research further showed that the impact of these factors on developers’ productivity and well-being varies a lot, suggesting that the opportunities for productive behavior changes might differ amongst individuals.

2.2 Productive Developers’ Work Habits
Generally, most software developers are interested in optimizing their own habits and behaviors to improve their productivity and well-being at work [1], [2], [3]. However, we have not been able to find prior work that looked into the goals developers set to improve their work habits and productivity. Previous work also suggests that it is often the managers who set goals for their developers, even though developers would like to have more involvement with setting their own goals [35], [36], [48]. Goals that managers set include usually either concrete features or development tasks, such as shipping a feature on time with minimal bugs; or growth goals, such as increasing expertise, improving team-work or working more independently.

A related area of research looked into characteristics and work habits of successful developers, some of which developers might consider relevant and important to pursue as goals. Amongst other characteristics, successful developers often share similar attributes, such as striving for productivity and efficiency, being self-aware, asking for and offering help and feedback, constantly learning and self-improving, doing data-driven decisions, and setting challenging goals [1], [2], [14], [35], [49], [50]. Successful developers also manage to find a good balance between focused work and helping or mentoring others [2], [14].

In our work, we aim to better understand developers’ goals for productive work habits from the developers’ perspective, and the strategies they employ to change their behaviors, and increase productivity and well-being.

2.3 Fostering Behavior Change with Goal-Setting
Behavior change is a complex and long-term process [51] that was modeled and formalized in multiple theories, such as the Transtheoretical Model of Behavior Change (TTM) [52], and more specifically to personal informatics, the Stage-Based Model of behavior change by [53] and the Lived Informatics Model by [54]. TTM models behavior change as a sequence of stages which the person advances through until a behavior change happens and can be maintained. Awareness increase, also referred to as consciousness, is one of the processes that lets people advance between the stages. in particular, it helps people to advance from being unaware of the problem behavior (TTM's precontemplation stage) to acknowledging that the behavior is a problem, and the intention to improve it (contemplation stage).

There are two ways to identify a problem behavior, either by increasing people's external awareness or self-awareness [19], [55], [56]. External awareness can be increased through social incentives or competitions, and was shown to motivate people to not only reach, but also maintain their goals over prolonged periods of time [56], [57], [58], [59], [60]. Internal, or self-awareness can be increased through self-monitoring or self-reflection, and was shown to be valuable to identify opportunities for positive behavior change [19], [55]. In the workplace, self-monitoring tools, such as RescueTime [61], have been shown to successfully increase users’ awareness about the time spent on activities, work fragmentation, and productivity, but the insights are often not actionable enough to foster productive behavior changes [3], [53], [62], [63]. Contrary, and discussed in more detail in the next section, self-reflecting might allow to overcome the challenges of self-monitoring, if people reflect actively and purposefully, which results in self-generated, actionable insights that could support goal-identification and motivate behavior change [17], [18], [19].

Once people are ready to take action and change their behavior (TTM's preparation stage), they define the target behavior or outcome as a goal that they work towards (action stage) and maintain once it is reached (maintenance stage). Latham and Locke, who pioneered goal-setting research, identified key principles that improve chances of successful goal-achievement: defining clear and challenging goals, committing and actively working towards them, and measuring progress or getting feedback on goal achievement [15], [16] These principles are closely related to Doran's SMART goals approach, describing that goals must be specific, measurable, achievable, relevant and time-bound [64].

2.4 Background: Reflective Goal-Setting
Prior research on self-reflection has mostly focused on understanding how particular approaches, such as just-in-time interventions or mobile apps, support goal-monitoring and -achievement, by providing participants with pre-determined goals that they could further personalize and adapt (e.g., defining a specific exercise plan). The research mostly looked into non-work related areas of life, such as health [20], [21], food intake [65], students’ learning behavior [24], [25], [26], and physical activity [27], [28], [29]. However, there are cases, including sleep and work, where pre-determined goals are not suitable for everyone, or they would have varying impacts on different people. In these cases, researchers have looked more specifically into how purposeful self-reflection aids individuals to identify and refine personal growth goals that are relevant and important to them. One example is Lee et al.'s work on how to design a self-experimentation approach that allows individuals to identify behavior change goals for improving sleep quality [23], [66], [67]. The researchers provided participants with an open-ended journal to self-reflect on their sleep, a structured approach to define self-improvement goals, and just-in-time interventions to remind them about their goals. They found that the structured self-reflection allows users to self-experiment with goals and identify better behavior change strategies. There is also some research on the value of workplace self-reflection on task completion [30], [31], time management [32], [68], [69], and detachment from work [33], [34]. The research has shown that successful self-reflection approaches are often structured, since they guide users’ reflection with a predefined set of questions [19], [70].

In software development, Humphrey has taken a first step towards workplace self-reflection for developers with the Personal Software Process (PSP). PSP focuses on a set of basic metrics that developers reflect on (e.g., time, size, quality, schedule data), to better understand and improve their performance, quality, time estimations and skills [38]. Baltes et al. recently found that many developers already self-monitor their work, by using tools such as RescueTime [61], Codealike [71] or Wakatime [72], but only very few actively and regularly reflect on work (3 out of 204 survey participants) [14].

This is why we were interested in learning how open developers are towards actively self-reflecting on their work on a daily basis during several weeks. We were further interested in studying if self-reflection can be applied at the workplace, to identify personal work habit goals and strategies to motivate behavior changes that increase productivity and well-being.

SECTION 3Study Design
To answer our research questions, we conducted an in situ study at 10 software development companies of varying size. We collected data from 52 professional software developers using a structured reflective goal-setting process, a self-experimentation framework that we developed based on previous work in other research areas.

Reflective Goal-Setting. Our reflective goal-setting study is based on successful self-reflection and goal-setting approaches from other areas of life, in particular the health domain where self-experimentation is researched much more extensively. The core of our study are the daily self-reflection questionnaires (Table 1), a morning questionnaire participants were asked to answer before they start their work, and an afternoon questionnaire they answer at the end of their workday. The self-reflection questionnaires are based on the same stages of reflective goal-setting as identified by Travers et al. [26] and summarized in Table 2.

TABLE 1 Daily Self-Reflection Questions

TABLE 2 Stages of Reflective Goal-Setting [26]

The morning questionnaire asked participants to state the five most important things they want to achieve that day (stages 1 and 5 in Table 2). Since work by Altmann et al. [73] showed that prospective goal-encoding, i.e., the “action of looking ahead mentally to determine how to proceed” is valuable for successfully achieving goals, the morning questionnaire also showed the previously set goal to remind participants to pursue it on the workday ahead.

The afternoon questionnaire consisted of three parts: 1) Where am I? (stage 1 in Table 2), 2) Where do I want do go? (stage 2), 3) How do I get there? (stages 3 and 4). Previous work substantially influenced how we prompted participants to reflect on work, and define goals and actionable strategies. For example, work by Brockabank and McGill has shown that reflection provides a valuable feedback mechanism that supports people to monitor and measure their progress towards a goal [17]. Hence, the first part included a reflection step where participants rated their progress on the five items they stated they want to achieve in the morning questionnaire. In addition, participants reflected on aspects that were positive or made it difficult to make progress, and any other unplanned items they made progress on. In case they had defined a goal and strategy on the previous workday, the questionnaire prompted participants to reflect on their achievement of the goal and whether the strategy worked. As previous work has shown that writing down goals and committing on a single goal only enhances goal achievement [74], [75], the second part of the questionnaire prompted participants to commit to and write down a goal for their next workday, using the SMART goals approach [64] that was shown to result in more specific and more concrete goals [66], [67]. Since goals are rarely perfect from the beginning and they can change over time, participants could alternatively also revise an existing goal. Locke and Latham [15]. In the third part, we asked participants to describe a concrete first step they plan to take towards reaching the goal, as this was previously shown to increase the likelihood of actually changing one's behavior towards a goal [52], [76], [77]. Note that we did not provide participants with any examples of goals or strategies, to avoid biasing them. Every third day, participants were asked how they assessed the progress they made towards their achievements.

Study Setup. Before the study, we emailed participants a document explaining the study objectives and procedure, explained the SMART goals approach, asked them to sign a consent form as well as to answer a pre-study survey with questions on demographics, their existing goal-setting and -measuring practice and how they plan their work. Participants were then asked to pursue their work as usual for the duration of the study, while answering the morning and afternoon questionnaires timely. We sent two email reminders per workday, one at 8 am for the morning questionnaire, and the other one at 4 pm for the afternoon questionnaire. We asked participants to answer the daily questionnaires for two to three weeks, to avoid boredom or fatigue and ensure high quality responses. We also logged the time it took participants to answer each daily questionnaire. At the end of the study, participants were asked to answer the final survey, in which we asked participants to rate their agreement with statements, or open questions on their awareness, goal-setting, goal-measuring, and behavior change before and during the study. The final survey also asked participants about the value and impact of reflective goal-setting, if they could imagine integrating it into their work routine, and how it could be best assisted with tool support. After completing the final survey, participants received a 50 USD Amazon gift certificate as a compensation for their efforts.

Study Test-Run. To test-run and gather qualitative feedback in advance, we ran a pilot study with three computer science graduate students. The feedback helped us to fine-tune the survey questions and formulations. For example, participants in the pilot study suggested to show the previous workday's goal again in the morning questionnaire, and to introduce the SMART goals approach prior to the daily questionnaires.

Participants. We recruited 59 participants through professional and personal contacts from 10 companies, ranging from startups to large multi-national corporations in the software industry. Developers were invited to join the study either after giving research talks at the respective companies or by spreading the study description via our network on social media. Participants could freely decide to participate and were not enforced by their employers. We discarded data from 7 participants that answered the daily self-reflection surveys for less than one week, or if the time spent on the daily questionnaires was regularly shorter than one minute each–too short for being a meaningful reflection. Of the remaining 52 participants, 7 were female and 45 were male. Our participants had an average of 8.2 (± 6.7, ranging from 1 to 24) years of professional development experience, and were working in different roles: 45 identified themselves as individual contributors and 7 as developers in a leading position (i.e., development lead or manager). Participants resided in the US, Canada, Brazil or Switzerland.

Data Analysis. In total, we collected 605 self-reflections (i.e., afternoon questionnaires) from 52 participants. On average, they completed 11.6 (± 2.7) self-reflections each, which equals 11.6 days of self-reflection. We qualitatively analyzed the collected data, and identified themes by finding commonalities and key concepts from performing a Thematic Analysis [78]. To analyze the responses, we first open coded participants’ self-reported goals, using a quote-by-quote strategy where multiple codes could be assigned to each quote. Responses that could not distinctively be mapped to a code where discussed with the other authors. To identify high-level goal categories, we discussed the resulting codes and their relationships in multiple team discussions as well as one card sort session. During the whole process, we heavily relied on the quotes and consulted them regularly for additional context and details about the identified relationships. The whole process was iterative, meaning that whenever the discussions resulted in updates to the open coding categories, we did another iteration.

SECTION 4Developers’ Work Habit Goals and Strategies (RQ1, RQ2)
An overview of the work habit goals and strategies that developers set for themselves is presented in Table 3. Overall, the identified goals can broadly be grouped into five categories: (G1) improve time management, (G2) avoid (self-induced/external) deviation from planned work, (G3) improve impact on the team, (G4) maintain work-life balance, and (G5) learn continuously. The majority of developers’ goals describe continuous behaviors and desirable habits they want to develop, rather than momentary goals that have a defined outcome or result. While many of these goals could apply to any knowledge worker, several goals are very specific to software development (marked with [SE] in the table). The goal categories are not necessarily disjunct categories: For example, improving time management (G1) can impact what developers consider to be a deviation from planned work (G2). The reflective goal-setting study allowed participants to not only identify work habit goals, but also experiment with different strategies to reach them. In the evening questionnaires, participants also reflected on whether the strategy that they set on their previous workday worked. After coding developers’ goals, we analyzed developers strategies and summarized the successful ones in Table 3. Most strategies describe concrete and actionable habits and routines that participants usually wanted to perform on a daily basis or on multiple occasions each day.

TABLE 3 Developers’ Work Habit Goals and Strategies

In the following, we discuss each of the five goal categories and participants’ strategies to reach them, using participants’ examples and quotes. The numbers in parentheses are counts for the number of developers that set one or multiple goals of each category. Since the identified goals are based on what participants identified themselves, the reported numbers should only serve to give a feeling about how prevalent each goal is, as actual numbers might be higher. Goal categories are enumerated with G, strategies with S, and participants with P.

4.1 Improve Time Management (G1)
Plan Workdays in Advance (36). A goal that the majority of the participants set is to improve their time management by planning their workday in advance, either on a daily or weekly basis:

“I should make a TODO list for today, not a general TODO list for ‘at some point’.” - P33

Most strategies to reach this goal include common planning methodologies, such as maintaining a personal task list (S1), reserving time to work on important tasks in the calendar (S2), and planning buffers (S3) for unplanned tasks or issues. To actually apply these strategies, and not forget performing them after just a few days, participants tried to develop a daily routine (S4) of planning their next workday the evening or morning before work, or by setting an alarm or reminder (S5):

“I scheduled an event in my calendar to remind myself to complete a code review. I prioritized this over other work. It was also easier to start on this since it is schedule right after my team's daily stand up meeting which means I am not in the middle of a task.” - P4

“When I think a task takes 2 days to finish, add another day for unforeseen issues unless I am certain.” - P36

Make Progress on Most Important Tasks First (33). Developers also want to continuously make progress on their most important tasks. To that purpose, they applied strategies such as constantly reviewing their priorities (S7), and regularly reflecting on the progress (S8) made on their tasks:

“It occurs to me that I need to quick-scan my inbox, and look at my calendar, before planning the day. It will be important that I _scan_ the inbox, and not respond to anything. If I do that, I’ll get stuck into answering mails, and not plan.” - P33

“At the end of the day or beginning of [the] next day, [I want to] reflect why not all goals could be fully completed, and if so, why and what could be improved.” - P12

These two strategies helped participants to stay aware of their most urgent and most important tasks, which allowed them to plan for an efficient workday and work more systematically.

Make Better Use of Work Item Tracking Tools (6). For their development work, participants further mentioned they want to better and more actively use their work item (WI) tracking tools, by updating their progress (S8), documenting new findings from investigations in the code (S10), and by defining subtasks for each work item (S6):

“Every morning, breakdown user stories into at least 2 sub-tasks before starting or continuing work on it. If it is an existing story, update the tasks based on any new findings/discussions.” - P4

4.2 Avoid (Self-Induced/External) Deviation from Planned Work (G2)
Developers are also interested in forming habits that make it easier to follow through with their planned workday (G1) and react better in case things deviate from the plan.

Better Handle Urgent/Unplanned Issues/Bugs (29). Developers want to improve how they handle unplanned, urgent issues and bugs, such as a production issue or a build break, which can occur frequently in software development. Rather than always starting to work on the unplanned issue immediately, they first want to review their priorities (S7) before consciously deciding how to act:

“Before doing anything, I ask myself ‘How does this immediately contribute to what I need to deliver this month?’ and ‘Can this be delayed or even avoided?’.” - P19

Deferring unplanned tasks or bugs can effectively help developers to better balance and make progress on their planned development tasks, instead of being constantly sidetracked. Other strategies are to plan buffers (S3) and to set concrete upper limits (S11) for working on unplanned issues:

“Spend less than 1 hour a day in activities that are not part of the day's [plan].” - P25

In case participants decided to stop working on the current task and start working on the unplanned issue, many wanted to update their workday plan (S9) to reschedule their planned tasks.

Improve Focus: Reduce Distractions and Interruptions (33). Similar to other knowledge work domains, developers aim to limit their exposure to aspects that reduce their focus, to be able to concentrate for longer chunks of time on planned work. Specifically, developers’ goals primarily aim to reduce the amount of external interruptions from co-workers and self-distractions:

“Reduce the time spent on checking mails and [IM] channels and restrict it to specific hours like once in morning and at end of the day.” - P41

Strategies to reduce external interruptions vary, ranging from changing how developers organize their work (e.g., timeboxing work (S12)) to where they work (changing the location (S16)):

“Scheduled daily time block from 8 AM to 10 AM in my calendar: Stayed at home. Stayed offline until 10 AM (not completely offline, but never checked E-Mail or Slack etc. before my time block was over.)” - P8

“Reduce meeting time or club meetings back to back to have bigger focus time blocks on my calendar.” - P41

Developers further customized their communication tools, either by disabling notifications (S13) at certain times, or by reducing the number of communication channels (S14)).

“I have [...] notifications turned off completely in Outlook and Slack. I don't run anything such as Facebook or YouTube in the background or on a second screen.” - P6

Reducing self-distractions requires a lot of self-control. To reduce the temptation to regularly check social media or news websites, few participants installed browser extensions to block work unrelated websites (S17). Preparing their environment for focused work (S18), such as hiding the smartphone or filling the water bottle, further allowed participants to work focused for longer blocks, but also reduce multi-tasking, which was previously shown as a source of stress and quality issues [9], [79].

Balance Coding Time (10). Another reason why developers want to avoid deviations form work is to ensure they can spend enough time with coding, by balancing activities and setting limits (S11) or by blocking a specific amount of time for coding in the calendar (S2). For example, some aim to spend a minimum amount of time on coding each day, want to reduce time spent with bug triaging, or want to better balance the time spent working on new features versus fixing bugs:

“Allocate a reasonable amount of the day for bug triaging of test runs (∼ 2 hours max).” - P14

The importance of finding a good balance between coding and other work was recently shown to increase developers’ job satisfaction [50].

4.3 Improve Impact on the Team (G3)
Besides making progress on their own tasks, developers are also interested in improving their team impact and collaboration.

Be a Better Colleague (12). Participants also wanted to become a better colleague. However, both, the goals and strategies were often not concrete, and participants had troubles to reach them. For example, participants mentioned that they wanted to become a better pair programmer, or better understand their influence within the team, without being able to clarify what this goal meant or how they could reach it. Two strategies that developers successfully applied to become a better colleague were to delegate important tasks to their co-workers (S21) instead of always keeping them for themselves, and to actively share their knowledge and learnings (S22) with co-workers:

“Stop writing code trying to prove to the others that I can do complex stuff.” - P37

Help Co-Workers at Specific Times (5). Even though developers want to reduce external interruptions to have longer times of focus, they also want to support and help their co-workers with questions or in case they are blocked on a task. To reduce the exposure they have to external interruptions, they ask co-workers to adapt (S15), e.g., by asking them to schedule time for questions in the calendar in advance, or by changing their location (S16), e.g., by moving to a quiet place in the office or working from home:

“Get people to book time with me when they need my help instead of helping them immediately.” - P1

Do More Code Reviews (9). More specific to software development, developers aim to perform code reviews more frequently, to provide continuous feedback to their team and to help increasing the software quality. To achieve these goals, they want to develop daily or weekly routines (S4) or set reminders (S5):

“Complete one code review every day before lunch.” - P4

Keep Documentation Updated (8). Developers also set goals to become more diligent at writing documentation and keeping it updated. With this goal, they not only aim to make their own work easier and more efficient, by remembering previous changes and decisions, but also to better support their co-workers. To achieve their goal, participants either wanted to document consistently (S10), e.g., immediately after an important change to the code base or infrastructure, or to develop a routine (S4) of documenting when they had time to spare. This goal is not specific to development documentation only, but also includes logging progress on tasks, reporting bugs they identify in the coding process, or improvements they make to the development process (e.g., release process).

Work More Independently (7). Developers also want to work more independently, to not have to interrupt their co-workers all the time to ask for guidance or help. Participants who set this goal were often junior developers who tried to approach problems more systematically to reach their goal. However, when they reflected about whether the strategy helped, most reported that it was not actionable enough. Few participants reported that they then seeked out to ask co-workers for mentorship on how they could become more independent, who suggested to document the thought process (S10) during the investigation of the problem, which participants tried and reported that it helped them.

4.4 Maintain Work-Life Balance (G4)
Developers further set goals to maintain a good work-life balance.

At Work: Stay Motivated and Fresh (11). At work, developers want to have more regular and productive work hours to stay motivated and fresh. To achieve their goal, they regularly take short social breaks (S23) and use these breaks to have meaningful conversations with co-workers or learn from them. Participants emphasized these breaks must be short, since they otherwise eat into their work or spare time. Participants further optimized their work by reducing their work hours (S24), e.g., leaving earlier and accepting there will always be work left to do, and by working more regular hours (S25) and avoiding night shifts or weekend work.

Outside of Work: Better Detach from Work (7). Outside of work, developers want to be able to enjoy their spare time more and regenerate for work, by better detaching from work and not thinking about it all the time. We summarized their strategies to achieve the goal as pursuing a more sustainable lifestyle (S26). They include exercising more, sleeping longer and better, eating healthier, meditating and journaling:

“Don't think about work outside of work. Try to be satisfied with the daily work and come back fully rested.” - P11

Three participants also wanted to compare the data they collected on their workplace detachment (e.g., sleep or exercise data) with their perceptions of productivity or efficiency to spot patterns and gain ideas for further self-improvements, but they had difficulties to follow-through and, hence, asked for tool support.

4.5 Learn (G5)
Learn/Improve Specific Development Technology/Transferable Skill (16). Developers also set learning goals, either for learning the basics of a specific technology, such as a framework or programming language, or of a transferable development skill, such as architectural design, design patterns or how to troubleshoot issues. In contrast to the other goal categories (G1-G4), learning goals do not describe a continuous behavior developers want to develop, but a specific goal to reach within a concrete timeframe, which is to better understand or improve their knowledge on a topic:

“I want to know the basics of redux-saga within 7 days.” - P11

To achieve their goal, participants’ strategies included developing a learning routine (S4) of always seizing opportunities to learn when they had a bit of time, or reserving re-occurring time blocks for learning in the calendar (S2). Developers also wanted to better understand the product they were part of and its long-term vision, and attempted to reach the goal by asking more senior co-workers for help (S27), and by asking more specific questions (S28).

Improve Myself (7). Besides learning more about development topics, developers want to continuously improve themselves, for example by learning to work and communicate more efficiently. To achieve their goal, many participants developed a habit of regularly reflecting about their goals (S8), to consider the progress they made towards them, and then decide to take specific actions for self-improvements:

“Go over todo list in the evening commute to check which todos were completed. If not, think about why they are not yet done, write down the reason once a week, go over all the reasons to check for patterns.” - P12

SECTION 5Potential Impact of Reflective Goal-Setting (RQ3)
To learn more about the potential impact of reflective goal-setting on developers’ goals and strategies and answer RQ3, we compared participants’ responses describing their goal-setting practice prior to the study with their feedback after our study.

5.1 Self-Reflection Can Help to Identify Concrete Goals and Actionable Strategies
In our review of related work, we learned that while developers are interested in setting goals to maintain good work habits, it can be challenging to do so. Hence, we developed a reflective goal-setting study that allowed participants to self-reflect on work purposefully, and thereby encourages Hawthorne-type effects, by encouraging participants to alter their behavior based on the insights they gained from participating in the study. The result of participants self-reflecting and reviewing their work on a daily basis was that they started to validate their own experiences at work, and experiment with ideas for self-improvements. 84.5 percent of the 52 participants reported that reflecting on the progress they had made towards planned achievements and positive or negative aspects of the workday, raised their awareness about their existing work habits and progress at work (see Fig. 1 for details):

“The daily self-reflection process was very interesting and the most informative for me since it gave immediate feedback about how I did during the day.” - P6

“I found the [achievement] setting and subsequent checking of progress very valuable. Especially the parts where I planned to do X, Y and Z and ended up not doing any of them.” - P33


Fig. 1.
Participants’ self-reports on the value and impact of reflective goal-setting.

Show All

After a few days of getting used to reflecting about work on a daily basis, participants started to identify concrete goals, which 80.8 percent of the 52 participants attributed to the constant self-reflections (Fig. 1):

“It was a wonderful exercise. It was not at all painful to start tracking (which I initially thought it would). Also, without self-reflection, I was not really seeing where I was spending much of my time and in-turn not able to correct/fix the challenges.” - P48

“[The] study itself was almost a tool!” - P45

On subsequent days, the self-reflections allowed participants to refine these goals or identify other opportunities for self-improvement that they transformed into new goals. These goals and the daily self-reflections allowed 83.3 percent of the 52 participants to experiment with and develop actionable strategies to reach their goals (Fig. 1).

The study fostered participants to engage in deep reflection and self-awareness activities to better understand what hindered their ability to work productively and make progress, and also led to the identification of a wide variety of concrete work habit goals and actionable strategies. Overall, 30.7 percent (16 of the 52 participants) reported having identified new goals, 53.8 percent (28 participants) improved and refined existing goals, and only 15.5 percent (8 participants) reported that they did not identify any new goals, since they already had an elaborate goal-setting system in place (5 participants), or were happy with their current work habits (3 participants). We thus conclude that continuous reflective goal-setting can be an important step towards improving and maintaining good work habits.

5.2 Self-Reflection Can Increase Awareness on Goal-Achievement and Productive Habits
Besides facilitating goal and strategy identification, participants reported that reflective goal-setting increased their awareness on goal-achievement and productive work habits. The daily self-reflections allowed participants to evaluate the progress they made towards their goals and refine them when necessary, effectively providing a feedback mechanism on goal-achievement which previously was shown to be an important aspect of lasting behavior change [18], [19], [38]. Besides, the self-reflections increased participants’ awareness about productive work habits, such as the importance of planning, of reducing interruptions and multi-tasking, and of clarifying problems before starting to work on them:

“I had long ago forgotten the utility of a short-term TODO list—something focused on just the next 24 hours. By starting to use a daily list, I could get a tight feedback loop between my plans and my actual outcomes.” - P33

“I can now make this conscious decision: When someone is coming by I can decide ’yes I have time’ or ’no I am going to focus right now’. Whereas before, I was like ’okay, I am here, let's just talk to them’.” - P3

As a result, many participants stated that the motivation to finish the study was rarely about actually reaching their goals, but about the progress they made towards them and the productive habit changes and learnings goals entail:

“Defining goals does not have to be to achieve something. Making progress is a good goal as well.” - P16

5.3 Reflective Goal-Setting Can Increase Productivity and Well-Being
40 of the 50 participants (80.0 percent) who answered the question, agreed that the continuous self-reflections and goal-setting led to positive behavior change (Fig. 1). We refrain from repeating the self-reported behavior changes here, since they are congruent with the identified goals and strategies presented above. 12.0 percent (6 of the 50) who stated that they did not change their behavior, explained that they either already had good habits in place (3 participants), had difficulties with breaking bad habits (2 participants), or were not able to identify good enough opportunities for self-improvements (1 participant).

37 of the 40 participants (92.5 percent) who self-reported that they changed their behavior stated that they plan to keep their new behavior, mostly because they were satisfied with their increased progress and (perceived) productivity. Higher well-being was another benefit of the self-reflections, since they allowed participants to better detach from work (similar to [34]):

“It was a very good opportunity to understand more about myself. When I used to write it everyday, I realised that I am dissatisfied with myself even though I work to the best of my ability most of the time. And instead of getting dissatisfied, I should think of what I can do better the next day, and enjoy the rest of my evening with peace. Also, I learnt to think about my work in a more organised way. That will really help me in improving my day to day productivity and hence my happiness.” - P32

Note that the duration of our study does not allow to demonstrate any long-term behavior changes, but it shows the efficacy of our reflective goal-setting approach to identify concrete and actionable behavior change plans, which should be what is evaluated in early stage personal informatics systems according to [80].

5.4 Help Developers to Help Themselves
While our reflective goal-setting study was initially met with quite a bit of skepticism, since we “forced” (P8) participants to “write a diary” about their work, many reported that after a few days of getting used to and practicing self-reflecting, it became easier to self-reflect on their work and progress, which led to many surprising insights into their own work habits, and the identification of meaningful goals and strategies. Surprisingly, the approach was also valuable for participants who declared that they previously engaged in regular self-reflection and/or goal setting (Fig. 1): Of the 63.5 percent (33 out of 52) who reported they previously set goals for themselves, 84.8 percent (28 out of 33) identified new or revised existing goals; and of the 40.4 percent (21 out of 52) who regularly self-reflected prior to the study, 66.7 percent (14 out of 21) identified new or revised existing goals in a meaningful way. In the final survey, the majority of participants stated that they want to continue doing self-reflections voluntarily after the study; 40.4 percent daily (21 out of 52), 11.5 percent every two to three days (6 out of 52), and 44.2 percent weekly (23 out of 52). Several participants stated that they enjoyed participating in the study:

“Thank you for enforcing me to reflect daily.” - P8

Only 4 out of 52 participants (7.7 percent) reported that they were happy the study was over and they would not want to continue doing self-reflections, either because the self-reflection caused anxiety (1 part.) or they were burdensome and tedious (3 part.), especially when performed daily:

“It was tedious. I would not like to do it everyday. I feel like the to do list and how much did you finish each of them is enough, tracking the tasks that are still incomplete.” - P34

We conclude that in most cases, encouraging participants to self-reflect regularly can lead them to recognize its value, and the desire to develop a self-reflection routine to foster productive self-improvements.

SECTION 6Summary of Results
Our analysis provides insights into developers’ goals to improve and maintain good work habits, and the value and impact of reflective goal-setting in the workplace. Table 4 summarizes our key findings.

TABLE 4 Summary of the Study Key Findings

SECTION 7Discussion
Our work provides insights into developers’ work habits they consider desirable to pursue and set as goals for self-improvements. The majority of developers’ goals describe continuous work habits, rather than momentary goals that have a clear outcome or result, suggesting that developers’ motivation is less about actually reaching their goals, but about the progress they make towards them and the productive habit changes they entail. Recent work by James Clear supports this finding, stating that people should focus on changing their habits, rather than working towards a goal, which upon completion becomes irrelevant and causes many to relapse to old or previous habits [76].

While developers generally had individual differences in their goals and strategies to improve their work, we observed that the overarching objective was to gain back control of their work to make more progress on their tasks. Extensive studies performed by Amabile and Kramer support the observation and showed that the single best motivator at work is to empower knowledge workers to make progress, which also increases their happiness [30]. Similarly, recent work suggested that many developers want to gain back control over how they spend their time at work, since work is often very randomized and fragmented by interruptions and meetings [50], [81]. The remainder of this section discusses how self-reflection and various tool support might help developers retain control over their work, make more progress and increase productivity.

7.1 Self-Reflection as the Missing Key to Productivity?
Our study showed that reflective goal-setting provides developers with a framework for identifying goals and strategies that are relevant to their work, and motivates productive behavior changes. These findings are congruent with previous work that demonstrated the value of self-reflection for identifying and reaching goals in several areas of life, especially health, sleep and physical activity (e.g., [20], [23], [33], [34]).

While it is common for developers to review code, progress (e.g., in scrum meetings) and performance (e.g., reviews with managers), we are curious to learn in the future why they rarely reflect on work habits in practice, given the great promise. One reason could be time pressure, which makes it difficult to step away from work and take the time to reflect [82]. Previous work has also suggested that self-reflection does not feel natural to some, which is why they need to be encouraged to try it and learn about the benefits from self-reflecting regularly themselves, similar to our own observations [83], [84]. As noted above, many developers were initially skeptical to participate in a self-reflection study, but encouraging them to try it out for a few weeks let them realize the value and leads to the desire of self-reflecting also outside of the study context. While we did not investigate the reasons for their initial skepticism, future work could study barriers towards initiating and maintaining continuous self-reflection, to better understand how we can encourage and convince developers.

Our study did not look into long-term engagement with reflective goal-setting, but we assume that reflecting daily might be perceived as too cumbersome or time-consuming after a while. Varying with the intervals and frequency at which developers self-reflect might be one way to find a trade-off between the cost and value of self-reflection and motivate long-term engagement. For example, developers could initially reflect on a daily basis for a few weeks, to practice self-reflection and learn about the value, and then develop a habit of reflecting once or twice a week, or even only a few times a month. Participants further suggested various opportunities to reduce the cost of self-reflecting by better incorporating it into their daily work lives. These suggestions that participants brought up in the final survey are discussed in relation to previous work in the area of personal self-improvement and productivity in the remainder of this section.

7.2 Supporting Goal-Identification
To support goal-identification, participants suggested that self-reflection should be integrated into existing systems and workflows. Instead of creating another separate tool, recent work has explored how to integrate self-reflection into existing communication tools, such as Slack or Skype by building conversational bots [33], [34]. Furthermore, our participants and previous work [85], [86] emphasized that supporting self-reflection with computerized systems is crucial. For example, through automated monitoring, which can provide personalized insights and statistics into developers’ work, and ease the recollection part of the reflection and foster goal-identification. Existing automated monitoring systems successfully increased knowledge workers’ awareness about specific aspects of work, but the provided insights were often not actionable enough for users to know how and what to change, which is why the engagement with these tools usually decreased after a few days [3], [53], [62], [63]. According to Baumer et al., the problem of most automated monitoring research is the implicit assumption that just by providing access to “prepared, combined, and transformed” data, in-depth reflection can and will occur [86]. We are, thus, interested in studying how automated monitoring can be combined with self-reflection, to reduce the time and effort required to participate in active, in-depth reflection, while still providing rich and actionable insights. For example, the automated monitoring could provide developers with some automatically generated insights and visualizations on how they spent their time at work, and then still prompt developers to actively self-reflect about their workday.

Since self-reflection is typically reactive [24], participants suggested that receiving examples and recommendations for self-improvements, that are based on their current behaviors and compared to best practices or developers with similar job profiles, could be valuable for a proactive goal-identification. Such a recommendation system could, for example suggest good moments to take a break when a developer is stuck on an issue [87]. However, recommending relevant goals to developers is challenging, since there might be privacy concerns from collecting the data, and since what is a good work habit to one developer is not necessarily a good one for another. For example, one developer might want to reduce interruptions from co-workers to have more uninterrupted time to focus on coding tasks, while another developer finds value and satisfaction in the resulting discussions. The advantage of self-reflections is that they allow developers to personalize and tailor work habit goals to their needs, with a minimum of privacy concerns. Recent work on improving sleep, physical activity or living with diabetes has shown early promise of building virtual “coaches” or “assistants” that provide personalized and tailored recommendations, e.g., in the form of conversational bots [21], [22], [29]. However, many open questions remain as to how to best tailor these systems to users, e.g., by altering the timing and content of their recommendations.

7.3 Monitoring Goal-Achievement
Reflective goal-setting allows developers to gain self-generated feedback on their goal-achievement, a key pillar of successful behavior change [18], [19], [38]. To further improve the trade-off between cost and value of self-reflections, participants suggested how the progress towards their goals could be automatically measured, instead of having to manually self-report them each day. These suggestions include the monitoring of switches between activities and tasks and updates to the task list, WI tracker, calendar and documentation; they are summarized in the last column of Table 3. Other goals, such as if a developer became a better colleague, are more challenging to track automatically.

7.4 Supporting Goal-Maintenance
Finally, participants described how tools could support the maintenance of goals once they reached them (i.e., maintaining good habits), either passively or actively. One less intrusive way that participants suggested is to show reminders that help to avoid forgetting to pursue their goals. Previous work suggested that reminders need to be context sensitive to be effective, and that nudging users into performing a behavior might be even more successful [28], [56], [88]. Similarly, other participants asked for a system that automatically interferes with their work if needed. For example, by hiding email or instant messaging notifications at times of high focus, by blocking distracting websites, or by disallowing participants to switch to another task when they committed to work on a specific one. However, participants were fairly ambivalent about the value and risks of such systems, suggesting they would require a fair amount of customization and contextual awareness to work well. The finding is supported by recent work by Mark et al. who found that blocking online distractions increases focus and productivity, but at the cost of higher stress [81].

Related research in the physical activity domain has shown promise in motivating people to maintain their goals by including social challenges and competitions (e.g., [56], [57], [58], [59], [60]). For example, Chick Clique, a system that allowed teenage girls to share their health and phyiscal activity related data, showed that data sharing can be a powerful motivator [89]. However, when we asked our participants about comparing themselves to or competing with co-workers, 62.7 percent (32 of 51) stated clear disinterest. Reasons were either that work is too individual to be quantified and compared or that some people would start to “game” these metrics:

“Everyone works in different ways and such comparative measurements seem to generally fail to capture that to any satisfactory level. Additionally, any such comparisons are likely to be gamed by the people who value them the most resulting in workers who strive to increase their metrics rather than being effective and creative.” - P01

According to Treude et al. [90] and Muller [91], users are most likely to “game” a system to receive higher scores when the measure seems inaccurate or unfair. Furthermore, research on including social components with physical activity trackers to motivate self-improvements showed similar privacy concerns, increased pressure, and reported that participants felt “awkward“ when sharing data with strangers [58], [60], [89], [92]. One way to overcome these challenges could be to develop support groups—an inner circle of people who want to encourage a person to reach self-improvement goals—but it was shown they are challenging and time consuming to build and maintain [28].

SECTION 8Threats to Validity
External Validity. Although we studied 52 software developers at 10 different companies (startups to multi-national companies) from four countries, generalizability to other development companies, to other developers, and other knowledge workers, might be limited. The positive effect of self-reflection on goal-identification and -achievement might be threatened by a self-selection bias of people who are generally more interested in better understanding their work and improving their practices, which is a common threat in self-improvement research [19]. After a few days of skepticism, most participants started to appreciate the value of self-reflecting and goal-setting, but it is unclear how well this generalizes to other developers. We tried to mitigate the self-selection risk by being very upfront about the study objectives and method, by stressing that the collected data is and will remain private, and by allowing participants to continue their regular work and selecting a suitable time for participation.

Internal Validity. While we relied on methods and findings that were successfully applied in previous work in other fields (see Section 3), the design of the reflective goal-setting study and framing of the daily self-reflection questions might have influenced participants. For example, since we prompted participants to reflect on progress and achievements, the goals they identified might have been biased more towards these. Furthermore, the prompts for daily self-reflection and goal-setting in our study influenced participants’ behaviors (Hawthorne effect), but this was intended to answer RQ3. While most identified goals overlapped with several other participants, another threat to the internal validity of our results is based on our reliance on participants’ self-reports only. For example, the strategies we identified to successfully support goal-achievement rely on participants’ accurate and non-exaggerated reporting. To mitigate the risk, we first carefully analyzed each participants’ self-reports individually, before comparing them to their study feedback. In case their responses showed decreasing interest (e.g., missing multiple days of self-reports) or the time spent per self-report was very short, we discarded their data. In addition, the positivity towards self-reflection might be caused by novelty effects, and might wear off after participating for multiple months. In Section 7, we discuss how tool support might motivate long-term engagement and help to balance the trade-off between cost and value of self-reflections.

Construct Validity. We performed a Thematic Analysis [78] to analyze participants’ self-reports and responses to the pre-study and final surveys. One potential threat could be that the open coding step was performed by one author only. To reduce bias, we discussed themes and quotes of each coded category in the team.

SECTION 9Conclusion
In this paper, we explored software developers’ goals and strategies to improve or maintain good habits at work. We identified five main goal categories, and found that developers generally want to develop good continuous behaviors, rather than reaching momentary goals with a defined outcome and result. We show that continuous self-reflection can increase developers’ awareness about work habits, and that it can also lead to productive behavior changes that increase productivity and well-being at work. Our results suggest that purposeful and active self-reflection can provide actionable insights into potential self-improvements at work, something which has previously been shown to be challenging with existing self-monitoring approaches in the workplace. We discuss approaches to find a trade-off between the cost and value of workplace self-reflection, and how tools could potentially support goal-identification, goal-achievement monitoring, and support the maintenance of goals and good habits.