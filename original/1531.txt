Abstract
Context:
As Industrial Cyber–Physical Systems (ICPS) become more connected and widely-distributed, often operating in safety-critical environments, we require innovative approaches to detect and diagnose the faults that occur in them.

Objective:
We profile fault identification and diagnosis techniques employed in the aerospace, automotive, and industrial control domains. Each of these sectors has adopted particular methods to meet their differing diagnostic needs. By examining both theoretical presentations as well as case studies from production environments, we present a profile of the current approaches being employed and identify gaps.

Methodology:
A scoping study was used to identify and compare fault detection and diagnosis methodologies that are presented in the current literature. We created categories for the different diagnostic approaches via a pilot study and present an analysis of the trends that emerged. We then compared the maturity of these approaches by adapting and using the NASA Technology Readiness Level (TRL) scale.

Results:
Fault identification and analysis studies from 127 papers published from 2004 to 2019 reveal a wide diversity of promising techniques, both emerging and in-use. These range from traditional Physics-based Models to Data-Driven Artificial Intelligence (AI) and Knowledge-Based approaches. Hybrid techniques that blend aspects of these three broad categories were also encountered. Predictive diagnostics or prognostics featured prominently across all sectors, along with discussions of techniques including Fault trees, Petri nets and Markov approaches. We also profile some of the techniques that have reached the highest Technology Readiness Levels, showing how those methods are being applied in real-world environments beyond the laboratory.

Conclusions:
Our results suggest that the continuing wide use of both Model-Based and Data-Driven AI techniques across all domains, especially when they are used together in hybrid configuration, reflects the complexity of the current ICPS application space. While creating sufficiently-complete models is labor intensive, Model-free AI techniques were evidenced as a viable way of addressing aspects of this challenge, demonstrating the increasing sophistication of current machine learning systems. Connecting ICPS together to share sufficient telemetry to diagnose and manage faults is difficult when the physical environment places demands on ICPS. Despite these challenges, the most mature papers present robust fault diagnosis and analysis techniques which have moved beyond the laboratory and are proving valuable in real-world environments.

Previous
Next 
Keywords
Industrial cyber–physical systems

Faults

Automotive

Aerospace

Avionics

Industrial control

1. Introduction
Industrial Cyber–Physical Systems (ICPS) are mechanisms that augment their computing elements with sensors and electromechanical actuators that allow them to interact with the physical environment they operate in Alur (2015). By evaluating feedback, both from other ICPS they are connected to and from their local industrial environment, they perform a wide range of valuable and often hazardous tasks (Lee et al., 2015). Varying widely in complexity and scale, they are found controlling equipment in aircraft, automobiles and factories.

ICPS should be thought of as being more than just computing devices. They form entire systems, viewed as a collection of seamless entities, including their multiple electrical, mechanical and computing subsystems. This homogeneity makes them fundamentally different to the earlier embedded Programmable Logic Controllers (PLCs) that were first used on General Motors automotive assembly lines in the 1960’s (Laughton and Say, 2013, Parr, 1998). These devices controlled only the machinery they were installed or embedded in. They were seldom connected to other plant equipment and the sensors they used were often simpler devices such as limit switches, weight sensors or strain gauges. In contrast, modern ICPS act with higher degrees of autonomy than these earlier embedded systems, relying on sensors and actuators that often incorporate their own local data processing and conditioning. ICPS are therefore able to make control decisions based on their perception of their environment, driven by much deeper interaction with the physical characteristics of the world they operate in Bajracharya et al. (2008) and Jacoby et al. (2010). Earlier embedded systems seldom featured this degree of complexity and capability.

Contemporary ICPS continue to present intriguing challenges as they have become increasingly more complex. Widely-distributed and now often physically-separated, ICPS are being used to create the Industrial Internet of Things (IIoT), where collections of discrete devices cooperate intelligently to perform large-scale industrial tasks (Leitão et al., 2017). ICPS differ from Cyber–Physical Systems (CPS) used in consumer or medical devices primarily in terms of their scale (Yen et al., 2017, Wu et al., 2017), security (Tanveer et al., 2018, Sargolzaei et al., 2016) and safety-critically (Mohrle et al., 2015, Kim et al., 2011). ICPS used in Smart Grids rely on industry-standard interfaces and sophisticated communications. They manage reliable power distribution across wide geographical areas by co-operating and co-ordinating the operations of the devices that control each sub-station. Examples of advanced ICPS include NASA’s Mars rover Curiosity which operates semi-autonomously, controlled by one of the most remote ICPS ever deployed on another planet (Holzmann, 2014, Starek et al., 2016).

Detecting and diagnosing ICPS faults quickly and correctly has become imperative to ensure they are fully-operational at all times. We have learnt how to rely on ICPS more and more to manage complicated and often safety-critical tasks. Today, undetected failures in ICPS are not just costly: in safety-critical or hazardous conditions they can be life-threatening (McGregor et al., 2017, Feiler et al., 2016). For example, ICPS in the aircraft and aerospace sector rely on accurate readings from sensors to inform guidance, vehicle health and maintain stable flight control. They do this with a degree of reliability, precision and repeatability that human pilots can no longer achieve alone (Chamseddine et al., 2015, Kunst et al., 2009). Similarly, in the automotive sector, vehicles have become increasingly reliant on large local networks of sophisticated subsystems such as anti-skid breaking and fuel-efficient engine controls (Kodali et al., 2013, Sankavaram et al., 2013). Within each subsystem, information is gathered using sensors designed to capture one or more physical characteristics of the local environment, both within and outside the vehicle. The overall operation of a typical ICPS is, therefore, reliant on the co-operative behavior of each of its specialized subsystems, each one dedicated to specific aspects of the vehicle’s safe operation and reliability (Schulte, 2018, Shraim et al., 2018, Sankavaram et al., 2016).

1.1. The focus and contributions of this study
We identified, categorized and analyzed fault identification and diagnosis strategies for ICPS employed across the aerospace, automotive and industrial control domains. Our goal was to present a snapshot of fault diagnosis as it is practiced today. We surveyed the differences in the approaches that have emerged in each sector and how they address the needs they describe. Our survey provides a guide to applicable techniques for designers seeking to implement fault identification, diagnosis and management into their ICPS.

We chose the aerospace, automotive and industrial control domains primarily because the ICPS they rely on must operate faultlessly for extended periods of time, often in close proximity to humans (Bolbot et al., 2018). These sectors also exhibit high levels of integration between their computational cyber elements and the sensors that provide the information that all operational decisions are made on. For example, ICPS in automobiles now sense the position of highway lane markings accurately, extract information from signs and determine the relative positions of adjacent vehicles.

We were also interested in the similarities and differences in fault diagnostic approaches that have emerged in these three safety-critical sectors over the period we studied. The scope of our study was deliberately limited to representative domains that have become highly-dependent on ICPS to manage mission-critical tasks. It is in these sectors that we would expect to find that diagnostics are highly-advanced and widely-used. However, we chose not to include the medical sector in this study. Medical ICPS have distinctive biological characteristics, regulatory requirements and a scale that is worthy of a separate study later. We also excluded cyber–physical devices in the Consumer Electronics sector from our study. They are driving a large and expanding part of the market however they are often less complex than the ICPS in our chosen sectors and the tasks they manage are usually less safety-critical.

A scoping study was used to map the key approaches that underpin fault diagnosis in these sectors and the sources of both theory and case studies available from practitioners (Cacchione, 2016, Arksey and O’Malley, 2005). We framed our study via three research questions:

RQ1: What are the most common and widely-used fault identification and diagnosis techniques employed in ICPS in the aerospace, automotive and industrial control domains?

RQ2: What relative levels of maturity have the techniques identified in RQ1 achieved when assessed using a systematic scale that is applicable to these domains?

RQ3: What research gaps and challenges in ICPS fault identification and diagnosis are being highlighted in the literature surveyed to answer RQ1?

This scoping study seeks to provide a thorough and systematic overview of the fault identification and diagnosis techniques currently in use in our sectors of interest. It profiles the diagnostic approaches we encountered and the techniques that are being used in different situations. By applying a systematic classification to each technique encountered, we are able to estimate the relative level of maturity of each approach, highlighting those which are being applied successfully in real-world environments.

1.2. How this paper is organized
Section 2 explores briefly what a ICPS fault is and the terminology used to describe the various stages in a fault management methodology. Section 3 then details the survey data capture and analysis protocol our scoping study employed. While scoping studies do not usually include assessments of the quality of studies uncovered, we chose to adapt and employ the NASA Technology Readiness Level (TRL) as an qualitative scale to compare the relative maturity of the fault diagnosis techniques we encountered (Mankins, 2009).

Section 4 presents the results of the scoping study, mapping the fault diagnosis methodologies described in the papers that were included in this study. Finally, Section 5 presents our conclusions, briefly examining those studies that demonstrated the highest TRL. These exemplars discuss fault diagnostic techniques that have moved beyond the laboratory and are being applied in the real world.

2. Background — what is fault diagnostics?
ICPS bridge the connection between their “cyber” software, sensor and actuator hardware parts and the “physical” world they inhabit. Fig. 1 illustrates the two distinct classes of devices that mediate communication across this divide for a warehouse package-handling robot. A sensor is a device that can convert an environmental characteristic such as proximity, pressure, temperature or light levels into an electrical signal that can be processed by a computer (Jazdi, 2014). In contrast, an actuator is a mechanical device that can receive an electrical signal from a computer and cause a change, often as a result of moving something in its environment (Lee and Seshia, 2016). Motors are special classes of actuators that create movement, such as the mechanism that moves the package off the parcel tray once the robot has arrived at its destination.

Normal behavior for an ICPS such as this warehouse robot is to pick up packages, navigate reliably and efficiently to another location, and then unload its cargo. The robot’s activities rely on receiving inputs from its sensors and being able to co-ordinate the movements of its actuators to complete tasks that achieve previously-defined goals. Our example robotic package handler has pre-defined patterns of behavior that enable it to traverse warehouse aisles, locate shelves and deliver packages to specified locations. While it is working, it can detect both obstacles and humans, navigating safely around them.


Download : Download high-res image (152KB)
Download : Download full-size image
Fig. 1. Sensors and actuators for a warehouse robotic package handler.

The difficulty inherent in this interaction between the cyber and physical parts of an ICPS often results in faults occurring. Any change in the way that an ICPS operates that leads to unacceptable behavior or degraded performance is defined as a fault (Thombare and Dole, 2014). For example, the wheels of the robotic package handler might become entangled with warehouse rubbish from the floor and stop rotating. If the control program detects this problem, it can respond with an appropriate behavior, perhaps stopping and requesting a human for assistance. This sort of situation is not a fault: it is the ICPS managing its behavior in a way that is appropriate. In contrast, not detecting that it cannot move properly and carrying on regardless is a fault since the ICPS did not recognize the issue and change its behavior accordingly. Similarly, failing to detect the edge of stairs and falling down them is unacceptable behavior, possibly due to a faulty precipice sensor. Lee and Seshia comment that it is not enough to separately understand both the computational and electromechanical elements (Lee and Seshia, 2016). Rather, it is at the intersection of the cyber and the physical that the most challenging fault scenarios emerge.

2.1. Fault identification, diagnosis and management concepts
Fig. 2 illustrates the activities in a generalized fault management strategy. Fault diagnosis is primarily the analysis of the activities or interactions of an ICPS while it is being observed operating within the environment it is deployed in de Normalisation (2011). Milis et al. (2016) and Harirchi and Ozay (2016) define Fault Detection as the capability of a device to determine the difference between normal and abnormal modes of operation. This may be an after-the-fault examination of a system that has failed or a more proactive monitoring of the system’s behavior, watching for issues before they occur. The evidence of a fault is therefore exhibited as unacceptable behavior or degraded performance. Hence, the previous example of the warehouse robot not stopping and requesting assistance is indicative of a fault, either on the part of a sensor or the ICPS software. Fault detection is recognizing that something is wrong but this realization alone does not necessarily categorize or analyze the problem. The purpose of fault detection is to trigger a response by the ICPS to take appropriate action by first recognizing abnormal activity. When faults are detected, the ICPS could just halt. However that is not always a viable strategy if the task the ICPS is performing is critical to some party other than itself.


Download : Download high-res image (96KB)
Download : Download full-size image
Fig. 2. Sequence diagram of diagnostic activities for a generalized ICPS.

Detecting faults is the first stage of a Fault Management Strategy (Johnson, 1996). Detecting a fault should start a multi-step process that attempts to diagnose and potentially correct problems so that the ICPS can resume operating at optimal levels. This implies that the ICPS needs to be able to hold a dynamic representation of what normal behavior is so that it can recognize misbehavior.

Fault management strategies include Fault Isolation, which is the process of accurately identifying the location of the fault and its nature (Harirchi and Ozay, 2016). This can be difficult to determine reliably in large systems that contain many interconnected sub-systems. Hence, fault isolation includes the analysis of multiple possible fault sites to determine the nature of the real, underlying fault. The fault symptoms presented, or Fault Evidence, often include secondary system misbehaviors that are the result of the primary fault but which are not the root cause. Bradatsch et al. (2011) defines fault latency as the time between the occurrence of the fault and its recognition by the device’s fault management system.

Once a list of possible fault candidate locations has been identified, the next step is Fault Assessment. This examines evidence and seeks to determine the most likely root locations of the fault, as the problem may include a compound failure located at multiple, distinct points (De Kleer and Williams, 1987, Chen, 2011). This leads to the final stage of the diagnosis, Fault Risk Assessment. Not all faults are important enough to require intervention if the system is able to operate satisfactorily in a degraded condition. Ghadhab et al. (2015) discusses the use of “limp-home” strategies for automobiles that allow them to continue to operate safely in a degraded mode until they can be repaired.

Le Mortellec et al. (2013) provide a wider perspective on what an ideal diagnostic system should provide. Besides being able to uniquely identify the true location and nature of a fault, diagnostic systems must be able to communicate effectively with other systems to help facilitate fault rectification. They must deliver their findings rapidly, especially in safety-critical situations. Finally, it is paramount that they must not report false information.

3. Research method
Scoping studies are one method of rapidly mapping the key concepts that appear within a research area (Arksey and O’Malley, 2005, Levac et al., 2010). Often smaller in scope than full systematic reviews or mapping studies, scoping studies allow the breadth of coverage and the depth of the information extracted to be tailored to address research questions appropriately (Wohlin, 2014, Mays et al., 2001). Arksey and O’Malley (2005) and Antman et al. (1992) both explain how scoping studies are an appropriate way to quickly capture and present both the available information and the gaps. They can also be used to focus and inform later literature searches for practitioners when they do not have time to perform a thorough initial analysis themselves. Our scoping study protocol follows the four steps of framing research questions, identifying relevant studies, analysis and then presentation of the results as outlined by Arksey and O’Malley (2005) and refined by Cacchione (2016).

3.1. Step one: Framing our research questions
Scoping studies are also effective where the researchers do not have a single or highly-focused research question that they are seeking to answer (Munn et al., 2018). The research questions detailed in Section 1.1 were designed to identify, highlight and categorize practical fault recognition and diagnosis techniques that have been found to be effective both in laboratory studies and in the field. Since this scoping study examines multiple yet similar sectors with potentially differing needs, understanding the focus and spread of the challenges and how they are being addressed should be of interest to practitioners who are designing their own ICPS.

3.2. Step two: Identification of relevant studies
Scopus was used to search for papers that included the terms “cyber–physical”, “aerospace”, “aircraft”, “automotive”, “industrial” and “manufacturing” for the fifteen-year period from 2004 to 2019. This starting period for the search was chosen since it coincides with the emergence of the term Cyber–Physical System. The first use of the term can be traced to the National Science Foundation meetings in 2001 that discussed networked embedded control systems (Council, 2001, Gill, 2008). In 2006, Lee (2006) highlighted the implications of these discussions about connecting discrete embedded systems. Prior to this, Wiener’s earlier pioneering work on cybernetics informed much of the thinking on control systems theory, arguably setting the agenda for later CPS research (Wiener, 1948).

3.3. Step three: Study selection and classification
From an initial pool of 1700 candidate papers returned by our queries, we performed a pilot study on thirty of these papers. Particular papers were chosen primarily because they contained well-written explanations of fault identification and diagnosis techniques that provided valuable background information. These were used to create an initial set of fault identification or diagnosis approach classifications that identified both broad conceptual differences and a list of specific techniques applicable to those approaches. Table 1 lists these categories. RQ1 asks what the nature of fault identification and diagnostics is within our chosen domains. The broadest primary classifications that emerged divided the approaches into three high-level categories that helped to delineate the research activity. We encountered Physics-Based Model-Driven diagnostics, Data-Driven Model-Free Artificial Intelligence (AI) techniques and Knowledge-Based graph approaches. Hybrid techniques that blend aspects of these approaches were also encountered. The similarities and differences between these broad classes are profiled in more detail in Section 4.

To examine the specific fault-finding methods found within our three primary approaches, sub-categories were created to identify the characteristics of each technique. Beyond these classifications, trends such as Predictive diagnostics or prognostics became of particular interest to us since this approach featured more widely than we initially expected. The complete list of studies, classified according to these category codes, is available via this link (Dowdeswell et al., 2019).

Our publication sources included peer-reviewed journal papers, conference papers and open-access journals. Outside of the academic databases, we also sought technical publications and position papers written by industry-based authors with current, practical experience in their field. Examples include automotive-industry papers from SAE International (https://www.sae.org) and aerospace papers written by NASA researchers or their industry partners (e.g. Lockheed, Boeing). While the papers published by non-academic sources such as SAE were not necessarily peer-reviewed, they often contained detailed results from specific case studies. Arksey and O’Malley stress the importance of including such “gray matter” in scoping studies.


Table 1. Fault identification and diagnosis classification categories.

Category	Example sub-categories
Physics-based modeling approaches	Kalman Filters, Markov Models, Fault Trees, Other Stochiometric processes, Model Validation/Invalidation, Monitor-based oracles
Data-driven AI and machine learning approaches	Artificial Neural Networks, Machine Learning, Fuzzy Logic, k-Nearest Neigbour, Big Data/Data Mining
Knowledge-based approaches	Bayesian Decision Theory, Binary Trees, Petri nets, Network Message Analysis, Expert Systems
Our minimum inclusion criteria for a study required it to present and explain the fault identification or diagnosis approach that was being applied. We also sought papers that included case studies demonstrating the effectiveness of their techniques. Many papers were excluded because they only mentioned “faults” or “diagnosis” as an aspect of the nature of ICPS without presenting specific examples.

3.4. Step four: Analyzing and presenting the data
During the first phase of the analysis, the classification categories allowed us to perform a thematic analysis (Cruzes and Dyba, 2011, Cruzes and Dybå, 2011). Each of our categories and sub-categories represent a technique or approach used or proposed by a practitioner as a way of identifying, diagnosing or rectifying a fault (Castleberry and Nolen, 2018). The analysis also included examining where diagnostic research is focused in each sector and is presented in Figs. 5, Fig. 6, Fig. 7.

Scoping studies do not usually attempt to assess the quality of the studies uncovered (Cacchione, 2016). However, we chose to adapt and apply a qualitative scale during the classification phase to rank the relative level of maturity of the diagnostic techniques we found. Each study was evaluated using the NASA Technology Readiness Level scale (Straub, 2015, Mankins, 1995). This is a systematic metric for assessing how mature a particular technology is that is now widely used in both aerospace and defense for technology planning. The TRL has been progressively refined since the 1980’s through its use at both NASA, ESA and the US military (Mankins, 2009, Straub, 2015, ESA, 2009). It is now embodied in the standard ISO 16290 (ISO/BSS, 2019). In 2014, the European Association of Research & Technology Organisations (EARTO) identified an increased use of the TRL amongst its members as a planning tool to manage innovation (EARTO, 2014).

RQ3 sought to identify research gaps, especially those exhibited amongst the most promising approaches. The TRL provide criteria for assigning a classification between TRL 1, representing basic principles being observed or reported through to TRL 9, characterized by technologies proven in real environments that are ready for widespread adoption. We calibrated our fault diagnostic TRL descriptions using the approach of Terrile et al. (2015). They note that the relative TRL steps are not linear with the steepest steps being in the range TRL 6 to 8. Section 5 details the four divisions we chose to classify studies into an appropriate range. The granularity of the resulting TRL categories allowed us to distinguish between studies that were purely theoretical and those that were profiling fault diagnostic techniques that are being applied in live environments. Table 5 illustrates the fault diagnostic level characterizations we adapted from the NASA categories.

By the end of the classification and analysis phases we had identified fourteen studies that could be ranked at the highest TRLs between 7 and 9. These report mature, field-proven fault-finding and diagnostic strategies that have been deployed in production environments. In those papers, we should expect to see state-of-the-art exemplars that detail how ICPS respond to and recover from fault situations they encounter.

3.5. Threats to validity
In scoping surveys such as ours, the primary threats to the validity are our choice of which papers to include and our thematic classifications. Surveys are by definition secondary studies that report broad, summarized characteristics of primary studies, the source papers published that present research about an area of interest (Wohlin et al., 2013). As distinct from Systematic Literature Studies (SLS) that provide highly-detailed evaluations of a smaller set of papers (Kitchenham et al., 2010), scoping studies show where research activity is concentrated and what aspects of a topic are attracting interest, often examining a larger number of papers in less depth.

Internal validity is concerned with the risks that might lead to an incorrect conclusion (Haghighatkhah et al., 2017). This was partially mitigated during the analysis phase by ensuring that each primary paper was initially scanned to determine if it did indeed contain one of our classification classes. For some classes, a list of appropriate synonyms was built iteratively. Our inclusion criteria for a paper included a check to see if groups of related terms were present. The classifications defined in Section 3.3 such as “Model-Based” were expected to show up where models were discussed. However, within the same paper, the classification of “Model-Free” was expected to be applicable when discussions featured AI, Neural Networks, Markov approaches or Data-Driven techniques. Intellectual property restrictions on what can or cannot be published may also be a contributing factor to the amount of detail that can be published about implementations. This was considered when evaluating the relative TRL across sectors.

4. Diagnostic techniques in industrial CPS
Examples of fault identification and diagnostic methods examined initially during the pilot study were described by authors as having evolved along three primary pathways: Physics-Based modeling and analysis frameworks, Data-driven or Model-free AI techniques, and Knowledge-Based graphical approaches (Nuñez and Borsato, 2017). While classifying our studies, we also identified hybrid approaches which blend aspects of these methods.


Table 2. Physics-based Modeling fault identification and diagnosis techniques across all sectors.

Technique	Aerospace	Automotive	Industrial	All	Publications
Kalman filters	23%	0%	14%	13%	Shraim et al., 2018, Goupil et al., 2014, Windmann and Niggemann, 2015, Jiang et al., 2018, Chang et al., 2017, Zolghadri et al., 2015, Ruppert and Abonyi, 2018 and Ducard (2013)
Markov models	17%	8%	9%	11%	Ghadhab et al., 2015, Windmann and Niggemann, 2015, Kunst et al., 2009, White, 2012, Ribeiro and Barata, 2011, Kodali et al., 2012, Syed et al., 2013, Dearden et al., 2004 and Zhou et al. (2015)
Fault trees	17%	19%	5%	14%	Schulte, 2018, Ko et al., 2016, Chen et al., 2014, Hieb et al., 2009, Nuñez and Borsato, 2017, Trawczynski et al., 2008, Afonso et al., 2008, Mohrle et al., 2015  Höfig et al., 2015, Ahmad and Hasan, 2016, Swearingen and Keller, 2007, Klar and Huhn, 2012, Syed et al., 2013, Käßmeyer et al., 2016 and Efkemann and Hartmann (2008)
Model invalidation	43%	41%	64%	48%	Provan, 2014, Yen et al., 2017, Wang et al., 2017, Palladino et al., 2012, Chen et al., 2012, Goupil et al., 2014, Ko et al., 2016, Chen et al., 2014, Hieb et al., 2009, Nuñez and Borsato, 2017, Trawczynski et al., 2008, Afonso et al., 2008, Folkesson et al., 2014, Khlif et al., 2010, Lira and Borsato, 2016, Hale and Bollas, 2018, White, 2012, Barata et al., 2007, Kurien et al., 2002, Luo et al., 2006, Grimm et al., 2012, Schoeller et al., 2007, Ramos et al., 2011, Khlif and Shawky, 2008, Castaldi et al., 2016, Harirchi and Ozay, 2018, Bartocci et al., 2018, Holzmann, 2014, Cossé et al., 2015, Struss, 2013, Modest and Thielecke, 2016, Khorasgani et al., 2019, Chu et al., 2008, Pakala et al., 2011 and Sanislav et al. (2015)
Monitor-based oracles	10%	11%	9%	10%	Yen et al., 2017, Abel et al., 2013, Schoeller et al., 2007, Kane et al., 2014, Golagha et al., 2017, Dwyer et al., 2010, Ruppert and Abonyi, 2018 and Benowitz (2014)
4.1. Physics-based, model-driven diagnostics
Modeling is used by designers to gain a deeper understanding of a system. By creating models that imitate the physical characteristics of the ICPS components, they can explore the interaction the sensors and other physical devices have with the cyber parts of the ICPS (Lee and Seshia, 2016). Physics-Based Modeling techniques for diagnostics rely on consistency checks against these models. These detect the differences between the telemetry captured from the live ICPS and the values predicted by the model. Table 2 summarizes physics-based modeling diagnostic techniques across our survey domains.

Consistency checks use data captured by observers who filter the individual readings to distinguish between noise caused by telemetry errors and values that indicate faulty behavior (Koitz et al., 2017). These differences will often be small but seldom non-zero when the ICPS is performing within acceptable tolerances (Sankavaram et al., 2013). Techniques for determining when an aspect of a model is invalidated were discussed in 48% of papers, especially in the industrial control domain. Both Kalman Filters and Markov Models were discussed as ways of recognizing model invalidation. These techniques implement observers that can process sequential measurements that vary over time. Kalman Filters are more applicable when the range of possible readings is highly-linear. They apply recursive algorithms where weighted-averages are used to estimate the next value. They work well in noisy environments that produce sequences of unreliable readings. Zolghadri et al. describe an implementation of a Kalman filter to detect jamming of a flight control surface by filtering the error signal before it is processed by the on-board avionics (Zolghadri et al., 2015). The authors explain how the number of sensors providing input to the model affects both the design and worst-case performance. Tuning the model parameters requires trade-offs against the real-time capacities of the diagnostic systems that rely on the model. Shraim et al. discuss fault management for quadrotor unmanned vehicles to improve rotor positioning accuracy (Shraim et al., 2018). Unmanned Aerial Vehicles (UAV) require real-time fault tolerance since they now rely on autonomous, sensor-driven stability control that is no longer managed entirely by the pilot. The models used have to take into account the complex aerodynamic characteristics of the UAV. Dearden et al. discuss similar aspects of autonomous operation, describing fault diagnostics for Mars Rovers where Kalman filtering provides situational awareness to indicate fault conditions (Dearden et al., 2004). They contrast the number of sensors required to manage rover operations with the low computational power available to perform fault identification using multiple sub-system models.

In contrast, Markov models are used to model non-linear, randomly changing systems with discrete states. A dynamic model is Markov or has the Markov Property if the future state of a system depends only on a limited number of previous states. Markov Chain and Markov Decision processes rely on observing the full set of values or states for the aspect of the ICPS that is being diagnosed. In contrast Hidden Markov Models operate where the sequential state of a system is not fully observable. Kunst et al. profile damage propagation through ICPS using Hidden Markov models (Kunst et al., 2009). Similarly, Windmann and Niggemann (2015) and Ribero et al. both apply Markov Models to monitor industrial processes and identify faults as they propagate.

Fault Trees are a way of modeling all reasonably-probable fault scenarios (Schulte, 2018). They are tree structures that facilitate a top-down, systematic approach to identify chains of possible faults. Logical operators can be applied to nodes to identify likely fault pathways. Fault trees are usually considered to be knowledge-based approaches but they were most often encountered in studies that employed hybrid approaches. Mohre et al. demonstrate correlations between fault tree nodes and compositional safety analysis models (Mohrle et al., 2015). Kassmeyer et al. apply fault trees to track fault scenarios across multiple automotive feature variants (Käßmeyer et al., 2016).

Across all sectors, a wide range of specialized Model-Invalidation approaches were encountered, both theoretical and in-use. Provan (2014) discusses how acceptable inputs can be modeled, an important pre-requisite to detecting misbehavior. Monitors (Benowitz, 2014) are code within a fault identification system that is responsible for detecting anomalous situations or behavior. Similarly, Monitor-Based Oracles provide ways of both capturing and evaluating possible fault occurrence (Yen et al., 2017, Abel et al., 2013, Schoeller et al., 2007).

Formal modeling languages including the Architecture Analysis & Design Language (AADL) (Feiler et al., 2006) and Modeling and Analysis of Real-time and Embedded Systems (MARTE) (OMG, 2020) model ICPS during their design phases. AADL originated in the aerospace sector to model embedded systems and has now found wide use in the automotive domain. MARTE extends the UML to provide similar capabilities. Huang et al. (2014) describe a simulation platform modeled in AADL that allows transient faults to be evaluated. Khlif and Shawky demonstrate how to use AADL to design co-simulations that are easier to diagnose later (Khlif and Shawky, 2008). Shulte proposes a state machine architecture for fault detection based on SysML (Schulte, 2018). However, no papers in the survey discussed production ICPS implementations that employed either AADL or MARTE models from the design phases directly. Procter and Feiler present an introduction to the AADL EMV2 Error Library where they discuss the use of an error ontology during modeling (Procter and Feiler, 2020). We searched the literature for examples of the use of EMV2 in production fault diagnostic systems beyond the design phase but found few applicable examples. Lu et al. discuss redundancy approaches using AADL and EMV2 however their work does not demonstrate how to apply their fault trees in a production, real-world example (Lu et al., 2018). Similarly, Zhang et al. discuss the design of fault tolerant systems using EMV2, but it is applicable only to early-stage modeling (Zhang et al., 2017).

Creating and maintaining models is labor-intensive. Many of the techniques rely on detecting situations where a model is invalidated. However, Milis et al. (2016) highlight the amount of effort needed to calibrate models. Provan (2014) also discusses two practical impediments to effective model-based diagnosis: the failure to integrate diagnostic modeling early enough in the requirements process and ambiguities in the models themselves at run-time (see Table 3).


Table 3. Data-driven A.I. Model-Free fault identification and diagnosis techniques across all sectors.

Technique	Aerospace	Automotive	Industrial	All	Publications
Artificial neural networks	54%	50%	47%	50%	Milis et al., 2016, Sargolzaei et al., 2016, Marzat et al., 2009, Schwabacher and Goebel, 2007, Lapira et al., 2013, Sankavaram et al., 2013, Lee et al., 2017, Guo et al., 2016, Yan and Zhou, 2018, Langer et al., 2009, Lee et al., 2017, Iverson et al., 2012, Azam et al., 2005, Xu et al., 2012, Banerjee and Das, 2013, Schwabacher and Waterman, 2008, Vong et al., 2011, Song et al., 2013, Losik, 2009, Gonzalez et al., 2009 and von Birgelen et al. (2018)
Machine learning	38%	17%	18%	24%	Wu et al., 2017, Bregon et al., 2014, Sankavaram et al., 2016, Sankavaram et al., 2013, Azam et al., 2005, Xu et al., 2012, Sunny et al., 2018, Fang et al., 2017, Schubert et al., 2011, Losik, 2011 and Losik (2009)
Fuzzy logic	8%	25%	18%	17%	Kim et al., 2011, Chen, 2011, Khoukhi and Khalid, 2015, Song et al., 2010, Song et al., 2013, Banerjee and Das, 2013 and Hu et al. (2011)
Big data	8%	0%	18%	10%	Nagorny et al. (2016) and Schwabacher et al. (2010)
Condition monitoring	8%	8%	24%	14%	Wu et al., 2017, Lee et al., 2015, Fleischmann et al., 2016 and Wang et al. (2017)
4.2. Data-driven fault diagnostics
Data-Driven diagnostic techniques employ training and learning to forge a representation of the system’s behavior(Sankavaram et al., 2013). Unlike Physics-Based models, Data-Driven fault detection does not rely on the existence of pre-built models. This approach is preferred when the ICPS can provide telemetry that contains enough information to distinguish between either normal or degraded operations. AI fault diagnosers make sense of that information by using discriminating logic that copes with the changes seen in the ICPS as they occur. This ability to make intelligent decisions distinguishes AI from machine learning, which involves ICPS learning without being explicitly programmed. Milis et al. (2016) discusses cognitive agents that apply expert reasoning to mimic the behavior of human experts.

Artificial Neural Networks (ANN) (Langer et al., 2009, Sargolzaei et al., 2016, Lapira et al., 2013) and pattern-recognition algorithms (Fang et al., 2017) are illustrative of data-driven techniques. Since they do not rely on static, pre-built models as reference points, they remove the need to keep the model up-to-date as the system evolves. Data-Driven diagnostic systems learn behaviors through training. Detection logic allows them to compare current values with previously learnt values (Ramos et al., 2011). Hence these Model-Free methods do not have to completely understand the underlying architecture of the system being examined (Iverson et al., 2012).

Data-Driven approaches often scale better than Model-Based techniques (Wu et al., 2017, Yen et al., 2017). As long as sufficient computational resources are available, Data-Driven techniques work as effectively with a large number of sensors as they do with a few (Iverson et al., 2012). Since they construct knowledge representations dynamically, they are often easier to update than formal models (Azam et al., 2005).

Unlike Model-Based methods, Data-Driven approaches do not assume the probabilistic distributions of sampled values that Markov processes rely on (Wu et al., 2017). Similarly, AI methods, including machine learning, do not rely on processes being stochastic or random. The trade-off is that while Physics-Based models are labor-intensive to create, model-free techniques require large example data sets to train the observers (Marzat et al., 2009, Schwabacher and Goebel, 2007, Lapira et al., 2013). Iverson et al. (2012) explain that for avionic ICPS, large volumes of archival sampled values are collected during routine operations that are can be used for training neural networks.

Fuzzy logic employs truth values that are real numbers between zero and one rather than being boolean (Kim et al., 2011, Chen, 2011, Khoukhi and Khalid, 2015). This allows decisions to be made about non-numerical or imprecise data from ICPS, stored in structures called fuzzy sets. These sets represent partial truths and decisions are made by arriving at a consensus. Fuzzy logic algorithms are able to re-evaluate thresholds for situations where values are expected to change dynamically as the system is being observed. Song et al. (2010) discusses recognizing faults using threshold predictions. Each sampled value is checked to see if it falls within a range defined by the previous value read.

Condition monitoring allows Data-Driven fault observers to obtain real-time data about the ICPS they are monitoring. These data points replace the reference values that pre-built Model-Based solutions rely on since AI and machine-learning approaches are model-free (Wu et al., 2017). Lee et al. (2015) and Fleischmann et al. (2016) describe these techniques in terms of system health monitoring. Where deviations from the norm are observed, the result is similar to the model-invalidation discussed earlier. Wang et al. discuss this in the context of cloud computing and predictive maintenance (Wang et al., 2017).

Wang et al. (2018) caution against over-reliance on AI approaches. They suggest that given the complexity of some fault scenarios, the conclusions drawn by data-driven systems may not be sufficiently robust enough to be free of false positives and negatives. However, Iverson et al. profile fault finding for the International Space Station (ISS), reporting that when a large amount of nominal data is available, Data-Driven systems can become highly effective at detecting anomalies (Iverson et al., 2012) (see Table 4).


Table 4. Knowledge-Based fault identification and diagnosis techniques across all sectors.

Technique	Aerospace	Automotive	Industrial	All	Publications
Bayesian networks	0%	17%	43%	31%	Chen et al., 2012, Chen, 2011, Kurz et al., 2011 and Heirung and Mesbah (2019)
Binary decision trees	0%	33%	0%	15%	Waszecki et al. (2015) and Pons et al. (2015)
Petri nets	0%	0%	43%	23%	Yang and Chen (2009) and Cabasino et al. (2010)
Network message analysis	0%	16%	29%	62%	Waszecki et al., 2015, Schweppe et al., 2009, Song et al., 2010 and Sunny et al. (2018)
4.3. Knowledge-based approaches
Knowledge-Based approaches are applicable where largeamounts of historical data are available. The underlying dependencies that define the system are derived from these sources using a range of techniques. All fault diagnosis systems need to observe real-time data, basing their evaluations on either qualitative or quantitative aspects of the telemetry. However, only knowledge-based approaches utilize significant amounts of historical data to inform their classifiers (Lee et al., 2015). Unlike Data-Driven AI approaches, Knowledge-Based methods do not require pre-classified training sets. Rather, they mine the historical data using statistical methods. Chen et al. explain the value of historical information gathered from experts in building knowledge bases to inform current fault diagnoses (Chen, 2011).

The resultant dynamic models they construct are represented using dependency graphs. Petri nets are directed bipartite graphs where nodes represent discrete fault events that may occur. The graph arcs define possible transitions between states (Yang and Chen, 2009, Cabasino et al., 2010).

Bayesian Belief Networks are knowledge-based directedgraphs that model probabilities (Chen, 2011, Kurz et al., 2011). Each node represents a step in a cause and effect chain with a conditional probability. While observing, the fault system updates the probability at a node when new information is available. Hence, Bayesian networks can provide both diagnostic and predictive evaluations.

Binary Decision Diagrams are directed acyclic graphs. Waszecki et al. (2015) encode observation patterns extracted from messages exchanged by automotive ECUs to capture fault scenarios that can be evaluated during diagnosis. Network message analysis also complements other knowledge-based approaches, either as a carrier of fault messages or as an indicator of misbehavior (Song et al., 2010). Schweppe et al. (2009) discuss the Automotive Keyword Protocol ISO 14230:2000 (ISO/IEC, 2000), a widely-accepted standard for analyzing faults via network messages exchanged over a vehicles CAN bus. Pons et al. (2015) outline a similar approach using Causal Graphs rather than Binary Decision Diagrams.

4.4. Hybrid fault diagnostic approaches
Hybrid approaches that blend techniques from any of the three broad approaches were encountered in 14% of the papers but featured in 19% of all industrial control studies. Hybrid techniques skewed the overall ratios of our three primary categories since practitioners can adopt any combination of methods to create their fault identification and diagnostic methodologies. Fig. 3 illustrates the spread of Hybrid approaches across our three domains. Wang et al. (2017) employs Model Invalidation from the Physics-Based Modeling category with Condition Monitoring from the Data-Driven AI category in an intelligent manufacturing scenario. This allows their system to analyze and predict faults from patterns shared via a cloud-based system. The system is implemented using intelligent agents. Chen (2011) combine Bayesian networks with Fuzzy Logic to diagnose faults in automotive braking systems while Banerjee and Das (2013) profiles a system with an amalgam of Fuzzy Logic Data-Driven predictors and Model-Based statistical data.

Using multiple approaches in this way allows practitioners to apply the most appropriate technique to different aspects of an ICPS. Rizzoni et al. (2009) discuss how both model-based and neural network techniques facilitated the development of on-board diagnostics and fault monitoring to measure vehicle emissions in automobiles. They trace the motivation for continuously assessing emission compliance in each vehicle back to the California Air Resource Board (CARB) requirements that came into force in 1991. Each vehicle is required to monitor its own emissions to ensure compliance. That required neural network approaches to facilitate the tasks of data capture and sensor filtering followed by model invalidation to test compliance.


Download : Download high-res image (135KB)
Download : Download full-size image
Fig. 3. Hybrid and predictive approaches across all sectors.

4.5. Predictive diagnostic techniques
Predictive Diagnostics or Prognostics is the ability to detect the signs of an impending fault before a failure occurs and to estimate when it might happen (Schwabacher and Waterman, 2008). Fig. 3 suggests that the ability to predict ICPS faults in advance is of interest in all three domains. Predictive Diagnostics becomes feasible when it is possible to both capture and process large amounts of high-fidelity data about the operation of an ICPS and recognize the fault symptoms in-advance. Janasak and Beshears (2007) state that one aim of European air carriers is that by 2050, all flights should arrive within one minute of their scheduled time. Current delays and disruptions can be up to fifteen minutes due to undiagnosed faults, an issue that better predictive capabilities might alleviate.

4.6. Overall trends in the data
In each sector, there is an emphasis on the development of smart sensors and the conditioning of the sensor data using a range of techniques such as Kalman Filters or Markov models. Coupled with that, the representation of ideal values or behavior was described using either models or dynamically using AI data-mining techniques. Once a definition of what is normal can be determined, deviations from expected values or behaviors can be detected. Artificial Neural Networks and Machine Learning were evidenced as alternatives to Model Invalidation in the Data-Driven AI category. However, the widespread use of hybrid techniques in different parts of the ICPS reflects the complexity of the systems being profiled: no single technique for fault recognition and analysis predominates or is sufficient for all needs. The predominance of Data-Driven techniques in aerospace is in contrast to the lack of evidence for the use of Knowledge-based approaches in that sector while Network Message Analysis was a technique profiled in 29% of the industrial studies that employed Knowledge-based approaches. Those contrasts are explored more deeply in Section 5 where we examine the most mature techniques in more detail.


Download : Download high-res image (236KB)
Download : Download full-size image
Fig. 4. Technology readiness level by sector.


Table 5. Adapting the NASA Technology Readiness Levels for Assessing Fault Diagnosis.

TRL	NASA categorization	Proposed fault categorization
9	Actual system “flight proven” through successful mission operations.	Actual fault diagnostic system proven through successful identification and classification of real faults in a production environment.
8	Actual system completed and “flight qualified” through test and demonstration (ground or space).	Actual fault diagnostic system qualified through test and demonstration in a production environment.
7	System prototype demonstration in a space environment.	Functioning prototype demonstrated in a production environment.
6	System/subsystem model or prototype demonstration in a relevant environment (ground or space).	Functioning prototype demonstrated finding and/or diagnosing faults in a relevant environment beyond the laboratory.
5	Component and/or breadboard validation in a relevant environment.	Creation of a breadboard and/or software validation that can search for and/or identify faults in a relevant environment.
4	Component and/or breadboard validation in a laboratory environment.	Creation of a breadboard and/or software validation that can search for and/or identify faults in a laboratory environment.
3	Analytical and experimental critical function and/or characteristic proof-of-concept.	Proof-of-concept experiment with an appropriate simulation of the fault environment.
2	Technology concept and/or application formulated.	Concept and technology to perform detection and/or diagnosis proposed, including a mathematical formulation.
1	Basic principles observed and reported.	Basic fault detection or diagnosis principles observed and reported.
5. Investigating mature fault diagnostic techniques
RQ2 asked what levels of maturity the diagnostic techniques adopted in each sector have achieved. The TRL fault classifications we developed for our study are shown in Table 5 in parallel with the matching NASA descriptions.

Mankins (1995) explains that each level in the TRL scale represents a different maturation of the technology or methodology. Héder (2017) notes that the TRL has drawn criticism for its use outside of the environment it was originally designed for, explaining that in the European Union the approach has not always been tailored properly for specific disciplines. However in NASA the concept of “flight-readiness” was already deeply ingrained in their culture (Feldman, 2000). Adapting this concept to machinery to establish what stage of technological readiness it has reached was a natural step within their context. We considered this when designing our study, carefully crafting our adaptations of the individual level descriptions to ensure we stayed true to the intent of the TRL.

Assessing the maturity of a technological approach requires a careful evaluation of the context that it is being trialled or applied in. Our TRL categories are divided into four distinct groups. Studies classified as TRL 7 to 9 represent the most mature implementations. They provide a fascinating glimpse of techniques which are either close to or fully operational in live production environments.

Studies from TRL 5 and 6 provide evaluations from trials performed in highly-realistic environments beyond the laboratory. They often use case studies to illustrate how the diagnostics will work in particular situations. In contrast, studies at TRL 3 and 4 present functioning prototypes that are being evaluated in either a laboratory or simulated environment.

Levels 1 and 2 categorize fault identification and diagnosis techniques that are purely theoretical or are presented with a formal mathematical treatment. Papers at this level do not report concrete outcomes from case studies or field trials.

Fig. 4 highlights the TRL maturity levels we observed across all our domains of interest. Amongst the survey papers are studies of fault identification and diagnostic techniques that have moved beyond the laboratory and are being applied in real-world environments. In these papers, we should expect to see state-of-the-art exemplars that detail how ICPS respond to and recover from fault situations they encounter. The papers we classified at TRL 7 and above present evaluations of how well these techniques detect and analyze faults and why these approaches were adopted.

5.1. Studies from aerospace and avionics
Fig. 5 highlights where the diagnostic research is focused in the aerospace sector. The research focus on flight control, high-dependability and predictive fault management aligns with the observations from the studies at the highest TRL discussed in this section.

Earlier rover designs implemented discrete fault management within each subsystem. On Curiosity, the architecture implements monitors, code within each module whose responsibility is to recognize anomalous behavior. Each module has specific knowledge of the subsystem they are operating within that informs their judgments while filtering sensor readings. Monitors signal problems by raising an error flag. As well as detecting faults, they maintain a count of the occurrences that is later used by the fault protection engine to ascertain how persistent or serious the fault is.

Benowitz explains that error flags are latched but nevercleared by the ICPS module-level monitors. This allows the fault protection engine to manage the overall health of the rover by polling in its own time, making decisions without being flooded by messages from subsystems. The fault engine maintains a model that contains a response that is appropriate to each situation the monitors are signaling. Curiosity has over 1000 monitors operating at any one time. Since the rover may be performing any number of different tasks at any time, ranging from landing to exploration, fault management has to be contextual.

Curiosity’s Model-Based approach is in contrast to the hybrid Model-Based and Data-Driven approach employed by Zolghadri et al. (2015). They profile the flight surface control systems they developed for the Airbus A380. Like Curiosity, their fault management is situation-aware. They note that fault signatures are often difficult to detect when an aircraft is parked or taxiing, or when the data rates from sensors are low. Their approach calculates residuals, the result obtained by comparing the current servo positions with the estimated position predicted by the model. They tune the sensitivity of Kalman filters to establish a trade-off between reliably detecting signals and robustness with respect to normal environmental variations. Azam et al. (2005) take a similar approach using neural networks to dynamically model and monitor fifty flight parameters. They discuss the difficulty of using model-based approaches that cannot manage the complexity of accommodating all reasonable parameters in all flight modes. Their data-driven approach also provides estimates of fault severity.


Download : Download high-res image (243KB)
Download : Download full-size image
Fig. 7. Where diagnostic research is focused in the industrial control sector.

Iverson et al. (2012) and Schwabacher and Goebel, 2007, Schwabacher and Waterman, 2008, Schwabacher et al., 2009 provide a highly detailed treatment of the hybrid fault monitoring system certified by NASA for International Space Station (ISS) operations and for Ares I-X launch pre-diagnostics. The Inductive Monitoring System (IMS) is a ground-based ICPS that processes telemetry from the ISS in near real-time. It relies on rule-based, Model-Based and Data Driven algorithms in three distinct subsystems of the IMS. They employ a clustering approach from a fixed number of training points, an approach that allows them to rapidly tailor IMS for new situations. Schwabacher et al. note that there is a need for mission-critical systems such as these to be flight-certified since ground controllers rely on them to make go/no go decisions about launches. They note that many Space Shuttle launches were delayed due to unreliable fault diagnoses. When launch faults can be evaluated more rapidly, redundant or hot-swappable modules can be deployed to reactivate launch sequences to meet critical time windows.

Studies such as these help to explain the proliferation of hybrid techniques encountered. In aerospace, 54% used Artificial Neural Networks and 38% employed Machine Learning, coupled with a range of Model Invalidation methods that were discussed in 43% of all aerospace studies.

5.2. Studies from the automotive sector
The automotive ecosystem is built up of millions of discrete, complex and mostly unconnected ICPS. Each vehicle operates as a self-contained network of co-operating subsystems. Stout’s Automotive Defect and Recall Report shows that in 2018, nearly eight million vehicles were recalled in the US to address software-based defects (Steinkamp et al., 2019). That total is higher than all the recalls for software issues in the previous five years. Fig. 6 highlights where diagnostic research is focused in the automotive sector.

Modern vehicles feature up to 120 embedded ECUs, connected by five or more system buses (Ebert and Favaro, 2017, Hegde et al., 2011). Sarecco highlights how large and complex the software is currently in vehicles, reporting that the 2017 Ford 150 pickup requires 150 million lines of code (Saracco, 2016). Charette (2009) contrasts this with the F-35 Joint Strike Fighter that required only 5.7 million lines of code while the Boeing 787 Dreamliner uses only 6.5 million lines.

This complexity is reflected in the automotive survey papers at the highest TRL. Nasri et al. (2019) explain that the increasing sophistication of in-car electronics, including Adaptive Cruise Control, Lane Detection and Light Detection And Ranging (LIDAR) technologies, leads to more intricate fault scenarios. They detail the implementation of diagnostics that analyze messages flowing between subsystems on the vehicles Controller Area Network (CAN). Many of the current diagnostic tools rely on proprietary software from vendors that are not easy to integrate into system-wide diagnostic frameworks. They detail their implementation of a hierarchical chain of localized diagnosers that are monitored by a single global fault analyser. A Directed Graph approach is used to identify faults, capturing CAN messages via hardware-in-loop connections.

The scope of what is deemed a “safety-critical” component in the automotive sector is also changing. In May 2018, back-up cameras became mandatory on US vehicles, transforming an optional luxury item into something that required much more rigorous quality control and deeper vehicle integration (Steinkamp et al., 2019).

Over-the-Air (OTA) access to diagnostic data from automobiles is profiled as one route to addressing the difficulty of fault-finding in disconnected automotive ICPS. The global remote diagnostics market is forecasted to grow at 17% annually over the next five years, driven primarily by the potential operational cost savings to automakers (Technavio, 2018). Steinkamp et al. describe General Motors new OTA system which is capable of handling 4.5 TB of data per hour from vehicles (Steinkamp et al., 2019).

However, Dragojević et al. (2018) identify remote access to diagnostic data from a vehicle as a significant technical challenge. Traditional automotive architectures featured highly-specialized ECUs that were optimized for minimal functionality to balance safety concerns. Full operating systems for vehicles emerged though middleware such as Adaptive AUTOSAR (Fürst and Bechter, 2016), leading to greater opportunities to aggregate diagnostic data that could be shared with remote fault analysis systems. Without functionality such as OTA, remote vehicle diagnostics cannot be performed in an IIoT ecosystem. Dragojevic et al. profile their work on an OTA bridge solution that connects with the on-board vehicle network. However, they note that Adaptive AUTOSAR needs to encompass safety aspects to certifiable levels before it can be widely deployed.

Kane, Fuhrman and Koopman detail the use of runtimemonitor-based oracles that mine the data used by OTA systems for fault finding (Kane et al., 2014). Runtime monitors analyze system traces to see if they conform to acceptable behavior patterns. They tune their oracles using large amounts of previously captured telemetry and describe methods used during live vehicle trials. Since monitors operate as hardware-in-loop devices and often interact with safety-critical components, they have to be designed as high-integrity devices. They address this by creating isolated monitors with well-defined interfaces.

5.3. Studies from manufacturing and control
Unlike the automotive and aerospace sector, most industrial systems are stationary in one location and are therefore easier to connect into factory-wide monitoring systems. Industrial production machinery therefore offers numerous opportunities to perform local or remote diagnostics. Ramos et al. cite maintenance costs of up to 60% of the production costs as a key driver for factory diagnostics and prognostics (Ramos et al., 2011). Fig. 7 highlights where diagnostic research is focused in the manufacturing and industrial control sector.

International, industry-wide initiatives foster standardization across this sector. Chen et al. (2012) discuss trials of sensors for gearboxes in the context of manufacturing initiatives such as the Machinery Information Management Open Systems Alliance (MIMOSA) (MIMOSA, 2019). Lee et al. (2015) discuss Industry 4.0 and Big Data as similar driver of standardization. Their approach demonstrates end-to-end factory machinery feeding sensor data into multiple analytical systems for near real-time fault identification and prediction. They employ deep-learning for Data-Driven prognostics.

Ramos et al. (2011) also profile Service Orientated Architectures to expose fault-finding services at multiple factory levels. Their case study focuses on self-recovering machinery that is supported by the factory infrastructure using hardware-in-loop techniques. Manufacturing is typically managed by multi-layer IT infrastructures that connect higher-level Enterprise Resource Planning (ERP) through layers down to factory automation systems such a SCADA. Ramos et al. profile their eSonia system which manages assets on multiple levels. Many production operations require assembly lines to be able to be re-configured dynamically to suit changes in demand. This requires a degree of self-awareness from plant equipment, which must be able to signal if it is available when changes are requested.


Table 6. Recurring themes across sectors.

Theme	Aerospace	Automotive	Industrial Control
Existing degree of connectivity?	Low.	Becoming more connected.	Already highly connected.
Difficulty of becoming more connected?	Hard due to distance and low bandwidth.	Hard due to large number of discrete vehicle instances.	Already highly-connected due to high degree of localization.
Amount of diagnostic data available?	High.	Becoming very high.	Already very high.
Need for autonomous operation?	Very high in remote planetary rovers and drones	Very high due to cost of local fault repair.	Already established via predictive diagnostics and self-management.
6. Conclusions, gaps and future work
This scoping study was written with a view to providing an overview of mature fault identification and diagnosis techniques for practitioners who are seeking to understand the state of the current practice and who are creating ICPS. The wide use of Model-Based (62%) and alternative Data-Driven AI (33%) techniques across the aerospace, automotive and industrial control domains reflects the complexity of the current ICPS application space.

As the number of interconnected ICPS increases along with the intricacy of the tasks they manage, the use of Model-Based approaches alone was often profiled as becoming intractable. Milis et al. (2016) discussed the difficulties of calibration to align with real systems. Scalability of models was also discussed in this context but only (Yen et al., 2017) discussed partial models, a technique for segmenting models into sub-models. No studies profiled Digital Twins as a solution. Model-Based diagnosis remains a viable strategy, yet how we create complete-enough or partial models quickly and reliably remains a challenge. The AADL EV2 Error Annex has potential to be used beyond the early modeling stages however we found no evidence of its use in the field.

Model-Free AI approaches were evidenced as a viable way of addressing this challenge, demonstrating the increasing sophistication of current machine learning systems. However, there was no discussion of explainable AI, where the decisions made by algorithms could be justified.

The proliferation of hybrid fault systems that blend different aspects and techniques reached 19% in the industrial control sector, indicating the importance of further research into multiple-method solutions, where models are tuned by real-time data. Design-for-Certification was highlighted as a significant driver to ensure products could be deployed beyond the laboratory (Dragojević et al., 2018, Schwabacher and Goebel, 2007, Schwabacher et al., 2010).

Predictive diagnostics is a promising area that was often discussed in-context with the ability to mine sensor data with enough granularity to allow faults to be predicted. Predictive techniques were prevalent in 30% of all industrial control studies, driven by the availability of large amounts of local data. Further research to develop remote connectivity in the aerospace and automotive sectors should lead to more powerful predictive capabilities. However, the potential volume of the data available from these ICPS also presents challenges of scale.

Statistical aspects of Knowledge-based diagnostic approaches were poorly represented across the aerospace sector. Most applications of the technique in the automotive and industrial control sectors discussed Bayesian approaches and various Petri net derivatives. This may be due to the increasing presence of hybrid approaches which employ Knowledge-Based methods in the midst of other techniques. There was little evidence of traditional Expert Systems.

Connectivity is a key characteristic of ICPS yet it has deeper implications in our sectors of interest. Table 6 illustrates how connectivity for facilitating diagnostics is made more challenging because of the different environments ICPS operate in. Brief discussions in the papers of emerging cloud technologies pointed towards ways of establishing connectivity in more achievable ways.

While the TRL analysis provided a way of identifying and profiling the most mature approaches, those results cannot always be extrapolated across all three sectors. Almost all the avionic and aerospace studies profiled originated from organizations who were partnering with agencies such as NASA and ESA. These do not face the same intellectual property restrictions that restrict what we might expect to find published in the automotive and industrial control sectors.

During our paper selection, promising papers from the medical device ICPS sector gave a tantalizing glimpse of the differences and challenges that sector presents. We look forward to exploring that domain in a later study, where complex, safety-critical devices and regulatory certification are the norm rather than the exception.