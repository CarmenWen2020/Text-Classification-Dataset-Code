The last decade has shown an increasing interest on advanced driver assistance systems (ADAS) based on shared control, where automation is continuously supporting the driver at the control level with an adaptive authority. A first look at the literature offers two main research directions: 1) an ongoing effort to advance the theoretical comprehension of shared control, and 2) a diversity of automotive system applications with an increasing number of works in recent years. Yet, a global synthesis on these efforts is not available. To this end, this article covers the complete field of shared control in automated vehicles with an emphasis on these aspects: 1) concept, 2) categories, 3) algorithms, and 4) status of technology. Articles from the literature are classified in theory- and application-oriented contributions. From these, a clear distinction is found between coupled and uncoupled shared control. Also, model-based and model-free algorithms from these two categories are evaluated separately with a focus on systems using the steering wheel as the control interface. Model-based controllers tested by at least one real driver are tabulated to evaluate the performance of such systems. Results show that the inclusion of a driver model helps to reduce the conflicts at the steering. Also, variables such as driver state, driver effort, and safety indicators have a high impact on the calculation of the authority. Concerning the evaluation, driver-in-the-loop simulators are the most common platforms, with few works performed in real vehicles. Implementation in experimental vehicles is expected in the upcoming years.
SECTION I.Introduction
Automated vehicles have increased in maturity in the last decade, improving the driving experience and mitigating some drawbacks of manual driving. Studies show a decrease in the number of driver-caused accidents [1], an increase in passenger comfort, and a reduction in driver workload [2]. This increase in the safety and comfort of driving is a result of the introduction of advanced driver assistance systems (ADASs) that consider the driver in the loop (DiL). These systems are part of vehicles with a level of automation (LoA) 0, 1, or 2, as defined by the Society of Automotive Engineers (SAE) taxonomy [3]. Examples of such systems include lane departure warning for LoA 0, adaptive cruise control (ACC) for LoA 1, and lane-centering system with ACC for LoA 2.

In contrast, systems with a higher autonomy (LoA 3 and 4) can fully control the vehicle without driver intervention under specific circumstances [4]. Nonetheless, many factors motivate the idea that drivers should keep their hands on the wheel, e.g., recent crashes that have occurred with the autopilot activated [5], legal issues regarding responsibility [6], drawbacks with the driver resuming control [7], and the fact that people enjoy driving, and drive better than automation [8]. This unsettling and unsafe transition between partially and conditionally/highly automated systems is a well-known problem in automation [9] that remains a subject of research.

In parallel to these technological, social, and legal barriers, there is a need to leverage new sensor technologies and advanced control methods to enhance driver performance and comfort in partially automated vehicles. To this end, industrial entities and researchers are directing efforts toward the design of more cooperative ADASs in which the driver is kept in the loop and strongly interacts with the automated system at the control level. The novelty of these systems lies in their highly cooperative nature, achieved by simultaneously combining the control actions of driver and automation for the vehicle guidance, in contrast to the traditional methods of separate task control and traded control.

However, determining how the skills of drivers and automated vehicles can be smoothly combined for optimal low-level cooperation remains a challenge [10]. An attractive approach for achieving such driver-automation interaction is shared control, a concept inherited from the field of human–machine cooperation, with diverse applications in robotics (e.g., medical robots operated under haptic guidance [11]).

Shared control was first defined by Sheridan and Verplank [12] as “the case where both automation and human work on the same task and at the same time” [12]. However, this definition is not standardized within the research community, which is working toward developing a common definition to separate shared control from other types of human–machine cooperation [13] (e.g., cooperative, traded, and supervisory control).

Despite the absence of a solid definition, many applications in automated driving based on shared control have emerged. Researchers agree on the two following modalities.

Haptic guidance systems [14], in which force feedback is provided on the actuator of a mechanically coupled system (e.g., lane keeping with torque assistance).

Input-mixing systems [14], [15], in which the automated system receives input from the driver and complements it with an additional control signal if necessary (suitable for vehicles with mechanically uncoupled steering systems).

A review of the literature offers two main directions of research: 1) an ongoing effort to advance the theoretical comprehension of shared control [13], [14]; and 2) a diversity of system applications [16]–[17][18], with an increasing number of such works having emerged in recent years. However, there is no global synthesis of these efforts to evaluate the current state of this technology and serve as a basis for future developments. In a recent review, Huang et al. [19] presented a brief review of the status of shared control in the automotive context, but without any evaluation of the related systems. Additionally, Petermeijer et al. [20] evaluated various haptic guidance systems that had been reported through 2014 for a variety of supported driving tasks but considered only model-free control methods. To encompass the complete field of shared control in automated vehicles, this article presents a review with the following objectives.

Concept: Summarize efforts in the comprehension of the concept “shared control” specific to automated driving.

Categories: Present the contributions oriented toward shared steering control applications by categories.

Algorithms: Analyze steering shared control algorithms, based on design, implementation, evaluation, and results.

Status: Determine the status of the technology and suggest future works related to shared control ADASs.

Section II explains the methodology of this work, including the article selection criteria and the categories of shared control algorithms. Section III presents a theoretical review with an emphasis on automated vehicles. Section IV provides an overview of application-oriented contributions, which are further detailed in Sections V and VI, with an evaluation of the most relevant works in the coupled and uncoupled control frameworks. Section VII summarizes the review and offers a discussion of current challenges, the status of the technology, and future work. Section VIII presents the conclusion.

SECTION II.Methodology
The scientific literature supporting this article was collected from a variety of online databases (e.g., Google Scholar and Web of Science) using various keywords, such as shared control, haptic guidance systems [20], parallel autonomy [21], intelligent copilot [22], cooperative steering assistance system [23], and semiautonomous vehicle control [24]. The first search started in June 2017 and ended in November 2018, with the result that 100 contributions related to the field were found. From the literature there are three main conclusions.

Efforts have been made in the research community to establish a proper definition of shared control in the field of vehicle guidance (e.g., the creation of the Shared Control Committee [25] and a new topology for applications in different domains, including the automotive domain [26]).

The number of works on automated driving applications based on shared control has increased over the years.

A high percentage of works on system applications use the steering wheel as the haptic channel, whereas only a few consider the pedals (accelerator and brake) as the control interface [21], [27]–[28][29][30][31][32][33][34] (refer to [20] for more details on these systems).

These findings motivate the first-level division of the review into Theory (see Section III) and Applications (see Section IV). The former comprises topics related to shared control that can facilitate comprehension of the term in the context of automated vehicles: definitions, relation to arbitration, metaphors, driving task levels, use cases, and control frameworks.

The selection criteria for theory-oriented articles are as follows.

Must be published in a scientific journal or proceedings.

For works supporting definitions, relation to arbitration, metaphors, and cognitive levels of driving tasks, the field of search is human–machine cooperation.

For works contributing to use cases and control frameworks, the field of search is specific to automated driving.


Fig. 1.
Methodological framework of this review.

Show All

Subsequently, the application-oriented contributions analyzed in Sections V and VI, considering control mechanisms, methods, and algorithms that use the steering wheel as the control interface. These categories are defined as follow.

Control mechanisms: Systems may be either mechanically coupled or uncoupled. In the former case, the driver interacts with the automated system through haptic feedback and has the final authority if he/she applies sufficient force. In the latter (e.g., drive-by-wire), the controller can complement the driver's input, offering a new control paradigm in which automation has the final authority. Controllers for these two mechanisms differ in concept, design, and results.

Control methods: Shared control algorithms may be either model-free or model-based. This division emphasizes the cooperation achieved through driver-automation interaction rather than the controller itself [e.g., a model predictive controller (MPC) could be assigned to the model-free category if the cooperative/shared component is not modeled].

Control algorithms: The steering controllers and arbitration algorithms to share the lateral control of the vehicle.

The selection criteria for application-oriented articles are as follows.

Must be published in a scientific journal or proceedings.

The field of study must be automated driving.

The system was tested in simulation or real vehicle.

The control interface must be a steering wheel (physical or virtual). Works using a different actuation system (e.g., a joystick or touchpad) are excluded from this review.

The steering controller must follow the definition of shared control presented by Abbink et al. [26] (see Section III-A).

Additional literature was collected from December 2018 through August 2019 to collect the most recent works. Fig. 1 shows the methodological framework of this review.

SECTION III.Theory-Oriented Contributions to Shared Control in Automated Vehicles
This section presents an analysis based on relevant studies performed by experts in the field of shared control specific to human–machine cooperation and automated driving [12]–[13][14], [20], [26], [35]–[36][37][38][39][40][41][42][43][44][45][46][47][48][49][50][51], related to the technical and practical comprehension of shared control. This section addresses six main aspects: 1) the definitions; 2) the concept of arbitration; 3) the metaphors; 4) the driving task levels; 5) the use cases; and 6) the control frameworks.

A. Definitions
Sheridan and Verplank [12] defined shared control for the first time in 1978 as a particular mode of supervisory control. Specifically, it consists of “human and machine working on the same task and at the same time.” This interplay can be achieved in two different ways: 1) The machine may extend human capabilities (e.g., a power steering system); or 2) The machine may partially relieve the operator of the total task workload (e.g., a robotic arm with haptic feedback).

Inagaki [36] includes partitioning, in which a global task is divided into subtasks executed by individual agents, as a third type of shared control. An example is a case in which the driver controls the steering wheel and the automated system manages the accelerator and brake. However, this concept is not generally considered by the research community to fall under the definition of shared control; instead, it is more closely related to cooperative control.

Additionally, these works differentiate between shared and traded control (or on–offcontrol), in which “human and machine work on the same task but at a different time.” In this type of interaction, the machine can either replace or back up the human. This difference is relevant to the automotive domain because most advanced ADASs (e.g., commercial autopilots) operate under traded rather than the shared control mode. The main drawback of traded control is that drivers normally overtrust automation and fail to regain manual control after a short-notice take-over request.

Endsley [35] positioned shared control at the fourth LoA on a ten-level scale, where “[the] human and the computer generate possible decision options... however, carrying out the actions is shared between the human and the system.” This definition gives the final authority to the human and allows collaboration at different levels.

Abbink et al. [26] presented a detailed definition to find common ground regarding shared control and to standardize the concept across different application domains. This work described guidelines for the application, design, and evaluation of shared control systems, including a clear and exclusive definition. According to the authors in shared control the following hold.

The human and robot must act congruently, i.e., continuously (in contrast to the human-says-robot-does approach) and on the same specific task (excluding the partitioning concept of Inagaki).

The human and the robot must both be engaged in a perception-action cycle, excluding warning alerts (e.g., lane departure warning).

The task must be individually feasible under ideal circumstances, excluding systems such as antilock brake systems and electronic stability programs, thereby narrowing the extension category proposed by Sheridan.

This definition permits a distinction from other types of human–machine interaction and presents a path toward the common use of the term “shared control” in automotive and other domains.
B. Arbitration
Arbitration in the context of cooperative vehicle guidance is a time-critical-structured negotiation between the human and the machine that achieves, in a timely fashion, a clear and optimal goal for the overall system [37]. In shared control of vehicles, an arbitration system is necessary to harmonize the decision and control actions of the driver and automation [45].

This concept is represented by (1), as a combination of the driver input (ud) and the automation command (ua) with a variable authority (λ∈[0,1]). With conventional steering systems, it is not possible to include the driver and motor torques into the formula. However, the formula can be part of the driver's mental model [52] or can be interpreted as the system providing part of the torque (λ %) and the driver providing the rest ((1−λ) %) [53]. In contrast, using a steer-by-wire mechanism allows blending the steering angle commands of the driver and automation in parallel.
u=λua+(1−λ)ud,0≤λ≤1.(1)
View Source

The arbitration function can be either part of the controller or part of the decision-making layer. For example, in a path-following controller, the arbitration function is implicit; when a higher lateral error is present, the system exerts a greater force on the steering and is assigned higher authority to avoid lane departure. Other cases in which the influential variables are not related to the tracking performance, such as the driver state [54], time-to-collision (TTC) [55], and time-to-lane crossing (TLC) [56], offer the possibility of a high-level arbitration function that influences the controller behavior.

C. Metaphors
A good design is sometimes preceded by a vision and a mental model of the end product, instead of being based on sampling technologies and following procedures [38]. Accordingly, some authors have made use of metaphors to compare driver-automation interaction modes with real examples of agent cooperation to extract meaningful design concepts for the development of cooperative driving systems (see Fig. 2).

The rider–horse metaphor (1) or H-Metaphor [38] was introduced in 2003 by Flemisch as part of collaborative research between the German Aerospace Center (DLR) and Langley Research Center (NASA) to study the similarities between driving an automated car and riding a horse. When riding, the human controls the horse mainly through the reins. It creates an interplay in which the horse and rider sense each other's actions through a haptic channel (e.g., the seat on the horse, reins, or spurs). In a shared control situation, the rider can take the horse under a tight rein to exert more direct control or can use a loose rein to provide the horse with a higher degree of autonomy. The human takes advantage of the horse's field of view and sense of safety, but the human is still in control. Similarly, systems based on shared control should provide assistance to the driver on a continuous spectrum of authority. This coupling and automation scheme has strongly influenced the EU project HAVEit [57]. It also motivated the H-Mode [58], a control and interaction scheme that combines shared and cooperative control applied to vehicle guidance.

The instructor–student during aviation lessons (2) is a second metaphor found in the literature [41], [50], [59], which describes the interaction between a rookie flier and an experienced aviation pilot during flying training sessions. In this scenario, the control mechanisms of the pilot and student are coupled. The expert aviator can assist the rookie pilot in two different modes: 1) active, by exerting forces on the control system to assist in the execution of maneuvers, or 2) passive, by holding the steering control with different forces (variable stiffness [50]), to communicate to the student approval or disapproval of the commanded action. Similarly, automation can assist a driver in either an active or a passive manner.

The joint–carrying of an object (3) is another example of shared control [48], which emphasizes the collaboration in a task between two agents that share a load, and is responsible for its control and guidance. In this example, the agents have different perception capabilities, since one is walking forward and the other one backward. Yet, both are needed to achieve the task. Similarly, in automated driving, vehicles have a better field of view than humans, but drivers still have better predictive situation awareness [60]. In both cases, the information perceived by each agent complements each other to achieve the task.

The parent–child metaphor has also been used as a shared control example [43]. For instance, a parent teaching a child to ride a bicycle (4) provides a good illustration. In this scenario, the parent is always in direct contact with the bike, but the child has most of the authority while he/she keeps the balance. However, if the child starts wobbling, the parent intervenes with more authority to protect the child. Applied to automated driving, drivers like to feel in control of the vehicle. Therefore, automated systems must avoid overwhelming drivers while they are performing well. Yet, if the driver leads the vehicle to an unsafe condition, the system must intervene in proportion to the risk to prevent accidents. Nonetheless, the intervention should be gentle to avoid rejection of the assistance.

From these four examples, the following principles can be drawn regarding shared control systems in automated vehicles.

There should be a bidirectional communication channel.

The vehicle should obey the driver's intention whenever it does not lead to an unsafe condition.

The automated system should assist the driver in proportion to the present risk.

The automated system can assist the driver either actively or passively.

Fig. 2. - Metaphors of shared control for automated vehicles.
Fig. 2.
Metaphors of shared control for automated vehicles.

Show All

D. Driving Task Levels
A driving task can be shared between human and automation at different levels of skill (or levels of cognition): strategic, tactical, and operational, as described by Michon [61]. Petermeijer et al. [20] refers to the latter two as maneuvering and control. Abbink et al. [26] considers four levels, adding execution as a complement to operational tasks.

Strategic activities refer to planning (i.e., how to go from point A to point B). According to the SAE J3016 standard [3], this level is not part of the dynamic driving task (DDT). For this reason, it is uncommon to find a real example of shared control with the strategic component in automated vehicles. However, some longitudinal control applications, such as eco-driving, have a high strategic component [20].

Tactical tasks are specific to driving maneuvers, e.g., overtaking, in which a decision component of the driving task arises. In some aspects of the DDT, the tactical level is strongly related to the operational level (e.g., object and event response execution) [3]. However, some driving applications are found in which there is a tactical shared control module that is separate from the lower action level. For example, in [23], a tactical decision law is established between the driver and the automated system to select which low-level controller needs more authority, depending on the torque difference between the driver and automation commands.

Operational functions relate to vehicle control, specifically to the commands sent to the actuators (e.g., the lateral error controller output). In parallel, the execution level is in charge of the low-level control actions needed to reach the operational set point. For example, in a lane keeping assistance system (LKAS), the lateral controller finds the optimal steering angle to improve the tracking performance (operational level). Additionally, this command must be executed by the steering motor, which possesses an internal position controller for executing the commanded steering angle (execution level). These two levels are commonly considered collectively. Generally, most works on shared vehicle control tend to concentrate on the operational-execution level.

Based on these levels, various frameworks for shared and cooperative control have been proposed. Flemisch et al. [48] categorized shared control as the sharp end of human–machine cooperation, considering only the operational level of a task, which is the common approach in system applications based on haptic guidance. On the other hand, Abbink et al. [26] proposed a general framework for sharing the control of a task at all skill levels, permitting bidirectional learning and communication through knowledge-rule-skill behavior. These efforts were combined in a joint publication by Abbink and Flemisch, in which shared control was considered as part of human–machine cooperation at all cognitive levels [13].

E. Use Cases
Because of the high level of intervention of the driver in shared control systems, the applications found in automated driving are mostly relative to driver-assistance and partially automated vehicles where the driver is still in the control loop.

Lane keeping is the most common task addressed through shared vehicle control. It has been studied in various forms, such as path following, with the intent of enhancing tracking performance [62]; disturbance rejection, for the case in which an unexpected force impacts the vehicle [63], [64]; road departure prevention, in which freedom of steering is permitted within the lane but unexpected lane departures are avoided [65]; and curve negotiation, based on a study of driver behavior when navigating a curve [66]. These systems are strongly related to the operational level.

Obstacle avoidance is an interesting field of research because of its safety implications. It can be executed in different forms, such as a lane change, in which the vehicle crosses from one side of a lane divider to the other and remains in the new lane [67]; double lane change, performed to overtake an obstacle [68]; and unexpected obstacle avoidance, with a focus on the conflicts that arise when the driver and the automated system have different intentions [23]. Such tasks are related to the tactical level of shared control.

Control resumption considers the scenario in which the driver takes back control of the vehicle, and the system must smoothly return its authority to the driver [7], [69]. Such applications are relevant in automated vehicles with an LoA 3-4, in which the driver can still step into the loop.

Fig. 3. - Coupled steering shared control framework.
Fig. 3.
Coupled steering shared control framework.

Show All

F. Control Frameworks
The literature reveals two defined frameworks based on different types of control mechanisms used to share the driving task [14], [70]. The names used for these frameworks in the present review are coupled and uncoupled shared control. For both cases, it is assumed that there is a control interface (e.g., steering wheel, accelerator pedal, or brake pedal), with an electronic actuator that represents automation, and a guidance system for turning, accelerating, or braking the vehicle.

Coupled shared control framework is relevant to haptic guidance systems [14], [70], in which the automated system and the operator interact through force feedback. In this case, the control interface and the guidance system are mechanically coupled. Therefore, the control action executed by the driver is immediately applied to the vehicle, giving the final authority to the human operator if he/she applies sufficient force. The electronic actuator serves to communicate the automation intention to the driver, but it also applies control actions to the guidance system with the intent of supporting the driver, reducing the workload and the control effort.

Uncoupled shared control framework is also known as input-mixing [14], [71] or indirect [70], [72], [73] shared control. This paradigm is suitable for drive-by-wire systems, in which the control interface and the guidance system are mechanically uncoupled. This mechanism permits the inclusion of an intermediate controller that postprocesses the driver's commands and complements them in accordance with defined automation goals. Therefore, the final authority is given to the automation, although under normal circumstances, the system must act as a virtually coupled system. Haptic feedback is always necessary to communicate the automation intention to the operator (following the axioms of shared control system design presented by Abbink et al. [26]), but the interaction occurs virtually through the combination of both commands, thereby reducing the conflict at the control interface.

The following sections will focus on the specific controllers and applications found in the literature for sharing the control of a vehicle. The analysis is divided on the basis of the two control frameworks defined above (coupled and uncoupled), considering that there are relevant differences in their design, implementation, evaluation, and results.

Fig. 4. - Uncoupled steering shared control framework.
Fig. 4.
Uncoupled steering shared control framework.

Show All

SECTION IV.Application-Oriented Contributions to Shared Control in Automated Vehicles
Considerable work has been presented regarding application-oriented contributions to shared control in automated vehicles. The applications vary in terms of the control interface and the driving task. Systems related to the longitudinal control of a vehicle (accelerating and braking) are few compared to those developed for shared steering control, but some relevant works are found in the literature, especially for coupled shared control systems. The main contribution in this direction was presented by Abbink et al. and Mulder et al., using a haptic accelerator (gas) pedal for a car-following task [27]–[28][29][30][31]. Other use cases include eco-driving [33] and traction control on a slippery surface [32]. Additionally, one work has considered both a haptic accelerator and a haptic brake in a merging scenario [34]. Also, an uncoupled shared controller has been developed that considers both steering and pedals operation for a left turn across traffic [21], [74].

By contrast, however, the number of contributions focusing on shared steering control exceeds one hundred. Therefore, detailed analysis and evaluation of these systems is presented in the following two sections, based on the two corresponding control framework categories specific to the steering system (coupled and uncoupled steering shared control).

In coupled shared steering control the driver and the automation interact through a motorized steering wheel that is mechanically coupled to the vehicle tires. The automated system applies torque through the electric motor, while the driver responds through the contraction of the arms in accordance with the perceived force [14]. A schematic representation is given in Fig. 3, where Td is the torque from the driver's arms and Ta is the torque applied by the automated system through the motor, which together with the self-aligning torque Tal generates a feedback torque Tf at the steering wheel. In the manual mode, Ta=0 and Tf=Tal, while in the shared control mode Ta≠0 and Td≠0. In the case, that Ta≫Td, the system is in the fully automated mode.

In uncoupled shared steering control the driver controls the vehicle indirectly through an uncoupled steering system [e.g., steer-by-wire or active front steering (AFS)], which allows the virtual combination of driver and automation control actions before its execution. In this method, the automated system incorporates two controllers (see Fig. 4). One controller is for the guidance of the vehicle, achieved through the automation torque Ta. The second controller provides the haptic feedback Tf to the driver, to inform about both the wheel position and the automation intention. In the manual mode, the steering angle matches the driver intention (δ=δd) and Tf=Tal, thus, acting as a normal steer-by-wire system. In the fully automated mode, the driver's intention is ignored by the automation controller, while in the shared control mode, the driver command affects the behavior of automation with the degree of authority assigned by the arbitration system.

Considering these definitions, detailed analyses with an emphasis on shared steering control and arbitration algorithms are presented in the following sections.

SECTION V.Detailed Analysis of Coupled Steering Approaches
As mentioned in Section IV, in a coupled vehicle steering system, the driver, and the automated system share control by exerting a continuous torque on a motorized steering wheel [75]. The driver understands the system's intention through the haptic channel and then decides whether to override it or accept it. If the steering motor torque is too low, there is no effect on the driver behavior. By contrast, an excessive torque may overwhelm the driver, compromising safety and causing discomfort during driving. Therefore, the design of the torque strength is of great importance. However, according to Paassen et al. [50], the steering force is not the only relevant variable in the control algorithm design process; instead, this process comprises four relevant aspects (see Fig. 5). The first is related to the trajectory generation, and the rest is the decomposition of the control effort into three components as follows:

the human-compatible reference (HCR);

the level of haptic support (LoHS);

the strength of haptic feedback (SoHF); and

the level of haptic authority (LoHA).

The HCR, which belongs to the strategic level of the driving task, is the reference trajectory based on human driving patterns that will be tracked by the automated system. This aspect is particularly relevant when the driver is negotiating a curve because humans usually cut the bend instead of driving along the centerline [66], [76], [77]. If the trajectory does not follow the proper design, conflicts may arise even when the driver is behaving correctly. This criterion reflects the axiom presented in [26], which proposes that in shared control, the automation behavior must follow a human-centered design.

Fig. 5. - Representation of the four design aspects considered in coupled shared control: HCR, LoHS, SoHF, and LoHA.
Fig. 5.
Representation of the four design aspects considered in coupled shared control: HCR, LoHS, SoHF, and LoHA.

Show All

The LoHS is the feed-forward component of the control torque, which provides anticipatory behavior and is applied in open-loop, inducing an appropriate action to the driver rather than minimizing the tracking errors. The LoHS depends on variables related to the trajectory behavior, such as the curvature (ρ) [50] or the reference steering angle (δR) [78]. For example, when the vehicle is approximating a curve, a force acts over the steering wheel even if the driver remains in the center of the reference trajectory.

The SoHF is the feedback component of the control torque and differs from the LoHS in that it works in closed-loop as the force depends on the tracking errors, e.g., lateral and angular errors with respect the HCR. The SoHF is related to the control strategy that calculates the correct amount of guidance torque, which is one of the main challenges in driver-automation controllers design [26], which look for the balance between driver comfort, road safety, and effort efficiency.

The LoHA on the other hand is the magnitude of the stiffness around the automation target steering angle (θa) [79] and is based on the idea of a variable impedance of the steering control mechanism [14]. Other works [67], [80] present this design option with the name of stiffness feedback. It is described in [50], using the aviation lessons metaphor (see Section III-C), as the resistance force exerted by the pilot instructor grabbing the control interface to reject or approve the student pilot actions. The higher the LoHA value is, the harder it is for the driver to move the steering wheel, giving more authority to the automated system. In contrast, the lower the LoHA is, the easier the steering task is for the driver. Different from the active guidance torque, the LoHA is passive, because it only has an effect when the driver deviates from the automated system intention. One benefit of considering the LoHA separated from the guidance torques (SoHF and LoHS) is that the system authority can be decreased or increased without considerably affecting the default controller behavior. The LoHA can be interpreted as a proportional gain to the guidance torque [50], [78]. However, in practice, it appears as an additional term. Some works present it as a proportional controller that depends on the lateral error at the center of gravity [14], [50], [67], [77], [79]–[80][81][82][83]. In [80], the authors used this lateral error in combination with the difference between the driver (θd) and automation commands. Other works [23], [64], [84]–[85][86] have used the LoHA concept at the tactical level to shift between two different objective controllers: a strong lane keeping and a controller designed to operate as a power steering. In [87], Balachandran et al. evaluated the LoHA in an obstacle avoidance scenario based on the prediction horizon.

With these concepts defined, the next sections will describe the specific control algorithms used in the development of steering shared control ADAS. In this sense, as mentioned in Section II, the present work recognizes two control methods for coupled shared control, depending on the absence or presence of a driver-automation model. These are model-free and model-based controllers.

A. Model-Free Coupled Shared Controllers
These controllers use a feedback error signal and do not consider a driver-automation model. It was the first methodology used in the haptic shared control approach for automated driving [88]. This section describes their design aspects with an emphasis on 1) control algorithms, 2) system variables, and 3) performance results. This work identifies three well-defined model-free shared control techniques.

1) Steering Angle Difference
The automation torque (Ta) is directly proportional to the difference between the driver (δd) and automation (δa) control inputs (Δδ=δd−δa). The driver input is the steering angle applied through the steering wheel, while a lateral vehicle controller calculates the intention of the automated system. In this case, the higher the value of Δδ is, the higher the authority assigned to the automated system. Works using this method [7], [62], [69], [75], [88]–[89][90][91][92][93] require the use of two different controllers. The first is a lateral controller that runs in the background; this controller would guide the vehicle if the system is in the fully automated mode. Different algorithms are used for this task, for example, calculating the heading of the reference trajectory at a look-ahead distance [62], [75], a double PD control based on the lateral and angular errors [91], a double proportional control with curvature [93], an artificial potential field [90], and a human teleoperated command [92]. The second controller is a feedback controller that receives Δδ as input. The reported results show that 80% of the time, the P and PD techniques are used for the feedback controller; one author includes a learning algorithm to adjust the gains [91]. Also, Bautista [93] includes a controller with a variable proportional gain based on a risk assessment module that considers the TTC and TLC.

2) Tracking Errors
This strategy combines guidance and feedback in a single controller. In works using this method, the level of assistance is varied based on certain trajectory and control goals, such as the minimization of the lateral (yL) and angular (ψL) errors [14], [44], [50], [66], [67], [76]–[77][78][79][80][81][82][83], [94]–[95][96][97][98][99][100]. In general, the error calculation is performed using a look-ahead time and under the assumption of a constant speed and steering angle. The most common algorithms are P and PD controllers based on tracking errors. One work includes an integral component [100] for the calculation of the assistance torque. In [78], authors implement a combination of all four design aspects of shared control using a constant stiffness and including an anticipatory component (LoHS) in the controller.

3) Vehicle-System Model
Various works present coupled shared controllers that consider a road-vehicle model in their design [53], [71], [96], [101]–[102][103][104]. Although methods in this category use model-based controllers, the driver-automation cooperation is not part of the model. In [71], Katzourakis et al. used a robust controller for road departure prevention, and Nishimura et al. [102] presented a gain-tuning control method for assisting the driver with lane changing based on cooperative states and a driver-preview model. Iwano et al. [96] calculated the optimal torque based on a dynamic bicycle model with steering. Also, some authors propose the use of optimal control methods; Mars et al. [53] applied an H2 optimization technique while varying the degree of assistance, and Guo et al. [103], [105] designed a constrained MPC for road departure prevention, with a variation of the LoHA dependent on driver effort, and lane change intention.

The results of an analysis of previous works show that lane-keeping is the most common use case, at an average speed of 65 km/h, although some tests have been performed at 100 km/h [98]. Additional use cases include obstacle avoidance [67], [81], [82], [90], [93], [96], [106], curve negotiation [66], [76], [77], [79], [94], and control authority transference [7], [69]. One work tested haptic shared control for reverse parking assistance [107]. The test platforms used have mainly been DiL simulations, with a few exceptions involving testing on a real vehicle [69], [101].

Many benefits of these systems have been reported: an improvement in tracking performance (e.g., lateral error) [75], [88]–[89][90]; a lower visual demand, enabling the possibility of performing secondary tasks while driving [75], [88], [89]; reduced driver effort (reductions in the steering reversal rate [79] and driver torque [62], [66], [96]); improved driving under low-visibility conditions [53]; an increase in the TLC [99]; a smooth control transition and greater stability when transferring authority [7], [102], [103]; and a decrease in the number of collisions during obstacle avoidance [81], [90]. One work showed the benefit of the haptic guidance in reducing passive driver fatigue [99], and the consideration of the four design aspects listed above has been shown to result in a significant reduction in driver-automation conflicts [78].

However, although the evaluation of the neuromuscular behavior of the driver has been proposed for controller design based on the model-free control technique [14], [108] and various driver characteristics have been considered [97], these methods fail to incorporate the driving behavior into the torque calculations, which makes it difficult to correctly tune the gain for different drivers and, thus, reduce conflicts with the assistance system. This has led to some drawbacks: drivers may misinterpret the feedback from a haptic system [88], respond by increasing their control efforts [75], and experience a feeling of being overwhelmed [14], [62]. Undesired steering conflicts [96] and no reduction in steering effort [103] have also been reported. For additional information on the effects of haptic guidance systems on automated driving, the reader is referred to Petermeijer's analysis [20], which includes specific data from some of the works presented here.

B. Model-Based Coupled Shared Controllers
In shared control, the automated system communicates its desired intention to the driver through torque feedback. However, this communication channel is unidirectional and does not follow the design principles implied by the metaphors presented in Section III, which suggest a bidirectional interaction between the two agents. To this end, some authors have proposed the inclusion of a driver model to provide the automated system with the ability to estimate driver behavior under different circumstances [10], [17], [23], [52], [54], [63]–[64][65], [84]–[85][86], [109], [112]–[113][114], [119]–[120][121][122][123][124], [124]–[125][126][127][128][129][130]. With such a mutual understanding, the controller can work toward reducing conflicts and consider the level of cooperation in the control algorithm.

Many model-based controllers use the steering angle as the control variable because it offers robustness and compensation for nonlinearities [120], [131]. However, Negai et al. [132] stated that steering-angle-based controllers perceive the driver torque and the self-aligning torque as perturbations. Therefore, torque-based controllers are more suitable for coupling the driver and the automated system model. For this purpose, the inertia-damping-friction steering model allows the steering wheel angle to be related to the steering torque.

Research on this method has shown a notable increase in popularity in recent years. Therefore, a specific analysis of these systems is presented in Table I. The criterion for selection was based on the test platform (only systems tested in DiL simulations or real vehicles). This analysis provides insight into the current state of this technology and its acceptance. The information in Table I is discussed below in regard to several relevant aspects of the design and evaluation of the controllers, such as the driver-road-vehicle (DRV) model, the control algorithms, and the results reported in the literature.

TABLE I Evaluation of Model-Based Coupled Shared Steering Control Algorithms
Table I- Evaluation of Model-Based Coupled Shared Steering Control Algorithms
Driver models: The sensorimotor model was the first used for shared control applications. It was presented by Sentouh et al. [117], [133], and a similar approach was taken by Saleh et al. [110] and Mars et al. [111]. Its design considers that the driver uses cognitive, perceptual, and motor abilities while driving. Moreover, the model assumes that the driver performs two different tasks while keeping the vehicle within the lane. The first one is a compensatory action, using the near angle (θn) to maintain the centerline position. The second is anticipatory behavior, based on the far visual angle (θf), which considers the curvature ahead to steer the vehicle in a timely manner. It also includes kinesthetic feedback and a neuromuscular system that enables modeling of the driver's sensation at the steering.

This approach has been implemented as a simplified model with two states (near and far angles). Other works have used these angles to model the driver as a proportional controller (∝ [θn, θf]) [123]. Others have used a proportional model with respect to the lateral and angular errors ([yL, ψL]) [113], [122]. Additionally, these driver models have been used as driver agents in numerical simulations [123].

Other approaches include the use of a driver model based on movement primitives (movemes) [115], [116] and a variable preview-time model based on road curvature. Additionally, it is common to model the driver as a linear quadratic problem with a path-tracking optimization function [17]. Most of these models have been identified on the basis of real driver tests to obtain the optimal parameters [64].

Vehicle models: In most works, the vehicle dynamics are represented by the bicycle model [134], with states corresponding to the yaw rate (r) and sideslip angle (β). This model can be extended with the road information to represent a lane-keeping objective (single track model), adding states corresponding to the lateral error (yL) and angular error (ψL). Furthermore, it is of great importance to add the driver's perception of the system torques, which is achieved by including the steering system as a second-order model [133], [135], with states corresponding to the steering angle (δ) and steering rate (δ˙). Some works include a disturbance vector (w), considering variables such as the road curvature (ρ), the wind force (fw), and the road bank angle [120].

Generally, the DVR model is linearized around the longitudinal vehicle speed (vx), under the assumption that this value is constant. However, other authors, such as Soualmi et al. [121] and Nguyen et al. [123], have considered the nonlinearity and solved it by modeling the problem using the Takagi–Sugeno (T–S) identification technique [136], which allows the inclusion of time-varying parameters such as the speed and driver activity [52].

Controllers: Many authors embed the DRV model in an optimization control framework. Sentouh et al. [63] presented the first work using this approach in 2010, with the use of a linear quadratic regulator (LQR) controller that reduced the system intervention in a path-following task. This work paved the way toward different strategies using DRV models along with optimal control techniques, such as H2 optimal control [23], H2 preview control [109], [120], and MPC [113], [135]. Also, LMI optimization control is a common approach [64], combined with a T–S fuzzy modeling technique to deal with the variable parameters of the system [54], [112], [119]. Additionally, to ensure the stability of the system, the Lyapunov approach has been widely used. In another line of research, the game theory approach has been used in the design of optimal assistance systems, for which both the driver and the ADAS are modeled using the MPC or LQ methods in a cooperative shared control approach using the Stackelberg strategy [17], [114], [137]. In general, each controller must include the following objectives within the optimization function (J) and the system constraints (C).

Tracking (Jt,Ct): Minimize the lateral and angular errors (yL and ψL) or their equivalents (θn and θf).

Comfort (Jc,Cc): Minimize the sideslip angle, lateral acceleration (ay), yaw rate, and steering rate.

Sharing (Js,Cs): Minimize the torque conflicts between the driver and the automated system.

Arbitration: A normalized arbitration formula (1) has been used in various works [63], [65], in which a Gaussian function depending on the lateral error was used to distribute the torques of the driver and the system. Additionally, Nguyen et al. [52], [54], [123], [124] included the arbitration law within the mental model of the driver provided to the automated system, considering that the driver should be assisted under conditions of underload and overload [57]. Other works [23], [64], [84]–[85][86] have included a conditional law depending on a driver torque threshold, combined with information about the risk of the current maneuver and the driver's state (in terms of drowsiness and inattention).

Results: As a general conclusion, these developments have led to more comfortable and safer ADASs, with the benefit of keeping the driver alert and ready to take full control if needed. In addition, relevant benefits from the inclusion of a driver model are described in Table I: reduced driver torque effort, a reduction in torque conflicts, reduced demand for visual attention, improved tracking performance, and a smooth transition of authority. Furthermore, in the lane-keeping task, the driver is given a certain freedom to steer within the lane while avoiding departure from it. Additionally, driver modeling is beneficial for reducing torque conflicts on curves. Further benefits have been reported when considering the driver's state, enabling enhanced safety when the driver's capability is decreased. Driver acceptance of such systems has been found to be positive in various experiments [86], [114], but it is also evident that further research is needed in this area, involving more participants and scenarios.

Only one system [113] was tested on a real vehicle, and then only at a low speed (36 km/h). The rest were tested in DiL simulators at an average speed of 70 km/h. This information shows that this technology is still in the simulation stage, approaching the first implementations on real platforms but still under controlled environments.

SECTION VI.Detailed Analysis of Uncoupled Steering Approaches
Vehicles with an uncoupled steering system allow a variable ratio between the steering wheel angle and the final steering command. This decoupling introduces the possibility of a new form of shared control beyond the traditional approach of haptic guidance systems. In this case, the controller continuously receives the driver input (steering wheel angle) and then sends the final command to the wheel actuation mechanism. Consequently, the final authority over the vehicle is assigned to the automated system. Nonetheless, the design principles stated in Section III-C must be respected, and the controller must be designed to match the driver's intentions under ideal circumstances (e.g., safety is not compromised).

In this review, 30 works studying uncoupled shared control for automated vehicles were found [18], [21], [22], [24], [66], [68], [70], [72]–[73][74], [87], [135], [138]–[139][140][141][142][143], [143]–[144][145][146][147][148][149][150][151][152][153][154][155]. Similar to the previous section, the analysis of the controller is divided into model-free and model-based categories.

TABLE II Evaluation of Uncoupled Shared Steering Control Algorithms
Table II- Evaluation of Uncoupled Shared Steering Control Algorithms
A. Model-Free Uncoupled Shared Controllers
In this method, the final steering command is calculated using (1) with the control variable u=δ. The control command is a weighted combination of the driver input δd and the optimal automation signal δa, where λ is the authority gain. The major goal is the proper design of λ, which should be influenced by the driving context (e.g., maneuver risk, driver state, and vehicle status). If λ=1, the vehicle is in the fully automated mode, and if λ=0, the system is in the manual mode, while intermediate values represent the shared control mode. Another key consideration is the feedback torque provided by the automated system to inform the driver of its intention.

The first work using this technique was presented in 1999 by Fujioka et al. [138], with different static values for λ and a feedback torque proportional to the self-aligning torque. Additionally, Manabu et al. [139] used an authority law based on the switching-time (2–4 s) to ensure a smooth transition between driver and automation when resuming control. Other works [140], [156] used an artificial potential field method to compensate the driver actions for a lane-keeping use case. Also, a robust controller for road departure prevention was tested in a DiL simulator, achieving a 0.5% failure rate [142].

Anderson et al. from MIT [24] presented a MPC used as a path planner. It also served as a risk assessor, as the threat depended on the sideslip angle of the calculated trajectory and was linearized with a piecewise linear function. The feedback torque was proportional to the difference between the driver and automation commands. This controller was implemented in a simulator for a double lane change scenario to test different values of the threat thresholds for engagement and full autonomy. Later, as reported in [22] and [144], experimental tests of obstacle avoidance were performed in a teleoperated vehicle, resulting in a reduction of 78% in collisions and a 26% increase in the speed compared to manual driving.

Another line of research led by Li et al. [70], [72], [73] studied the effect of driver adaptation on shared control. The authors used an MPC for the automation control command, and the same optimization scheme simulated the driver, considering an internal model of the controller [based on (1)]. In these works, λ was assigned static values for evaluation. Alternatively, the system authority varies according to the driver's intention, which is calculated with a least-squares estimator.

Li et al. [149] implemented a fuzzy logic method for the calculation of λ, based on the driver's intention and the situation assessment. For the automation controller, this work developed a linear time-variant MPC. Simulation tests were performed for static and dynamic obstacle avoidance.

B. Model-Based Uncoupled Shared Controllers
A novel strategy has been proposed by Erlien et al. [146], Song et al. [68], and Schwarting et al. [21], in which the driver's steering command is considered in the cost function of an MPC optimization framework. In a fully autonomous MPC, different optimization functions are used to minimize objectives such as tracking performance (Jt) and comfort (Jc). In this shared control approach, an additional criterion is added to minimize the difference between driver and automation commands, i.e., the sharing function Js = min [δa−δd].

Erlien et al. [146] proposed this method, considering the lateral force on the wheel as input and adding two driving safety envelopes to the optimization problem to ensure safety while driving. One of these envelopes is related to environmental constraints, and the second limits the sideslip angle and the yaw rate. The existence of multiple feasible tubes (e.g., the areas on the right and left sides that are free for overtaking) gives rise to a nonconvex problem that is solved by analyzing each tube individually with a convex optimization solver and selecting the one with the smaller objective value. Later, Balachandran et al. [87] evaluated this controller with a predictive haptic feedback strategy based on the future horizon error. Tests were performed in a steer-by-wire research testbed.

Song et al. [68] presented a constrained MPC with an optimization function based on the driver steering angle command and the steering rate. Additionally, this work considered the vehicle dimensions as part of the constraint conditions for performing a successful double lane change. In an improved version of this work, Liu et al. [157] included a variable authority function based on fuzzy logic, considering the lane departure distance and an indicator of potential driver incorrect operation. All tests were performed using numerical simulations.

Schwarting et al. [21] used the same approach with model predictive contouring control (MPCC), with the longitudinal acceleration command integrated into the problem formulation. The uncertainty of the vehicle states was considered, and constraints on road limits and the yaw rate were designed. The test comprised maneuvers involving sharp turns with both passive and aggressive driver characteristics and demonstrated safe performance while following the driver input under safe conditions. Additionally, a traffic merging scenario was presented after a left turn at an intersection (LTI), resulting in safe driving with no collision with other vehicles. Tests were performed in a simplified DiL simulator.

Similar to the works presented by Flad on coupled shared control, Na and Cole [143], [150] and Ji et al. [152] presented a noncooperative approach using game theory to study the interaction between the driver and an AFS system from the theoretical point of view, using the LQR and MPC techniques for modeling and control. In this way, the drawbacks in time and cost presented by the experimental validation of steering assistance systems could be avoided. Recent works have shown an increase in the use of game theory for assessing uncoupled shared control [18], [154], [155]. One of these works [155] was also tested in a DiL simulator (see Table II).

On the other hand, Wang et al. [153] presented an output-feedback robust controller for path tracking, which included the cooperative objective function (Js). Results showed an improved path tracking ability and a reduced physical workload. Also, the controller preserved the robustness in the presence of disturbances and variations of the driver model parameters.

The results regarding these strategies show that the main benefit of the mechanical decoupling of the system is the reduced driver effort, which offers a distinct advantage over coupled systems. This ability to reduce the driver-automation conflicts makes the tactical maneuvers (e.g., lane change) an attractive case of study for the development of uncoupled shared controllers. However, the fact that the vehicle can move farther than commanded by the driver generates a nontransparent effect that requires a learning and adaptation process [66]. Additionally, from analyzing Table II, it can be readily seen that so far, few works have considered experimental tests, even in DiL simulators. Among the tests performed in real vehicles, one [140] had a low cooperative component, and the second involved only an experimental testbed [146]. This observation suggests that the current level of this technology is one step behind that of coupled shared control. Therefore, these systems still require further evaluation, which seems to be the next clear step, building on the continued increase in the number of related works in recent years.


Fig. 6.
Statistics on works addressing shared control in automated vehicles. (a) Numbers of applied and theoretical works on shared control in the automotive field. (b) Numbers of works using coupled (black) and uncoupled (blue) steering systems. (c) Numbers of works on coupled shared steering control using model-free (black) and mode-based (blue) control methods.

Show All

SECTION VII.Discussion and Perspective
The design and implementation of shared steering control systems for automated vehicles are currently still a challenge for two main reasons: 1) the concept of shared control is not standardized in the research community and may be confused with other types of driver-automation interaction, and 2) the complexity of the driver-automation interaction at the control level presents a nontrivial problem in the design of steering controllers. To add more clarity to the field, this article presents a review of the state of the art of shared control for automated vehicles from a theoretical point of view while also considering system applications. The technical and practical comprehension of the concept is clarified based on previous contributions from the research community. Additionally, a global understanding of the design of shared control algorithms is presented. A discussion of the main aspects presented in this review is given below.

The concept “shared control” has presented ambiguity in the scientific literature. However, efforts in recent years have led to a formal and complete definition presented by Abbink et al. [26] and a new representation in the context of human–machine cooperation and task support levels (see Flemisch et al. [13]). This definition can be translated to the shared steering control of automated vehicles as follows:

“The driver and the steering assistance system interact congruently in a perception-action cycle to execute a dynamic driving task that either the driver or the system could execute individually under ideal circumstances.”

The control frameworks for sharing the driving task are well recognized in the literature. In this article, they are referred to as the coupled and uncoupled shared control frameworks. In the former, a torque is exerted on the steering wheel, and methods based on this framework are suitable for mechanically coupled systems. Methods belonging to the second framework extend the driver's input and are suitable for use only in drive-by-wire vehicles. Works focusing on both frameworks are rapidly increasing in number [see Fig. 6(b)], with the coupled strategy naturally receiving more attention because most commercial vehicles use a coupled steering system. The main drawback of coupled shared control is the generation of torque conflicts between the driver and the automated system when they hold different intentions, while an uncoupled system may cause the driver to experience a lack of control when the automated system does not exactly follow the driver's intention.

The control methods vary over a wide range. An initial distinction was defined between model-free and model-based cooperative controllers. From this perspective, model-based controllers (e.g., controllers based on the MPC, LQR, LMI, and game theory approaches) have shown relevant benefits with the inclusion of driver models in the problem formulations. Bidirectional communication between the driver and the steering assistance system has allowed driver efforts to be reduced, performance to be improved, and torque conflicts, which are a major cause of system rejection, to be minimized. These benefits have led to increasing research interest in this methodology [see Fig. 6(c)]. Additionally, game-theory-based controllers are receiving considerable attention for both coupled and uncoupled shared control. Regarding the stability of these systems, a Lyapunov-based methodology has been used in the controller design to ensure robustness even in the presence of driver uncertainty.

The arbitration variables considered for optimizing the driving task are mostly related to the tracking performance (e.g., lateral error), but comfort parameters such as the lateral acceleration and steering rate are also considered. However, the latest works suggest the relevance of including variables that are not directly related to the control goals to modify the system authority, such as the state of the driver, for example, the drowsiness and inattention level. Also, some driving risk indicators (e.g., TLC and TTC) are relevant to modify the level of intervention of the automated system, especially in tactical maneuvers. Moreover, the driver's intentions and behavior characteristics seem appropriate to consider in the process of driver-automation interaction.

The use cases are mainly focused on lane keeping and obstacle avoidance. However, another interesting application is the transition of authority (manual-to-automated or automated-to-manual) when the driver resumes control or when the automated system possesses a different intention than the driver. The inclusion of the tactical level in shared control (arbitration system) is of great importance to achieve a progressive, low-conflict, and safe control transition. These applications are suitable for implementation in partially automated vehicles, but vehicles with a higher LoA could also be equipped with shared control applications, especially during takeover request scenarios.

The research groups are distributed all around the world, including in Europe [23], [158], the USA [146], [159], China [70], and other regions. One relevant group of investigators is located at TU Delft [20], [28], [82], with a focus on coupled model-free shared control techniques. Additionally, this institution participates in theoretical collaboration with Flemisch et al. [13], [38], [48] regarding the conceptualization of shared control. Another relevant research group is hosted by the IRCCyN, located in France [23], [65], [123]; this group specializes in coupled model-based control techniques that include a driver model within the shared control framework. Moreover, shared control for automated driving has been studied and developed within the frameworks of various projects, such as HAVEit [160] and the ABV Project [161], and recently is being studied in the context of fail-operational systems as part of the Programmable Systems for Intelligence in Automobiles (PRYSTINE) project, in which shared control algorithms are developed considering fail-operational in-cabin and surround sensors together with cooperative visual human–machine interaction [162].

The state of the technology can be derived from the information presented in Tables I and II, which summarize works with a high degree of technological advancement that have been tested on experimental platforms. Most of these systems have been tested in numerical simulations, whereas DiL tests and experiments with real vehicles are few. This situation reflects a technology under development, for which relevant tests have been performed but only under controlled conditions. It can also be concluded that shared control for uncoupled systems is one step behind coupled shared control in terms of its level of development. However, in both cases, increasing interest in this technology is being shown by the research community. Furthermore, driver acceptance studies show positive feedback and motivate further developments. The legal aspect will also be crucial for transitioning to the commercial stage, for which the main challenge is the variable assignment of authority in the DDT. Currently, the type of commercial ADAS that is closest to a system based on shared control is an LKAS. However, such a system lacks the continuous cooperative component that is present in the systems analyzed in this review.

In future works, it is expected that tests will be performed using real vehicles and experimental research platforms. The minimization of conflicts at the steering wheel during maneuvers is a priority for achieving good driver acceptance. Regarding application-oriented contributions, work on shared control algorithms that consider the driver state is a clear future line of research. Additionally, the characterization of different driver behaviors and the adjustment of the controller gains based on these factors will be key to the acceptance of these systems among drivers with different driving styles. Finally, the integration of shared controllers with other modules, such as driver monitoring systems, visual interfaces, and collision detection systems, will be necessary for the establishment of a complete collaborative driver-automation framework [162], [163].

SECTION VIII.Conclusion
This article has presented a review of shared control as applied to automated driving, with specific emphasis on the theoretical comprehension of the term, and on the analysis of system applications of steering control. The results show an increasing interest and relevant technological advances in this field, motivating further developments and likely leading to experimental tests in real vehicles in the near future.