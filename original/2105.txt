This paper presents a method for simulating water surface waves as a displacement eld on a 2D domain. Our method relies on Lagrangian particles
that carry packets of water wave energy; each packet carries information
about an entire group of wave trains, as opposed to only a single wave crest.
Our approach is unconditionally stable and can simulate high resolution
geometric details. This approach also presents a straightforward interface
for artistic control, because it is essentially a particle system with intuitive
parameters like wavelength and amplitude. Our implementation parallelizes
well and runs in real time for moderately challenging scenarios.
CCS Concepts: ‚Ä¢ Computing methodologies ‚Üí Simulation by animation; Physical simulation; Real-time simulation;
Additional Key Words and Phrases: water surface waves, liquid animation,
particle system, wave packets, computational uid dynamics, real-time simulation
1 INTRODUCTION
The motion of water surface waves is well-modeled by the two-phase
incompressible Navier-Stokes equations. The general form of these
equations is analytically and computationally intractable for detailed
water surface geometry, so researchers traditionally apply a smallamplitude assumption that eectively linearizes the problem and
restricts the waves to a height-eld dened over a two-dimensional
domain. This version of the water surface wave problem admits
sinusoidal wave solutions that have a speed depending on their
wavelength and water depth. However, although greatly simplied
by the small-amplitude assumption, the problem is still too complex
to solve analytically.
Research in computer graphics has approached this linearized
water wave problem in a number of ways. Several methods have
made progress by enforcing additional assumptions like shallow
water [Kass and Miller 1990], innite depth [Mastin et al. 1987;
Tessendorf 2004b], omitting solid boundaries, or assuming static
solid boundaries [Fournier and Reeves 1986; Jeschke and Wojtan
2015]. Other approaches use numerical techniques for solving partial
dierential equations in order to time-step through the water surface wave dynamics [Canabal et al. 2016; Tessendorf 2004a]. These
approaches handle far more general scenarios, but they introduce
nontrivial problems relating to stability, energy conservation, spatial
resolution, and artistic control. Lastly, some methods approximate
the waves themselves as Lagrangian particles [Yuksel et al. 2007].
This approach has the potential to handle very general scenarios
with moving boundary geometry, but it produces solutions closer
to those of a constant-speed wave equation, as opposed to a fully
dispersive water wave equation.
We aim to leverage the potential of Lagrangian wave particles, but
in a manner that plausibly simulates water wave dispersion. Instead
of associating each particle with a single wave crest, we associate
each particle with a packet of wave energy consisting of an entire
spectrum of wavelengths and wave trains. We then describe how
this wave packet moves and deforms to approximate the behavior
of linearized water surface waves.
This paper makes the following contributions:
‚Ä¢ Wave packets We introduce the concept of wave packets to computer graphics and describe their dynamics for
dispersive water waves.
ACM Transactions on Graphics, Vol. 36, No. 4, Article 103. Publication date: July 2017.
103:2 ‚Ä¢ Jeschke & Wojtan
‚Ä¢ Visual detail Our method improves upon previous Lagrangian particle approaches by exhibiting more visual detail (measured in wave crests per computational degree of
freedom), and by incorporating qualitative wave behaviors
like dispersion, diraction, refraction, reection, dissipation
from the literature.
‚Ä¢ Ecient computation The method is unconditionally
stable, requires no articial damping, is independent of
grids or spatial resolution parameters, and is inherently
parallel.
‚Ä¢ Novel control parameters We introduce new mechanisms which allow artists to directly control wave spectra
and computational complexity, exposing a straightforward
trade-o between visual detail and computational speed.
2 RELATED WORK
2.1 Computer Graphics Literature
The animation of water surface waves has interested computer
graphics researchers since at least 1980 [Schachter 1980]. As stated
in the introduction, the main strategy since then has been to apply a multitude of assumptions to the Navier-Stokes equations
in order to express the motion of the ocean in the form of sinusoidal waves [Hinsinger et al. 2002; Mastin et al. 1987; Tessendorf
2004b]. While such assumptions sacrice the ability to simulate arbitrary uid motion, they lead to extremely ecient computational
methods. Subsequent work augmented these simple models with
more interesting boundary conditions, splashes, spray, and breaking waves [Fournier and Reeves 1986; Gonzato and Le Sa√´c 1997;
O‚ÄôBrien and Hodgins 1995; Peachey 1986; Thuerey et al. 2007a,b;
Ts‚Äôo and Barsky 1987]. The excellent survey by Darles et al. [2011]
covers this ocean simulation literature in more detail.
Several novel approaches to water surface wave simulation have
emerged in the past decade. Jeschke and Wojtan [2015] generalized the above analytical methods to handle complex boundaries
while respecting wave behaviors like dispersion and diraction.
However, their method requires pre-computation and does not address moving boundaries. Instead of using the analytical Fourier
solution, other researchers have explored two-dimensional Eulerian simulation [Tessendorf 2004a]. Subsequent research extended
this method by addressing the accumulation of numerical errors
over time [Tessendorf 2014] and more accurately capturing dispersive eects [Canabal et al. 2016]. Boundary-only approaches also
show promise for eciently simulating more general ocean wave
behavior, though they currently require orders of magnitude more
computation [Da et al. 2016; Keeler and Bridson 2014].
The ‚ÄúWave Particles‚Äù approach of Yuksel et al. [2007] is most
similar to ours. It represents each wave crest with its own set of
particles, allowing wave reections and interactions with dynamic
objects. It is also straightforward to implement, parallelize, and
control. Nevertheless, the one-particle-per-crest approach can be
expensive when simulating long wave trains or high-frequency
waves. Similarly, it is dicult for this method to simulate wave
dispersion, because it adds a new dimension to the problem (one
particle per crest, per wavelength). The method also implausibly
transports wave energy at the phase speed instead of the group
Fig. 2. Our method can eiciently add subtle detail like rain ripples (le) or
boundary reflection waves (right) to existing scenes.
speed. Lastly, the approach does not address how to handle wave
eects like refraction, diraction, dispersion, or reection o nonplanar boundaries, although the subsequent dissertation [Yuksel
2010] provides useful insights on how to extend the method toward
these aims. The Wave Particle approach has inspired follow-up work
on background ows [Cords 2008], and the method‚Äôs controllability
and speed have made it an excellent candidate for simulating water
in video games [Gonzalez-Ochoa 2016].
However one chooses to simulate surface water waves, the results
can be used in many dierent applications. Previous researchers
have used waves as boundary conditions or guide shapes [Nielsen
and Bridson 2011; SideFX 2013], or as a type of physics-based procedural texture [Chentanez and M√ºller 2010]. Wave simulation parameters can also be tuned to achieve a desired look [Horvath 2015;
Nielsen et al. 2013]. Researchers have also combined water surface
wave simulations with fully three-dimensional simulations [Kim
et al. 2013; Mercier et al. 2015; Thuerey et al. 2010; Yang et al. 2016;
Yu et al. 2012]. We show how our method can augment some existing
2D simulations in Figure 2.
2.2 Physics Literature
The idea of considering Lagrangian water wave packets as a fundamental primitive, while novel to computer graphics, has a long
history in theoretical physics. It seems to have originated during the
explosion of theoretical quantum mechanics research in the early
20th century; in this case, the waves come from the Schr√∂dinger
equation [Birkho 1927]. Because the mathematical derivation of
wave packets works for any dispersive equation, oceanographers
have since used wave packet theory to also explain the transport of
water wave energy [Pedlosky 2013]. Some even proposed to name
the water wave packet the ‚Äúhydron‚Äù and give it the same standing
as other fundamental particles in physics, like photons and electrons [Synge 1962]. Despite the theoretical utility of considering
water waves as packets, to the best of our knowledge, ours is the
rst method to use water wave packets as a fundamental primitive
for numerical simulation.
3 WATER WAVE DYNAMICS
3.1 Airy wave theory
Airy wave theory [Airy 1841] describes a water surface as a height
function that varies with time, Œ∑(x,t). We can use this framework
to analyze how a group of waves propagates, and then use these
ACM Transactions on Graphics, Vol. 36, No. 4, Article 103. Publication date: July 2017.
Water Wave Packets ‚Ä¢ 103:3
theoretical results to develop a computationally ecient method
for simulating water surface waves. We will rst analyze the onedimensional case, Œ∑(x,t), and then extend the ideas to cover a twodimensional water surface.
If we look at the Fourier transform of the water surface height
eld, we can view the surface as an integral of many dierent waves
of varying wavelength:
Œ∑(x,t) =
‚à´ ‚àû
‚àí‚àû
a(k) cos
kx ‚àí œâ(k,h)t

dk. (1)
In this equation, k is the wavenumber, which is inversely proportional to the wavelength Œª via the relationship k = 2œÄ/Œª, x is the
spatial coordinate, h is the water depth, œâ(k,h) is the angular frequency (which is inversely proportional to the period T (k,h) via
œâ = 2œÄ/T ), a(k) is the amplitude of each wave, and t is time. The
angular frequency has a special form that gives water waves their
distinct characteristics:
œâ(k,h) =
s
–¥k +
œÉ
œÅ
k
3

tanh(kh), (2)
where –¥ is gravity, œÉ is the surface tension, and œÅ is the water density.
This relationship between the frequency œâ and the wavenumber k
is known as the dispersion relation. From this relation, we can see
that the argument to the wave in Equation (1) can be factored into
k(x ‚àí cp (k,h)t), where
cp (k,h) =
œâ(k,h)
k
=
s
–¥
k
+
œÉ
œÅ
k

tanh(kh) (3)
is the propagation speed of a given wavelength, known as the phase
velocity. In 2D, the energy of a water wave with wavenumber k over
a surface area A is
E(k) =
‚à´
A
1
2

œÅ–¥ + œÉk
2

(a(x))2
dA. (4)
Wave energy travels with the group velocity c–¥, which is dened as
c–¥(k) =
dœâ
dk (5)
and described further in Appendix A. In one dimension, k, cp , and
c–¥ are scalars. In two dimensions, they are vectors k, cp , and c–¥, and
we use the scalar k as shorthand for the wavevector‚Äôs magnitude
||k||.
Intuition. We can extract some good intuition from the equations
in this section if we consider their limit behaviors. For gravity waves
(œÅ–¥  œÉ) in deep water (kh  1), longer wavelengths travel faster
than shorter ones. We tend to see long waves on the outer edge of
splashes, while shorter waves lag behind. Furthermore, the phase
speed is equal to twice the group speed, so the wave crests actually
outrun their energy and create the eect of wave crests disappearing
at the outer edge of a splash. At intermediate water depth, cp slows
down as depth decreases, while c–¥ speeds up, until they nally
become equal in shallow water (kh  1), where all wavelengths
travel at a constant speed cp =
p
–¥h.
For capillary waves (œÅ–¥  œÉ), which almost exclusively occur
in the deep water/high wavenumber regime kh  1, short wavelengths travel faster than longer ones. Thus, small splashes dominated by surface tension will have shorter wavelengths on the outer
edge. Phase velocity is only two-thirds of the group velocity, so
the energy outpaces the wave crests, creating the eect of waves
materializing on the outer edge of a splash. All of these qualitative
eects can be seen in our results.
3.2 Wave packets
In this paper, instead of computing with innitely long wavetrains
[Mastin et al. 1987] or single wave crests [Yuksel et al. 2007], we
would like to propagate localized packets of waves. Each wave packet
will represent a collection of similar wavelengths, and it will cover a
larger region of space than a single wave crest. Such a strategy will
allow us to simultaneously represent long wave trains with a single
computational element, have the waves interact with a dynamically
changing environment, and obey the qualitative behaviors described
by Airy wave theory.
At this point in the derivation, we are free to choose what we‚Äôd like
these wave packets to look like. We will list a few desired properties,
so we can make some educated decisions later. First, we would
like environmental variations like solid boundaries, water depth
gradients, and user interactions to aect each packet as a whole.
Thus, each wave packet should be compactly supported in spatial
coordinates. On the other hand, fundamental physical properties
like energy act locally in frequency space, so each wave packet
should be compactly supported in wavenumber coordinates as well.
So we want a kernel function œï(x) for our wave packets that acts
locally in space, and whose Fourier transform Œ¶(k) also acts locally
in wavenumber. Although no function can be truly topologically
compact in both x and k due to the uncertainty principle for the
Fourier Transform [Phillips 2005], many functions approximate
this behavior by heavily weighting nearby values and falling o
exponentially. We will use a Gaussian function œï(x) = exp(‚àíx
2
)
to represent the wave packet kernel, like many previous works in
quantum physics [Libo 2003].
Now, we can break up the integral in Equation (1) into a summation of individual packets of wavenumbers centered around some
representative wavenumber kj
:
Œ∑(x,t) ‚âà √ï
N
j=1
‚à´ ‚àû
‚àí‚àû
Œ¶(k ‚àí kj)a(k) cos
kx ‚àí œâ(k,h)t

dk, (6)
where Œ¶ is our wave packet shape and N is the number of wave
packets. This equation is equal to Equation (1) if the Œ¶ functions are
a partition of unity (i.e., if √çn
j=1
Œ¶(k ‚àí kj) = 1 for all k). Otherwise,
as in our implementation, the right hand side is only approximate.
By assuming that the spectrum within each packet of waves is
tightly concentrated around their representative wavelength kj
(i.e.,
if Œ¶(k) falls o quickly away from k = kj
), then we can approximate
w(k,h) and a(k) with a rst order Taylor expansion. After some
analysis (carried out in Appendix B), we arrive at the expression
Œ∑(x,t) ‚âà √ï
N
j=1
ajœï

x ‚àí c–¥t

cos
kj(x ‚àí cpt)

, (7)
which states that the water surface waves can be reasonably approximated by a sum of wave packets, each described by a kernel
function œï which travels at group speed c–¥ and acts as an envelope
for a single representative wave traveling at phase speed cp . Each
ACM Transactions on Graphics, Vol. 36, No. 4, Article 103. Publication date: July 2