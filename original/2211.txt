Transferable deep representations for visual domain adaptation (DA) provides a route to learn from labeled source images to recognize target images without the aid of target-domain supervision. Relevant researches increasingly arouse a great amount of interest due to its potential industrial prospect for non-laborious annotation and remarkable generalization. However, DA presumes source images are identically sampled from a single source while Multi-Source DA (MSDA) is ubiquitous in the real-world. In MSDA, the domain shifts exist not only between source and target domains but also among the sources; especially, the multi-source and target domains may disagree on their semantics (e.g., category shifts). This issue challenges the existing solutions for MSDAs. In this paper, we propose Deep CockTail Network (DCTN), a universal and flexibly-deployed framework to address the problems. DCTN uses a multi-way adversarial learning pipeline to minimize the domain discrepancy between the target and each of the multiple in order to learn domain-invariant features. The derived source-specific perplexity scores measure how similar each target feature appears as a feature from one of source domains. The multi-source category classifiers are integrated with the perplexity scores to categorize target images. We accordingly derive a theoretical analysis towards DCTN, including the interpretation why DCTN can be successful without precisely crafting the source-specific hyper-parameters, and target expected loss upper bounds in terms of domain and category shifts. In our experiments, DCTNs have been evaluated on four benchmarks, whose empirical studies involve vanilla and three challenging category-shift transfer problems in MSDA, i.e., source-shift, target-shift and source-target-shift scenarios. The results thoroughly reveal that DCTN significantly boosts classification accuracies in MSDA and performs extraordinarily to resist negative transfers across different MSDA scenarios.

Access provided by University of Auckland Library

Introduction
Considerable advances in deep representation learning have recently improved the state-of-the-art approaches on a huge variety of machine vision problems (Krizhevsky et al. 2012; Ren et al. 2015; Long et al. 2015; Liang et al. 2016; Xu et al. 2015; Johnson et al. 2017; Ho and Gopalan 2014; Kan et al. 2014; Zhang et al. 2019). These eyeball-catching prospects can be greatly attributed to the availability of large scale labeled datasets for supervised learning (Deng et al. 2009; Cordts et al. 2015). Nevertheless, these successes are challenged by domain shift problem (Pan and Yang 2010), since the traditional assumptions that their training dataset and test set follow the same distributions are often violated. This poses a major obstacle in adapting predictive models across domains and leads to a performance degradation on target domains (Gretton et al. 2009).

To mitigate the negative effects caused by domain shift, (unsupervised) Domain Adaptation (DA) (Pan and Yang 2010) arises to reduce the discrepancy between the source and target domain distributions, typically by exploring domain-invariant data structures or transferable representations, which endows the classifier with the consistent classification ability on source and target examples (Tzeng et al. 2015; Bousmalis et al. 2017; Gebru et al. 2017). Most existing DA approaches are preconditioned on a single source where labeled examples are identically drawn from an individual source underlying distribution. This setup is widely admitted in traditional DA researches, while merely reflects a tip of the iceberg of realistic transfer circumstances.

In a variety of real-world cases, we often witness data drawn from multiple source domains. For instance, for the sake of illness typicality, medical images are conventionally collected from hospitals all over the country in a long time. This application circumstances produce a large amount of datasets that should be treated as a set of multiple sources. Consequently, Multi-Source Domain Adaptation (MSDA) has increasingly grabbed considerable attention in many applications (Yang et al. 2007; Duan et al. 2012; Jhuo et al. 2013a), since reasonable approaches might achieve more transfer learning performance gains.

Compared with the deep single-source DA with witnessed progresses, scarce researches have been committed to deep MSDA due to complex domain shift conditions. Especially, domain shift exists not only between a target and each source, but also across multiple source domains. MSDA presents in an extensive variety of scenarios arousing serious negative transfer influences (Pan and Yang 2010) due to the category shifts across domains. For instance, the categories distributed across multiple source domains may not guarantee their class consistencies (Fig. 1b). In this source-category-shift MSDA scenario, the shifts of multi-source domains and their categories should be taken into account. Another case is derived from the popular single-source open-set DA research (Busto and Gall 2017), where some part of categories in a target domain are not included in source domains. These “outlier” categories are traditionally unified as a negative class called “unknown” (Fig. 1c). In our paper, this MSDA-extended open-set setting is termed target-category-shift MSDA scenario. More generally, these two cases would simultaneously occur and leads to source-target-category-shift MSDA scenarios (Fig. 1d). All these category-shift cases deteriorate the domain-shift damages to most existing DA algorithms and are nontrivial to solve.

Attempting to overcome the domain-shift and category-shift challenges, in this paper, we present Deep CockTail Network (DCTN), a flexibly-deployed adversarial learning framework to address MSDA problems across diverse transfer scenarios. DCTN encapsulates category classifiers for multi-source domains respectively, then the target category predictor is formulated by integrating their category probabilistic predictions on a target example with their source-target perplexity scores. In particular, each of the perplexity scores represents the domain-feature similarity between the target and each source, thus, referring to the outcome each source-target domain discriminator produces (source-target domain discriminators are deployed to separate features from the target and each source. Like other adversarial DA approaches, domain discriminators of DCTN facilitates to learn a domain-invariant feature extractor in a multi-source-domain condition). The more similarity between a source and the target on their features, the more convincing this source-specific classifier predicts the target example. Hence each target feature would be fed into multi-source classifiers, whose predictions are reweighted by the source-specific perplexity scores to classify this target example. Analogous to make cocktail, it inspires our framework dubbed by Deep CockTail Network.

Fig. 1
figure 1
A brief illustration of Multi-Source (unsupervised) Domain Adaptation (MSDA) scenarios and their hierarchical relation. a Vanilla MSDA scenarios consider multi-source and target examples that exactly share their categories. b Multi-source data are collected from source domains where domain shift and categorical misalignment co-exist between the source domains. c Multiple sources meet an open-set target domain (Saito et al. 2018) including some “unknown” categories non-existent in the sources. d Source and target category shifts (b, c) simultaneously occur in this scenario. Note that, b is derived from our original version (Xu et al. 2018); c, d are first taken into account in this paper. MSDA problems in these scenarios can be settled by our DCTN. (For simplicity, we only reveal the cases with two source domains. Best viewed in color.)

Full size image
Theoretically, we compare DCTN with the methods based on source distribution weighted combining rule (Mancini et al. 2009), where the target distribution is supposed to be represented as the weighted linear combination of multiple source distributions. This old-school MSDA theory provides an adaptation upper bound of expected classification error on the target domain. However, the multi-source weight combination involves with crafting a set of source-specific hyper-parameters by experiences; thus, it could not keep abreast of the current advancing approaches. DCTN does not rely on this mixture assumption. In contrast, the learning algorithm of DCTN employs a multi-way adversarial scheme to adaptively decide the multi-source balancing rule according to their source-target perplexity scores. The DCTN target category prediction maintains an expected loss upper bound underlying a reasonable DA approximation presumption, yet free of specifying multi-source hyper-parameters. More importantly, it can be developed to suit the cases of source and target category shifts in MSDA.

Overall, our work mainly contributes in three aspects:

We investigate four representative MSDA scenarios, i.e., vanilla, source-category-shift, target-category-shift and source-target-category-shift, and propose Deep CockTail Network (DCTN), to solve these challenging and complex MSDA problems by a universal framework.

Under two assumptions derived from our learning algorithm, we develop the bound of the target instance loss in DCTN. It explains why DCTN can success without relying on the source-distribution-weighted-combing rule. Based on this, we develop the upper bounds of target expected loss across all aforementioned MSDA scenarios.

We conduct extensive experiments on four MSDA benchmarks including diverse source-to-target transfer cases in four different category shift scenarios. Our experimental results demonstrate the superiority and versatility of DCTN.

The remainder of this paper can be concluded as follows. Related works are described in Sect. 2. Details of problem setup on diverse MSDA problems are in Sect. 3 and our method is presented in Sect. 4. Experimental results are given in Sect. 5. We conclude this paper in Sect. 6.

Related Work
Domain Adaptation with a Single Source
Provided a source domain with ground truth and target domain without labels, unsupervised domain adaptation (Pan and Yang 2010; Gong et al. 2014; Shao et al. 2014; Xu et al. 2016) aims to learn a model well-performed on a target domain. Since the source and target belong to different distributions, the technical problem in UDA is how to mitigate the domain shift between them. Inspired by the two-sample test (Gretton et al. 2007), various statistical discrepancy measures can be directly applied to regulate the domain shift during optimization, e.g., shallow-model-based TCA (Pan et al. 2011), JDA (Baktashmotlagh et al. 2016), deep-model-based DAN (Long et al. 2015), CMD (Zellinger et al. 2017), WMMD (Yan et al. 2017), RTN (Long et al. 2016), STN (Yao et al. 2019), in which diverse statistical measures are used as the regularizer to learn domain-invariant features.

Adversarial learning behaves effectively to learn more transferable representations (Ganin et al. 2017; Tzeng et al. 2017). It determines a couple of networks and trains them in the opposite direction: a domain discriminator minimizes the classification error to distinguish samples from source and target, while domain mapping learns transferable representations by confusing the domain discriminator. These so-called adversarial DA algorithms are classed into three branches. The first alternatively trains discriminator and feature extractor so that the extractor is encouraged to directly confuse the source and target. Namely, the probabilistic discriminative decisions about learned transferable representations should be consistent with [12,12], no matter which domain the examples come from. The second proposes a reversal gradient layer, which flips the gradient values after its back-propagated from the discriminator. The operation allows a joint learning of discriminator and feature extractor and is easy for implementation, which makes it very popular in the adversarial domain adaptation. Finally, GAN-style adversary (Goodfellow et al. 2014) also suits a domain adaptation setting (Tzeng et al. 2017), which mostly performs as an asymmetric transfer pipeline. Due to the flexibility of adversarial learning framework, recent researches about adversarial DA perform superiorly in visual recognition across domains (Long et al. 2016; Gebru et al. 2017) and tasks (Motiian et al. 2017) and transfer structure learning (Bousmalis et al. 2017; Hoffman et al. 2016).

Besides these mainstream branches of DA approaches, there are also other diverse methods to learn domain-invariant features: semi-supervised method (Saito et al. 2017), domain reconstruction (Ghifary et al. 2016), duality (Haeusser et al. 2017), alignments (Fernando et al. 2013; Zhang et al. 2017; Sun et al. 2016), manifold learning (Gong et al. 2012), tensor methods (Koniusz et al. 2017; Lu et al. 2017), feature norm adaptation (Xu et al. 2019), etc.

Multi-source Domain Adaptation
The UDA approaches mentioned above mainly consider target domain versus single source domain. If multiple sources are available, the domain shifts among sources should also be considered. A-SVM (Yang et al. 2007) leverages the ensemble of source-specific classifiers to fine-tune the target categorization model; The Domain Adaptation Machine (Duan et al. 2012) introduces domain-dependent regularizer term based on a smoothness assumption, and enforces target classifier to make a similar decision to the relevant source classifier. Domain reconstruction method (Jhuo et al. 2013a) enforces different source domains to have jointly low ranks, which forms a compact source set close to the target domain.

MSDA also develops with some theoretical supports (Mancini et al. 2009; Blitzer et al. 2008; Ben-David et al. 2010). Blitzer et al. (2008) firstly provide the learning bound for MSDA. Mancini et al. (2009) claims that an ideal target hypothesis can be represented by a distribution weighted combination of source hypotheses. This methodology is so-called source distribution weighted combining rule, closely meaning that if the relations between target and each source can be discovered, we are able to use multiple source-specific classifiers to obtain an ideal target class prediction.

Very recently, some approaches based on neural nets attempt to address the MSDA problem. Zhao et al. (2018) developed a new adversarial learning paradigm by iteratively constructing zero-sum games between the target and one of the source domains. Mancini et al. (2018) proposes a multi-DA normalization layer that aligns multi-source domains in the target. They indeed have facilitated the progresses in MSDA whereas presented several limitations. Inspired by Xu et al. (2018) and Peng et al. (2019) develops a discrepancy-based DA algorithm to reweight the importances of multiple domains. They have performed promising results in a vanilla MSDA problem but if category shifts simultaneously exist across domains, which commonly appears in practice, they become unavailable.

Category-Shift Problems in Domain Adaptation
Most existing DA literatures consider DA problems in a close-set DA setup, where source domain and target domain exactly share their categories. This transfer precondition simplifies the analysis of most DA algorithms, but is unable to handle the situation where source and target categories are different. Increasingly, a variety of researches in turn focus on addressing these more challenging problems. For examples, Kim et al. (2020) suggests a new DA paradigm to address potential data-leakage issues. Cao et al. (2018) and Cao et al. (2018) investigate the partial DA problem where target categories presents as a proper subset of the source categories. Distinctly, Saito et al. (2018) and Busto and Gall (2017) investigate the open-set DA problem where some of target categories are unknown in the source domainFootnote1. (You et al. 2019) investigates universal domain adaptation (UDA), i.e., the DA problem concluding the aforementioned two scenarios. These existing category-shift transfer scenarios, however, rely on a “single-source-domain” setting. In contrast, diverse category shifts usually appear in practical MSDA problems, which is the focus of this paper.

Overview of MSDA
In unsupervised domain adaptation, images from target domain lack of annotation, hampers a straightforward usage of supervised learning to acquire a classifier adaptive to target distribution. Source domain offers categories information via a circuitous route. Nevertheless, category-shift problem is aggravated in MSDA compared with single source domain adaptation. In this paper, we explore category-shift problem for MSDA and summarize four representative adaptation scenarios, i.e., vanilla, source-category-shift, target-category-shift and source-target-category-shift MSDAs. In the following section, we will elaborate these four adaptation scenarios in a principle way.

In the context of multi-source domain adaptation, source domain images {(𝐗𝑗,𝐘𝑗)}𝑀𝑗=1 are drawn from M different source domains with underlying distributions {𝑃𝑗(𝑥𝑥,𝑦𝑦)}𝑀𝑗=1, respectively. 𝐗𝑗={𝑥𝑥𝑗𝑖}𝑁𝑗𝑖=1 represents 𝑁𝑗 images from source j in total and 𝐘𝑗={𝑦𝑦𝑗𝑖}𝑁𝑗𝑖=1 corresponds to their labels. Target domain images 𝐗(𝑡)={𝑥𝑥(𝑡)𝑖}𝑁(𝑡)𝑖=1 are drawn from underlying distribution 𝑃𝑡(𝑥𝑥,𝑦𝑦) without label observation 𝐘(𝑡). For MSDA, images from source and target domains are utilized for training; test images (𝐗𝑡𝑒𝑠𝑡,𝐘𝑡𝑒𝑠𝑡) are only drawn from the target to evaluate the classifier adaptation performance.

Vanilla MSDA
𝒞𝑗 denotes a category set of labels in 𝐘𝑗 for source domain j, 𝒞(𝑠) denotes the category set of the source domain, and 𝒞(𝑡) is the unobserved category set of our target domain. In vanilla MSDA scenario, the category sets of multiple sources ({𝒞𝑘}𝑀𝑘=1) and the target (𝒞(𝑡)) are consistent, namely, 𝒞(𝑠)=𝒞𝑘 (∀𝑘∈[𝑀]={1,2,…,𝑀}) and 𝒞(𝑡) holds 𝒞(𝑠)=𝒞𝑘=𝒞(𝑡). This scenario presumes M source and target domains customized by consistent category semantics.

Category-Shift Scenarios in MSDA
In a vanilla scenario, images darwn from different domains share the same category set. Distinguished from this, category-shift MSDA scenario advocates that the category sets from different domains maybe also different. To this end, 𝒞(𝑠)=𝒞𝑘=𝒞(𝑡) (∀ 𝑘∈ [M] ) is generalized to suit different scenarios.

Specifically, in the source-category-shift scenario, 𝒞(𝑠)=𝒞𝑘=𝒞(𝑡) (∀ 𝑘∈ [M] ) turns to 𝒞𝑗≠𝒞𝑘 and 𝒞(𝑡)=⋃𝑀𝑗=1𝒞𝑗. 𝒞𝑗∩𝒞𝑘 indicates the public classes between sources j and k. 𝒞𝑗∩𝒞𝑘≠𝒞𝑗∪𝒞𝑘 refers to the source category shift. In the target-category-shift scenarios, 𝒞(𝑠)=⋃𝑀𝑗=1𝒞𝑗=𝒞(𝑡) becomes 𝒞(𝑠)=⋃𝑀𝑗=1𝒞𝑗≠𝒞(𝑡). Resumbling the spirit of the recent open-set single-source DA researches (Busto and Gall 2017; Saito et al. 2018), we consider a target-category-shift MSDA scenarios holding 𝒞(𝑠)=⋃𝑀𝑗=1𝒞𝑗⊂𝒞(𝑡). The categories in 𝒞(𝑡)/⋃𝑀𝑗=1𝒞𝑗 are conventionally unified and treated as an “unknown” category 𝑐𝑢. The MSDA is supposed to preclude the target examples belonging to 𝑐𝑢=𝒞(𝑡)/⋃𝑀𝑗=1𝒞𝑗 and correctly categorize the rest into {𝒞𝑗}𝑀𝑗=1.

Finally, in source-target-category-shift scenario, the aforementioned category shifts simultaneously occur. This encourages us to address the both challenges by a unified framework.

Deep CockTail Networks (DCTNs)
Irrespective of either vanilla or the other multi-source transfer scenarios, MSDAs remain challenging to tackle and moreover, few researches are investigated under deep DA background. In this section, we introduce Deep CockTail Network (DCTN), an adversarial domain adaptation framework specified for MSDA. The framework is tailor-designed to address a vanilla MSDA problem yet ought to be noted that, DCTN could also be flexibly deployed to adapt the target domains in the source-category-shift, target-category-shift and source-target-shift-open-set scenarios by a mildly reconfiguring the learning pipeline.

In Sect. 4.1, we elaborate the basic pipeline of DCTN and the principle how DCTN predicts target data categories in diverse scenarios. In Sect. 4.2, we present the alternating learning algorithm of DCTN. In Sect. 4.3, we unveil the theoretical insight behind DCTN.

Framework
DCTN consists of four components: three subnets, i.e., feature extractor, (multi-source) domain discriminator, (multi-source) category classifier, and an unlearnable cocktail target category predictor to classify target examples (Fig. 2).

Feature extractor F incorporates a deep convolution neural network as the backbone, and maps images from M sources and the target into a common feature space. Apart from weight-shared architecture for all the domains, the joint adversarial learning with subsequent domain discriminators contributes F to learning both target-source-specific relations and domain-invariant features.

Fig. 2
figure 2
The overview of Deep CockTail Network (DCTN). Our framework receives multi-source instances with annotated ground truth and adapts to classify the target samples. We confine the problem with only source j and k for simplicity. (i) The feature extractor maps target, source j and k into a common feature space. (ii) The category classifier receives target feature and produces the jth and kth classifications based upon the categories in source j and k respectively. (iii) The domain discriminator receives features from source j, k and target, then offers the kth advesary between target and source k, as well as the jth advesary between target and source j. The jth and kth advesary provide the source-j,k perplexity scores to reweight the jth and kth classifications correspondingly. (iv) The cocktail target category predictor integrates all reweighted classification results, so as to predict the target examples’ categories across diverse category-shift scenarios. Since the samples from multi-source domains merely produce the training losses, their flows (outputs) are omitted to mainly illustrate the whole process of identifying target samples for simplicity. (Best viewed in color.)

Full size image
(Multi-source) domain discriminator D is built upon M source-specific discriminators {𝐷𝑗}𝑀𝑗=1 for adversary. Given an image 𝑥𝑥, the domain discriminator D receives the feature 𝐹(𝑥𝑥), and then each source-specific discriminator 𝐷𝑗 (∀𝑗∈[𝑀]) classifies respectively whether x originates from the source j or the target. The data flow coming from each source does not trigger those discriminators belonging to other source domains, while for the data flow from each target instance 𝑥𝑥(𝑡), the domain discriminator D yields M source-specific discriminative outcomes {𝐷𝑗(𝐹(𝑥𝑥(𝑡)))}𝑀𝑗=1 between the target and the M sources, respectively. They are leveraged to update the discriminator D, and provide the target-source perplexity scores {𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗)}𝑀𝑗=1 defined as

𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗)=−log(1−𝐷𝑗(𝐹(𝑥𝑥(𝑡)))).
(1)
𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗) implies how similar 𝑥𝑥(𝑡) is as a sample drawn from source j.

(Multi-source) category classifier C is a multi-output net composed of M source-specific category classifiers {𝐶𝑗}𝑀𝑗=1. Each classifier is a softmax classifier configured by the category set that corresponds to its source. The category classifier takes an image mapping from feature extractor as input. For each image from source j, only the gradient derived from 𝐶𝑗 is activated for the parameter updating. For a target image 𝑥𝑥(𝑡) instead, all source-specific classifiers provide M categorization results {𝐶𝑗(𝐹(𝑥𝑥(𝑡)))}𝑀𝑗=1, contributing to the parameters updating of C.

Cocktail target category predictor is the key component to categorize target examples. Specifically, given a target sample 𝑥𝑥(𝑡), our cocktail target category predictor takes its source perplexity scores {𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗)}𝑀𝑗=1 to re-weight {𝐶𝑗(𝐹(𝑥𝑥(𝑡)))}𝑀𝑗=1, and then integrates them for classification. Here we specify the classification principle in four MSDA scenarios:

1.
In a vanilla MSDA scenario, the category sets of a target domain and M source domains are consistent. Hence target category predictor is formulated by re-weighting source-specific classifier prediction with target-source perplexity scores:

𝐶𝑡(𝑥𝑥(𝑡)):=∑𝑗=1𝑀𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗)∑𝑀𝑘=1𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑘) 𝐶𝑗(𝐹(𝑥𝑥(𝑡))),
(2)
where 𝐶𝑡(𝑥𝑥(𝑡)) denotes category probability forecast by the target predictor, and each entry of 𝐶𝑡(𝑥𝑥(𝑡)) denotes the integrated probability of 𝑥𝑥(𝑡) belonging to a specific category.

2.
In category-shift MSDA scenarios, categories across M source and a target domains are not always shared. Therefore, we modify Eq. 2 to suit all cases. Specifically, each source classifier is obligated to classify those categories in its corresponding source. DCTN is expected to identify “unknown” 𝑐𝑢 excluded by categories of M-source domains. To this, we activate all the source classifiers to identify the target examples in 𝑐𝑢. So Eq. 2 turns to

𝐶𝑡(𝑐|𝑥𝑥(𝑡)):=∑𝒞(𝑡)𝑗𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗)∑𝒞(𝑡)𝑘𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑘)𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡))),
(3)
where 𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡)))    represents the softmax prediction of the 𝑗𝑡ℎ source classifier 𝐶𝑗(𝐹(𝑥𝑥(𝑡))), i.e., the probability that 𝑥𝑥(𝑡) belongs to c. 𝒞(𝑡)𝑗 derived from 𝒞(𝑡) in Eq. 2 further includes the categories that M sources do not contain, e.g., 𝒞(𝑡)𝑗=𝒞𝑗∪{𝑐𝑢}. So 𝐶𝑗(𝐹(𝑥𝑥(𝑡))) turns into a (|𝒞𝑗|+1)-slot softmax category predictor, in order to synchronically recognize the categories in 𝒞𝑗 and the “unknown” 𝑐𝑢. Note that only the sources including c would join the perplexity re-weighting to classify c.

Learning
DCTN follows an alternative adaptation pipeline given a pre-trained feature extractor and category classifier. At the very beginning of learning, we adopt source images to train the feature extractor F and the category classifier C. Those networks and the cocktail target classifier then predict categories for all target imagesFootnote2 and annotate those with high confidences. Thus, we obtain the pre-trained feature extractor and category classifiers via fine-tuning with labeled multi-source images and pseudo-labeled target images. With pre-training, DCTN employs a multi-way adversary scheme to learn a mapping shared by all domains; then the feature extractor and the category classifiers are jointly trained with multi-source labeled and target pseudo-labeled images. These two stages repeat until the maximal epoch is reached.

Multi-way Adversarial Adaptation
Multi-way adversarial adaptation in DCTN is proposed to obtain domain-invariant features. It is formulated as follows:

min𝐹 max𝐷 𝑉(𝐹,𝐷;𝐶)=ℒ𝑎𝑑𝑣(𝐹,𝐷)+ℒ𝑐𝑙𝑠(𝐹,𝐶),
(4)
where the first term denotes our multi-way adversarial loss and the second term indicates cross-entropy losses for source-specific classification; C are frozen to offer stable values in the gradients. This multi-way adversarial loss are defined as

ℒ𝑎𝑑𝑣(𝐹,𝐷)=1𝑀∑𝑗𝑀[𝔼𝑥𝑥∼𝐗𝑗[log𝐷𝑗(𝐹(𝑥𝑥))]+𝔼𝑥𝑥(𝑡)∼𝐗𝑡[log(1−𝐷𝑗(𝐹(𝑥𝑥(𝑡))))]].
(5)
The optimization based on Eq. 5 is solely used to train D. Since the feature extractor F learns the mapping with respect to the multiple source domains and the target domain, the domain distributions simultaneously changes in adversary, which results in an oscillation that spoils our feature extractor. Regarding such concern, when source and target feature mappings share their architectures, the domain confusion can be introduced to substitute the adversarial objective (Tzeng et al. 2017), which performs stably to learn F. Inspired by this, we have obtained the multi-domain confusion loss:

ℒ𝑎𝑑𝑣(𝐹,𝐷)=1𝑀∑𝑗𝑀[𝔼𝑥𝑥∼𝐗𝑗ℒ𝑐𝑓(𝑥𝑥;𝐹,𝐷𝑗)+𝔼𝑥𝑥(𝑡)∼𝐗𝑡ℒ𝑐𝑓(𝑥𝑥(𝑡);𝐹,𝐷𝑗)],
(6)
where

ℒ𝑐𝑓(𝑥𝑥;𝐹,𝐷𝑗)=12log𝐷𝑗(𝐹(𝑥𝑥))+12log(1−𝐷𝑗(𝐹(𝑥𝑥))).
(7)
Thus, DCTN updates its feature extractor F by optimizing the objective Eq. 4 w.r.t. Eq. 6.

Online hard source-domain batch mining When sampling mini-batches, the multi-way adversarial adaptation stochastically receives m examples from M sources respectively to update the feature extractor F in each iteration. However, the images drawn from different source domains would be not always helpful for boosting the adaptation, and as the model training proceeds, redundant source images would turn to draw back the previous adaptation performance. Thus we design a simple yet effective hard domain batch mining technique to improve the training efficiency. Specifically, in each iteration, DCTN randomly draws m target examples {𝑥𝑥(𝑡)𝑖}𝑚𝑖=1 and m source examples for each source, i.e., {{𝑥𝑥1,𝑖}𝑚𝑖=1,⋯,{𝑥𝑥𝑀,𝑖}𝑚𝑖=1}. So there are totally 𝑚(𝑀+1) images for training DCTN per iteration. We keep the discriminator training as described in Eq. 4. As for feature extractor training, we independently consider the adversary between the target and each source. Given this, ∑𝑚𝑖{−log𝐷𝑗(𝐹(𝑥𝑥𝑗,𝑖))−log[1−𝐷𝑗(𝐹(𝑥𝑥(𝑡)𝑖))]} can be viewed as the “difficulty” degree to distinguish 𝑥𝑥(𝑡)𝑖 from m images of the source j. Therefore, if F performs worst to transform target features to confuse the source 𝑗∗, it leads to 𝑗∗=argmax𝑗∈[𝑀]∑𝑚𝑖{−log𝐷𝑗(𝐹(𝑥𝑥𝑗𝑖))−log[1−𝐷𝑗(𝐹(𝑥𝑥(𝑡)𝑖))]}. Based upon the domain confusion loss, we use the source 𝑗∗ and the target examples in the mini-batch to train the feature extractor F. This technique is concluded by Algorithm 1.

figure a
figure b
Target Discriminative Adaptation
Resembling the spirit of existing work about adversarial DAs, the multi-way adversarial adaptation process does not consider the category variation during learning. No matter which MSDA scenario is considered, DCTN undergoes the identical adversarial process. Though it is able to produce domain-invariant features, it does not insure their abilities to classify a target domain. Ben-David et al. (2010) demonstrate that, to accommodate a source classifier in the target, DA algorithms requires the category classifier working well on different domains. But in case of a variety of MSDA scenarios, their classifiers should account for the categorical mis-alignment across M sources and the target, to prevent the damage caused by the non-consistent category sets across M sources and the unobserved categories (“unknown”) in the target domain.

To achieve a universal target category predictor, we incorporate target examples to learn classifiable features with source data via discriminatively fine-tuning {𝐶𝑗}𝑀𝑗=1. We develop a switchable strategy to select and annotate target samples. To this, the feature extractor F and multi-source classifiers {𝐶𝑗}𝑀𝑗=1 are trained with multi-source labeled samples and these pseudo-labeled target examples. In particular, we use the target category predictor obtained in the previous iteration to annotate each target sample. Afterwards, the strategy selects suitable target examples 𝐗(𝑝)𝑡 and annotate them with pseudo labels 𝐘(𝑝)𝑡.

Specifically, DCTN incorporates two criteria to identify target samples with high confidences and low uncertainties, respectively. First, for each target sample, DCTN considers the category with the highest prediction probability according to Eq. 3. If the probability is larger than a threshold 𝛾>0, this target sample would be selected as a high-confidence candidate. Second, DCTN further takes the classfication entropy of Eq. 3 to identify the candidates with low uncertainties. In vanilla and source-category-shift scenarios, only the target samples with high confidences and low uncertainties would get pseudo labels and join the fine-tuning. In the scenarios with target category shifts, DCTN additionally incorporate the target samples with low uncertainties and categorize them into the unknown class 𝑐𝑢. The pseudo-labeling strategy is summarized as follows

𝑦𝑦(𝑡)=⎧⎩⎨⎪⎪1𝑐=argmax𝒞𝑠∪{𝑐𝑢}{𝐶𝑡(𝑐|𝑥𝑥(𝑡))}1𝑐𝑢Ent(𝐶𝑡(𝑥𝑥(𝑡)))<𝜁   𝑎𝑛𝑑 𝐶𝑡(𝑐|𝑥𝑥(𝑡))>𝛾 Ent(𝐶𝑡(𝑥𝑥(𝑡)))≥𝜁,
(8)
where 1𝑐 denotes the one-hot representation of the label w.r.t. the category c. Ent(𝐶𝑡(𝑥𝑥(𝑡))) denotes the target category prediction entropy of 𝑥𝑥(𝑡). If 𝑥𝑥(𝑡) does not satisfy Eq. 8, it would be ignored in the discriminative adaptation phase. The discriminative adaptation objective is defined as

min𝐹, 𝐶 ℒ𝑐𝑙𝑠(𝐹,𝐶)=∑𝑗𝑀 𝔼(𝑥𝑥,𝑦𝑦)∼(𝐗𝑗,𝐘𝑗)[ℒ(𝐶𝑗(𝐹(𝑥𝑥)),𝑦𝑦)]+𝔼(𝑥𝑥(𝑡),𝑦𝑦^(𝑡))∼(𝐗(𝑝)𝑡,𝐘(𝑝)𝑡)[∑𝑗=1𝑀ℒ(𝐶𝑗(𝐹(𝑥𝑥(𝑡))),𝑦𝑦^(𝑡))],
(9)
where ℒ denotes the cross-entropy loss between predictions and (pseudo) labels; (𝐗(𝑝)𝑡,𝐘(𝑝)𝑡) represent the selected target data and their pseudo labels, which are leveraged to update F and {𝐶𝑗}𝑀𝑗=1.

The hyper-parameters 𝛾 and 𝜁 are very important in our annotation strategy. For 𝛾, DCTN incorporates the threshold close to 1 in order to ensure the high prediction probability to the pseudo label of each selected target example during training. While it does not suit 𝜁. Concretely, after the first iteration in the alternative learning, some target images would be selected as belonging to the unknown classes, which further join to fine-tune the feature extractor, enabling each source-classifier to identify the unknown target classes. As the unknown classes can be gradually identified by our source-classifiers, their entropy value would become lower than those in the initial stage. A fixed threshold is not able to detect this change. To this, if DCTN uses a low entropy threshold 𝜁, the scheme will mistreat more known-class images as unknown classes; while if DCTN uses a high entropy threshold, the number of selected unknown-class target images would progressively decrease, even leading to no images selected into the unknown class for discriminative adaptation in the later stages. The both cases would harms the final performance of DCTNs. To overcome this problem, DCTN tend to choose a top x%. It implies that 𝜁 is a virtual threshold and no matter how the training progresses, the uncertain target samples will be selected in a certain number. The detailed setup of 𝛾 and 𝜁 is found in the “Appendix”.

Theoretical Analysis
In this section, we dive deeper into DCTN from a theoretical perspective.

We first provide some notation and a brief introductin of distribution weight combining rule, which our method is inspired from. However, we find it needs to craft some source-specific hyper-parameters and is insuitable when neural networks are basic models. Therefore, we develop a new methodology connected with DCTN. By choosing more appropriate assumptions, it derives the learning adaptation upperbounds with regards to different MSDA problems.

Reviewing Distribution Weighted Combining Rule
Let {𝒫𝑗}𝑀𝑗=1 and 𝒫𝑡 denote source and target distributionsFootnote3, respectively. Given an instance 𝑥𝑥, {𝒫𝑗(𝐹(𝑥𝑥))}𝑀𝑗=1 and 𝒫𝑡(𝐹(𝑥𝑥)) denote the probabilities of 𝑥𝑥 drawn from {𝒫𝑗}𝑀𝑗=1 and 𝒫𝑡, respectively. Following source distribution weighted combining rule (Mancini et al. 2009), the target distribution denotes a mixture of multi-source distributions with the coefficients by normalized source distributions weighted by an implicit simplex △={𝜆:𝜆𝑗≥0,∑𝑀𝑗=1𝜆𝑗=1}𝑀𝑗=1, namely, 𝒫𝑡(𝐹(𝑥𝑥))=∑𝑀𝑐∈𝒞𝑘𝜆𝑘𝒫𝑘(𝐹(𝑥𝑥)). For simplicity, we consider the vanilla MSDA case so that 𝒞(𝑡)=𝒞𝑘, ∀𝑘∈[𝑀]. Under the assumption in Mancini et al. (2009), an ideal target classifier 𝐶𝑡(𝑐|𝑥𝑥(𝑡)) is derived by integrating source classifiers {𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡)))}𝑀𝑗=1:

𝐶𝑡(𝑐|𝑥𝑥(𝑡))=∑𝑗=1𝑀𝜆𝑗𝒫𝑗(𝐹(𝑥𝑥(𝑡)))𝒫𝑡(𝐹(𝑥𝑥(𝑡))) 𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡))).
(10)
Therefore we frame it into DA theory to further give its interpretation. In more specific, 𝒳 represents the input (feature) space; 𝑓:𝒳→ℝ denotes the target function to learn (refer to the labels); ℎ:𝒳→ℝ denotes the hypotheses in ℋ with respect to a specific underlying distribution (correspond to the classifier); 𝐿:ℝ×ℝ→ℝ denote a classification loss function. The MSDA learning objective function is formulated as

minℎ∈ℋ ℒ(𝒫,ℎ,𝑓)=𝔼𝑥∼𝒫[𝐿(ℎ(𝑥),𝑓(𝑥))],
(11)
where according to the definition of {𝒫𝑗}𝑀𝑗=1 and 𝒫𝑡, x denote the feature of 𝑥𝑥 that 𝑥∼𝒫(𝐹(𝑥𝑥)). We would like to write it as 𝑥∼𝒫(𝑥) in our analysis. Suppose M source hypotheses {ℎ1,⋯,ℎ𝑀} correspond to {𝒫1,⋯,𝒫𝑀} and thus, for all 𝑗∈[𝑀], ℒ(𝒫,ℎ,𝑓)≤𝜖, (𝜖>0), source distribution weight combining rule holds an upper bound of target expected loss:

Proposition 1
(Mancini et al. 2009) Given a target distribution 𝒫𝑡 as a mixture 𝑃𝜆 of multiple source distributions {𝒫𝑗}𝑀𝑗=1 w.r.t.,𝜆, the expected loss of its mixture hypothesis ℎ𝜆 is at most 𝜖 w.r.t. any target function f, i.e., ℒ(𝑃𝜆,ℎ𝜆,𝑓)≤𝜖, where

𝒫𝑡(𝑥)=𝑃𝜆(𝑥)=∑𝑗=1𝑀𝜆𝑗𝒫𝑗(𝑥), ∀𝜆∈△,
(12)
and

ℎ𝜆(𝑥)=∑𝑗=1𝑀𝜆𝑗𝒫𝑗(𝑥)𝒫𝑡(𝑥)ℎ𝑗(𝑥).
(13)
The mixture hypothesis ℎ𝜆 corresponds to 𝐶𝑡(𝑐|𝑥𝑥(𝑡)) in Eq. 10. The theorem demonstrates that, if we are able to find optimal hyper-parameters 𝜆∈△, the target distribution can be represented as a mixture of multiple source distributions in Eq. 12, and the target classifier is certified to keep an upper bound of target distribution.

Equation 10 becomes a common assumption in many existing MSDA algorithms. However, △ in practice is implicit and always unobservable. In this case, it would not be a good assumption to learn transferable features in DCTN.

Instance DA Loss in DCTN
Similar with Eq. 10, our target predictor in DCTN integrates M source-target relations with perplexity scores to reweight and aggregate the target category predictions from M category source classifiers. However, the multi-source perplexity scores are completely built on the discriminative results according to the multi-way adversarial learning principle instead of a presumed simplex in distribution weight combining rule. Although DCTN does not rely on the distribution weight combining rule, some meaningful upper bounds are also held to guarantee its target classification.

Specifically, according to Eqs. 2, 3, the cocktail target category predictor refers to a hypotheses ℎ𝑡:

ℎ𝑡(𝑥)=∑𝑗=1𝑀−log(1−𝐷∗𝑗(𝑥))∑𝑀𝑘=1−log(1−𝐷∗𝑘(𝑥))ℎ𝑗(𝑥),
(14)
where 𝐷∗𝑗 (∀𝑗∈[𝑀]) denotes the optimal domain discriminator with respect to the source j and the target.

Distinct from Eq. 10 where F is fixed, multi-way adversarial learning encourages DCTNs to learn domain-invariant features.

Lemma 1
∀𝑗∈[𝑀], the optimal 𝐷𝑗 corresponds to

𝐷∗𝑗(𝑥)=𝒫𝑗(𝑥)𝒫𝑗(𝑥)+𝒫𝑡(𝑥),
(15)
so that

ℎ𝑡(𝑥)=∑𝑗=1𝑀log(1+𝒫𝑗(𝑥)𝒫𝑡(𝑥))∑𝑀𝑘=1log(1+𝒫𝑘(𝑥)𝒫𝑡(𝑥))ℎ𝑗(𝑥).
(16)
Note that ℎ𝑡 is proposed to classify target examples in the feature space, i.e., 𝑥𝑡=𝐹∗(𝑥𝑥𝑡), where 𝐹∗ is the optimal feature extractor obtained by our multi-way adversarial learning, and 𝑥𝑥𝑡∼𝐗𝑡. Since target feature 𝑥𝑡 is drawn from 𝒫𝑡, it is reasonable to assume 𝒫𝑗(𝑥𝑡)≤𝒫𝑡(𝑥𝑡) (𝒫𝑗(𝑥𝑡) denotes the probability of the target feature 𝑥𝑡 drawn from the source j). Due to the adversarial DA manner, for ∀𝑗∈[𝑀], 𝒫𝑗 has been enforced to approach 𝒫𝑡. Given this, it would be appropriate to suppose a source-specific approximation ratio 𝛼𝑗∈(0,1) to describe the source-j-to-target adaptation, namely,

Assumption 1
(Multi-way adversarial learning) Provided a well-trained feature extractor 𝐹∗, ∀𝑗∈[𝑀], it corresponds to an approximate ratio 𝛼𝑗∈(0,1) so that ∀𝑥𝑡∈𝒳, there exists 𝛼𝑗𝒫𝑡(𝑥𝑡)≤𝒫𝑗(𝑥𝑡)≤𝒫𝑡(𝑥𝑡).

𝛼𝑗𝒫𝑡(𝑥𝑡)≤𝒫𝑗(𝑥𝑡) implies the upper bound of the discrepancy between 𝒫𝑡 and 𝒫𝑗 in the optimized feature space. 𝛼𝑗 closer to 1 indicates the source j and the target more difficult to tell apart. 𝑥𝑡 is drawn from a target domain rather than a source domain. To this end, it is more reasonable to assume 𝒫𝑗(𝑥𝑡) ≤ 𝒫𝑡(𝑥𝑡). Beyond this, we also consider the pseudo-labeling strategy in discriminative adaptation, leading to another assumption about pseudo-labeled examples:

Assumption 2
(Pseudo-labeled discriminative adapatation) Given a well-trained feature extractor and M source-specific classifiers, after each multi-way adversarial DA updates, target examples hold 𝜌∈(0,1) as a probability of false labels by the pseudo-labeling strategy.

which states 𝜌×100%-at-least target examples whose categories are correctly forecast by our pseudo-annotating strategy. Based upon the assumptions, we develop an upper bound of a target classification error in terms of a given target feature 𝑥𝑡.

Proposition 2
Suppose the converged feature extractor 𝐹∗ satisfying Assumptions 1 and 2. Given a target feature 𝑥𝑡, its classification loss ℒ(𝒫𝑡,ℎ𝑡,𝑓)(𝑥) in DCTN can be upper bounded as follows:

ℒ(𝒫𝑡,ℎ𝑡,𝑓)(𝑥)≤1∑𝑀𝑘=1log(1+𝛼𝑘)∑𝑗=1𝑀𝒫𝑗(𝑥)𝐿(ℎ𝑗(𝑥),𝑓(𝑥)),
(17)
where 𝐿(ℎ𝑗(𝑥),𝑓(𝑥)) indicates an instance loss of the 𝑗𝑡ℎ source classifier.

The target instance bound of DCTN is composed of a target feature’s bounds on all source classifiers with its corresponding probabilities that it belongs to these sources. It indicates that, the closer a target feature is located at a source center, the higher its probability belongs to this source. So as long as there is a source suits well to a target feature (the adversarial learning and classification fine-tuning perform well in this source), the DCTN performance would be guaranteed since the classification bound and the probability that the target feature belongs to this source have jointly dominated the bound. It demonstrates the connection between DCTN and those methods based on multi-source mixture assumption to a target sample. However, DCTN do not rely on it since the probability that a target sample belongs to a source is based on their transferable features automatically obtained by adversarial learning instead of pre-given by human experience.

Vanilla MSDA
Based on the target instance loss with respect to ℎ𝑡 in Eq. 17, we provide the MSDA generalization bound of DCTN in the vanilla scenario:

Proposition 3
Suppose the converged feature extractor 𝐹∗ satisfying Assumptions 1 and 2. For all 𝑗∈[𝑀], the source maintains ℒ(𝒫𝑗,ℎ𝑗,𝑓)≤𝜖𝑗, (𝜖𝑗>0). Then the expected loss of a mixture hypothesis ℎ𝑡 defined by Eq. 14 is at most 𝜖′ w.r.t. any target function f :  ℒ(𝒫𝑡,ℎ𝑡,𝑓)≤𝜖′, where

𝜖′=1∑𝑀𝑘=1log(1+𝛼𝑘)((1−𝜌)∑𝑗∈[𝑀]𝜖𝑗+𝑀𝜌)
(18)
Equation 18 denotes a surrogate target loss produced by the target category predictor [Eq.(2)], since it is not directly implemented to train the feature extractor F and M-source classifiers {𝐶𝑗}𝑀𝑗=1. Equation 18 implies some guidances in transfer learning. Concretely, if it holds 𝛼𝑘→0, ∀𝑘∈[𝑀], then 𝜖′→0 and learning DCTN will fail. As long as some of source domains successfully approach the target (∃𝑘∈[𝑀], 𝛼𝑘→0), 𝜖′ could provide a meaningful upper bound to reflect the MSDA process. Especially, when ∀𝑘∈[𝑀] it holds 𝛼𝑘→1, Eq. 18 would turn into a normal classification bound over the average of M-source classifiers. In terms of 𝜌, it shows the worst case about the mismatched categories in MSDA.

Category-Shift MSDAs
Though Eq. 18 is discussed in a vanilla MSDA scenario, the category predictor with source shifts also resembles the spirit. Concretely, we found that

𝐶𝑡(𝑐|𝑥𝑥(𝑡))=∑𝑐∈𝒞𝑗𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑗)∑𝑐∈𝒞𝑘𝑠(𝑥𝑥(𝑡);𝐹,𝐷𝑘) 𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡)))=∑𝑐∈𝒞𝑗𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑗)𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡)))∑𝑐∈𝒞𝑘𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑘)+∑𝑐∉𝒞𝑘𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑘)+∑𝑐∉𝒞𝑗𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑗)𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡)))∑𝑐∈𝒞𝑘𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑘)+∑𝑐∉𝒞𝑘𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑘)=∑𝑗∈[𝑀]𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑗)𝐶𝑗(𝑐|𝐹(𝑥𝑥(𝑡)))∑𝑘∈[𝑀]𝑠(𝑐|𝑥𝑥(𝑡);𝐹,𝐷𝑘).
(19)
Given this, Eq. 3 could be viewed as the class-specific learner extended from Eq. 2. If {𝐶𝑡(𝑐|𝑥𝑥(𝑡)),𝑐=1,...,𝑀} denotes a simplex with respect to all classes in the target domain, Eq. 3 turns into the special case of Eq. 2, thus, following the similar analysis.

In a MSDA problem with target category shifts, we conduct an upper bound of the target surrogate loss derived from Proposition 3. Let 𝜌′ denote the proportion of target data wrongly labeled by our unknown-class discovery strategy,

Proposition 4
Suppose the converged feature extractor 𝐹∗ satisfying Assumptions 1 and 2. For all 𝑗∈[𝑀], the source maintains ℒ(𝒫𝑗,ℎ𝑗,𝑓)≤𝜖𝑗, (𝜖𝑗>0). Then the expected loss of a mixture hypothesis ℎ𝑡 defined by Eq. 14 is at most 𝜖′ w.r.t. any target function 𝑓:ℒ(𝒫𝑡,ℎ𝑡,𝑓)≤𝜖′, where

𝜖′=(1−𝜌′)(1−𝜌)∑𝑗∈[𝑀]𝜖𝑗+((1−𝜌′)𝜌+𝜌′)𝑀∑𝑀𝑘=1log(1+𝛼𝑘).
(20)
Equation 20 is upper bounded by Eq. 18. The equality is satisfied when 𝜌′→0, implying that no unknown target example has been missed to detect with our entropy-based “unknown” target example discovery strategy. In the source-target-category-shift scenario, learning DCTN could be considered as combining the analysis of the both category-shift scenarios.

Experiments
In the context of MSDA, we evaluate the classification accuracy of the target category predictor in experiments. Four adaptation learning cases, i.e., vanilla, source-category-shift, target-category-shift and source-target-category-shift MSDA problems, will be thoroughly studied. Each empirical study is implemented with a single GTX GeForce 1080 GPU on PyTorch platform. More implementation details are referred to the supplementary material.

Benchmarks and Measures
Four widely-applied DA benchmarks, i.e., Office-31 (Saenko et al. 2010), ImageCLEF-DA, Digits-five and DomainNet (Peng et al. 2019) are introduced for the vanilla MSDA experimental evaluations. We follow the test routine in the previous works (Long et al. 2015, 2016) for fair comparisons. For reproducibility, the detailed dataset splits are released.Footnote4

Office-31 is a classical benchmark for object recognition with 31 categories. It has three datasets, A (Amazon), D (DSLR), W (Webcam). There are 4652 images in total.

ImageCLEF-DA is released for the ImageCLEF 2014 domain adaptation challenge. It covers 12 object categories (aeroplane, bike, bird, boat, bottle, bus, car, dog, horse, monitor, motorbike, and people) shared in the three famous real-world datasets, I (ImageNet ILSVRC 2012), P (Pascal VOC 2012), C (Caltech-256). It includes 50 images in each class and totally 600 images for each domain.

Digits-five includes five digit image sets drawn from following public datasets, mt (MNIST) (LeCun et al. 1998), mm (MNIST-M) (Ganin et al. 2017), sv(SVHN) (Netzer et al. 2011), up (USPS) and sy (Synthetic Digits) (Ganin et al. 2017), respectively. We draw 25,000 for training and 9,000 for testing in each set, i.e., MNIST, MNIST-M, SVHN and Synthetic Digits and choose the entire USPS dataset as one domain with only 9,298 images.

DomainNet includes six natural image domain sets. e.g., clp(Clipart), inf(Infograph), pnt(Painting), qdr(Quickdraw), rel(Real) and skt(Sketch), with 345 categories and around 0.6 million images in total.

Note that, DCTN’s performance in the vanilla MSDA based on DomainNet have been provided in Peng et al. (2019). They used AlexNet as DCTN’s backbone to compare with M3SDA in ResNet101. To this, we evaluate DCTN and M3SDA by using the same backbones in Office-31, ImageCLEF and Digits-five in the vanilla MSDA scenarios (Sect. 5.2). In terms of DomainNet, we standardized their backbones with ResNet101 and evaluated them when source and target category shifts both exist (Sect. 5.4).

Table 1 Accuracy (%) on Office-31 in the vanilla MSDA setting
Full size table
Table 2 Accuracy on ImageCLEF-DA in the vanilla MSDA setting
Full size table
As for the evaluation results, we follow the standard evaluation protocols adopted in unsupervised domain adaptation (Long et al. 2015; Ganin and Lempitsky 2015), and derive them to suit different MSDA scenarios (details are introduced in the corresponding sub-sections). Generally, for Office-31 and ImageCLEF-DA datasets, we use all labeled source examples and all unlabeled target examples. We compare the average classification accuracy of each method on three random independent experiments, and report the standard error of the classification accuracies by different experiments of the same transfer task. For the digit-5 and DomainNet benchmarks, we use all labeled source and unlabeled target training samples, then evaluate its performance on target test sets. We randomly run 3 times till the model converges and then choose the best results to report the accuracy. Finally, we perform model selection by tuning hyper-parameters using transfer cross-validation.

MSDA in Vanilla Scenarios
The existing work of MSDA lack comprehensive evaluations on complex real-world visual recognition. In our experiment, we introduce three traditional MSDA approaches, e.g., RDALR (Jhuo et al. 2013b), sparse FRAME (sFRAME) (Xie et al. 2015), SGF (Gopalan et al. 2011) as the baselines in Office-31, and two deep MSDA approaches Multi-Source Batch Normalization (MSBN) (Mancini et al. 2018) and M3SDA as the baselines in Office-31 and ImageCLEF-DA. Besides, we also compare our DCTN with several single-source visual DA baselines, which include the conventional methods, e.g., Transfer Component Analysis (TCA) (Pan et al. 2011) and Geodesic Flow Kernel (GFK) (Gong et al. 2012), as well as several state-of-the-art deep DA approaches: Deep Domain Confusion (DDC) (Tzeng et al. 2015), Deep Reconstruction-classification Networks (DRCN) (Ghifary et al. 2016), Reversed Gradient (RevGrad) (Ganin and Lempitsky 2015), Pixel Domain Adaptation (PixelDA) (Bousmalis et al. 2017), Domain Adaptation Network (DAN) (Long et al. 2015), Residual Transfer Network (RTN) (Long et al. 2016) and Joint Adaptation Network (JAN) (Long et al. 2017). To achieve more comprehensive understanding about multi-source transfer, we compare our DCTN with these single source DA approaches by two different evaluation protocols. (1) Single source: Since they belong to single-source DA approaches, we directly report their single source transfer results from their original paper. (2) Source combine: multiple source domains are combined into a traditional single-source versus target domain adaptation setup. It helps to testify whether it would be able to boost the transfer performance gains through augmenting another source domain. Additionally, as baselines in the Source combine and multi-source standards, we use all images from sources to train backbone-based multi-source classifiers and apply them to classify target examples. These Source only results confirm whether our multi-source transfers are available (Negative indicates failure of adaptation). For fair comparisons, deep DA baselines in Office-31 and ImageCLEF-DA employ the Alexnet backbones, and share the same backbone model (see our “Appendix”) in Digits-five. The Source-combine results are basically derived from the official codes provided by their original papers.

Object recognition We report all transfer cases and compare our DCTN with the baselines in Tables 1 and 2 bolditalic, bold and italic indicate the performance of top 1, 2 and 3, respectively). Table 1 shows DCTN yielding the competitive results in the Office-31 transfer tasks A,W → D and A,D → W, performing impressively in D,W →  A. More specifically, DCTN significantly exceeds the traditional methods by a huge margin and mostly outperforms the single-source deep DA baselines, i.e., DAN, RTN, JAN, RevGred, and their source-combine variants. It reveals that if MSDA is treated as a single source DA problem by combining sources, the performance gain can not be fully excavated. Through the data transfer by DCTN, the potential power of multiple sources are efficiently used to boost the adaptation performance. Note that, MSBN is very competitive so that exceeds DCTN by 0.3% in Office-31 on its averaged accuracy. But MSBN does not generalize well across transfer cases: though achieving remarkable improvement in D,W →  A, MSBN remains inconspicuous in A,W → D and A,D → W (fall behind source-combine single source DA variants). In a comparison, DCTN wins the top-3 performances in all transfer cases and thus, demonstrates more significant generalization ability. In ImageCLEF-DA, source-combine DA variants achieve more superior than their original single source models, whereas remains inferior to our DCTN. It validates that, no matter whether the domain size is equal or not, DCTN is able to learn more transferable and discriminative features than the other baselines, from multi-source transfer for natural image domains. MSBN completely fails in ImageCLEF-DA and even appears negative transfer compared with the source-only baseline.

Digit recognition Different from the previous visual recognition benchmarks, Digit-five contains five domains in total and is specified for multi-domain learning. We investigate 4-to-1 transfer results of DCTN within the following domain shifts: mm, mt, sy, up  →  sv; mt, sv, sy, up  →  mm; mt, sv, mm, up  →  sy and mt, sv, sy, mm  →  up, and provide the performance on average. We compare DCTN with RevGred, DAN and their source-combine transfer variants.

Table 3 Classification accuracy (%) on Digits-five dataset for MSDA in the vanilla setting
Full size table
Table 4 Average accuracy (%) performances of the above baselines
Full size table
Fig. 3
figure 3
The absolute performances based upon the mean accuracies (%) of Source only, RevGread, DAN and DCTN on Office-31 and ImageCLEF-DA under the MSDA category shift scenario. The curves denote their accuracies changing as the public classes across multiple sources increase. Higher is better

Full size image
Fig. 4
figure 4
The relative performance (degraded accuraies, the accuracy under vanilla scenario minus the the accuracy under category shift) of Source only, RevGread, DAN and DCTN on Office-31 and ImageCLEF-DA under MSDA category shift scenario. The curves denote how much their accuracies drop as the public classes across multiple sources increase. Lower is better

Full size image
Fig. 5
figure 5
The transfer gains (the accuracy of the baseline minus the accuracy of source only) of Source only, RevGread, DAN and DCTN on Office-31 and ImageCLEF-DA under MSDA category shift scenario. The negative value means the negative transfer, which causes even heavier model damage than those without domain adaptation. Higher is better

Full size image
Overall accuracies of the baselines are concluded in Table 3. First of all, it is apparent that accuracies of single source DA approaches fall behind their source-combine. It implies that as M increases, multiple sources provide more evidences to boost transfer performance gains than those solely involved with a single source domain. However, we observe that these source-combine typically perform worse than their source-only except for mt, sv, sy, up  →  mm. In other words, despite of potential benefits multiple sources bring about, single source deep DA approaches conventionally suffer negative transfer. Therefore, it can not take advantage of the multi-source information into the model. In comparison, DCTN consistently shows positive transfer performances compared with the source only, and no matter of source-combine and multi-source ensemble, DCTN always outperforms the other baselines. In Table 4, the mean accuracy of our DCTN exceeds the second best by 3.6%.

MSDA in Source-Category-Shift Scenarios
In this subsection, we switch to evaluate DCTN in the category shift scenario, where the multiple sources do not share the same categories. We compare our DCTN with state-of-the-art approaches, i.e., DAN and RevGred, under the single-source and source-combine evaluation settings. Our experiments are conducted in four MSDA transfer cases: A,D → W and A,W → D in Office-31; I,P → C and C,P → I.

Evaluation protocol Since source-category-shift is newly proposed in MSDA scenario, benchmarks should be amended to to evaluate DA algorithms in this scenario. Specifically, suppose that M sources involve C categories and 𝐶𝑝≤𝐶 indicates the number of their public classes. Due to 𝑀=2, we consider the alphabetical order of the C classes and take the first 𝐶−𝐶𝑝2 and last 𝐶−𝐶𝑝2 classes as the source-specific private classes, then the rest proportion 𝐶𝑝𝐶 denotes the public classes. To unveil the comprehensive the baselines in this scenario, we evaluate them by specifying the public-class proportions 𝐶𝑝𝐶 in {0,0.3,0.5,0.7,1}, respectively.

We elaborate three metrics to reflect the adaptation capability of baselines from different perspectives. First, classification accuracy is to evaluate whether the baseline helps the classifier address the domain/category shift problem.

Second, We employ a relative measure termed degraded accuracy by examining how much performance drops when source-category shift exists, which is simply calculated as follows:

𝐷𝐴(𝐶𝑝𝐶)=𝐴𝑐𝑐(𝐶′𝑝𝐶=1)−𝐴𝑐𝑐(𝐶𝑝𝐶),
(21)
where 𝐴𝑐𝑐(𝐶𝑝𝐶) denotes the accuracy when the public-class proportion is 𝐶𝑝𝐶, and 𝐴𝑐𝑐(𝐶′𝑝𝐶=1) means the accuracy of the model trained in vanilla MSDA scenario. The formula showcases the performance drop caused by inconsistent categories of sources. The lower value means the algorithms less affected by this negative effect, performing more robust in this scenario. Finally, we employ transfer gain as the third metric to further confirm the availability of transfer learning. Transfer gain is calculated through subtracting the baseline’s accuracy with the accuracy of Source only. A positive value undoubtedly means that the transfer is available, while a negative value means the DA approach aggravates the domain shift problem.

Results The experiments cover the four transfer cases. Experimental results on these metrics (mean accuracy, degraded accuracy and transfer gain), are illustrated in Figs. 3, 4 and 5, respectively. DCTN always outperforms other baselines in different proportions of public classes and transfer cases. Generally, the improvement becomes larger as the sources contain more public classes. In Fig. 4, it can be observed that both Source only and DCTN behave neck and neck in ImageCELF-DA.

Table 5 Accuracy (%) of each method based on the 10-shared-class target-category-shift scenario in Office-31
Full size table
Considering the relative enhancement measure, in Office-31, Source-only even obtains lower DA values than DCTN. Note that, it does not imply Source-only outperforms our DCTN. In particular, compared with DA algorithms, i.e., DAN, RevGred and DCTN, Source-only undergoes fully-supervised learning, therefore, is free of the risk caused by category misalignment. To some extent, it should be treated as a sort of consecutive strategy preferring the safety of supervised training rather than adapting to a domain without labeled data.

Considering the absolute performance shown in Fig. 3, it is obvious that, Source-only are almost inferior to all DA approaches.

Besides of superior transfer performance improvement, another merit of DCTN is the strong resistance against the potential negative transfer influences. As demonstrated in Fig. 5, compared with other state of the art methods, DCTN remain positive values in all transfer cases. Specifically, in Office-31, DAN shows impressive transfer performance in A,D → W with 0% public classes, but its performance on transfer gain is quite unstable as the public class number becomes challenging. RevGred performs more stable and better than DAN in general, whereas both of them inevitably suffer from negative transfer and are wholly suppressed by our DCTN. Similarly, in ImageCLEF-DA, DAN and RevGred still fail to achieve a promising transfer performance. In particular, when the number of public classes is small, their transfers even result in more model damages.

MSDA in Target-Category-Shift Scenarios
In this subsection, we evaluate DCTN in the target-category-shift scenario. As we previously discussed, it can be viewed as an open-set DA problem in a multi-source condition. We follows the similar experimental setting by reconfiguring Office-31 benchmark as Saito et al. (2018). Concretely, we randomly choose the 10 classes in the Caltech dataset (Gong et al. 2012) as the common classes of the sources and target and the rest 21 are “unknown”. In order to fairly compare with the single-domain open-set DA methods (Saito et al. 2018; Busto and Gall 2017) (they can be treated as Source-combine baselines in the target-shift experiments), we follow their protocols. Specifically, we evaluate all baselines on three domains in Office-31 with different numbers and for each domain, 1–11 classes are selected as shared classes across sources and target; 21–31 classes are selected as unknown target classes for identification. We accept the routine adapted in Saito et al. (2018) so that 11–20 classes have been abandoned.

Baselines For a fair comparison, we compare five state-of-the-art open-set DA approaches with our DCTN in target-category-shift MSDA scenario: OSVM, MMD + OSVM, BP + OSVM, ATI-𝜆 + OSVM, and RevGred-OP (Saito et al. 2018). The first four methods are derived from Open-set SVM (OSVM) (Busto and Gall 2017), which employ a threshold to preclude the target examples probably belonging to the “unknown” class. The last one is developed from RevGred. Since they are not open-sourced, to ensure the fairness in our comparisons, we directly report their published performance results in the single source open-set scenario.

Evaluations Two evaluation measures, i.e., OS and OS*, are used to evaluate DCTN and comparison methods. The first testifies the methods on all target categories. The second evaluates them on 10 known categories. As can be observed in Table 5, in evaluation criteria OS and OS*, the single best accuracies of RevGred-OP remain suppressed by DCTN in A,W → D (97.1, 99.4 of DCTN better than 96.8, 96.9 of RevGred-OP) and A,D → W (96.7, 98.9 of DCTN better than 94.4, 94.6 of RevGred-OP).

MSDA in Source-Target-Category-Shift Scenarios
Source and target category shifts may concurrently appear. How much the joint negative transfer they bring about and whether it can be mitigated by MSDA algorithms, remain underexplored. To this, we start the evaluation from the experimental setup in MSDA with the target category shift, then further vary the proportion of the public categories, similar to the source-shift practice in Section 5.3. Our experiments are conducted in four transfer cases: A,D → W and A,W → D in Office-31; clp,pnt,dqr,rel,skt → inf and clp,pnt,dqr,rel,inf → skr in DomainNet. For DomainNet, we selected the categories with IDs over 250 and unify them to construct the unknown class 𝑐𝑢. Afterwards, we change the proportions of public categories from 0%, 50% to 100%. Since DomainNet is a very challenging benchmark. So we slightly change the data-split routine in Office-31. Specifically, in the case of 0%, we select 1–125 classes into the first and second sources, 126–250 classes into the third and fourth sources, then let the last source contains all 250 categories; in the case of 50%, we select 1–166 categories into the first and second sources, 84–250 categoies into the third and fourth sources, the last source contains all 250 categories. So the public classes in DomainNet refers to those shared across source 1,2 and source 3,4. This setting simplifies the complex category relation across the five source domains, encourage the evaluation to focus on the varation of performances across baselines.

Fig. 6
figure 6
The accuracies (%) of Source only, M3SDA and DCTN based on two transfer cases, in the source-target-category-shift scenario on Office-31 (OS and OS* indicate two evaluation protocols in target category shift scenarios). The curves denote their accuracies changing as the percentage of public classes across multiple sources increases. Higher is better

Full size image
Fig. 7
figure 7
The accuracies (%) of Source only, M3SDA and DCTN based on two transfer cases, in the source-target-category-shift scenario on DomainNet (OS and OS* indicate two evaluation protocols in target category shift scenarios). The curves denote their accuracies changing as the percentage of classes across multiple sources increases. Higher is better

Full size image
In terms of the baselines, distinct from what were evaluated in the previous sub-section, we considered the comparison between M3SDA and DCTN along with Source-only. Since M3SDA and DCTN are both state-of-the-art MSDA algorithms while with a similar spirit behind, thus, it would be insightful whether DCTN and M3SDA can both prevent the negative transfer or not. Since the original M3SDA algorithm is unable to handle the unknown categories in the target domain, for a fair comparison, we endowed M3SDA with the identical strategy in DCTN to screen the unknown-class samples. All baselines are evaluated based on the classification accuracy under OS and OS* criterion.

The results are illustrated in Figs. 6 and 7. In A,W → D , clp,pnt,dqr,rel,inf → skr and clp,pnt,dqr,rel,skr → inf,all the accuracy curves of DCTN and MSDA performed as upper envelopes of the Source-only, showing that the negative transfer effects have been eliminated in the cases. Notably, DCTN keeps ahead in all cases and protocols. But when the proportion of public classes decreases, the transfer gains brought by DCTN and MSDA are gradually minimized. Especially, when there are no public categories across the source domains, the transfer improvement from M3SDA has been completely erased in all transfer cases. In A,D → W,M3SDA has suffered a serious negative transfer effects in the OS and OS* protocols. Instead, DCTN is still able to provide a transfer gain in this case. The results showcase the superiority of DCTN in these tough category-shift scenario.

Fig. 8
figure 8
The t-SNE (Maaten and Hinton 2008) visulization of A,D → W. Green, black and red represent domains A, D and W respectively. We use different markers to denote 5 categories, e.g., bookcase, calculator, monitor, printer, ruler. Best viewed in color

Full size image
Fig. 9
figure 9
Analysis: a the accuracies of DCTN, adversarial-only and pseudo-only models; b the accuracies of testing samples and pseudo-labeled target samples; c the convergence performance on different losses. Best viewed in color

Full size image
Model Analysis
Feature visualization Take the task of A,D  →  W in Office-31 for example.

We visualize the DCTN activations before and after adaptation, which is impressive to demonstrate that the transferability learnt by DCTN. For simplicity, both source domains have been separated to emphasize the contrast of the target domain. As we can see in Fig. 8, compared with those from source only, our activations from A  →  W and D  →  W have shown good adaptation patterns. This indicates DCTN can successfully learn transferable features with multiple sources. Besides, the target activations become more clear to categorize, which suggests that the features learned by DCTN attains desirable discriminative property. Finally, even if the multi-source transfer has been composed of hard transfer task (A  →  W), DCTN is still able to adapt to target domain without the performance degradation in D  →  W.

Table 6 Ablation study of Algorithm 1 in Office-31
Full size table
Ablation study The learning of DCTN consists of the multi-way adversary and auto-labeling scheme. To further reveal their function, we decompose DCTN into two variants: The adversarial-only model excludes the pseudo-labels and updates the category classifier with source samples. The pseudo-only model forbids the adversary and categorize target samples with average multi-source results. As shown in Fig. 9a, the accuracy of adversary behaves stably in each iteration. But due to the lack of target class guidance, its final performance hits a bottleneck. Without the adversary, the accuracy of pseudo labels significantly drops and pulls down the DCTN accuracy. It indicates that both adaptations cooperate with each other to achieve desirable transfer behaviors. Diving deeper in Fig. 9b, the test accuracy and the pseudo label accuracy show converged in the alternative learning, which implicitly reveals the consistency between both adaptations. We also provide the ablation to the domain batch mining technique (Table 6), which testifies the method’s efficacy.

Pseudo-labeling strategy From the ablation above, we know pseudo-labeled target samples are playing a key role of training a well-performed DCTN. So it is important to check whether annotation strategy may improve other baseline. To this, we evaluate DAN, RTN, JAN, RevGred (four single-source DA algorithms with their source-combine results), MSBN, M3SDA and our DCTN (three MSDA algorithms) independently when they are learned with and without using our pseudo-labeling strategy. In Fig. 10, we observed that the accuracies of all single-source approaches and MSBN have been decreased, probably due to using a single classifier for prediction. Instead, M3SDA and DCTN are benefited from the pseudo-labeling strategy.

Convergence analysis As DCTN involves a complex learning procedure including adversarial learning and alternative adaptation, we testify the convergence performance of different losses. In the process of hard transfer A → W, Fig. 9c demonstrates that, despite deviation, the classification loss, adversarial loss and test error gradually converge.

Fig. 10
figure 10
The comparison of different algorithms when they use and don’t use pseudo-labeled target samples in training

Full size image
Conclusion
In this paper, we have explored the unsupervised DA involved with multiple sources challenged by domain shift and category shift. Beside the vanilla MSDA transfer scenario, we further investigate three other innovative and realistic MSDA scenarios, where the category sets across multiple sources and the target are assumed to be inconsistent. In order to overcome these transfer challenges, we propose deep cocktail network (DCTN), an adversarial DA framework to obtain transferable and discriminative features from multiple sources to a target domain. It constitutes an alternating learning process that delicately refers to our target classification principle. DCTN can be flexibly deployed in ordinary MSDA and category shift scenarios, and more importantly, it suits the open-set scenario with a mild reconfiguration. Delving into the motivation of DCTN, we further reveal that, DCTN connects with a previous MSDA theory and enjoys an expected loss upper bound through an adversarial DA assumption instead of specifying a strong target mixture precondition. Finally, DCTN is evaluated across three benchmarks with massive transfer combinations under three scenarios. It achieves state-of-the-art results in most of our evaluation criteria and behaves extraordinarily to resist negative transfer effects.