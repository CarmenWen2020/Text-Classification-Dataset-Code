Surface comparison and matching is a challenging problem in computer vision. While elastic Riemannian metrics provide meaningful shape distances and point correspondences via the geodesic boundary value problem, solving this problem numerically tends to be difficult. Square root normal fields considerably simplify the computation of certain distances between parametrized surfaces. Yet they leave open the issue of finding optimal reparametrizations, which induce corresponding distances between unparametrized surfaces. This issue has concentrated much effort in recent years and led to the development of several numerical frameworks. In this paper, we take an alternative approach which bypasses the direct estimation of reparametrizations: we relax the geodesic boundary constraint using an auxiliary parametrization-blind varifold fidelity metric. This reformulation has several notable benefits. By avoiding altogether the need for reparametrizations, it provides the flexibility to deal with simplicial meshes of arbitrary topologies and sampling patterns. Moreover, the problem lends itself to a coarse-to-fine multi-resolution implementation, which makes the algorithm scalable to large meshes. Furthermore, this approach extends readily to higher-order feature maps such as square root curvature fields and is also able to include surface textures in the matching problem. We demonstrate these advantages on several examples, synthetic and real.

Access provided by University of Auckland Library

Introduction
The analysis of shape-and-image data is an important problem in computer vision. Such data arise naturally in many applications such as biomedicine (Pennec et al. 2019) or robotics (Turaga and Srivastava 2016) and is produced e.g. by medical imaging devices or time-of-flight cameras in cell phones or cars (Grzegorzek et al. 2013). While deep-learning techniques have led to significant break-throughs in image analysis, these developments have not yet been paralleled in shape analysis (cf. Geirhos et al. 2018). A major difficulty in the direct application of deep-learning methods to shapes is that common shape descriptors are non-unique and vary in structure and dimension. For example, one and the same surface can be represented by many different triangular meshes with varying connectivities and numbers of vertices. While differences in mesh parametrizations matter in numerical computations, they carry no statistical information about the shapes themselves and have to be quotiented out in meaningful statistical analyses.

Shape analysis provides a mathematical description of shape spaces as quotient spaces in the above sense, as well as a computational toolbox for statistics and machine learning thereon. Some classical textbooks are Dryden and Mardia (1998) and Kendall et al. (1999), and some more recent ones Younes (2010), Srivastava and Klassen (2016), and Pennec et al. (2019). In shape analysis, as in functional data analysis (Kokoszka and Reimherr 2017), the starting point is typically a space of functions, say from ùëÜ2 to ‚Ñù3 in the case of surfaces.

In numerical implementations, this function space is discretized, e.g. by triangular meshes, seen as piecewise linear ‚Ñù3-valued functions on some fixed triangulation of ùëÜ2. The shape space corresponding to this function space is determined by the following equivalence relation: two functions are considered as representations of the same shape if they differ only by a reparametrization, i.e., by a diffeomorphism on their domain. Additionally, rigid motions and scalings are sometimes factored out, as well (Kendall et al. 1999). Shape space is a nonlinear infinite-dimensional manifold (Cervera et al. 1991), even if the original function space is linear, and it is the natural configuration space for statistics and machine learning on shapes.

Riemannian geometry is ideally suited as a basis for statistics and machine learning on manifolds of shapes or otherwise: it allows the estimation of Fr√©chet means and higher-order statistical moments via the geodesic distance function (Dryden and Mardia 1998), provides local linearizations and geodesic principal components via the Riemannian logarithm (Srivastava and Klassen 2016), defines generative random models via stochastic geometric mechanics (Pennec et al. 2019), and supplies kernels for support vector machines via the geodesic distance and heat equation (Minh et al. 2016). The intuition for the Riemannian setting is that two shapes are considered to be similar when they differ only by a small deformation, as measured by a Riemannian metric.

The Riemannian metrics studied in this paper are often called elastic (Younes 1998; Srivastava et al. 2011; Kurtek et al. 2012; Jermyn et al. 2012, 2017) despite the analogy to elastic stretching and bending energies being only loose (Rumpf and Wardetzky 2014; Rumpf and Wirth 2015a). Alternatively, these metrics are also called inner metrics (Bauer et al. 2011) to distinguish them from outer metrics in diffeomorphic shape analysis (Younes 2010). All elastic metrics are invariant to reparametrizations, and this is needed for the metrics to be well-defined on the quotient space of shapes (Bauer et al. 2016).

Reparametrization-invariance of the metric implies that even linear function spaces have interesting geometries, which are full of surprises. For example, the geodesic distance of the simplest reparametrization-invariant Riemannian metric vanishes on spaces of curves, surfaces, and diffeomorphisms, as discovered by Michor and Mumford (2005, 2006). This degeneracy is a purely infinite-dimensional phenomenon, which led to a systematic study of higher-order Sobolev metrics on mapping spaces. It turns out that metrics of order one and higher have non-vanishing geodesic distance (Bauer et al. 2011), and metrics of order two and higher are complete on spaces of curves with the same Sobolev regularity (Bruveris et al. 2014). The metrics considered here are of similar type but lack a zero-order term, which means that they are blind to translations and, beyond dimension one, some further non-trivial deformations (Klassen and Michor 2020).

In data-analytic applications, what is needed foremost are efficient implementations of the geodesic initial and boundary value problems on shape space (see Sect. 3.1 for definitions and Srivastava and Klassen (2016) for applications). The theoretical understanding of these problems is still incomplete. The initial value problem is locally well posed for a wide class of Sobolev metrics of order one and higher (Bauer et al. 2011), even of fractional order (Bauer et al. 2020). Moreover, the initial and boundary value problems are globally well-posed for certain second-order Sobolev metrics on spaces of curves (Bruveris 2015), but this has not yet been generalized to surfaces. Algorithmically, the initial value problem can be solved by a time-discretization of the geodesic equation (Bauer et al. 2011) or using discrete geodesic calculus (Rumpf and Wirth 2015b). The boundary value problem on functions (seen as parametrized surface) is closely related to mesh interpolation (Kilian et al. 2007; Fr√∂hlich and Botsch 2011) and can be solved by the direct method of variational calculus or, for certain elastic metrics, by exploiting isometries to simpler spaces. For the boundary value problem on shape spaces, one has to solve in addition the optimal correspondence problem, i.e., one has to factor out the action of the group of reparametrizations.

Searching for optimal reparametrizations is a challenging task. Previous approaches relied on a discretization of the reparametrization group and an implementation of the group action on the discretized function space (Srivastava and Klassen 2016; Jermyn et al. 2017; Su et al. 2020b). Unfortunately, the implementation of the group action requires the initial and target shapes to be defined on the same pre-specified domain with pre-specified triangulation. As this is typically not the case, one first has to solve the parametrization problem (Sheffer et al. 2007), which is of comparable difficulty to the geodesic boundary problem itself. An additional problem is that the reparametrization group can be discretized well for circular domains using monotone correspondences (Bernal et al. 2016) and for spherical domains using spherical harmonics (Jermyn et al. 2012), but adaptations to more general domains are difficult. Furthermore, compressions of surface patches to points and decompressions of points to surface patches are non-trivial to implement but occur in optimal reparametrizations (Lahiri et al. 2015). Some of these problems can be avoided by minimizing a gauge-invariant energy (Tumpach et al. 2015; Tumpach 2016), but this cannot be used to compute optimal point correspondences, which is one of our main goals.

The main contribution of this paper is a reformulation of the geodesic boundary value problem, which circumvents the above-mentioned problems. This reformulation draws on two lines of work: square root normal fields and varifold distances. Square root normal fields are isometric transformations from spaces of curves or surfaces to simpler manifolds. They were introduced by Kurtek et al. (2012) and Jermyn et al. (2012) and have their origin in similar transformations for curves, which were discovered by Younes (1998), Sundaramoorthi et al. (2011), and Srivastava et al. (2011). Square root normal fields map surfaces isometrically into a Hilbert space of square-integrable vector-valued half-densities. The Hilbert distance between square root normal fields is a first-order approximation of a Riemannian distance and can be computed efficiently by evaluating an integral. In contrast to general Riemannian distances, no optimization or time discretization is involved. Thus, square root normal fields provide computable (approximate) Riemannian distances with an elastic interpretation.

Varifold distances have their origin in geometric measure theory (Federer 1969; Almgren 1966) and were introduced into the context of diffeomorphic shape analysis by Charon and Trouv√© (2013), building on previous work on current distances by Vaillant and Glaun√®s (2005) and Glaun√®s et al. (2008). Their main advantages are that they are fully blind to reparametrizations and can be implemented efficiently on parallel computing architectures, as shown by Kaltenmark et al. (2017) and Charon et al. (2020). Despite directly providing distances on shape spaces, the main limitation is that those distances are not the result of a Riemannian metric: in particular, there is no interpretable notion of geodesics between two shapes in this setting. For this reason, they have to be combined with other shape distances, either on diffeomorphism groups as in diffeomorphic matching (Charon and Trouv√© 2013) or on shape spaces as in elastic matching. The latter approach was used for Sobolev metrics on curves by Bauer et al. (2017, 2019a) and for square root normal distances on curves in the recent conference paper by Bauer et al. (2019b), which is a predecessor of the present paper. In the present article, the focus is on surfaces, and we add multi-resolution matching, square root normal field inversion, geodesic interpolation, square root curvature fields, surface noise, textured surfaces, non-homotopic surfaces, and Fr√©chet means. Moreover, we provide a stable open-source implementation in Python.

We combine square root normal fields and varifold distances in a new elastic shape matching algorithm, i.e., a new algorithm for solving the geodesic boundary value problem of elastic metrics on shape space. The idea is to use varifold distances for relaxing the boundary constraint in the elastic matching problem and to use square root normal fields for boosting the computation of Riemannian distances. This has the following advantages.

Speed: Square root normal fields allow one to bypass the time discretization of the geodesic equation, and varifold distances circumvent the costly discretization of reparametrizations.

Applicability and flexibility: The algorithm can be applied directly to simplicial meshes without having to solve the parametrization problem first. It can handle different mesh structures and even different topologies, which is important in the presence of topological noise or for matching shapes with missing parts. Moreover, texture information can be used as in the fshape framework of Charon and Trouv√© (2014) and Charlier et al. (2017).

Correctness: The point correspondences found by our algorithm may exhibit compression of surface patches to points and decompression of points to surface patches. Such compressions and decompressions may indeed occur in optimal point correspondences (at least for curves; see Lahiri et al. 2015) and are difficult to model in explicit discretizations of diffeomorphism groups.

Robustness and scalability: The multi-resolution version of our algorithm robustly identifies optimal point correspondences, even for high-resolution surfaces. It scales well to high dimensions thanks to the parallelizability of varifold computations and the linear computational complexity of square root normal fields.

All algorithms are publicly availableFootnote1 as a Python package SRNFmatch.

Structure of the Paper
The paper is structured as follows. Section 2 describes our new problem formulation for the computation of square root normal field distances between surfaces. Section 3 connects this approach to solving the geodesic boundary value problem of a specific elastic shape metric. Section 4 presents the discretization of the algorithm on triangular meshes as well as a multi-resolution scheme to tackle it more efficiently. Section 5 demonstrates the usefulness of our algorithm on real-world and artificial test data.

Method
This section describes the proposed new algorithm for the computation of square root normal distances between shapes, using varifold distances as an auxiliary tool. An elastic interpretation is given subsequently in Sect. 3. The notation is summarized in Appendix A.

Shape Spaces
This section defines spaces of parametrized and unpara-metrized surfaces. The latter ones are also called shapes and correspond to equivalence classes of parametrized surfaces modulo reparametrizations. Additionally, following Kendall et al. (1999), one could factor out translations and rotations. However, as translation and rotation groups are only finite-dimensional, we focus on the more difficult task of quotienting out the infinite-dimensional reparametrization group.

To make this precise, we define the space of parametrized surfaces as the set Óàµ of all oriented immersions q of a 2-dimensional compact manifold M (possibly with boundary) into ‚Ñù3. The set Óàµ is an open subset of the Fr√©chet space ùê∂‚àû(ùëÄ,‚Ñù3). The diffeomorphism group of M is denoted by Óà∞ and acts on Óàµ by reparametrization, i.e., by composition from the right. The quotient space Óàø=Óàµ/Óà∞, which is called shape space, consists of unparametrized surfaces, i.e., equivalence classes [ùëû]={ùëû‚àòùúë;ùúë‚ààÓà∞}. This is illustrated in Fig. 1: each equivalence class is a set of parametrized surfaces which correspond to one and the same shape because they differ only by a reparametrizations. On a discrete level, Óàµ corresponds to triangular meshes with fixed connectivity, and reparametrizations correspond to remeshings.

Unfortunately, the quotient space Óàø has no straight-forward discretization, and this constitutes one of the main difficulties in numerical shape analysis.

Fig. 1
figure 1
Shape space as a quotient of the space of parametrized surfaces. Each shape [q] is an equivalence class of surfaces ùëû‚àòùúë, which differ only by a reparametrization ùúë. For example, the shape of a horse (gray) is an equivalence class (dashed line) of surfaces with different mesh parametrizations (color-coded). Elastic shape matching requires the computation of the minimal distance between surfaces of one equivalence class to surfaces of another equivalence class

Full size image
Square Root Normal Fields
Square root normal fields are part of a family of feature maps, which can be used to define shape distances related to elastic metrics, as we explain in Sect. 3.2. The first instance of such a feature map, which was discovered by Younes et al. (2008) and Sundaramoorthi et al. (2011), is the map from planar curves q to the complex square root ùëû‚Ä≤‚Äæ‚Äæ‚àö of their velocity, seen as an element of an infinite-dimensional Stiefel manifold. Similarly, Srivastava et al. (2011) considered the map from planar curves q to their square root velocity field ùëû‚Ä≤|ùëû‚Ä≤|‚àí1/2, seen as an element of a Hilbert space. Subsequently, Kurtek et al. (2012) and Jermyn et al. (2012) found an extension to higher dimension, namely the map from oriented hyper-surfaces q to their square root normal field (SRNF) ùëÅùëû, which is the unit normal field ùëõùëû multiplied by the square root of the Riemannian area form ùê¥ùëû:

ùëÅùëû:=ùëõùëûùê¥1/2ùëû.
For curves, the SRNF coincides up to a rotation of 90 degrees with the square root velocity field. For two-dimensional surfaces, it is given in coordinates (ùë¢,ùë£)‚àà‚Ñù2 as

ùëÅùëû=(ùëûùë¢√óùëûùë£)|ùëûùë¢√óùëûùë£|‚àí1/2,
(1)
where the subscripts denote partial derivatives, √ó denotes the cross product on ‚Ñù3, and |‚ãÖ| denotes the norm on ‚Ñù3. Geometrically, the SRNF belongs to the space of square-integrable ‚Ñù3-valued half-densities, which is a Hilbert space with the ùêø2 scalar product (see Michor 2008, Sect. 3.2. for further details). Half-densities can be identified with real-valued functions by fixing a reference half-density. This shall be done implicitly in all numerical discretizations. However, it should be kept in mind that half-densities transform differently than functions under reparametrizations: for any ùúë‚ààÓà∞, in any coordinate system on M,

ùëÅùëû‚àòùúë=(ùëÅùëû)‚àòùúë det(ùê∑ùúë)1/2,
(2)
where ùê∑ùúë denotes the differential (or Jacobian) of the diffeomorphism ùúë.

The SRNF distance between parametrized surfaces ùëû0 and ùëû1 is defined as the ùêø2 distance between the associated SRNFs:

distùëÅ(ùëû0,ùëû1):=‚à´ùëÄ|ùëÅùëû0‚àíùëÅùëû1|2.
(3)
Note that the right-hand side is well-defined because the square of a half-density is a density. The SRNF distance is sometimes called chordal distance to point out that the SRNF map is non-surjective and that consequently the SRNF distance differs from the intrinsic distance on its range. The SRNF distance has two advantages: it can be computed easily, as described in Sect. 4, and it is Óà∞-invariant, i.e., for any ùúë‚ààÓà∞,

distùëÅ(ùëû0‚àòùúë,ùëû1‚àòùúë)=distùëÅ(ùëû0,ùëû1).
(4)
This follows from (2) and the change-of-variable formula for integrals. However, this distance is not yet a distance between shapes, and it remains to quotient out reparametrizations. Accordingly, the SRNF distance between shapes [ùëû0],[ùëû1]‚ààÓàø is defined as the minimal SRNF distance between all reparametrizations of ùëû0 and ùëû1, i.e.,

distùëÅ([ùëû0],[ùëû1]):=infùúë0,ùúë1‚ààÓà∞distùëÅ(ùëû0‚àòùúë0,ùëû1‚àòùúë1)=infùúë‚ààÓà∞distùëÅ(ùëû0,ùëû1‚àòùúë),
(5)
where the second equation follows from the Óà∞-invariance (4). Similar distances can be defined for more general Óà∞-equivariant feature maps, as discussed in Sect. 3.3. An important caveat is that the SRNF distance is only a pseudo-distance because the SRNF map is non-injective, even after factoring out translations; see Klassen and Michor (2020). We will not dwell upon this issue and freely speak of distances even when they are only pseudo-distances. The main difficulty in (5) is the search for an optimal reparametrization ùúë‚ààÓà∞. We address this problem using varifold distances, which are described next.

Varifold Distances
Geometric measure theory provides several embeddings of shape spaces into some Banach spaces of distributions, including currents (Vaillant and Glaun√®s 2005; Glaun√®s et al. 2008), varifolds (Charon and Trouv√© 2013), and normal cycles (Roussillon and Glaunes 2016), see (Charon et al. 2020) for a recent review. In this paper, we adopt the framework of Kaltenmark et al. (2017). The varifold ùúáùëû associated to ùëû‚ààÓàµ is the image measure (ùëû,ùëõùëû)‚àóùê¥ùëû on ‚Ñù3√óùëÜ2, where ùëõùëû is the unit normal field of q, and ùê¥ùëû is the area form (also known as surface measure) of q. In other words, for any Borel set ùêµ‚äÇ‚Ñù3√óùëÜ2, ùúáùëû(ùêµ) is the area of all ùëö‚ààùëÄ such that (ùëû(ùëö),ùëõùëû(ùëö)) belongs to B. Importantly, this measure representation does not depend on the parametrization of q and thus provides an embedding of shape space Óàø into the space of positive measures of ‚Ñù3√óùëÜ2. Then, given a norm ‚Äñ‚ãÖ‚Äñ on the space of measures, one defines the varifold distance between [ùëû0],[ùëû1]‚ààÓàø as

distùëâ(ùëû0,ùëû1):=‚Äñùúáùëû0‚àíùúáùëû1‚Äñ.
(6)
While there are many possible distances that one can introduce on spaces of measures, norms defined from positive definite kernels on ‚Ñù3√óùëÜ2 have been shown to lead to particularly advantageous expressions for numerical computations. Specifically, following the setting of Kaltenmark et al. (2017), we consider the class of norms ‚Äñ‚ãÖ‚Äñùëâ‚àó, where V is a reproducing kernel Hilbert space of functions on ‚Ñù3√óùëÜ2, whose kernel is of the form

ùëò(ùë•1,ùëõ1,ùë•2,ùëõ2):=ùúå(|ùë•1‚àíùë•2|)ùõæ(ùëõ1‚ãÖùëõ2),
(7)
where ùúå and ùõæ are two functions defining a radial kernel on ‚Ñù3 and a zonal kernel on ùëÜ2, respectively. Then the scalar product between varifolds ùúáùëû0 and ùúáùëû1 can be shown to be:

‚ü®ùúáùëû0,ùúáùëû1‚ü©ùëâ‚àó=‚à¨ùëÄ√óùëÄùúå(|ùëû0(ùë¢0,ùë£0)‚àíùëû1(ùë¢1,ùë£1)|)ùõæ(ùëõùëû0(ùë¢0,ùë£0)‚ãÖùëõùëû1(ùë¢1,ùë£1))ùê¥ùëû0(ùë¢0,ùë£0)ùê¥ùëû1(ùë¢1,ùë£1)
(8)
Accordingly, the varifold distance between any two triangular surfaces ùëû0 and ùëû1 can be computed as

distùëâ(ùëû0,ùëû1)2=‚Äñùúáùëû0‚Äñ2ùëâ‚àó‚àí2‚ü®ùúáùëû0,ùúáùëû1‚ü©ùëâ‚àó+‚Äñùúáùëû1‚Äñ2ùëâ‚àó.
As shall be see in Sect. 4, the previous expression has a natural and simple discrete equivalent for triangular meshes.

Varifold distances are equivariant to the action of rigid motions: for any ùëÖ‚ààùëÜùëÇ(3) and ‚Ñé‚àà‚Ñù3,

distùëâ(ùëÖùëû0+‚Ñé,ùëÖùëû1+‚Ñé)=distùëâ(ùëû0,ùëû1).
More importantly, they are (Óà∞√óÓà∞)-invariant: for any ùúë0,ùúë1‚ààÓà∞,

distùëâ(ùëû0‚àòùúë0,ùëû1‚àòùúë1)=distùëâ(ùëû0,ùëû1).
There is an important difference between the Óà∞-invariance of the SRNF distance and the (Óà∞√óÓà∞)-invariance of varifold distances: a Óà∞-invariant distance vanishes at ùëû0,ùëû1‚ààÓàµ if and only if ùëû0=ùëû1, whereas a (Óà∞√óÓà∞)-invariant distance vanishes at ùëû0,ùëû1‚ààÓàµ if and only if ùëû0=ùëû1‚àòùúë for some ùúë‚ààÓà∞. Varifold distance are rather ideally suited for enforcing the latter condition, i.e., membership of the same Óà∞-orbit in Óàµ. This makes them highly useful in shape analysis, as described next. However, they are not tied to a Riemannian metric and thus are not associated to geodesics between shapes.

Another interesting feature of the varifold framework is the possibility to incorporate additional texture information in the metric, as detailed in (Charlier et al. 2017). Assume that the given immersed shape q carries a scalar texture map ùúÅ:ùëÄ‚Üí‚Ñù. Then the couple (ùëû,ùúÅ) can be represented as a functional varifold, i.e., as the image measure

ùúáùëû,ùúÅ:=(ùëû,ùëõùëû,ùúÅ)‚àóùê¥ùëû
on ‚Ñù3√óùëÜ2√ó‚Ñù. The previous kernel metrics can then be readily extended to this new situation using the following new kernel:

ùëò(ùë•1,ùëõ1,ùúÅ1,ùë•2,ùëõ2,ùúÅ2):=ùúå(|ùë•1‚àíùë•2|)ùõæ(ùëõ1‚ãÖùëõ2)ùúè(|ùúÅ1‚àíùúÅ2|)
Here, ùúè defines a positive-definite kernel on ‚Ñù, which adds to (7) a notion of proximity between texture values. The corresponding functional varifold distance is defined similarly to (8) and (6). It provides a distance between textured surfaces (ùëû0,ùúÅ0) and (ùëû1,ùúÅ1), which can be used to enforce the joint constraint of matching geometries ùëû0=ùëû1‚àòùúë and matching textures ùúÅ0=ùúÅ1‚àòùúë, up to reparametrization by some ùúë‚ààÓà∞.

Combining SRNF and Varifold Distances
From a numerical perspective, the main difficulty in the computation (5) of SRNF distances between shapes is the search for an optimal reparametrization ùúë‚ààÓà∞ in the diffeomorphism group of M. For curves, reparametrizations of ùëÄ=ùëÜ1 are monotone correspondences, and the optimal correspondence can be found using dynamic programming, following Frenkel and Basri (2003) and Sebastian et al. (2003). For surfaces, diffeomorphisms of ùëÄ=ùëÜ2 can be represented using spherical harmonics, and the optimal harmonic representation can be found via gradient descent (Srivastava et al. 2011; Kurtek et al. 2012; Jermyn et al. 2012). To implement the action of diffeomorphisms on shapes, these algorithms presuppose that the shapes are already parametrized consistently, i.e., defined on the same mesh. Otherwise, one has to solve the challenging parametrization problem first, which is of comparable difficulty to the search for an optimal reparametrization. An additional disadvantage is that these methods do not generalize easily to domains other than ùëÜ1 or ùëÜ2.

We circumvent these problems by exploiting the (Óà∞√óÓà∞)-invariance of varifold distances. Previously, Charon and Trouv√© (2013) and Kaltenmark et al. (2017) applied a similar strategy to diffeomorphic matching. Moreover, Bauer et al. (2019a) used varifold distances for the first time in the context of elastic matching, albeit only for curves. The starting point is the observation that problem (5) is equivalent to the constrained optimization problem

minùëûÃÉ 1‚ààÓàµdistùëÅ(ùëû0,ùëûÃÉ 1)subject todistùëâ(ùëûÃÉ 1,ùëû1)=0.
The optimization over ùúë‚ààÓà∞ in (5) has now been replaced by an optimization over ùëûÃÉ 1‚ààÓàµ subject to a varifold constraint, which ensures that ùëûÃÉ 1 belongs to the Óà∞-orbit of ùëû1, as required. Relaxation of the constraint using a (large) penalty parameter ùúÜ yields

minùëûÃÉ 1‚ààÓàµdistùëÅ(ùëû0,ùëûÃÉ 1)+ùúÜdistùëâ(ùëûÃÉ 1,ùëû1).
(9)
At this point one may wonder whether both of the two distances in (9), namely the varifold and SRNF distance, are really needed. This is indeed the case, as the formulation exploits‚Äîand requires‚Äîboth the (Óà∞√óÓà∞)-invariance of the varifold distance and the Óà∞-invariance of the SRNF distance. In other words, the SRNF distance alone cannot explore different parametrizations, while the varifold distance alone cannot distinguish between good and bad parametrizations and does not define geodesics between shapes.

Symmetric Elastic-Varifold Matching
In the category of smooth surfaces and diffeomorphisms, the asymmetric matching problem (9) is equivalent to the following symmetrized matching problem:

minùëûÃÉ 0,ùëûÃÉ 1‚ààÓàµùúÜdistùëâ(ùëû0,ùëûÃÉ 0)+distùëÅ(ùëûÃÉ 0,ùëûÃÉ 1)+ùúÜdistùëâ(ùëûÃÉ 1,ùëû1).
(10)
However, for non-smooth surfaces and diffeomorphisms the two problems are different, and the symmetric version offers significant advantages. The symmetric matching problem (10) is more general, as it is well-defined for arbitrary varifolds ùëû0 and ùëû1. As an aside, it should be kept in mind that the matching energy (10) depends on the choice of M. This choice can be interpreted as a topological prior and corresponds on a discrete level to a choice of triangular mesh for the surfaces ùëûÃÉ 0 and ùëûÃÉ 1. A further advantage is that the symmetric matching problem allows for reparametrizations of both surfaces ùëû0 and ùëû1. In the case of curves this flexibility is needed to represent optimal reparametrizations, which may compress a patch to a point or conversely decompress a point to a patch (Lahiri et al. 2015). Similar compressions and decompressions are to be expected in the case of surfaces and cannot be modeled in the asymmetric matching problem, where only one of the surfaces is reparametrized.

Comparison to Alternative Methods
Compared to alternative methods of surface comparison and matching, program (10) has the following advantages:

The reparametrization group Óà∞ does not need to be discretized, and its action on Óàµ does not need to be implemented. This allows one to work with simplicial meshes without having to solve the parametrization problem first, as for instance in Srivastava and Klassen (2016) and Jermyn et al. (2017). Moreover, it easily generalizes to domains M more general than ùëÜ1 or ùëÜ2, which is not without difficulties when dynamic programming or spherical harmonic are used, as in e.g. Bernal et al. (2016) or Jermyn et al. (2012).

The varifold matching term provides the flexibility for handling topological noise, matching shapes with missing parts, and incorporating texture information, similarly to the fshape framework (Charon and Trouv√© 2014; Charlier et al. 2017).

The computations are faster than for general Riemannian distances (see Sect. 3), where an additional time discretization is needed.

These advantages are also demonstrated by the numerical examples in Sect. 5.

Applications
Program (10) is the basis for several important tasks in shape analysis:

It implements the geodesic boundary value problem for an elastic shape metric, which is described in further detail in Sect. 3. At intermediate time points the geodesic can be obtained from the linear interpolation of the SRNFs by approximate inversion of the SRNF map ùëû‚Ü¶ùëÅùëû, as described in Sect. 4.8.

The geodesic boundary value problem is the basis for machine learning and statistics on manifolds. It provides geodesic distances, which are used for agglomerative clustering, support vector machines, Fr√©chet means, and higher-order moments; cf. Srivastava and Klassen (2016). Moreover, it implements the Riemannian logarithm, which is used in geodesic principal component analysis and statistics on manifolds; cf. Bhattacharya and Bhattacharya (2012) and Pennec et al. (2019). The Riemannian logarithm at the reparametrized surface ùëûÃÉ 0 is the initial velocity of the above-mentioned horizontal geodesic. Moreover, the Riemannian logarithm at the original surface ùëû0 can be obtained from the asymmetric version (9) of the program.

The program implements the matching problem, i.e., the optimizers ùëûÃÉ 0 and ùëûÃÉ 1 describe a point correspondence between the given shapes ùëû0 and ùëû1.

The program implements the parametrization problem, i.e., the optimizers ùëûÃÉ 0 and ùëûÃÉ 1 parametrize the given shapes ùëû0 and ùëû1 as piece-wise linear functions on a given mesh. As an aside, this parametrization is not determined uniquely by (10) and could therefore be selected freely using some additional criteria of angle, distance, or area preservation, which have been developed in the literature on mesh parametrization; see e.g. Floater and Hormann (2005) or Sheffer et al. (2007).

Elastic Interpretation
The surface matching approach presented in the previous section approximately solves the geodesic boundary value problem of a certain first-order elastic metric on the shape space of surfaces, as we explain next.

Elastic Shape Analysis
To emphasize this connection, we start with some background on elastic metrics, referring to the surveys by Bauer et al. (2014) or Jermyn et al. (2017) for further details and references. Elastic shape analysis operates in a Riemannian framework, where infinitesimal shape deformations are measured by a Riemannian metric, which is often related to an elastic (or plastic) deformation energy. Given a Riemannian metric G on Óàµ, one defines the Riemannian distance between two shapes ùëû0,ùëû1‚ààÓàµ as

distùê∫(ùëû0,ùëû1)2:=infùëû‚ààùê∂‚àû([0,1],Óàµ)ùëû(0)=ùëû0,ùëû(1)=ùëû1 ‚à´10ùê∫ùëû(‚àÇùë°ùëû,‚àÇùë°ùëû)ùëëùë°.
(11)
The optimizers in (11) are constant-speed geodesics in Óàµ. If G is Óà∞-invariant, as shall be assumed throughout, one obtains also a distance between shapes [ùëû0],[ùëû1]‚ààÓàø by setting

distùê∫([ùëû0],[ùëû1]):==infùúë0,ùúë1‚ààÓà∞distùê∫(ùëû0‚àòùúë0,ùëû1‚àòùúë1)infùúë‚ààÓà∞distùê∫(ùëû0,ùëû1‚àòùúë),
(12)
where the second equation follows from the Óà∞-invariance of the Riemannian metric G. This is the same quotient construction as for SRNF distances (5), and the optimization over reparametrizations can again be avoided using varifold distances similarly to (10). However, in contrast to SRNF distances and elastic deformation energies in physics (Rumpf and Wardetzky 2014; Rumpf and Wirth 2015a), the Riemannian distance (12) retains a dynamical interpretation, as its optimizers are constant-speed geodesics in Óàø.

For low-order Sobolev metrics G, the distances on Óàµ and Óàø do not separate points, as discovered by Michor and Mumford (2007). Fortunately, this degeneracy disappears for metrics of order one and higher (Bauer et al. 2011). For simplicity, we will speak of Riemannian metrics and their associated distances even when they are only pseudo-metrics and pseudo-distances.

From an applied perspective, efficient numerical implementations of the optimization problems (11) and (12) are crucial, as they are the algorithmic basis for the computation of point correspondences, Fr√©chet means, geodesic principal components, parallel transport, and so on; see e.g. the survey of Bauer et al. (2014) or the book of Srivastava and Klassen (2016). For general elastic metrics, problem (11) can be implemented using path straightening methods. This involves a time discretization and is computationally costly. However, for certain elastic metrics, which are related to SRNFs, this time discretization can be avoided, as described next.

Square Root Normal Metrics
Recall that the SRNF is a map from ùëû‚ààÓàµ to the Hilbert space of square-integrable ‚Ñù3-valued half-densities. The SRNF metric on Óàµ is the pull-back of the Hilbert scalar product along this map. Thus, it is defined for any tangent vector ‚Ñé‚ààùëáùëûÓàµ as

ùê∫ùëû(‚Ñé,‚Ñé):=‚à´ùëÄ|ùê∑(ùëû,‚Ñé)ùëÅùëû|2,
(13)
where ùê∑(ùëû,‚Ñé)ùëÅùëû denotes the directional derivative of ùëÅùëû at q in the direction h. Note that the right-hand side in (13) is well-defined since the square of a half-density is a density.

The SRNF metric belongs to the class of first order Sobolev metrics, which have been studied in great detail by Michor and Mumford (2007), Mennucci et al. (2008), Bauer et al. (2011), and many others. An explicit formula for it is established in Appendix B:

ùê∫ùëû(‚Ñé,‚Ñé)=‚à´ùëÄ(‚à£‚à£(‚àá‚Ñé)‚ä•‚à£‚à£2+14Tr((‚àá‚Ñé)‚ä§)2)ùê¥ùëû.
(14)
Here ‚àá is the coordinate-wise derivative of ‚Ñù3-valued functions, ‚ä• and ‚ä§ are the normal and tangential projections satisfying ‚ä•+ùëáùëû‚àò‚ä§=Id‚Ñù3, the norm |‚ãÖ| is computed with respect to the pull-back cometric, and Tr denotes a trace; see Appendix A for further notation.

While computing geodesic distances of general elastic metrics can be quite cumbersome, this is much simpler for SRNF metrics thanks to the approximation

distùê∫(ùëû0,ùëû1)‚âàdistùëÅ(ùëû0,ùëû1),
(15)
where distùê∫ is the Riemannian distance (11) of the SRNF metric (13), and distùëÅ is the SRNF distance (3). The approximation is exact whenever the straight line between ùëÅùëû0 and ùëÅùëû1 is contained in the range of the SRNF map ùëû‚Ü¶ùëÅùëû. The reason is that the SRNF map is a Riemannian isometry, by construction, and that geodesics in the Hilbert space of SRNFs are straight lines. In general, the approximation is exact up to first order for ùëû0 close to ùëû1; see Appendix C for a proof. Some generalizations to higher-order metrics are discussed next.

Generalized Square Root Normal Fields
The theoretical and algorithmic framework of the previous sections can be extended using more general feature maps than SRNFs. For example, Jermyn et al. (2012) introduced the Gauss map ùëû‚Ü¶(ùëîùëû,ùëõùëû) as a feature map, where ùëîùëû is the pull-back metric of q. This feature map is injective up to isometries of ‚Ñù3 by a classical result of Abe and Erbacher (1975), and the geodesic distance on the image space has recently been computed by Su et al. (2020a). Alternatively, Bauer et al. (2011) used the map ùëû‚Ü¶ùëëùëû as a feature map, where dq is the derivative of q, seen as an ‚Ñù3-valued one-form on M. For simplicity we restrict ourselves to feature maps which transform under reparametrizations similarly to half-densities. As explained below, this automatically guarantees Óà∞-invariance of the ùêø2 distance between features, which is particularly easy to compute.

The general setup is as follows. One considers Óà∞-equivariant maps Œ¶ from Óàµ to the Hilbert space of square-integrable sections of ùê∏‚äóVol1/2, where E is a tensor bundle over M with Óà∞-invariant fiber metric ‚ü®‚ãÖ,‚ãÖ‚ü©ùê∏ and corresponding fiber norm |‚ãÖ|ùê∏, and where Vol1/2 is the half-density bundle over M. The corresponding distance, which generalizes the SRNF distance (3), is defined as

distŒ¶(ùëû0,ùëû1)2:=‚à´ùëÄ|Œ¶ùëû0‚àíŒ¶ùëû1|2ùê∏.
(16)
Note that the integral on the right-hand side is well-defined because the square of a half-density is a density. Importantly, the distance can be computed easily from fiber-wise distances of the bundle E thanks the ùêø2 structure (cf. Ebin 1970). In particular, if ‚ü®‚ãÖ,‚ãÖ‚ü©ùê∏ is flat on each fiber of E, then the computation reduces to the evaluation of an integral. Moreover, thanks to the assumption that Œ¶ transforms as a half-density, the distance (16) is Óà∞-invariant, i.e., for all ùúë‚ààÓà∞,

distŒ¶(ùëû0‚àòùúë,ùëû1‚àòùúë)=distŒ¶(ùëû0,ùëû1).
The corresponding Óà∞-invariant elastic metric, which generalizes the SRNF metric (13), is given by

ùê∫ùëû(‚Ñé,‚Ñé):=‚à´ùëÄ|ùê∑(ùëû,‚Ñé)Œ¶ùëû|2ùê∏,
(17)
where ‚Ñé‚ààùëáùëûÓàµ is a tangent vector to q. An example is provided next.

Example: Square Root Curvature Fields
We introduce a new second-order feature map, which we call square root curvature field (SRCF). Combined with the SRNF feature map, it yields a meaningful second-order elastic metric, whose geodesic distance can be computed efficiently similarly to (15). The SRCF is defined as

Œ¶ùëû:=ùêªùëûùê¥1/2ùëû,
(18)
where ùêªùëû is the vector-valued mean curvature of q. This feature map Œ¶ simultaneously encodes information about the normal vector, the area form, and the curvature of the shape. The SRCF distance (16) coincides with the Willmore (1993) energy of ùëû1 if ùëû0 is a minimal surface. More generally, this distance quantifies differences in the mean curvatures of ùëû0 and ùëû1, weighted symmetrically using the respective area forms of ùëû0 and ùëû1. The associated SRCF metric (17) is a second-order elastic metric, whose highest-order term is the normal component of the Laplacian Œîùëû on the surface q:

ùê∫ùëû(‚Ñé,‚Ñé)=‚à´ùëÄ|(Œîùëû‚Ñé)‚ä•+ùê∂(‚àá‚Ñé)|2ùê¥ùëû,
where ùê∂(‚àá‚Ñé) denotes a first-order term, which is a contraction of ‚àá‚Ñé with the metric, cometric, and second fundamental form; see Appendix D. The same form of metric is obtained using the scalar instead of the vector-valued mean curvature, but the feature map contains less information in this case. Despite the complicated form of the SRCF metric, its geodesic distance is easy to compute, thanks to the Hilbert structure on the range of the feature map. We also experimented with alternative forms of the SRCF, where the vector-valued mean curvature is replaced by the scalar mean curvature; see Sect. 4.

Implementation
This section describes the implementation of the geodesic boundary value problem, i.e., the surface matching algorithm for triangular meshes. The term geodesic shall be used quite liberally, even when approximations, relaxations, and discretizations of the Riemannian energy functional are involved.

Open Source Library
All algorithms described in this section are publicly availableFootnote2 as a Python package SRNFmatch. These include the routines for symmetric and asymmetric surface matching based on SRNF and SRCF energies, inverting the SRNF and SRCF maps, computing geodesic interpolations, and generating some of the figures in this paper. Our implementation relies on the following Python libraries: Numpy, Scipy, Pytorch, PyKeops, and Vtk. We refer to the online documentation for further details on the code.

Mesh Discretization
To discretize the space of surfaces, we use a triangular surface as the domain M of the function space Óàµ and restrict this function space to piece-wise linear functions. Alternative disretizations for more general mesh structures could be used, as well. Any such mesh structure defines a natural reference density on M, which assigns weight 1 to every face of the mesh. This reference density and its corresponding half-density are used throughout to identify densities and half-densities with functions. Alternative reference densities would lead to the same results but involve additional quadrature weights.

In the computation of SRNF or SRCF distances, the triangulation of M can be chosen freely but has to coincide for the initial and target surfaces. In contrast, in the geodesic boundary value problem, the initial and final surfaces may have different mesh structures and even different topologies. This flexibility is granted by the varifold terms.

SRNF Distances Between Triangular Meshes
The SRNF of a triangular mesh is the piece-wise constant function (1), which associates to any face of the mesh the square root of its area multiplied by the unit-normal vector. Thus, the SRNF of a surface ùëû‚ààÓàµ can be written as a function ùëÅùëû,ùëì of the faces f of the mesh:

ùëÅùëû,ùëì:=ùëõùëû,ùëìùê¥1/2ùëû,ùëì,
where ùëõùëû,ùëì and ùê¥ùëû,ùëì are the unit normal vector and area, respectively, of face f on surface q. This discrete definition of the SRNF is consistent with the continuous one: it preserves convergence almost everywhere of the surface q and its tangent map Tq, and it is uniquely determined by this property. Given two triangular meshes ùëû0 and ùëû1 with the same mesh structure, the corresponding SRNF distance is thus a sum over all faces:

distùëÅ(ùëû0,ùëû1)2=‚àëùëì‚à£‚à£ùëÅùëû0,ùëì‚àíùëÅùëû1,ùëì‚à£‚à£2.
(19)
SRCF Distances Between Triangular Meshes
Higher-order feature maps such as the SRCF do not extend uniquely by a limiting procedure from smooth surfaces to triangular meshes. Therefore, we resort to principles of discrete differential geometry for their definition (see Bobenko et al. 2008). Recall that the SRCF of a smooth surface q is defined as Œ¶ùëû=ùêªùëûùê¥1/2ùëû, where ùêªùëû is the vector mean curvature. Following Sullivan (2008), we define the discrete SRCV on each vertex v as

Œ¶ùëû,ùë£:=12‚àëùëí‚àãùë£ùëí√ó(ùëõ1‚àíùëõ2)13‚àëùëì‚àãùë£ùê¥ùëû,ùëì‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚àö,
where e and f run through all edges and faces adjacent to the vertex v, and ùëõ1,ùëõ2 are the unit-normal vectors of the two faces adjacent to the edge e. Equivalently,

Œ¶ùëû,ùë£=12‚àëùëì‚àãùë£ùëí√óùëõ13‚àëùëì‚àãùë£ùê¥ùëû,ùëì‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ‚àö,
(20)
where e is the edge opposite of v in f, and n is is the unit-normal vector of f. Both formulas can be expressed equivalently by the well-known co-tangent formula (Sullivan 2008). The discrete SRCF energy is defined by summing over all vertices:

distŒ¶(ùëû0,ùëû1)2:=‚àëùë£(Œ¶ùëû0,ùë£‚àíŒ¶ùëû1,ùë£)2.
Varifold Distances Between Triangular Meshes
Varifold distances have a natural discretization for triangular meshes. We briefly recap the main elements using the notation of Sect. 2.3, referring to Kaltenmark et al. (2017) or Charon et al. (2020) for further details. For any triangular surfaces ùëû0 and ùëû1, the varifold inner product (8) can be expressed as a sum over pairs of faces ùëì0 and ùëì1:

‚ü®ùúáùëû0,ùúáùëû1‚ü©ùëâ‚àó=‚àëùëì0,ùëì1‚à¨ùëì0√óùëì1ùúå(|ùë•0‚àíùë•1|)ùõæ(ùëõùëû0(ùë•0)‚ãÖùëõùëû1(ùë•1))ùê¥ùëû0(ùë•0)ùê¥ùëû1(ùë•1)
Importantly, meshes ùëû0 and ùëû1 may have different topologies. Note that the normal vector fields are constant on the domain of the double integral, i.e., on each pair of faces. Moreover, assuming that the faces are small compared to the variation scale of the kernel ùúå, the function ùúå(|ùë•0‚àíùë•1|) is well-approximated on the domain of the double integral by the constant ùúå(|ùëêùëû0,ùëì0‚àíùëêùëû1,ùëì1|), where ùëêùëû,ùëì is the barycenter of face f within surface q:

ùëêùëû,ùëì:=(‚àëùë£‚ààùëìùë£)/(‚àëùë£‚ààùëì1)
The approximation we use then writes:

‚ü®ùúáùëû0,ùúáùëû1‚ü©ùëâ‚àó‚âà‚àëùëì0,ùëì1ùúå(|ùëêùëû0,ùëì0‚àíùëêùëû1,ùëì1|)ùõæ(ùëõùëû0,ùëì0‚ãÖùëõùëû1,ùëì1)ùê¥ùëû0,ùëì0ùê¥ùëû1,ùëì1
This discretization easily extends to functional varifolds, as described in Sect. 2.3: the varifold inner product of textured triangular surfaces (ùëû0,ùúÅùëû0) and (ùëû1,ùúÅùëû1) is computed as

‚ü®ùúáùëû0,ùúÅùëû0,ùúáùëû1,ùúÅùëû1‚ü©ùëâ‚àó‚âà‚àëùëì0,ùëì1ùúå(|ùëêùëû0,ùëì0‚àíùëêùëû1,ùëì1|)ùõæ(ùëõùëû0,ùëì0‚ãÖùëõùëû1,ùëì1)ùúè(|ùúÅùëû0,ùëì0‚àíùúÅùëû1,ùëì1|)ùê¥ùëû0,ùëì0ùê¥ùëû1,ùëì1,
where ùúÅùëû,ùëì denotes the texture value attached to face f of surface q. If the texture is given on vertices rather than faces, one first distributes it to faces by setting

ùúÅùëû,ùëì:=(‚àëùë£‚ààùëìùúÅùëû,ùë£)/(‚àëùë£‚ààùëì1).
The accuracy of the above approximation can be precisely controlled in terms of the maximum diameter of faces and the modulus of continuity of the kernels ùúå and ùõæ, as shown by Kaltenmark et al. (2017). The approximation can be also interpreted as replacing the continuous varifold associated to the surface with a finite sum of Dirac masses. One can see that the numerical complexity of the varifold distance evaluation is quadratic in the number of faces.

Energy Computation and Optimization
For the minimization of the matching energies (9) and (10) over the vertex coordinates we use a quasi-Newton method, namely SciPy‚Äôs implementation of the L-BFGS algorithm introduced by Liu and Nocedal (1989). The most costly operation at each iteration of the optimization routine is the computation of the varifold distance and its gradient. Indeed, the computational complexity of varifold distances is quadratic in the number of faces, whereas the complexity of SRNF distances is only linear. Thus, efficient varifold computations are critical for the overall speed of our matching algorithm. Thanks to their highly parallelizable structure, they are well-suited for graphics processor units (GPUs). Our implementation leverages the Python library PyKeops, which has recently been developed by Charlier et al. (2020). This library is tailored specifically for the fast evaluation of kernel reductions using CUDA. Moreover, this library allows for automatic differentiation of all expressions. The SRNF distance is directly implemented in PyTorch and therefore also allows for automatic differentiation.

Multi-Resolution
The boundary value problem naturally lends itself to a multi-resolution implementation, where point correspondences are initially computed on a coarse grid and then iteratively refined. This makes it easier to find an initial guess where the optimizer for the matching energy (9) or (10) does not get trapped in a local minimum. Similar multi-resolution approaches have been developed by Kilian et al. (2007) for given point correspondences and by Marin et al. (2019) in the context of functional maps. For simplicity, we only describe the implementation of the symmetric matching problem (10). This is detailed in Algorithm 1 and illustrated in Fig. 2. The input to the algorithm are two triangular surfaces ùëû0 and ùëû1, which may have different mesh connectivities and topologies. At initialization, the variables ùëûÃÉ 0 and ùëûÃÉ 1 are set to some low-resolution surfaces with the same mesh structure. For instance, one may use a coarse triangulation of a sphere or some other problem-specific shape prior. Alternatively, one may also use a down-sampled version of ùëû0 or ùëû1, albeit at the cost of destroying the symmetry of the matching algorithm. In any case, the initialization has to be done such that ùëûÃÉ 0 and ùëûÃÉ 1 share the same mesh structure, as this is required in the computation of SRNF distances. Then, iteratively, the surfaces ùëûÃÉ 0 and ùëûÃÉ 1 are deformed in order to minimize the matching functional (10) and up-sampled to higher resolutions. The energy minimization is implemented as described in the previous section. Up-sampling is implemented using a subdivision scheme. The easiest choice is a non-adaptive scheme, which divides each triangle into four sub-triangles, but adaptive schemes would be possible, as well. Functional data, if present, have to be mapped to the new mesh based on the initial fully sampled surface by e.g. closest point(s) interpolation.

Fig. 2
figure 2
Multi-resolution surface matching using Algorithm 1. The data ùëû0 and ùëû1 are high-resolution triangular meshes (last column). A down-sampled version of ùëû0 is used to initialize the surfaces ùëûÃÉ 0 and ùëûÃÉ 1 (first column). These surfaces are iteratively deformed to minimize the energy functional (10) and subdivided to achieve higher-resolution (middle columns). The result is a high-resolution point correspondence which solves the geodesic boundary value problem on shape space. The triangulated surfaces of the skulls are scans from the American Museum of Natural History in New York and have been obtained from Morphosource, a biological specimen database that has approximately 27,000 published 3D models of biological specimens

Full size image
figure a
Inversion of the SRNF Map
Recall that Algorithm 1 computes the initial and final values of a geodesic between the given shapes. We next describe how to obtain intermediate values of this geodesic. These are of interest in many applications and describe the optimal elastic deformation between the shapes. Our algorithm is an extension and modification of Laga et al. (2017). Pseudo-code for the algorithm is shown in Algorithm 2. The starting point is the observation that geodesics in the feature space of the SRNF map are straight lines. Thus, given the output ùëûÃÉ 0 and ùëûÃÉ 1 of Algorithm 1, this geodesic in feature space can be computed by linearly interpolating the SRNFs of ùëûÃÉ 0 and ùëûÃÉ 1. To find surfaces corresponding to these interpolated SRNFs, one has to invert the SRNF map. Of course, inversion in the strict sense is impossible because the SRNF map is neither injective nor surjective (Klassen and Michor 2020). In particular, the linear interpolation of two SRNFs may not be the SRNF of any surface, and if such a surface exists it may be non-unique. We circumvent this issue by recasting it as an optimization problem: given a function ùëÅÃÉ :ùëÄ‚Üí‚Ñù3, which is constant on each face f of the triangular surface M, find a triangular surface mesh q which minimizes the energy functional

‚à´ùëÄ|ùëÅùëû‚àíùëÅÃÉ |2=‚àëùëì|ùëÅùëû,ùëì‚àíùëÅÃÉ ùëì|2.
(21)
Similarly as in the matching problem, we minimize this energy functional using an L-BFGS method, where the gradient is computed by automatic differentiation in PyTorch. This improves upon the optimization routine of Laga et al. (2017), where no information about the Hessian is used. Despite the analytical difficulties pointed out in Klassen and Michor (2020), this optimization problem turns out to be rather well-behaved in our experiments. For instance, the optimizer is able to recover a surface from its SRNF even when the initial guess is quite far off, as shown in Fig. 3. Moreover, one actually disposes of quite accurate initial guesses in the context of matching problems, where a linear path in SRNF-space has to be inverted. An example of a resulting optimal elastic deformation is shown in Fig. 4. A similar strategy can be used for the approximate inversion of the SRCF map, where one augments the energy functional (21) by the ùêø2-difference between the SRCFs.

figure b
Numerical Results
In this final section we demonstrate various features of our algorithm through numerical simulations.

Fig. 3
figure 3
Approximate inversion of the SRNF-map. Given the SRNF (left) of an unknown surface (right), optimization of the energy functional (21) determines a surface (middle) whose SRNF closely matches the given one. The algorithm works reliably for high-genus and high-resolution surfaces (here with approximatively 25, 000 faces)

Full size image
Fig. 4
figure 4
Computation of geodesics using Algorithm 2. The geodesic is obtained by matching the given surfaces ùëû0 and ùëû1 using Algorithm 1, linearly interpolating the SRNFs of the matched surfaces ùëûÃÉ 0 and ùëûÃÉ 1, and inverting the SRNF map. The color-coding shows that all surfaces along the geodesic are parametrized consistently

Full size image
Choice of Parameters
There are several parameters to be set. Specifically, these are the kernels in the varifold fidelity metric and the coefficient ùúÜ which weighs the contribution of the SRNF or SRCF term relative to the varifold terms in the matching energy. In all our simulations, we used the Gaussian kernel

ùúå(|ùë•1‚àíùë•2|):=exp(‚àí|ùë•2‚àíùë•1|2/ùúé2)
of scale ùúé on ‚Ñù3 and the Binet kernel

ùõæ(ùëõ1‚ãÖùëõ2):=(ùëõ1‚ãÖùëõ2)2
on ùëÜ2. Our implementation allows for many other choices of kernels, and we refer to Kaltenmark et al. (2017) for a thorough discussion of the effects that this can have in shape matching problems. The kernel scale ùúé and weight ùúÜ have to be selected in accordance with the data. This can be done in an adaptive fashion in combination with the multi-resolution approach described earlier. Namely, we typically initialize the kernel scale ùúé to a value around a tenth of the shape‚Äôs diameter and decrease it throughout the successive runs of the multi-resolution algorithm. On the opposite, the relaxation parameter ùúÜ is increased after each run in order to enforce a closer and closer matching to the target shape. We also point to the demo scripts provided in the github package for examples of parameter setting.

Choice of Elastic Energy
We used either the SRNF distance or a combination of the SRNF and SRCF distances as deformation energies in our numerical experiments. SRNF distances reliably led to good results and stable optimization routines and were used for most of our numerical simulations. SRCF distances alone had the tendency to create numerical instabilities. Combined with SRNF distances, according to our limited numerical evidence, these instabilities disappeared.

As expected, the choice of deformation energy influences the resulting point correspondences and distances, and thus impacts the statistical analysis on the space of shapes. This is demonstrated in a toy example in Fig. 6. In future works it will be interesting to choose the deformation energy in a data-driven way, as suggested by Needham and Kurtek (2020) for elastic metrics on spaces of curves and by Niethammer et al. (2019) for diffeomorphic metrics.

Run Time
As an indication of the algorithm‚Äôs practical performance, we show in Table 1 the average run time per iteration of the L-BFGS optimization scheme for the (non-symmetric) surface matching algorithm. Typically, in those experiments, the algorithm required around 300 iterations to reach a relative error of less than 0.1%. All those computation times were obtained on an Intel i7-9700K processor with 3.6 GHz clock rate and a 2018 Nvidia GeForce RTX 2080 Ti with 11GB memory. We ran the matching between two surfaces with a range of different mesh sizes, both for the SRNF and the combined SRNF-SRCF matching procedures.

To further put those results into perspective, we also performed similar tests for another well-established surface registration framework based on the Large Deformation Diffeomorphic Metric Mapping (LDDMM) model of Beg et al. (2005). This approach shares some similarity with the one presented in this paper in that both solve inexact matching problems with varifold distances as relaxation terms, the essential difference being that the LDDMM algorithm estimates a dense and smooth deformation of the whole ambient space to transform the source shape. This typically induces a higher numerical complexity compared to the SRNF framework that directly optimizes over the deformed source shape, as evidenced by run times per iteration approximately 10 times larger. For the computation of the diffeomorphic flow, we used a Ralston integrator with 10 time steps. We emphasize that, in order to make those comparisons meaningful, both the SRNF and LDDMM models were implemented in Python based on the Scipy implementation of the L-BFGS algorithm and rely on CUDA subroutines as well as automatic differentiation through the use of the same PyTorch and PyKeops libraries.

Table 1 Computation times for a single iteration of the L-BFGS algorithm, which is here applied to minimize the non-symmetric matching energy (9), for different resolutions of the mesh. For comparison, we also provide the similar time per iteration for an alternative surface registration approach based on a diffeomorphic model (LDDMM)
Full size table
High-Genus Surfaces
All parts of the algorithm, from varifold distances to SRNF distances and SRNF inversion, are implemented for triangular meshes. Therefore, there are no topological restrictions on the surfaces to be matched. For instance, it is possible to match high-genus surfaces such as skulls or cochleas, as demonstrated in Figs. 4 and 5. In these examples, the surfaces ùëû0 and ùëû1 to be matched are given by triangular meshes with different combinatorics, and no point correspondences are known a priori. The matching algorithm is initialized with a down-sampled version of ùëû0, as described in Sect. 4.7. Accordingly, the resulting interpolated surfaces have the same genus as ùëû0. The deformation energy, which was used in these examples, is the SRNF energy. The multi-resolution matching algorithm converged in less than 20 seconds for both examples. The resulting point correspondences are color-coded in the figures.

Topological Inconsistencies
Fig. 5
figure 5
Matching high-genus surfaces. Two cochleas (left, right) are given as triangular meshes without any point correspondence between them. Algorithms 1 and 2 determine a consistent parametrization (color-coded) for the two surfaces and the geodesic in-between (middle)

Full size image
Our algorithm can handle surfaces with different topologies. This would not be possible in a pure elastic-matching approach, where the surfaces are required to be homotopic, see e.g. Jermyn et al. (2017). This is possible in in our approach thanks to the combination with varifold distances. The matching energy (10), which is a sum of elastic and varifold terms, quantifies both geometric and topological differences and can therefore be used as a measure of discrepancy between shapes of arbitrary topology. For example, as shown in Fig. 6, it is possible to compare cups with handles to glasses without handles. In this comparison, the presence or absence of handles as well as differences in the shape of the glasses or cups are all taken into account, as revealed by clustering based on the matrix of pairwise elastic-varifold discrepancies.

The initialization of the matching algorithm involves an important choice to be made, namely, fixing a topology and mesh structure for the surfaces ùëûÃÉ 0 and ùëûÃÉ 1 (see Algorithm 1). In our experiments we initialized these surfaces once with the topology of the source and once with the topology of the target and used the average of the two resulting distances as our final discrepancy measure.

Topological Noise
Handling topological noise is a further application of the algorithm‚Äôs capability of dealing with different topologies. An example is presented in Fig. 7, which shows enlarged pictures of two of the cups in Fig. 6. One of these cups has several topological artifacts: a solid piece at the top of the cup has broken off, and several triangles are missing in the mesh describing the cup‚Äôs handle. Nevertheless, the cup can be matched to a similar cup without these artifacts. Of course, for topological reasons, the match cannot be exact, but it nevertheless provides a very good approximation without the missing triangles.

Topological artifacts are often created by 3D scanning technology, as e.g. in the case of the facial scans in Fig. 8. In this case, both facial surfaces to be matched suffer from topological noise. The first surface has more missing areas than the second one and is used to initialize the matching algorithm. The resulting geodesic interpolation gradually deforms the first face into the second one while filling out the missing areas.

Fig. 6
figure 6
Matching surfaces with different topologies. The cups are positioned according to multi-dimensional scaling based on the matrix of pairwise elastic-varifold discrepancies, and are colored according to an automatic distance-based clustering algorithm. Positions and colors consistently indicate that the elastic-varifold distance is able to quantify and detect both topological and geometric variations. The distances were computed using only SRNFs (top) or SRNFs together with SRCFs (bottom)

Full size image
Fig. 7
figure 7
Matching surfaces with topological noise. One of the two cups to be matched (top) has several artifacts, including a broken-off piece at the top and some holes in the triangulation at the handle. The matching algorithm is initialized by a surface without these artifacts and produces a decent fit (bottom)

Full size image
Functional Shapes
Our algorithm provides a convenient way of handling texture information, as explained in Sect. 2.3. Namely, the varifold distance can be augmented by an additional term which measures texture differences. Texture information can guide the optimizer in the matching problem and improve the resulting point correspondences. We demonstrate this in two examples, first on synthetic and then on real-world data.

As a synthetic example, we consider in Fig. 9 texture information which asks for compression of a large portion of a sphere to a small portion of a deformed sphere. The texture signals range from 0 to 1, and the texture kernel ùúè is Gaussian with a scale of 0.2. Without any texture information, there is no compression in the geodesic between the two shapes. If, however, texture information is included in the matching energy, then there is compression along the geodesic, in accordance with the texture information. Visually, the difference is most prominent in the terminal values of the two geodesics. Quantitatively, the difference can also be seen from the resulting SRNF distance, which is higher when texture information is included (1.74 versus 0.76). The reason is that the optimizer has to strike a balance between matching the textures and minimizing the deformation energy.

The same qualitative behavior can be seen in the real-world example in Fig. 10. Here the data consist of tibia bone extremities of two subjects, and the texture represents the width of the tibia-femoral joint, estimated using the approach of Cao et al. (2015). The texture signals range from 0 to 128, and the texture kernel is Gaussian with three successive scales of 100, 50, and 25. Differences in texture are most prominent in the upper middle part of the bone, where the red region is less pronounced in the left than in the right sample. These regions are matched incorrectly when no texture information is used (top), but are matched more accurately otherwise (bottom).

Population Statistics
Finally we show how our surface matching algorithm can be used to perform simple statistical analyses of shape populations, following the framework of geometric statistics; see for instance the recent review in Pennec et al. (2019). A first example is multi-dimensional scaling or k-means clustering based on the pairwise distance matrix; see Fig. 6. As a second example, we consider the estimation of the Karcher mean of a dataset of surface meshes. Figure 11 shows the Karcher mean of 18 amygdala shapes from the BIOCARD database (Miller et al. 2015) which were segmented from MRI images. To approximate the Karcher mean we followed a method adapted from Arnaudon and Nielsen (2013) and Cury et al. (2013), which consists in an iterative geodesic centro√Ød procedure. The details of the algorithm are described in Algorithm 3.

figure c
Discussion and Conclusion
The above examples demonstrate that our implementation is fast and versatile, and that it produces quite natural distances and interpolations between surfaces, including surfaces which have different topologies or carry texture information. These advantages are the result of our novel combination of elastic metrics and varifold distances. We also introduced the possibility of extending this idea to other surface feature maps, in particular square root curvature fields, as a way to emulate higher-order Sobolev metrics on surfaces. However, a precise study of the properties and effects of square root curvature fields in surface matching is left for future work.

Fig. 8
figure 8
Matching surfaces with topological noise. The facial scanning technology produced meshes (left, right) of varying degrees of incompleteness. Nevertheless, these meshes are matched correctly, as shown by the geodesic interpolation between them (middle)

Full size image
Fig. 9
figure 9
Influence of texture on optimal point correspondences. Matching the textures requires compression of a large portion of a sphere ùëû0 (left) to a small portion of a deformed sphere ùëû1 (right). This compression occurs in the geodesic between the textured shapes (bottom) but not between the untextured shapes (top). It increases the SRNF distance between the matched surfaces ùëûÃÉ 0 and ùëûÃÉ 1 from 0.76 to 1.74, but this increase is compensated by a better fit of textures

Full size image
Fig. 10
figure 10
Influence of texture on optimal point correspondences. Two tibia bones (left, right) carry texture information representing the width of the tibia-femoral joint. Differences in width are most pronounced in the upper part of the bone. This area is matched better by the geodesic interpolation of textured shapes (bottom) than of untextured shapes (top), see particular the area highlighted by the red circles

Full size image
Fig. 11
figure 11
The Karcher mean (right) of a dataset of amygdala shapes (left), computed using Algorithm 3 with a sphere (center) as initialization

Full size image
Besides these advantages, we want to mention some important caveats of our SRNF-based approach to surface matching. On the one hand, as the SRNF metric is only of first order and incomplete, minimizing the SRNF energy (5) over reparametrizations can lead to shrinkage of some parts of a surface. Accordingly, ‚Äúoptimal reparametrizations‚Äù may in fact be singular. On the other hand, varifold distances are by construction insensitive to structures of vanishing or small area, such as spikes or one-dimensional fibers. Thus, the combination of these two distances in our proposed formulation makes the optimizer in our matching procedure prone to finding surfaces with spiking singularities, despite the SRNF distance still being computed accurately. These degeneracies are alleviated considerably by the multi-resolution minimization scheme which we introduced. Nevertheless, they can still be routinely observed in some simulations, most notably around irregular boundaries of objects.

An important question for future work is whether this problem can be solved by suitable regularization, either using higher-order elastic metrics (e.g. based on SRCFs) or higher-order fidelity metrics (e.g. normal cycles), which may not have the same vanishing behavior as varifolds. More generally, higher-order feature maps might also be of theoretical interest in order to overcome the incompleteness of low-order metrics.