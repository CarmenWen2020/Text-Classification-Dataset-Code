Quadratic discriminant analysis (QDA) is a standard tool for classification due to its simplicity and flexibility. Because the number of its parameters scales quadratically with the
number of the variables, QDA is not practical, however, when the dimensionality is relatively large. To address this, we propose a novel procedure named DA-QDA for QDA in
analyzing high-dimensional data. Formulated in a simple and coherent framework, DAQDA aims to directly estimate the key quantities in the Bayes discriminant function including quadratic interactions and a linear index of the variables for classification. Under
appropriate sparsity assumptions, we establish consistency results for estimating the interactions and the linear index, and further demonstrate that the misclassification rate of our
procedure converges to the optimal Bayes risk, even when the dimensionality is exponentially high with respect to the sample size. An efficient algorithm based on the alternating
direction method of multipliers (ADMM) is developed for finding interactions, which is
much faster than its competitor in the literature. The promising performance of DA-QDA
is illustrated via extensive simulation studies and the analysis of four real datasets.
Keywords: Bayes Risk, Consistency, High Dimensional Data, Linear Discriminant Analysis, Quadratic Discriminant Analysis, Sparsity
1. Introduction
Classification is a central topic in statistical learning and data analysis. Due to its simplicity
for producing quadratic decision boundaries, quadratic discriminant analysis (QDA) has
become an important technique for classification, adding an extra layer of flexibility to
the linear discriminant analysis (LDA); see Hastie et al. (2009). Despite its usefulness,
the number of the parameters needed by QDA scales squarely with that of the variables,
making it quickly inapplicable for problems with large or even moderate dimensionality.
This problem is extremely eminent in the era of big data, as one often encounters datasets
with the dimensionality larger, often times substantially larger, than the sample size. This
paper aims to develop a novel classification approach named DA-QDA, short for Direct
Approach for QDA to make QDA useful for analyzing ultra-high dimensional data.
For ease of presentation, we focus on binary problems where observations are from
two classes. Suppose that the observations from class 1 follow X ∼ N(µ1, Σ1) and those
from class 2 satisfy Y ∼ N(µ2, Σ2), where µk ∈ R
p
, k = 1, 2 are the mean vectors and
Σk ∈ R
p×p
, k = 1, 2 are the two covariance matrices. Compared with LDA, it is assumed
that Σ1 6= Σ2 in QDA, which gives rise to a class boundary that is quadratic in terms
of the variables. Bayes’ rule classifies a new observation z to class 1 if π1f(z|µ1, Σ1) >
π2f(z|µ2, Σ2), where f(z|µ, Σ) is the probability density function of a multivariate normal
distribution with mean µ and variance Σ, and π1 and π2 are the two prior probabilities.
Following simple algebra, the Bayes discriminant function for a new observation z is seen
as
D(z) = (z − µ)
T Ω(z − µ) + δ
T
(z − µ) + η,
where µ = (µ1 + µ2)/2 is the mean of the two centroids, Ω = Σ−1
2 − Σ
−1
1
is the difference
of the two precision matrices, δ = (Σ−1
1 + Σ−1
2
)(µ1 − µ2), and η = 2 log(π1/π2) + 1
4
(µ1 −
µ2)
T Ω(µ1 − µ2) + log |Σ2| − log |Σ1|; see for example Anderson (2003). Note that the
discriminant function becomes that of LDA when Σ1 = Σ2 = Σ. Completely analogous to a
two-way interaction model in linear regression, δ in D(z) can be seen as a linear index of the
variables whose nonzero entries play the role of main effects, whereas the nonzero entries
in Ω can be understood as interactions of second-order between the variables. Although
there are other ways to represent the discriminant function, D(z) is used as it is a quadratic
function of z − µ, making the discriminant function location-invariant with respect to the
coordinates. For easy reference, we shall call subsequently the parameters Ω, δ, µ, and η in
the Bayes discriminant function collectively as Bayes components.
1.1 Our contributions
We highlight the main contributions of this paper as follows.
1. DA-QDA is the first direct approach for sparse QDA in a high dimensional setup.
That is, Ω, δ, µ, and η in the Bayes discriminant function are directly estimated with
only sparse assumptions on Ω and δ but not on other intermediate quantities;
2. For estimating Ω, an intermediate step of DA-QDA and a problem of interest in its
own right, we develop a new algorithm which is much more computationally and
memory efficient than its competitor. See Section 2.1;
3. We develop new theory to show the theoretical attractiveness of the DA-QDA. In
particular, the theory for estimating δ is new. See Section 3;
4. The problem of finding the right intercept η is of considerable interest but a general
theory on estimated η is lacking (Hastie et al., 2009). We provide a first theory for
the convergence property of our estimated η. See Section 3.4;
2
Direct Approach for Sparse QDA
5. In extensive simulation study and real data analysis, the DA-QDA approach outperforms many of its competitors, especially when variables under considerable interact.
See Section 4.
1.2 Literature review
As more and more modern datasets are high-dimensional, the problem of classification
in this context has received increasing attention as the usual practice of using empirical
estimates for the Bayes components is no longer applicable. Bickel and Levina (2004) first
highlighted that LDA is equivalent to random guessing in the worst case scenario when
the dimensionality is larger than the sample size. Scientifically and practically in many
problems, however, the components in the Bayes discriminant function can be assumed
sparse. In the problem we study in this paper, loosely speaking, the notion of sparsity
entertains that the two-way interaction representation of the model only admits a small
number of main effects and interactions. In the past few years, a plethora of methods built
on suitable sparsity assumptions have been proposed to estimate the main effects as in
LDA; see for example Shao et al. (2011), Cai and Liu (2011), Fan et al. (2012), Mai et
al. (2012), Mai and Zou (2013), and Jiang et al. (2015). Other related linear methods for
high-dimensional classification can be found in Leng (2008), Witten and Tibshirani (2011),
Pan et al. (2016), Mai et al. (2015), among others.
As pointed out by Fan et al. (2015b) and Sun and Zhao (2015), it has been increasingly
recognized that the assumption of a common covariance matrix across different classes,
needed by LDA, can be restrictive in many practical problems. The extra layer of flexibility
offered by QDA that deals with two-way variable interactions makes it extremely attractive
for such problems. Li and Shao (2015) studied sparse QDA by making sparsity assumptions
on µ2 − µ1, Σ1, Σ2 and Σ1 − Σ2 and proposed their sparse estimates. The assumptions
made are not directly on the key quantities needed in the discriminant function D(z).
In addition, good estimates of these four quantities do not necessarily translate to better
classification, a phenomenon similarly argued and observed by Cai and Liu (2011) and
Mai et al. (2012) for LDA. Fan et al. (2015b) proposed a screening method to identify
interactions when Ω admits a two block sparse structure after permutation, before applying
penalized logistic regression on the identified interactions and all the main effects to estimate
a sparser model. Their method cannot deal with problems where the support of Ω is in
general positions. Further, the use of a separate second-step penalized logistic regression to
determine important interactions and main effects is less appealing from a methodological
perspective. Fan et al. (2015a) suggested a Rayleigh quotient based method for which all
the fourth cross-moments of the predictors have to be estimated. Despite all these efforts,
a direct yet simple approach for QDA with less stringent assumptions than in Li and Shao
(2015) for high-dimensional analysis is missing.
The proposed DA-QDA approach in this paper aims to overcome the difficulties mentioned above. In particular, compared with Li and Shao (2015), we only make sparsity
assumptions on Ω and δ and estimate these two quantities directly in DA-QDA. Compared
to Fan et al. (2015b), we allow the interactions in Ω in general positions, without resorting
to a second stage approach for interactions and main effects selection. Compared with Fan
3
Jiang, Wang, and Leng
et al. (2015a), we operate directly on QDA for which only second cross-moments of the
variables are needed.
DA-QDA can also be understood as a novel attempt to select interactions in the discriminant function that correspond to the nonzero entries in Ω. The problem of interaction
selection is a problem of its own importance and has been studied extensively recently for
regression problems. See, for example, Hao and Zhang (2014) and references therein. The
problem of estimating Ω alone has also attracted attention lately in a different context.
To understand how the structure of a network differs between different conditions and to
find the common structures of two different Gaussian graphical models, Zhao et al. (2014)
proposed a direct approach for estimating Ω by formulating their procedure via the Dantzig
selector. A severe limitation is that their linear programming procedure needs to deal with
O(p
2
) constraints, and the memory requirement by the large constraint matrix is of the
order O(p
4
). As a result, an iteration of the algorithm in Zhao et al. (2014) requires O(sp4
)
computations, where s is the cardinality of the support of Ω. Apparently, their method does
not scale well to high dimensional data. In Zhao et al. (2014), problems with maximum
size p = 120 were attempted and it was reported that a long time was needed to run their
method. In contrast, we use a lasso formulation and develop a new algorithm based on
the alternating direction methods of multipliers (ADMM) for estimating Ω. The memory
requirement of our algorithm is of the order O(p
2
) and its computational cost is of the order
O(p
3
) per iteration, enabling DA-QDA to easily handle much larger problems.
The rest of the paper is organized as follows. Section 2 outlines the main DA-QDA
methodology for estimating Ω and δ. A novel algorithm based on ADMM for estimating Ω
is developed. Section 3 investigates the theory of DA-QDA and provides various consistency
results for estimating Ω, δ, and η, as well as establishing the consistency of the misclassification risk relative to the Bayes risk. Section 4 presents extensive numerical studies and
analysis of four real datasets. Comparison with other classification methods demonstrates
that DA-QDA is very competitive in estimating the sparsity pattern and the parameters of
interest. We provide a short discussion and outline future directions of research in Section
5. All the proofs are relegated to the Appendix.
2. DA-QDA Methodology
To obtain an estimator for the Bayes discriminant function D(z), we propose direct estimators for the two of its Bayes components Ω = Σ−1
2 − Σ
−1
1
and δ = (Σ−1
1 + Σ−1
2
)(µ1 − µ2)
under appropriate sparsity assumptions. Given data Xj , j = 1, .., n1 from class 1 and
Yk, k = 1, ..., n2 from class 2, we can estimate µi and Σi
, i = 1, 2, via their sample versions
as
µˆ1 =
1
n1
Xn1
j=1
Xj , µˆ2 =
1
n2
Xn2
j=1
Yj ;
Σˆ
1 =
1
n1
Xn1
j=1
(Xj − µˆ1)(Xj − µˆ1)
T
, Σˆ
2 =
1
n2
Xn2
j=1
(Yj − µˆ2)(Yj − µˆ2)
T
.
When p >> max{n1, n2}, Σˆ
1 and Σˆ
2 are degenerate and cannot be directly used for estimating Ω. Denote the DA-QDA estimates of Ω as Ω and ˆ δ as ˆδ which will be obtained as
4
Direct Approach for Sparse QDA
in (2) and (8) respectively. For a given scalar η, our DA-QDA procedure classifies a new
observation z in to class 1 if

z −
µˆ1 + ˆµ2
2
T
Ωˆ

z −
µˆ1 + ˆµ2
2

+ ˆδ
T

z −
µˆ1 + ˆµ2
2

+ η > 0, (1)
and classifies z into class 2 otherwise. From (1), we emphasize again that the nonzero entries
in Ω are the interactions of the variables that contribute to the classification rule, while the ˆ
nonzero entries in ˆδ are the main effects of the variables that are used for classification. In
the linear discriminant analysis when Σ1 = Σ2, the rule in (1) becomes the LDA rule which
is linear in the variables. As η = 2 log(π1/π2) + 1
4
(µ1 − µ2)
T Ω(µ1 − µ2) + log |Σ2| − log |Σ1|
is a scalar, we can choose η as ˆη using a simple grid search, bypassing the need to estimate
the determinants of Σ1 and Σ2. This is the strategy implemented in Section 4 and its
analytical justification is provided in Section 3.4. Thus in the following, we shall focus on
the estimation of Ω and δ, under certain sparsity assumptions on these two quantities.
2.1 Estimating Ω
Recall Ω = Σ−1
2 −Σ
−1
1
. It may be attempting to first estimate Σ−1
1
and Σ−1
2
as intermediate
quantities before taking their difference. It is known, however, that accurate estimation
of a covariance matrix or its inverse can be difficult in general in high dimensions unless
additional assumptions are imposed (cf. Bickel and Levina (2008)). Because Ω is the
quantity of interest that appears in the Bayes’ rule, we propose to estimate it directly.
To proceed, we note that Σ2ΩΣ1 = Σ1ΩΣ2 = Σ1 − Σ2. If we define a loss function
as T r
Ω
T Σ1ΩΣ2

/2 − T r (Ω(Σ1 − Σ2)), the loss function is minimized when Ω satisfies
Σ2ΩΣ1 = Σ1 − Σ2 or Ω = Σ−1
2 − Σ
−1
1
. This simple observation motivates the following
penalized loss formulation for estimating Ω by replacing Σj , j = 1, 2 by their empirical
estimates as
Ω = arg min ˆ
Ω∈Rp×p
1
2
T r 
Ω
T Σˆ
1ΩΣˆ
2

− T r 
Ω(Σˆ
1 − Σˆ
2)

+ λkΩk1, (2)
where kΩk1 is the `1 penalty of the vectorized Ω to encourage sparsity and λ is the tuning
parameter. To obtain a symmetric estimator for Ω, we may simply use Ωˆ
0 =
1
2
(Ω +ˆ ΩˆT
)
after Ω is obtained. Because the second derivative of the above loss function is ˆ Σˆ
2 ⊗ Σˆ
1
which is nonnegative definite, the formulation in (2) is a convex problem and can be solved
by a convex optimization algorithm.
We now develop an ADMM algorithm to solve for Ω in (2) (Boyd et al., 2011; Zhang ˆ
and Zou, 2014). First write the optimization problem in (2) as
min
Ω∈Rp×p
1
2
T r 
Ω
T Σˆ
1ΩΣˆ
2

− T r 
Ω(Σˆ
1 − Σˆ
2)

+ λkΨk1, s.t. Ψ = Ω. (3)
From this, we can form the augmented Lagrangian as
L(Ω, Ψ,Λ) = 1
2
T r 
Ω
T Σˆ
1ΩΣˆ
2

− T r 
Ω(Σˆ
1 − Σˆ
2)

+ λkΨk1
+T r (Λ(Ω − Ψ)) + ρ
2
kΩ − Ψk
2
F
,
 
Jiang, Wang, and Leng
where k·kF is the Frobenius norm of a matrix and ρ is a parameter in the ADMM algorithm.
See Section 4 for more details. Given the current estimate Ωk
, Ψk
,Λ
k
, we update successively
Ω
k+1 = arg min
Ω∈Rp×p
L(Ω, Ψ
k
,Λ
k
), (4)
Ψ
k+1 = arg min
Ψ∈Rp×p
L(Ωk+1
, Ψ,Λ
k
), (5)
Λ
k+1 = Λk + ρ(Ωk+1 − Ψ
k+1). (6)
Write Σˆ
i = UiDiU
T
i
as the eigenvalue decomposition of Σˆ
i where Di = diag(di1, · · · , dip), i =
1, 2. Denote Ak = (Σˆ
1 − Σˆ
2) − Λ
k + ρΨk and organize the diagonals of (D2 ⊗ D1 + ρI)
−1
in a matrix B, where Bjk = 1/(d1jd2k + ρ). The following proposition provides explicit
solutions for (4) and (5) which ensures efficient updation of our algorithm in each step.
Proposition 1 Given Ψk
, Λ
k
, ρ and λ, the solution for (4) is given as:
Ω
k+1 = U1[B ◦ (U
T
1 A
kU2)]U
T
2
;
Given Ω
k+1
,Λ
k and ρ, the solution for (5) is given as:
Ψ
k+1 = S(Ωk+1 +
Λ
k
ρ
,
λ
ρ
), (7)
where S is known as the soft-thresholding operator on a matrix. Namely, the (i, j) entry of
S(A, b) for a matrix A = (aij ) is sign(aij )(|aij | −b)+ where (c)+ = c for c > 0 and (c)+ = 0
otherwise.
Note that for a given ρ, when updating Ω, we only need to update Ak which involves simple
matrix subtraction, and then use matrix multiplication. Therefore the update in (4) can
be efficiently implemented. Following is a brief derivation on how we obtain the explicit
solutions given in Proposition 1. For (4), note that the derivative of L with respect to Ω is
Σˆ
1ΩΣˆ
2 − (Σˆ
1 − Σˆ
2) + Λk + ρ(Ω − Ψ
k
) = (Σˆ
1ΩΣˆ
2 + ρΩ) − (Σˆ
1 − Σˆ
2) + Λk − ρΨ
k
,
which can be written as
(Σˆ
2 ⊗ Σˆ
1 + ρI)vec(Ω) = vec 
(Σˆ
1 − Σˆ
2) − Λ
k + ρΨ
k

,
where vec is the vector operator. We have
vec(Ω) = (Σˆ
2 ⊗ Σˆ
1 + ρI)
−1
vec 
(Σˆ
1 − Σˆ
2) − Λ
k + ρΨ
k

.
Using the equality vec(AXB) = (BT ⊗ A)vec(X), and
(Σˆ
2 ⊗ Σˆ
1 + ρI)
−1 = [(U2 ⊗ U1)(D2 ⊗ D1 + ρI)(U
T
2 ⊗ U
T
1
)]−1
= (U2 ⊗ U1)(D2 ⊗ D1 + ρI)
−1
(U
T
2 ⊗ U
T
1
),
6
Direct Approach for Sparse QDA
we have
(Σˆ
2 ⊗ Σˆ
1 + ρI)
−1
vec(A
k
)
= [(U2 ⊗ U1)(D2 ⊗ D1 + ρI)(U
T
2 ⊗ U
T
1
)]−1
vec(A
k
)
= (U2 ⊗ U1)(D2 ⊗ D1 + ρI)
−1
(U
T
2 ⊗ U
T
1
)vec(A
k
)
= (U2 ⊗ U1)(D2 ⊗ D1 + ρI)
−1
vec(U
T
1 A
kU2)
= (U2 ⊗ U1)vec 
B ◦ (U
T
1 A
kU2)

= vec 
U1[B ◦ (U
T
1 A
kU2)]U
T
2

where ◦ is the Hadamard product. Therefore,
Ω = U1[B ◦ (U
T
1 A
kU2)]U
T
2
.
Next we examine (5). Ignoring terms that are independent of Ψ, we just need to minimize
ρ
2
T r(ΨTΨ) − ρT r((Ωk+1)
TΨ) − T r((Λk
)
TΨ) + λkΨk1,
and the solution can be easily seen as (7). Again, the update for Γ can be efficiently
implemented.
Our algorithm can be now summarized as following.
1. Initialize Ω, Ψ and Λ. Fix ρ. Compute SVD Σˆ
1 = U1D1U
T
1
and Σˆ
2 = U2D2U
T
2
, and
compute B where Bjk = 1/(d1jd2k + ρ). Repeat steps 2-4 until convergence;
2. Compute A = (Σˆ
1 − Σˆ
2) − Λ + ρΨ . Then update Ω as Ω = U1[B ◦ (U
T
1 AU2)]U
T
2
;
3. Update Ψ by soft-thresholding Ω + Λ
ρ
elementwise by λ
ρ
;
4. Update Λ by Λ ← Λ + ρ(Ω − Ψ).
Note that the algorithm involves singular value decomposition of Σˆ
1 and Σˆ
2 only once. The
rest of the algorithm only involves matrix addition and multiplication. Thus, the algorithm
is extremely efficient. Compared with Zhao et al. (2014) whose algorithm has computational
complexity of the order at least O(p
4
) and a memory requirement of O(p
4
), our algorithm
has a memory requirement of the order O(p
2
) and computational complexity of O(p
3
).
As a result, our method can handle much larger problems. As a first order method for
convex problems, the convergence of ADMM algorithms is in general of rate O(k
−1
), where
k is the number of iterations. Convergence analysis of ADMM algorithms under different
assumptions has been well established in some very recent optimization literatures; see for
example, Nishihara et al. (2015), Hong and Luo (2017) and Chen et al. (2017). By verifying
the assumptions in Hong and Luo (2017), we can established similar linear convergence
results for our algorithm; see Lemma 1 in the Appendix for more details.
7
Jiang, Wang, and Leng
2.2 The linear index δ
After having estimated Ω as Ω, we discuss the estimation of the linear index ˆ δ = (Σ−1
1 +
Σ
−1
2
)(µ1 − µ2). We develop a procedure that avoids estimating Σ−1
1
and Σ−1
2
. First note
that
Σ1δ = Σ1(Σ−1
1 + Σ−1
2
)(µ1 − µ2) = 2(µ1 − µ2) + Σ1Ω(µ1 − µ2),
Σ2δ = Σ2(Σ−1
1 + Σ−1
2
)(µ1 − µ2) = 2(µ1 − µ2) − Σ2Ω(µ1 − µ2),
and
(Σ1 + Σ2)δ = 4(µ1 − µ2) + (Σ1 − Σ2)Ω(µ1 − µ2).
The last equation is the derivative of δ
T
(Σ1+Σ2)δ/2−{4(µ1−µ2)+(Σ1−Σ2)Ω(µ1−µ2)}
T
δ.
Motivated by this, we estimate δ by a direct method using the lasso regularization, similar
to the one in Mai et al. (2012), as
ˆδ = arg min
δ∈Rp
1
2
δ
T
(Σˆ
1 + Σˆ
2)δ − γˆ
T
δ + λδkδk1, (8)
where ˆγ = 4(ˆµ1 − µˆ2) + (Σˆ
1 − Σˆ
2)Ω(ˆ ˆ µ1 − µˆ2), k · k1 is the vector `1 penalty and λδ is a
tuning parameter. The optimization in (8) is a standard lasso problem and is easy to solve
using existing lasso algorithms. We remark that (8) is much more challenging to analyze
theoretically than the method in Mai et al. (2012), since the accuracy of Ω as an estimator ˆ
of Ω has to be carefully quantified in ˆγ.
We emphasize that our framework is extremely flexible and can accommodate additional
constraints. As a concrete example, let’s consider enforcing the so-called strong heredity
principle in that an interaction is present unless the corresponding main effects are both
present, i.e. if Ωjk 6= 0 then δj 6= 0 and δk 6= 0; see for example Hao and Zhang (2016).
Denote I ⊂ {1, . . . , p} as the set such that for any j, k ∈ I there exists some Ωˆ
jk 6= 0. We
can change the penalty in (8) as kδIC k1 such that the variables in I are not penalized. Due
to space limitation, this line of research will not be studied in the current paper.
3. Theory
We show that our method can consistently select the true nonzero interaction terms in Ω and
the true nonzero terms in δ. In addition, we provide explicit upper bounds for the estimation
error under l∞ norm. For classification, we further show that the misclassification rate of
our DA-QDA rule converges to the optimal Bayes risk under some sparsity assumptions. For
simplicity in this section we assume that n1  n2 and write n = min{n1, n2} −1. Instead of
assuming µ2−µ1, Σ1, Σ2 and Σ1−Σ2 to be sparse as in Li and Shao (2015), we only assume
that Ω and δ are sparse. For the estimation of Ω, the rate in Corollary 1 is similar to the
one in Theorem 3 of Zhao et al. (2014). However, as we pointed out previously, our method
is computationally much more efficient and scales better to large-dimensional problems. In
addition, our work is the first direct estimation approach for sparse QDA. Importantly, the
results for estimating δ are new.
Note that when estimating δ as in (8), we have used Ω as a plug-in estimator for Ω. ˆ
Consequently, from Corollaries 1 and 2, the error rate of ˆδ in estimating δ is a factor times
of that of Ω in estimating Ω. However, in the DA-QDA discriminant function defined as ˆ
8
Direct Approach for Sparse QDA
in (1), Ω appears in the first term which is a product of three components while ˆ ˆδ appears
in the second term which is a product of two components. As a consequence, the overall
estimation error rates of these two terms become equal. This implies that even though
the estimating error of Ω might aggregate in the estimation of ˆ δ, it does not affect the
convergence rate of the classification error at all. Below we provide theory for estimating
Ω, δ, and η, as well as quantifying the overall misclassification error rate.
3.1 Theory for estimating Ω
We first introduce some notation. We assume that Ω = (Ωij )1≤i,j≤p is sparse with support
S = {(i, j) : Ωij 6= 0} and we use S
c
to denote the complement of S. Let d be the
maximum node degree in Ω. For a vector x = (x1, . . . , xp)
T
, the lq norm is defined as
|x|q = (Pp
i=1 |xi
|
q
)
1/q for any 1 ≤ q < ∞ and the l∞ norm is defined as |x|∞ = max1≤i≤p |xi
|.
For any matrix M = (mij )1≤i,j≤p, its entrywise l1 norm is defined as ||M||1 =
P
1≤i,j≤p
|mij |
and its entrywise l∞ norm is written as ||M||∞ = max1≤i,j≤p |mij |. We use ||M||1,∞ =
max1≤i≤p
Pp
j=1 |mij | to denote the l1/l∞ norm induced matrix-operator norm. We denote
Γ = Σ2 ⊗Σ1 and Γ =ˆ Σˆ
2 ⊗Σˆ
1. Write Σk = (σkij )1≤i,j≤p, Σˆ
k = (ˆσkij )1≤i,j≤p for k = 1, 2. By
the definition of Kronecker product, Γ is a p
2 × p
2 matrix indexed by vertex pairs in that
Γ(i,j),(k,l) = σ1ikσ2jl. Denote ∆i = Σˆ
i − Σi for i = 1, 2, ∆Γ = Γˆ − Γ, ∆ΓT = ΓˆT − Γ
T
, and
i = ||∆i
||∞,  = max{1, 2}. B = max{||Σ1||∞, ||Σ2||∞}, BΣ = max{||Σ1||1,∞, ||Σ2||1,∞}
and BΓ = ||Γ
−1
S,S||1,∞, BΓT = ||(ΓT
S,S)
−1
||1,∞, BΓ,ΓT = max{BΓ, BΓT }.
To establish the model selection consistency of our estimator, we assume the following
irrepresentability condition:
α = 1 − max
e∈Sc
|Γe,SΓ
−1
S,S|1 > 0.
This condition was first introduced by Zhao and Yu (2006) and Zou (2006) to establish the
model selection consistency of the lasso. The following theorem gives the model selection
consistency and the rate of convergence for the estimation of Ω.
Theorem 1 Assume that α > 0 and d
2B2B2
ΣB2
Γ,ΓT
q
log p
n → 0. For any c > 2, by choosing
λ = κ1d
2B2B2
ΣB2
Γ,ΓT
q
log p
n
for some large enough constant κ1 > 0, we have with probability
greater than 1 − p
2−c
,
(i) Ωˆ
Sc = 0;
(ii) there exists a large enough constant κ2 > 0 such that
||Ωˆ − Ω||∞ < κ2d
2B
2B
2
ΣB
2
Γ,ΓT
r
log p
n
.
Theorem 1 states that if the irrepresentability condition is satisfied, the support of
Ω is estimated consistently, and the rate of convergence of estimating Ω under l∞ norm
is of order O

d
2B2B2
ΣB2
Γ,ΓT
q
log p
n

, which depends on the sparsity of Σ1, Σ2 and their
Kronecker product. For example, our assumption d
2B2B2
ΣB2
Γ,ΓT
q
log p
n → 0 implies that
9
Jiang, Wang, and Leng
B = max{||Σ1||∞, ||Σ2||∞} can diverge in a rate of o(d
−1B
−1
Σ B
−1
Γ,ΓT (
n
log p
)
1/4
). From the
proof of Theorem 1, we have the following corollary.
Corollary 1 Assume that α > 0, BΣ < ∞ and BΓ,ΓT < ∞. For any constant c > 2,
choosing λ = Cd2
q
log p
n
for some constant C > 0, if d
2
q
log p
n → 0, we have with probability
greater than 1 − p
2−c
, Ωˆ
Sc = 0 and
||Ωˆ − Ω||∞ = O

d
2
r
log p
n
!
.
Similar to Condition 2 in Zhao et al. (2014), the assumption BΓ,ΓT < ∞ in Corollary 1 is
closely related to the mutual incoherence property introduced in Donoho and Huo (2001).
In fact, it holds when imposing the usual mutual incoherence condition on the inverses of
the submatrices (indexed by S) of Σ1 and Σ2. Since d is the maximum node degree in Ω,
the number of nonzero entries in Ω is of order O(dp). the rate O

d
2
q
log p
n

we obtained
in Corollary 1 is better than the rate in Theorem 3 of Zhao et al. (2014). However, in the
case where only O(d) covariates and some of their interactions are important, our rate is
the same as the one in Zhao et al. (2014).
3.2 Theory for estimating δ
Let D = {i : δi 6= 0} be the support of δ and let dδ be its cardinality. Denote A1 = ||Ω||1,∞,
A2 = ||(Ω−1
)·,D||1,∞, µ = max{|µ1 − µˆ1|∞, |µ2 − µˆ2|∞}. We define AΣ = ||Σ
−1
D,D||1,∞ where
Σ = (Σ1 + Σ2)/2 and write Σ = ( ˆ Σˆ
1 + Σˆ
2)/2, γ = 4(µ1 − µ2) + (Σ1 − Σ2)Ω(µ1 − µ2),
∆µ = µ1 − µ2, ∆ˆ
µ = ˆµ1 − µˆ2, Aγ = ||γ||∞ and ||Ωˆ − Ω||∞ = Ω.
To establish the model selection consistency of our estimator ˆδ, we assume the following
irrepresentability condition:
αδ = 1 − max
e∈Dc
|Σe,DΣ
−1
D,D|1 > 0.
Let d0 = max{d, dδ}. The following theorem gives the model selection consistency and the
rate of convergence for the estimation of δ.
Theorem 2 Assume that αδ > 0, |Ω(µ1 − µ2)|1 = O(d
2
0
), kΩk∞ < ∞, Aγ < ∞ and
d
3
0A2
ΣB2B3
ΣB2
Γ,ΓT
q
log p
n → 0 . Under the same assumptions in Theorem 1, for any c > 2,
by choosing λδ = κ3d
3
0A2
ΣB2B3
ΣB2
Γ,ΓT
q
log p
n
, for some large enough constant κ3, we have,
with probability greater than 1 − p
2−c
,
(i) ˆδDc = 0;
(ii) there exists a large enough constant κ4 > 0 such that,
||ˆδ − δ||∞ < κ4d
3
0A
2
ΣB
2B
3
ΣB
2
Γ,ΓT
r
log p
n
.
10
Direct Approach for Sparse QDA
From Theorem 2 and Corollary 1 we immediately have:
Corollary 2 Suppose the assumptions of Corollary 1 and Theorem 2 hold and assume that
AΣ < ∞. For any constant c > 2, by choosing λδ = Cd3
0
q
log p
n
for some large enough
constant C > 0, we have with probability greater than 1 − p
2−c
,
||ˆδ − δ||∞ = O

d
3
0
r
log p
n
!
.
When Σ1 = Σ2, δ reduces to 2Σ−1
1
(µ1−µ2), which is proportional to the direct discriminant
variable β in Mai et al. (2012), Cai and Liu (2011) and Fan et al. (2012), and variables in
D = {i : δi 6= 0} are linear discriminative features contributing to the Bayes rule. From
the proof of Theorem 2 and the rate given in Theorem 2, we can see that when Aγ < ∞,
||ˆδ − δ||∞ is of order O(AΣλδ). This is consistent to the result obtained in Theorem 1 of
Mai et al. (2012) for the Σ1 = Σ2 case.
3.3 Misclassification rate
In this subsection, we study the asymptotic behavior of the misclassification rate for a given
η and postpone the theory when η is estimated to Section 3.4. Let R(i|j) and Rn(i|j) be
the probabilities that a new observation from class j is misclassified to class i by Bayes’ rule
and the DA-QDA rule respectively. Suppose 2 log(π1/π2) = η −
1
4
(µ1 − µ2)
T Ω(µ1 − µ2) −
log |Σ2| + log |Σ1|. The optimal Bayes risk is given as
R = π1R(2|1) + π2R(1|2),
and the misclassification rate of the DA-QDA rule takes the following form:
Rn = π1Rn(2|1) + π2Rn(1|2).
Suppose zi ∼ N(µi
, Σi) for i = 1, 2. Denote the density of (zi − µ)
T Ω(zi − µ) + δ
T
(zi −
µ) + η as Fi(z). For any constant c, define
uc = max{ess supz∈[−c,c]Fi(z), i = 1, 2},
where ess sup denotes the essential supremum which is defined as supremum on almost
everywhere of the support, i.e., except on a set of measure zero. Let s := kSk0 be the
number of nonzero elements in Ω. The following theorem establishes upper bounds for the
misclassification rate difference between Rn and R.
Theorem 3 Assuming that there exist constants Cµ > 0, CΣ > 1 such that max{|µ1|∞, |µ2|∞}
≤ Cµ, and C
−1
Σ ≤ min{λp(Σ1), λp(Σ2)} ≤ max{λ1(Σ1), λ1(Σ2)} ≤ CΣ where λi(Σj ) denotes
the ith largest eigenvalue of Σj . Under the assumptions of Theorems 1 and 2, we have:
(i) if sd2
0B2B2
ΣB2
Γ,ΓT
q
log p
n + d
2
0A2
ΣB2B3
ΣB2
Γ,ΓT
q
log p
n → 0 and there exist positive constants c, Uc such that uc ≤ Uc < ∞, then
Rn − R = Op

sd2
0B
2B
2
ΣB
2
Γ,ΓT
r
log p
n
+ d
2
0A
2
ΣB
2B
3
ΣB
2
Γ,ΓT
r
log p
n
!
;
11
Jiang, Wang, and Leng
(ii) if 
sd2
0B2B2
ΣB2
Γ,ΓT
q
log p
n + d
2
0A2
ΣB2B3
ΣB2
Γ,ΓT
q
log p
n

(1 +uc) → 0 for some positive
constant c, then with probability greater than 1 − 3p
2−c
for some constant c > 2,
Rn − R = O

(1 + uc) ×

sd2
0B
2B
2
ΣB
2
Γ,ΓT log p
r
log p
n
+ d
2
0A
2
ΣB
2B
3
ΣB
2
Γ,ΓT
log p
√
n
!!.
Theorem 3 (i) indicates that under appropriate sparsity assumptions, our DA-QDA rule
is optimal in that its misclassification rate converges to the optimal Bayes risk in probability.
The second statement of Theorem 3 states that under stronger conditions, Rn converges to
R with overwhelming probability. From Corollary 1 and Corollary 2 and the above theorem,
we immediately have:
Corollary 3 Under the assumptions of Corollary 1, Corollary 2 and Theorem 3, we have,
(i) if sd2
0
q
log p
n → 0 and there exist positive constants c, Uc such that uc ≤ Uc < ∞, then
Rn − R = Op

sd2
0
r
log p
n
!
;
(ii) if (1+uc)sd2
0
q
log3 p
n → 0 for some constant c > 0, then with probability greater than
1 − 3p
2−c
for some constant c > 2,
Rn − R = O

sd2
0
(1 + uc)
s
log3
p
n

 .
We remark that the assumption uc ≤ Uc for some constants c and Uc is similar to
Condition (C4) in Li and Shao (2015), and our assumption is weaker in that we only
assume the densities Fi(z) is bounded in a neighborhood of zero while Condition (C4) in Li
and Shao (2015) states that the densities are bounded everywhere.
3.4 Choice of η
The question of choosing the scalar η is critical for classification but receives little attention
in existing literature; see Mai et al. (2012) for a detailed discussion for the LDA case. In
this section, we propose to choose η by minimizing the in-sample misclassification error and
establish analytical results for the estimation of η and the misclassification rate. With some
abuse of notation, let (zi
, li) be our data where z
0
i
s are the covariates and l
0
i
s are the labels,
i.e., li ∈ {0, 1}. To obtain ˆη, we seek to minimize the in-sample misclassification error given
µ, ˆ
ˆδ and Ω: ˆ
ηˆ = arg min
e
1
n
Xn
i=1
|I{Dˆ(zi
, e) > 0} − li
|,
where Dˆ(z, e) = (z−µˆ)
T Ω( ˆ z−µˆ)+ˆδ
T
(z−µˆ)+e. We write d(z) = (z−µ)
T Ω(z−µ)+δ
T
(z−µ)
and ˆd(z) = (z − µˆ)
T Ω( ˆ z − µˆ) + ˆδ
T
(z − µˆ) and hence we have
Dˆ(zi
, e) = ˆd(zi) + e.
12
Direct Approach for Sparse QDA
Then the object function becomes
1
n
Xn
i=1
|I{
ˆd(zi) + e > 0} − li
|.
Without loss of generality, we can assume ˆd(z1) < ˆd(z2) < · · · < ˆd(zn). For any e we
define the index k(e) to be the largest ˆd(zk) that satisfies ˆd(zk) < −e < ˆd(zk+1). Thus, the
optimization can be further simplified as
ηˆ = arg min
e
1
n
X
k(e)
i=1
li +
Xn
i=k(e)+1
(1 − li)

.
Solving the above problem is simple. One just needs to compute the values of the object
function for k = 0, 1, 2, · · · , n and find the index k
∗
that minimizes its value. The optimal
ηˆ can then be found as any value satisfying
ηˆ ∈ (− ˆd(zk
∗+1), − ˆd(zk
∗ )).
Next we establish the asymptotic results for ˆη and the misclassification rate. For a given
e, we use R(d, e) and R(
ˆd, e) to denote the misclassification rate associated with discriminant function D(z, e) = d(z) + e and discriminant function Dˆ(z, e) = ˆd(z) + e respectively. Analogously, the in-sample misclassification rate of D(z, e) and Dˆ(z, e) are denoted as Rn(d, e) and Rn(
ˆd, e). From the optimality of the Bayes rule, we know that
η = 2 log(π1/π2) + 1
4
(µ1 − µ2)
T Ω(µ1 − µ2) + log |Σ2| − log |Σ1| is the unique minimizer of
R(d, ·) and we denote the corresponding optimal Bayes misclassification rate as R = R(d, η).
On the other hand, ˆη is a minimizer of Rn(
ˆd, e). In order to make the estimation problem
feasible, we assume that there is exists a constant cη such that |η| ≤ cη < ∞. The following
proposition indicates that, although the 0-1 loss used for computing the misclassification
rate is neither continuous nor convex, the misclassification rate has a desirable property.
Proposition 2 R(d, e) is strictly monotone increasing in e ∈ [η, ∞) and strictly monotone
decreasing in e ∈ (−∞, η].
From Proposition 2 and following Theorem 5.7 of Van der Vaart (2000), we establish the
following theorem, which indicates that the estimator ˆη is consistent and the resulting
misclassification rate using the estimated rule Dˆ(z, ηˆ) tends to the optimal Bayes misclassification rate in probability.
Theorem 4 Let ηˆ be a minimizer of Rn(
ˆd, e). Under the assumptions of Theorem 3, we
have:
(i) ηˆ → η in probability;
(ii) Rn(
ˆd, ηˆ) → R in probability.
4. Numerical Study
In this section, we provide extensive numerical evidence to show the empirical performance
of DA-QDA by comparing it to its competitors, including the sparse QDA (sQDA, Li
13
Jiang, Wang, and Leng
and Shao (2015)), the innovated interaction screening for sparse quadratic discriminant
analysis (IIS-SQDA, Fan et al. (2015b)), penalized logistic regression with only main effects
considered (PLR), penalized logistic regression with all interaction terms (PLR2), the direct
approach for sparse LDA (DSDA, Mai et al. (2012)), the conventional LDA (LDA), the
conventional QDA (QDA) and the oracle procedure (Oracle). The oracle procedure uses
the true underlying model and serves as the optimal risk bound for comparison. We evaluate
all methods via nine synthetic datasets and four real datasets. In addition, we also include
L1-regularized SVM (L-SVM) and kernel SVM (K-SVM, with Gaussian kernel) performance
as a benchmark in the real data analysis.
To fit DA-QDA, we employ ADMM to estimate Ω and the coordinate-wise descent
algorithm (Friedman et al., 2010) to fit δ. Once Ω and δ are given, we then find the value
of η by a simple linear search, minimizing the in-sample misclassification error. The rate
parameter ρ in ADMM is set according to the optimal criterion suggested by Ghadimi et
al. (2015). The other two tuning parameters, λ for estimating Ω and λδ for estimating δ,
are chosen by 5-fold cross-validation, where the loss function is chosen to be the out-ofsample misclassification rate. To reduce the searching complexity, we are currently using
a searching path rather than grid based tuning to avoid redundant computation and inmemory parallelism to distribute the computational tasks. It is worth noting that the
calculation for each individual tuning pair (λ, λδ) can be made completely independent such
that it is possible to distribute the entire calculation to multiple threads in a parallel fashion.
One can also tune the parameters using the objective functions in (2) and (8) separately.
However, we found that this strategy did not often lead to better classification results than
tuning them jointly. This is possibly due to the complex shape of the misclassification
surface as a function of these two tuning parameters. We implemented sQDA in Matlab
with the leave-one-out-cross-validation (Li and Shao, 2015) to tune the three parameters.
We employ Matlab’s built-in function fitcdiscr to fit LDA and QDA and the R package dsda
(Mai et al., 2012) to fit DSDA. For PLR, PLR2 and the second stage fit of IIS-SQDA which
is a penalized logistic regression, we use the glmnet package and set α = 0.5 as the elastic
net parameter. Other values of α was tried but did not change the result much. The other
tuning parameter in glmnet is chosen by 10-fold cross-validation to minimize out-of-sample
classification error. For the first stage of IIS-SQDA which is a screening step, we adopt the
oracle-assisted approach proposed in Fan et al. (2015b), i.e., using the true Σ1 and Σ2 to
compute the transformed variables used for screening as discussed in Fan et al. (2015b).
To seek an appropriate screening size, we preserve the top 10, 30 or 50 variables for each
experiment to form interaction terms and report the best result (smallest misclassification
error) for IIS-SQDA.
4.1 Synthetic data
For synthetic data, we use the same setup in Fan et al. (2015b). Observations are simulated
from N(u1, Σ1) and N(u2, Σ2) where u2 = 0. Recall Ω1 = Σ−1
1
and Ω2 = Σ−1
2
. We set
u1 = Σ1β for β = (0.6, 0.8, 0, · · · , 0)T
. We consider three different dimensions p = 50, 200,
or 500 with n1 = n2 = 100. The parameters Ω1, Ω2 and β are set as follows.
• Model 1: This model is Model 3 in Fan et al. (2015b) where Ω1 is a band matrix with
(Ω1)ii = 1 and Ωij = 0.3 for |i − j| = 1. We set Ω2 = Ω1 + Ω, where Ω is a symmetric
14
Direct Approach for Sparse QDA
and sparse matrix with Ω10, 10 = −0.3758, Ω10, 30 = 0.0616, Ω10, 50 = 0.2037, Ω30, 30 =
−0.5482, Ω30, 50 = 0.0286, and Ω50, 50 = −0.4614. The other 3 nonzero entries in the
lower triangle of Ω are determined by symmetry.
• Model 2: We set (Ω1)ij = 0.5
|i−j| and let Ω2 = Ω1 + Ω, where Ω = Ip.
• Model 3: Ω1 is the same as Model 2 and Ω2 = Ω1.
• Model 4: Ω1 is the same as Model 2 and Ω is a band matrix defined as (Ω)ii = 1 and
(Ω)ij = 0.5 for |i − j| = 1. Let Ω2 = Ω1 + Ω.
• Model 5: Ω1 = Ip and Ω2 = Ω1 + Ω where Ω is a random sparse symmetric matrix
with conditional number 10 and non-zero density n1/p2×0.7 (generated by sprandsym
in Matlab).
• Models 6 and 7: These are Cases 9 and 10 in Srivastava et al. (2007). For Models 6
and 7, we generate the covariance by the following process: We first sample an p × p
matrix R1 where each entry is an i.i.d uniform random variable between [0, 1]. Then
Ω1 is defined to be Ω1 = (RT
1 R1)
−1 which is a dense matrix. Matrix Ω2 is generated
similarly. For Model 6 the means are set as u1 = u2 = 0 while for Model 7, u1 and u2
are generated by random sampling over uniform distributions.
• Models 8 and 9: These are Cases 10 and 11 in Srivastava et al. (2007) where we
generate the same p × p matrix R1 as in Model 6. Then Ω1 is defined to be Ω1 =
(RT
1 R1RT
1 R1)
−1
representing the ellipsoidal covariances, which often have only one
strong eigenvalue and many relatively smaller ones. Matrix Ω2 is similarly generated.
The means are set as u1 = u2 = 0 for Model 8 and generated by random sampling for
Model 9.
Model 1 is a model where Ω is a sparse two-block matrix after permutation. This is a model
that favors IIS-SQDA. In Model 2, the difference between Ω1 and Ω2 is a diagonal matrix,
and IIS-SQDA is expected to underperform as its screening step for identifying variables
that are involved in interaction would retain all the variables. Model 3 is obviously a
model that favors the linear discriminant analysis (LDA) as Ω = 0, and in particular favors
the sparse LDA (DSDA). This model is simulated to test whether methods designed for
sparse QDA work satisfactorily in situations where LDA works the best. In Model 4,
the difference matrix Ω is a tridiagonal matrix where the screening step of IIS-SQDA is
expected to underperform. Finally, in Model 5, Ω admits a random sparse structure having
0.7n1 = 70 nonzero entries regardless of the dimension p. In Model 6 - 9, the covariance
matrices are dense and so are Ω and δ. These cases are to test DA-QDA in scenarios where
the sparse assumption fails to hold and the features are highly correlated. Model 6 and 8
are two difficult cases for linear methods as the means of the two classes are also the same.
Our implementation of IIS-SQDA is applied only to Models 2 - 9 while the results for
Model 1 are directly cited from Fan et al. (2015b).
For models 1 - 5, we simulate 100 synthetic datasets for each model and record for each
method under comparison: 1) The misclassification rate (MR), 2) The false positives for
main effects and interactions (FP.main for δ and FP.inter for Ω), 3) The false negatives
for main effects and interactions (FN.main for δ and FN.inter for Ω). The results are
15
Jiang, Wang, and Leng
summarized in Tables 1, 2, 3, 4 and 5 for the five models under consideration. For the
dense models, we compare the misclassification rates over 100 replications, and the results
are summarized in Table 6.
From these tables, we can observe the following phenomena.
1. For Model 1 where the setup favors IIS-SQDA, IIS-SQDA performs the best in terms
of variable selection. DA-QDA performs similarly in terms of the misclassification
rate. These two methods outperform LDA and QDA (when p = 50), and PLR,
PLR2, DSDA by a large margin in classification error.
2. For Model 2, as expected, IIS-SQDA is outperformed by DA-QDA by a large margin.
Interestingly, PLR2 performs the second best. Linear classifiers including PLR and
DSDA perform quite badly.
3. For Model 3, DSDA, IIS-SQDA and DA-QDA perform best and similarly. It is interesting that DA-QDA performs on par with DSDA even when the model clearly favors
sparse linear classifiers.
4. For Model 4, DA-QDA outperforms all other methods again by a large margin.
5. For Model 5, DA-QDA performs the best and by a large margin when p becomes
large.
6. For Models 6 - 9, the ordinary QDA performs the best for all low dimensional cases,
which is as expected as the covariances of the the two classes are sufficiently different.
When the dimension goes higher, DA-QDA achieves a high precision for some really
difficult cases which is pretty surprising, considering the matrices are now all dense.
The advantage mostly comes from that DA-QDA only imposes the sparse assumption
on Ω and δ instead of the original precision matrices as for sQDA. In addition, DAQDA performs better than IIS-SQDA.
To summarize, DA-QDA achieves the smallest misclassification rate in most examples and
competitive performance in selecting main and interaction effects. IIS-SQDA is the preferred
approach if Ω is a two-block diagonal matrix after permutation as is the case for Model 1.
PLR2 generally performs better than (sparse) linear classifiers when interactions exist.
4.2 Real data
In this section, we investigate the performance of DA-QDA by analyzing four real data sets
and compare it to the other classifiers discussed in the simulation study and we also include
L1-regularized SVM (L-SVM) and kernel SVM (K-SVM, with Gaussian kernel) for more
comprehensive comparison.
Quora answer classifier. This is a data challenge available at http://www.quora.
com/challenges#answer_classifier. The training data set contains 4,500 answers from
QUORA which have been annotated with either ”good” or ”bad”. For each answer, 21
features (20 of which are effective) were extracted from the original sentences. The goal of
this challenge is to automatically classify a new answer based on the 20 features. Since the
dimension p = 20 is relatively small, we can compare DA-QDA to all the methods discussed
16
Direct Approach for Sparse QDA
Table 1: The means and standard errors (in parentheses) of various performance measures
by different classification methods for model 1 based on 100 replications
p Method MR (%) FP.main FP.inter FN.main FN.inter
50 LDA 39.43 (0.15) – – – –
QDA 43.47 (0.10) – – – –
PLR 36.12 (0.26) 5.95 (0.93) – 1.21 (0.04) –
DSDA 35.05 (0.22) 8.81 (1.06) – 0.07 (0.03) –
sQDA 27.64 (0.22) 11.17 (1.49) – 0.33 (0.05) –
PLR2 30.15 (0.44) 0.51 (0.14) 11.26 (2.78) 0.60 (0.05) 2.62 (0.09)
IIS-SQDA 27.56 (0.27) 5.60 (0.82) 2.16 (0.32) 0.19 (0.04) 2.05 (0.09)
DA-QDA 26.50 (0.28) 0.85 (0.18) 35.26 (4.72) 0.39 (0.07) 3.74 (0.14)
Oracle 23.04 (0.09) – – – –
200 PLR 37.62 (0.34) 7.82 (1.87) – 1.47 (0.05) –
DSDA 36.34 (0.30) 15.06 (3.37) – 0.36 (0.05) –
sQDA 26.80 (0.21) 12.75 (2.22) – 0.47 (0.05) –
PLR2 32.55 (0.53) 0.25 (0.06) 17.44 (3.63) 0.90 (0.05) 2.72 (0.08)
IIS-SQDA 26.94 (0.31) 6.43 (1.24) 0.78 (0.17) 0.42 (0.05) 2.22 (0.08)
DA-QDA 26.51 (0.20) 0.29 (0.07) 25.48 (2.75) 0.82 (0.08) 4.14 (0.12)
Oracle 21.93 (0.08) – – – –
500 PLR 38.82 (0.33) 9.31 (1.99) – 1.58 (0.05) –
DSDA 37.10 (0.29) 16.06 (3.02) – 0.42 (0.05) –
sQDA 28.22 (0.41) 24.22 (5.04) – 0.58 (0.05) –
PLR2 35.45 (0.64) 0.34 (0.09) 55.69 (12.67) 0.99 (0.05) 3.05 (0.10)
IIS-SQDA 26.78 (0.31) 3.22 (1.09) 0.23 (0.05) 0.98 (0.02) 2.65 (0.09)
DA-QDA 26.68 (0.27) 0.14 (0.06) 10.96 (1.38) 1.02 (0.08) 4.36 (0.09)
Oracle 21.81 (0.09) – – – –
Table 2: The means and standard errors (in parentheses) of various performance measures
by different classification methods for model 2 based on 100 replications
p Method MR (%) FP.main FP.inter FN.main FN.inter
50 LDA 34.53 (0.19) – – – –
QDA 32.09 (0.25) – – – –
PLR 31.58 (0.20) 7.51 (0.55) – 0.07 (0.03) –
DSDA 29.89 (0.16) 8.52 (0.86) – 0.16 (0.04) –
sQDA 30.96 (0.90) 27.33 (1.95) – 0.24 (0.05) –
PLR2 5.85 (0.10) 1.14 (0.11) 45.60 (1.08) 0.14 (0.04) 14.27 (0.33)
IIS-SQDA 5.85 (0.10) 1.14 (0.11) 45.60 (1.08) 0.14 (0.04) 14.27 (0.32)
DA-QDA 1.84 (0.08) 4.12 (0.49) 110.10 (10.54) 0.28 (0.05) 1.28 (0.22)
Oracle 0.65 (0.02) – – – –
200 PLR 33.34 (0.21) 10.79 (0.70) – 0.16 (0.04) –
DSDA 30.37 (0.23) 11.91 (2.19) – 0.29 (0.05) –
sQDA 33.28 (0.58) 101.75 (7.72) – 0.27 (0.05) –
PLR2 1.73 (0.06) 0.01 (0.01) 12.68 (0.56) 1.08 (0.05) 119.95 (0.52)
IIS-SQDA 3.98 (0.10) 2.10 (0.15) 15.76 (0.60) 0.11 (0.04) 153.47 (0.31)
DA-QDA 0.39 (0.18) 9.03 (2.12) 724.35 (19.52) 0.21 (0.04) 6.05 (0.35)
Oracle 0 (0) – – – –
500 PLR 34.04 (0.24) 11.17 (1.02) – 0.30 (0.05) –
DSDA 30.99 (0.22) 14.61 (2.64) – 0.44 (0.05) –
sQDA 36.92 (0.64) 243.9 (21.2) – 0.35 (0.05) –
PLR2 1.68 (0.06) 0 (0) 5.52 (0.33) 1.19 (0.05) 401.47 (0.59)
IIS-SQDA 4.12 (0.09) 2.74 (0.25) 8.02 (0.43) 0.12 (0.04) 451.13 (0.29)
DA-QDA 0.16 (0.22) 24.33 (2.18) 4.81e3 (290.1) 0.52 (0.05) 58.09 (1.10)
Oracle 0 (0) – – – –
17
Jiang, Wang, and Leng
Table 3: The means and standard errors (in parentheses) of various performance measures
by different classification methods for model 3 based on 100 replications
p Method MR (%) FP.main FP.inter FN.main FN.inter
50 LDA 38.82 (0.19) – – – –
QDA 47.57 (0.11) – – – –
PLR 36.06 (0.23) 7.73 (0.58) – 0.14 (0.03) –
DSDA 34.82 (0.24) 9.54 (1.09) – 0.26 (0.04) –
sQDA 41.52 (0.51) 14.89 (1.69) – 0.44 (0.05) –
PLR2 37.36 (0.34) 0.60 (0.10) 31.10 (3.21) 0.39 (0.06) 0 (0)
IIS-SQDA 35.10 (0.22) 5.25 (0.46) 10.85 (0.96) 0.06 (0.02) 0 (0)
DA-QDA 34.99 (0.58) 0.82 (0.20) 23.84 (6.69) 0.35 (0.07) 0 (0)
Oracle 31.68 (0.10) – – – –
200 PLR 38.50 (0.31) 12.90 (1.08) – 0.23 (0.04) –
DSDA 36.27 (0.28) 14.81 (2.26) – 0.41 (0.05) –
sQDA 43.82 (0.53) 53.18 (6.74) – 0.52 (0.05) –
PLR2 40.31 (0.45) 0.15 (0.05) 40.38 (5.05) 0.74 (0.06) 0 (0)
IIS-SQDA 36.32 (0.25) 25.39 (0.66) 6.03 (0.50) 0 (0) 0 (0)
DA-QDA 36.55 (0.74) 1.70 (1.38) 37.15 (16.39) 0.89 (0.09) 0 (0)
Oracle 31.54 (0.10) – – – –
500 PLR 39.98 (0.32) 14.79 (1.41) – 0.40 (0.05) –
DSDA 37.07 (0.29) 19.49 (3.65) – 0.59 (0.05) –
sQDA 46.00 (0.48) 130.91 (18.08) – 0.57 (0.05) –
PLR2 42.23 (0.53) 0.03 (0.02) 36.6 (4.32) 1.07 (0.06) 0 (0)
IIS-SQDA 37.45 (0.26) 14.53 (1.38) 3.70 (0.32) 0.07 (0.26) 0 (0)
DA-QDA 37.95 (0.76) 0.2 (0.06) 57.49 (14.74) 1.05 (0.09) 0 (0)
Oracle 31.85 (0.12) – – – –
Table 4: The means and standard errors (in parentheses) of various performance measures
by different classification methods for model 4 based on 100 replications
p Method MR (%) FP.main FP.inter FN.main FN.inter
50 LDA 35.58 (0.20) – – – –
QDA 35.40 (0.20) – – – –
PLR 32.42 (0.23) 8.03 (0.57) – 0.03 (0.01) –
DSDA 31.39 (0.21) 11.02 (1.13) – 0.09 (0.03) –
sQDA 40.90 (0.46) 18.36 (1.93) – 0.45 (0.05) –
PLR2 22.42 (0.21) 1.88 (0.16) 81.56 (2.26) 0.06 (0.03) 123.72 (0.36)
IIS-SQDA 21.77 (0.20) 3.42 (0.21) 58.92 (1.86) 0 (0) 125.73 (0.32)
DA-QDA 16.91 (0.27) 0.55 (0.14) 194.98 (11.31) 0.61 (0.08) 106.51 (0.83)
Oracle 3.22 (0.04) – – – –
200 PLR 34.93 (0.28) 12.71 (0.88) – 0.10 (0.03) –
DSDA 32.64 (0.26) 15.63 (2.14) – 0.21 (0.04) –
sQDA 41.68 (0.54) 64.88 (7.33) – 0.46 (0.05) –
PLR2 21.82 (0.20) 0.30 (0.05) 107.80 (2.32) 0.40 (0.05) 559.23 (0.63)
IIS-SQDA 20.15 (0.19) 6.11 (0.31) 70.76 (1.76) 0 (0) 563.33 (0.38)
DA-QDA 9.59 (0.19) 0.31 (0.08) 297.38 (25.33) 0.82 (0.09) 498.61 (1.49)
Oracle 0.28 (0.02) – – – –
500 PLR 37.19 (0.32) 15.68 (1.27) – 0.32 (0.04) –
DSDA 33.83 (0.30) 22.90 (3.54) – 0.45 (0.05) –
sQDA 43.39 (0.48) 193.04 (20.32) – 0.46 (0.05) –
PLR2 23.06 (0.23) 0.05 (0.02) 114.94 (2.34) 0.79 (0.05) 1455 (0.65)
IIS-SQDA 19.07 (0.17) 12.86 (0.42) 57.44 (1.41) 0 (0) 1459 (0.34)
DA-QDA 4.18 (0.13) 0.20 (0.04) 298.24 (20.8) 0.42 (0.07) 1315 (2.41)
Oracle 0 (0) – – – –
18
Direct Approach for Sparse QDA
Table 5: The means and standard errors (in parentheses) of various performance measures
by different classification methods for model 5 based on 100 replications
p Method MR (%) FP.main FP.inter FN.main FN.inter
50 LDA 39.21 (0.20) – – – –
QDA 46.41 (0.17) – – – –
PLR 35.76 (0.26) 6.08 (0.43) – 0.01 (0.01) –
DSDA 33.73 (0.25) 8.08 (0.99) – 0.14 (0.04) –
sQDA 36.76 (0.27) 9.37 (1.57) – 0.06 (0.02) –
PLR2 36.62 (0.39) 1.04 (0.13) 45.83 (3.99) 0.05 (0.02) 63.69 (0.39)
IIS-SQDA 35.56 (0.29) 8.77 (0.50) 14.85 (0.83) 0 (0) 61.18 (0.26)
DA-QDA 34.32 (0.53) 0.52 (0.12) 39.76 (6.47) 0.58 (0.08) 59.76 (0.64)
Oracle 32.36 (0.25) – – – –
200 PLR 37.73 (0.34) 9.68 (0.89) – 0.40 (0.03) –
DSDA 34.58 (0.35) 10.87 (2.44) – 0.11 (0.03) –
sQDA 26.11 (0.27) 18.35 (4.79) – 0.21 (0.04) –
PLR2 37.40 (0.44) 0.32 (0.06) 66.44 (5.47) 0.31 (0.06) 194.46 (0.35)
IIS-SQDA 33.22 (0.28) 19.87 (0.93) 6.16 (0.41) 0 (0) 191.37 (0.10)
DA-QDA 29.35 (0.41) 0.10 (0.05) 164.24 (73.3) 1.27 (0.07) 175.8 (0.96)
Oracle 20.09 (0.27) – – – –
500 PLR 39.13 (0.33) 14.39 (1.29) – 0.08 (0.03) –
DSDA 34.76 (0.25) 9.44 (1.77) – 0.16 (0.04) –
sQDA 10.17 (0.16) 22.32 (6.88) – 0.24 (0.05) –
PLR2 37.44 (0.52) 0.16 (0.05) 90.78 (6.06) 0.43 (0.06) 493.48 (0.41)
IIS-SQDA 26.57 (0.23) 19.14 (0.57) 62.00 (1.56) 0 (0) 475.49 (0.20)
DA-QDA 23.75 (0.49) 4.03 (2.91) 507.92 (225.36) 1.59 (0.06) 459.96 (1.96)
Oracle 4.16 (0.08) – – – –
Table 6: The means and standard errors (in parentheses) of mis-classification rate (MR %)
for models 6, 7, 8, 9 based on 100 replications
p Method Model 6 Model 7 Model 8 Model 9
50 LDA 49.86 (0.10) 21.91 (0.37) 49.69 (0.10) 32.41 (0.42)
QDA 0.00 (0.00) 0.00 (0.00) 0.00 (0.00) 0.00 (0.00)
PLR 49.97 (0.07) 24.40 (0.38) 49.77 (0.12) 40.24 (0.79)
DSDA 49.89 (0.11) 22.84 (0.39) 49.05 (0.23) 34.31 (0.50)
sQDA 48.14 (0.37) 32.80 (0.69) 46.68 (0.35) 35.27 (0.68)
PLR2 18.17 (0.24) 16.85 (0.25) 7.41 (0.14) 7.28 (0.12)
IIS-SQDA 19.90 (0.29) 18.05 (0.25) 7.60 (0.13) 7.49 (0.12)
DA-QDA 12.58 (0.23) 11.70 (0.28) 4.26 (0.14) 4.22 (0.14)
Oracle 0.00 (0.00) 0.00 (0.00) 0.00 (0.00) 0.00 (0.00)
200 PLR 50.08 (0.09) 39.86 (0.39) 49.66 (0.16) 49.83 (0.08)
DSDA 49.96 (0.11) 37.00 (0.28) 49.33 (0.18) 48.33 (0.34)
sQDA 50.48 (0.15) 45.33 (0.45) 48.98 (0.26) 48.49 (0.20)
PLR2 38.76 (0.43) 36.90 (0.48) 6.80 (0.13) 7.25 (0.10)
IIS-SQDA 45.59 (0.37) 40.93 (0.44) 8.03 (0.11) 8.50 (0.14)
DA-QDA 31.45 (0.42) 33.01 (0.50) 4.65 (0.88) 4.07 (0.67)
Oracle 0.00 (0.00) 0.00 (0.00) 0.00 (0.00) 0.00 (0.00)
500 PLR 49.90 (0.06) 47.67 (0.26) 50.15 (0.09) 50.13 (0.10)
DSDA 50.22 (0.21) 42.71 (0.14) 49.38 (0.09) 46.70 (0.16
sQDA 50.17 (0.08) 50.33 (0.11) 49.85 (0.12) 49.83 (0.12)
PLR2 46.32 (0.49) 45.58 (0.46) 5.66 (0.12) 7.47 (0.06)
IIS-SQDA 49.33 (0.44) 46.61 (0.39) 7.37 (0.15) 9.43 (0.13)
DA-QDA 39.67 (0.16) 41.88 (0.48) 2.43 (0.12) 2.27 (0.07)
Oracle 0.00 (0.00) 0.00 (0.00) 0.00 (0.00) 0.00 (0.00)
19
Jiang, Wang, and Leng
in the simulation via 10-fold cross-validation. In particular, we randomly split the data into
ten parts, fit a model to the nine parts of the data, and report the misclassification error
on the part that is left out. The average misclassification errors and the standard errors
for various methods are in Table 7. Interestingly, LDA performs much better than QDA,
suggesting that if we stop the analysis here, we might simply have preferred to use the
linear classifier LDA. However, the story becomes different if sparse models are considered.
In particular, PLR, PLR2, IIS-SQDA and DA-QDA all outperform the non-sparse models
significantly with DA-QDA performing the best.
Table 7: Misclassification rate (%) for the Quora answer data under 10-fold cross-validation
Method mean standard error
DA-QDA 16.44 0.45
LDA 18.84 0.50
QDA 30.33 0.72
PLR 17.89 0.60
DSDA 19.11 0.56
sQDA 29.59 1.57
PLR2 17.56 0.71
IIS-SQDA 17.33 0.48
L-SVM 18.13 0.83
K-SVM 25.53 0.27
Gastrointestinal Lesions This dataset (P. Mesejo et al., 2016) contains the features
extracted from a database of colonoscopic videos showing three types of gastrointestinal
lesions, hyperplasic, adenoma and serrated adenoma. The original task is a multi-class classification problem, which is simplified to a binary classification task aiming at identifying
adenoma. The data set contains 152 samples (76 original samples each with two different
light conditions) and 768 features. We select the top 200 features with the largest absolute
values of the two sample t statistics and perform a 10-fold corss-validation. The average
misclassification errors and the standard errors are reported in Table 8. The data is predominated by the main effects as the logistic regression achieves the best with DA-QDA as
the runner-up.
Pancreatic cancer RNA-seq data The dataset (Weinstein et al., 2013) is part of the
RNA-Seq (HiSeq) PANCAN data set and is a random extraction of gene expressions of
patients having different types of tumor: BRCA, KIRC, COAD, LUAD and PRAD. The
dataset contains 801 patients and 20531 genes. In this task, we aim to distinguish BRCA
against the other cancers. Similar to the previous study, we select 500 genes with the largest
absolute values of the two sample t statistics for further analysis. Since most methods
achieve 0 misclassification error in 10-fold cross-validation test, to increase the difficulty, we
randomly split the dataset in two equal subsets, train on one subset and test on the other.
We repeat this procedure 50 times to obtain the following Table 9. The L1 regularized
SVM achieves the smallest misclassification error among all the methods. Similar as the
previous dataset, the difference between cancers is dominated by main factors as the LDA
20
Direct Approach for Sparse QDA
Table 8: Misclassification rate (%) for gastrointestinal lesions under 10-fold cross-validation
Method mean standard error
DA-QDA 33.33 0.00
LDA — —
QDA — —
PLR 30.67 2.04
DSDA 53.33 0.00
sQDA 40.00 0.00
PLR2 39.33 0.67
IIS-SQDA 40.00 1.02
L-SVM 44.00 1.85
k-SVM 46.67 0.00
has already achieved a surprisingly low misclassification rate (0.22%). The dataset also
shows that DA-QDA can also perform well when the difference between the covariance
matrices is small.
Table 9: Misclassification rate (%) for Pancreatic cancer RNA-seq data
Method mean standard error
DA-QDA 0.09 0.13
LDA 0.22 0.22
QDA — —
PLR 0.12 0.01
DSDA 0.62 0.22
sQDA 0.29 0.19
PLR2 0.09 0.01
IIS-SQDA 0.15 0.01
L-SVM 0.02 0.01
k-SVM 37.26 0.48
Prostate cancer Taken from ftp://stat.ethz.ch/Manuscripts/dettling/prostate.
rda, this data contains genetic expression levels for N = 6033 genes of 102 individuals. The
first 50 are normal control subjects while the rest are prostate cancer patients. More details
of the data can be found in Singh et al. (2002), Dettling (2004) and Efron (2010). The goal
is to identify genes that are linked with prostate cancer and predict potential patients and
the difficulty of this task lies in the interactions among genes. The existence of interactions
can often complicate the analysis and produce unreliable inference if they are ignored. For
example, Figure 1 displays the pair of 118th and 182th gene. We can see the marginal
distributions of each gene does not differ too much between the patients and the normal
subjects (the middle and the right panels), suggesting that their main effects may not be
important for distinguishing the two classes. In the left panel of Figure 1, however, we
can identify some joint pattern that distinguishes the two groups. It can be seen that
21
Jiang, Wang, and Leng
most patients are allocated in the red triangle while most normal subjects are within the
blue triangle, indicating the existence of some interaction effect that might be useful for
classification.
Gene118
-1 0 1 2 3 4 5
Gene182
-1.5
-1
-0.5
0
0.5
1
1.5
2
2.5 Values for the pair of genes
control subjects
patients
Gene118
-4 -2 0 2 4 6
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9 density for gene 118 for the two groups
control subjects
patients
Gene182
-4 -2 0 2 4 6
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45 density for gene 182 for the two groups
control subjects
patients
Figure 1: The plot for the gene 118 and gene 182. Left: joint scatter plot; Middle: marginal
density of gene 118; Right: marginal density of gene 182.
For this data, we follow the same method in Cai and Liu (2011), retaining only the top
200 or 500 genes with the largest absolute values of the two sample t statistics. The average
misclassification errors and the standard errors using 10-fold cross-validation for various
methods are reported in Table 10. Note that since p  n, LDA and QDA were excluded.
We can see again that DA-QDA is on par with L1 regularized SVM and outperforms all
the other methods by a large margin, regardless of the number of the genes that were used
for analysis.
Table 10: Misclassification rate (%) for the prostate cancer data under 10-fold crossvalidation
p = 200 p = 500
Method mean std error mean std error
DA-QDA 0.00 0.00 1.00 1.00
LDA — — — —
QDA — — — —
PLR 11.00 2.45 16.00 2.92
DSDA 5.00 3.32 11.00 2.92
sQDA 0.00 0.00 2.00 2.00
PLR2 26.00 4.47 43.00 3.39
IIS-SQDA 11.00 2.92 18.00 2.74
L-SVM 0.00 0.00 1.00 1.00
k-SVM 48.00 9.82 63.00 2.55
22
Direct Approach for Sparse QDA
5. Conclusion
We have proposed a novel method named DA-QDA for high-dimensional quadratic discriminant analysis. This is the first method aiming at directly estimating the quantities in
the QDA discriminant function. The proposed framework is simple, fast to implement and
enjoys excellent theoretical properties. We have demonstrated via extensive simulation and
four data analyses that DA-QDA performs competitively under various circumstances.
We conclude by identifying three directions for future research. First, though the discussion of the paper is focused on binary problems, we can extend DS-QDA to handle
multi-class problems as follows. When there are k ≥ 2 classes, we can apply the DA-QDA
approach to classes 1 and j, where j = 2, . . . , k, in a pairwise manner. For a new sample z,
denote the DA-QDA classifier between class 1 and class j as Dˆ
j (z) and suppose Di(z) is the
smallest among {Dj (z), j = 2, . . . , k}. By Bayes’ rule, we can then classifier z into class i if
Di(z) > 0 and class 1 otherwise. Second, it is also interesting to see whether our theoretical
results are optimal and in what sense. Finally, the proposed framework is extremely flexible.
As a concrete example, if Ω is a two block sparse matrix after permutation as in Fan et al.
(2015b), we can change the penalty kΩk1 in (2) to one that encourages row sparsity, for
example to kΩk1,2 =
Pp
j=1 kΩi,:k2 which is the sum of the `2 norms of the rows. It will be
interesting to see how well this procedure compares with IIS-SQDA in Fan et al. (2015b).
This topic is beyond the scope of the current paper and will be pursued elsewhere.
Acknowledgements
We would like to thank the two reviewers and the Action Editor Prof. Saharon Rosset for
their valuable comments that have greatly improved the manuscript. Jiang’s research is
supported by the Hong Kong RGC grant (PolyU 253023/16P). Leng’s research is partially
supported by the Alan Turing Institute under the EPSRC grant EP/N510129/1.
Appendix A. Appendix A. Technical Lemmas and Proofs
A.1 Linear convergence of the ADMM algorithm
The following lemma establishes the linear convergence of our proposed ADMM algorithm
in solving (3).
Lemma 1 Given Σˆ
1, Σˆ
2 and λ, suppose that the ADMM scheme in (4)-(6) generates a
solution sequence {Ω
r
, Ψr
,Λ
r}. We have that {Ω
r
, Ψr} converges linearly to an optimal
solution of (3), and that kΩ
r − ΨrkF converges linearly to zero.
Proof Note that equation (3) is a special case of (1.1) of Hong and Luo (2017) with two
blocks: f(Ω, Ψ) = f1(Ω) + f2(Ψ) where, f1(Ω) = 1
2
T r 
Ω
T Σˆ
1ΩΣˆ
2

− T r 
Ω(Σˆ
1 − Σˆ
2)

and
f2(Ψ) = λkΨk1. Note that T r 
Ω
T Σˆ
1ΩΣˆ
2

= vec(Ω)T
(Σˆ
2 ⊗ Σˆ
1)vec(Ω). Let Σˆ
2 ⊗ Σˆ
1 =
U
TΛU be the eigenvalue decomposition of the symmetric matrix Σˆ
2 ⊗ Σˆ
1, and denote
A1 := U
TΛ
1/2U. Let g1(x) = x
T x be a function defined on Rp
2
7→ R, and h1(x) =
tr(x(Σˆ
1 − Σˆ
2)), h2 = λ|x|1 be functions defined on Rp
2
7→ R. We then have f1(Ω) =
g1(A1vec(Ω))+h1(vec(Ω)) and f2(Ψ) = h2(vec(Ψ)). Clearly given Σˆ
1, Σˆ
2 and λ, the gradient
23
Jiang, Wang, and Leng
of g1 is uniformly Lipschitz continuous and h1, h2 are both polyhedral. The lemma follows
immediately from Theorem 3.1 of Hong and Luo (2017).
A.2 Proofs of Theorem 1
We first introduce some technical lemmas and the proof of Theorem 1 will be given after
these lemmas.
Lemma 2 Suppose λmax(Σk) < 0 < ∞ for k = 1, 2. There exist constants C0, C1, C2 > 0
depending on 0 only, such that for any |v| ≤ C0,
P(|σˆkij − σkij | > v) ≤ C1 exp(−C2(nk − 1)v
2
) ≤ C1 exp(−C2nv2
).
Proof Denote X = (X1, . . . , Xn1
)
T
. Let Λ be an orthogonal matrix with the last row being
(n
−1/2
, . . . , n−1/2
) and define Z = (z1, . . . , zn) = ΛX. We then have z1, . . . , zn−1 ∼ N(0, Σ)
and they are independent to each other. Note that n1Σˆ
1 = XT
(Ip − 11T
)X = Z
TΛ(Ip −
11T
)ΛTZ =
Pn−1
i=1 ziz
T
i
. This together with Lemma A.3 of Bickel and Levina (2008) prove
Lemma 2.
Remark. Denote σ
2 = max{σ1ii, σ2ii, i = 1, . . . , p}. From Lemma 1 of Ravikumar et
al. (2011) we can see that Lemma 2 is true for C1 = 4, C2 = [128(1 + 4σ
2
)
2σ
4
]
−1 and
v = 8(1 + 4σ
2
)σ
2
.
Lemma 3 Assume that,
BΓ,ΓT <
1
3(d
212 + Bd2(1 + 2)). (9)
Let R(∆Γ) = (ΓS,S + ∆Γ)
−1 − Γ
−1
S,S + Γ−1
S,S(∆Γ)S,SΓ
−1
S,S. We then have
||R(∆Γ)||∞ ≤ 3||(∆Γ)S,S||∞||(∆ΓT )S,S||1,∞BΓB
2
ΓT , (10)
and
||R(∆Γ)||1,∞ ≤ 3||(∆Γ)S,S||1,∞||(∆ΓT )S,S||1,∞BΓB
2
ΓT . (11)
Moreover, we also have
||Γˆ−1
S,S − Γ
−1
S,S||∞ ≤ 3d
2
(
2 + 2B)
2BΓB
2
ΓT + (
2 + 2B)B
2
Γ
, (12)
||Γˆ−1
S,S − Γ
−1
S,S||1,∞ ≤ 3d
4
(
2 + 2B)
2BΓB
2
ΓT + d
2
(
2 + 2B)B
2
Γ
. (13)
Proof Note that
∆Γ = ∆2 ⊗ ∆1 + ∆2 ⊗ Σ1 + Σ2 ⊗ ∆1.
24
Direct Approach for Sparse QDA
Consequently by (9) we have ||Γ
−1
S,S||1,∞||(∆Γ)S,S||1,∞ ≤ 1/3. (10) and (11) can then be
proved using the same arguments as in Appendix B of Ravikumar et al. (2011). Note that
||(∆Γ)S,S||∞ ≤ 
2 + 2B,
and
max{||(∆Γ)S,S||1,∞, ||(∆ΓT )S,S||1,∞} ≤ d
2
(
2 + 2B),
we have
||Γˆ−1
S,S − Γ
−1
S,S||∞ ≤ ||R(∆Γ)||∞ + ||Γ
−1
S,S(∆Γ)S,SΓ
−1
S,S||∞
≤ 3d
2
(
2 + 2B)
2BΓB
2
ΓT + ||(∆Γ)S,S||∞||Γ
−1
S,S||2
1,∞
≤ 3d
2
(
2 + 2B)
2BΓB
2
ΓT + (
2 + 2B)B
2
Γ
.
This proves (12). (13) can be proved similarly.
Lemma 4 Assume that (9) and the following assumptions hold: α > 0,  < min n
B, αλ
2(2−α)
o
and
3d
2
BBΓ,ΓT [1 + (B
2
Σ + 3d
2
BBΓ,ΓT )(9d
2
BBΓ,ΓT + 1)BΓ,ΓT ]
≤ Cαα min{λ, 1} (14)
where Cα =
αλ+2α−4
2Bαλ+αλ+2α
. We have:
(i) vec(Ω) ˆ
S = 0.
(ii) ||Ωˆ − Ω||∞ < 2λBΓ,ΓT + 9d
2
BB2
Γ,ΓT (3d
2
BBΓ,ΓT + 1)(2B + 2λ).
Proof (i) Suppose Ω is the solution of: ˜
Ω = min ˜
Ω∈Rp×p,ΩSc=0
1
2
T r 
Ω
T Σˆ
1ΩΣˆ
2

− T r 
Ω(Σˆ
1 − Σˆ
2)

+ λkΩk1. (15)
We prove Lemma 4 (i) by showing that Ω = ˆ Ω. Due to the convexity of (3) in the main ˜
paper, we only need to show that the derivative of (3) is zero at Ω. Equivalently, we need ˜
to show that for any 1 ≤ i, j ≤ p we have,
|Σˆ
1Ω˜Σˆ
2 − (Σˆ
1 − Σˆ
2)|i,j ≤ λ. (16)
By taking the first derivative of (15) we obtain,
{Σˆ
1Ω˜Σˆ
2 − (Σˆ
1 − Σˆ
2) + λZ}S = 0, (17)
where Z = (Zij )1≤i,j≤p with Zij = 0 for (i, j) ∈ S
c
, Zij = sign(Ω˜
ij ) for (i, j) ∈ S and
Ω˜
ij 6= 0, Zij ∈ [−1, 1] for (i, j) ∈ S and Ω˜
ij = 0. Therefore (16) is true for any (i, j) ∈ S.
Using the vector operator, (17) becomes
{(Σˆ
2 ⊗ Σˆ
1)vec(Ω) ˜ − vec(Σˆ
1 − Σˆ
2) + λvec(Z)}S = 0.
25
Jiang, Wang, and Leng
Equivalently we have
vec(Ω) ˜
S = Γˆ−1
S,S[vec(Σˆ
1 − Σˆ
2)S − λvec(Z)S]. (18)
Note that the left hand side of (16) equals |Σˆ
1Ω˜Σˆ
2 − Σ1 + Σ2 − (∆1 − ∆2)|i,j . Using the
vector operator and the fact that Ω˜
Sc = 0, to show that (16) is true for any e ∈ S
c
, we only
need to show that
|Γˆ
e,Svec(Ω) ˜
S − Γe,Svec(Ω)S − vec(∆1 − ∆2)e| ≤ λ. (19)
Here we have use the fact that Γe,Svec(Ω)S = vec(Σ1 − Σ2)e. By (18) and the fact that
vec(Ω)S = Γ−1
S,Svec(Σ1 − Σ2)S we have,
|Γˆ
e,Svec(Ω) ˜
S − Γe,Svec(Ω)S − vec(∆1 − ∆2)e|
= |Γˆ
e,SΓˆ−1
S,S[vec(Σˆ
1 − Σˆ
2)S − λvec(Z)S]
−Γe,SΓ
−1
S,Svec(Σ1 − Σ2)S − vec(∆1 − ∆2)e|
≤ |[Γˆ
e,SΓˆ−1
S,S − Γe,SΓ
−1
S,S]vec(Σ1 − Σ2)S|
+|Γˆ
e,SΓˆ−1
S,Svec(Σˆ
1 − Σˆ
2 − Σ1 + Σ2)S| + ||∆1 − ∆2||∞ + λ|Γˆ
e,SΓˆ−1
S,S|1
≤ 2B|Γˆ
e,SΓˆ−1
S,S − Γe,SΓ
−1
S,S|1 + (1 + 2 + λ)|Γˆ
e,SΓˆ−1
S,S|1 + 1 + 2.
Consequently, (19) is true if
maxe∈Sc 2B|Γˆ
e,SΓˆ−1
S,S − Γe,SΓ
−1
S,S|1 + 2(1 + |Γˆ
e,SΓˆ−1
S,S|1) ≤ (1 − Cα)αλ,
maxe∈Sc |Γˆ
e,SΓˆ−1
S,S|1 ≤ 1 − (1 − Cα)α.
(20)
Next we finish this proof by showing that (20) is true under the assumptions of this
lemma.
By Lemma 3 we have for any e ∈ S
c
,
|Γˆ
e,SΓˆ−1
S,S − Γe,SΓ
−1
S,S|1
≤ |(Γˆ
e,S − Γe,S)Γ−1
S,S|1 + |Γe,S(Γˆ−1
S,S − Γ
−1
S,S)|1
+|(Γˆ
e,S − Γe,S)(Γˆ−1
S,S − Γ
−1
S,S)|1
≤ |Γˆ
e,S − Γe,S|1||Γ
−1
S,S||1,∞ + ||Γˆ−1
S,S − Γ
−1
S,S||1,∞B
2
Σ
+|Γˆ
e,S − Γe,S|1||Γˆ−1
S,S − Γ
−1
S,S||1,∞
≤ d
2
(
2 + 2B)BΓ,ΓT + d
2
[B
2
Σ + d
2
(
2 + 2B)]
×[3d
2
(
2 + 2B)BΓ,ΓT + 1](
2 + 2B)B
2
Γ,ΓT
≤ 3d
2
BBΓ,ΓT [1 + (B
2
Σ + 3d
2
BBΓ,ΓT )(9d
2
BBΓ,ΓT + 1)BΓ,ΓT ]
≤ Cαα min{λ, 1}.
Consequently, maxe∈Sc |Γˆ
e,SΓˆ−1
S,S|1 ≤ Cαα min{λ, 1} + (1 − α) ≤ 1 − (1 − Cα)α, and
max
e∈Sc
2B|Γˆ
e,SΓˆ−1
S,S − Γe,SΓ
−1
S,S|1 + 2(1 + |Γˆ
e,SΓˆ−1
S,S|1)
≤ 2BCααλ + 2[2 − (1 − Cα)α]
= (1 − Cα)αλ.
26
Direct Approach for Sparse QDA
(ii) From (i) we have Ω =ˆ Ω. By (18) and the fact that ˜ vec(Ω)S = Γ−1
S,Svec(Σ1 − Σ2)S,
we have
||Ωˆ − Ω||∞ = |vec(Ω) ˜ − vec(Ω)|∞
= |Γˆ−1
S,S[vec(Σˆ
1 − Σˆ
2)S − λvec(Z)S] − Γ
−1
S,Svec(Σ1 − Σ2)S|∞
≤ λ||Γˆ−1
S,S||1,∞ + |Γˆ−1
S,Svec(∆1 − ∆2)S|∞
+|(Γˆ−1
S,S − Γ
−1
S,S)vec(Σ1 − Σ2)|∞
≤ (λ + 2)||Γˆ−1
S,S||1,∞ + 2B||Γˆ−1
S,S − Γ
−1
S,S||1,∞
≤ (λ + 2)||Γ
−1
S,S||1,∞ + (2B + λ + 2)||Γˆ−1
S,S − Γ
−1
S,S||1,∞.
By (13) and the assumption that 2 < αλ/(2 − α) < αλ < λ we immediately have
||Ωˆ − Ω||∞
≤ (λ + 2)BΓ + 3[d
4
(
2 + 2B)
2BΓB
2
ΓT + d
2
(
2 + 2B)B
2
Γ
](2B + λ + 2)
< 2λBΓ,ΓT + 9d
2
BB2
Γ,ΓT (3d
2
BBΓ,ΓT + 1)(2B + 2λ).
Proof of Theorem 1
From Lemma 2 we have that with probability greater than 1 − p
2−c
,  ≤ {(c log p +
log C1)/C2n}
1/2
. With some abuse of notations, we denote  = {(c log p + log C1)/C2n}
1/2
.
Choose
λ = max n
8α
−1
,
3(2 − α)(2B + 1)
1 − α
d
2BBΓ,ΓT [1 + 2(B
2
Σ + 1/3)BΓ,ΓT ]
o
×
r
c log p + log C1
C2n
,
for some c > 2 and since d
2B2B2
ΣB2
Γ,ΓT
q
log p
n → 0 we can assume that the sample size n is
large enough such that
n > (c log p + log C1) × max{(C2 min(B
2
, 1))−1
, 81B
2
d
4B
2
Γ,ΓT C
−1
2
,
9(C2α)
−1B
2B
2
Γ,ΓT [1 + 2(B
2
Σ + 1/3)BΓ,ΓT ]
2
}.
Clearly under the assumptions of Theorem 1 we have λ = O

d
2B2B2
ΣB2
Γ,ΓT
q
log p
n

. We
firstly verify that the assumptions in Lemmas 3 and 4 are true for the given λ, n and .
(i) By noticing that 8
α < λ,
α
8 <
α
4(2−α)
and n > (C2B2
)
−1
(c log p + log C1) we immediately have
 < min n
B, αλ
4(2 − α)
o
< min n
B, αλ
2(2 − α)
o
.
(ii) n > 81B2d
4B2
Γ,ΓT (c log p + log C1)/C2 implies BΓ,ΓT <
1
9d
2B . Together with  < B
from (i) we can see that Assumption (9) holds.
27
Jiang, Wang, and Leng
(iii) Since  < αλ
2(2−α)
, we have
Cα >
αλ − 4
2Bαλ + αλ >
αλ − 2αλ/(2 − α)
2Bαλ + αλ =
1 − α
(2 − α)(2B + 1).
Together with BΓ,ΓT <
1
9d
2B , we have
3d
2
BBΓ,ΓT [1 + (B
2
Σ + 3d
2
BBΓ,ΓT )(9d
2
BBΓ,ΓT + 1)BΓ,ΓT ]
< 3d
2
BBΓ,ΓT [1 + 2(B
2
Σ + 1/3)BΓ,ΓT ]
≤
1 − α
(2 − α)(2B + 1)λ
< Cαλ.
(14) is then true since n > 9(C2α)
−1B2B2
Γ,ΓT [1+2(B2
Σ+1/3)BΓ,ΓT ]
2
(c log p+log C1) implies
3BBΓ,ΓT [1 + (B
2
Σ + 3d
2
BBΓ,ΓT )(9d
2
BBΓ,ΓT + 1)BΓ,ΓT ] ≤ α.
(i), (ii) and (iii) and Lemma 4 imply that
||Ωˆ − Ω||∞ < 2λBΓ,ΓT + 9d
2
BB2
Γ,ΓT (3d
2
BBΓ,ΓT + 1)(2B + 2λ)
≤ 2λBΓ,ΓT + 12d
2
BB2
Γ,ΓT (2B + 2λ)
=
14
3
λBΓ,ΓT + 24d
2
B2B
2
Γ,ΓT .
A.3 Proofs of Theorem 2
We first introduce some technical lemmas and the proof of Theorem 2 will be given after
these lemmas.
Lemma 5 Assume that AΣdδ < 1 we have
||Σˆ −1
D,D − Σ
−1
D,D||1,∞ ≤
A2
Σ
dδ
1 − AΣdδ
.
Proof This lemma can be easily proved using the following observation:
||Σˆ −1
D,D − Σ
−1
D,D||1,∞ ≤ ||Σˆ −1
D,D||1,∞||Σˆ D,D − ΣD,D||1,∞||Σ
−1
D,D||1,∞
≤ (AΣ + ||Σˆ −1
D,D − Σ
−1
D,D||1,∞)dδAΣ.
Lemma 6
|γˆ − γ|∞ ≤ 8µ + 2( + BΣΩA2 + dΩA2)|Ω(µ1 − µ2)|1 + 2(B + )(A1 + dΩ)µ.
28
Direct Approach for Sparse QDA
Proof
|γ − γˆ|∞ ≤ 4|∆ˆ
µ − ∆µ|∞ + |(∆1 − ∆2)Ω∆µ|∞ + |(Σˆ
1 − Σˆ
2)(Ωˆ − Ω)∆µ|∞
+|(Σˆ
1 − Σˆ
2)Ω( ˆ ∆ˆ
µ − ∆µ)|∞.
Lemma 6 can then be proved using the following facts:
|∆ˆ
µ − ∆µ|∞ ≤ 2µ
|µ1 − µ2|1 ≤ ||(Ω−1
)·,D||1,∞|Ω(µ1 − µ2)|1 = A2|Ω(µ1 − µ2)|1;
|(∆1 − ∆2)Ω∆µ|∞ ≤ 2|Ω(µ1 − µ2)|1;
|(Σˆ
1 − Σˆ
2)(Ωˆ − Ω)∆µ|∞ ≤ ||(Σ1 − Σ2)(Ωˆ − Ω)||∞|∆µ|1 + ||(∆1 − ∆2)(Ωˆ − Ω)||∞|∆µ|1
≤ 2BΣΩ|µ1 − µ2|1 + 2dΩ|µ1 − µ2|1;
|(Σˆ
1 − Σˆ
2)Ω( ˆ ∆ˆ
µ − ∆µ)|∞ ≤ 2(B + )|Ω( ˆ ∆ˆ
µ − ∆µ)|1
≤ 2(B + )[||Ω||1,∞|∆ˆ
µ − ∆µ|∞ + dΩ|∆ˆ
µ − ∆µ|∞]
≤ 2(B + )(A1 + dΩ)µ.
Proof of Theorem 2 Using similar arguments as in Lemma 2, there exists a constant
C > 0 such that max{, µ} ≤ C{(c log p + log C1)/C2δn}
1/2
. Similar to the proof of
Theorem 1, we choose
λδ = max n2(2 − αδ)C
αδ
[4 + (2 + BΣA2)|Ω(µ1 − µ2)|1 + 2B(A1 + C3)],
dδ(5AΣ + 2BΣA2
Σ
)
Cδαδ
× (C3 + 1)o
s
c log p + log C1
C2δn
,
where C3 =
14
3 max n
8
α
,
3(2−α)(2B+1)
1−α
d
2BBΓ,ΓT [1 + 2(B2
Σ +
1
3
)BΓ,ΓT ]
o
BΓ,ΓT + 24d
2B2B2
Γ,ΓT ,
and assume that n is large enough such that
n > (c log p + log C1) × max{C
−1
2δ
, 2C
−1
2 A
2
Σd
2
δ
, C−1
2
(A2 + 1)2
d
2
,
C
−1
2 C
−2
δ
α
−2
δ
d
2
δ
(5AΣ + 2BΣA
2
Σ)
2
},
where 0 < Cδ =
αδλδ−(2−αδ)Kγ
αδλδ(1+Aγ+Kγ) < 1 and C2δ = min{C2,(2σ
2
)
−1} × min{B2
, 1}.
(i) Suppose ˜δ is the solution of:
˜δ = min
δ∈Rp,δDc=0
1
2
δ
T
(Σˆ
1 + Σˆ
2)δ − γˆ
T
δ + λδkδk1,
29
Jiang, Wang, and Leng
We first show that ˆδ = ˜δ. It sufficies to show that for any e ∈ Dc
,
|2Σˆ
e,D ˜δD − γˆe| ≤ λδ.
By the definition of ˜δ we have
{2Σˆ ˜δ − γˆ + λδZ}D = 0,
where Z = (Z1, . . . , Zp)
T with Zi = 0 for i ∈ Dc
, Zi = sign(˜δ) for i ∈ D and ˜δ 6= 0,
Zi ∈ [−1, 1] for i ∈ D and ˜δ = 0. Consequently, we have ˜δD =
1
2Σˆ −1
D,D(ˆγD − λδZD).
Together with the fact that Σe,DΣ
−1
D,DγD = 2Σe,DΣ
−1
D,DΣD,DδD = γe, we have
|2Σˆ
e,D ˜δD − γˆe| = |Σˆ
e,DΣˆ −1
D,D(ˆγD − λδZD) − γˆe|
≤ |(Σˆ
e,DΣˆ −1
D,D − Σe,DΣ
−1
D,D)γD| + |Σˆ
e,DΣˆ −1
D,D(ˆγD − γD)|
+λδ|Σˆ
e,DΣˆ −1
D,D|1 + |γe − γˆe|
≤ |(Σˆ
e,DΣˆ −1
D,D − Σe,DΣ
−1
D,D)|1|γD|∞ +
|Σˆ
e,DΣˆ −1
D,D|1|(ˆγD − γD)|∞ + λδ|Σˆ
e,DΣˆ −1
D,D|1 + |γe − γˆe|. (21)
For simplicity, in the following, inequalities will be derived without mentioning whether they
hold “with probability greater than 1 − p
2−c”. For example, since n > 2C
−1
2 A2
Σ
d
2
δ
(c log p +
log C1), we have AΣdδ < 1/2 with probability greater than 1−p
2−c and we shall repeatedly
use this inequality without mentioning it holds with probability greater than 1−p
2−c
. Since
n > C−1
2δ
(c log p + log C1), by (17) of Ravikumar et al. (2011) and Theorem 1, we also have
Ω ≤ (C3 + 1){(c log p + log C1)/C2δn}
1/2
:= 0.
From Lemma 5 we have,
|Σˆ
e,DΣˆ −1
D,D − Σe,DΣ
−1
D,D|1
≤ |(Σˆ
e,D − Σe,D)Σ−1
D,D|1 + |Σe,D(Σˆ −1
D,D − Σ
−1
D,D)|1 + |(Σˆ
e,D − Σe,D)(Σˆ −1
D,D − Σ
−1
D,D)|1
≤ |Σˆ
e,D − Σe,D|1|Σ
−1
D,D|1,∞ + |Σe,D|1||Σˆ −1
D,D − Σ
−1
D,D||1,∞
+|Σˆ
e,D − Σe,D|1||Σˆ −1
D,D − Σ
−1
D,D)||1,∞
≤ dδAΣ + dδ(B + )||Σˆ −1
D,D − Σ
−1
D,D||1,∞
≤ dδAΣ +
dδ(BΣ + dδ)A2
Σ

1 − AΣdδ
. (22)
Combining (21), (22) and Lemma 6 we have:
|2Σˆ
e,D ˜δD − γˆe|
≤

AΣ +
(B + dδ)A2
Σ

1 − AΣdδ

Aγdδ +

2 − αδ + dδAΣ +
dδ(BΣ + dδ)A2
Σ

1 − AΣdδ

Kγ
+λδ

1 − αδ + dδAΣ +
dδ(BΣ + dδ)A2
Σ

1 − AΣdδ

,
where
Kγ = 2µ[4 + (2 + BΣA2)|Ω(µ1 − µ2)|1 + 2B(A1 + C3)],
30
Direct Approach for Sparse QDA
and we have used the fact that  < B, dδA2 < 1, d < 1 and hence 8µ + 2( + BΣΩA2 +
dΩA2)|Ω(µ1 − µ2)|1 + 2(B + )(A1 + dΩ)µ < Kγ. Assume that
dδAΣ +
dδ(BΣ + dδ)A2
Σ

1 − AΣdδ
≤ Cδαδ min{λδ, 1}, (23)
where Cδ =
αδλδ−(2−αδ)Kγ
αδλδ(1+Aγ+Kγ)
. It can be seen that 0 < Cδ < 1. We then have
|2Σˆ
e,D ˜δD − γˆe| ≤ λδAγCδαδ + (2 − αδ)Kγ + CδαδλδKγ + (1 − αδ + Cδαδ)λδ
= λδ.
Next we complete the Proof of this part by showing that (23) holds.
Since n > C−1
2 C
−2
δ
α
−2
δ
d
2
δ
(5AΣ + 2BΣA2
Σ
)
2
(c log p + log C1), we have
dδAΣ +
dδ(BΣ + dδ)A2
Σ

1 − AΣdδ
≤ dδAΣ + 4dδAΣ + 2BΣA
2
Σdδ ≤ Cδαδ.
On the other hand, since λδ ≥
dδ(5AΣ+2BΣA2
Σ
)
Cδαδ
0, we have
dδAΣ +
dδ(BΣ + dδ)A2
Σ

1 − AΣdδ
≤ λδCδαδ.
(ii) Use the fact that AΣdδ < 1/2 we have:
|
ˆδD − δD|∞ =
1
2
|Σˆ −1
D,D(ˆγD − λδZD) − Σ
−1
D,DγD|
≤ |(Σˆ −1
D,D − Σ
−1
D,D)ˆγD|∞ + |Σ
−1
D,D(ˆγD − γD)|∞ + λδ|Σˆ −1
D,D|1,∞
≤
A2
Σ
dδ
1 − AΣdδ
(Aγ + |γˆD − γD|∞) + AΣ|γˆD − γD|∞
+λδ

AΣ +
A2
Σ
dδ
1 − AΣdδ

≤
AγA2
Σ
dδ
1 − AΣdδ
+ Kγ

A2
Σ
dδ
1 − AΣdδ
+ AΣ

+λδ

AΣ +
A2
Σ
dδ
1 − AΣdδ

≤ 2AγA
2
Σdδ + 2KγAΣ + 2λδAΣ.
This theorem is proved by plugging in Kγ = 2µ[4+(2+BΣA2)|Ω(µ1−µ2)|1+2B(A1+C3)].
A.4 Proofs of Theorem 3
Proof (i) With some abuse of notations we write d(z) = (z − µ)
T Ω(z − µ) + δ
T
(z − µ) and
ˆd(z) = (z − µˆ)
T Ω( ˆ z − µˆ) + ˆδ
T
(z − µˆ).
Rn(1|2) = P(
ˆd(z) + η > 0|z ∼ N(µ2, Σ2))
= P(d(z) + η > d(z) − ˆd(z)|z ∼ N(µ2, Σ2)).
31
Jiang, Wang, and Leng
Denote z = (z1, . . . , zp)
T
. Note that z
T
(Ω − Ω) ˆ z ≤
P
ij |zizj (Ω − Ω) ˆ
ij |, by noticing that
E|zizj | ≤ (Ez2
i + Ez2
j
)/2 ≤ C
2
µ + CΣ, we have z
T
(Ω − Ω) ˆ z = Op(s||Ω − Ωˆ||∞). Using a
similar argument for bounding |z
T Ωµ − zΩˆ ˆµ|, |µ
T Ωµ − µˆ
T Ωˆ ˆµ|, (δ − ˆδ)
T
z and δ
T µ − ˆδ
T µˆ we
obtain,
|d(z) − ˆd(z)|
= Op

sd2
0B
2B
2
ΣB
2
Γ,ΓT
r
log p
n
+ d
2
0A
2
ΣB
2B
3
ΣB
2
Γ,ΓT
r
log p
n
!
. (24)
From Assumption 1 and (24) and the mean value theorem, we have:
Rn(1|2) − R(1|2)
=
Z d(z)−dˆ(z)
0
F2(z)dz
= Op

sd2
0B
2B
2
ΣB
2
Γ,ΓT
r
log p
n
+ d
2
0A
2
ΣB
2B
3
ΣB
2
Γ,ΓT
r
log p
n
!
.
(i) is proved by noticing that the above equality is also true for Rn(2|1) − R(2|1).
(ii) Let Φ(·) be the cumulative distribution function of a standard normal random variable. We have any constant Cz > 0,
P(|z|∞ > Cz
p
log p) ≤ p
"
1 − Φ

C
√
log p + Cµ
C
1/2
Σ
!# .
From Lemma 11 of Liu et al. (2009) we have when p is large enough, by choosing Cz >
p
2(c − 1)C
1/2
Σ
,
p
"
1 − Φ

Cz
√
log p + Cµ
C
1/2
Σ
!# ≤ p
2−c
.
This together with Theorems 1 and 2 and the proof in (i), we have with probability greater
than 1 − 3p
2−c
,
|d(z) − ˆd(z)|
= Op

sd2
0B
2B
2
ΣB
2
Γ,ΓT log p
r
log p
n
+ d
2
0A
2
ΣB
2B
3
ΣB
2
Γ,ΓT
log p
√
n
!
.
The rest of the proof is similar to that in the proof of (i).
32
Direct Approach for Sparse QDA
A.5 Proof of Proposition 2
Proof Suppose e1 > e2 ≥ η. Denote ci = |Σ1Σ
−1
2
|
1/2
exp{
1
2
[ei −
1
4
(µ1 − µ2)
T Ω(µ1 − µ2)]}
for i = 1, 2. We have,
R(d, ei) = π1
Z
D(z,e1)<0
f1(z)dz + π2
Z
D(z,ei)>0
f2(z)dz
=
Z
f1(z)/f2(z)<c−1
i
π1f1(z)dz +
Z
f1(z)/f2(z)>c−1
i
π2f2(z)dz.
Since e1 > e2 ≥ η, it can be easily shown that c1 > c2 ≥ π1/π2. Consequently we have
R(d, e1) − R(d, e2) = −
Z
c
−1
1 <f1(z)/f2(z)<c−1
2
[π1f1(z) − π2f2(z)]dz > 0.
Therefore, R(d, e) is strictly monotone increasing on e ∈ [η, ∞). The second statement can
be similarly proved.
A.6 Proofs of Theorem 4
We first introduce some technical lemmas and the proof of Theorem 4 will be given after
these lemmas.
For any constant c, define lc = min{ess infz∈[−c,c]Fi(z), i = 1, 2}.
Lemma 7 For any constant c > 0, we have for any −c ≤ η ≤ c, R(d, η + η) − R(d, η) ≤
π2uc|η| and R(d, η + η) − R(d, η) ≥ 
2
η
exp(−c/2)π2lc/4.
Proof Let’s consider 0 ≤ η ≤ c first. Note that
R(d, η + η) − R(d, η) = Z
−η<D(z,η)<0
[π2f2(z) − π1f1(z)]dz.
We have
R(d, η + η) − R(d, η) ≤
Z
−η<D(z,η)<0
π2f2(z)dz = π2
Z 0
−η
F2(z)dz ≤ π2ucη.
By noticing that 1 − exp(−x/2) − x exp(−c/2)/2 is an increasing function in [0, c] we have
R(d, η + η) − R(d, η) ≥
Z
−η<D(z,η)<−η/2
[π2f2(z) − π1f1(z)]dz
≥
Z
−η<D(z,η)<−η/2
[1 − exp(−η/2)]π2f2(z)dz
≥
Z
−η<D(z,η)<−η/2
η exp(−c/2)π2f2(z)/2dz
≥ 
2
η
exp(−c/2)π2lc/4.
33
Jiang, Wang, and Leng
The lemma is then proved using a same argument as above for −c ≤ η < 0.
Clearly 7 holds when c is set to be cη. Noted from the proof of Lemma 7 that the bounds do
not depend on η, we can claim that the bounds holds uniformly in η ∈ [−cη, cη]. Similarly,
it can be shown that:
Lemma 8 Suppose ˆd − d = Op(∆d) with ∆d → 0, we have R(
ˆd, e) − R(d, e) = Op(∆duc)
uniformly in e ∈ [−cη, cη].
Lemma 9 Under the assumptions of Theorem 3, Rn(
ˆd, e) → R(d, e) in probability uniformly in e ∈ [−cη, cη].
Proof Denote all the samples in the two classes as {zi
, i = 1, . . . , n1 + n2} and denote the
estimator obtained by leaving the ith sample out as ˆd−i
. Similarly we use ˆd−(i,j)
to denote
the estimator obtained by leaving the ith and jth samples out. From (24), we immediately
have that for any e ∈ [−cη, cη],
EI{
ˆd(zi) + e > 0} − EI{
ˆd−i(zi) + e > 0}
= EI{d(zi) + e > 0} − EI{d(zi) + e > 0} + o(1)
= o(1).
Together with Lemma 8 we have
ERn(
ˆd, e) − R(d, e) = ER(
ˆd−i
, e) + o(1) − R(d, e) → 0, (25)
uniformly in e ∈ [−cη, cη]. Note that
V ar(I{
ˆd(zi) + e > 0}) ≤
1
4
,
and for any (i, j) ∈ {(k, l) : 1 ≤ k, l ≤ n1 + n2, i 6= j},
Cov(I{
ˆd(zi) + e > 0}, I{
ˆd(zj ) + e > 0})
= Cov(I{
ˆd−(i,j)
(zi) + e > 0}, I{
ˆd−(i,j)
(zj ) + e > 0}) + o(1)
= Cov(I{d(zi) + e > 0}, I{d(zj ) + e > 0}) + o(1),
where the last step can be obtained using (24) and Lemma 8 and the o(1) term does not
depend on e. Since zi
, zj are independent, we immediately have
V ar(Rn(
ˆd, e)) → 0, (26)
uniformly in e ∈ [−cη, cη]. The lemma is then proved by Markov’s inequality and the uniform convergence of the bias (25) and the variance (26) of Rn(
ˆd, e).
Proof of Theorem 4
The result that ˆη → η can be obtained by Proposition 2, Lemma 9 and Theorem 5.7 of Van
der Vaart (2000). The second statement immediately follows from Theorem 3.
34
Direct Approach for Sparse QDA