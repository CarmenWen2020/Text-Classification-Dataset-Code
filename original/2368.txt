We present an approximate Bayesian inference approach for estimating the intensity of a
inhomogeneous Poisson process, where the intensity function is modelled using a Gaussian
process (GP) prior via a sigmoid link function. Augmenting the model using a latent
marked Poisson process and P´olya–Gamma random variables we obtain a representation
of the likelihood which is conjugate to the GP prior. We estimate the posterior using a
variational free–form mean field optimisation together with the framework of sparse GPs.
Furthermore, as alternative approximation we suggest a sparse Laplace’s method for the
posterior, for which an efficient expectation–maximisation algorithm is derived to find the
posterior’s mode. Both algorithms compare well against exact inference obtained by a
Markov Chain Monte Carlo sampler and standard variational Gauss approach solving the
same model, while being one order of magnitude faster. Furthermore, the performance and
speed of our method is competitive with that of another recently proposed Poisson process
model based on a quadratic link function, while not being limited to GPs with squared
exponential kernels and rectangular domains.
Keywords: Poisson process; Cox process; Gaussian process; data augmentation; variational inference
1. Introduction
Estimating the intensity rate of discrete events over a continuous space is a common problem for real world applications such as modeling seismic activity (Ogata, 1998), neural data
(Brillinger, 1988), forestry (Stoyan and Penttinen, 2000) and so forth. A particularly common approach is a Bayesian model based on a so–called Cox process (Cox, 1955). The
observed events are assumed to be generated from a Poisson process, whose intensity function is modeled as another random process with a given prior probability measure. The
problem of inference for such type of models has also attracted interest in the Bayesian
machine learning community in recent years. Møller et al. (1998); Brix and Diggle (2001);
Cunningham et al. (2008) assumed that the intensity function is sampled from a Gaussian
Process (GP) prior (Rasmussen and Williams, 2006). However, to restrict the intensity
function of the Poisson process to nonnegative values, a common strategy is to choose a
nonlinear link function which takes the GP as its argument and returns a valid intensity.
Based on the success of variational approximations to deal with complex Gaussian process
models, the inference problem for such Poisson models has attracted considerable interest
in the machine learning community.
While powerful black–box variational Gaussian inference algorithms are available which
can be applied to arbitrary link–functions, the choice of link–functions is not only crucial for
defining the prior over intensities but can also be important for the efficiency of variational
inference. The ’standard’ choice of Cox processes with an exponential link function was
treated in (Hensman et al., 2015). However, variational Gaussian inference for this link
function has the disadvantage that the posterior variance becomes decoupled from the
observations (Lloyd et al., 2015).1 An interesting choice is the quadratic link function of
(Lloyd et al., 2015) for which integrations over the data domain, which are necessary for
sparse GP inference, can be (for specific kernel) computed analytically.2 For both models,
the minimisation of the variational free energies is performed by gradient descent techniques.
In this paper we will deal with approximate inference for a model with a sigmoid link–
function. This model was introduced by (Adams et al., 2009) together with a MCMC
sampling algorithm which was further improved by (Gunter et al., 2014) and (Teh and
Rao, 2011). Kirichenko and van Zanten (2015) have shown that the model has favourable
(frequentist) theoretical properties provided priors and hyperparameters are chosen appropriately. In contrast to a direct variational Gaussian approximation for the posterior
distribution of the latent function, we will introduce an alternative type of variational approximation which is specially designed for the sigmoidal Gaussian Cox process. We build
on recent work on Bayesian logistic regression by data augmentation with P´olya–Gamma
random variables (Polson et al., 2013). This approach was already used in combination
with GPs (Linderman et al., 2015; Wenzel et al., 2017), for stochastic processes in discrete
time (Linderman et al., 2017), and for jump processes (Donner and Opper, 2017). We extend this method to an augmentation by a latent, marked Poisson process, where the marks
are distributed according to a P´olya–Gamma distribution.3
In this way, the augmented
likelihood becomes conjugate to a GP distribution. Using a combination of a mean–field
variational approximation together with sparse GP approximations (Csat´o and Opper, 2002;
Csat´o, 2002; Titsias, 2009) we obtain explicit analytical variational updates leading to fast
inference. In addition, we show that the same augmentation can be used for the computation of the maximum a posteriori (MAP) estimate by an expectation–maximisation (EM)
algorithm. With this we obtain a Laplace approximation to the non–augmented posterior.
The paper is organised as follows: In section 2, we introduce the sigmoidal Gaussian
Cox process model and its transformation by the variable augmentation. In section 3, we
derive a variational mean field method and an EM–algorithm to obtain the MAP estimate,
followed by the Laplace approximation of the posterior. Both methods are based on a
sparse GP approximation to make the infinite dimensional problem tractable. In section 4,
we demonstrate the performance of our method on synthetic data sets and compare with
the results of a Monte Carlo sampling method for the model and the variational approximation of Hensman et al. (2015), which we modify to solve the Cox–process model with the
scaled sigmoid link function. Then we compare our method to the state-of-the-art inference
1. Samo and Roberts (2015) propose an efficient approximate sampling scheme.
2. For a frequentist nonparametric approach to this model, see (Flaxman et al., 2017). For a Bayesian
extension see (Walder and Bishop, 2017).
3. For a different application of marked Poisson processes, see (Lloyd et al., 2016).
2
Sigmoidal Gaussian Cox Process Inference
algorithm (Lloyd et al., 2015) on artificial and real data sets with up to 104 observations.
Section 5 presents a discussion and an outlook.
2. The Inference problem
We assume that N events D = {xn}
N
n=1 are generated by a Poisson process. Each point
xn is a d–dimensional vector in the compact domain X ⊂ R
d
. The goal is to infer the
varying intensity function Λ(x) (the mean measure of the process) for all x ∈ X based on
the likelihood
L(D|Λ) = exp 
−
Z
X
Λ(x)dx
 Y
N
n=1
Λ(xn),
which is equal (up to a constant) to the density of a Poisson process having intensity Λ (see
Appendix C and (Konstantopoulos et al., 2011)) with respect to a Poisson process with unit
intensity. In a Bayesian framework, a prior over the intensity makes Λ a random process.
Such a doubly stochastic point process is called Cox process (Cox, 1955). Since one needs
Λ(x) ≥ 0, Adams et al. (2009) suggested a reparametrization of the intensity function by
Λ(x) = λσ(g(x)), where σ(x) = (1 + e
−x
)
−1
is the sigmoid function and λ is the maximum
intensity rate. Hence, the intensity Λ(x) is positive everywhere, for any arbitrary function
g(x) : X → R and the inference problem is to determine this function. Throughout this
work we assume that g(·) will be modelled as a GP (Rasmussen and Williams, 2006) and
the resulting process is called sigmoidal Gaussian Cox process. The likelihood for g becomes
L(D|g, λ) = exp 
−
Z
X
λσ(g(x))dx
 Y
N
n=1
λσ(gn), (1)
where gn
.= g(xn). For Bayesian inference we define a GP prior measure PGP with zero
mean and covariance kernel k(x, x
0
) : X × X → R
+. λ has as prior density (with respect to
the ordinary Lebesgue measure) p(λ) which we take to be a Gamma density with shape-,
and rate parameter α0 and β0, respectively. Hence, for the prior we get the product measure
dPprior = dPGP × p(λ)dλ. The posterior density p (with respect to the prior measure) is
given by
p(g, λ|D)
.=
dPposterior
dPprior
(g, λ|D) = L(D|g, λ)
EPprior [L(D|g, λ)]. (2)
The normalising expectation in the denominator on the right hand side is with respect to
the probability measure Pprior. To deal with the infinite dimensionality of GPs and Poisson
processes we require a minimum of extra notation. We introduce densities or Radon–
Nikod´ym derivatives such as defined in Equation (2) (see Appendix C or de G. Matthews
et al. (2016)) with respect to infinite dimensional measures by boldface symbols p(z). On
the other hand, non–bold densities p(z) denote densities in the ‘classical’ sense, which means
they are with respect to Lebesgue measure dz.
Bayesian inference for this model is known to be doubly intractable (Murray et al., 2006).
The likelihood in Equation (1) contains the integral of g over the space X in the exponent
and the normalisation of the posterior in Equation (2) requires calculating expectation of
Equation (1). In addition inference is hampered by the fact, that likelihood (1) depends
3
Donner and Opper
non–linearly on g (through sigmoid and exponent of sigmoid). In the following we tackle
this by an augmentation scheme for the likelihood, such that it becomes conjugate to a GP
prior and we subsequently can derive an analytic form of a variational posterior given one
simple mean field assumption (Section 3).
2.1. Data augmentation I: Latent Poisson process
We will briefly introduce a data augmentation scheme by a latent Poisson process which
forms the basis of the sampling algorithm of Adams et al. (2009). We will then extend
this method further to an augmentation by a marked Poisson process. We focus on the
exponential term in Equation (1). Utilizing the well known property of the sigmoid that
σ(x) = 1 − σ(−x) we can write
exp 
−
Z
X
λσ(g(x))dx

= exp 
−
Z
X
(1 − σ(−g(x))) λdx

. (3)
The left hand side has the form of a characteristic functional of a Poisson process. Generally,
for a random set of points ΠZ = {zm; zm ∈ Z} on a space Z and with a function h(z), this
is defined as
EPΛ


Y
zm∈ΠZ
e
h(zm)

 = exp 
−
Z
Z

1 − e
h(z)

Λ(z)dz

, (4)
where PΛ is the probability measure of a Poisson process with intensity Λ(z). Equation (4)
can be derived by Campbell’s theorem (see Appendix A and (Kingman, 1993, chap. 3))
and identifies a Poisson process uniquely.
Setting h(z) = ln σ(−g(z)), and Z = X , and combining Equation (3) and (4) we obtain
the likelihood used by Adams et al. (2009, Eq. 4). However, in this work we make use of
another augmentation, before invoking Campbell’s theorem. This will result in a likelihood
which is conjugate to the model priors and further simplifies inference.
2.2. Data augmentation II: P´olya–Gamma variables and marked Poisson
process
Following Polson et al. (2013) we represent the inverse of the hyperbolic cosine as a scaled
Gaussian mixture model
cosh−b
(z/2) = Z ∞
0
e
− z
2
2
ω
pPG(ω|b, 0)dω, (5)
where pPG is a P´olya–Gamma density (Appendix B). We further define the tilted P´olya–
Gamma density by
pPG(ω|b, c) ∝ e
− c
2
2
ω
pPG(ω|b, 0), (6)
where b > 0 and c are parameters. We will not need an explicit form of this density, since
the subsequently derived inference algorithms will only require the first moments. Those
can be obtained directly from the moment generating function, which can be calculated
straightforwardly from Equation (5) and (6) (see Appendix B). Equation (5) allows us to
4
Sigmoidal Gaussian Cox Process Inference
rewrite the sigmoid function as
σ(z) = e
z
2
2 cosh( z
2
)
=
Z ∞
0
e
f(ω,z)
pPG(ω|1, 0)dω, (7)
where we define
f(ω, z)
.=
z
2
−
z
2
2
ω − ln 2.
Setting z = −g(x) in Equation (3) and substituting Equation (7) we get
exp 
−
Z
X
λ (1 − σ(−g(x))) dx

= exp 
−
Z
X ×R+

1 − e
f(ω,−g(x))
pPG(ω|1, 0) λdωdx

.
(8)
Finally, we apply Campbell’s theorem (Equation (4)) to Equation (8). The space is a
product space Z = Xˆ
.= X × R
+ and the intensity Λ(x, ω) = λpPG(ω|1, 0). This results in
the final representation of the exponential in Equation (8)
exp 
−
Z
Xˆ

1 − e
f(ω,−g(x))
Λ(x, ω) dωdx

= EPΛ


Y
(x,ω)m∈ΠXˆ
e
f(ωm,−gm)

 .
Interestingly, the new Poisson process ΠXˆ with measure PΛ has the form of a marked Poisson
process (Kingman, 1993, chap. 5), where the latent P´olya-Gamma variables ωm denote the
‘marks’ being independent random variables at each location xm. It is straightforward to
sample such processes by first sampling the inhomogeneous Poisson process on domain X
(for example by ‘thinning’ a process with constant rate (Lewis and Shedler, 1979; Adams
et al., 2009)) and then drawing a mark ω on each event independently from the density
pPG(ω|1, 0).
Finally, using the P´olya–Gamma augmentation also for the discrete likelihood factors
corresponding to the observed events in Equation (1) we obtain the following joint likelihood
of the model
L(D, ωN , ΠXˆ|g, λ)
.=
dPjoint
dPaug
(D, ωN , ΠXˆ|g, λ)
=
Y
(x,ω)m∈ΠXˆ
e
f(ωm,−gm) Y
N
n=1
λef(ωn,gn)
,
(9)
where we define the prior measure of augmented variables as Paug = PΛ × PωN
and where
ωN = {ωn}
N
n=1 are the P´olya–Gamma variables for the observations D with the prior
measure dPωN =
QN
n=1 p(ωn|1, 0)dωn. This augmented representation of the likelihood
contains the function g(·) only linearly and quadratically in the exponents and is thus
conjugate to the GP prior of g(·). Note that the original likelihood in Equation (1) can be
recovered by EPaug
L(D, ωN , ΠXˆ|g, λ)

= L(D|g, λ).
5  
Donner and Opper
3. Inference in the augmented space
Based on the augmentation we define a posterior density for the joint model with respect
to the product measure Pprior × Paug
p(ωN , ΠXˆ, g, λ|D)
.=
dPposterior
d(Pprior × Paug)
(ωN , ΠXˆ, g, λ|D)
=
L(D, ωN , ΠXˆ|g, λ)
L(D)
,
(10)
where the denominator is the marginal likelihood L(D) = EPprior×Paug
L(D, ωN , ΠXˆ|g, λ)

.
The posterior density of Equation (10) could be sampled using Gibbs sampling with explicit,
tractable conditional densities. Similar to the variational approximation in the next section,
one can show that the conditional measure of the point sets ΠXˆ and the variables ωN , given
the function g(·) and maximal intensity λ is a product of a specific marked Poisson process
and independent (tilted) P´olya–Gamma densities. On the other hand, the distribution over
function g(·) conditioned on ΠXˆ and ωN is a Gaussian process. Note, however, one needs
to sample this GP only at the finite points xm in the random set ΠXˆ and the fixed set D.
3.1. Variational mean–field approximation
For variational inference one assumes that the desired posterior probability measure belongs
to a family of measures for which the inference problem is tractable. Here we make a
simple structured mean field assumption in order to fully utilise its conjugate structure:
We approximate the posterior measure by
Pposterior(ωN , ΠXˆ, g, λ|D) ≈ Q1(ωN , ΠXˆ) × Q2(g, λ), (11)
meaning that the dependencies between the P´olya–Gamma variables ωN and the marked
Poisson process ΠXˆ on the one hand, and the function g and the maximal intensity λ on the
other hand, are neglected. As we will see in the following, this simple mean–field assumption
allows us to derive the posterior approximation analytically.
The variational approximation is optimised by minimising the Kullback–Leibler divergence between exact and approximated posteriors. This is equivalent to maximising the
lower bound on the marginal likelihood of the observations
L(q) = EQ

log 
L(D, ωN , ΠXˆ|g, λ)
q1
(ωN , ΠXˆ)q2
(g, λ)
 ≤ log L(D), (12)
where Q is the probability measure of the variational posterior in Equation (11) and we
introduced approximate likelihoods
q1
(ωN , ΠXˆ)
.=
dQ1
dPaug
(ωN , ΠXˆ), q2
(g, λ)
.=
dQ2
dPprior
(g, λ).
Using standard arguments for mean field variational inference (Bishop, 2006, chap. 10)
and Equation (11), one can then show that the optimal factors satisfy
ln q1

ωN , ΠXˆ

= EQ2

log L(D, ωN , ΠXˆ|g, λ)

+ const. (13)
     
Sigmoidal Gaussian Cox Process Inference
and
ln q2
(g, λ) = EQ1

log L(D, ωN , ΠXˆ|g, λ)

+ const. , (14)
respectively. These results lead to an iterative scheme for optimising q1 and q2
in order
to increase the lower bound in Equation (12) in every step. From the structure of the
likelihood one derives two further factorisations:
q1
(ωN , ΠXˆ) = q1
(ωN )q1
(ΠXˆ), (15)
q2
(g, λ) = q2
(g)q2
(λ), (16)
where the densities are defined with respect to the measures dP(ωN ), dPΛ, dPGP, and
p(λ)dλ, respectively. The subsequent section describes these updates explicitly.
Optimal P´olya–Gamma density Following Equation (13) and (15) we obtain
q1
(ωN ) = Y
N
n=1
exp 
−
c
(n)
1
2
ωn

cosh−1

c
(n)
1
/2
 =
Y
N
n=1
pPG 
ωn|1, c
(n)
1

pPG (ωn|1, 0) ,
where the factors are tilts of the prior P´olya-Gamma densities (see Equation (6) and Appendix B) with c
(n)
1 =
p
EQ2
[g
2
n
]. By simple density transformation we obtain the density
with respect to the Lebesgue measure as
q1(ωN ) = q1
(ωN )




dPωN
dωN



 =
Y
N
n=1
pPG 
ωn|1, c
(n)
1

, (17)
being a product of tilted P´olya–Gamma densities.
Optimal Poisson process Using Equation (13) and (15) we obtain
q1
(ΠXˆ) =
Q
(x,ω)m∈ΠXˆ
e
EQ2
[f(ωm,−gm)]λ1
exp R
Xˆ

e
EQ2
[f(ω,−g(x))] − 1

λ1pPG(ω|1, 0)dxdω, (18)
with λ1
.= e
EQ2
[log λ
∗]
. Note, that EQ2
[f(ωm, −gm)] involves the expectations EQ2
[gm] and
EQ2

(gm)
2

. One can show, that Equation (18) is again a marked Poisson process with
intensity
Λ1(x, ω) =λ1
exp 
−
EQ2
[g(x)]
2

2 cosh 
c1(x)
2
 pPG (ω|1, c1(x))
=λ1σ(−c1(x)) exp 
c1(x) − EQ2
[g(x)]
2

pPG (ω|1, c1(x))
(19)
where c1(x) = p
EQ2
[g(x)
2] (for a proof see Appendix D).
7    
Donner and Opper
Optimal Gaussian process From Equation (14) and (16) we obtain the optimal approximation of the posterior likelihood (note that this is defined relative to GP prior)
q2
(g) ∝ e
U(g)
,
where the effective log–likelihood is given by
U(g) = EQ1


X
(x,ω)m∈ΠXˆ
f(ωm, −gm)

 +
X
N
n=1
EQ1
[f(ωn, g(xn))] .
The first expectation is over the variational Poisson process ΠXˆ and the second one over
the P´olya–Gamma variables ωN . These can be easily evaluated (see Appendix A) and one
finds
U(g) = −
1
2
Z
X
A(x)g(x)
2
dx +
Z
X
B(x)g(x)dx, (20)
with
A(x) =X
N
n=1
EQ1
[ωn] δ(x − xn) + Z ∞
0
ωΛ1(x, ω)dω,
B(x) =1
2
X
N
n=1
δ(x − xn) −
1
2
Z ∞
0
Λ1(x, ω)dω,
where δ(·) is the Dirac delta function. The expectations and integrals over ω are
EQ1
[ωn] = 1
2c
(n)
1
tanh
c
(n)
1
2
!
,
Z ∞
0
Λ1(x, ω)dω = λ1σ(−c1(x)) exp 
c1(x) − EQ2
[g(x)]
2

.= Λ1(x),
Z ∞
0
ωΛ1(x, ω)dω =
1
2c1(x)
tanh 
c1(x)
2

Λ1(x).
The resulting variational distribution defines a Gaussian process. Because of the mean–
field assumption the integrals in Equation (20) do not require integration over random
variables, but only solving two deterministic integrals over space X . However, those integrals
depend on function g over the entire space and it is not possible for a general kernel to
compute the marginal posterior density at an input x in closed form. For specific GP
kernel operators, which are the inverses of differential operators, a solution in terms of
linear partial differential equations would be possible. This could be of special interest for
one–dimensional problems where Matern kernels with integer parameters (Rasmussen and
Williams, 2006) fulfill this condition. Here, the problem becomes equivalent to inference
for a (continuous time) Gaussian hidden Markov model and could be solved by performing
a forward–backward algorithm (Solin, 2016). This would reduce the computations to the
solution of ordinary differential equations. We will discuss details of such an approach
elsewhere. To deal with general kernels we will resort instead to a the well known variational
sparse GP approximation with inducing points.
8
Sigmoidal Gaussian Cox Process Inference
Optimal sparse Gaussian process The sparse variational Gaussian approximation follows the standard approach (Csat´o and Opper, 2002; Csat´o, 2002; Titsias, 2009) and its
generalisation to a continuum likelihood (Batz et al., 2018; de G. Matthews et al., 2016).
For completeness, we repeat the derivation here and more detailed in Appendix E. We
approximate q2
(g) by a sparse likelihood GP q
s
2
(g) with respect to the GP prior
dQs
2
dP (g) = q
s
2
(gs
), (21)
which depends only on a finite dimensional vector of function values gs = (g(x1), . . . , g(xL))>
at a set of inducing points {xl}
L
l=1. With this approach it is again possible to marginalise
out exactly all the infinitely many function values outside of the set of inducing points. The
sparse likelihood q
s
2
is optimised by minimising the Kullback–Leibler divergence
DKL(Q
s
2kQ2) = EQs
2

log q
s
2
(g)
q2
(g)

.
A short computation (Appendix E) shows that
q
s
2
(gs
) ∝ e
Us
(gs
) with U
s
(gs
) = EP(g|gs
)
[U(g)] ,
where the conditional expectation is with respect to the GP prior measure given the function
gs at the inducing points. The explicit calculation requires the conditional expectations of
g(x) and of (g(x))2
. We get
EP(g|gs
)
[g(x)] = ks(x)
> K−1
s gs
, (22)
where ks(x) = (k(x, x1), . . . , k(x, xL))> and Ks is the kernel matrix between inducing
points. For the second expectation, we get
EP(g|gs
)

g
2
(x)

=

EP(g|gs
)
[g(x)]2 + const. (23)
The constant equals the conditional variance of g(x) which does not depend on the sparse
set gs
, but only on the locations of the sparse points. Because we are dealing now with
a finite problem we can define the ‘ordinary’ posterior density of the GP at the inducing
points with respect to the Lebesgue measure dgs
. From Equation (20), (22), and (23),
we conclude that the sparse posterior at the inducing variables is a multivariate Gaussian
density
q
s
2
(gs
) = N (µ
s
2
, Σ
s
2
), (24)
with the covariance matrix given by
Σ
s
2 =

K−1
s
Z
X
A(x)ks(x)ks(x)
>dx K−1
s + K−1
s
−1
, (25)
and the mean
µ
s
2 = Σs
2

K−1
s
Z
X
B(x)ks(x)dx

. (26)
In contrast to other variational approximations (see for example (Lloyd et al., 2015; Hensman et al., 2015)) we obtain a closed analytic form of the variational posterior mean and
   
Donner and Opper
covariance which holds for arbitrary GP kernels. However, these results depend on finite
dimensional integrals over the space X which cannot be computed analytically. This is different to the sparse approximation for the Poisson model with square link function (Lloyd
et al., 2015), where similar integrals in the case of the squared exponential kernel can be obtained analytically. Hence, we resort to a simple Monte–Carlo integration, where integration
points are sampled uniformly on X as
IF =
Z
X
F(x)dx ≈
|X |
R
X
R
r=1
F(xr).
The set of integration points {xr}
R
r=1 is drawn uniformly from the space X .
Finally, from Equation (21) and (24) we obtain the mean function and the variance of
the sparse approximation for every point x ∈ X , which is
µ2(x) = EQ2
[g(x)] = ks(x)
>K−1
s µ
s
2
, (27)
and variance
(s2(x))2 = k(x, x) − ks(x)
>K−1
s

I − Σ
s
2K−1
s

ks(x), (28)
where I is the identity matrix.
Optimal density for maximal intensity λ From Equation (14) we identify the optimal
density as a Gamma density
q2(λ) = Gamma(λ|α2, β2) = β
α2
2
(λ)
α2−1
e
−β2λ
Γ(α2)
, (29)
where α2 = N + EQ1
[1Π(x)] + α0, β2 = β0 +
R
X
dx and Γ(·) is the gamma function. 1Π(x)
denotes the indicator function being 1 if x ∈ Π and 0 otherwise and the integral is again
solved by Monte Carlo integration. This defines the required expectations for updating q1
by EQ2
[λ] = α2
β2
and EQ2
[log λ] = ψ(α2) − log β2, where ψ(·) is the digamma function.
Hyperparameters Hyperparameters of the model are (i) the covariance parameters θ
of the GP, (ii) the locations of the inducing points {xl}
L
l=1, and (iii) the prior parameters
α0, β0 for the maximal intensity λ. The covariance parameters (i) θ are optimised by
gradient ascent following the gradient of the lower bound in Equation (12) with respect to
θ (Appendix F). As gradient ascent algorithm we employ the ADAM algorithm (Kingma
and Ba, 2014). We perform always one step after the variational posterior q is updated as
described before. (ii) The locations of the sparse GP {xl}
L
l=1 could in principle be optimised
as well, but we keep them fixed and position them on a regular grid over the space X .
From this choice it follows that Ks is a Toeplitz matrix, when the kernel is translationally
invariant. This could be inverted in O(L(log L)
2
) instead of O(L
3
) operations (Press et al.,
2007) but we do not employ this fact. Finally, (iii) the value for prior parameters α0 and β0
are chosen such that p(λ) has a mean twice and standard deviation once the intensity one
would expect for a homogeneous Poisson Process observing D. The complete variational
procedure is outlined in Algorithm 1.
1 
Sigmoidal Gaussian Cox Process Inference
Algorithm 1: Variational Bayes algorithm for sigmoidal Gaussian Cox process.
Init: EQ [g(x)] , EQ

(g(x))2

at D and integration points, and EQ [λ] , EQ [log λ]
1 while L not converged do
2 Update q1
3 PG distributions at observations: q1(ωN ) with Eq. (17)
4 Rate of latent process: Λ1(x, ω) at integration points with Eq. (19)
5 Update q2
6 Sparse GP distribution: Σs
2
, µ
s
2 with Eq. (25), (26)
7 GP at D and integration points: EQ2
[g(x)] , EQ2

(g(x))2

with
Eq. (27), (28)
8 Gamma-distribution of λ: α2, β2 with Eq. (29)
9 Update kernel parameters with gradient ascent
10 end
3.2. Laplace approximation
In this section we will show that our variable augmentation method is well suited for computing a Laplace approximation (Bishop, 2006, chap. 4) to the joint posterior of the GP
function g(·) and the maximal intensity λ as an alternative to the previous variational
scheme. To do so we need the maximum a posteriori (MAP) estimate (equal to the mode
of the posterior distribution) and a second order Taylor expansion around this mode. The
augmentation method will be used to compute the MAP estimator iteratively using an EM
algorithm.
Obtaining the MAP estimate In general, a proper definition of the posterior mode
would be necessary, because the GP posterior is over a space of functions, which is an
infinite dimensional object and does not have a density with respect to Lebesgue measure.
A possibility to avoid this problem would be to discretise the spatial integral in the likelihood
and to approximate the posterior by a multivariate Gaussian density for which the mode
can then be computed by setting the gradient equal to zero. In this paper, we will use a
different approach which defines the mode directly in function space and allows us to utilise
the sparse GP approximation developed previously for the computations. A mathematically
proper way would be to derive the MAP estimator by maximising a properly penalised log–
likelihood. As discussed e.g. in Rasmussen and Williams (2006, chap. 6) for GP models
with likelihoods which depend on finitely many inputs only, this penalty is given by the
squared reproducing kernel Hilbert space (RKHS) norm that corresponds to the GP kernel.
Hence, we would have
(g
∗
, λ∗
) =argming∈Hk,λ 
− lnL(D|g, λ) − ln p(λ) + 1
2
kgk
2
Hk

,
where kgk
2
Hk
is the RKHS norm for the kernel k. This penalty term can be understood
as a proper generalisation of a Gaussian log–prior density to function space. We will not
give a formal definition here but work on a more heuristic level in the following. Rather
than attempting a direct optimisation, we will use an EM algorithm instead, applying the
11    
Donner and Opper
variable augmentation with the Poisson process and P´olya–Gamma variables introduced in
the previous sections. In this case, the likelihood part of the resulting ’Q–function’
Q((g, λ)|(g, λ)
old)
.= EP(ωN ,ΠXˆ|(g,λ)
old)

lnL(D, ωN , ΠXˆ|g, λ)

+ ln p(λ) −
1
2
kgk
2
Hk
, (30)
that needs to be maximised in the M–step becomes (as in the variational approach before)
the likelihood of a Gaussian model in the GP function g. Hence, we can argue that the
function g which maximises Q is equal to the posterior mean of the resulting Gaussian
model and can be computed without discussing the explicit form of the RKHS norm.
The conditional probability measure P(ωN , ΠXˆ|(g, λ)
old) is easily obtained similar to
the optimal measure Q1 by not averaging over g and λ. This gives us straightforwardly the
density
p(ωN , ΠXˆ|(g, λ)
old) = p(ωN |(g, λ)
old)p(ΠXˆ|(g, λ)
old).
The first factor is
p(ωN |(g, λ)
old) = p(ωN |(g, λ)
old)




dPωN
dωN



 =
Y
N
n=1
pPG (ωn|1, c˜n),
with ˜cn = |g
old
n
|. The latent point process ΠXˆ is again a Poisson process density
p(ΠXˆ|(g, λ)
old) = dPΛ˜
dPΛ
(ΠXˆ|(g, λ)
old),
where the intensity is
Λ( ˜ x, ω) = λ
oldσ(−g
old(x))pPG (ω|1, c˜(x)),
with ˜c(x) = |g
old(x)|. The first term in the Q–function is
U(g, λ)
.= EP(ωN ,ΠXˆ|(g,λ)
old)

lnL(D, ωN , ΠXˆ|g, λ)

= −
1
2
Z
X
A˜(x)g(x)
2
dx +
Z
X
B˜(x)g(x)dx,
with
A˜(x) = X
N
n=1
EP(ωn|(g,λ)
old)
[ωn] δ(x − xn) + Z ∞
0
EP(ω|(g,λ)
old)
[ω]Λ( ˜ x, ω)dω,
B˜(x) = 1
2
X
N
n=1
δ(x − xn) −
1
2
Z ∞
0
Λ( ˜ x, ω)dω.
We have already tackled almost identical log–likelihood expressions in Section 3.1 (see Equation (20)). While for specific priors (with precision kernels given by differential operators)
an exact treatment in terms of solutions of ODEs or PDEs is possible, we will again resort to
the sparse GP approximation instead. The sparse version U
s
(gs
, λ) is obtained by replacing
g(x) → EP(g|gs
)
[g(x)] in U(g, λ). From this we obtain the sparse Q–function as
Q
s
((gs
, λ)|(gs
, λ)
old)
.= U
s
(gs
, λ) + ln p(λ) −
1
2
g
>
s K−1
s gs
. (31)
12    
Sigmoidal Gaussian Cox Process Inference
The function values gs and the maximal intensity λ that maximise Equation (31) can be
found analytically by solving
∂Qs
∂gs
= 0 and ∂Qs
∂λ = 0.
The final MAP estimate is obtained after convergence of the EM algorithm and the desired
sparse MAP solution for g(x) is given by (see Equation (27))
gMAP (x) = ks(x)
>K−1
s g
s
As for the variational scheme, integrals over the space X are approximated by Monte–
Carlo integration. An alternative derivation of the sparse MAP solution can be based on
restricting the minimisation of (30) to functions which are linear combinations of kernels
centred at the inducing points and using the definition of the RKHS norm (see (Rasmussen
and Williams, 2006, chap. 6)).
Sparse Laplace posterior To complete the computation of the Laplace approximation,
we need to evaluate the quadratic fluctuations around the MAP solution. We will also do
this with the previously obtained sparse approximation. The idea is that from the converged
MAP solution, we define a sparse likelihood of the Poisson model via the replacement
L
s
(gs
, λ)
.= L(D|EP(g|gs
)
[g] , λ)
For this sparse likelihood it is easy to compute the Laplace posterior using second derivatives. Here, the change of variables ρ = ln λ will be made to ensure that λ > 0. This
results in an effective log–normal density over the maximal intensity rate λ. While we do
not address hyperparameter selection for the Laplace posterior in this work, a straightforward approach, as suggested by Flaxman et al. (2017), could be to use cross validation
to optimise the kernel parameters while finding the MAP estimate or to use the Laplace
approximation to approximate the evidence. As in the variational case the inducing point
locations {xl}
L
l=1 will be on a regular grid over space X .
Note that for the Laplace approximation, the augmentation scheme is only used to compute the MAP estimate in an efficient way. There are no further mean–field approximations
involved. This also implies, that dependencies between gs and λ are retained.
3.3. Predictive density
Both variational and Laplace approximation yield a posterior distribution q over gs and λ.
The GP approximation at any given points in X is given by
q(g(x)) = Z Z p(g(x)|gs
)q(gs
, λ) dgsdλ,
which for both methods results in a normal density. To find the posterior mean of the
intensity function at a point x ∈ X one needs to compute
EQ [Λ(x)] = EQ

λ
Z ∞
−∞
σ(g(x))
.
13
Donner and Opper
For variational and Laplace posterior the expectation over λ can be computed analytically,
leaving the expectation over g(x), which is computed numerically via quadrature methods.
To evaluate the performance of inference results we are interested in computing the likelihood on test data Dtest, generated from the ground truth. We will consider two methods:
Sampling GPs g from the posterior we calculate the (log) mean of the test likelihood
`(Dtest) = ln EP [L(Dtest|Λ)|D] ≈ ln EQ [L(Dtest|Λ)]
= ln EQ
"
exp 
−
Z
X
λσ(g(x))dx
 Y
xn∈Dtest
λσ(g(xn))#
(32)
where the integral in the exponent is approximated by Monte–Carlo integration. The expectation is approximated by averaging over 2 × 103
samples from the inferred posterior Q
of λ and g at the observations of Dtest and the integration points.
Instead of sampling one can also obtain an analytic approximation for the log test likelihood
in Equation (32) by a second order Taylor expansion around the mean of the obtained
posterior. Applying this idea to the variational mean field posterior we get
`(Dtest) ≈ lnL(Dtest|ΛQ) + 1
2
EQ
h
(gs − µ
s
2
)
> Hgs


ΛQ
(gs − µ
s
2
)
i
+
1
2
Hλ|ΛQ
VarQ(λ),
(33)
where ΛQ(x) = EQ [λ] σ(EQ [g(x)]) and Hgs


ΛQ
, Hλ|ΛQ
are the second order derivative of
the likelihood in Equation (1) with respect to gs and λ at ΛQ. While an approximation only
involving the first term would neglect the uncertainties in the posterior (as done by John
and Hensman (2018)), the second and third term take these into account.
4. Results
Generating data from the model To evaluate the two newly developed algorithms we
generate data according to the sigmoidal Gaussian Cox process model
g ∼ pGP(·|0, k),
D ∼ pΛ(·),
where pΛ(·) is the Poisson process density over sets of point with Λ(x) = λσ(g(x)) and
pGP(·|0, k) is a GP density with mean 0 and covariance function k. As kernel we choose a
squared exponential function
k(x, x
0
) = θ
Y
d
i=1
exp 
−
(xi − x
0
i
)
2
2ν
2
i

,
where the hyperparameters are scalar θ and length scales ν = (ν1, . . . , νd)
>. Sampling of
the inhomogeneous Poisson process is done via thinning (Lewis and Shedler, 1979; Adams
et al., 2009). We assume that hyperparameters are known for subsequent experiments with
data sampled from the generative model.
14
Sigmoidal Gaussian Cox Process Inference
Benchmarks for sigmoidal Gaussian Cox process inference We compare the proposed algorithms to two alternative inference methods for the sigmoidal Gaussian Cox
process model. As an exact inference method we use the sampling approach of Adams
et al. (2009)4
. In terms of speed, a competitor is a different variational approach given by
Hensman et al. (2015) who proposed to discretise space X in several regular bins with size
∆. Then the likelihood in Equation (1) is approximated by
L(D|λσ(g(x))) ≈
Y
i
ppo(ni
|λσ(g(xi))∆),
where ppo is the Poisson distribution conditioned on the mean parameter, xi
is the centre
of bin i, and ni the number of observations within this bin. Using a (sparse) Gaussian
variational approximation the corresponding Kullback–Leibler divergence is minimised by
gradient ascent to find the optimal posterior over the GP g and a point estimate for λ. This
method was originally proposed for the log Cox-process (Λ(x) = e
g(x)
), but with the elegant
GPflow package (Matthews et al., 2017) implementation of the scaled sigmoid link function
is straightforward. It should be noted, that this method requires numerical integration over
the sigmoid link function to evaluate the variational lower bound at every spatial bin and
every gradient step, since it does not make use of our augmentation scheme (see Section 5
for discussion, how the proposed augmentation can be used for this model). We refer to this
inference algorithm as ‘variational Gauss’. To have fair comparison between the different
methods, the inducing points for all algorithms (except for the sampler) are equal and the
number of bins used to discretise the domain X for the variational Gauss algorithm is set
equal to the number of integration points used for the MC integration in the variational
mean field and the Laplace method.
Experiments on data from generative model As an illustrative example we sample a
one dimensional Poisson process with the generative model and perform inference with the
sampler (2×103
samples after 103 burn-in iterations), the mean field algorithm, the Laplace
approximation and the variational Gauss. In Figure 1 (a)–(d) the different posterior mean
intensity functions with their standard deviations are shown. For (b)–(d) 50 regularly
spaced inducing points are used. For (b)–(c) 2 × 103
random integration points are drawn
uniformly over the space X , while for (d) X is discretised into the same number of bins. All
algorithms recover the true intensity well. The mean field and the Laplace algorithm show
smaller posterior variance compared to the sampler. The fastest inference result is obtained
by the Laplace algorithm in 0.02 s, followed by the mean field (0.09), variational Gauss
(80) and the sampler (1.8 × 103
). The fast convergence of the Laplace and the variational
mean field algorithm is illustrated in Figure 1 (e), where objective functions of our two
algorithms (minus the maximum they converged to) is shown as a function of run time.
Both algorithms reach a plateau in only a few (∼ 6) iterations. To compare performance in
terms of log expected test likelihood `test (test sets Dtest sampled from the ground truth),
we averaged results over ten independent data sets. The posterior of the sampler yields the
highest value with 875.5, while variational (`test = 686.2, approximation by Equation (33)
yields 686.5), variational Gauss (686.7) and Laplace (686.1) yield all similar results (see also
Figure 4 (a)). The posterior density of the maximal intensity λ is shown in Figure 1 (f).
4. To increase efficiency, the GP values g are sampled by elliptical slice sampling (Murray et al., 2010).
15
Donner and Opper
100
200
300
(x)
Sampler Mean field
0 1 x
100
200
300
(x)
Laplace
0 1 x
Var. Gauss 0.0 Time [s] 0.1
20
10
0
O
bj. fu
nc. max
Mean field
Laplace
200 400
0
1
2
-D
e
nsity [×10
2
]
Mean field
Laplace
Sampler
Var. Gauss
True
(a) (b)
(c) (d)
(e)
(f)
Figure 1: Inference on 1D dataset. (a)–(d) Inference result for sampler, mean field
algorithm, Laplace approximation, and variational Gauss. Solid coloured lines
denote the mean intensity function, shaded areas mean ± standard deviation,
and dashed black lines the true rate functions. Vertical bars are observations D.
(e) Convergence of mean field and EM algorithm. Objective functions (Lower
bound for mean–field and log likelihood for EM algorithm, shifted such that
convergence is at 0) as function of run time (triangle marks one finished iteration
of the respective algorithm). (f) Inferred posterior densities over the maximal
intensity λ. Variational Gauss provides only a point estimate. Black vertical bar
denotes the true λ.
16
Sigmoidal Gaussian Cox Process Inference
     
  
 	 
Figure 2: Inference on 2D dataset. (a) Ground truth intensity function Λ(x) with observed dataset D (red dots).(b)–(e) Mean posterior intensity of the sampler, mean
field algorithm, Laplace, and variational Gauss are shown. 100 inducing points
on a regular grid (shown as coloured points) and 2500 integration points/bins are
used.
In Figure 2 we show inference results for a two dimensional Cox process example. 10×10
inducing points and 2500 integration points/bins are used for mean field, Laplace and
variational Gauss algorithm. The posterior mean of sampler (b), of the mean field (c), of
the Laplace (d) and of the variational Gauss algorithm (e) recover the true intensity rate
Λ(x) (a) well.
To evaluate the role of the number of inducing points and number of integration points
we generate 10 test sets Dtest from a process with the same intensity as in Figure 2(a).
We evaluate the log expected likelihood (Equation (32)) on these test sets and compute
the average. The result is shown for different numbers of inducing points (Figure 3(a)
with 2500 integration points) and different numbers of integration points (Figure 3(b) with
10 × 10 inducing points). To account for randomness of integration points the fitting is
repeated five times and the shaded area is between the minimum and maximum obtained
by these fits. For all approximate algorithms the log predictive test likelihood saturates
already for few inducing points (≈ 49 (7 × 7)) of the sparse GP. However, as expected,
the inference approximations are slightly inferior to the sampler. The log expected test
likelihood is hardly affected by the number of integration points as shown in Figure 3 (b).
Also the approximated test likelihood for the mean field algorithm in Equation (33) yields
good estimates of the sampled value (dashed line in (a) and (b)). In terms of runtime
(Figure 4 (c)–(d)) the mean field algorithm and the Laplace approximation are superior
by more than one order of magnitude to the variational Gauss algorithm for this particular
example. Difference increases with increasing number of inducing points.
In Figure 4 the four algorithms are compared on five different data sets sampled from
the generative model. As we observed for the previous examples the three different approximating algorithms yield qualitatively similar performance in terms of log test likelihood
`test, but the sampler is superior. Again the approximated test likelihood in Equation (33)
(blue star) provides good estimate of the sampled value. In addition we provide the approximated root mean squared error (RMSE, evaluated on a fine grid and normalised by
maximal intensity λ) between inferred mean and ground truth. In terms of run time the
mean field and Laplace algorithm are by at least on order of magnitude faster than the             
Donner and Opper
145
110
115
120
test [×10
1
]
145
110
115
120
9 25 49 81 121 169 225
Num. inducing points
10
1
10
1
10
3
Runtime [s]
900 2500 4900 8100 10000
Num. integration points
10
1
10
1
10
3
(a) (b)
(c) (d)
Figure 3: Evaluation of inference. (a) The log expected predictive likelihood averaged
over ten test sets as a function of the number of inducing points. Number of
integration points/bins is fixed to 2500. Results for sampler in (red), mean field
(blue), Laplace (orange), and variational Gauss (purple) algorithm. Solid line
denotes mean over five fits (same data), and shaded area denotes min. and
max. result. Dashed blue line shows the approximated log expected predictive
likelihood for the mean field algorithm. (b) Same as (a), but as function of
number of integration points. Number of inducing points is fixed to 10 × 10.
Below: Run time of the different algorithms as function of number of inducing
points (c) and number of integration points (d). Data are the same as in Figure 2.
18
Sigmoidal Gaussian Cox Process Inference
5
	5

ℓ  !






 


   
!





	






   
!










   
!




	






   
!











  
!



    
Figure 4: Performance on different artificial datasets. The sampler (S), the mean
field algorithm (MF), the Laplace (L), and variational Gauss (VG) are compared
on five different datasets with d–dimensions and N observations (one column
corresponds to one dataset). Top row: Log expected test likelihood of the different inference results. The star denotes the approximated test likelihood of the
variational algorithm. Center row: The approximated root mean squared error
(normalised by true maximal intensity rate λ). Bottom row: Run time in seconds.
The dataset (e) is intractable for the sampler due to the many observations. Data
in Figure 1 and 2 correspond to (a) and (c).
ational Gauss algorithm. In general, the mean–field algorithm seems to be slightly faster
than the Laplace.
General data sets and comparison to the approach of Lloyd et al. Next, we test
our variational mean field algorithm on data sets not coming from the generative model.
On such data sets we do not know, whether our model provides a good prior. As discussed
previously an alternative model was proposed by Lloyd et al. (2015) making use of the link
function Λ(x) = g
2
(x). While the sigmoidal Gaussian Cox process with the proposed augmentation scheme has analytic updates for the variational posterior, in case of the squared
Gaussian Cox process the likelihood integral can be solved analytically and does not need
to be sampled (if the kernel is a squared exponential and the domain is rectangular). Both
algorithms rely on the sparse GP approximation. To compare the two methods empirically
first we consider one dimensional data generated using a known intensity function. We
choose Λ(x) = 2 exp(−x/15) + exp(−(x − 25)2/100) on an interval [0, 50] already proposed
by Adams et al. (2009). We generate three training and test sets, where we scale this
rate function by factors of 1, 10, and 100 and fit the sigmoidal and squared                                                                                                           
Donner and Opper
x
(x)
N = 47
x
N = 453
x
N = 4652
(x) = g
2
(x)
(x) = max (g(x))
(a) (b) (c)
Figure 5: 1D example. Observations (black bars) are sampled from the same function
(black line) scaled by (a) 1, (b) 10, and (c) 100. Blue and green line show the
mean posterior of the sigmoidal and squared Gaussian Cox process, respectively.
Shaded area denotes mean ± standard deviation.
Λ(x) = λmaxσ(g(x)) Λ(x) = g
2
(x)
N Runtime [s] RMSE `test Runtime [s] RMSE `test
47 0.27 ± 0.30 0.24 ± 0.02 −43.43 ± 0.42 0.41 ± 0.05 0.24 −44.26 ± 0.09
453 0.50 ± 0.04 0.97 ± 0.13 720.81 ± 0.28 0.23 ± 0.05 2.11 710.43 ± 1.38
4652 0.41 ± 0.01 7.68 ± 0.75 17497.31 ± 2.13 0.79 ± 0.09 8.16 17496.75 ± 1.65
Table 1: Benchmarks for Figure 5 The mean and standard deviation of runtime, RMSE,
and log expected test likelihood for Figure 5(a)–(c) obtained from 5 fits. Note
that the RMSE for Λ(x) = g
2
(x) has no standard deviation, because the inference
algorithm is deterministic.
process with their corresponding variational algorithm to each training set5
. The number
of inducing points is 40 in this example. For our variational mean field algorithm we used
5000 integration points. The posterior intensity Λ(x) for the three data sets can be seen in
Figure 5. The model with the sigmoidal link function infers smoother posterior functions
with smaller variance compared to the posterior with the squared link function. For data
sets shown in Figure 5 we run the fits five times and report mean and standard deviation of
runtime, RMSE and log expected test likelihood `test in Table 1. Run times of the two algorithms are comparable, where for the intermediate data set the algorithm with the squared
link function is faster while for the largest data set the one with the sigmoidal link function
converges first. RMSE and `test are also comparable except for the intermediate data set,
where the sigmoidal model is the superior one.
Next we deal with two real world two dimensional data sets for comparison. The first
one is neuronal data, where spiking activity was recorded from a mouse, that was freely
moving in an arena (For The Biology Of Memory and Sargolini, 2014; Sargolini et al.,
2006). Here we consider as data D the position of the mouse when the recorded cell fired
and the observations are randomly assigned to either training or test set. In Figure 6 (a)
5. We thank Chris Lloyd and Tom Gunter for providing the code for inferring the variational posterior of
the squared Gaussian Cox process.
20
Sigmoidal Gaussian Cox Process Inference
the observations in the training set (N = 583) are shown. In Figure 6 (b) and (c) the
variational posterior’s mean intensity Λ(x) is shown obtained for the sigmoidal and the
squared link function, respectively, inferred with a regular grid of 20 × 20 inducing points.
As in Figure 5 we see that the sigmoidal posterior is the smoother one. The major difference
between the two algorithms (apart from the link function) is the fact that for the sigmoidal
model we are required to sample an interval over the space. We investigate the effect of the
number of integration points in terms of runtime6 and log expected test likelihood in Figure 6
(d). First, we observe regardless of the number of integration points that the variational
posterior of the squared link function yields the superior expected test likelihood. For the
sigmoidal model the test likelihood does not improve significantly with more integration
points. Runtimes of both algorithms are comparable, when 5000 integration points are
chosen. A speed up for our mean field algorithm is achieved by first fitting the model with
1000 integration points and once converged, redrawing the desired number of integration
points and rerun the algorithm (dotted line in Figure 6(d)). This method allows for a
significant speed up without loss in terms of test likelihood `test. The variational mean-field
algorithm with the sigmoid link function is faster with up to 5000 integration points and
equally fast with 10000 integration points.
As second data set we consider the Porto taxi data set (Moreira-Matias et al., 2013).
This data contains trajectories of taxi travels from the years 2013/14 in the city of Porto.
As John and Hensman (2018) we consider the pick-ups as observations of a Poisson process7
.
We consider 20000 taxi rides randomly split into training and test set (N = 10017 and
N = 9983, respectively). The training set is shown in Figure 6(e). Inducing points are
positioned on a regular grid of 20 × 20. The variational posterior mean of the respective
intensity is shown in Figure 6 (f) and (g). With as many data points as in these data the
differences between the two models are more subtle as compared to (b) and (c). In terms of
test likelihood `test the variational posterior of the sigmoidal model (with ≥ 2000 integration
points) outperforms the model with squared link function (Figure 6 (h)). For similar test
likelihoods `test our variational algorithm is ∼ 2× faster than the variational posterior with
squared link function. The results show that the choice of number of integration points
reduces to the question of speed vs accuracy trade–off. As for the previous data set, the
strategy of first fitting the posterior with 1000 integration points and then with the desired
number of integration points (dotted line) proves that we can get a significant speed up
without loosing predictive power.
5. Discussion and Outlook
Using a combination of two known variable augmentation methods, we derive a conjugate
representation for the posterior measure of a sigmoidal Gaussian Cox process. The approximation of the augmented posterior by a simple mean field factorisation yields an efficient
variational algorithm. The rationale behind this method is that the variational updates in
the conjugate model are explicit and analytical and do not require (black–box) gradient
6. Note, that - in contrast to Figures 3 and 4 - the runtime is displayed on linear scale, meaning both
algorithms are of same order of magnitude.
7. As John and Hensman (2018) report some regions to be highly peaked we consider only pickups happening
within the coordinates (41.147, −8.58) and (41.18, −8.65) in order to exclude those regions.
21
Donner and Opper
Neuronal Data
N = 583 (x) = max (g(x)) (x) = g
2
(x)
50
52
54
test [×10
1
]
1 2 5 10
Num. integration points [10
3
]
25
50
75
Runtime [s]
Taxi Data
N = 10017 (x) = max (g(x)) (x) = g
2
(x)
30
32
34
test [×10
3
]
1 2 5 10
Num. integration points [×10
3
]
200
300
Runtime [s]
(a) (b) (c) (d)
(e) (f) (g) (h)
Figure 6: Fits to real world data sets. (a) Position of the mouse while the recorded neuron spiked. (b) Posterior mean obtained by the variational mean–field algorithm
for the sigmoidal Gaussian Cox process. (c) Same as in (b) for the variational
approximation of the squared Gaussian Cox process. (d) Log expected test–
likelihood `test and runtime as function of number of integration points for both
algorithms. The dotted line is obtained by first fitting the sigmoidal model with
1000 integration points and then with the number that is indicated on the x-axis.
Shaded area is mean ± standard deviation obtained in 5 repeated fits. (e)–(h)
Same as (a)–(d), but for a data set, where the observations are positions of taxi
pick–ups in the city of Porto.
22
Sigmoidal Gaussian Cox Process Inference
descent methods. In fact, a comparison with a different variational algorithm for the same
model - not based on augmentation, but on direct approximation of the posterior with
a Gaussian - shows that the qualities of inference for both approaches are similar, while
the mean field algorithm is at least one order of magnitude faster. We use the same variable augmentation method for computation of the MAP estimate for the (unaugmented)
posterior by a fast EM algorithm. This is finally applied to the calculation of Laplace’s
approximation. Both methods yield an explicit result for the approximate GP posterior.
Since the corresponding effective likelihood contains a continuum of the GP latent variables,
the exact computations of means and marginal variances would require the inversion of a
linear operator instead of a simpler matrix inverse. While for specific priors, this problem
could be solved by PDE or ODE methods, we resort to a well known sparse GP approach
with inducing points in this paper. We can apply this to arbitrary kernels but need to
solve spatial integrals over the domain. These can be (at least for moderate dimensionality)
well approximated by simple Monte Carlo integration. Advantage of this approach is, that
one is not limited to rectangular domains. The only requirement is that the volume |X | is
known. An alternative Poisson model for which similar spatial integrals can be performed
analytically (Lloyd et al., 2015) within the sparse GP approximation (limited to squared
exponential kernels and rectangular domains) is based on a quadratic link function (Lloyd
et al., 2015; Flaxman et al., 2017; John and Hensman, 2018). We compare our variational
algorithm with the variational algorithm of Lloyd et al. (2015) on different data sets and
observe that both algorithms act on the same order of magnitude in terms of runtime (with
slight advantages for our variational mean field algorithm). As expected, we show that
whether one or the other model is better in predictive power is highly data dependent.
As an alternative to the Monte Carlo integration in our approach we could avoid the
infinite dimensionality of the latent GP from the beginning by working with a binning
scheme for the Poisson observations as in Hensman et al. (2015). It would be straightforward
to adopt our augmentation method to this case. The resulting Poisson likelihoods would
then be augmented by pairs of Poisson and P´olya–Gamma variables (see Donner and Opper
(2017)) for each bin. This approach could be favourable when the number of observed
data points becomes very large, because the discretisation method does not scale with the
number data points but with the resolution of discretisation. However, we do expect, that
any approach based on either spatial discretisation or on the sparse, inducing point method
would become problematic for large or high dimensional domains X . Alternative methods
based on spectral representations of kernels (Knollm¨uller et al., 2017; John and Hensman,
2018) are promising for tackling those problems.
It will be interesting to apply the variable augmentation method to other Bayesian models with the sigmoid link function. For example, the inherent boundedness of the resulting
intensity can be crucial for point processes such as the nonlinear Hawkes process (Hawkes,
1971) which is widely used for modelling stock market data (Embrechts et al., 2011) or seismic activity (Ogata, 1998). For other point process models the sigmoid function appears
naturally. We mention the kinetic Ising model, a Markov jump process (Donner and Opper,
2017) which was originally introduced to model the dynamics of classical spin systems in
physics. More recently it was used to model the joint activity of neurons (Dunn et al.,
2015). Finally, a Gaussian process density model introduced by (Murray et al., 2009) can
be treated by the augmentations developed in this work (Donner and Opper, 2018).
23
Donner and Opper
Acknowledgments
CD was supported by the Deutsche Forschungsgemeinschaft (GRK1589/2) and partially
funded by Deutsche Forschungsgemeinschaft (DFG) through grant CRC 1294 “Data Assimilation”, Project (A06) “Approximative Bayesian inference and model selection for stochastic
differential equations (SDEs)”.
24
Sigmoidal Gaussian Cox Process Inference
Appendix A. Poisson processes
In this paragraph we briefly summarise those properties of a Poisson process, which are
relevant for this work. For a thorough and more complete description we recommend the
concise book by Kingman (1993), particularly chapter 3 and 5.
We consider a general space Z and a countable subset ΠZ = {z; z ∈ Z}.
Definition of a Poisson process A random countable subset ΠZ ⊂ Z is a Poisson
process on Z, if
i) for any sequence of disjoint subsets {Zk ⊂ Z}K
k=1 the cardinality of the union
N(Zk)
.= | {ΠZ ∩ Zk} | is independent of N(Zl) for all l 6= k.
ii) N(Zk) is Poisson distributed with mean R
Zk
Λ(z)dz, and mean measure Λ(z) : X → R
+.
If the mean measure is constant (Λ(z) = Λ) the Poisson process is homogeneous, and
inhomogeneous otherwise.
Campbell’s Theorem Let ΠZ be a Poisson process on Z with mean measure Λ(z).
Furthermore, we define a function h(z) : Z → R and the sum
H(ΠZ) = X
z∈ΠZ
h(z).
If Λ(z) < ∞ for z ∈ Z, then
EPΛ
h
e
ξH(ΠZ )
i
= exp Z
Z

e
ξh(z) − 1

Λ(z)dz

, (36)
for any ξ ∈ C, such that the integral converges. PΛ is the probability measure of a Poisson
process with intensity Λ(z). Mean and variance are obtained as
EPΛ
[H(ΠZ)] = Z
Z
h(z)Λ(z)dz,
VarPΛ
[H(ΠZ)] = Z
Z
[h(z)]2Λ(z)dz.
Note, that Equation (36) defines the characteristic functional of a Poisson process.
Marked Poisson process Let ΠZ = {zn}
N
n=1 a Poisson process on Z with intensity Λ(z).
Then ΠZˆ = {(zn,mn)}
N
n=1 is again a Poisson process on the product space Zˆ = Z × M,
if mn ∼ p(mn|zn) is drawn independently at each zn. The mn ∈ M are the so–called
‘marks’, and the resulting Process is a marked Poisson process with intensity
Λ(z,m) = Λ(z)p(m|z).
It is straightforward to extend Campbell’s theorem and to show that the characteristic
functional of such a process is
EPΛ
h
e
ξH(ΠZˆ)
i
= exp Z
Zˆ

e
ξh(z,m) − 1

Λ(z,m) dmdz

, (37)
with h(z,m) : Z →ˆ R and H(ΠZˆ) = P
(z,m)∈ΠZˆ
h(z,m).
25
Donner and Opper
Appendix B. The P´olya-Gamma density
The P´olya-Gamma density (Polson et al., 2013) has the useful property, that it allows to
represent the inverse hyperbolic cosine by an infinite Gaussian mixture as
cosh−b
(c/2) = Z ∞
0
exp 
−
c
2
2
ω

pPG(ω|b, 0)dω,
with parameter b > 0. Furthermore, one can define a tilted P´olya-Gamma density as
pPG(ω|b, c) =
exp 
−
c
2
2
ω

cosh−b
(c/2)
pPG(ω|b, 0).
From those two equations the moment generating function can be obtained from the basic
definition, being
Z ∞
0
e
ξωpPG(ω|b, c)dω =
coshb
(c/2)
coshb
q
c
2/2−ξ
2
,
and differentiating with respect to ξ at ξ = 0 yields the first moment
EpPG [ω] = b
2c
tanh (c/2).
Appendix C. Variational inference for stochastic processes
Densities for random processes A stochastic process X with probability measure
P(X) often has no density with respect to Lebesgue measure, since X can be an infinite dimensional object such as a function for the case of a Gaussian process. However, one
can define densities with respect to another (reference) measure R(X) written as
p(X) = dP
dR(X), (38)
if R(X) is absolutely continuous with respect to P(X) (if R(X) = 0 then P(X) = 0). Using
such a density, expectations are
EP [f(X)] = Z
f(X)dP(X) = Z
f(x)p(x)dR(X) = ER [f(x)p(x)] .
The density in Equation (38) is known as the Radon–Nikod´ym derivative of R with respect
to P (Konstantopoulos et al., 2011).
Poisson process density As specific example consider the prior density of the Poisson
process in Equation (9), which is defined with respect to a reference measure
pΛ(ΠZ) = dPΛ
dPΛ0
(ΠZ) = exp 
−
Z
Z
(Λ(z) − Λ0(z))dz
 Y
zn∈ΠZ
Λ(zn)
Λ0(zn)
,
26
Sigmoidal Gaussian Cox Process Inference
where PΛ0
is the probability measure with intensity Λ0 and the expectation is defined as
EPΛ


X
zn∈ΠZ
u(zn)

 = EPΛ0

pΛ(ΠZ)
X
zn∈ΠZ
u(zn)

 . (39)
Calculating the expectation of e
ξH(ΠZ ) with Equation (39) we identify the characteristic
function of a Poisson process (see Equation (37)) with intensity Λ(z).
Kullback-Leibler divergence Using these densities we can express the Kullback-Leibler
divergence between two probability measures.
The KL–divergence between q(X) and p(X) is defined as
DKL(QkP) = EQ

log dQ
dP (X)

=
Z
log q(X)
p(X)
dQ(X),
where
q(X) = dQ
dR(X),
and where R(X) also is absolutely continuous to Q(X). The KL–divergence does not depend
on the reference measure R(X).
Appendix D. The posterior point process is a marked Poisson process
Here we prove that the optimal variational posterior point process in Equation (18) again
is a Poisson process using Campbell’s theorem. As posterior process in Equation (18) one
gets
q(ΠZ) = dQ
dPλ
(ΠZ) =
Q
zm∈ΠZ
e
f(zm)
EPλ
hQ
zm∈ΠZ
e
f(zm)
i =
Q
zm∈ΠZ
e
f(zm)
exp R
Z
(e
f(z) − 1)λ(z)dz
,
where ΠZ is some random set of points on space Z and Pλ is a random Poisson measure with
intensity λ(z). To proof, that the resulting point process density q(ΠZ) is again a Poisson
process we calculate the characteristic functional for some arbitrary function h : Z → R
EQ


Y
zm∈ΠZ
e
h(zm)

 =
EPλ
hQ
zm∈ΠZ
e
h(zm)+f(zm)
i
exp R
Z
(e
f(z) − 1)λ(z)dz

=
exp R
Z
(e
h(z)+f(z) − 1)λ(z)dz

exp R
Z
(e
f(z) − 1)λ(z)dz

= exp Z
Z
(e
h(z) − 1)e
f(z)λ(z)dz

= exp Z
Z
(e
h(z) − 1)ΛQ(z)dz

.
We identify the last row as the generating functional of a Poisson process (37) with ξ = 1.
The intensity of the process is ΛQ(z) = e
f(z)λ(z). With the fact that a Poisson process
is uniquely characterised by its generating function (Kingman, 1993, chap. 3), the proof is
complete.    
Donner and Opper
Appendix E. Sparse Gaussian process approximation
To solve the inference problem for the function g, we define a sparse GP, using the same
prior P, but by an effective likelihood which depends on a finite set of function values
gs = (g1, . . . , gL)
> only. Hence, we get
dQs
2
dP (g) = q
s
2
(gs
) (40)
and the sparse posterior measure is
dQs
2
(g) = q
s
2
(gs
)dP(g) = dP(g|gs
) × q
s
2
(gs
)dP(gs
),
where the last equality holds true, since Equation (40) only depends on gs
. The KL–
divergence between the full posterior density
q2
(g) = dQ2
dP (g) = e
U(g)
EP

e
U(g)

and the sparse one q
s
2
(gs
) is given by
DKL(Q
s
2kQ2) = EQs
2

log q
s
2
(gs
)
q2
(g)

= EP(gs
)

q
s
2
(gs
)EP(g|gs
)

log q
s
2
(gs
)
e
U(g)
 + const.
= EP(gs
)

q
s
2
(gs
) log q
s
2
(gs
)
e
EP (g|gs)
[U(g)] 
+ const.
From this we derive directly the posterior density for the sparse GP
q
s
2
(g) ∝ e
Us
(gs
)
,
with the sparse log–likelihood
U
s
(gs
) = EP(g|gs
)
[U(g)] = Z
U(g)dP(g|gs
).
28  
Sigmoidal Gaussian Cox Process Inference
Appendix F. Lower bound & hyperparameter optimization
The lower bound in Equation (12) is given by
L(q) =EQ

log
L(D, ωN , ΠXˆ|g, λ)
q1
(ωN )q1
(ΠXˆ)q
s
2
(g)q2
(λ)

=
Z
Xˆ
(EQ [f(ω, −g(x))] − EQ [log Λ1] + EQ [log λ] + 1) Λ1(x, ω)dxdω
−
Z
Xˆ
Λ1(x, ω)dxdω
+
X
N
n=1


EQ [f(ωn, gn)] + EQ [log λ] − cosh
c
(n)
1
2
!
+

c
(n)
1
2
2
EQ [ωn]


−
1
2
trace(K−1
s
(Σs
2 + µ
s
2
(µ
s
2
)
>)) −
1
2
log det(2πKs) + 1
2
log det(2πeΣ
s
2
)
+ α0 log β0 − log(Γ(α0)) + (α0 − 1)EQ [log λ] − β0EQ [λ]
+ α2 − log β2 + log Γ(α2) + (1 − α2)ψ(α2).
To optimise the covariance kernel parameters θ we differentiate the lower bound with respect to these parameters and perform then gradient ascent. The gradient for one specific
parameter θ is given by
∂L(q)
∂θ =
Z
Xˆ
∂EQ [f(ω, −g(x))]
∂θ Λ1(x, ω)dxdω +
X
N
n=1
∂EQ [f(ωn, g(xn))]
∂θ
−
1
2
trace(K−1
s
(Σs
2 + µ
s
2
(µ
s
2
)
>))
∂θ −
1
2
∂ log det(2πKs)
∂θ
=
Z
Xˆ
∂EQ [f(ω, −g(x))]
∂θ Λ1(x, ω)dxdω +
X
N
n=1
∂EQ [f(ωn, g(xn))]
∂θ
+
1
2
trace 
K−1
s
∂Ks
∂θ K−1
s
(Σs
2 + µ
s
2
(µ
s
2
)
>)

−
1
2
trace 
K−1
s
∂Ks
∂θ 
.
The derivatives of function EQ [f(ω, g(x))] are
∂EQ [f(ω, g(x))]
∂θ =
1
2

∂EQ [g(x)]
∂θ −
∂EQ

g(x)
2

∂θ EQ [ω]
!
,
with
∂EQ [g(x)]
∂θ =
∂κ(x)
∂θ µ
s
2
,
∂EQ

g(x)
2

∂θ =
∂˜k(x, x)
∂θ +
∂κ(x)
∂θ
> 
Σ
s
2 + µ
s
2
(µ
s
2
)
>

κ(x) + κ(x)
>

Σ
s
2 + µ
s
2
(µ
s
2
)
>
 ∂κ(x)
∂θ ,
29    
Donner and Opper
where κ(x) = ks(x)
>K−1
s and ˜k(x, x) = k(x, x) − ks(x)K−1
s ks(x)
>. The remaining two
terms are:
∂˜k(x, x)
∂θ =
∂k(x, x)
∂θ −
∂κ(x)
∂θ ks(x) − κ(x)
∂ks(x)
∂θ ,
∂κ(x)
∂θ =
∂ks(x)
>
∂θ K−1
s − ks(x)K−1
s
∂Ks
∂θ K−1
s
.
After each variational step the hyperparameters are updated by
θnew = θold + ε
∂L(q)
∂θ
,
where ε is the step size.
