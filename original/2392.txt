In this work, an adaptive learning model predictive control (ALMPC) scheme is proposed for the trajectory tracking of perturbed autonomous ground vehicles (AGVs) subject to input constraints. In order to estimate the unknown system parameter, we propose a set-membership-based parameter estimator based on the recursive least-squares (RLS) technique with the ensured nonincreasing estimation error. Then, the estimated system parameter is employed in MPC to improve the prediction accuracy. In the proposed ALMPC scheme, a robustness constraint is introduced into the MPC optimization to handle parametric and additive uncertainties. For the designed robustness constraint, its shape is decided off-line based on the invariant set, whereas its shrinkage rate is updated online according to the estimated upper bound of the estimation error, leading to further reduced conservatism and slightly increased computational complexity compared with the robust MPC methods. Furthermore, it is theoretically shown that the proposed ALMPC algorithm is recursively feasible under some derived conditions, and the closed-loop system is input-to-state stable (ISS). Finally, a numerical example and comparison study are conducted to illustrate the efficacy of the proposed method.

SECTION I.Introduction
Over the past decades, autonomous ground vehicles (AGVs) have received considerable attention in modern military and civilian areas due to the high maneuverability, agile mobility, and low cost of AGVs [1]. Among the related studies, trajectory tracking control is one of the fundamental control problems for AGVs. Many control schemes have been developed for the trajectory tracking of AGVs [2]–[3][4][5][6]. However, the main focus of the aforementioned works is to explore feedback control laws that regulate the tracking error. The physical constraints, such as the speed limit and workspace restriction, are ignored in these works. To address this issue, a general solution is to use the saturation function [7] or the barrier function [8], which, however, may degrade the control performance. Recently, model predictive control (MPC) has proven to be efficient on explicitly handling system constraints [9], [10]. The main insight of MPC is to obtain the control input by solving an online constrained optimization problem, where the system output behaviors are predicted and then optimized with respect to a prescribed performance index [9]. Therefore, system constraints can be systematically and exactly fulfilled, and the optimal closed-loop performance can be ensured.

Due to inherent advantages, MPC has been successfully employed in the AGV tracking problem. Gu and Hu [11] proposed a nonlinear MPC scheme for nonholonomic systems such that the asymptotic convergence of tracking errors is guaranteed. An MPC-based trajectory tracking controller is presented in [12], where a neurodynamic optimization method is employed to improve the computational efficiency. This approach has been extended to solve the AGV formation tracking problem in [13]. In the aforementioned MPC-based trajectory tracking methods, the presence of uncertainty is not considered, which, however, is inevitable in practical AGV applications. Alternatively, robust MPC (RMPC) has attracted increasing attention in the literature for the AGV tracking problem. In [14], an RMPC scheme with the constraint tightening is proposed for the AGV tracking problem to handle bounded external disturbances. Sun et al. [15] proposed a tube-based RMPC tracking control scheme capable of tackling external disturbances. The robustness constraint strategy is also employed in [15] to handle uncertainties for the comparison purpose.

Note that one general assumption in the aforementioned methods is that the uncertainty bound is a priori known. Most RMPC schemes rely on this bound to conduct the off-line computation of designable parameters. If this bound is unknown or time-varying, the closed-loop performance of RMPC becomes relatively conservative. In addition, most of the aforementioned works assume that the AGV system is perfectly modeled and is only perturbed by external disturbances, such as the wheel slipping and measurement noises. However, the presence of model mismatch is also inevitable in practical problems. A common solution to this problem in RMPC is to represent the parametric uncertainty as to the additive disturbance or to consider the worst case realization of the parametric uncertainty [9]. However, this strategy is conservative since it is difficult to accurately approximate the effects of the parametric uncertainty when the system states evolve over time. As an alternate promising solution, adaptive MPC incorporates online system identification into the MPC framework, which provides a less conservative solution capable of tackling both parametric uncertainties and additive disturbances compared with RMPC.

According to system identification strategies in the existing literature on the emerging topic of adaptive MPC, there are two representative categories: the persistent excitation (PE) condition-based method and the set-membership system identification-based method. The literature in the first category focuses on achieving the convergence of parameter estimates by introducing a PE condition, where the identified system model is employed in MPC to improve the prediction accuracy [16]–[17][18][19][20]. The satisfaction of the PE condition is guaranteed by introducing an additional excitation constraint on the cost function [16], system state [17], or control input [18] to the MPC optimization problem, which essentially imposes a lower bound on the system state. In [19] and [20], a dual-adaptive MPC framework is proposed, where the PE condition is satisfied by augmenting the cost function with a term related to the predicted covariance matrix. Furthermore, there have been various recent publications exploring the combination of the data-driven techniques with MPC, which is referred to as data-driven MPC [21]–[22][23][24]. The main feature of these works is to describe the system behaviors by using the Hankel matrices consisting of input and output history. As a result, this formulation requires less prior knowledge of the system model.

The second category subsumes the literature considering the set-membership system identification, in which the nonincreasing estimation errors can be guaranteed. The works in this category focus on reducing the conservatism of MPC algorithms by using the estimation of unknown parameters and uncertainty sets. The bounding sets for unknown parameters are described by ellipsoids or polytopes and updated consistently with available measurements and uncertainty description. The propagation of ellipsoidal bounding sets is designed by finding a Lyapunov function associated with the error of parameter estimation [25], [26]. In [25], a stabilizing adaptive MPC algorithm is proposed for the nonlinear system with parametric uncertainties, where a set-membership-based parameter estimator is incorporated into the min-max MPC framework. Zhang and Shi [26] considered a class of linear systems, in which a computationally tractable integration of the recursive least-squares (RLS) estimator and homothetic tube MPC is presented. The polytopic bounding set is constructed based on a priori information on additive disturbances [27]–[28][29]. The authors considered an uncertain finite impulse response (FIR) model in [27], where a tightened output constraint is designed based on the uncertainty set estimation. In [28] and [29], the combination of set-membership system identification with tube MPC is proposed, in which state tubes are developed and optimized online with respect to the parameter estimation to reduce the conservatism.

In this work, we develop an adaptive learning MPC (ALMPC) scheme for the AGV trajectory tracking problem with input constraints. Similar to [11] and [15], the dynamics of the tracking error represented in the local frame is first derived. Different from previous works considering the presence of external disturbances in the AGV trajectory tracking problem, this article considers an AGV system subject to both the parametric uncertainty and external disturbances. A set-membership-based parameter estimator is developed based on the RLS technique to identify the unknown system parameter with nonincreasing estimation error, which provides a less conservative bounding set to describe the unknown parameter. The nominal system model used in MPC is recursively updated based on the estimated system parameter, leading to improved prediction accuracy. Note that the existing adaptive MPC methods [25]–[26][27][28][29] cannot be directly extended to solve the current problem since the established error dynamics is nonlinear and time-varying.

Inspired by the robustness constraint method in [15] and [30]–[31][32], a novel ALMPC-based trajectory tracking scheme is proposed in this work. The main contribution of this work is to extend the RMPC framework in [32] to the AGV tracking error dynamic system subject to additive and parametric uncertainties. Similar to the RMPC method [32], the shape of the designed robustness constraint is computed off-line based on the invariant set, but a dynamic shrinkage rate is designed and updated online associated with the estimated bounding set, thereby giving rise to further enhanced performance with slightly increased computational complexity compared with the RMPC method [32]. Sufficient conditions on ensuring the recursive feasibility of the proposed ALMPC method are developed. We further prove that the closed-loop tracking system is input-to-state stable (ISS) under recursive updates of the system model. A numerical example and comparison study are provided to show the efficacy of the proposed method.

The remainder of this article is structured as follows. Section II outlines the problem formulation. The design procedures of the proposed set-membership-based parameter estimator and the ALMPC scheme are presented in Section III. In Section IV, the feasibility and stability results are summarized. Section V illustrates a numerical example to demonstrate the efficacy of the proposed method. Finally, Section VI concludes this work.

Notations: The symbols R and N are sets of real numbers and natural numbers, respectively. We use symbols R>0 and R≥0 to denote the sets of positive and nonnegative real numbers. N[a,b]={x∈N:a≤x≤b} . Given a column vector z∈Rn , its Euclidean and infinity norms are denoted by ∥z∥ and ∥z∥∞ , respectively. Its P -weighted norm is written as ∥z∥P=(zTPz)1/2 . For a matrix Z∈Rn×n , its maximum and minimum eigenvalues are denoted by λmax(Z) and λmin(Z) , respectively. We adopt col(z1,z2,…,zn) to denote the column operation [zT1,zT2,…,zTn]T for column vectors z1,z2,…,zn . Given a positive integer n , we use In to denote an identity matrix of size n×n . Let z1=[z11,z21,…,zn1]T and z2=[z12,z22,…,zn2]T be two n -dimensional column vectors, and we write z1≤z2 (z1≥z2) when zi1≤zi2 (zi1≥zi2) for all i∈N[1,N] . Given two matrices Z1,Z2∈Rn×n , Z1≺Z2 means that the matrix Z1−Z2 is negative definite.

SECTION II.Problem Formulation
In this section, the kinematic model of the AGV is first introduced. Then, the formulation of tracking problem is described. Finally, the control objective is presented.

A. AGV Kinematics
Consider a general AGV with two differential driving wheels, as shown in Fig. 1. Each wheel is independently driven by an actuator. The points po=(xo,yo) and ph=(x,y) are the midpoint between two wheels and the head position of the AGV, respectively. The head point ph locates at the perpendicular bisector of the wheel axis, and the distance between po and ph is r . Let θ(t) denote the AGV heading angle, and then, the kinematic model of the AGV is given by
η˙o(t)=fo(ηo(t),u(t))=⎡⎣⎢cosθ(t)sinθ(t)0001⎤⎦⎥u(t)(1)
View Sourcewhere ηo(t)=[xo(t),yo(t),θ(t)]T ; u(t)=[v(t),ω(t)]T is the control input; and v(t) and ω(t) are linear and angular velocities, respectively. Then, according to (1), the kinematics of the AGV’s head position ph is described as follows:
η˙(t)=fh(η(t),u(t),r)=⎡⎣⎢cosθ(t)sinθ(t)0−rsinθ(t)rcosθ(t)1⎤⎦⎥u(t)(2)
View Sourcewhere η(t)=[x(t),y(t),θ(t)]T is the AGV system state. It can be seen from (1) and (2) that the position of head point ph is derived from the point po . The vast majority of the literature on the AGV trajectory tracking problem assumes that the point po is the center of mass of the AGV. However, it is difficult to exactly measure the distance r between the points po and ph since the position information of po is usually inaccurate in practical control problems. Therefore, we assume that r is constant but unknown, whose true value is denoted by r∗ . In addition, we consider the bounded linear and angular velocities of the AGV given by |v(t)|≤vˇ,|ω(t)|≤ωˇ , where vˇ,ωˇ>0 are known constants. Then, the input constraint can be derived as U={u∈R2:Hu≤h} , in which H=[I2,−I2]T and h=[vˇ,ωˇ,vˇ,ωˇ]T .


Fig. 1.
Structure of an AGV system.

Show All

In this work, the main control design objective is to track a time-parameterized reference trajectory ηs(t)=[xs(t),ys(t),θs(t)]T . In order to avoid the singularity problem, we suppose that the reference trajectory satisfies the AGV kinematic model in (1) with a reference control input signal us(t)=[vs(t),ωs(t)]T , that is
η˙s(t)=fo(ηs(t),us(t)).(3)
View SourceSimilar to [3], [11], and [15], we define the tracking error state ηe(t)=[xe(t),ye(t),θe(t)]T in the local frame, which is given as follows:
ηe(t)=⎡⎣⎢cosθ(t)−sinθ(t)0sinθ(t)cosθ(t)0001⎤⎦⎥⎡⎣⎢xs(t)−x(t)ys(t)−y(t)θs(t)−θ(t)⎤⎦⎥.(4)
View SourceThen, based on (2) and (3), the following error dynamics can be derived:
η˙e(t)=⎡⎣⎢ω(t)ye(t)+vs(t)cosθe(t)−v(t)−ω(t)xe(t)+vs(t)sinθe(t)−rω(t)ωs(t)−ω(t)⎤⎦⎥.(5)
View Source

B. Tracking Problem Formulation
Since the designed tracking controller needs to be executed in the digital platform, we consider the discrete-time version of the system model in (2) by using the Euler forward approximation in the following. In addition, the presence of external disturbances caused by the wheel slipping is taken into account in this work, resulting in the following perturbed kinematics:
η(k+1)==f(η(k),u(k),r)+d(k)δfh(η(k),u(k),r)+η(k)+d(k)(6)
View Sourcewhere d(k)=[dx(k),dy(k),dθ(k)]T is the external disturbance and δ>0 is the sampling period. Its corresponding nominal system model is given by
η(k+1)=f(η(k),u(k),r).(7)
View SourceThen, we have the following general assumptions for the above systems.

Assumption 1:
The external disturbance d(k) and unknown parameter r belong to convex and compact sets D and R0 and bounded by constants dˇ≥∥d(k)∥,∀d(k)∈D , and rˇ≥|r| , ∀r∈R0 , where dˇ and rˇ are positive and known.

Assumption 2:
The reference system state ηs(k) and control input us(k) are bounded for all k≥0 .

Assumptions 1 and 2 indicate the bounded uncertainties and reference signals. Due to the limit of physical systems, Assumption 1 is commonly used in the literature on the AGV trajectory tracking problem. In addition, Assumption 2 can be satisfied by designing a suitable reference trajectory. Therefore, these assumptions are reasonable.

Define the AGV’s head position ph(k) , the reference position ps(k) , the position error pe(k) , and the control input u(k) as ph(k)=[x(k),y(k)]T,ps(k)=[xs(k),ys(k)]T,pe(k)=[xe(k),ye(k)]T , and u(k)=[v(k),ω(k)]T , respectively. According to the definition of error state in (4), pe(k) can be calculated by
pe(k)==fp(η(k),ηs(k))Ψ(θ(k))(ps(k)−ph(k))
View Sourcewhere
Ψ(θ(k))=[cosθ(k)−sinθ(k)sinθ(k)cosθ(k)].
View SourceWithout considering the external disturbance, the discrete-time version of the error dynamics in (5) is given as follows:
pe(k+1)=fe(pe(k),u(k),r)=A(ω(k))pe(k)+δue(k)(8)
View Sourcewhere
ue(k)=A(ω(k))=[vs(k)cosθe(k)−v(k)vs(k)sinθe(k)−rω(k)][1−δω(k)δω(k)1].
View Source

C. Control Objective
In this work, the control objective is to design a stabilizing trajectory tracking controller for the system (6) based on the ALMPC method to be developed, where the robust satisfaction of constraint U is guaranteed and the unknown parameter r is identified online. Given the prediction horizon T and the parameter estimate r^(k) , we use η¯(l|k),l∈N[k,k+T] , and p¯e(l|k) to denote the trajectories of predicted nominal state and error state under the control input u(l|k) with the nominal system model in (7) and the error dynamic model in (8), respectively. To achieve the desired objective, we propose a computationally tractable integration of the robustness constraint-based MPC scheme and online set-membership system identification. More specifically, the estimate r^(k) and the bounding set R(k) for the unknown parameter are updated consistently with a priori knowledge, i.e., the uncertainty sets D and R0 , and the input and state trajectories. Both r^(k) and R(k) are employed to construct the robustness constraint X(l|k),l∈N[k,k+T−1] , on the nominal error state p¯e(l|k) . Consequently, the control input is determined by the following finite horizon optimal control problem:
minuT(k)JT(pe(k),uT(k))s.t. η¯(k|k)=η(k)pe(k)=fp(η(k),ηs(k))η¯(l+1|k)=f(η¯(l|k),u(l|k),r^(k))p¯e(l|k)∈X(l|k),l∈N[k+1,k+T−1]u(l|k)∈U,l∈N[k,k+T−1]p¯e(k+T|k)∈Ω(9)
View Sourcewhere uT(k)=col(u(k|k),u(k+1|k),…,u(k+T−1|k)) is the control input sequence; Ω is the terminal constraint; JT(pe(k),uT(k))=∑k+T−1l=kℓ(p¯e(l|k),u(l|k))+ℓf(p¯e(k+T|k)) is the objective function; ℓ:R2×R2→R≥0 ; and ℓf:R2→R≥0 are the state and terminal cost functions to be designed, respectively. For the MPC optimization problem in (9), we have the following general assumption.

Assumption 3:
For the error dynamics in (8), there exist a terminal cost function ℓf:R2→R≥0 , a terminal control law τf:R2×R→R2 , and an invariant set Ω such that the following conditions hold:
τf(pe(k),r^(k))∈Ufe(pe(k),τf(pe(k),r^(k)))∈Ωℓf(fe(pe(k),τf(pe(k),r^(k))))−ℓf(pe(k))+ℓ(pe(k),ue(k))≤0(10a)(10b)(10c)
View Sourcefor all (pe(k),r^(k))∈Ω×R0 .

Assumption 3 describes the conditions on the terminal cost ℓf(pe(k)) , the terminal control law τf(pe(k),r^(k)) , and the invariant set Ω . Compared with the standard conditions used in RMPC methods [30]–[31][32], the main difference is that the terminal control law τf(pe(k),r^(k)) in our work depends on the parameter estimate r^(k) . Therefore, the methods presented in [30]–[31][32] cannot be applied to the current problem where the model parameter is recursively updated. To solve this problem, the detailed discussion on parameter selection for the satisfaction of Assumption 3 is presented in Section IV.

SECTION III.ALMPC Algorithm
In this section, we present an ALMPC scheme for this trajectory tracking problem. We first introduce a parameter estimator for the simultaneous estimation of the unknown parameter and the uncertainty set. Then, the formulation of the MPC optimization problem is presented. Finally, this section concludes with a summary of the proposed ALMPC algorithm.

A. Parameter Estimation
In the following, we use r^(k) and r~(k)=r∗−r^(k) to denote the estimate of the unknown system parameter r∗ and the corresponding estimation error at time k , respectively. Let h(k)=y(k)−y(k−1)−δv(k−1)sinθ(k−1) and g(k)=δω(k)cosθ(k) . Then, the regression model for the unknown parameter derived from (6) is given by h(k+1)=g(k)r∗+dy(k) . It is assumed that the uncertainty set R0 has a form R0={r∈R>0,|r−r¯0|≤σˇ} , where constants r¯0 and σˇ are positive.

At time instant k , assume that the true parameter r∗ belongs to a set R(k)={r∈R:(r−r^(k))2/ψ(k)≤σ^2(k)} , where ψ(k) and σ^(k) are variables to be designed later. In addition, Assumption 1 implies that |dy(k)|=|(h(k+1)−g(k)r∗)|≤dˇ . Then, we can find a set S(k+1)={r∈R:(h(k+1)−g(k)r)2≤dˇ2} such that r∗∈S(k+1) . Therefore, r∗ is consistent with both sets S(k+1) and R(k) .

Our purpose is to design the uncertainty set estimation R(k+1) such that S(k+1)∩R(k)⊆R(k+1) . Recall the set-membership identification algorithm in [33], the unknown parameter can be estimated as follows:
ψ−1(k+1)=r^(k+1)=h~(k+1)=G(k)=λf(k+1)=σ^2(k+1)=ψ−1(k)+λf(k+1)g2(k)r^(k)+λf(k+1)ψ(k+1)g(k)h~(k+1)h(k+1)−g(k)r^(k)g2(k)ψ(k)⎧⎩⎨⎪⎪0,1dˇG(k)(|h~(k+1)|−r),if h~2(k+1)≤dˇ2otherwiseσ^2(k)+λf(k+1)dˇ2−λf(k+1)h~2(k+1)1+λf(k+1)G(k)(11a)(11b)(11c)(11d)(11e)(11f)
View Sourcewhere ψ(0)=1 and σ^(0)=σˇ .

The following lemma shows the performance of parameter estimation.

Lemma 4:
[33] Suppose that Assumption 1 holds. For the bounded g(k) , the proposed parameter estimation scheme summarized in (11a)–(11f) has the following properties for all k>0 : 1) r∗∈R(k) if r∗∈R(0) and 2) |r~(k)| is bounded and nonincreasing.

Proof:
Consider a candidate of Lyapunov function V(r~(k))=r~2(k)ψ−1(k) . We show the satisfaction of each statement in the following.

Suppose that r∗∈R(k−1) . Following the analysis in [33] and [34] yields:
V(r~(k))=≤V(r~(k−1))+λf(k)(d2y(k)−h~2(k)1+λf(k)G(k−1))V(r~(k−1))+λf(k)(dˇ2−h~2(k)1+λf(k)G(k−1)).
View SourceThen, it can be derived from (11f) that V(r~(k))≤V(r~(k−1))+σ^2(k)−σ^2(k−1) . In addition, due to the fact r∗∈R(k−1) , we have V(r~(k−1))≤σ^2(k−1) , implying V(r~(k))≤σ^2(k) . Therefore, r∗∈R(k) . Since r∗∈R(0) , it can be concluded that r∗∈R(k),∀k≥0 .

According to (11e) and (11f), it can be derived that
σ^2(k)−σ^2(k−1)=λf(k)(dˇ2−h~2(k)1+λf(k)G(k−1))≤0
View Sourceleading to V(r~(k))≤V(r~(k−1)) . By (11a), one gets ψ−1(k)≥ψ−1(k−1) . Therefore, it is easy to verify that |r~(k)|2≤|r~(k−1)|2 . Since |r~(0)| is bounded, it can be concluded that |r~(k)| is bounded and nonincreasing.

Remark 5:
From Lemma 4, it can be seen that the proposed parameter estimation scheme presented in (11a)–(11f) ensures the estimation error to be bounded and nonincreasing. This property is sufficient for guaranteeing closed-loop properties of the proposed ALMPC algorithm. Note that, as shown in [33, Th. 3], if there exist two positive constants C1 and C2 such that the PE condition 0<C1≤∑k+Ni=kg2(i)≤C2 holds for the integer N and all k≥0 , the developed estimator can theoretically provide better performance of convergence, i.e., limk→∞|r~(k)|≤4Ndˇ2/C1 . As mentioned in Section I, this can be achieved by imposing the PE condition as an extra constraint to the MPC optimization problem (9). However, this strategy may degrade the control performance because of the undesired system excitation arisen from the excitation constraint. Therefore, the approach of introducing PE condition is not considered in this work.

B. ALMPC Algorithm
In this article, we consider a standard stage cost function ℓ(pe(k),ue(k)) and a terminal cost function ℓf(pe(k)) with a quadratic form
ℓ(pe(k),ue(k))=ℓf(pe(k))=∥pe(k)∥2Q+∥ue(k)∥2R∥pe(k)∥2P(12)
View Sourcewhere P,Q , and R are positive definite matrices with appropriate dimensions. The terminal control law τf(pe(k),r(k)) and invariant set Ω are designed as follows:
τf(pe(k),r(k))=Ω=Dr(k)(Kpe(k)+Dv(k)){pe∈R2:∥pe∥P≤ε}(13)
View Sourcewhere K∈R2×2 and ε>0 are the feedback gain matrix and constant, respectively; Dr(k)=diag(1,1/r(k)) and Dv(k)=[vs(k)cosθe(k),vs(k)sinθe(k)]T . The designable parameters should be chosen to satisfy the conditions in Assumption 3, as stated in Section IV. In the following, we demonstrate the parameterization of robustness constraint with respect to the estimated upper bound of the estimation error.

According to the definition of the bounding set R(k) , the estimation error r~(k) is bounded by |r~(k)|≤σ(k) for all r∗∈R0 , where σ(k)=ψ(k)−−−−√σ^(k) is a scalar. From the proof of Lemma 4, we have 0≤σ^(k)≤σ^(k−1) and ψ−1(k)≥ψ−1(k−1)>0 . As a result, σ(k)≤σ(k−1)≤σˇ for all k≥1 . Define the following dynamic shrinkage rate α(k) associated with the upper bound of the estimation error σ(k) :
α(k)=eξe⋅(σˇ−σ(k))ξα(14)
View Sourcewhere ξα,ξe>0 are tuning factors. Motivated by [30]–[31][32], we design the robustness constraint as follows:
X(l|k)={pe∈R2:∥pe∥≤α(k)ε(k+T−l)ξx+l−kT}(15)
View Sourcewhere ξx>1 is a constant. For the robust constraint (15), we have the following assumption.

Assumption 6:
Given the invariant set Ω , the robustness constraint satisfies the condition X(k+T|k)⊆Ω for all k≥0 .

Assumption 6 indicates X(k+T|k)⊆Ω for all k≥0 , which can be satisfied by choosing suitable parameters ξα,ξe . Therefore, the terminal constraint Ω in the optimization problem (9) can be omitted. Consequently, the proposed ALMPC scheme is based on the following new optimization problem:
VT(pe(k))=minuT(k)JT(pe(k),uT(k))s.t. η¯(k|k)=η(k),p¯e(k|k)=pe(k)η¯(l+1|k)=f(η¯(l|k),u(l|k),r^(k))p¯e(l|k)=fp(η¯(l|k),ηs(l+k))p¯e(l|k)∈X(l|k),l∈N[k,k+T]u(l|k)∈U,l∈N[k,k+T−1](16a)(16b)(16c)(16d)(16e)
View Sourcewhere pe(k)=fp(η(k),ηs(k)) . By solving this optimization problem, the sequence of optimal control inputs u∗T(k) is obtained. Then, the control input to be implemented at time instant k is u(k)=u∗(k|k) , leading to the following closed-loop system:
pe(k+1)=fe(pe(k),u∗(k|k),r∗)−Ψ(θ(k))dp(k)(17)
View Sourcewhere dp(k)=[dx(k),dy(k)]T . The proposed ALMPC scheme is summarized in Algorithm 1.

Algorithm 1 Proposed ALMPC Algorithm
Initial system state η(0) ; prediction horizon T ; sampling interval δ ; weighting matrices P,Q and R ; robustness constraint parameters ε,ξα,ξe and ξx .

for k=0,1,2,3,⋯ do

Measure the state η(k) .

if k>0 then

Update the estimation of the unknown parameter r^(k) and the uncertainty set R(k) by using (11a)–(11f).

end if

Solve the optimization problem in (16) to obtain the optimal control input sequence u∗T(k) .

Apply the input u(k)=u∗(k|k) to the system (6).

end for

Remark 7:
The robustness constraint approach is first proposed in [30] and is extended for the event-triggered RMPC problem in [31]. This strategy has been applied in [15] to solve the AGV trajectory tracking problem. Sun et al. [32] improved the original robustness constraint to provide an enlarged initial feasible region. Inspired by these works, we develop a new robustness constraint, which is parameterized by the estimated upper bound of the estimation error σ(k) . Compared with existing methods [15], [30]–[31][32] where a constant shrinkage rate α¯=1/ξα is employed, the dynamic shrinkage rate (14) is employed in this work. According to Lemma 4, it can be ensured that α(k)≥α¯ for all k≥0 . As a result, the size of X(l|k) is enlarged by introducing the dynamic shrinkage rate. Therefore, the proposed robustness constraint (15) is less conservative compared with the existing methods [15], [30]–[31][32].

SECTION IV.Theoretical Analysis
In this section, the main theoretical results of this work are developed. We first provide the guideline for parameter selection such that Assumption 3 holds. Then, sufficient conditions on ensuring the recursive feasibility and closed-loop stability are presented in Theorems 9 and 12, respectively.

A. Parameter Selection
The following lemma provides some guidelines on how to design parameters P,K , and ε such that Assumption 3 holds.

Lemma 8:
Suppose that Assumption 2 holds. Let hf=[ξuvˇ−vˇs,ξur–ωˇ−vˇs,ξuvˇ−vˇs,ξur–ωˇ−vˇs]T , where ξu∈(0,1],r–=minr∈R|r| and vˇs=maxk≥0|vs(k)| . For the error dynamics in (8), if the following conditions hold:
Ω⊆XU={pe∈R2:HKpe≤hf}(A(ω(k))+δK)TP(A(ω(k))+δK)−P≺−Q¯(18a)(18b)
View Sourcefor all |ω(k)|≤ξuωˇ and r^(k)∈R with Q¯=Q+KTRK , the terminal cost ℓf(pe(k)) , terminal controller τf(pe(k),r^(k)) , and the invariant set Ω presented in (12) and (13) satisfy the conditions in Assumption 3.

Proof:
To prove this lemma, we show the satisfaction of conditions (10a)–(10c) in the following.

Since pe(k)∈Ω⊆XU , we have
|k11xe(k)+k12ye(k)|≤|k21xe(k)+k22ye(k)|≤ξuvˇ−vˇsξur–ωˇ−vˇs
View Sourcewhere kij denotes the (i,j) th entry of the matrix K . Then, it can be derived from |r^(k)|≥r– and |vs(k)|≤vˇs that
|k11xe(k)+k12ye(k)+vs(k)cosθe(k)|≤ξuvˇ−vˇs+|vs(k)|≤ξuvˇ≤vˇ
View Sourceand
≤≤∣∣∣1r^(k)(k21xe(k)+k22ye(k)+vs(k)sinθe(k))∣∣∣∣∣∣1r^(k)∣∣∣(ξur–ωˇ−vˇs)+∣∣∣1r^(k)∣∣∣|vs(k)sinθe(k))|ξuωˇ≤ωˇ.
View Source

Therefore, it can be concluded that τf(pe(k),r^(k))∈U for all r^(k)∈R .

In addition, substituting τf(pe(k),r^(k)) into (8) yields pe(k+1)=(A(ω(k))+δK)pe(k) , where ω(k)=(1)/(r^(k))(k21xe(k)+k22ye(k)+vs(k)sinθe(k)) . Based on (18a), it can be derived that τf(pe(k),r^(k))∈ξuU , implying that |ω(k)|≤ξuωˇ . Since P,Q and R are positive definite, according to (18), one gets ∥pe(k+1)∥2P=pTe(k)(A(ω(k))+δK)TP(A(ω(k))+δK)pe(k)≤∥pe(k)∥2P≤ε , leading to pe(k+1)∈Ω . Therefore, the condition in (10c) is satisfied.

Consider the terminal cost function ℓf(pe(k)) and input ue(k)=τf(pe(k),r^(k)) , and we have
==ℓf(pe(k+1))−ℓf(pe(k))+ℓ(pe(k),ue(k))∥pe(k+1)∥2P+∥pe(k)∥2P+∥pe(k)∥2Q+∥ue(k)∥2Rpe(k)T(A(ω(k))+δK)TP(A(ω(k))+δK)−P)pe(k)+pe(k)T(Q+KTRK)pe(k).
View SourceThen, recalling (18b) yields ℓf(pe(k+1))−ℓf(pe(k))+ℓ(pe(k),τf(pe(k),r^(k)))≤0 , which completes the proof.

B. Recursive Feasibility
Recall the AGV kinematics in (2). For all u(k)∈U and η(k),η(k+1)∈R3 , it can be derived that
∥fh(η(k+1),u(k),r^(k+1))−fh(η(k),u(k),r^(k))∥e≤L(k+1)∥η(k+1)−η(k)∥(19)
View Sourcewhere L(k+1)=(2(vˇ2+ωˇ2max(r^2(k),r^2(k+1))))1/2 . Since r^(k)∈R for all k≥0 , there exists a constant Lˇ≥δ(2(vˇ2+ωˇ2rˇ2))1/2 such that δL(k)≤Lˇ,∀k≥0 .

The following theorem shows conditions under which the recursive feasibility of the formulated optimization problem can be guaranteed.

Theorem 9:
For the system (6), suppose that Assumptions 1–3 and 6 hold, and there exists a feasible solution for the MPC problem at time instant k=0 . Then, the proposed MPC scheme, as presented in Algorithm 1, is recursively feasible if the following conditions hold:
ξαTΔˇeLˇ(T−1)≤λmin(P)−−−−−−√eξeσˇ(T+ξx−1)≤ξαλmax(P−Q¯)−−−−−−−−−−√≤ε(ξx−1)Tξαλmin(P)−−−−−−√(20a)(20b)(20c)
View Sourcewhere Δˇ=δωˇσˇ+dˇ .

Proof:
Let u∗T(k) denote the optimal solution at time k and u∗T(k)=col(u∗(k|k),u∗(k+1|k),…,u∗(k+T−1|k)) . Correspondingly, under the optimal control input sequence u∗T(k) , the sequence of nominal states {η¯∗(l|k)}l∈N[k,k+T] is predicted by using the system model in (7) with online estimated parameter r^(k) and η¯∗(k|k)=η(k) . Similarly, we can obtain the corresponding nominal error state sequence {p¯∗e(l|k)}l∈N[k,k+T] . Then, we construct a candidate solution at time k+1 as follows: u¯T(k+1)=col(u∗(k+1|k),u∗(k+2|k),…,u∗(k+T−1|k),τf(p¯e(k+T|k+1),r^(k+1))) . Based on the control input sequence u¯T(k+1) , the true state η(k+1) , and the parameter estimate r^(k+1) , the corresponding nominal system state η¯(l|k+1),l∈N[k+1,k+T+1] and error state p¯e(l|k+1) at time k+1 can be computed, where η¯(k+1|k+1)=η(k+1) . To prove this theorem, we need to show that u¯T(k+1) is a feasible solution for the MPC problem in (16).

First, we show that the constraint (16d) is satisfied. When implementing the control input u(k)=u∗(k|k) , we evaluate the discrepancy between the true state η(k+1) and the nominal state η¯∗(k+1|k) (that was predicted at k ) in the following:
∥η(k+1)−η¯∗(k+1|k)∥e≤δ∥ω(k)∥∥r∗−r^(k)∥+∥d(k)∥≤Δ(k)(21)
View Sourcewhere Δ(k)=δ∥ω(k)∥σ(k)+dˇ . In addition
η¯∗(l+1|k)==δfh(η¯∗(l|k),u∗(l|k),r^(k))+η¯∗(l|k)∑i=klδfh(η¯∗(i|k),u∗(i|k),r^(k))+η¯∗(k|k).
View SourceThen, for l∈N[k+1,k+T−1] , the deviation between two predicted states, being predicted at two successive time instants, is evaluated in the following:
=≤≤∥η¯(l+1|k+1)−η¯∗(l+1|k)∥∥∥∥∑i=k+1lδfh(η¯(i|k+1),u∗(i|k),r^(k+1))−∑i=k+1lδfh(η¯∗(i|k),u∗(i|k),r^(k))−η¯∗(k+1|k)+η¯(k+1|k+1)∥∥∥∑i=k+1lδ∥fh(η¯(i|k+1),u∗(i|k),r^(k+1))−fh(η¯∗(i|k),u∗(i|k),r^(k))∥+∥η¯(k+1|k+1)−η¯∗(k+1|k)∥δL(k+1)∑i=k+1l∥η¯(i|k+1)−η¯∗(i|k)∥+Δ(k)
View Sourcewhere the last inequality is derived based on (19) and (21) with η¯(k+1|k+1)=η(k+1) . Then, according to the Gronwall–Bellman–Ou–Iang-type inequality [35, Th. 2.1], we derive the following upper bound for deviation between two predicted states:
∥η¯(l|k+1)−η¯∗(l|k)∥≤Δ(k)eδL(k+1)(l−k−1)≤ΔˇeLˇ(l−k−1)(22)
View Sourcefor all l∈N[k+1,k+T] . In addition, it can be seen from (4) that ∥p¯e(l|k+1)−p¯∗e(l|k)∥≤∥η¯(l|k+1)−η¯∗(l|k)∥ . Then, for p¯∗e(l|k)∈X(l|k) , one gets
∥p¯e(l|k+1)∥≤α(k)εξx(k+T−l)+l−kT+ΔˇeLˇ(l−k−1).(23)
View SourceThe above equation describes the upper bound of ∥p¯e(l|k+1)∥ . In addition, it can be seen from (15) that, if p¯e(l|k+1)∈X(l|k+1) , p¯e(l|k+1) must be bounded by
∥p¯e(l|k+1)∥≤α(k+1)εξx⋅(k+1+T−l)+l−k−1T.
View SourceTherefore, the satisfaction of constraint (16d) can be proved by showing that α(k+1)ε(ξx⋅(k+1+T−l)+l−k−1)/(T)≥α(k)ε(ξx(k+T−l)+l−k)/(T)+ΔˇeLˇ(l−k−1) .

From α(k+1)≥α(k) , we have
≥=α(k+1)εξx(k+1+T−l)+l−k−1T−α(k)εξx(k+T−l)+l−kTα(k)ε(ξx(k+1+T−l)+l−k−1T+ξx(k+T−l)+l−kT)α(k)εξx−1T.
View SourceUsing (14) and (20a) yields α(k)ε(ξx−1)/(T)≥(ε(ξx−1))/(ξαT)≥ΔˇeLˇ(T−1) . Consequently, we have
∥p¯e(l|k+1)∥≤≤α(k)εξx(k+T−l)+l−kT+ΔˇeLˇ(l−k−1)α(k+1)εξx(k+1+T−l)+l−k−1T
View Sourceimplying that p¯e(l|k+1)∈X(l|k+1) for l∈N[k+1,k+T] .

The next step is to show p¯e(k+T+1|k+1)∈X(k+T+1|k+1) . As shown in (23), ∥p¯e(k+T|k+1)∥≤α(k)ε+ΔˇeLˇ(T−1) . Since α(k)≤(eξeσˇ)/(ξα) and ΔˇeLˇ(T−1)≤(ε(ξx−1))/(ξαT) , it can be derived from (20b) that ∥p¯e(k+T|k+1)∥≤(ε)/((λmin(P))1/2) . As a result,
λmin(P)−−−−−−√∥p¯e(k+T|k+1)∥≤∥p¯e(k+T|k+1)∥P≤ε.
View SourceTherefore, we have p¯e(k+T|k+1)∈Ω . Moreover, Lemma 8 shows that ∥p¯e(k+T+1|k+1)∥2P≤p¯Te(k+T|k+1)(P−Q¯)p¯Te(k+T|k+1)≤λmax(P−Q¯)∥p¯e(k+T|k+1)∥2 . Then, by (20c), one gets
∥p¯e(k+T+1|k+1)∥≤λmax(P−Q¯)λmin(P)−−−−−−−−−−−√∥p¯e(k+T|k+1)∥≤λmax(P−Q¯)λmin(P)−−−−−−−−−−−√ε≤ε/ξα≤α(k)ε.
View SourceHence, we arrive at p¯e(k+T+1|k+1)∈X(k+T+1|k+1) , implying that constraint (16d) is satisfied.

The remainder of this proof is to show the satisfaction of constraint (16e). Since p¯e(k+T|k+1)∈Ω , τf(p¯e(k+T|k+1),r^(k+1))∈U by Lemma 8. In addition, u∗(l|k)∈U for all l∈N[k+1,k+T−1] . Therefore, it can be concluded that u¯T(k+1) is a feasible solution at time k+1 , which proves Theorem 9.

C. Closed-Loop Stability
Before presenting the theoretical analysis of the closed-loop stability, we first introduce the following definitions.

Definition 10 [36]:
The system (17) is ISS if there exist a KL -function γ1(⋅,⋅) and a K -function γ2(⋅) such that ∥pe(k)∥≤γ1(∥pe(0)∥,k)+γ2(dˇ) for all k≥0 .

Definition 11 [36]:
Consider the nonlinear system (17), and the function V:R2→R≥0 is called the ISS-Lyapunov function if there exist K∞ -functions β1(⋅),β2(⋅) , and β3(⋅) and a constant λw such that the following conditions hold for all k≥0 :
β1(∥(pe(k)∥≤V(pe(k))≤β2(∥(pe(k)∥),V(pe(k+1))−V(pe(k))≤−β3(∥(pe(k)∥)+λw.(24a)(24b)
View Source

The following theorem states the closed-loop behaviors of the error dynamics in (17) under the proposed ALMPC scheme presented in Algorithm 1.

Theorem 12:
For the system (6), suppose that Assumptions 1–3 and 6 hold, and the conditions in Theorem 9 are satisfied. Then, the closed-loop system (17) is ISS.

Proof:
To prove the closed-loop stability, we need to show that the optimal value function VT(pe(k)) is an ISS-Lyapunov function.

By (16), it can be seen that VT(pe(k))≥∥pe(k)∥2Q≥β1(∥pe(k)∥) with β1(∥pe(k)∥)=λmin(Q)∥pe(k)∥2 . The next step is to find the function β2(∥pe(k)∥) .

Let the optimal value function Vj(pe(k)),j∈N[0,T−1] be defined by (16) with T replaced by j and V0(pe(k))=ℓf(pe(k)) . For all pe(k)∈Ω , we have Vj+1(pe(k))−Vj(pe(k))≤ℓf(p¯∗e(k+j+1|k))−ℓf(p¯∗e(k+j|k))+ℓ(p¯∗e(k+j|k),τf(p¯∗e(k+j|k),r^(k)))≤0 , implying that VT(pe(k))≤V0(pe(k))=ℓf(pe(k))≤λmax(P)∥pe(k)∥2 .

For pe(k)∉Ω , we first need to show that VT(pe(k)) is bounded for all k≥0 . Since η¯∗(k|k)=η(k) , according to (21), one gets ∥η¯∗(k|k)∥≤∥η¯∗(k|k−1)∥+Δ(k)≤α(k−1)(ξx(T−1)+1)/(T)+Δˇ . In addition, Assumption 2 shows that ηs(k) and us(k) are bounded for all k≥0 . Therefore, p¯e(l|k) is bounded for all k≥0 and l∈N[k,k+T] . As a result, there exists a constant Vˇ>0 such that VT(pe(k))≤Vˇ for all pe(k)∉Ω . Let Bξr={pe∈R2:∥pe∥2≤ξr} where ξr>0 is a constant. Then, for pe(k)∉Bξr , we have ∥pe(k)∥2≥ξr and VT(pe(k))≤Vˇ , leading to VT(pe(k))≤(Vˇ)/(ξr)∥pe(k)∥2 . By setting β2(∥pe(k))∥)=max(λmax(P),(Vˇ)/(ξr))∥pe(k)∥2 , one gets VT(pe(k))≤β2(∥pe(k))∥) for all k≥0 .

The next step is to find the difference between VT(pe(k)) and VT(pe(k+1)) . Recalling the optimization problem in (16), one gets VT(pe(k+1))−VT(pe(k))≤Λ1+Λ2+Λ3 , where
Λ1=Λ2=Λ3=−ℓ(p¯∗e(k|k),u∗(k|k))∑l=k+1k+T−1(ℓ(p¯e(l|k+1),u∗(l|k))−ℓ(p¯∗e(l|k),u∗(l|k)))ℓf(p¯e(k+T+1|k+1))−ℓf(p¯∗e(k+T|k))+ℓ(p¯e(k+T|k+1),τf(p¯e(k+T|k+1),r^(k+1))).
View SourceThe upper bound of Λi,i=1,2 , and 3 is derived in the following. Apparently,
Λ1≤−∥p¯∗e(k|k)∥2Q=−∥pe(k)∥2Q≤β3(∥pe(k)∥)(25)
View Sourcewhere β3(∥pe(k)∥)=λmin(Q)∥pe(k)∥2 . In addition, using the triangle inequality leads to
Λ2=≤∑l=k+1k+T−1∥p¯e(l|k+1)∥2Q−∥p¯∗e(l|k)∥2Q∑l=k+1k+T−1λmax(Q)(∥p¯∗e(l|k+1)∥+∥p¯∗e(l|k)∥)⋅∥p¯e(l|k+1)−p¯∗e(l|k)∥.
View SourceSince p¯e(l|k+1)∈Xl|k+1 and p¯∗e(l|k)∈Xl|k , substituting ∥p¯e(l|k+1)−p¯∗e(l|k)∥≤ΔˇeLˇ(l−k−1) into the above inequality yields
Λ2≤∑l=k+1k+T−1λmax(Q)Δˇϕ(l,k)(26)
View Sourcewhere ϕ(l,k)=(eξeσˇ+Lˇ(l−k−1))/(Tξα)(2(k+T−l)ξx+2(l−k)+1−ξx) . In addition, because of p¯e(k+T+1|k+1)∈Ω , it follows from Assumption 3 that:
Λ3≤=ℓf(p¯e(k+T|k+1))−ℓf(p¯∗e(k+T|k))∥p¯e(k+T|k+1)∥2P−∥p¯∗e(k+T|k)∥2P.
View SourceAnalogously, the upper bound of Λ3 can be derived as follows:
Λ3≤λmax(P)Δˇϕ(k+T,k).(27)
View SourceThen, recalling (25)–(27) leads to VT(pe(k+1))−VT(pe(k))≤β3(∥pe(k)∥)+λw , where λw=Δˇ(∑k+T−1l=k+1λmax(Q)ϕ(l,k)+λmax(P)ϕ(k+T,k)) . Therefore, it can be concluded that the optimal value function VT(pe(k)) is an ISS-Lyapunov function, implying that the closed-loop system is ISS by [36, Th. 1].

Remark 13:
Theorems 9 and 12 present the sufficient conditions on ensuring recursive feasibility and closed-loop stability, depending on the upper bounds of the parametric uncertainty and additive disturbances. However, conditions (20a) and (20b) may result in a conservative bound on the admissible uncertainties. A potential solution to reduce the conservatism of the proposed method is to updated the invariant set Ω with respect to new estimation. Since the proposed estimator guarantees the estimation error to be nonincreasing, it is possible to update the invariant set Ω such that the size of Ω is nondecreasing. However, considering a time-varying invariant set will significantly increase the complexity of the proposed method, which may render the proposed method impractical. Therefore, the fixed invariant set is considered in this work. How to efficiently update the invariant set associated with the parameter estimation is a potential direction for our further research.

SECTION V.Numerical Example
In this section, a numerical example is illustrated to validate the proposed ALMPC algorithm. The linear and angular velocities of the AGV are bounded by vˇ=0.6 m/s and ωˇ=π/8 rad/s. The objective is to track a lemniscate reference trajectory described by xs(t)=sin(0.05t),ys(t)=sin(0.1t),θs=atan2(x˙s(t),y˙s(t)) , where atan2(⋅ ,⋅ ) is the four-quadrant inverse tangent function. The sampling interval is δ=0.1 s. In addition, D={d∈R3:∥d∥≤0.004} , and R0={r∈R:|r−r¯0|≤0.25} with r¯0=0.7 m. The true value of the unknown parameter is r∗=0.47 m. For the proposed estimator, r^(0)=r¯0 , and σ^(0)=0.25 m. For the proposed ALMPC scheme, the prediction horizon is chosen as T=5 . Set the weighting matrices as Q=0.02I2 and R=0.1I2 . Based on Lemma 8, we compute the following parameters:
P=ξu=[0.4656000.4656],K=[−0.444900−0.4449]1,ε=0.0996.
View SourceThen, according to feasibility conditions (20a)–(20c) in Theorem 9, the tuning parameters for the robustness constraint are given as follows: ξx=2.0823,ξe=0.0346 , and ξα=1.0457 .

To demonstrate the efficacy of the proposed method, we employ the RMPC scheme, which can be regarded as a special case of the proposed ALMPC scheme, if not incorporating the parameter estimation, for the purpose of comparison. Starting from the point η(0)=[0.2,−0.2,π/2]T , the trajectories of the AGV’s head point ph(k) are shown in Fig. 2, where the blue solid and red dashed–dotted lines denote the results by using the proposed ALMPC method and RMPC method, respectively. Fig. 3 shows the time evolution of the control inputs. It can be seen that the input constraint is satisfied by using both the ALMPC method and the RMPC method. The comparison of tracking errors pe(k) and input errors ue(k) by using two methods is shown in Fig. 4, and the trajectories of tracking errors pe(k) are illustrated in Fig. 5. As shown in these figures, it can be seen that the proposed ALMPC scheme can regulate the tracking error within a small region around the origin, which verifies our theoretical results. The results of parameter estimation are demonstrated in Fig. 6, showing that the convergence of parameter estimates r^(k) is achieved, while the estimated uncertainty set R(k) shrinks to a fixed set.


Fig. 2.
Trajectories of the AGV’s head point ph(k) .

Show All


Fig. 3.
Control inputs u(k) .

Show All


Fig. 4.
Tracking errors pe(k) and input errors ue(k) .

Show All


Fig. 5.
Trajectories of the tracking errors pe(k) .

Show All


Fig. 6.
Parameter estimation of r^(k) and σ(k) .

Show All

To further demonstrate the efficacy of the proposed method, we introduce the following performance indexes: Jp=∑Mi=0(∥pe(i)∥2Q+∥ue(i)∥2R),MSEx=(∑Mi=0∥pe(i)∥2)/M,MSEu=(∑Mi=0∥ue(i)∥2)/M , and V¯=∑Mi=0VT(pe(i)) , where M is the number of simulation steps. The comparison of system performance is illustrated in Table I. Compared with the RMPC method, the proposed ALMPC approach can reduce the cost and position tracking error by approximately 32.18% and 33.82%, respectively. To summarize, the presented numerical example has demonstrated that the proposed ALMPC scheme can regulate the tracking error within a small region while reducing the conservatism compared to the RMPC scheme.

TABLE I Comparison of System Performance

SECTION VI.Conclusion
In this work, we have developed a novel ALMPC algorithm for the trajectory tracking of input constrained AGV systems subject to parametric uncertainties and additive disturbances. Based on the RLS technique, we first developed the online set-membership-based parameter estimator being used to improve the prediction accuracy in MPC, where the estimation error was ensured to be nonincreasing. This estimator also provided the sequence of bounding sets for the unknown parameter. These sets were employed to design the robustness constraint for handling uncertainties. The shape of the designed robustness constraint was computed off-line based on the invariant set, whereas the shrinkage rate of this constraint was updated online associated with the estimated bounding set, thereby leading to the further reduced conservatism with slightly increased computational complexity compared with RMPC. We also established sufficient conditions for guaranteeing the recursive feasibility and closed-loop stability. The numerical example and comparison study have demonstrated the advantages of the proposed method.

