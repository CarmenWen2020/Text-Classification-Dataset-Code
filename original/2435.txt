This paper proposes an adaptive controller for chaos synchronization using quantum neural networks (QNN). The main purpose is to design a communication system for transmission of information securely. In many applications of chaotic systems, the exact model of system is not available and may involve uncertainties such as external disturbance and parametric uncertainties originating from environmental conditions. To estimate the uncertainties in the receiver and improve the accuracy of synchronization and recovering the message signal for secure communication applications, a QNN is used. The parameters of the proposed system should be estimated by applying the adaptive rules obtained by Lyapunov theorem. Taylor series expansion has been utilized to obtain a linear relation between the output of quantum neural network and its adaptive parameters. Simulation results show that the synchronization procedure for state variables of the master and slave systems is performed well with negligible synchronization error. Also, its application is investigated in secure communication and cryptography.

Introduction
Nowadays, due to the attacks of information interceptors and hackers, the need for keeping security and confirming the accuracy of the received messages has increased. The transmitted messages may have commercial, military or even medical applications. Therefore, protecting their security and preventing unauthorized access to this information is necessary.

Over the past few decades, chaos has been considered a powerful tool for encrypting and decrypting information in the transmitter and receiver. Chaos is oscillatory and shows unpredictable behavior in nonlinear dynamical systems [1]. The application of chaotic behavior can be used in other systems such as biological systems [2], fluid mechanics [3] and chemical systems [4]. One of the chaos features is high sensitivity to the initial conditions. Due to the irregular nature, chaos can provide high security for sending information through a public channel in communication systems. The system uses the pseudo-randomness of chaotic signals as a carrier to hide the information signals. Chaotic secure communication can be divided into three main types of chaotic masking [5], chaotic modulation and chaotic switching [6].

The message signals are usually continuous signals, which are masked by the transmitter chaotic signal as the carrier. These signals are retrieved on the receiver side by the process of synchronizing [7]. First, Pecora and Carroll introduced the idea of applying synchronized chaotic systems for secure communications [7]. After Pecora and Carroll, various methods of synchronization have been proposed, such as active control [8], linear feedback [9], sliding mode control [10], adaptive control [11], Fourier series expansion [12], Legendre polynomials [13] and intelligent methods such as neural networks [14] and fuzzy systems [15].

Neuro-fuzzy systems which are considered as intelligent systems have been used to synchronize chaotic systems. Intelligent methods do not require a precise mathematical model of the system unlike the classical methods, [16]. They are free from the mathematical model. Thus, these systems are robust and flexible in overcoming uncertainties [17]. Another advantage of intelligent systems is their learning ability to be adapted by complicated and unknown systems. Thus, they can be combined with classical methods to create new hybrid systems with the aim of achieving more satisfactory results.

Due to the powerful and extraordinary performance of quantum computing, some researchers have begun to explore the concepts of quantum calculating in the field of neural networks. The combination of quantum computing and neural network in a new approach led to the introduction of quantum neural network, which was considered as one of the best ways to improve computational efficiency of neural networks. The applications of these networks are growing because of their competitiveness with classic samples such as radial basis function neural networks (RBFN) or multi-layer perceptron (MLP). Quantum neural networks in similar to other neural networks can be utilized for uncertainty estimation and compensation in control systems. Eliminating the need for accurate mathematical model and parallel processing are common features of neural networks. However, the advantages of these networks over other alternatives are improved accuracy and estimation speed. One of the applications of quantum neural networks is in the construction of cryptographic systems, and by using these networks, synchronization of chaotic systems is performed more accurately and quickly in comparison with other networks [18]. Also, some fields such as fault diagnosis [19], multiuser detection [20] and image watermarking [21] use these networks.

Application of neural networks in chaotic secure communications and cryptography is very interesting and popular. Secure communication based on quantized synchronization of chaotic neural networks under an event-triggered strategy has been presented in [22]. Stability and synchronization analyses have been presented based on Lyapunov theorem and the performance of the proposed method in recovering image signals has been tested. In [23], deep learning techniques have been utilized in synchronization. In [24], adaptive synchronization of reaction–diffusion neural networks has been studied and its security on various attacks has been analysed. Impulsive synchronization of coupled delayed neural networks with actuator saturation has been presented in [25] and its performance on image encryption has been investigated. Single secret image sharing using neural cryptography has been presented in [26]. A novel chaotic memristive cellular neural network has been introduced in [27] and its performance on secure communication system has been studied. Fractional-order discrete chaotic neural networks have been studied in [28] and its efficiency in image encryption has been verified in [29].

Chaotic secure communication using QNN is investigated in this paper. A state feedback term and an uncertainty estimation using quantum neural network are embedded in the controller. The parameters of the proposed system are estimated by applying the adaptive rules obtained by stability analysis of the system. Estimating the uncertainties on the receiver and improving the accuracy of synchronization and recovering the message signal are done with a QNN for the secure communication application. The output of this neural network is not in linear form with respect to its unknown parameters. Thus, similar to the strategy adopted in [30], Taylor series expansion can be utilized to obtain a linear relation between the output of this neural network and its adaptive parameters. Moreover, the approximation error has been compensated.

The topological structure of radial basis function (RBF) neural networks is very simple. Moreover, they are universal approximators [31]. They have been used in many engineering applications such as nonlinear system modeling and control, signal processing, time series prediction and pattern recognition [32,33,34,35]. To study the influence of quantum neural network on the synchronization performance, a comparison is done between the proposed method and RBF neural network. Then, secure communication based on observer using QNN is presented.

The structure of the paper is organized as follows. System configuration is described in Sect. 2. In Sect. 3, multi-layer quantum neural networks are introduced. The proposed controller is explained in Sect. 4. Also, observer-based secure communication is presented in this section. Stability analysis is expressed in Sect. 5. In Sect. 6, the simulation results are investigated. Finally, conclusions are outlined in Sect. 7.

System configuration
Chaotic communication system consists of a chaotic transmitter, a channel and a chaotic receiver. In this paper, the Lorenz system has been chosen as the transmitter (master) and the Chen system as receiver (slave). Thus, for transmitter we have [36]:

𝑥˙1=𝑎1(𝑥2−𝑥1)𝑥˙2=𝑏1𝑥1−𝑥1𝑥3−𝑥2𝑥˙3=𝑥1𝑥2−𝑐1𝑥3
(1)
To show the chaotic behavior, the parameters of this system are set to 𝑎1=10, 𝑏1=28 and 𝑐1=8/3. Also, the Chen system is described as [37]:

𝑦˙1=𝑎2(𝑦2−𝑦1)+𝑑1(𝑡)+𝑢1𝑦˙2=(𝑏2−𝑎2)𝑦1−𝑦1𝑦3+𝑏2𝑦2+𝑑2(𝑡)+𝑢2𝑦˙3=𝑦1𝑦2−𝑐2𝑦3+𝑑3(𝑡)+𝑢3
(2)
where 𝑢1,𝑢2 and 𝑢3 are the control signals that should be designed to synchronize between the master and slave systems. Also, 𝑑1,𝑑2 and 𝑑3 are external disturbances. The parameters of the Chen system are selected as 𝑎2=35, 𝑏2=28 and 𝑐2=3 to show the chaotic behavior.

Define 𝑋=[𝑥1𝑥2𝑥3]𝑇 as the state vector of transmitter. Thus, one can rewrite (1) as follows:

𝑋˙=𝐴𝑋+𝑓(𝑋)𝐴=⎡⎣⎢⎢−𝑎1𝑏10𝑎1−1000−𝑐1⎤⎦⎥⎥,𝑓(𝑋)=⎡⎣⎢⎢0−𝑥1𝑥3𝑥1𝑥2⎤⎦⎥⎥
(3)
By defining 𝑌=[𝑦1𝑦2𝑦3]𝑇 as the state vector of receiver, (2) is written as:

𝑌˙=(𝐴+Δ𝐴)𝑌+𝑓(𝑌)+𝐵𝑢+𝑑𝑑=⎡⎣⎢⎢𝑑1𝑑2𝑑3⎤⎦⎥⎥,𝑢=⎡⎣⎢⎢𝑢1𝑢2𝑢3⎤⎦⎥⎥,𝑓(𝑌)=⎡⎣⎢⎢0−𝑦1𝑦3𝑦1𝑦2⎤⎦⎥⎥,𝐵=𝐼3,Δ𝐴=⎡⎣⎢⎢𝑎1−𝑎2−𝑎2+𝑏2−𝑏10(𝑎2−𝑎1)1+𝑏2000(𝑐1−𝑐2)⎤⎦⎥⎥
(4)
By defining the 𝐸=𝑌−𝑋 as synchronization error and using (3) and (4), the synchronization error is obtained by:

𝐸˙=𝐴𝐸+(Δ𝐴)𝑌+𝑓(𝑌)−𝑓(𝑋)+𝐵𝑢+𝑑
(5)
Multi-layer QNN
Qubit neuron model
‘‘Qubits’’ in quantum computers corresponds ‘‘bits’’ in classical computers. These qubits can save the states of circuits in quantum operations. Neuron states are related with quantum states in qubit neuron model.

By defining the ∣∣𝜑⟩ as the state of an arbitrary neuron, it is given by:

∣∣𝜑⟩=𝛼∣∣0⟩+𝛽∣∣1⟩
(6)
in which ∣∣0⟩ and ∣∣1⟩ contain one bit of information and express two quantum states. The complex numbers 𝛼 and 𝛽 are called probability amplitudes, such that:

|𝛼|2+|𝛽|2=1
(7)
Also, using the phase 𝜑, (7) can be described as [19]:

𝑓(𝜑)=cos(𝜑)+𝑖sin(𝜑)=𝑒𝑖𝜑
(8)
in which the real part of this statement shows the amplitude of the probability of ∣∣0⟩ and the imaginary part represents the amplitude of the probability of ∣∣1⟩ [38].

In Fig. 1, the qubit neuron model is illustrated and the output of a qubit neuron 𝑍 is given by:

𝑍=𝑓(𝑦)
(9)
𝑦=𝜋2𝑔(𝛿)−arg(𝑢)
(10)
𝑢=∑𝑙𝐿𝑓(𝜃𝑙+𝑦𝑙)−𝑓(𝜆)
(11)
𝑓(𝜃𝑙+𝑦𝑙)=𝑓(𝜃𝑙).𝑥𝑙
(12)
𝑥𝑙=𝑓(𝑦𝑙)
(13)
Fig. 1
figure 1
Structure of qubit neuron

Full size image
In these equations, the function 𝑓 is described in (8), the number of input neurons called 𝐿, and 𝑔 is the sigmoid function:

𝑔(𝛿)=11+𝑒−𝛿
(14)
Also, the parameters 𝜃𝑙, 𝜆 and 𝛿 are the connection weight, the threshold value and the reversal parameter, respectively.

Quantum neural network (QNN)
The schematic view of a qubit neural network with the three separate sets of neuron elements i.e., a three-layer QNN is illustrated in Fig. 2. The elements are: {𝐼𝑙}(𝑙=0,1,...,𝐿), {𝐻𝑚}(𝑚=0,1,...,𝑀) and {𝑂𝑛}(𝑛=0,1,...,𝑁), whereby the letters I, H and O stands for the Input, Hidden and Output layers, respectively [38].

Fig. 2
figure 2
Quantum neural network with three layer

Full size image
The First Layer This layer receives the input values, then converts the interval [0, 1] into quantum states that their phase values are located in the interval [0,𝜋/2]. The output of the 𝑙𝑡ℎ neuron in this layer using the aforementioned algorithm is calculated as:

𝑥𝐼𝑙=𝑓(𝑦𝐼𝑙)
(15)
𝑦𝐼𝑙=𝜋2𝑖𝑛𝑝𝑢𝑡𝑙
(16)
The Second Layer In this layer, each neuron is described by (9) to (13) and it is introduced as a hidden layer. For the 𝑚𝑡ℎ neuron we have:

𝑧𝐻𝑚=𝑓(𝑦𝐻𝑚)
(17)
𝑦𝐻𝑚=𝜋2𝑔(𝛿𝑚)−arctan(∑𝐿𝑙=1sin(𝜃𝑚𝑙+𝑦𝐼𝑙)−sin(𝜆𝑚)∑𝐿𝑙=1cos(𝜃𝑚𝑙+𝑦𝐼𝑙)−cos(𝜆𝑚))
(18)
The Third Layer This layer illustrates the output of the quantum neural network and has the same processing algorithm as the hidden layer [38]. By computing the probability for the basic state ∣∣1⟩ in the 𝑛𝑡ℎ neuron state 𝑍𝑂𝑛, the network's output is obtained by:

𝑜𝑢𝑡𝑝𝑢𝑡𝑛=Im(𝑧𝑂𝑛).Im(𝑧𝑂𝑛)
(19)
𝑍𝑂𝑛=𝑓(𝑦𝑂𝑛)
(20)
𝑦𝑂𝑛=𝜋2𝑔(𝛿𝑛)−arctan(∑𝑀𝑚=1sin(𝜃𝑛𝑚+𝑦𝐻𝑚)−sin(𝜆𝑛)∑𝑀𝑚=1cos(𝜃𝑛𝑚+𝑦𝐻𝑚)−cos(𝜆𝑛))
(21)
The proposed controller
Similar to other neural networks such as MLP and RBFN, quantum neural networks can be used as uncertainty estimator. In this paper, the controller is designed based on this idea.

Synchronization controller
Consider the following control law:

𝑢=−𝑘𝐸−𝜑̂ −𝑢𝑟
(22)
In fact, an uncertainty estimator using quantum neural network and a state feedback term are embedded in this law. By using the pole placement algorithm in (22), the matrix 𝑘 is designed. The eigenvalues of the matrix 𝐴𝑐=𝐴−𝐵𝑘 play an important role in the performance of the system and must be placed at some desired points. To verify that the system is controllable i.e., the eigenvalues can be moved desirably, the controllability matrix of the pair (𝐴,𝐵) defined in (1) should be calculated. Since the controllability matrix is of full rank, this task can be performed.

The term 𝜑̂  is considered as the uncertainty estimator using the quantum neural network and the term 𝑢𝑟 is placed for dealing with the approximation error.

The closed-loop equation is obtained by substitution of (22) into (5):

𝐸˙=𝐴𝐸+𝐵(−𝜑̂ −𝑢𝑟−𝑘𝐸)+𝐹(𝑡)
(23)
where 𝐹(𝑡)=(Δ𝐴)𝑌+𝑑(𝑡)+𝑓(𝑌)−𝑓(𝑋) is the uncertainty function. In order to estimate this function using QNN, assume that it can be represented by:

𝐹(𝑡)=𝜑∗+Δ(𝑡)
(24)
where 𝜑∗ is the best value that minimizes the error Δ=[Δ1Δ2Δ3]𝑇. To cancel the undesirable effects of Δ(𝑡) on the performance of the closed-loop system, the control term 𝑢𝑟 in the control law (22) has been added. Suppose that Δ𝑖(𝑖=1,2,3) is bounded by a known constant 𝜌𝑖. In other words, |Δ𝑖|≤𝜌𝑖. According to (23) and using the definition 𝐴𝑐=𝐴−𝐵𝑘, (22) is given by:

𝐸˙=𝐴𝑐𝐸+𝐵(𝜑̃ −𝑢𝑟+Δ(𝑡))
(25)
in which 𝜑̃ =𝜑∗−𝜑̂ . Due to the Taylor series expansion, we have:

𝜑̃ =⎡⎣⎢⎢⎢⎢𝜑̃ 1𝜑̃ 2⋮𝜑̃ 𝑛⎤⎦⎥⎥⎥⎥=⎡⎣⎢⎢⎢⎢⎢⎢⎢∂𝜑1∂𝛿∂𝜑2∂𝛿⋮∂𝜑𝑛∂𝛿⎤⎦⎥⎥⎥⎥⎥⎥⎥𝑇∣∣𝛿=𝛿̂ 𝛿̃ +⎡⎣⎢⎢⎢⎢⎢⎢⎢∂𝜑1∂𝜆∂𝜑2∂𝜆⋮∂𝜑𝑛∂𝜆⎤⎦⎥⎥⎥⎥⎥⎥⎥𝑇∣∣𝜆=𝜆̂ 𝜆̃ +⎡⎣⎢⎢⎢⎢⎢⎢⎢∂𝜑1∂𝜃∂𝜑2∂𝜃⋮∂𝜑𝑛∂𝜃⎤⎦⎥⎥⎥⎥⎥⎥⎥𝑇∣∣𝜃=𝜃̂ 𝜃̃ +𝜀=𝛼𝛿̃ +𝛽𝜆̃ +𝜔𝜃̃ +𝜀
(26)
where 𝛿̃ =𝛿∗−𝛿̂ , 𝜆̃ =𝜆∗−𝜆̂ , 𝜃̃ =𝜃∗−𝜃̂  and 𝜀=[𝜀1𝜀2𝜀3]𝑇 denotes higher order terms. It is assumed that 𝜀𝑖(𝑖=1,2,3) is bounded by a known constant 𝜂𝑖. In other words, |𝜀𝑖|≤𝜂𝑖. Moreover, we have

𝛼=[∂𝜑1∂𝛿∂𝜑2∂𝛿⋯∂𝜑𝑛∂𝛿]∣∣𝛿=𝛿̂ 
(27)
𝛽=[∂𝜑1∂𝜆∂𝜑2∂𝜆⋯∂𝜑𝑛∂𝜆]∣∣𝜆=𝜆̂ 
(28)
𝜔=[∂𝜑1∂𝜃∂𝜑2∂𝜃⋯∂𝜑𝑛∂𝜃]∣∣𝜃=𝜃̂ 
(29)
where

∂𝜑𝑖∂𝛿=[∂𝜑𝑖∂𝛿1∂𝜑𝑖∂𝛿2⋯∂𝜑𝑖∂𝛿𝑛]𝑇
(30)
∂𝜑𝑖∂𝜆=[∂𝜑𝑖∂𝜆1∂𝜑𝑖∂𝜆2⋯∂𝜑𝑖∂𝜆𝑛]𝑇
(31)
∂𝜑𝑖∂𝜃=[∂𝜑𝑖∂𝜃1∂𝜑𝑖∂𝜃2⋯∂𝜑𝑖∂𝜃𝑛]𝑇
(32)
In order to have an adaptive quantum neural network, some adaptation rules for 𝛿̂ , 𝜆̂  and 𝜃̂  should be obtained.

Stability analysis
For asymptotic convergence of the synchronization error to zero, a Lyapunov-based proof is presented. Consider the following Lyapunov function candidate:

𝑉=12𝐸𝑇𝑃𝐸+(𝛿̃ 𝑇𝛿̃ 2𝛾1+𝜆̃ 𝑇𝜆̃ 2𝛾2+𝜃̃ 𝑇𝜃̃ 2𝛾3)
(33)
where 𝑃 is a symmetric positive definite matrix [39]:

𝐴𝑇𝑐𝑃+𝑃𝐴𝑐=−𝑄
(34)
in which 𝑄>0 is chosen by designer. Also, 𝛾1,𝛾2 and 𝛾3 are positive constants. The time derivative of 𝑉 is given by:

𝑉˙=12(𝐸˙𝑇𝑃𝐸+𝐸𝑇𝑃𝐸˙)−(𝛿̃ 𝑇𝛿̂ ˙𝛾1+𝜆̃ 𝑇𝜆̂ ˙𝛾2+𝜃̃ 𝑇𝜃̂ ˙𝛾3)
(35)
Substituting 𝐸˙ from (25) into (35):

𝑉˙=12(𝐸𝑇𝐴𝑇𝑐+(𝜑̃ 𝑇−𝑢𝑇𝑟+Δ𝑇)𝐵𝑇)𝑃𝐸+12𝐸𝑇𝑃(𝐴𝑐𝐸+𝐵(𝜑̃ −𝑢𝑟+Δ))−(𝛿̃ 𝑇𝛿̂ ˙𝛾1+𝜆̃ 𝑇𝜆̂ ˙𝛾2+𝜃̃ 𝑇𝜃̂ ˙𝛾3)
(36)
As 𝑉 and 𝑉˙ are scalars and the matrix 𝑃 is symmetric, one can write:

𝜑̃ 𝑇𝐵𝑇𝑃𝐸=𝐸𝑇𝑃𝐵𝜑̃ 
(37)
(Δ𝑇−𝑢𝑇𝑟)𝐵𝑇𝑃𝐸=𝐸𝑇𝑃𝐵(Δ−𝑢𝑟)
(38)
Therefore, (36) can be written as

𝑉˙=12𝐸𝑇(𝐴𝑇𝑐𝑃+𝑃𝐴𝑐)𝐸+𝜑̃ 𝑇𝐵𝑇𝑃𝐸+𝐸𝑇𝑃𝐵(Δ−𝑢𝑟)−(𝛿̃ 𝑇𝛿̂ ˙𝛾1+𝜆̃ 𝑇𝜆̂ ˙𝛾2+𝜃̃ 𝑇𝜃̂ ˙𝛾3)
(39)
Consider the following adaptation rules:

𝛿̂ ˙=𝛾1𝛼𝑇𝐵𝑇𝑃𝐸
(40)
𝜆̂ ˙=𝛾2𝛽𝑇𝐵𝑇𝑃𝐸
(41)
𝜃̂ ˙=𝛾3𝜔𝑇𝐵𝑇𝑃𝐸
(42)
Using these adaptation laws and (26), (39) is given by

𝑉˙=−12𝐸𝑇𝑄𝐸+𝐸𝑇𝑃𝐵(Δ+𝜀−𝑢𝑟)
(43)
If we propose 𝑢𝑟 such that

𝐸𝑇𝑃𝐵(Δ+𝜀−𝑢𝑟)≤0
(44)
then, 𝑉˙≤0 is satisfied. Define 𝑆=𝐸𝑇𝑃𝐵=[𝑠1𝑠2𝑠3]. Suppose that Δ𝑖+𝜀𝑖−𝑢𝑟𝑖(𝑖=1,2,3) is the 𝑖𝑡ℎ element of the column vector Δ+𝜀−𝑢𝑟. Therefore, (44) can be represented as

∑𝑖=13𝑠𝑖(Δ𝑖+𝜀𝑖−𝑢𝑟𝑖)≤0
(45)
Suppose that 𝑢𝑟𝑖 is of the form

𝑢𝑟𝑖=𝜇𝑖𝑠𝑖𝑔𝑛(𝑠𝑖)
(46)
In fact, the inequalities |Δ𝑖+𝜀𝑖|≤|Δ𝑖|+|𝜀𝑖|≤𝜌𝑖+𝜂𝑖=𝜇𝑖 have been used in (46). Now, it should be shown that the inequality (45) can be satisfied by (46). Substitution of (46) into (45) yields

∑𝑖=13(𝑠𝑖(Δ𝑖+𝜀𝑖)−𝜇𝑖|𝑠𝑖|)≤0
(47)
To ensure that (47) is satisfied, it can be guaranteed that

∑𝑖=13(|𝑠𝑖||Δ𝑖+𝜀𝑖|−𝜇𝑖|𝑠𝑖|)≤0
(48)
In other words,

∑𝑖=13|𝑠𝑖|(|Δ𝑖+𝜀𝑖|−𝜇𝑖)≤0
(49)
Based on the assumption |Δ𝑖+𝜀𝑖|≤𝜇𝑖, (49) is always correct and 𝑉˙≤0 is realized. As a result, 𝐸 and 𝜑̃  are bounded [39], therefore:

𝑉(𝜑̃ (𝑡),𝐸(𝑡))≤𝑉(𝜑̃ (0),𝐸(0))
(50)
Consequently, 𝜑̂  is bounded. Thus, 𝑢 in (22) and 𝐸˙ in (25) are also bounded. Define Ω(𝑡)=0.5𝐸𝑇𝑄𝐸. Using (43), one can conclude that Ω(𝑡)≤−𝑉˙. As a result,

∫𝑡0Ω(𝜏)𝑑𝜏≤𝑉(𝜑̃ (0),𝐸(0))−𝑉(𝜑̃ (𝑡),𝐸(𝑡))
(51)
Since 𝑉(𝜑̃ (0),𝐸(0)) is bounded, 𝑉(𝜑̃ (𝑡),𝐸(𝑡)) is also bounded and non-increasing [40]. Thus, we can write

lim𝑡→∞∫𝑡0Ω(𝜏)𝑑𝜏≤∞
(52)
The function Ω˙(𝑡)=𝐸˙𝑇𝑄𝐸 is bounded since 𝐸˙ is bounded. Now, asymptotic convergence of the synchronization error 𝐸 to zero can be guaranteed by applying the Barbalat’s lemma [40].

Now, suppose

𝑓(𝑡)=∫𝑡0Ω(𝜏)𝑑𝜏
(53)
According to (52), as 𝑡→∞, the function 𝑓(𝑡) is bounded. It is obvious that

𝑓¨(𝑡)=Ω˙(𝑡)=𝐸˙𝑇𝑄𝐸
(54)
The function Ω˙(𝑡) is bonded. As a consequence of (54), 𝑓¨(𝑡) is bounded. Therefore, due to the Barbalat’s lemma, lim𝑡→∞𝑓˙(𝑡)=lim𝑡→∞Ω(𝑡)=0. Thus, according to the definition of Ω(𝑡), 𝐸 asymptotically converges to zero.

Simulation results
The effectiveness of QNN synchronization controller and the estimation efficiency of the quantum neural network is investigated in this section. Then, the results are compared with an RBF neural network synchronization controller. Finally, in a secure communication problem, the satisfactory performance of the controller using QNN is investigated.

The influence of QNN
The chaotic systems given in (1) and (2) are used as master and slave systems. Suppose that their initial conditions are different from each other. For example, assume that 𝑋(0)=[555]𝑇 and 𝑌(0)=[222]𝑇. Suppose that:

𝑘=⎡⎣⎢⎢30100284900057.3333⎤⎦⎥⎥
(55)
As a result, the eigenvalues of the closed-loop system are placed at − 40, − 50 and − 60. According to (35), in order to decrease 𝑉 as fast as possible, the eigenvalues of 𝑄 should be large values. Thus, 𝑄 is selected as 𝑄=600𝐼3 which results in

𝑃=⎡⎣⎢⎢7.500000060005⎤⎦⎥⎥
(56)
The synchronization performances are seen in Figs. 3, 4, 5. These figures show good synchronization. The control signal 𝑢 is illustrated in Fig. 6. It shows that the control efforts are bounded and there is no chattering in these signals.

Fig. 3
figure 3
Time response of x1 and y1 using QNN

Full size image
Fig. 4
figure 4
Time response of x2 and y2 using QNN

Full size image
Fig. 5
figure 5
Time response of x3 and y3 using QNN

Full size image
Fig. 6
figure 6
Control inputs using QNN

Full size image
Applying the controller, quantum neural network can estimate the lumped uncertainty. Consider the mean squared error criterion (MSE) in (57) to investigate the efficacy of uncertainty estimation using QNN:

𝑀𝑆𝐸=110∫010𝐸𝑇(𝑡)𝐸(𝑡)𝑑𝑡
(57)
By having the QNN in the control law, 𝑀𝑆𝐸=0.2163. In Fig. 7, the synchronization error of this approach is shown.

Fig. 7
figure 7
Synchronization error of the proposed method

Full size image
Comparison with an adaptive RBF
The mapping from input layer to hidden layer of an RBF neural network is described by a nonlinear function which is called the radial basis function [41, 42]. The output of hidden layer is

𝜉𝑖(𝑥)=exp(−‖𝑥−𝑐𝑖‖22𝜎2𝑖)𝑖=1,2,...,𝐿
(58)
where 𝑥∈𝑅𝑛 is input the vector, the number of hidden neurons is shown by 𝐿 and the parameters 𝑐𝑖 and 𝜎𝑖 are centers and widths of hidden neurons, respectively. For simplicity, 𝜉𝑖(𝑥) can be rewritten as

𝜉𝑖(𝑥)=exp(−‖𝑥−𝑐𝑖‖22𝜎2𝑖)𝑖=1,2,...,𝐿
(59)
The output of the total network is calculated by a linear combination of the outputs of hidden layer [42] as

𝑦𝑗(𝑥)=∑𝑖=1𝐿𝑤𝑗𝑖𝜉𝑖(𝑥)=𝑊𝑇𝑗ξξ
(60)
where 𝑦∈𝑅 is output vector, the weight vector of the network is 𝑊𝑗=[𝑤𝑗1,...,𝑤𝑗𝐿]𝑇 and ξξ=[𝜉1,𝜉2,...,𝜉𝐿]𝑇 is output vector of the second layer.

In this paper, the adjustable parameters of the RBF network are 𝑤𝑗𝑖, 𝑐𝑖 and 𝜎𝑖. The uncertainty estimator vector 𝜑̂  in (22) is modeled by the RBF neural network as:

𝜑̂ =𝜓̂ 𝜃̂ 
(61)
in which 𝜓̂ =𝑑𝑖𝑎𝑔{𝜉̂ 𝑇1,𝜉̂ 𝑇2,𝜉̂ 𝑇3} and the vector 𝜃̂ =[𝜃̂ 𝑇1,𝜃̂ 𝑇2,𝜃̂ 𝑇3]𝑇 can be calculated from the adaptation rules using Lyapunov stability analysis as:

𝜃̂ ˙=𝛾1𝜓̂ 𝑇𝑃𝐸
(62)
Also, the parameters 𝐜̂ 𝑖 and 𝜎̂ 𝑖 can be calculated from the adaptation rules as:

𝑐̂ ˙=𝛾2𝜃̂ 𝑇𝑅𝑇𝑃𝐸
(63)
𝜎̂ ˙=𝛾3𝜃̂ 𝑇𝑉𝑇𝑃𝐸
(64)
The master and slave systems with their initial conditions used in this section are the same as the previous subsection. The state variables using these adaptation laws are shown in Figs. 8, 9, 10. Also, synchronization error using RBF neural network controller is presented in Fig. 11. It is observed that the states of the chaotic systems using quantum neural network are synchronized more accurately and the synchronization error is smaller. Considering the mean squared error criterion (MSE) for RBF estimator, we have 𝑀𝑆𝐸=1.81 that shows estimating uncertainties using a quantum neural network significantly reduces the synchronization error.

Fig. 8
figure 8
Time response of x1 and y1 using RBF controller

Full size image
Fig. 9
figure 9
Time response of x2 and y2 using RBF controller

Full size image
Fig. 10
figure 10
Time response of x3 and y3 using RBF neural network controller

Full size image
Fig. 11
figure 11
Synchronization error using RBF controller

Full size image
Secure communication based on observer
In secure communication systems based on observer, just one signal is transmitted through the public channel to the receiver to increase the security and sending all state variables is not allowed. Then, in order to accomplish the decryption process and recover the message signal, an observer is designed to estimate other state variables. Now, the following master system is considered as [43]:

𝑋˙=𝐴𝑋+𝑓(𝑦)+𝐵𝑑(𝑡)
(65)
in which 𝑦 is the master output, 𝑑(𝑡) is disturbance which is considered as uncertainty and 𝑓(𝑦) is a known function. In description (24), we have 𝑑(𝑡)=𝜑∗+Δ(𝑡). Suppose that the following observer is located on the receiver side:

𝑋̂ ˙=𝐴𝑋̂ +𝑓(𝑦)+𝐵𝜑̂ +𝐿(𝑦−𝑦̂ )
(66)
The matrix 𝐿 is the gain matrix calculated based on the pole placement algorithm. Also, the term 𝜑̂  is uncertainty estimator using quantum neural network or RBF to overcome the uncertainty 𝑑, and 𝑢𝑟 is used to cancel the approximation error of the quantum neural network. Using (30) and (31), and also (22) to (29), it follows that:

𝐸̂ ˙=(𝐴−𝐿𝐶)𝐸̂ +𝐵(𝜑̂ −𝑢𝑟+Δ(𝑡))
(67)
in which the observer error is denoted by 𝐸̂ =𝑋−𝑋̂ . In Fig. 12, a schematic view of the total system is illustrated. The original message signal 𝑚(𝑡) is added to the output of the master system. Consider that 𝑥1 is the transmitter output. Consequently, another output 𝑦′ is produced in which 𝑚(𝑡) is hidden. Then, 𝑦′ is sent to the receiver. According to [43], the transmitter (65) is modified as:

𝑋˙=𝐴𝑋+𝑓(𝑦′)+𝐵𝑑+𝐿𝑚(𝑡),𝑦′=𝐶𝑋+𝑚(𝑡)
(68)
Fig. 12
figure 12
The schematic view of the system proposed in 6.3

Full size image
Define the observer equation as:

𝑋̂ ˙=𝐴𝑋̂ +𝑓(𝑦′)+𝐵(𝜑̂ )+𝐿(𝑦′−𝑦̂ )
(69)
The same procedure given in this paper can be used to verify that the error between 𝑋̂  and 𝑋 will converge to zeros as 𝑡→∞. Consequently, 𝑚(𝑡) will be obtained correctly at the receiver side. The reason is that:

lim𝑡→∞𝑚𝑟(𝑡)=lim𝑡→∞(𝑦′−𝑦̂ )=lim𝑡→∞(𝑦−𝑦̂ +𝑚(𝑡))=lim𝑡→∞𝑚(𝑡)
(70)
Assume the transmitter in the form of a Chua’s circuit:

𝑥˙1=−10(𝑓(𝑥1)−𝑥2+𝑥1)+𝑑(𝑡)𝑥˙2=𝑥3−𝑥2+𝑥1𝑥˙3=−0.385𝑥3−15𝑥2𝑦=𝑥1𝑓(𝑥1)=12(𝑎−𝑏)(|1+𝑥1|−|1−𝑥1|)+𝑏𝑥1𝑑(𝑡)=cos(2𝑡)
(71)
In which 𝑎 and 𝑏 are two negative values such that 𝑏=−0.69 and 𝑎=−1.28.

Now, suppose that:

𝑚(𝑡)=0.5sin(20𝑡)
(72)
Using this communication system, the original message will be recovered. The desired poles for this observer have been set to −40,−50 and −60. In Fig. 13, the influence of this state estimator in reconstruction of 𝑚(𝑡) is presented. According to Fig. 13, the error between the original and recovered messages is very small after a transient state and the signals converge to each other within less than 0.2 s.

Fig. 13
figure 13
The performance of message recovering by observer

Full size image
Combining the proposed method with the cryptographer
Usually, in order to encrypt 𝑚(𝑡), one of the state variables is used, for example 𝑥2. The encoded signal 𝐸𝑛 is added to the chaotic transmitter output and sent to the chaotic receiver. At the receiver, a state observer is designed which by receiving the transmitted signal, estimates other transmitter state variables to synchronize the receiver and transmitter. As a result, the estimated encrypted message 𝐸̂ 𝑛 is obtained.

Then, using 𝐸̂ 𝑛 and 𝑥̂ 2 the message signal is retrieved by the decrypter. The block diagram of this cryptography system is presented in Fig. 14.

Fig. 14
figure 14
The block diagram of cryptography system

Full size image
According to (66), the mathematical model of the transmitter is given by:

𝑋˙=𝐴𝑋+𝑓(𝑦′)+𝐵𝑑+𝐿𝐸𝑛(𝑡)
(73)
Using the n-shift encrypter [44, 45], the encrypted message is:

𝐸𝑛(𝑡)=𝑓1(...(𝑓1(𝑓1(𝑚(𝑡),𝐾(𝑡)),𝐾(𝑡)),...,𝐾(𝑡))
(74)
where the nonlinear function 𝑓1(𝑚(𝑡),𝐾(𝑡)) is described as follows:

𝑓1(𝑚,𝐾)=⎧⎩⎨⎪⎪𝑚+𝐾−2ℎℎ≤𝑚+𝐾≤2ℎ𝑚+𝐾−ℎ≤𝑚+𝐾≤ℎ𝑚+𝐾+2ℎ−2ℎ≤𝑚+𝐾≤−ℎ
(75)
Here, 𝑛=6 and ℎ=10 are selected and the key signal 𝐾(𝑡) is 𝑥2. The signal 𝑦(𝑡) is the output of the transmitter system defined in (71). According to Fig. 15, the following signal is transmitted through the communication channel to the receiver:

𝑧(𝑡)=𝑦(𝑡)+𝐸𝑛(𝑡)
(76)
Fig. 15
figure 15
Comparison of 𝐸̂ 𝑛(𝑡) and 𝐸𝑛(𝑡)

Full size image
The observer equation is given in (64). The estimated message of the encrypted signal is:

𝐸̂ 𝑛(𝑡)=𝑧(𝑡)−𝑧̂ (𝑡)𝑧̂ (𝑡)=𝑦̂ (𝑡)
(77)
Now, the decryption algorithm is formulated by using 𝐸̂ 𝑛(𝑡) and 𝐾̂ (𝑡)=𝑥̂ 2 as follows:

𝑚̂ =𝑓1(...(𝑓1(𝑓1(𝐸̂ 𝑛(𝑡),−𝐾̂ (𝑡)),−𝐾̂ (𝑡)),...,−𝐾̂ (𝑡))
(78)
The performance (69) in estimation of 𝐸𝑛(𝑡) is presented in Fig. 15. As shown in this picture, the proposed observer can accurately provide the encoded message well. The recovered and original message signals are illustrated in Fig. 16. In this figure, these signals are nearly the same in the steady state. The actual and estimated values of the key signal are presented in Fig. 17. A good convergence of these signals can be seen in this figure. The synchronization performances for other state variables are depicted in Figs. 18, 19. As shown in these figures, there are satisfactory convergences between the transmitter and observer state variables.

Fig. 16
figure 16
The signals 𝑚(𝑡) and 𝑚𝑟(𝑡) by combination of observer and encryption

Full size image
Fig. 17
figure 17
Real and estimated key signals using observers and encrypter

Full size image
Fig. 18
figure 18
Synchronizing of 𝑥1 and 𝑥̂ 1 using observer and encrypter

Full size image
Fig. 19
figure 19
Synchronizing of 𝑥3 and using observer and encrypter

Full size image
Recovering other message signals
Suppose that a square pulse is going to be encrypted and decrypted using the proposed scheme. The recovering performance is illustrated in Fig. 20. It is found that the observer performs well and the proposed method can recover the message signal with high accuracy.

Fig. 20
figure 20
Original and recovered square pulse signals using the proposed encrypter and observer

Full size image
Also, if we have a message with different carrier frequencies instead of a single-frequency message, the synchronization operation is performed well. In Fig. 21, three different frequencies (𝑓1=10, 𝑓2=5000 and 𝑓3=200) are used at different time intervals, where the message signal is retrieved with a very small error.

Fig.21
figure 21
Recovering a frequency variant message signal using the proposed scheme

Full size image
Conclusion
In this paper, adaptive QNN is used for chaos synchronization. The role of QNN is compensation of uncertainties in the synchronization process to improve the accuracy of message signal recovery. In most previous approaches using quantum neural networks, the network parameters are tuned using optimization algorithms. However, in this paper, based on Lyapunov stability analysis, some adaptation laws are derived for real-time adjustment of these parameters. Moreover, for increasing the accuracy, the approximation error of the quantum neural network is compensated using a control term obtained from stability analysis. Simulation results show the effectiveness performance of the proposed scheme. Also, based on the MSE criterion, quantum neural network outperforms RBF. In addition, the message signal retrieval in observer-based secure communication in the presence of encryptor and decryptor is investigated.

Keywords
Chaos synchronization
Quantum neural networks
Secure communication
Cryptography