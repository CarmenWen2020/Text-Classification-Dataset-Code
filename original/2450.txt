Modular technology is a mainstream industrial trend, especially in manufacturing transformation and upgrading. Modularization is fundamental in modular technology and plays an important role in modular production processes, such as modular design, manufacturing, and assembly. Previous modularization studies have neglected large-scale and complex mechanical products. Furthermore, the traditional modularization method generates coarse-grained modular results with complex structures and specific functions; these modules are difficult to standardize and apply in modular production processes for cross-family products. Therefore, this study proposes an action-granularity-oriented modularization strategy to obtain finer-granularity modules and emphasizes the simplicity, fundamentality, and typicality of these modules to increase their generality. This strategy clusters components into different modules at the action level by first analyzing the association strengths among the components based on the concept of key action components and a modularity-driven factor system. Then, with the help of the design structure matrix (DSM) theory and the evidence theory, the association information is synthesized to construct a synthetic association DSM. Additionally, a new modularization method combining the grouping genetic algorithm (GGA) and constrained genetic algorithm (CGA), called the hybrid GGA-CGA method, is developed to search for the optimal modular schemes among all possible solutions based on the synthetic association DSM. Finally, a modularization case for a typical complex mechanical product (a winding engine) is used to demonstrate the feasibility and effectiveness of the proposed hybrid method in addressing modularization.

Introduction
In recent years, along with the continuous development of the social economy, the transformation of production modes from mass production to small-batch customization production has been promoted by high demand for a customized market, which means that enterprises face the increased challenges of shortening the production cycle and reducing manufacturing costs [18, 43]. Modular technology is considered an effective solution in confronting these challenges [70]. By means of modular technology, product diversity can be obtained with higher production efficiency and lower cost [45, 52].

Modularization, as a basic and essential step in modular technology, has significant weight in the industry. With the widespread application of modular technology, modularization has made progress in the areas of healthcare (Xiaojin [68], service and product-service systems [14], building design [7, 47], legal service supply [16], and so on. Through a systematic literature review, it is found that the previous studies of modularization are mainly in the areas of the simple electromechanical product (e.g., refrigerators, desk lamps, and electric drills), service and management (e.g., legal service and tourism service), healthcare (e.g., elderly care and mental healthcare), architecture (e.g., high-rise building construction and off-site construction), and others (e.g., assembly system, semantic ontology, and infrastructure). Some literature on modularization examples for these areas and their main works are elaborated in Table 1.

Table 1 The application areas of modularization and various application examples
Full size table
Although modular technology is widely used in various fields, there are still some other problems for modular technology worthy of further study.

(1)
Based on Table 1, it can be found that the current modular technologies mainly focus on service and some simple mechanical and electrical products. Their applications in large-scale and complex mechanical products are still rarely studied.

(2)
How to maintain the balance between the modularity and commonality of the modules is still worthy of studying [54]. Generally, the finer the granularity is, the higher the commonality of the modules. However, it may reduce the modularity of modules and thereby violate the original intention of the modular technique. Conversely, the coarse-grained modules usually have high individuality and independent function performance, but too large granularity may lead the modules hard to be used in modular technology and also makes modularization meaningless. To obtain a reasonable granularity of the modules, researchers have presented some useful strategies. For example, Ji et al. [21] optimized the modular granularity by considering the tradeoffs between technical system modularity and material reuse modularity. Du et al. [12] managed to frame a leader–follower joint optimization (LFJO) method to maintain the balance between modularity and commonality in different modular stages. Zhong-kai Li et al. [30] proposed a hierarchical modular architecture design method to obtain the optimal granularity of modules by using the hierarchical clustering functions in the MATLAB tool. These studies are valuable for promoting modularization development. Nevertheless, most of the previous studies more focus on modularity and pay little attention to the commonality of the modules. Therefore, it is significant to develop a new modularization method to balance the modularity and commonality of modules, which can facilitate the commonality of modules.

(3)
In the modularization process, the association strengths among components need to be assessed under a modularity-driven factor system. Generally, modularity-driven factors can be considered from different perspectives, such as the product function, structure, materials, maintenance, costs, information transmission, and customer requirements [3], Yong [39, 49, 61, 69]. However, the previous factor selections usually ignore the modularization granularity, which leads to that the corresponding modules distribute at several different granularity scales and increases the difficulty of the applications and management of these modules.

(4)
To obtain an optimal modularization scheme, a variety of intelligent algorithms have been used to cluster components into modules, including particle swarm optimization (PSO) (Huimin [22], 23, the simulated annealing algorithm (SAA) [26, 53, 55], the genetic algorithm (GA) [9, 20, 24], and their integrated or modified versions [8, 19, 32, 44]. Among these intelligent modularization methods, GA-based methods are the most applied strategies. However, the classical GA-based methods are inefficient and usually need a larger coding space because of their binary encoding format, especially in a complex modularization environment that involves a large number of components, iterations, and alternative individuals. To overcome the limitation of the classical GA-based methods, some researchers have proposed some improved strategies, e.g., the constrained genetic algorithm (CGA) [21, 60] and grouping genetic algorithm (GGA) [61], Suiran [66]. However, it is often difficult for these methods to determine a reasonable number of modules and a satisfactory cluster scheme for a large-scale modularization problem.

Motivated by these issues, this paper proposes an action-granularity-oriented modularization approach using a hybrid GGA-CGA method, which can obtain an optimal modular scheme for complex mechanical products. The developed method can be divided into two stages. In the first stage, an action-granularity-oriented modularity-driven factor system is first constructed to assess the association strengths among the components of complex mechanical products. Then, based on the association assessments, a synthetic association design structure matrix (DSM) can be constructed. In the second stage, a new hybrid GGA-CGA method is developed to cluster the strongly associated components into one module and assign the weakly associated components to different modules. This hybrid method mainly includes three steps. The first step is to gather key action components (KACs) into different groups (called KAC groups) by using the GGA method. The second step is to assign all components into different modules (called KAC modules) centered around KACs using the CGA method. In this step, the number of modules is directly determined by the number of KACs, which avoids the subjectivity of the expert’s experiences in determining the number of modules. In the third step, the KAC groups generated in the first step and the KAC modules generated in the second step are aggregated to form action-granularity modules. By the above three steps, the complex mechanical products can be decomposed into a group of modules with specific granularity. Finally, the modularization of a winding engine is taken as an example to show the feasibility of the proposed hybrid GGA-CGA method, and some comparisons and discussions are presented to verify its effectiveness and superiority.

The framework of this paper is as follows: Sect. 2 shows the overview of the proposed modularization strategy. In Sect. 3, the synthetic association DSM was constructed to record the correlation strengths among components. Section 4 elaborates the principles and detailed steps of the hybrid GGA-CGA method in dealing with the modularization issue. Then, the proposed method is utilized to implement modularization for a winding engine in Sect. 5, which demonstrates the feasibility of the proposed hybrid GGA-CGA method. Section 6 provides several comparisons to discuss the performance of the proposed method, and a brief discussion of the action-granularity module is presented to illustrate the advantages of the modularization results. Section 7 gives the conclusions and provides future research directions.

Overview of the approach
Figure 1 shows the overview of the action-granularity-oriented modularization strategy for complex mechanical products. It mainly comprises two stages, i.e., stage 1 association strength assessment among components; stage 2 clustering components into action-granularity modules, where Stage 1 is the premise and foundation of stage 2. In stage 1, the association strength assessment is performed based on a double-layered modularity-driven factor system that is constructed from the perspective of action performance (C1), fault maintainability (C2), and physical correlation (C3). The weights of the criteria in the factor system are calculated using the analytic hierarchy process (AHP) method. Then, the triangular fuzzy theory is utilized to quantitatively evaluate the association strength between any two components under each criterion. Next, the evaluation results are merged using evidence theory with considering the relative weights to generate a set of synthetic association evaluation values. These synthetic association strengths expressed by triangular fuzzy numbers can be gathered to form a DSM, namely fuzzy synthetic association DSM. Finally, the center of gravity defuzzification method is used to defuzzify the DSM, and then, a crisp synthetic association DSM can be established.

Fig. 1
figure 1
Overview of the action-granularity-oriented modularization strategy

Full size image
Stage 2 (clustering components into action-granularity modules) aims to cluster the strongly associated components into the one module and separate the weakly associated components into different modules. Here, the association strength information between components displays in the synthetic association DSM established in the first stage. In this stage, the GGA method is used to clump KACs into several KAC groups based on the KACs’ association strengths that separated from the synthetic association DSM. Then, all components of the complex mechanical products are gathered into different modules based on the synthetic association DSM using the CGA method, where these modules are centered on the KACs and noted as KAC modules. Finally, the action-granularity modules can be generated by integrating the KAC groups and KAC modules.

By the above two stages, the proposed action-granularity-oriented modularization strategy based on the hybrid GGA-CGA method can cluster the components of complex mechanical products into specific granularity-oriented modules. These modules have a well performance in balancing the modularity and commonality, which can promote the application of modular technology in complex mechanical product. Hence, the developed framework not only provides a new point of view in the obtaining module process but contributes an available cluster method to address the clustering problem of large-scale objects.

Analysis of synthetic association strengths among components
Determination of the modularity-driven factors and their weights
To analyze the associations among the components of complex mechanical products, a modularity-driven factor system (or association evaluation criteria system) needs to be established first. Some previous studies presented various modularity-driven factors from different aspects to assess the associations between components, such as product functions, structures, materials, maintenance, costs, information transmission ability, and customer requirements. Although these factors are useful for the conventional modular design, they are not designed for a specific module granularity. The modular results do not belong to the same granularity level, and their granularity is usually coarse; e.g., there are function modules and subfunction modules. These coarse-grained modules are weak in versatility, which means they are mainly used to design a single series of products and are difficult to employ in the design of new products with great changes in function and structure compared to previous products. In this study, an action-granularity-oriented modular design-driven factor system, which considers action performance, fault maintainability, and physical correlations, is developed to draw lessons from previous studies.

(1)
Action performance. First, the concept of a key action component (KAC) is defined, which includes the main action transmission components, the action input components, and the terminal executive components in complex equipment, such as transmission shafts, gears, racks, worms, worm gears, screws, electric motors, and terminal grippers. Action performance is an essential association evaluation criterion of components in modular design procedures, and it reflects the ability of KACs in action-granularity modules to complete their specific actions accurately and reliably. Action performance can be analyzed from the three subcriteria of accuracy, reliability, and stability. Accuracy refers to the ability of KACs to maintain a precise action velocity, action time, and starting and stopping position. Reliability refers to the capacity of KACs to accomplish their specified actions within the specified time. Stability refers to the capability of KACs to resist interference during the action process. The association analysis of components under these three subcriteria can be implemented based on direct and indirect considerations. The principle of association analysis under the criterion of action performance is expressed graphically in Fig. 2. Its main idea is that the association strengths between components are determined by the influence analysis of the components’ cooperation and the components themselves on the performance (in terms of accuracy, reliability, and stability) of specific actions of KACs.

Fig. 2
figure 2
The principle of association analyses of components under the criterion action performance

Full size image
Figure 3 shows a part of the transmission chain of a mechanical product, in which the motor shaft and ball screw are the KACs, and both of their actions are to rotate at a constant speed. The association analysis under the action performance criterion should mainly consider the influences of the components’ relationships on the performance (in terms of accuracy, reliability, and stability) of the rotation action of the motor shaft and ball screw. Taking the motor shaft as an example, its rotation speed and starting and stopping time are directly controlled by the power source motor. Hence, the motor is a key component for the motor shaft to ensure its rotation accuracy. Based on the above discussion, it can be concluded that there is a high degree of association between the motor and motor shaft under the subcriterion of accuracy. In addition, the motor base, as the support of the motor and motor shaft, will lead to the production of noise and vibration in the rotation of the motor shaft if its design structure, material selection, and machining precision are unreasonable. Therefore, the degree of association between the motor base and motor shaft and that between the motor base and motor are very high under the stability criterion. In addition, although the ball screw has no direct influence on the rotation of the motor shaft, the motor shaft, as the action input component for the ball screw, has a great impact on the accuracy, reliability, and stability of the rotation of the ball screw. Thus, there is a high association degree between the two KACs of the motor shaft and ball screw under the action performance factor.

Fig. 3
figure 3
A portion of transmission chain for a mechanical product

Full size image
(2)
Fault maintainability. A fault of the action-granularity module is defined as the KACs in the action-granularity module being unable to finish their specified action within a specified time. In fault maintenance, some components show a strong correlation. For instance, suppose there is a failure mode caused by a faulty component. A nonfaulty component needs to be torn down during the process of the dismantling and repair or replacement of the faulty component, which indicates that there is a strong maintenance correlation, called a dismantlement correlation, between the nonfaulty component and the faulty component. In addition, when a faulty component is repaired or replaced, some other nonfaulty components need to be repaired or replaced synchronously due to their matching conditions, which indicates a strong correlation, called maintenance matching, between the failed component and the nonfaulty components. For example, as we can see from Fig. 3, when the rotation of the ball screw is faulty due to the failure of component 12 (lock nut), the maintenance or replacement of component 12 must be executed after the dismantlement of components 13 (spacer sleeve), 14 (screw seat), 15 (right bearing), 16 (gland), 17 (spacer sleeve), and 18 (lock nut). Therefore, there is a high degree of dismantlement correlation between component 12 and components 13, 14, 15, 16, 17, and 18. In addition, if the ball screw is seriously worn down because of the failure of component 12 (lock nut), the ball screw needs to be replaced or repaired along with the replacement or repair of component 12, which indicates a strong maintenance matching between component 12 and the ball screw.

(3)
Physical correlation. Generally, the physical correlation of intramodule components is stronger than that of intermodule components. Thus, it can be regarded as an important driving factor in modular design. Physical correlations can be analyzed from two subcriteria, structure correlations and information correlations. A structure correlation refers to the correlation strength of the structure connecting two components and is mainly analyzed from the two perspectives of connection types and connection elements. Connection types include clearance fit, transition fit, interference fit, destructive connections, and fixed connections. Connection elements include points, lines, surfaces, and combination elements (such as multisurface and multipoint elements). An information correlation refers to a correlation of components and is reflected in the transmission and transformation of various information, which are determined from the coupling forms between components. Coupling forms include noncoupling, unidirectional coupling, and bidirectional coupling, which are displayed in Table 2. The process of analyzing the associations among components is illustrated in Fig. 4.

Table 2 The coupling forms among components
Full size table
Fig. 4
figure 4
The process of association analysis among components

Full size image
Based on the above discussion, the driving factor system for action-granularity modular design can be established as Fig. 5 and consists of two layers, called the primary and secondary criteria. The first layer contains three criteria, i.e., action performance, fault maintainability, and physical correlations. The second layer includes seven subcriteria, i.e., accuracy, reliability, stability, dismantlement correlations, maintenance matching, structure correlations, and information correlations.

Fig. 5
figure 5
The driven factor system for e action-granularity modular design

Full size image
In the process of evaluating associations among the components, the relative importance of the primary criteria and secondary criteria are different, and this should be considered in modular design. Therefore, in this study, the AHP method is employed to compute the relative weights of these primary and secondary criteria. Due to limitations of space, the calculation process of the AHP method is not described in this paper; it can be referenced in previous studies [35]. The results of the weight computation are denoted by a set W:

𝑊=(𝑤1,𝑤2,𝑤3)
𝑊1=(𝑤11,𝑤12,𝑤13)
𝑊2=(𝑤21,𝑤22)
𝑊3=(𝑤31,𝑤32)
where 𝑊 is the relative weight vector of the primary criteria; 𝑤1,𝑤2, and 𝑤3 indicate the relative weights of the three primary criteria; 𝑊1,𝑊2, and 𝑊3 are the relative weight vectors of the secondary criteria under the three primary criteria; 𝑤𝑟𝑠 represents the relative weight of the s-th secondary criterion under the r-th primary criterion.

The method of association evaluation among the components
The main rationale of modular design is to cluster the strongly associated components into one module and separate the weakly associated components into different modules. Therefore, association analysis among the components is a critical step in modularization. Generally, it is difficult for experts to judge the association degree between two arbitrary components with crisp numbers because linguistic terms are an effective tool in dealing with this uncertainty. However, fuzzy linguistic terms cannot be implemented with a mathematical algorithm. A fuzzy linguistic transformation model needs to be selected to facilitate the usage of fuzzy linguistic terms in the evaluation of associations among the components, which will enable the linguistic terms can be transformed into numerical values. Triangular fuzzy theory is a classical transformation measure for fuzzy linguistic terms [37]. It is applied to address the association assessment issues of the components in this study.

The form of a triangular fuzzy number can be denoted as 𝜆̃ =(𝜆𝑙,𝜆,𝜆𝑢), in which 𝜆𝑙 and 𝜆𝑢 are the lower and upper limits of the triangular fuzzy number 𝜆̃ , and 𝜆 is the median value of 𝜆̃ .

Suppose 𝜆̃ 1=(𝜆𝑙1,𝜆1,𝜆𝑢1) and 𝜆̃ 2=(𝜆𝑙2,𝜆2,𝜆𝑢2) are two arbitrary triangular fuzzy numbers. The operations on triangular fuzzy numbers are as follows ([59]:

(1)𝜆̃ 1+𝜆̃ 2=(𝜆𝑙1+𝜆𝑙2,𝜆1+𝜆2,𝜆𝑢1+𝜆𝑢2)
(2)𝜆̃ 1×𝜆̃ 2=(𝜆𝑙1𝜆𝑙2,𝜆1𝜆2,𝜆𝑢1𝜆𝑢2)
(3)𝑝×𝜆̃ 1=(𝑝𝜆𝑙1,𝑝𝜆1,𝑝𝜆𝑢2)
(4)𝜆̃ −11=(1/𝜆𝑢1,1/𝜆1,1/𝜆𝑙1)
In this study, fuzzy linguistic terms for the association strength among components are graded into five levels: very high, high, medium, low, and almost irrelevant. Inspired by ([34], the correspondence between the fuzzy linguistic terms and triangular fuzzy numbers is as displayed in Table 3, and the membership functions are shown graphically in Fig. 6.

Table 3 The correspondence between the fuzzy linguistic terms and triangular fuzzy numbers
Full size table
Fig. 6
figure 6
The membership function of the triangular fuzzy numbers

Full size image
Establishing a synthetic association DSM based on the evidence theory
This section aims to build a DSM to illustrate the synthetic association strength among the components of complex mechanical products. It includes three steps: (1) evaluating the association strength among components; (2) synthesizing the association evaluation results under all criteria; and (3) establishing the synthetic association DSM.

Step 1 Evaluate the association strength among components.

An evaluation team including N experts is established to assess the association relationships between pairs of components. Suppose the total number of components is n. The association assessment result between component i (i = 1, 2, 3,…, n) and component j (j = 1, 2, 3,…, n) under the secondary criterion 𝑐𝑟𝑠 (the s-th secondary criterion under the r-th primary criterion) is defined as 𝑅𝑟𝑠𝑘(𝑖,𝑗) and can be expressed by

𝑅𝑟𝑠𝑘(𝑖,𝑗)=[𝜆̃ 𝑘,𝛽𝑟𝑠𝑘(𝑖,𝑗)]
(1)
where

𝛽𝑟𝑠𝑘(𝑖,𝑗)=∑𝑁𝑒=1𝐸𝑟𝑠𝑘,(𝑖,𝑗)(𝑒)𝑁
(2)
𝐸𝑟𝑠𝑘,(𝑖,𝑗)(𝑒)={1,0,𝜆̃ 𝑘 istheassociationstrengthbetweencomponent𝑖andcomponen𝑡𝑗otherwise
(3)
where 𝜆̃ 𝑘 is the k-th (k = 1, 2,…,5) association strength level; 𝛽𝑟𝑠𝑘(𝑖,𝑗) is the creditability of the association strength between component i and component j belonging to 𝜆̃ 𝑘 under the secondary criterion 𝑐𝑟𝑠; 𝐸𝑟𝑠𝑘,(𝑖,𝑗)(𝑒) is the association evaluation between component i and component j given by expert e (e = 1, 2, 3, …, N) under the secondary criterion 𝑐𝑟𝑠; and N is the total number of experts.

Step 2 Synthesize the association evaluations under all criteria.

This step is to generate synthetic association evaluations among the components with the help of evidence theory (Y. W. [13],Jianmei [65]. It is accomplished in two substeps:

(1)
Considering the relative weights of the secondary criteria in the association evaluations among components, the association assessments under all secondary criteria can be integrated into a synthetic assessment corresponding to the primary criterion by the evidence theory. The implementation process is presented as follows.

First, the basic probability mass function 𝑀𝑙𝑠𝑘(𝑖,𝑗) and residual probability mass function 𝑀𝑙𝑠(Θ)(𝑖,𝑗) are defined as

𝑀𝑟𝑠𝑘(𝑖,𝑗)=𝑤𝑙𝑠⋅𝛽𝑟𝑠𝑘(𝑖,𝑗)
(4)
𝑀𝑟𝑠(Θ)(𝑖,𝑗)==1−∑𝑘=1𝐾𝑀𝑟𝑠𝑘(𝑖,𝑗)=1−𝑤𝑙𝑠∑𝑘=1𝐾𝛽𝑟𝑠𝑘(𝑖,𝑗)1−𝑤𝑟𝑠+𝑤𝑟𝑠[1−∑𝑘=1𝐾𝛽𝑟𝑠𝑘(𝑖,𝑗)]
(5)
let

𝑀˙𝑟𝑠(Θ)(𝑖,𝑗)=𝑀¨𝑟𝑠(Θ)(𝑖,𝑗)=1−𝑤𝑟𝑠𝑤𝑟𝑠−𝑤𝑟𝑠∑𝑘=1𝐾𝛽𝑟𝑠𝑘(𝑖,𝑗)
(6)
thus,

𝑀𝑟𝑠(Θ)(𝑖,𝑗)=𝑀˙𝑟𝑠(Θ)(𝑖,𝑗)+𝑀¨𝑟𝑠(Θ)(𝑖,𝑗)
(7)
where 𝑀𝑟𝑠𝑘(𝑖,𝑗) is the membership of the association strength between component i and component j under secondary criterion 𝑐𝑟𝑠 belonging to the association level 𝜆̃ 𝑘. 𝑀𝑟𝑠(Θ)(𝑖,𝑗) is the residual probability that is not assigned to any association level under the secondary 𝑎𝑟𝑠. Θ=(𝜆̃ 1,𝜆̃ 2,𝜆̃ 3,𝜆̃ 4,𝜆̃ 5) is the space of association strength levels. 𝑀˙𝑟𝑠(Θ)(𝑖,𝑗) is the part of the residual probability mass that is due to the relative importance of the secondary criterion 𝑐𝑟𝑠. 𝑀¨𝑙𝑠(Θ)(𝑖,𝑗) is another part of the residual probability mass that is caused by the incomplete information of the secondary criterion 𝑐𝑟𝑠.

Then, the association evaluations between component i and component j under the secondary criteria are synthesized to generate the synthetic basic probability mass function 𝑀𝑟𝑘(𝑖,𝑗) and synthetic residual probability mass function 𝑀𝑟(Θ)(𝑖,𝑗) under each primary criterion. They are denoted as

𝑀𝑟𝑘(𝑖,𝑗)=𝐷−1∏𝑠[𝑀𝑟𝑠𝑘(𝑖,𝑗)+𝑀𝑟𝑠(Θ)(𝑖,𝑗)]−𝐷−1∏𝑠𝑀𝑟𝑠(Θ)(𝑖,𝑗)
(8)
𝑀𝑟(Θ)(𝑖,𝑗)=𝑀˙𝑟(Θ)(𝑖,𝑗)+𝑀¨𝑟(Θ)(𝑖,𝑗)
(9)
in which

𝑀˙𝑟(Θ)(𝑖,𝑗)=𝑀¨𝑟(Θ)(𝑖,𝑗)=𝐷−1∏𝑠𝑀˙𝑟𝑠(Θ)(𝑖,𝑗)𝐷−1[∏𝑠𝑀𝑟𝑠(Θ)(𝑖,𝑗)−∏𝑠𝑀˙𝑟𝑠(Θ)(𝑖,𝑗)]
(10)
𝐷=∑𝑘=1𝐾∏𝑠[𝑀𝑟𝑠𝑘(𝑖,𝑗)+𝑀𝑟𝑠(Θ)(𝑖,𝑗)]−(𝐾−1)∏𝑠𝑀𝑟𝑠(Θ)(𝑖,𝑗)
(11)
where D is the scale factor; 𝑀˙𝑟(Θ)(𝑖,𝑗) is part of the residual probability mass 𝑀𝑟(Θ)(𝑖,𝑗) of the association strength between component i and component j in the association level space Θ caused by the relative importance of the secondary criteria. 𝑀¨𝑟(Θ)(𝑖,𝑗) is another part of the residual probability mass 𝑀𝑟(Θ)(𝑖,𝑗) of the association strength between component i and component j in the association level space Θ caused by the incomplete information of the secondary criteria.

Finally, the membership of the association relation between component i and component j under the primary criterion 𝐶𝑟 belonging to the association level 𝜆̃ 𝑘 can be computed as

𝛽𝑟𝑘(𝑖,𝑗)=𝑀𝑟𝑘(𝑖,𝑗)1−𝑀˙𝑟(Θ)(𝑖,𝑗)
(12)
(2)
Referring to the synthesis procedure mentioned above, the synthetic membership of the association evaluation between component i and component j belonging to the association level 𝜆̃ 𝑘, defined as 𝛽𝑘(𝑖,𝑗), can be obtained by synthesizing the membership function 𝛽𝑟𝑘(𝑖,𝑗) (r = 1, 2, 3).

Step 3 Establish the synthetic association DSM.

The fuzzy synthetic association strength between component i and component j, defined as 𝛼̃ 𝑖𝑗, can be calculated by

𝛼̃ 𝑖𝑗=(𝛼𝑖𝑗𝑙,𝛼𝑖𝑗𝑚,𝛼𝑖𝑗𝑢)=∑𝑘=1𝐾𝛽𝑘(𝑖,𝑗)𝜆̃ 𝑘
(13)
where 𝛼̃ 𝑖𝑗 is a triangular fuzzy number; 𝛼𝑖𝑗𝑙, 𝛼𝑖𝑗𝑚, and 𝛼𝑖𝑗𝑢 are its lower limit, median value, and upper limit, respectively.

Then, the fuzzy synthetic association DSM for the n components of a complex product can be built as 𝐴̃ =(𝛼̃ 𝑖𝑗)𝑛×𝑛. In addition, based on the center of gravity defuzzification method [56], the fuzzy synthetic association DSM 𝐴̃  can be defuzzified. Thus, the synthetic association DSM 𝐴̃  can be converted into a corresponding crisp synthetic association DSM A with crisp numbers, i.e., 𝐴=(𝛼𝑖𝑗)𝑛×𝑛. The operation of the center of gravity defuzzification method is as follows:

𝛼𝑖𝑗=13(𝛼𝑖𝑗𝑢−𝛼𝑖𝑗𝑙)+(𝛼𝑖𝑗𝑚−𝛼𝑖𝑗𝑙)+𝛼𝑖𝑗𝑙
(14)
Clustering components based on the hybrid GGA-CGA method
Product modularization can be considered as an optimization problem of component clustering. Obviously, the clustering problem is known as an NP-hard problem, which can be solved effectively using different heuristic search algorithms [36]. The commonly used heuristic algorithms include particle swarm optimization (PSO) algorithm (Huimin [22],H. M. [23], simulated annealing (SA) algorithm [53, 55], and genetic algorithm (GA) [9, 20, 24]. These heuristic algorithms have been proved to have the following characteristics.

(1)
The major advantage of the PSO algorithm is that it requires small-scale intermediate computations and memory space, which makes it has high convergence speed. However, the PSO is easily locked into the local optimum caused by the lack of individual diversity (Hui [57]. In addition, due to the curse of dimensionality, the PSO algorithm is incapable of dealing with multidimensional optimization problems [62]. Finally, the classical PSO algorithm is mainly applied to cope with continuous problems; it is weak in addressing discrete problems [2].

(2)
Compared with the PSO algorithm, the SA algorithm can jump out from the local optimum with a probability in the hope of obtaining the globally optimal solution (Dandan [64]. Nevertheless, its convergence is extremely slow, such that the executing efficiency is lower than some other heuristic algorithms.

(3)
The GA method has been proven as an effective search approach to deal with NP-hard problems and is wildly used in various fields due to its significant characteristics. These characteristics can be summarized as the following six aspects [9, 41]: (1) preventing the search results from falling into the local optimum, (2) implementing the optimization process without any additional information about fitness function (i.e., objective function), (3) dealing with both continuous and discrete problems, (4) addressing large-scale date information effectively, (5) reducing the processing time via its implicit parallel computing, and (6) operating easily. However, the GA system requires multiple parameters, such as population size, iteration times, crossover probability, and mutation probability, which lead to that it needs extra time for parameter tuning.

Generally, the modularization of large-scale mechanical products is a considerable task that needs to hunt the optimal modular scheme from an ample search space. The feature of premature convergence makes the PSO algorithm easy to get stuck at the local optimum, especially in a complex environment. The SA algorithm, although, has more opportunities to escape from the local optimum, its low efficiency makes it inefficient in dealing with large-scale optimization problems. The GA can catch the global optimal solution with high accuracy and is easy to operate. Moreover, it has been proved as an excellent method used to cluster DSMs [25]. Therefore, the GA is the best alternative for the modularization of complex mechanical products.

Clustering algorithm
The numerous advantages of the GA make it suits for addressing the modularization of large-scale complex mechanical products. However, modular parameters, such as the number of modules and the size of each module, are usually prespecified based on expertise, which reduces the flexibility and accuracy when the GA is implemented in modular design. Thus, some improvements to the GA are proposed to develop a new approach defined as the GGA [61], Suiran [66], in which the number of modules is encoded in the chromosomes as a constituent of the genes. In this way, the module count will evolve along with the best trend without the influences of subjective factors in the wake of the continuous iteration of the GGA. In addition, the GGA encodes the chromosomes from the solution space in the form of numerical strings instead of binary codes, which allows each gene to represent a specific component of the objective product. The change in the form of the code improves the readability of the modular results and improves the operational efficiency due to the reduction in the encoding space. Even so, some inherent shortcomings also remain in the GGA, including that the search time inevitably increases along with the scope expansion of the solution space when the number of modules is not specified; furthermore, expertise and practical demands are ignored completely. Therefore, if the core components of modularization are assigned according to particular requirements, the GGA has inadequate performance in coping with the constraints of the core components that need to be placed in different modules. Ji et al. [21] presented a novel CGA, similar to the GGA, which was developed by changing the chromosomes in the GA from a binary encoding scheme to a numerical encoding format. For the CGA, the dimension of the chromosomes denotes the total number of components in the objective product. The maximum value in the chromosome signifies the number of groups to be clustered, while each component corresponding to a gene location index belongs to a specific module encoded as the value of that position. The CGA enables compensation for the defects of the GGA while retaining the same advantages.

In this study, the action-granularity-oriented modular design for a complex mechanical drive chain has the following features:

(1)
For global optimization, the number of modules does not need to be specified before the implementation of modularization.

(2)
The concept of a KAC is proposed in product analysis, and the number of KACs is determined for a particular product.

(3)
When clustering with the core of the KACs, the KACs have to be assigned to different modules, and the number of modules is fixed as the number of KACs.

Based on the above characteristics, to achieve global optimization in the process of action-granularity-oriented modular design, we establish a hybrid GGA-CGA method that integrates the advantages of the GGA and CGA mentioned above. In the hybrid method, the GGA can be used to cluster the KACs first to obtain KAC groups. Then, the CGA is used to obtain the KAC modules by recognizing the relevant relationships between KACs and other components. Finally, the results generated by the GGA and CGA are clumped to build an action-granularity module. The framework of the hybrid GGA-CGA method is illustrated graphically in Fig. 7, and the principle of the clumping process is shown in Fig. 8.

Fig. 7
figure 7
The framework of the hybrid GGA-CGA method

Full size image
Fig. 8
figure 8
The clump process of KAC groups and KAC modules

Full size image
In Fig. 8, the KAC groups generated by the GGA are denoted as KACG1, KACG2, KACG3, etc., in which KACG1 = {KAC1, KAC2}; KACG2 = {KAC3, KAC5, KACP}; and KACG3 = {KAC4}. The KAC modules generated by the CGA are denoted as KAM1 ~ KAMP, and each KAM consists of several components. The number P is a constant equal to the number of components. The action granularities are the results of the combination of KAC groups and KAC modules. For example, KAC3, KAC5, and KACP are clustered in seam group 2 by the GGA method, and the KAC modules KAM3, KAM5, and KAMP are produced by the CGA method are clumps of components centered on KAC3, KAC5, and KACP. Based on KACG 2 and the KAC modules KAM3, KAM5, and KAMP, action-granularity module 2 is produced by gathering all components, including KAM3, KAM5, and KAMP.

The generation of KAC groups based on the GGA
Similar to the GA approach, the principle of the GGA is that the chromosomes in genetics generate new individuals by crossover and mutation, and the excellent individuals are selected under the principle of “survival of the fittest.” Then, the excellent individuals are retained and inherited in the next generation via a continuous iteration method to screen the optimal individuals. Hence, setting the form of chromosomes or the chromosome encoding according to the specific problem is the basis of the GGA method. The format of the chromosome code of the GGA method can be expressed as in Fig. 9, where the number “3,” randomly generated by a computer, is the number of KAC groups. The part after the number “3” is a random sequence of KACs, and there is a one-to-one correspondence between the KACs and the gene bits. The manipulation procedure of the GGA is shown in Fig. 7, and its details are as follows:

Fig. 9
figure 9
The format of chromosome code in GGA

Full size image
Step 1 Initial population.

The first step of creating the initial population in the GGA process encodes the clustering problem of KACs in chromosomes (cf. Fig. 9). The chromosome encoding process of the GGA includes three steps: (1) randomly produce a number of groups; (2) randomly generate a sequence of KACs; and (3) randomly segment the KAC sequence to obtain a grouping scheme. In theory, the minimum and maximum numbers of KAC groups are 1 and P (the number of KACs), respectively. However, the two kinds of extreme scenarios are obviously inconsistent with the optimal situation. Hence, the randomly produced number of groups should be constrained to be within the interval [2, P-1]. The length of the random sequence of KACs is equal to the number of KACs, which means each KAC is matched to one and only one gene position in a chromosome. According to the number of groups, an arbitrary division of the random sequence can yield a grouping scheme for the KACs. For instance, in Fig. 9, the random number of KAC groups is 3, and the random sequence of KACs is KAC1, KAC4, KAC7, KAC5, KAC3, KAC2, and KAC6. According to the number of groups, the random sequence of KACs is randomly segmented into three parts, as shown in Fig. 9. Then, the set {3, (KAC1, KAC4), (KAC7, KAC5, KAC3), (KAC2, KAC6)} can be determined as a grouping scheme for KACs. A set of initial grouping schemes can be obtained by repeating the steps mentioned above. The initial quantity of the groups, defined as G, is usually selected from the range 10–200.

Step 2 Select prominent individuals.

To select the prominent individuals, the selection model (i.e., fitness function) should be established first. The application of the GGA method in this study aims to cluster KACs into several groups. The principle of clustering is to maximize the association strength of the intragroup KACs and minimize the coupling strength of the intergroup KACs. In this context, assume 𝐵=(𝑏𝑖𝑗)𝑝×𝑝 is the association strength matrix of KACs separated from the DSM A generated in Sect. 3, where bij denotes the correlation between KACi and KACj and P is the number of KACs. The calculation functions of the intragroup association strength and the intergroup coupling intensity are displayed as Eqs. (15) – (16), respectively. Based on the cluster principle, the fitness function can be written as Eq. (17). Then, the selection issue is transformed to select the individual with a maximum fitness value compared with other individuals in the population. In this study, the roulette wheel selection method is employed as the selection operator to search for prominent individuals. These prominent individuals form a new population, which is considered the parent population and is inherited by the child population.

𝑌𝑖𝑛=∑𝑞=1𝑄∑𝑝𝑖=1∑𝑝𝑗=1𝑏𝑖𝑗⋅𝜇𝑞𝑖⋅𝜇𝑞𝑗𝑃2𝑞
(15)
𝑌𝑜𝑢𝑡=∑𝑞=1𝑄∑𝑝𝑖=1∑𝑝𝑗=1𝑏𝑖𝑗⋅𝜇𝑞𝑖⋅(1−𝜇𝑞𝑗)(𝑃−𝑃𝑞)2
(16)
𝑌=∑𝑞=1𝑄∑𝑖=1𝑝∑𝑗=1𝑝𝑏𝑖𝑗⋅𝜇𝑞𝑖⋅𝜇𝑞𝑗𝑃2𝑞−∑𝑞=1𝑄∑𝑖=1𝑝∑𝑗=1𝑝𝑏𝑖𝑗⋅𝜇𝑞𝑖⋅(1−𝜇𝑞𝑗)(𝑃−𝑃𝑞)2𝑄+𝛿
(17)
where Q is the total quantity of groups; 𝜇𝑞𝑖 and 𝜇𝑞𝑗 represent the subordinate attributes of KACi and KACj in group q, which can be computed by Eq. (18). Pq is the number of KACs in group q. 𝛿 is a constant used to keep the fitness value Y positive.

𝜇𝑞𝑖={1,0,𝐾𝐴𝐶𝑖𝑏𝑒𝑙𝑜𝑛𝑔s𝑡𝑜𝑐𝑙𝑎𝑠𝑠𝑞𝐾𝐴𝐶𝑖𝑑𝑜𝑒𝑠𝑛𝑜𝑡𝑏𝑒𝑙𝑜𝑛𝑔𝑡𝑜𝑐𝑙𝑎𝑠𝑠𝑞𝜇𝑞𝑖={1,0,𝐾𝐴𝐶𝑗𝑏𝑒𝑙𝑜𝑛𝑔s𝑡𝑜𝑐𝑙𝑎𝑠𝑠𝑞𝐾𝐴𝐶𝑗𝑑𝑜𝑒𝑠𝑛𝑜𝑡𝑏𝑒𝑙𝑜𝑛𝑔𝑡𝑜𝑐𝑙𝑎𝑠𝑠𝑞
(18)
Step 3 Crossover and mutation.

Crossover and mutation are the two basic and principal genetic operators in GA-based approaches. The details of crossover and mutation are given below.

(1)
The crossover is a procedure in which the individuals in the parent population exchange a part of their chromosomes according to a certain probability to generate new individuals, and crossover must traverse all the individuals in the parent population. It is remarkable that, unlike the typical GA method, the GGA takes the group as a whole to execute the exchange operation, which means that the seam KACs may be in different groups. Hence, after the crossover process, the genes in the offspring chromosomes should be adjusted to match reality. The crossover process in the GGA method is shown graphically in Fig. 10. First, the starting crossover group (crossover point 1) and ending crossover group (crossover point 2) are determined randomly in the two parent chromosomes (parent 1 and parent 2). Second, the groups between crossover point 1 and crossover point 2 (including the two boundary groups) of parent 1 are inserted behind crossover point 1 of parent 2 to generate child chromosome 1. Child chromosome 2 is produced by using the same manipulations as for parent 2. Third, the groups that have the same elements as other groups are deleted from child chromosome 1 and child chromosome 2. The nonidentical elements in the deleted groups are recorded as miss components. Fourth, the miss components are randomly inserted into the child chromosomes to produce a set of new individuals. As we can see from Fig. 10, via the above four steps of crossover, the initial parent 1 can generate four types (a–d) of child chromosome schemes. Finally, the child chromosome scheme with the maximum fitness value is chosen as a member of the child population. There is a similar situation for child 2.

Fig. 10
figure 10
The crossover process of GGA method

Full size image
(2)
The mutation is a mechanism by which each individual (called a parent) transforms into a new individual (called a child). The mutation principle of the GGA is illustrated in Fig. 11. First, two mutation points are determined randomly in different groups within a parent chromosome. Then, the two elements located at the mutation point are exchanged to construct a new child chromosome.

Fig. 11
figure 11
The crossover mechanism of GGA method

Full size image
Step 4 Loop optimization.

Repeat Step 2 and Step 3 to make the population evolve continuously until the number of iterations reaches the set value. The individual with the highest fitness value in the last child population is selected as the optimal grouping scheme for the KACs.

The generation of KAC modules based on the CGA
Similar to the GGA model, the first step for the CGA framework is to determine the encoding type of the chromosome, where each chromosome represents a modular scheme. In the GGA method, the chromosome encoding is represented by a string of a certain length, and the string is constructed by a set of numerals. The dimension of the string equals the total number of components, which allows each gene bit in the chromosome to correspond to one and only one component. The numeral at a specific gene bit denotes the serial number of the module for this component. In this study, the application of the CGA method of clustering is centered on KACs, which means that the number of KAC modules is equal to the quantity of KACs, and the KACs are placed in different modules. Thus, the largest number in the chromosome equals the number of KACs, and the gene bits corresponding to different KACs are assigned different numbers. Figure 12 is a chromosome encoding example for seven components. The dimension of the chromosome is seven, which equals the total number of components. The maximum number “3” in the chromosome indicates that the seven components are clustered into three modules. The numbers in the first, second, and seventh gene bits are 1, indicating that components 1, 2, and 7 belong to the same module 1. Similarly, from Fig. 12, we find that components 3 and 5 belong to module 2, and components 4 and 6 belong to module 3. Based on the above discussion, the modular scheme shown in Fig. 12 can be expressed as [{1, 2, 7}, {3, 5}, {4, 6}].

Fig. 12
figure 12
The chromosome encoding style in CGA

Full size image
As shown in Fig. 7, the main operating process of the CGA is the same as that of the GGA, including the steps of constructing the initial population, performing crossover and mutation, selecting prominent individuals, and carrying out loop optimization. The details of these steps are as follows:

Step 1 Construct the initial population.

The procedure of constructing the initial population in the CGA method consists of three substeps: (1) determining the module number based on the quantity of KACs; (2) setting the gene bits corresponding to the KACs to 1 ~ P (the number of KACs); and (3) randomly filling the rest of the gene bits with integers in the interval [1, P]. The initial population, defined as 𝐺′, can be obtained by repeating the three substeps, and the number of individuals is also set in the range of 10 ~ 200.

Step 2 Select prominent individuals.

The selection principle of the CGA is the same as that of the GGA, i.e., to maximize the association strength of the intramodule components and minimize the coupling strength of the intermodule components. The fitness function of the GGA is as follows:

𝑌′=∑𝑃𝑝=1[𝑦𝑝𝑖𝑛𝑛2𝑝−𝑦𝑝𝑜𝑢𝑡(𝑛−𝑛𝑝)2]𝑃+𝛿
(19)
where 𝑦𝑝𝑖𝑛 is the association strength of the components in module p; 𝑦𝑝𝑜𝑢𝑡 is the coupling strength between module p and other modules; n is the total number of components; np is the number of components in module p; P is the total number of modules.

The computation process of 𝑦𝑝𝑖𝑛 and 𝑦𝑝𝑜𝑢𝑡 is as follows:

(1)
Decompose and convert the chromosome.

The decomposition and conversion of the chromosome aim to obtain a set of subchromosomes. The processes of decomposition and conversion are shown in Fig. 13. First, chromosome R is decomposed into several subchromosomes. The number of subchromosomes is determined according to the quantity of element types in the original chromosome R. As we can see from Fig. 13, the chromosome contains three kinds of elements, “1,” “2,” and “3.” Hence, chromosome R is decomposed into three subchromosomes. Each subchromosome retains one type of element in the original chromosome R. The gene bits of the retained elements in the subchromosome coincide with those in the original chromosome, and the other gene bits in the subchromosome are set to 0. Then, we convert the nonzero elements in the subchromosome to 1. Finally, a set of subchromosomes containing only 0 and 1 are obtained and denoted as {𝑟𝑝|𝑝∈[1,𝑃]}, in which rp is the p-th subchromosome of chromosome R and P is the number of element types in chromosome R, which represents the total number of modules.

Fig. 13
figure 13
The process of decomposition and conversion for the chromosome R

Full size image
(2)
Construct the association attribute matrix and coupling attribute matrix.

Definition 1
Suppose rp is an n-dimensional subchromosome, and the i-th element in rp is denoted as rpi (i = 1, 2, 3,…,n). Define 𝐶𝑝=(𝑐𝑝𝑖𝑗)𝑛×𝑛, which represents the association strength of the components in module p, and its elements 𝑐𝑝𝑖𝑗 can be calculated by.

𝑐𝑝𝑖𝑗={𝑟𝑝𝑖×𝑟𝑝𝑗,0,𝑖<𝑗𝑖≥𝑗
(20)
Definition 2
Assume 𝐶=(𝑐𝑖𝑗)𝑛×𝑛 is a matrix of order n, where 𝑐𝑖𝑗 can be obtained by Eq. (21). Let 𝐶′𝑝=(𝑐′𝑝𝑖𝑗)′𝑛×𝑛 be the coupling attribute matrix of module p; its element 𝑐′𝑝𝑖𝑗 can be obtained by Eq. (22).

𝑐′𝑝𝑖𝑗=𝑐𝑖𝑗−𝑐𝑝𝑖𝑗
(21)
𝑐𝑖𝑗={1,0,𝑖<𝑗𝑖≥𝑗
(22)
Take the subchromosomes rp1 ~ rp3 displayed in Fig. 13 as examples. Based on the above definitions, the association attribute matrixes C1, C2, and C3 and the coupling attribute matrixes 𝐶′1, 𝐶′2, and 𝐶′3 for modules 1–3 can be established as follows:

𝐶1=⎡⎣⎢⎢⎢⎢⎢⎢⎢⎢0100001000000100000000000000000000000000000000000⎤⎦⎥⎥⎥⎥⎥⎥⎥⎥𝐶2=⎡⎣⎢⎢⎢⎢⎢⎢⎢⎢0000000000000000001000000000000000000000000000000⎤⎦⎥⎥⎥⎥⎥⎥⎥⎥𝐶3=⎡⎣⎢⎢⎢⎢⎢⎢⎢⎢0000000000000000000000000010000000000000000000000⎤⎦⎥⎥⎥⎥⎥⎥⎥⎥
𝐶′1=⎡⎣⎢⎢⎢⎢⎢⎢⎢⎢0011110001111000000010000001000000100000010000000⎤⎦⎥⎥⎥⎥⎥⎥⎥⎥𝐶′2=⎡⎣⎢⎢⎢⎢⎢⎢⎢⎢0010100001010000000110000100000001100000000000000⎤⎦⎥⎥⎥⎥⎥⎥⎥⎥𝐶′3=⎡⎣⎢⎢⎢⎢⎢⎢⎢⎢0001010000101000010100000101000001000000010000000⎤⎦⎥⎥⎥⎥⎥⎥⎥⎥
(3)
Calculate 𝑦pin and 𝑦pout.

Assume 𝐴=(𝑎𝑖𝑗)𝑛×𝑛 is the synthetic association DSM obtained in Sect. 3. Based on the above steps, the association strength 𝑦𝑝𝑖𝑛 of the components in module p and the coupling strength 𝑦𝑝𝑜𝑢𝑡 between module p and the other modules can be computed by

𝑦pin=∑𝑖=1𝑛∑𝑗=1𝑛𝑎𝑖𝑗⋅𝑐𝑝𝑖𝑗
(23)
and

𝑦pout=∑𝑖=1𝑛∑𝑗=1𝑛𝑎𝑖𝑗⋅𝑐′𝑝𝑖𝑗
(24)
Step 3 Crossover and mutation.

Crossover and mutation are measures of the generation of progeny chromosomes, and their execution processes are depicted in Fig. 14a and b. In the crossover procedure, two arbitrary crossover fragments in any two parent chromosomes are randomly generated first. Then, the sites of the two crossover fragments are exchanged to obtain two progeny chromosomes. In the mutation procedure, a mutation site is randomly produced. The element at the mutation site can be changed to an arbitrary integer in the interval [1, P], where P is the total number of modules. It should be noted that to meet the requirement of different KACs located in different modules, the gene bits corresponding to KACs do not participate in the mutation operator.

Fig. 14
figure 14
The procedures of crossover and mutation

Full size image
Step 4 Loop optimization.

Similar to the GGA method, the initial population produced in Step 1 evolves continuously under the iteration of Step 2 and Step 3. A new and optimized set of offspring chromosomes are acquired after the iteration operator, and from this set, the optimal modular scheme with the highest fitness value can be obtained.

Numerical example
Winding engines are complex mechanical products widely applied in industry. With the continuous development of the economy, the demand for winding engines has increased greatly in most industries, especially in the heavy industry and construction fields. Therefore, there is a need to accelerate the speed and reduce costs in the production of the winding engine. The modular technique is an effective implementation to address these demands. Hence, in this study, a winding engine is taken as an example to demonstrate the process of the action-granularity modular design based on the developed hybrid GGA-CGA method. Figure 15 is a transmission schematic diagram for a winding engine that is used in a factory to lift and release an important component. As shown in Fig. 15, it can be divided into four portions: (1) the electric-driven portion, (2) the hand-driven portion, (3) the deceleration portion, and (4) the drum portion. Due to space limitations, only the hand driving portion is executed in the modular action-granularity design. Its assembly drawing is shown in Fig. 16. There are 48 components in the hand driving portion shown in Table 4. The detailed modular design process is discussed in the next three subsections.

Fig. 15
figure 15
The transmission schematic diagram of the winding engine

Full size image
Fig. 16
figure 16
The assembly drawing of the hand driving portion

Full size image
Table 4 The total number of the components in the hand 𝑝206 driving portion
Full size table
Modularity-driven factors and their relative weights
The modularity-driven factors are discussed in detail in Sect. 3.1, and their relative weights can be calculated by the AHP method. The calculation results are displayed in Table 5, from which the relative weight vectors of the primary and secondary criteria are obtained, i.e.,

𝑊=(𝑤1,𝑤2,𝑤3)=(0.417,0.25,0.333)
𝑊1=(𝑤11,𝑤12,𝑤13)=(0.385,0.385,0.230)
𝑊2=(𝑤21,𝑤22)=(0.230,0.444)
𝑊3=(𝑤31,𝑤32)=(0.5,0.5)
Table 5 The relative weights of the primary criteria and secondary criteria
Full size table
The establishment of the synthetic association DSM
Then, an assessment group including ten experts is invited to evaluate the associations among the components in the hand-driven portion. Tables 6, 7 and 8 show the evaluation results of the association relationship under the three secondary criteria c11, c12, and c13 corresponding to the primary criterion C1. These tables do not include the items for which the creditability 𝛽𝑙𝑠𝑘(𝑖,𝑗) is zero, and associations between the components and themselves are not considered.

Table 6 The association assessment under the secondary criterion c11
Full size table
Table 7 The association assessment under the secondary criterion c12
Full size table
Table 8 The association assessment under the secondary criterion c13
Full size table
Take the association analysis between components 𝑝202 and 𝑝204 as an example to describe the synthesis of the association evaluation based on evidence theory. As shown in Tables 6, 7 and 8, the association evaluations between components 𝑝202 and 𝑝204 under the secondary criteria c11, c12, and c13 are {[𝜆̃ 1,0] [𝜆̃ 2,0] [𝜆̃ 3,0.3] [𝜆̃ 4,0.6] [𝜆̃ 5,0.1]}, {[𝜆̃ 1,0.9] [𝜆̃ 2,0.1] [𝜆̃ 3,0] [𝜆̃ 4,0] [𝜆̃ 5,0]}, and {[𝜆̃ 1,0] [𝜆̃ 2,0.2] [𝜆̃ 3,0.7] [𝜆̃ 4,0.1] [𝜆̃ 5,0]}, respectively. Thus, the basic probability mass values and residual probability mass values under the secondary criteria c11, c12, and c13 can be calculated by Eqs. (4–7). The calculation results are illustrated in Table 9, which does not include the items with zero basic probability mass.

Table 9 The basic probability mass values and residual probability mass values under each secondary criterion
Full size table
From Tables 6, 7 and 8, we find that ∑𝑘𝛽𝑙𝑠𝑘(2,4)=1, which means that all experts have participated in the process of evaluating the association between components 𝑝202 and 𝑝204, and there is no abstention. Therefore, the residual probability mass caused by information uncertainty is zero; i.e., 𝑀¨𝑟𝑠(Θ)(2,4)=0 and 𝑀˙𝑟𝑠(Θ)(2,4)=𝑀𝑟𝑠(Θ)(2,4). Then, the membership 𝛽2𝑘(2,4) (k = 1, 2,…,5) of the association strength between components 𝑝202 and 𝑝204 when the primary criterion C1 belongs to each association level can be computed according to Eqs. (4–7). The results are given in the first column in Table 10.

Table 10 The membership information
Full size table
In the same way, the membership of the association strength between components 𝑝202 and 𝑝204 under the primary criteria C2 and C3 belonging to each association level can be obtained, and the results are depicted in the second and third columns. Referring to the above computation process, the synthetic membership of the association strength between components 𝑝202 and 𝑝204 belonging to each association level can be obtained and are illustrated in the last column in Table 10.

According to Eq. (13), the synthetic association strength between components 𝑝202 and 𝑝204 can be obtained, and it is expressed as 𝑎̃ 24=(6.130,7.130,8.130). Similarly, the synthetic association strengths among all components in the hand-driven portion can be obtained based on the operation process described above. Then, the fuzzy synthetic association DSM 𝐴̃  can be obtained, and the crisp synthetic association DSM can be established as shown in Table 11 by defuzzification according to Eq. (14).

Table 11 The synthetic association DSM 𝐴 with crisp numbers
Full size table
Action-granularity modular design based on the hybrid GGA-CGA method
According to the concept of the KAC defined in Sect. 3, the KACs of the hand-driven portion include components 𝑝219 (shaft), 𝑝220 (gear), 𝑝222 (gear), 𝑝228 (shaft), 𝑝230 (gear), 𝑝241 (handle), and 𝑝245 (shaft). The synthetic association matrix B of the KACs can be extracted from the synthetic association DSM A and is shown below.


The action-granularity modular design process can be finished by following the steps of the GGA and CGA methods mentioned in Sect. 4. The pseudo-codes of the GGA and CGA methods are shown in Fig. 17. An execution example of the hybrid algorithm is displayed in Fig. 18, where the parameter settings in the process are as follows:

(1)
For the process of gathering KACs with the GGA, the population size is 50, the number of iterations is 60, the crossover probability is 0.5, and the mutation probability is 0.01.

(2)
For the process of clustering all components with the CGA, the population size is 100, the number of iterations is 300, the crossover probability is 0.7, and the mutation probability is 0.05.

Fig. 17
figure 17
The pseudo-codes of GGA and CGA

Full size image
Fig. 18
figure 18
The relations between the fitness values and the generations

Full size image
The example in Fig. 18 is the optimal execution result in a group of execution under the above parameter settings, where the beast fitness values in GGA and CGA processes are 20.9720 and 21.6050, respectively. The corresponding modularization result is shown in Table 12. Its fitness value is 20.8924, which has been proved to be the global optimal solution.

Table 12 The modular design results
Full size table
Result analysis and discussion
parameter discussion
The critical parameters for GA-based algorithms include population size, iteration number, crossover probability, and mutation probability. These parameters will affect the processing efficiency and the convergence property of the algorithms. Therefore, the influences of different parameter sets on the modularization results of the numerical example shown in Sect. 5 are discussed in this section.

In the light of the experiences of previous researches [27], the reasonable ranges of these critical parameters are illustrated as follows:

(1)
Population size (PS): 20–100.

(2)
Iteration number (IN): 50–500.

(3)
Crossover probability (CP): 0.4–0.99.

(4)
Mutation probability (MP): 0.001–0.1.

These experiences can provide help for engineers in setting parameters for GA-based algorithms. It should be noted that these ranges are not fixed but can be adjusted according to the scale of the analysis problem.

In this study, since the dimension of the association strength matrix of KACs is small, the clustering algorithm can quickly converge to the optimal solution under a low parameter level. Hence, in this study, the parameter IN, CP, and MP are fixed at 60, 0.5, and 0.01, respectively. The parameter PS is set at different levels to discuss the clustering property of the GGA method in generating KAC groups. The optimal group scheme of KACs is first obtained by an extensive search, and its corresponding fitness value is 20.9720. The parameter PS in the GGA process is set to 20, 50, 80, and 100, respectively. The program under each parameter PS is run ten times. The running results are shown in Table 13, where the PEs (percentage errors) are the ratios of the differences between the mean fitness values under each PS and the optimal individual fitness (20.9720). The convergence performance of the GGA can be represented by parameter PI (performance index), which is calculated by 𝑃𝐼=1−𝑃𝐸. Therefore, the PIs of GGA under the four PS parameters are 0.987169, 0.997282, 0.998793, and 1, respectively. These PI values are very close or equal to 1. In addition, the mean running times under these PS parameters are less than 1 s. The above analysis indicates that the clustering of KACs of the mechanical product displayed in “Numerical example” using GGA can obtain a high-precision clustering result with high efficiency.

Table 13 The execution results of GGA for clustering KACs to KAC groups
Full size table
Then, to investigate the optimal parameter combination for the generation of modules with the centers of KACs, eight trials (T-1 ~ T-8) for CGA are operated in this study. The corresponding parameters of these trials are displayed in Table 14. The eight trials are, respectively, operated ten times, and the results are illustrated in Table 15.

Table 14 The parameters in the eight trials
Full size table
Table 15 The execution results of CGA for clustering components to KAC modules
Full size table
The optimal clustering scheme of components with the KACs as the centers is also gained in advance by an extensive search, and its corresponding fitness value is 21.6050 (i.e., global optimal individual fitness). Comparing the trial T-1 and T-2, although they all did not obtain the global optimal solution, the average fitness value of the trial T-2 is higher than that of the trial T-1 due to the higher PS value of the trial T-2. Therefore, the CGA has better performance under PS 50 than that under PS 100. Comparing the execution results of trials T-2, T-3, and T-4, it can be found that the occurrence number of the global optimal solution and the average fitness value increase with the increase in IN value. Hence, the CGA can obtain a higher performance in a higher parameter of IN. The difference between the trials T-4, T-5, and T-6 is the value of CP. Table 15 shows that the average fitness value and the occurrence number of the global optimal solution of the trail T-4 are less than these of the trial T-5. The cause of this result is that the higher CP value in trial T-5 provides better population diversity that can help the program escape from the local optimum. Therefore, changing the CP value from 0.5 to 0.7 can improve the performance of the CGA in cluster components to KAC modules. Compared with trial T-5, trial T-6 has a slightly higher PI value and average fitness value and obtains the same number of global optimal solutions, which means the change of CP value from 0.7 to 0.9 brings less benefit for the execution result. Therefore, it is reasonable to set the parameter CP to 0.7. The differences in parameter MP mainly cause the discrepancies between the execution results of trials T-5, T-7, and T-8. In the light of the execution results recorded in Table 15, it can be found that the average fitness value, PI value, and the number of globally optimal solutions in trial T-7 are all higher than these values in trials T-5 and T-8. The reasons for this result can be expressed as follows: (1) For trail T-5, the small parameter MP makes the program has a low population diversity, which makes the program easy to fall into local optimum and thus difficult to obtain the global optimal solution. (2) For trail T-8, the obtained excellent evolutionary direction may be destroyed due to the high MP, and thus, the chance for obtaining a globally optimal solution is decreased. Therefore, compared with trial T-5 and T-8, the parameter MP in trial T-7 is more reasonable.

According to the above discussions, it can be concluded that the CGA has the best performance in trial T-7, where the parameter setting as: PS=100, IN=500, CP=0.07, and MP=0.05.

Comparative analysis between GGA-CGA strategy and other GA-based strategies.
As mentioned in Sect. 4.1, the GGA and CGA algorithms are two common GA-based strategies, which effectively improve the comprehensive performance of the classical GA method. In this section, the comparisons between the proposed hybrid GGA-CGA method and the GGA-only and CGA-only algorithms are implemented to demonstrate the effectiveness and superiority of the proposed method in the modularization of complex mechanical products.

In the GGA-only algorithm, the number of the modules does not need to be preset, which can be randomly generated by the program. The GGA-only clustering process is a completely free process without any constraints, which is the same as the first cluster stage of the proposed hybrid GGA-CGA method. In the CGA-only method, the number of modules needs to be predestined to facilitate chromosome coding. According to the modular result of the proposed hybrid GGA-CGA method, the number of modules of the optimal modular scheme is three. Accordingly, the number of modules in the CGA-only method is preset to three. Furthermore, in consideration of the clarity and fairness of the comparison results, the parameter settings in CGA-only and GGA-only methods are the same as that in the second cluster stage of the proposed hybrid GGA-CGA framework (cf. Table 14). According to the parameter setting in Table 14, eight trials (T-1 ~ T-8) for GGA-only and CGA-only algorithms are executed, and the results are illustrated in Tables 16 and 17.

Table 16 The execution results of the GGA-only strategy
Full size table
Table 17 The execution results of the CGA-only strategy
Full size table
Tale 16 shows that in the GGA-only strategy, the optimal individual fitness is 22.1962, and the corresponding clustering result is illustrated in Fig. 19, where the number of modules is 10. By Fig. 19, most of the modules are constructed by two or three components, and these modules do not have complete structures to perform basic actions (translation and rotation), which means that it is difficult to obtain ideal action-granularity-oriented modular results under a completely free clustering environment. In addition, the performances of the proposed GGA-CGA strategy and the GGA-only method are mainly determined by several performance metrics, including PI value, time efficiency, and accuracy rate, where the PI values are illustrated in Tables 13, 15 and 16, respectively. The time efficiencies of different algorithms under different parameters are reflected by their mean running time of ten repeated runs. The accuracy rate is denoted as p, which can be calculated by 𝑝=𝑁𝑔/𝑁𝑟 where Nr represents the number of runs (i.e., 𝑁𝑟=10), and Ng is the occurrence number of the global optimal solution in Nr runs. It is noteworthy that due to the GGA-CGA strategy has two clustering phases, its performance is determined by the synthetic performance of the two clustering phases. In the light of the execution results of the GGA shown in Table 13, it can be found that when the parameter PS is set to 100, the execution of the GGA in clustering KACs can obtain a perfect result, where the PI = 1, the accuracy rate p = 10/10 = 1, and the mean running time is 0.8281 s that less than 1 s. Therefore, the influence of the GGA on the performance of the hybrid GGA-CGA strategy is minimal, which can be ignored. Accordingly, the performance of the GGA-CGA strategy is mainly determined by the performance of the second clustering phase. Therefore, the performance of the second clustering phase of the developed method is considered emphatically in the subsequent performance comparisons between the proposed method and other algorithms. According to Tables 15 and 16, the comparisons of different performance metrics between the proposed method and the GGA-only method are demonstrated in Fig. 20. From Fig. 20a, we can find that all of the PI values in the GGA-only system are more than 0.99. Besides, the PI value changes slightly with the change of parameters, which means the GGA-only method can stably converge near to the optimal solution. In contrast, the PI value of the proposed method is more sensitive to the changes of parameters. Therefore, the stability of the GGA-only is better than that of the proposed method. However, Fig. 20b reveals that the accuracy rate of the GGA-only method is much lower than that of the proposed method. The reason is that there are a large search space and plenty of suboptimal solutions in the GGA-only strategy under completely free conditions. Figure 20c shows that the mean running time of the GGA-only strategy is much longer than that of the proposed method. Therefore, the proposed method has a higher time efficiency than the GGA-only method.

Fig. 19
figure 19
The optimal modular scheme of the GGA-only strategy

Full size image
Fig. 20
figure 20
The performance comparison between the proposed method and the GGA-only strategy

Full size image
Table 17 shows the execution results of the CGA-only strategy, where the optimal fitness is 20.8924 and the corresponding clustering result is the same as the modular scheme generated by the proposed method. This indicates that the CGA-only method can obtain the global optimal solution under a presetting number of the modules. However, it is difficult for the CGA-only method to apply in the modularization field without prior knowledge of the number of modules. The performance comparison between the proposed method and the CGA-only method is displayed in Fig. 21. Figure 21a, b shows that the PI values and accuracy rates of the CGA-only strategy are lower than these of the proposed method. Furthermore, Fig. 21c reveals that the mean running time of the CGA-only strategy under each trial is longer than that of the proposed method, and this illustrates that the time efficiency of CGA-only strategy is lower than that of the proposed method. Based on the above analysis, the proposed method has a better comprehensive performance than the CGA-only strategy.

Fig. 21
figure 21
The performance comparison between the proposed method and the CGA-only strategy

Full size image
Based on the above comparisons, the advantages of the proposed hybrid GGA-CGA method can be summarized as follows:

(1)
Compared with the GGA-only strategy, although the proposed hybrid GGA-CGA method has slightly lower convergence stability with parameter changes, its search accuracy and time efficiency are much higher than those of the GGA-only strategy. This indicates that the proposed method can catch the optimal individual more quickly and accurately than the GGA-only strategy.

(2)
Compared with the CGA-only method, the proposed method implements the clustering process in two steps. In the first step, the GGA method is applied to gather a small number of KACs to different groups and thus the number of modules can be determined. Therefore, the proposed method does not need prior knowledge of the number of modules, which is more suitable for the practical modularization problem of the complex product. Furthermore, since the second clustering step of the proposed method is constrained to take KACs as the cluster center, the search space and suboptimal solutions are reduced, which greatly improves the search accuracy of the global optimal solution.

Comparative analysis between GGA-CGA strategy and other heuristic methods
To further verify the effectiveness of the proposed modularization method (GGA-CGA model), two commonly used improved heuristic algorithms are also employed to evaluate the performance of the developed method in this section, i.e., the extended discrete particle swarm optimization (EDPSO) algorithm [48] and the fast simulated annealing (FSA) algorithm ([33], which are the improved versions of the traditional PSO algorithm and the traditional SA algorithm, respectively.

The parameter settings of the EDPAO algorithm and the FSA algorithm
The EDPSO algorithm is a discrete form of the classical PSO, which can effectively address the optimization problem of discrete variables., Furthermore, a new position updating strategy and a new local search strategy in the EDPSO are utilized to improve the performance of the traditional PSO algorithm, which effectively exploits the potential solution space and enhances the algorithmic exploration and convergence ability [48]. Therefore, in this study, the EDPSO is used to perform the same optimal modular scheme of the product introduced in Sect. 5. The parameters of the EDPSO algorithm can be determined by referring to the parameter settings of the GGA-CGA method shown in Table 14. Four experiments for the EDPSO are implemented in this study, and their parameter settings (PS/IN) are 50/100, 100/100, 100/300, and 100/500, respectively. Each experiment is run ten times, and the operation results are shown in Table 18. The relations between the fitness values of the four experiments and the global optimal solution are shown in Fig. 22. From Table 18 and Fig. 22, it can be found that the fitness values are different in different runs under different parameters, and all of the optimal solutions under different parameters are smaller than the globally optimal solution (20.8924). This means that although the EDPSO algorithm improves the classical PSO algorithm from different aspects, it is still easy to fall into local optimum, which leads to the difficulty of obtaining the optimal modular scheme. Furthermore, Table 18 shows that the PI values and the mean running time will increase with parameter PS growth. Thus, the enhancement of the performance for the EDPSO will inevitably be at the cost of efficiency loss.

Table 18 The running results of the EDPSO
Full size table
Fig. 22
figure 22
The relations between the optimal fitness values of the four experiments and the global optimal solution

Full size image
As an improvement of the traditional SA algorithm, the FSA algorithm can improve the convergence rate of the algorithm by optimizing the annealing speed function of the classical SA method (B. [33]. In this study, the FSA algorithm is also used to deal with the modular problem mentioned in Sect. 5. The parameters in the FSA process are set as follows: (1) According to the studies of J. Lee and Perkins [28] and Brown and Huntley [5], the inner iteration number is usually about 2n or 4n, where n is the number of objects. In this study, the n indicates the number of the parts, i.e., n = 48, thus the inner iteration number can be set to 100 and 200. (2) Based on B. [33], the cooling mode can be determined as 𝑇𝑘=𝑇0/(1+𝑘), where Tk is the temperature after kth annealing, 𝑇0 is the initial temperature. (3) The end temperature Tf is fixed to 0.1. When Tk = Tf, k represents the total annealing times, and 1+𝑘 is the outer iteration number. (4) The initial temperature T0 can be set according to the AT or outer iteration number. Previous studies reveal that the outer iteration number is generally set between 100 and 1500 (B. [33],J. [28]. To illustrate the performance of FSA under different outer iteration numbers, we operate the FSA algorithm under four outer iteration numbers, including 100, 300, 500, and 1000. Corresponding to these outer iteration numbers, the initial temperature T0 can be determined as 10, 30, 50, and 100. Based on the above settings, eight trials (labeled as T1 ~ T8) for the FSA are designed, and their parameter settings and execution results are recorded in Table 19. As shown in Table 19, the performance index of FSA in each parameter set is more than 0.99, which means that the FSA has high accuracy in searching for the optimal modular scheme. In addition, the optimal running result is obtained when the parameters of initial temperature and inner iteration number are set to 100 and 200, respectively, where the occurrence number of the global optimal solution in ten repeated operations is 7, and the PI is 0.999712.

Table 19 The operation results of the FSA algorithm
Full size table
The comparison between the proposed method and the EDPAO and FSA algorithms
The comparison between the proposed method and the EDPSO algorithm can be implemented from the three performance metrics (i.e., PI value, accuracy rate, and time efficiency) of these two methods under each PS/IN parameter group. For the proposed method under parameter group 100/500, the optimal trial T-7 is selected as its final result. The performance comparison results are shown in Fig. 23a–c. From Fig. 23a, in the first two parameter groups, the PI values of the EDPSO are larger than those of the proposed method. With the changes of parameters, the PI values of the proposed method exceed those of the EDPSO, which illustrates that the EDPSO can converge to clear to the global optimal solution than the proposed method. However, with the increase in parameters, although the PI values of the proposed method and EDPSO algorithm increase, the PI value of the proposed method increases faster than that of the EDPSO algorithm, which indicates that in the parameter tuning process, the proposed method can obtain the global optimal solution faster than the EDPSO. Figure 23b shows that the accuracy rates of the EDPSO in the four trials are zero, while the accuracy rates of the proposed method increase with parameters changes, which means that the EDPSO method is easy to fall into local optimum and thus fails to catch the global optimal solution. By comparison, although the proposed method does not obtain the globally optimal solution (accuracy rate is zero) under low parameter levels (trials 1 and 2), it can obtain an ideal solution by parameter tuning. For example, when the parameters PS, IN, CP, MP are 100, 500, 0.7, and 0.05 (i.e., trial 7), respectively, the accuracy rate of the proposed method can reach 0.9. Figure 23c reveals that the mean running time of the proposed method is shorter than that of the EDPSO under each parameter group, which reveals the proposed method has higher time efficiency than the EDPSO algorithm.

Fig. 23
figure 23
The comparisons of three performance metrics between the proposed method and the EDPSO algorithm

Full size image
Similar to the comparison between the proposed method and the EDPSO algorithm, the performance comparison between the proposed method and the FSA strategy also can be carried out based on the three performance metrics. Based on the information recorded in Tables 15 and 19, the PI values and accuracy rates are graphically illustrated in Fig. 24. From Fig. 24a, b, it can be found that the PI values and accuracy rates of the FSA method under trials T-1 ~ T-3 are higher than these of the proposed method. However, with the parameter change, the PI values of the proposed method can be quickly raised to the same stage as that of the FSA method, meanwhile, the accuracy rates of the proposed method exceed that of the FSA method. Figure 24b also shows that the best-performing trials for the proposed method and the FSA are T-7 and T-8, respectively. For the FSA, its trial T-8 has the biggest accuracy rate (0.7) and PI value (0.999712) among the eight trials, while its mean running time (61.2743 s) is the longest. For the proposed method, its trial T-7 has the biggest accuracy rate (0.9) and PI value (0.999779), and its mean running time is 37.5886 s. Furthermore, as shown in Fig. 24c, the mean running time of the FSA is increased according to the growth multiple of the initial temperature and the inner iterations. If the current optimal accuracy rate (0.7) of the FSA algorithm is raised to the current optimal accuracy rate (0.9) of the proposed method, its initial temperature and inner iterations will be increased on the basis of its current optimal trial (T-8), and thus the mean running time of the FSA will exceed its current biggest mean running time (61.2743 s). Therefore, it can be concluded that the proposed method has a higher time efficiency than the FSA method under the seam accuracy.

Fig. 24
figure 24
The comparisons of three performance metrics between the proposed method and the FSA algorithm

Full size image
According to the execution results and comparisons of the three algorithms, the following conclusions can be drawn:

(1)
The execution results of the CGA recorded in Table 15 reveal that too high or low parameter levels may degrade the performance of the CGA and further influent the performance of the GGA-CGA. Therefore, the optimal parameter setting needs to be detected through several trials when using the GGA-CGA to address practical problems.

(2)
By the comparisons among the GGA-CGA, EDPSO, and FSA, it can be found that the performance of the EDPSO is the lowest in these three algorithms. Although the execution results of the EDPSO can gradually close to the optimal solution via adjusting the parameters, it has never obtained the optimal solution in ten repeated runs under each parameter level.

(3)
Table 19 and Fig. 24b show that the FSA can always obtain the optimal solution several times in ten runs under each parameter level, even under poor parameter levels, and the PI values under all parameter levels are more than 0.99. Hence, the FSA has robustness in global optimization and presents a superior performance in converging near to the optimal solution for a practical problem. However, since the FSA needs to experience numerous iterations in multiple temperature states, its time efficiency is usually lower than the proposed method.

To sum up, in the three heuristic optimization algorithms, the GGA-CGA has the best comprehensive performance and can obtain the optimal solution with high time efficiency and accuracy rate. In addition, the fitness value of the optimal solution generated by FSA is equal to the fitness value of the optimal modular scheme obtained by the GGA-CGA strategy, which further verifies that the feasibility and effectiveness of the proposed GGA-CGA algorithm in coping with modular problems.

The advantages of the modular action-granularity design
From the modular results of the hand-driven portion in the winding engine, we find that any KAC in a specific action-granularity module accepts a certain form of motion input, and the other KACs in the same module can output a certain form of motion. This demonstrates that the action-granularity modules are mechanical units that have independent and simple structures as well as single and fundamental functions. These modularization results conform to the demands of the modularization and further illustrate the effectiveness of the modular action-granularity design achieved by the developed hybrid GGA-CGA method. Taking action-granularity module II of the hand-driven portion as an example, its assembly structure is shown in Fig. 25. From Fig. 25, it can be seen that this action-granularity module consists of components 𝑝217, 𝑝227, 𝑝228, 𝑝229, 𝑝230, 𝑝231, and 𝑝232. Components 𝑝228 and 𝑝230 are the KACs in module II. If the component 𝑝228 is driven by a rotational force, the component 𝑝230 will produce a corresponding rotational action output and vice versa. Therefore, the function of action-granularity module II is to transmit the rotation action from one component to another.

Fig. 25
figure 25
The assembly structure of the action module II

Full size image
Furthermore, compared with the traditional modular design, the action-granularity modules possess stronger generality and more extensive application prospects in the design of complex mechanical products since their smaller granularity can lead to having a simple structure and fundamental function. By analyzing various mechanical systems, it can be found that structural units similar to action-granularity module II are widely used in mechanical products. Hence, action-granularity module II can be seen as a standardized model from which to evolve various similarly structured units to adapt to different product design demands. For instance, taking action-granularity module II as a standard model, some of its evolutionary modules are described in Table 20. These standard models and evolutionary modules can be stored in databases and then directly called in product design, thus promoting the development of intelligent manufacturing technology.

Table 20 The standard model and their evolutionary modules
Full size table
The discussion above indicates that the action-oriented modularization of complex mechanical products has great potential value in the standardization technology of modules and intelligent manufacturing because of its capability of obtaining modules of specific granularity with simple and typical structures and more fundamental and singular functions than those of traditional modular design.

Conclusions and future work
Modularization, as a basic step in modular technology, plays an important role in the application of modular production. However, the existing research has some limitations, as mentioned in Sect. 1. In this study, a novel modularization strategy is proposed to help engineers modularize complex mechanical products. In this strategy, a double-layered modularity-driven factor system targeted at specific action-granularity modules is established to assess the association strength among the components of complex mechanical products. These association assessments are processed by the evidence theory to form a synthetic association DSM. To obtain the optimal modular schemes for complex mechanical products, a new heuristic intelligent search strategy, called the hybrid GGA-CGA method, is proposed to search for the optimal item among multiple alternative modularization solutions. Finally, the proposed modularization method is applied to modularize a winding engine, and its modularization results indicate the feasibility of the proposed method. In addition, the effectiveness and advantages of the developed modularization strategy are demonstrated by comparisons and discussions with several previous methods. The main contributions of the proposed modularization strategy are as follows:

(1)
This strategy implements modularization for complex mechanical products, which is rarely considered in existing research.

(2)
A new modularity-driven factor system targeted to specific action-granularity modules is established, which mainly includes three primary criteria. The first primary criterion mainly considers the influences of the coupling between any two components on the KACs’ action performances, including action accuracy, action reliability, and action stability are considered. The second criterion assesses the correlations among components in the action fault maintenances of KACs, where dismantlement correlation and maintenance matching between components are considered. The third primary criterion, physical correlation, is a widely used criterion in previous studies and can ensure the structural integrity of modules, which includes structure correlation and information correlation.

(3)
A new two-stage modularization strategy, called the hybrid GGA-CGA method, is developed to select the optimal modular scheme by a heuristic search. Compared with the GGA-only method, the proposed hybrid method can catch the optimal solution more quickly and accurately. Furthermore, unlike the CGA-only method, the proposed method does not need prior knowledge of the number of modules, which is more suitable for the practical modularization problem of the complex product. Moreover, due to the clustering centers of the second clustering stage are constrained, the proposed method has higher search accuracy than the other two GA-based strategies.

(4)
The modules obtained by the proposed method are based on action-granularity and can implement basic and fundamental actions (e.g., translation and rotation) supported by complete and typical structures. This characteristic makes the obtained action-based granularity modules hold a balance between modularity and commonality.

(5)
Compared with the other two improved heuristic algorithms, i.e., the EDPSO and FSA algorithms, the proposed method has better comprehensive performance than these two methods.

The future study directions are as follows: First, although the proposed hybrid GGA-CGA method can be successfully applied to modularize the winding engine, its effectiveness and suitability should be further tested by the modularization of the other complex mechanical products or nonmechanical products. Second, some action-granularity modules are common in many mechanical products. Thus, the commonly used action modules can be predefined as standardization models such that they can be directly applied to form new similar structures. Therefore, the standardization method of action-granularity modules and the storage technique of standard models are interesting to the future study. Third, the application ranges of action-granularity modules in modular technology for complex products should be further studied in the future.

Keywords
Modularization
Complex mechanical products
Action-granularity module
Hybrid GGA-CGA method