Twitter social media has been emerging as one of the most admired channels for sharing news and opinions. A tweet once posted becomes noteworthy after it gets a high number of positive responses from other people in the form of retweets sharing the same medium. The number of retweets a tweet gets is an alternative metric for positive affirmations received from the crowd-sourced medium. The rise in the number of retweets helps in not making a topic trending but also helps the tweet getting broadcasted. Similarly, a high number of followers gained by a user increases his social presence in the online ecosystem. Both these metrics influence the popularity of the user to a great extent. Users who are interested in bolstering their tweets contact merchants of black-marketing services and become part of this dark web community. They get engaged in these collusive activities to get a high number of followers or retweets instantly. These users are genuine, showing a blend of human and automated behavior. In our proposed collusion defection model, C-ANN, we have attempted to build a framework that can detect collusive users with a maximum accuracy of 94% using multiple basic and derived attributes based on user profile and activity.

Introduction
Online Social Networks (OSNs) are being used by internet users extensively for interacting, socializing, and spreading information by facilitating them to maintain their social identity. This has led to the creation of an online social reputation. Social beings (users or associations) who are linked through social ties (friends or supporters) get attracted towards OSN due to the availability of online news, job vacancies, advertisements, networking, and much more. In addition to spreading messages online, these networks also identify the targeted audience that may be interested in the same. They further help in identifying individuals with common likes and dislikes leading to the creation of networks based on those commonalities. There are many examples of social media platforms in use these days such as Wikipedia (a crowdsource medium of content generation), Twitter (microblogging site) [1], social network sites like Facebook [2], etc. The high rise in the participation of users in OSN has resulted in the occurrence of many fraudulent and spamming activities. Most of the time automated accounts play a major role in spamming activities like boosting tweets, dissemination of fake news, promotion of products and services. These accounts are popularly known as bots [3].

People nowadays have got engulfed in the virality phenomena on social media. They spend a significant amount of time updating their profile, checking the profile of other people, participating in online discussions, etc. Sometimes people create multiple accounts and engage in undesired behavior on social media. Such users are called sockpuppets [4]. Social Media Platforms serve people in multiple ways like education, information propagation, awareness, promotion, and updates. People join social networks due to several reasons–for creating a network based on common interests, broadening of businesses, promotion of business products. Twitter being a microblogging site provides its users a platform for different kinds of content generated by users personally, product promotions, and suggestions of different users leading to the online social movement. Along with this, it also allows its users to promote tweets posted by other users based on their liking. There are two ways involved: (i) Content level affirmations (likes, retweets, and quotes) and user-level affirmations (Follows). This has led to users getting involved in false means for increasing the number of followers [5]. To boost their social reputation and increase their profile visibility, people tend to share interesting content, attract a greater number of likes and followers [6]. This has directed to the growth of a secretive phony follower market which assures supporters in form of followers, likes, and comments for boosting the online social reputation of a user. Users who want to get their tweets noticed and want to increase their followers at a rapid pace get customers of Black Market services. They keep on following other similar accounts and in return get followers credited to their account. These fake follower markets are the main authorities contributing to collusive activities [7]. Customers (Collusive users) intentionally or unintentionally join these services and in a way get their profile boosted either directly or indirectly. These services are either funded or comprise of an assortment of individuals who exchange followers amongst themselves. Such users who are intentionally involved in influence using these services and giving a false perception of their reputation in minds of other people, with a high count of retweets, follows count, or likes are termed as Collusive Users [8]. Such users hamper the trust and credibility of online social networks by giving incorrect value of Klout score, which is an influence measurement metrics. This happens as a result of by propagation of tweets by collusive users. Such black-market services are categorized into premium and freemium. The latter is further divided into social share services (sharing activities with the help of peers), auto retweet services (customers can request for a fixed number of retweets against their tweets in the same window), credit-based services (users get credits in return for the number of retweets). There are many such services like kingdomoflikes.com, Youlikehits.com, like4like.com, traffup.net which facilitate these services [9]. These are not in compliance with Twitter terms and conditions. Therefore, understanding the behavior, activities of these fraudsters and attacks caused by them [28] is paramount for detecting anti-counterfeit algorithms.

Challenges in detecting collusive users
There exist several challenges in identifying such Collusive users: (i) They show a mix of organic and inorganic activities which indicates that they are not bots but human beings. So, it would not be useful to use bot detection algorithms [10]. These accounts post some genuine tweets. At the same time, they also perform retweeting/following activity to get retweets/followers in return [11]. (ii) They don’t show any synchronicity in their tweeting pattern making it difficult for synchronous fake detection methods to flag them [12]. (iii). These are actual Twitter accounts not fake, so fake detection algorithms fail to flag them [13].

The rest of the paper organization includes Sect. 2 that highlights the related work and main contributions followed by a detailed explanation of the proposed methodology Collusion-detection using Artificial Neural Network (C-ANN). This is followed by Sect. 3, which includes data construction, and exploration of the anatomy of the Twitter followers, using the discriminatory features to detect the suspicious users. The performance results and interpretations of our proposed C-ANN model are provided in Sect. 4. We finally conclude with possible future work directions in Sect. 5.

Related work
This section provides a detailed introduction to the relevant existing research on the detection and characterization of collusive users in OSNs. An extensive literature work exists on the detection of fraud users, spam, and bots. These studies are helpful in fraud detection, misinformation propagation, malicious users, user behavior identification, etc. but are not useful in identifying collusive users. Collusive users show a mixed type of behavior, inorganic like a bot and organic as performed by a genuine user. Hence, these studies are not helpful from a collusive user’s perspective. Though limited work has been done to detect collusive users present in OSNs. Still, according to the recent research, no existing model using deep learning has been able to yield even 80% accuracy. Here, we provide a detailed overview of the research done in the detection of collusive users from three different perspectives: (i) Detection of fraudsters in Twitter, (ii) Malicious activities in Twitter and (iii) Black Market-driven tweet detection.

Detection of fraudsters in Twitter
Davis et al. developed a framework that leverages over one thousand features and detects whether the entered user is a bot or not. Giatsoglou et al. [12] proposed NDSync that detects retweet threads that are clustered together. Also, it helps in the detection of group fraud. Also, additional features can be incorporated into it, so it is adaptable. Research carried out by Gupta et al. considers detecting malicious groups that retweet collectively [14]. A novel algorithm named MalReG has been devised in this research for performing this task which considers twenty-three indicative group-based attributes. These attributes are entropy and temporal attributes and are used to train a supervised model for the detection of malicious retweeter groups Another novel architecture for the detection of fraud reviews named, DeFrauder has been proposed and applied by researchers in [15]. They state that group fraud detection is a more difficult task than individual fraud detection. The reason behind this is due to the unclear motivation of the group, ever-changing dynamics in the group. It first detects candidate fake groups by employing the underlying product review graph. It also incorporates various behavioral signals of the reviewers. It further proposes a novel ranking strategy for retweeters group detection and for ranking the groups based on the level of spam. Findings have been made on four datasets, two of which are curated by researchers. Results indicate that this unsupervised method achieves higher accuracy than other similar methods. Researchers have proposed an unsupervised approach CoReRank to detect collusive users and tweets in [16]. In this work, the contacts between users and tweets have been modeled in terms of retweets/quotes through a bipartite graph. Authors have considered a set of axioms to track user and tweet credibility [27].

Malicious activities in Twitter
A study based on spam detection done by reviewers giving fake online product feedback in online stores has been carried in [17]. This work considers the behavior of the reviewer, textual similarity, linguistics features, frequency of reviews, and metadata of review. A significant research has been carried out for detecting bots using deep learning techniques [18]. The researchers have adopted a couple of methods for the detection purpose. In the first method, they have used a feature extraction approach and a subset of features is applied to machine learning classifiers for bot detection. In the second method, the same researches have extended their study and implemented bot detection using deep learning approaches [19]. Both approaches have been evaluated on a series of experiments and have shown surprising improvements over previously known methods developed so far.

Blackmarket-driven tweet detection
A thorough investigation of the merchants involved in black markets has been carried out in [20] leading to the identification of how these markets are getting benefitted by selling fake Twitter accounts to customers. Their mode of operation and how merchants overpower automated registration barriers were investigated. For this work, they tracked twenty-seven different merchant accounts involved in selling fake accounts to customers. They further developed a classifier that detected seven million fake accounts that merchants sold. Another research provides an anatomy of Twitter underground follower markets [21]. Authors have characterized these operational services, their operational structure, and market hierarchy. They have also highlighted the characteristics of the customers involved in the market and their deceptive followers. They have further identified key identifiers which separate users and build a supervised model giving an accuracy of 89.2%. The dataset contains both users of freemium and premium services. Authors have developed a neural network-based model for detecting automatically boosted tweets (retweets) posted by collusive users [22]. They have fed a primary input as a vector-based representation of tweets using the Tweet2Vec model (500 vector representation of each tweet) as input to another fully connected input layer of NN. The secondary input is a vector containing tweet-specific content-based features (twelve attributes in total). These two key inputs are fed to two fully connected NN layers with a cross switch between successive layers. The turnout layer of the first task classifies a tweet as genuine or collusive and the turnout of the second task gives a numerical value to the number of retweets and likes, a tweet will get after five days once it gets posted. Findings suggest that this model is robust in classifying tweets as genuine or collusive. In yet another research on investigating collusive users has been performed in [23]. They have defined sixty-four attributes and designed a supervised machine learning classifier (SVM). This classifier can achieve a Macro f1 score of 87%. They have also created a browser extension for the same. Another extensive work carried out in [24] considers both premium and freemium services and is based on a dataset that comprises sixty-three different attributes. These features are applied to different classifiers for multi-class classification (bots, promotional users, and normal customers and genuine customers) as well as binary classification (genuine users and collusive users). Findings reveal that in multi-class setting bagging yields the best macro F1-score of 0.892 whereas in binary class classification Random-forest outperforms others giving a macro F1-score of 0.791. Another significant work has been carried out by Udit A. et al. on similar grounds in [25]. They have collected tweets with their temporal attributes and used these attributes to create different user representations. They have adopted weighted Generalized Canonical Correlation Analysis (WGCCA) to combine these depictions which can be applied to state-of-art classifiers to distinguish three users: bots, promotional customers, and normal customers of black-market services. Dutta et al. [26] have addressed the problem of collusion on a trend-centric dataset. They have considered the class-specific topic modeling approach and Hawkes processes. Findings indicate that this model beats previous baseline works. Figure 1 shows the chart of existing techniques surveyed in the related work section.

Fig. 1
figure 1
Summarizing existing techniques in related research domain

Full size image
Research motivation
In previous baseline research, the analysis of fake retweeting behavior has been performed in Twitter with synchronicity being the prime perspective [7]. However, this happens only if all the retweeters are controlled by a central authority. But, collusive users involved in black market services are not controlled by a central authority. They purposely retweet tweets of other users. Hence, we need to perform exploratory analysis for detecting correlated parameters governing collusion behavior.

The existing collusion detection techniques have used machine learning classifiers to detect malicious users [27]. However, there is only evidence of using deep learning techniques with low level of accuracy between 40 to 60% [28]. Therefore, there is a need for highly accurate collusion detection models.

Moreover, the collection of collusive users are often performed manually by registering in black market services or by creating honey pot accounts [23]. Hence, web-crawler needs to be designed for programmatical collection of colluded users from black-marketing sites [29].

Research highlights
A web crawler was developed to collect collusive users from black-market sites after logging with user credentials.

Genuine Twitter user profiles were collected who are not involved in any collusive activities in the past.

The aggregated dataset of collusive and genuine users was analyzed and an exhaustive set of 65 unique features were designed to characterize the Twitter handles.

Comparative study was performed with several existing and ensemble-machine learning as well as deep learning classifiers with hyperparameter tuning

A three-layer Collusion-detection using Artificial Neural Network (C-ANN) was proposed for genuine and collusive user classification that outperforms the existing counterparts, and achieves maximum accuracy.

Proposed methodology for colluders detection
Black markets are also known as underground Twitter follower markets. While examining the approach of Black-Market Service industries, it was discovered that there exist two types of such facilities—Premium and Freemium Facilities. People who are interested in intentional manipulation of their accounts often get involved and become a part of these services to get appraisal inorganically either in the form of an increased number of followers, retweets, or likes. In this section, we have focused on detecting such users using our proposed Collusion-detection using Artificial Neural Network (C-ANN) approach.

Data construction from black market online portals
We have carefully designed a corpus by collecting a set of collusive and genuine users. Moreover, we have extracted the significant attributes for each user required for detecting collusive and genuine users. The dataset building procedure is elaborated as following.

Collusive User data Collection To collect data about collusive users, we have considered credit-based services only since their policies are simple. We have developed a web scrapper using Selenium and JavaScript for three freemium services (YouLikeHits.com, TraffUp.com, and Like4Like.com). During the development of the web scrapper, we have considered all kinds of other exceptions (password) and other timeout limitations which these websites impose on users. We collected 784 collusive users, using the web crawler program and by manually registering on four black marketing services. From the total set of collusive users, 98 users were suspended by Twitter and 88 accounts were private. So, we had 598 users remaining collusive users. Table 1 presents the detailed statistics of collusive users collected over a span of 30 days.

Genuine Users For comparing normal users with collusive ones, we collected genuine users by identifying a prearranged set of known users who have surely not been a part of such collusive activities before. We collected over one thousand users. We have rejected genuine users with more than 1 million followers, as such users could be celebrities and hence, may form biasness in our dataset. To avoid unnecessary bias, we have discarded them from our study. Table 2 shows the statistics of our dataset. We collected 713 genuine users of which relevant information of only 498 users could be fetched. Rest of the users could not be accessed due to API glitch, private profile security, and profile deactivated status due to inactivity. Table 3 shows the overall statistics of our final dataset.

Table 1 Collusive users data collection and other statistics
Full size table
Table 2 Dataset statistics
Full size table
Table 3 List of symbols used in experimentation
Full size table
As we have collected both types of users separately. So, there is no need for any annotation at the user level for conducting our experiment. Thereafter, we did an exploratory analysis of these users based on profile-based, social-network, activity-based, content-based, tweet-probability-based attributes and found numerous insights of black markets services. Figure 2. shows our methodology used for developing proposed C-ANN.

Fig. 2
figure 2
Proposed C-ANN methodology for colluded user detection on Twitter

Full size image
We have depicted algorithms describing the process showing the flow of dataset construction in Algorithm 1 and proposed methodology in algorithm 2. Algorithm 1 describes dataset extraction and preparation. Algorithm 2 describes our proposed C-ANN for collusive user classification. In Algorithm 2,

figure a
figure b
𝑥𝑘,𝑖=𝑥𝑘,1,𝑥𝑘,2,𝑥𝑘,3…..,𝑥𝑘,𝑚 are the input neurons to the network having 𝑙 layers, 𝐴(∙) denotes the activation function. The set of weights in the neural network is a set defined as 𝑊={𝑊1,𝑊2,…,𝑊𝑚}. Each weight 𝑊𝑘={𝑤𝑘,1,𝑤𝑘,1,…,𝑤𝑘,𝑚}, where number of attributes of each user 𝑚 and number of users 𝑛. Also, Δ denotes the vector of error derivatives, indexed by network node. Moreover, the list of symbols and their interpretations are highlighted in Table 3.

The next section depicts the results found after experimentation and exploration of our dataset considering different social network attributes.

Experimental results and performance evaluation
In this section, we state novel features which differentiate the two kinds of users (collusive and genuine). The attribute level visualizations indicating the behavior of collusive and genuine users have also been done.

Twitter user profile attributes (PA)
These attributes are related to individual profiles of a Twitter user. We give a hypothesis that many collusive users manage to keep description in their profile to divert more numbers of users towards it. Two more hypotheses are: (i) a greater number of genuine users keep a default image in their profile than collusive ones, (ii) ore number of genuine users have face visible in their profile picture. Figure 3a–c. corroborates with these three facts. Therefore, we have kept profile description present (PA1) as one feature in our study and profile image (PA2) as the second. In addition, we keep the last attribute which is whether the face is visible in profile or not (PA4).

Fig. 3
figure 3
Summary of profile-based Metrics of genuine and collusive users

Full size image
Social network attributes (SNA) of Twitter user connections
SNA comprise attributes related to user connection in Twitter social network. SNA attributes like the count of followees (friends) (SNA-1), count of followers (SNA-2), follower/following ratio (SNA-3) sometimes give a piece of symbolic information about collusive users. From Fig. 4(a: inset), we can interpret that these collusive users show a more positive correlation in terms of gaining followers using Cumulative Distribution Function (CDF). For this plot, we have considered twenty collusive and twenty genuine users at random. In Fig. 4b the outer plot shows that collusive have a high number of followers than genuine users- that is expected as they involve in Blackmarket services only due to this reason. Collusive users tend to follow a lot of users to get followed back. Figure 4(b: inset) shows that followee count is more positively correlated in the case of genuine users than collusive users. From the randomly chosen twenty genuine and collusive users, it is visible that most genuine users out of twenty, have more followees (friends) than collusive users. Figure 4 (c: inset) Genuine users have a low follower to followee ratio as they have an equal number of followers and friends.

Fig. 4
figure 4
CDF of social system features a Follower count b Followee count c Follower-to-Followee Ratio

Full size image
Activity-based attributes (TA)
User activity plays a considerable role, which means the higher the activity of a user, more will be the likelihood of his tweet getting retweeted by someone. We have proposed the following features for measuring this phenomenon: total number of tweets (tweets + retweets) (ABA1), the total number of retweets (ABA2), total number of original tweets (ABA3), retweet to original tweet ratio (ABA4), number of tweets per day (ABA5). To compute these we crawl all the timeline tweets by imposing a sleep time of 15 min when Twitter rate limit error occurs. Figure 5 shows that genuine users have varied retweet counts, whereas all collusive users have retweets ranging between 0–400. As the number of followers keeps on increasing, the number of retweets also get increased in the case of collusive users, unlike the case of genuine users.

Fig. 5
figure 5
Relationship between followers count and retweet count

Full size image
Content-based attributes (CA)
The content of a tweet plays an important role in identifying the behaviour of a user. We performed a keyword analysis of the tweets. We have considered certain important keywords which collusive users would use like Follow, follow, Like, like, Tweet and tweet – that is expected, as they want to get their postings retweeted or likes by others to get themselves popular on the social network. So, most likely they will use these keywords. There are high chances collusive users with more tweets will have more keywords in their tweets as their sole intention is to endorse others by retweeting them. Figure 6. corroborates this hypothesis.

Fig. 6
figure 6
Summary of keyword frequency-per-Tweet of collusive and genuine users

Full size image
Figure 7a shows that genuine users having more followers retweet more while the number of keywords used in their tweets is less as compared to collusive users. For collusive users, we see a greater value of retweets even with few followers also in Fig. 7b. This is expected as they retweet extensively to get their followers increased. They post more retweets as compared to original tweets posted by them; however genuine users do retweet when they find the content interesting. Figure 7c, depicts that though genuine users have more followees, still collusive users have more retweet counts as they get credited by black-market services for retweeting.

Fig. 7
figure 7
Relationship between keyword frequency-per-Tweet, followers count and following user count

Full size image
Tweet probability-based attributes (TPA)
Such attributes are related with the possibility of tweeting or retweeting by a user in the near future. According to existing literature, collusive users tend to retweet more on some specific days in a week, so different collusive users may have different days when they post more retweets. Retweeting activity captures time and hence can be done in free time only. This parameter will help in identifying days of the week when collusive users retweet more. That is why this is a significant parameter. Figure 8 shows the activeness of both types of users towards retweeting. Plot number eight shows retweet frequency on weekend and the last plot shows the retweet frequency of the overall week. The first seven plots show their retweet frequency from Monday to Sunday. Here each dot represents one point showing. In each plot, we have a retweet frequency count for a specific day.

Fig. 8
figure 8
Retweet behavior of collusive and genuine users from a–g Monday to Sunday, h Weekend, and i Whole week cumulated

Full size image
The retweet frequency of collusive users is one degree higher than genuine users on wednesday. In the last plot, we see there are more collusive users with retweet frequency higher than genuine ones. Users who are part of freemium services need to retweet profusely the tweets of other users to earn credits but those who are not part of these services genuinely post a tweet and do not publish them to black marketing services. These users are not supposed to engage in such credit-based activity. We proposed this set of features to capture user behaviour, which include tweet-probability (tweet + retweet) of each day over 1 week (TP1-7), retweet probability of each day over 1 week (RTP1-7), original tweet probability over 1 week (ORTP1-7), tweet-frequency (tweet + retweet) of each day over 1 week (TF1-7), retweet frequency of each day over 1 week (RTP1-7), original tweet probability over 1 week (ORTP1-7), user wise lowest tweet frequency (LTF1st-7th) obtained after sorting all the tweet frequency in ascending order of each user over one week. Figure 9. Shows that collusive users retweet at a faster pace than genuine users. Here, the x-axis shows the retweet probability over 1 week in sorted order. In the graph, retweet probabilities have been sorted and averaged for both genuine and collusive users. Combining some important attributes we have plotted their probability distribution function (PDF) which is shown in Fig. 10. Figure 10a shows the probability of retweeting posts of collusive users. They have to retweet tirelessly to get retweeted or follow random customers to get their follower count increased instantly.

Fig. 9
figure 9
Retweet probability (sorted) over 1-week duration

Full size image
Fig. 10
figure 10
Probability density of social network attributes a–b Tweet-retweet attributes c Social system attributes d Keyword count per tweet

Full size image
They have full control of their account. So, as we can notice in the graph, their likelihood of retweet reaches a peak on some specific days. Retweeting tweets requires very high manual effort and is usually done during free days. In contrast, genuine users retweet with their normal frequency since they are more inclined towards the content of the tweet and are not part of black-market services. So, collusive users have limited area but in the case of genuine ones, it is more widely spread. Figure 10b shows the frequency of five keywords per tweet for both kinds of users. The likelihood of occurrence of these keywords in tweets is more for collusive users than genuine ones as can be seen from the spread. Of the curve of this figure. Since collusive users retweet other users’ tweets to gain followers for themselves. So, over time their followers’ count gets increased as shown in Fig. 10c. In the case of genuine users, the followers’ count does not get increased speedily although some genuine users are more likely to gain followers. In Fig. 10d collusive users tend to follow others and increase their followee count to gain followers for themselves. So, though the relative likelihood of gaining followees (i.e. friends) is more in the case of genuine users the rate of growth of followee is more for collusive users.

Hyperparameters tuning
It refers to the process parameter optimization that determines best model performance. These parameters include attribute values, like selecting of the depth of a decision tree, minimum number of samples required at the leaf node in our decision tree, number of trees to be included in a given random forest model, etc. There are several hyperparameter tuning methods that defines how the values are sampled from the space of hyperparameter tuned values. This process is known as searching sample space for optimum hyperparameter values. These methods include grid search, random search, Bayesian optimization, etc. Table 4 summarizes the hyperparameters used to tune various classifiers.

Table 4 Algorithmic settings used for hyperparameters tuning of existing classifiers
Full size table
Comparative study
We have compared our proposed C-ANN model with existing baselines. Evaluated statistics of these models trained with our dataset are presented in Table 5. SpamBot [30] model gives an accuracy of 75%, FakeAcc [31] has 60% and Score-SVM [23] gives 73% accuracy on our dataset. Furthermore, the accuracy of BotoM [29] and NDSync-LR [12] was found to 76% and 60%, respectively. The performance of each competing method is computed in terms of precision, recall, F1-score, and area-under-curve (AUC) as shown in Table 5. The evaluation metrics are obtained after the average of the result using fivefold cross-validation. Our proposed C-ANN model accuracy plot and model loss plot over 400 epochs for ANN are shown in Fig. 11. We have implemented our experiment with varying the number of hidden layers as 2, 3,4 also. Keeping hidden layer as 1 gives us experimentally optimised results. Hence, we have considered this for our final evaluation. Algorithmic settings used for proposed C-ANN have been given in Table 6 below.

Table 5 Performance evaluation results of different models
Full size table
Fig. 11
figure 11
Proposed C-ANN results highlights a Model accuracy plot, and b modEl loss plot

Full size image
Table 6 Algorithmic settings used for proposed C-ANN
Full size table
Model accuracy and loss plots show the loss obtained using the model on training and testing data. These plots are very significant as they show the difference between training and testing accuracy and loss. Lower the difference, better is the model performance. We have performed binary class classification for identifying whether a given customer is genuine or collusive. From Table 7, it is apparent that our proposed C-ANN shows highest accuracy than previous models. According to the existing literature, due to the mixed behavior of collusive users and limitation of the dataset, deep learning techniques do not perform well [28]. However, our proposed model C-ANN has achieved accurate results with a maximum accuracy of 94%.

Table 7 Performance evaluation results of several benchmark classifiers
Full size table
This model has been devised using sequential model in Keras with a plain stack of four layers. The first hidden layer contains 16 neurons and RelU activation function. The second hidden layer has 8 neurons with same function. The last layer has one hidden neuron and uses Sigmoid activation function.

Conclusion and future scope
With the proliferation of black markets in online social media, the credibility of OSN has been affected. The early detection of collusive users poses a great challenge and needs to be addressed. More sophisticated approaches need to be developed since black market services circumvent the existing approaches of Twitter. In proposed C-ANN framework, feature selection techniques have been exploited for the detection of collusive users. Also, a thorough analysis of features has been visualized. Using our proposed C-ANN model, we obtained an accuracy of 94% on training data, 87% on unseen data, precision of 83%, and recall value of 84.6%, respectively. This accuracy score can be further improved if we can collect more data of collusive and genuine users. As future research directions, optimised weights can be computed for ELM model training using evolutionary algorithm, like genetic programming, differential evaluation, or evolutionary programming. These optimized weights and biases obtained can be used for further training of the neural networks to obtain better accuracy. Also, we can detect suspicious tweets of these collusive users, and capture the interdependency of collusive users and their tweets that are submitted to black marketing sites.

Keywords
Online social networks
Collusion
Artificial intelligence
Black-marketed profiles
Machine learning
Deep learning
Collusive users