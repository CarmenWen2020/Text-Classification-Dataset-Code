Typhoons are one of the most destructive types of disasters. Several statistical models have been designed to predict their paths to reduce damage, casualties, and economic loss. To further increase prediction accuracy, two key challenges are (1) to extract better nonlinear 3D features of typhoons, which is hard due to their complex high-dimensional properties, and (2) to combine suitable 2D and 3D features in a proper way to improve predictions. To address these challenges, this paper presents a novel spatio-temporal deep learning model named Attention-based Multi ConvGRU (AM-ConvGRU). To automatically select high response isobaric planes of typhoons when considering their whole 3D structures, AM-ConvGRU leverages the Residual Channel Attention Block (RCAB). Furthermore, it integrates a novel model named Multi-ConvGRU to extract large-scale nonlinear spatial features of typhoons. Moreover, the approach relies on a Wide & Deep framework to fuse the traditional Generalized Linear Model (GLM) with the proposed AM-ConvGRU model. To evaluate the designed approach, extensive experiments have been conducted using real-world typhoons data from the Western North Pacific (WNP) basin obtained from both the China Meteorological Administration (CMA) dataset and the EAR-Interim dataset maintained by the European Centre for Medium-Range Weather Forecasts (ECMWF). Results show that the proposed method outperforms state-of-the-art deep learning typhoon prediction methods. The source code is available on GitHub with the following link:https://github.com/xuguangning1218/Typhoon_Path.

Introduction
A typhoon is a disastrous low-pressure system that originates in a tropical or subtropical ocean near the equator. In principle, a low-pressure system near the equator can be easily formed by seawater which evaporates into the air by solar radiation in summer and autumn. When a low-pressure system is generated, the Coriolis Force can then transform it into a cyclone that rotates counterclockwise in the Northern Hemisphere and clockwise in the Southern Hemisphere. If solar radiation continues increasing, a cyclone will develop into a typhoon. Traditionally, the formation area of a tropical cyclone can be divided into seven basins. These include the North Atlantic basin, the Eastern North Pacific basin, the Western North Pacific (WNP) basin, the North Indian basin, the Western South Indian basin, the Eastern South Indian basin, and the Eastern South Pacific basin. The WNP basin is the most active oneFootnote1. During the typhoon season near the WNP, typhoons have the potential of causing important losses to the economy of coastal countries, as well as causing important damages and casualties. Hence, accurately predicting typhoon paths from this basin is critical.

Empirically, there are four types of typhoon paths in the WNP basin, which include westward, northwest, steering, and stray. A real typhoon path is often a combination of these four types, making it hard to model and predict. In spite of these difficulties, many researchers have proposed different methods to solve this problem. Generally, there are four prevalent types of techniques for typhoon path prediction. A subjective method and three objective methods [1]. (I) The Weather Chart method is a subjective method that requires forecasters or computers to merge weather resources into a weather chart. Then, forecasters predict the future movement of a typhoon based on the merged information of that chart. Therefore, the results heavily depend on the forecasters’ experience. (ii) The Dynamic Modeling method [2], also called the Numerical forecast method, is an objective method. It utilizes mathematical equations to model typhoon movements. But since these dynamics equations are too complex to solve directly, an approximate solution is generally obtained by a numerical method using supercomputers. (iii) The Statistical method is another objective method. It follows closely statistics about the weather resources instead of focusing on the physical movement. This approach has the advantage of consuming less computing resources than the Dynamic Modeling method. Moreover, it can be applied to most countries and areas. (iv) The Statistical-Dynamic method combines the Statistical method and the Dynamic Modeling met-hod. Statistics are used to compute more significant initial values for the dynamics equations. The forecast results mostly depend on the Dynamic Modeling method.

In recent years, much interest has been given to the Statistical approach because it is objective and less computing-intensive than dynamic modeling. To obtain accurate forecasts, the key problem with the statistical approach is how to define or derive good statistical models. Early studies on the Statistical approach have focused on identifying important 2D typhoon features. Note that, 2D typhoon features mean that the features are constructed in a 2-dimensional plane with simple 2D characteristics such as latitude, longitude, wind speed, and pressures of a typhoon center (or near a typhoon center). In 1972, Neumann proposed the CLImatology and PERsistence (CLIPER) method [3] to replace the HURAN system in the National Hurricane Center. The CLIPER model, which mainly models the 2D characteristics of typhoons, is a statistical multiple regression equation. From then on, the CLIPER method has become a baseline for the Statistical method, and many researchers from different basins have started studying this method. Based on Neumann’s version and Merrill’s version [4], Aberson et al. [5] adopted CLIPER for the North Atlantic basin in 1998. For the WNP basin, Wu et al. [6] proposed an improved version of CLIPER, which strengthens the time-segmented displacement component as climate factors. To extract 2D nonlinear characteristics of typhoons, Song et al. [7] leveraged the Support Vector Machine (SVM) model with kernel methods. More recently, Wang et al. [8] utilized an Artificial Neural Network (ANN) to learn nonlinear features of 2D typhoons automatically.

With recent advances in machine learning, several deep learning models have been designed to extract features from 2D or 3D representations of typhoons. Note that 3D typhoon features mean that the features are obtained in the 3D Cartesian coordinates. They include complex typhoon meteorological variant values such as temperature, geopotential, relative humidity, etc at different isobaric planes. Moradi et al. [9] proposed a sparse Recurrent Neural Network (RNN) to automatically extract nonlinear features of 2D typhoons. Besides, they have used Dynamic Time Warping to find paths similar to that of a target typhoon. To overcome the limitation of the Dynamic Time Warping method that requires typhoons to be monotonous, Alemany et al. [10] proposed a fully connected Recurrent Neural Network, i.e., a Long Short Term Memory (LSTM) [11], to construct nonlinear features of 2D typhoons. The innovation of that work is to encode typhoons’ center locations into a man-made grid point system to reduce error propagation. For modeling the 3D features of a typhoon, namely, a stack of reanalysis data of different pressure levels representing its 3D whole structure, much spatio-temporal deep learning methods were proposed. Liu et al. [12] designed a Convolutional Neural Network (CNN) [13] to construct the 3D structure of extreme weather events (including tropical cyclones) using reanalysis data. Then, Kim et al. [14] leveraged the Convolutional LSTM (ConvLSTM) model [15] to perform the same task. An advantage of ConvLSTM over CNN is that the former can capture the correlation between time and space. However, ConvLSTM has too many parameters that it can easily overfit the data. Besides, it is hard to extract deep 3D spatial nonlinear features through just a one-time CNN operation since reanalysis data is large-scale. For the North Atlantic basin, Sophie et al. [16] fused 2D and 3D models of typhoons using deep learning to improve typhoon path prediction. For 2D typhoon modeling, they used a Fully Connected Network to construct the 2D nonlinear feature of typhoons based on several simple features. For 3D typhoon modeling, they utilized a CNN to extract 3D nonlinear features of typhoons. But the representation of the 2D typhoon remains too simple to extract enough useful information. Additionally, the CNN model failed to consider the whole 3D structure of typhoons since it only considers isobaric planes independently. Generally, 3D typhoon feature extraction is considered as much more difficult than 2D modeling and is a key issue to improve forecasting. A second important challenge is how to better integrate 2D and 3D features.

To improve predictions, this paper applies a Wide & Deep framework to fuse 2D and 3D typhoon features for future typhoon path prediction. For the wide component, the GLM is used to extract the 2D typhoon features. For the deep component, a novel spatio-temporal deep learning model named AM-ConvGRU (Attention-based Multi-ConvGRU) is proposed to extract 3D typhoon features. Three major contributions are made to address the main limitations of previous studies:

1.
To model the 3D structure of typhoons, Residual Channel Attention Block (RCAB) is utilized. It automatically selects the high-response isobaric planes that indicate typhoons’ future directions based on their 3D structures.

2.
To cope with the large-scale feature extraction problem, a model named Multi-ConvGRU is developed to extract more sophisticated 3D spatial features.

3.
To combine 2D and 3D typhoon features, a Wide & Deep framework is used, that jointly trains the model.

The rest of this paper is organized as follows. Section 2 briefly reviews relevant path prediction techniques for both rigid objects and fluid objects. Then, Sect. 3 introduces deep learning concepts used by the proposed method, as well as the dataset and preprocessing steps. Section 4 describes the proposed method. Thereafter, Sect. 5 reports results from an extensive experimental evaluation, and Sect. 6 shows the limitation of this work. Finally, Sect. 7 draws a conclusion and describes future work.

Related work
Typhoon path prediction can be viewed as a path prediction or trajectory prediction problem. In general, path prediction problems can be of two types: predicting the paths of rigid objects or those of fluid objects. For instance, the prediction of traffic flow, robot trajectories, and pedestrian pathways can be considered as the first type. And forecasting tsunami trajectories, cloud trajectories, precipitation, and typhoon paths can be viewed as path predictions for fluid objects. The following paragraphs give an overview of the main techniques for path prediction, in terms of traditional methods and deep learning methods, respectively.

Traditional methods for path prediction
For a linear system, path prediction can be considered as a time series forecasting problem, where time is the key factor for prediction. For example, Multivariate Linear Regression (MVLR) was applied [3] to predict typhoon paths. However, a drawback of MVLR is that it can predict a path where the positions are nonconsecutive as it assumes that a typhoon’s position can be derived from variables representing the time series. Besides MVLR, most models of the autoregression family [17] can be used such as Autoregression (AR), Moving Average (MA), Autoregressive Moving Average (ARMA), and the Autoregression Integration Moving Average (ARIMA). They generally predict the value for a novel time step of a time series based on the previous time step(s), which makes the predictive path continuous.

To perform path prediction for nonlinear systems, several machine learning techniques have been applied. Support Vector Machine (SVM) works well for both linear and nonlinear systems. SVM aims at finding a maximum-margin hyperplane in high-dimensional space to perform classification or regression. For nonlinear systems, a kernel function can be used to solve nonlinearly separable problems by projecting the original space into a nonlinear space. Chau et al. [18] followed that approach by applying the SVM with a kernel function jointly with an artificial neural network to predict rainfall. However, the singular spectrum analysis technique used in that study is not suitable for extracting 3D spatial features. Another popular machine learning technique is Extreme Gradient Boosting (XGBoost) [19], an ensemble-based approach using trees for classification or regression. The XGBoost model is built iteratively. During an iteration, XGBoost learns parameters based on the residual error between results from the previous iteration and the current iteration, a process called boosting. XGBoost was used to classify trajectories of humans that used different transportation modes [20]. XGBoost is a powerful classifier that can outperform traditional machine learning methods such as SVM. However, using XGBoost requires relying heavily on expert domain knowledge [20], which may lead to unstable generalization.

Deep learning methods for path prediction
Encouraged by the recent success of deep learning in many fields [21, 22], several neural network models have been developed for path prediction. The most popular type is Recurrent Neural Networks (RNN), including the Long Short Term Memory (LSTM) [11] and the Gated Recurrent Unit (GRU) [23]. Both LSTM and GRU use a gate mechanism that selects useful information to be memorized for path prediction. These neural networks have improved path prediction performance for both rigid objects and fluid objects for various applications [24,25,26]. Besides, it was found that using nonlinear activation functions such as Sigmoid, ReLU, and arctangent can help to find good low-dimensional hidden representations. Furthermore, MarcinWoźniake et al. [27] proposed an affinity-aware encoding method that can significantly improve the low-dimensional features. Another type of neural network called Convolutional Neural Networks (CNN) [28] is famous for its spatial feature extraction ability and was thus used for path prediction in the time series domain. CNN was shown to provide good results on path data and sequence data with time information. For instance, Nikhil et al. [29] designed a CNN model to predict pedestrian trajectories for robot navigation. However, a limitation of that study is that convolution for the temporal dimension is done with a 1D CNN which is too simple for capturing the key features of complex phenomena.

Recently, spatio-temporal learning has been getting more attention than time-series learning for path prediction as the former can effectively represent complex spatio-temporal phenomena. Xingjian et al. [15] proposed the convolutional LSTM (ConvLSTM) network, which combines a convolutional neural network with a recurrent neural network, and was shown to very well predict precipitation from radar pictures. The main idea behind ConvLSTM is to extend LSTM sequence inputs (time-series arrays) to matrix inputs (picture arrays). Then, an improved version of ConvLSTM named PredRNN [30] was proposed. It introduced a novel spatio-temporal memory to connect the spatial and temporal memories of ConvLSTM. Thereafter, PredRNN++ [31] was designed to increase the temporal capability of PredRNN with both long-term and short-term memory. PredRNN and PredRNN++ can be also utilized for precipitation prediction. And more generally, the ConvLSTM network and its extensions are suitable for Euler spaces since these models’ inputs are similar to 2D pictures. However, a real environment may not be Euler-like. For instance, a social network or traffic network is not Euler-like. In this case, the CNN-based spatio-temporal learning method seems to have limited ability to capture spatial features from a non-Euler space. To overcome this issue, the Graph Neural Network (GNN) model [32] was introduced for spatio-temporal learning. Then, Yu et al. [33] proposed the Spatio-Temporal Graph Convolutional Networks (ST-GCN) for traffic forecasting. In that study, each road segment is represented as a graph node. The convolutional operator (in both the temporal and spatial dimensions) was used in the Laplacian matrix to extract non-Euler, nonlinear features from the graph. Based on this work, Diao et al. [34] extended the stationary Laplacian matrix into a dynamic Laplacian matrix for capturing the global and local traffic features since traffic flow is not set in stone. Recently, Dai et al. [35] fused ST-GCN with heterogeneous navigation data and designed a compound Laplacian matrix for the same task.

Although several approaches have been proposed for a rigid or fluid object path prediction, it remains a challenge to extract good nonlinear features from a 3D fluid object i.e., 3D typhoon, and to fuse them with its’ 2D features to provide accurate predictions. The model proposed in this paper aims at addressing these challenges.

Preliminaries
This section introduces deep learning techniques that are the foundation of the proposed AM-ConvGRU for 3D typhoon features extraction. This includes the basic ConvLSTM model for spatio-temporal learning, the Residual Learning method, and the Attention Mechanism. Besides, this section also describes the dataset used in this paper and the data preprocessing approach.

ConvLSTM
The ConvLSTM model [15] combines the LSTM and CNN models because the former is good at time series data learning, while the latter is very good for spatial data learning. This is suitable for modeling complex spatio-temporal data from the real world. ConvLSTM was applied to solve the precipitation forecasting problem. The combination is done by replacing the scalar operations in LSTM cells with tensor operations, as depicted in Fig. 1. The detailed mechanism of the ConvLSTM model is as follows:

𝑓𝑡=𝜎(𝑊𝑥𝑓∗𝑡+𝑊ℎ𝑓∗𝑡−1+𝑊𝑐𝑓∘𝑡−1+𝑏𝑓),𝑖𝑡=𝜎(𝑊𝑥𝑖∗𝑡+𝑊ℎ𝑖∗𝑡−1+𝑊𝑐𝑖∘𝑡−1+𝑏𝑖),𝑔𝑡=𝑡𝑎𝑛ℎ(𝑊𝑥𝑔∗𝑡+𝑊ℎ𝑔∘𝑡−1+𝑏𝑔),𝑡=𝑓𝑡∘𝑡−1+𝑖𝑡∘𝑔𝑡,𝑜𝑡=𝜎(𝑊𝑥𝑜∗𝑡+𝑊ℎ𝑜∗𝑡−1+𝑊𝑐𝑜∘𝑡+𝑏𝑜),𝑡=𝑜𝑡∘𝑡𝑎𝑛ℎ(𝑡),
(1)
where ∗∈𝐑𝑐×𝑛×𝑚 denotes input image, ∗ denotes hidden output, ∗ denotes convolution kernel, 𝑏∗ denotes bias. Then 𝑓𝑡,𝑖𝑡,𝑡, and 𝑜𝑡 denote the forget gate, input gate, memory, output gate, respectively. Moreover, ′∗′ represents the convolution operator, while ′∘′ denotes the Hadamard product.

Fig. 1
figure 1
Inner structure of ConvLSTM [15]. ConvLSTM is an extend version of LSTM model, which replaces LSTM element-wise multiplication into convolution operator. Specifically, an element in 𝑡 is generated from 𝑡−1 and 𝑡 through convolution manner

Full size image
Residual learning
Another technique that is a foundation of the proposed model is residual learning [36]. It is an alternative way of learning the parameters of a neural network. Traditionally, a new value is found for a parameter based on the label side. However, using a gradient to update parameters becomes harder as the layers become deeper. To deal with this issue, a deep residual learning neural network utilizing residual learning was designed [36]. Residual learning tries to learn the residual part between the true values and the predicted values of parameters to avoid learning totally new parameters. The detailed mechanism of the residual learning method is shown in Fig. 2.

Fig. 2
figure 2
Residual learning block [36]

Full size image
Let x be the input of the residual learning block and (𝑥) be the output of Weight Layer 2. The cross-layer connection also called a shortcut, is the identity x. By denoting the final output of the Block as (𝑥), the formula (6) is obtained:

(𝑥)=(𝑥)+𝑥,
(2)
where x is the input of the block, (𝑥) is the final output of the block, and (𝑥) will be the learned residual part.

Attention mechanism
Another deep learning technique used as a basis for this work is the Attention Mechanism [37]. A normal layer in a neural network consists of a custom number of neurons. Under normal conditions, a neural network tends to treat all neurons equally. But for various reasons, some neurons may be more active than others and different layers might have different active neurons. The Attention Mechanism was proposed to improve the performance of a neural network by giving more weight to learning the parameters of the active neurons than those of other neurons. The Attention Mechanism was shown to be useful for several tasks such as natural language translation [38] and image recognition [39]. Generally, Attention is a technique that can be used to improve a neural network’s efficiency and effectiveness [40].

The Attention Mechanism is formally defined as follows. Let there be n key vectors 𝐤1,𝐤2,…,𝐤𝑛, a query vector 𝐪, and a function called the attention function (⋅), which is used to calculate the attention scores 𝐞 of neurons. The score of the i-th neuron is calculated according to the following formula

𝑒𝑖=(𝐤𝑖,𝐪).
(3)
The attention scores e are normalized as a by this formula

𝑎𝑖=𝑒𝑖∑𝑛𝑗=1𝑒𝑗.
(4)
Finally, the normalized attention scores are used to calculate the high-response input vector by this formula

𝐯𝑖=𝑎𝑖𝐤𝑖.
(5)
Dataset and preprocessing method
This subsection presents the two datasets used in this paper, for 2D typhoons and 3D typhoons, respectively. Moreover, the preprocessing methods for both datasets are described.


Datasets The tropical cyclone database [41] is a 2D typhoon dataset maintained by the China Meteorological Administration (CMA)Footnote2. The CMA dataset provides the location and intensity of tropical cyclones every 6 hours in the WNP basin since 1949. Records of the CMA dataset are described using the attributes of Table 1. Typhoon paths from this dataset are illustrated in Fig. 3.

Fig. 3
figure 3
Visualization of typhoon paths of the CMA dataset

Full size image
EAR-Interim is a 3D typhoon datasetFootnote3, maintained by the European Centre for Medium-Range Weather Forecasts (ECMWF). This dataset provides 14 types of atmospheric reanalysis data for the global atmosphere, collected since 1979. Each reanalysis data is provided in four-time intervals (00:00, 06:00, 12:00, and 18:00) including 37 isobaric planes. In this paper, the Geopotential reanalysis data is used with a 1∘×1∘ grid to construct the 3D typhoons’ structures. Geopotential refers to the gravitational potential energy of a unit mass at a particular position relative to the mean sea level. For instance, Fig. 4 displays the Geopotential of typhoon Mangkhut in 1000 hPa near the Guangdong province of China from UTC 00:00 on September 15th, 2018 to UTC 18:00 on September 16th, 2018. The negative geopotential in dark blue is the center of Mangkhut. It can be observed that typhoon Mangkhut has slowly faded after landing in Guangdong province at around UTC 6:00.

Fig. 4
figure 4
The geopotential of mangkhut in 1000 hPa

Full size image
Table 1 Attributes of the CMA dataset records
Full size table

Preprocessing Method To prepare the 2D typhoons’ dataset for this study, records with missing values were first deleted as well as duplicated records. Then, the dataset features shown in Table 1 are transformed according to the CLIPER method into the features listed in Table 2. In that table, a variable with a subscript i represents the variable’s value i hours ago, e.g. LAT6. A location (LOC) consists of longitude and latitude, that is LOC=(LAT, LONG). A pathway (PATH) consists of two locations, that is PATH𝑖,𝑗=(𝐿𝑂𝐶𝑖,𝐿𝑂𝐶𝑗). Linear information about a 2D typhoon is given by features 1 to 32, where features 1 to 15 provide basic historical information, feature 16 is the typhoon’s annual information, and features 17 to 28 is information about the typhoon’s structural changes. Features 29 to 53 describe nonlinear information about a 2D typhoon, where features 29 to 34 are the nonlinear transformations of central latitude and longitude, and features 35 to 53 are the nonlinear location and pathway transformations.

Table 2 Features of the CLIPER method
Full size table
To prepare the 3D typhoons’ dataset, the earth was divided into a 1∘×1∘ grid by geopotential, similar to the one shown in Fig. 5. Then, a 31∘×31∘ area around the typhoon center was selected to construct a 2D typhoon structure for each isobaric plane, as shown in Fig. 6. Lastly, the 1000 hPa, 750 hPa, 500 hPa, and 250 hPa isobaric planes were combined to obtain a 3D typhoon structure and construct a time-series of 3D typhoons’ structures (Fig. 7) observed at the current time, 6-hour ago, 12-hour ago, and 18-hour ago.

Fig. 5
figure 5
A 15∘×15∘ grid dividing the earth by geopotential

Full size image
Fig. 6
figure 6
A 2D typhoon structure

Full size image
Fig. 7
figure 7
The 3D time-series structure of a typhoon

Full size image
Proposed method
This section presents the proposed method. First, Sect. 4.1 presents the proposed AM-ConvGRU model, designed to automatically select high response channels and extract large-scale spatial features. Then, Sect. 4.2 describes the overall model that takes AM-ConvGRU as a building block for the Wide & Deep framework [42] to fuse the 2D and 3D typhoon features.

The AM-convGRU model
The proposed method for typhoon path prediction is based on a novel neural network named Attention-based MultiConvGRU (AM-ConvGRU). It consists of two components designed to automatically select high-response channels and extract large-scale spatial features, called the Residual Channel Attention Block (RCAB) and Multi-ConvGRU.


Residual Channel Attention The Residual Channel Attention Block (RCAB) [43] is introduced to auto-select high response isobaric planes to a future typhoon movement and help the neural network to consider a typhoon’s 3D structure.

Fig. 8
figure 8
Residual channel attention block [43]

Full size image
The principle of the RCAB is shown in Fig. 8. As mentioned in Sect. 3, the attention scores 𝐚 should be calculated before computing the attention output 𝐯. The RCAB requires that the shape of the data is 𝐻×𝑊×𝐶, where H is the height of the image, W is the width and C is the channel(s). The RCAB is applied in two stages. In the first stage (calculating attention scores), the RCAB first gets the channel description (1×1×𝐶) by global average pooling. Then, the RCAB performs a r rate downsample (1×1×𝐶𝑟) and a r rate upsample (1×1×𝐶). It is believed that these two sampling steps will make the neural network more flexible in learning the attention score. Then, a Sigmoid function is applied to the output to obtain the normalized attention scores (1×1×𝐶). In the second stage (calculating the attention output), the RCAB calculates the Hadamard product between the normalized attention scores and the original input to produce the output of the block. Both stages are performed using residual learning.

Compared to the CNN-based model [12], a neural network with the RCAB can consider the 3D typhoons’ structure more comprehensively since the convolution kernels in the CNN model are independent. In addition, the residual learning method might make the learning process more effective and stable as it just requires focusing on learning the residual part.


Multi-ConvGRU The Multi-ConvGRU model is designed to overcome the large-scale spatial feature extraction problem. As mentioned in Sect. 1, ConvLSTM [14] can extract 3D typhoons’ features. However, ConvLSTM might tend to overfit the input data since it has a huge number of parameters. To deal with this problem, it is proposed to replace ConvLSTM with a Convolutional Gated Recurrent Unit (ConvGRU) [44] to accelerate training and avoid overfitting to some extent. The formulas of the ConvGRU are given by:

𝑡=𝜎(𝑊𝑥𝑧∗𝑡+𝑊ℎ𝑧∗𝑡−1+𝑏𝑧),𝑡=𝜎(𝑊𝑥𝑟∗𝑡+𝑊ℎ𝑟∗𝑡−1+𝑏𝑟),′𝑡=𝑓(𝑊𝑥ℎ′∗𝑡+𝑡∘(𝑊ℎℎ′∗𝑡−1)+𝑏ℎ),𝑡=(1−𝑡)∘′𝑡+𝑡∘𝑡−1,
(6)
where ‘∗’ denotes the convolution operator, ‘∘’ represents the Hadamard product. But as the reanalysis data is large-scale and ConvGRU tends to focus less on spatial feature learning, it is hard to get a good result by simply using ConvGRU.

To deal with the large-scale spatial feature learning problem, a novel Multi-ConvGRU model is designed to extract more sophisticated 3D typhoon spatial features from reanalysis data. Compared to the ConvGRU, the proposed method introduces a multi-convolution module for the input, which can extract more sophisticated spatial features. The equations of the Multi-ConvGRU model are

𝑡=𝜎(𝛾𝑧𝑖(𝑡)+𝑊ℎ𝑧∗𝑡−1+𝑏𝑧),𝑡=𝜎(𝛾𝑟𝑖(𝑡)+𝑊ℎ𝑟∗𝑡−1+𝑏𝑟),′𝑡=𝑓(𝛾ℎ𝑖(𝑡)+𝑡∘(𝑊ℎℎ′∗𝑡−1)+𝑏ℎ),𝑡=(1−𝑡)∘′𝑡+𝑡∘𝑡−1,
(7)
where 𝛾𝑖(𝑡) is the multi-convolution module which is denoted as 𝛾𝑖(𝑡)=𝑊1∗𝑊2∗𝑊3∗⋯∗𝑊𝑖∗𝑡. Technically, the proposed multi-convolution module can enlarge receptive field for the corresponding Multi-ConvGRU layer and extract high-order nonlinear spatial features.

The main contribution of this method is the multi-convolution module. As it can be clearly seen in Eq. 7, the multi-convolution module aims to extract more sophisticated information from input 𝑡. The stacking convolution of the multi-convolution module can not only consider wider environmental factors overcoming the large-scale problem but also extract deeper spatial nonlinear information to address the ineffective feature extraction problem. Additionally, the module can be adjusted to different datasets or problems. To balance the feature extraction effect and the consumption of computing resources, we empirically found that setting the number of convolution operations to 𝑖=3 gave the best results. Note that a small i is recommended to avoid overfitting. Besides, the comparison experiments of different i about this task are conducted in Sect. 5.3 and the results are reported in Table 5.

Wide & Deep fusion method
Another important aspect is how to fuse the 2D and 3D typhoon features. For this purpose, the proposed method adopts the Wide & Deep framework [42]. This framework was proposed to solve the application recommendation problem of the Google App Store. In this framework, the wide component consists of the Generalized Linear Model (GLM) which is used to learn the memorization of the data. While the deep component, a neural network, is used to archive the generalization of the data.

Here, we illustrate the Wide & Deep framework in detail. The wide component is the GLM shown as in Fig. 9 (left), whose formula is given by:

𝐲=𝐰𝑇𝐱+𝑏,
(8)
where 𝐱=[𝑥1,𝑥2,⋯,𝑥𝑑] is a vector of d dimensions, 𝐰=[𝑤1,𝑤2,⋯,𝑤𝑑] are the parameters of the GLM, and b is the bias. The deep component is the Feed-forward Neural Network (FNN) shown as in Fig. 9(right), which is formulated as:

𝐡(𝑙+1)=𝑓(𝐰(𝑙)𝐡(𝑙)+𝑏(𝑙)),
(9)
where 𝐡(𝑙) is a feature vector in l-th hidden layer, 𝐰(𝑙) denotes the parameters in l-th layer, b is the bias, and f is an activation function. In addition, the Wide & Deep framework are shown as in Fig. 9(middle), which concatenates the output from wide model and deep model.

Fig. 9
figure 9
The Wide & Deep framework [42]. The leftmost of the figure is the wide model, namely the GLM model. The rightmost of the figure is the deep model, namely the FNN model. The middle of the figure is the Wide & Deep framework

Full size image
In this paper, the methodology of the Wide & Deep framework is adopted to fuse the 2D and 3D typhoon features. The 2D typhoons features, constructed by the CLIPER method, can be seen as memorization, representing the knowledge of typhoons discovered by people. The 3D typhoons features, extracted by a neural network, can be seen as generalizations, representing knowledge about typhoons that is unknown to people. Specifically, the 2D typhoon features are fed into the GLM as the vector 𝐱 and the 3D typhoon features are feed into the FNN as the vector 𝐡(0). The outputs, from both the GLM and the FNN, are concatenated as a new vector are transformed by a full-connected layer for the final prediction.

The overview of the proposed typhoon path prediction model is shown in Fig. 10. For the wide component, the CMA dataset is preprocessed by the CLIPER method. The preprocessed output is described according to the features of Table 2. This result is taken as input by the GLM. For the deep component, the EAR-Interim dataset is transformed into a time series of 3D typhoon structures. These structures are then given as input to the proposed AM-ConvGRU neural network. The neural network first auto-selects the high response isobaric planes by the RCAB, to consider the whole 3D typhoons’ structure. Thereafter, the Multi-ConvGRU model extracts more sophisticated nonlinear spatial features from the 3D typhoons. Afterward, the Maxpooling layer minifies the network structure and retains sensitive features. The above process is repeated three times, where the two first times are processed in historical time dimensions, whereas the last time is processed in the current time dimension. After that, the Flatten layer flattens all features in one dimension. For the Features Integrator, the output of the wide component and the output of the deep component are inputted into the dense layer for fusing. Then, the 2D and 3D typhoon concatenated features are transformed by the second dense layer. Finally, the network predicts the central latitude and longitude of a typhoon for the next 24 hours.

Fig. 10
figure 10
Overview of the typhoon prediction model with AM-ConvGRU. The architecture of the model is based on the Wide & Deep framework. As for model input, it consists of two folds which are 2D typhoon and 3D typhoon, and the Max-Min Normalization method is applied to both these two inputs. The features extractor is composed of two components, namely the wide component and the deep component. In the wide component, the 2D typhoon features with shape (53, ), are constructed by the CLIPER method, are transformed into a hidden layer by GLM. In the deep component, the 3D time-series typhoon features with shape (4, 4, 31, 31), whose dimensions denote time-steps, channels, width, and height respectively, are transformed by three-layers AM-ConvGRU for feature maps down-sampling. As for the Features Integrator, both wide and deep features are combined in a dense layer. Finally, the model output the latitude and longitude of a typhoon at the 24-hour lead time

Full size image
Experiments
This section presents the experimental evaluation of the proposed method. Two experiments have been done. The first one compares GLM, which is equivalent to CLIPER for this task, to the state-of-art machine learning methods and deep learning methods for typhoon path prediction, to choose a good 2D typhoon model for the wide component. The second experiment implements the Wide & Deep framework to assess whether utilizing the RCAB and Multi-ConvGRU components of the proposed AM-ConvGRU model improves results, respectively.

Experimental setting
Datasets Partition For the experiments, the CMA and EAR-Interim datasets were first aligned by considering both the temporal domain and the spatial domain. Then, the datasets were split into three parts, training, validating, and testing. For the training set, typhoons recorded in the 2000-2014 time period were selected. For the validation set, 10% of the training set was chosen randomly. For the testing set, typhoons recorded from 2015 to 2018 were selected. The reason for choosing the 2000 to 2018 range is that typhoon records from the CMA dataset are more reliable after 2000.


Preprocessing Step In this stage, we ignore the typhoon with less than 12 records, namely its lifetime of fewer than 3 days. The reason is that this kind of typhoon is too short to build the CLIPER method. In addition, both 2D and 3D typhoon inputs are normalized by the Max-Min method.


Experimental Detail To ensure fairness, the detail of all experiments are set to be the same. Especially, the batch size is set to 128. The training epochs are set to 128. Besides, the training, validation, and testing data are transformed by the Max-Min normalization method. The loss function is chosen as Mean Absolute Error (MAE) loss function. In addition, the Adam optimizer [45] is adopted for its versatility and efficient computation.

Experiments Environment The experiments were carried out using PyTorch 0.4.1 on a computer equipped with an Intel®) Core (TM) i7-7800X CPU @ 3.50GHz processor, a GeForce GTX 1080Ti*2 GPU, and 64 GB of RAM, running the Ubuntu 16.04 LTS operating system.


Performance Measure To evaluate the performance of the proposed model, the Great Circle Distance is utilized to calculate the error distance of ground true and predictive point in a sphere surface. The formula of the Great Circle Distance is as follow:

𝐷=2×𝑅×arcsin(sin2(|𝛼𝑝−𝛼𝑟|2)+cos𝛼𝑝cos𝛼𝑟sin2(|𝛽𝑝−𝛽𝑟|2)‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾√),
(10)
where R denotes the radius of the earth and we set it to 6371.009 km, 𝛼𝑟 and 𝛽𝑟 indicate the ground true latitude and longitude, and 𝛼𝑝 and 𝛽𝑝 indicate the predictive latitude and longitude.

Evaluating GLM’s effectiveness
The first experiment was done to validate if the GLM using CLIPER method is a good choice for the wide component to predict 2D typhoons. The GLM was compared with several state-of-art machine learning methods that are XGBoost [19], Random Forest [46], GBDT [47], 1D CNN [48], LSTM [11], GRU [23] and SimpleRNN Footnote4 The first three methods are applied with the features of Table 2. The other methods, which are state-of-the-art deep learning learning models, construct features automatically based on Table 1. Note that we do not compare with the approaches of [9 and 10] because they are designed for typhoon prediction in the Atlantic basin based on different attributes.

The experimental results are shown in Table 3 for each compared method in terms of prediction error in km for each year, and as the average and standard deviation for all years. In addition, all the methods are run three times and we report the average value and standard deviation. It can be observed that the decision tree-based machine learning algorithms (XGBoost, Random Forest, and GBDT) do not perform well. This is because they have limited ability to model 2D typhoons due to the combination of linear and nonlinear attributes. The deep learning methods usually provide better predictions than tree-based methods. However, the GLM has better results overall. This is because deep learning methods construct features that are not perfect as the amount of data is limited and only four features are available in the CMA dataset (latitude, longitude, wind speed, and pressure). Features used by the GLM have been selected by domain experts.

Based on the above results, GLM is selected as the wide component in the proposed model. Hence, the wide component models 2D typhoons based on people’s knowledge, while the deep component models 3D typhoons using a data-driven approach to learn new knowledge for typhoon prediction. The two components are thus complementary.

Table 3 Typhoon future 24 hours path prediction error in wide component (km)
Full size table
Evaluating the Wide & Deep framework’s effectiveness
The second experiment was carried out to assess the designed Wide & Deep framework. It was compared with several approaches. Note that all the methods were run three times and we report the average value and standard deviation. The baseline consists of only a wide component that is the GLM as it was found to give the best results in the previous experiment. This wide component was combined with several state-of-art deep components to learn 3D typhoon features. Those components are 2D CNN [12], 3D CNN, ConvLSTM [14] and ConvGRU [44]. Besides, the proposed framework is also compared with that of [16], which is the first to use a Wide & Deep framework for typhoon path prediction to our best knowledge. Note that the distance to the land of the 0D feature of [16] is not taken into account because the CMA dataset does not contain this feature.

The proposed AM-ConvGRU method (Multi-ConvGRU with RCAB as deep component) was compared to these five algorithms. Furthermore, to evaluate the effectiveness of both Multi-ConvGRU and RCAB, the proposed method without RCAB was also compared. Additionally, the AM-ConvGRU method was tested with different i values for the multi-convolution module.

Moreover, to provide a comprehensive evaluation, the compared algorithms and the proposed method were applied with different numbers of isobaric planes which are 1 isobaric plane (500 hPa), 4 isobaric planes (250 hPa–1000 hPa, +250 hPa), 8 isobaric planes (300 hPa–1000 hPa, +100 hPa), and 16 isobaric planes (250 hPa–1000 hPa, +50 hPa). Also, all algorithms were implemented for different time scales including single time-step (current) and multiple time-steps (current, 6 hours ago, 12 hours ago, and 18 hours ago).

The experimental results are shown in Tables 4, 6 and 5 . Table 4 shows the prediction error in km for a single time step for the baseline, GLM with a 2D CNN and GLM with a 3D CNN. The numbers 1, 4, 8, and 16 in the method names indicate the number of isobaric plane(s). It is observed that models fusing 2D and 3D typhoons using a Wide & Deep framework outperform the baseline model based only on 2D typhoons.

Table 6 shows the prediction error in km for multiple time steps for the baseline (first row), the method of [16] (rows 2 to 4), the GLM with 2D or 3D CNN (rows 5 to 11), the GLM with ConvLSTM (rows 12 to 14), and the proposed AM-ConvGRU method (rows 15 to 17). By comparing the results with Table 4, it is found that using multiple time steps provides better predictions. It is also found that the proposed AM-ConvGRU model with 4 isobaric planes generally outperforms all other models. For the CNN models, increasing the number of isobaric planes generally gives better results. The reason is that CNN has a great ability to extract spatial features. Although ConvLSTM or the ConvGRU model can capture the relationship between spatial features and temporal features, these models tend to focus more on capturing temporal features instead of large-scale spatial features. Hence, the error of ConvLSTM or ConvGRU generally increases with the number of isobaric planes. In this situation, Multi-ConvGRU enhances the spatial feature extraction ability through the multi-convolution module, which is why Multi-ConvGRU outperforms ConvLSTM and ConvGRU. As typhoons are complex phenomena, it is important to consider typhoons’ whole 3D structures. The RCAB plays an important role in this by auto-selecting high-response isobaric planes for predicting the next typhoon movements.

In the previous table, the proposed AM-ConvGRU method was applied with a value 𝑖=3 for the multi-convolution module. To evaluate the influence of this parameter and that of the RCAB module, Table 5 shows the prediction error in km for multiple time-steps for different values of i without the RCAB. It is observed that 𝑖=3 provides the best results. Large values of i such as 4 or 5 yield a high error due to overfitting possibly, while smaller values such as 1 and 2 are not enough to generalize. Besides, Fig. 11 shows the numbers of parameters from the above Multi-ConvGRU models. It is observed that the parameters increase as the i from multi-convolution goes larger. Moreover, by comparing Tables 5 and 6, it is observed that using the RCAB improves predictions.

Fig. 11
figure 11
Numbers of parameters from Multi-ConvGRU with the different multi-convolution modules

Full size image
Table 4 Typhoon future 24 hours path prediction error (km) with Wide & Deep in single time-step
Full size table
Table 5 Typhoon future 24 hours path prediction error (km) with Wide & Deep in multi time-step with different multi convolution modules
Full size table
Table 6 Typhoon future 24 hours path prediction error (km) with Wide & Deep in multiple time-step
Full size table
Visualize residual channel attention block weights
In this subsection, we show the variety of the attention weights in RCAB during the training stage. The result is shown in Fig. 12. In that figure, attention weight in the corresponding epoch denotes the latest tuning weights in the epoch. Note that the weights in epoch 0 denote its initiated values. We can conclude that the 250 hPa isobaric plane is weighted much attention, which means that our proposed model can indeed capture the high-response isobaric plane. Through the domain knowledge, we know that the 250 hPa isobaric plane denotes weather conditions at a relatively high altitude, which can reflect the inner variety of the weather system. As a result, it is reasonable to weigh much more importance to this isobaric plane.

Fig. 12
figure 12
The variety of RCAB weights in training stage

Full size image
Visualize performance upon real-world cases
To qualitatively evaluate predictions made by the proposed model, results for the typhoon Mangkhut and Talim were analyzed in more detail. Those are two supertyphoons that occurred in 2018 and 2017, respectively. Figure 13 shows the historical typhoon path of Mangkhut (blue), as well as the paths predicted by the baseline (green) and the proposed model (red). Figure 14 displays the same information for Talim. It can be observed that the proposed method outperforms the baseline method in terms of distance error by 53.45 km for Mangkhut and 109.51 km for Talim.

Overall, the experiments have shown that the proposed model outperforms the baseline and Sophie’s Wide & Deep model for typhoon path prediction. Moreover, it was observed that the designed AM-ConvGRU model performs better than the ConvLSTM and ConvGRU deep components.

Fig. 13
figure 13
Visualization of prediction error for Typhoon Mangkhut

Full size image
Fig. 14
figure 14
Visualization of prediction error for Typhoon Talim

Full size image
Limitation
In this section, the limitation is discussed in two aspects. On the one hand, the proposed model can only make predictions for the typhoons which records are larger than 8. In this case, our model may have limited ability to predict early typhoon paths in the ocean. On the other hand, the real-time requirement might be the second limitation. Although the cost of the predictive time in the test dataset is just 5.30 seconds, generation of the real-time 3D typhoon input, namely the reanalysis data, might be delayed by data correction and post-processing.

Conclusion
To improve typhoon path prediction using deep learning approaches, this paper has presented a novel model named Attention-based Multi ConvGRU (AM-ConvGRU). To automatically select high response isobaric planes of typhoons when considering their whole 3D structures, AM-ConvGRU leverages the Residual Channel Attention Block (RCAB). Moreover, it integrates a novel model named Multi-ConvGRU to extract large-scale nonlinear spatial features of typhoons. In addition, the Wide & Deep framework is applied to fuse both the 2D typhoon features and 3D typhoon features, where the wide component with the Generalized Linear Model (GLM) handles the 2D typhoon features and the deep component with the proposed AM-ConvGRU tackles the 3D typhoon features.

The designed model was compared with state-of-the-art models using data obtained from the China Meteorological Administration (CMA) and the EAR-Interim dataset maintained by the European Centre for Medium-Range Weather Forecasts (ECMWF). Results have shown that for these two datasets, fusing 2D and 3D typhoons can outperform the CLIPER method. Moreover, it was found that AM-ConvGRU provides better predictions than state-of-the-art methods thanks to the RCAB and Multi-ConvGRU components.

For future work, we plan to adopt the proposed AM-ConvGRU model to fuse satellite images of typhoons to further improve predictions. Besides, we will also consider applying AM-ConvGRU to other applications where spatio-temporal data is utilized for prediction or classification.

Keywords
Typhoon path prediction
Spatio-temporal
ConvGRU
Wide & Deep