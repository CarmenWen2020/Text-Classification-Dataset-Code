Recent studies have revealed that the energy hole problem caused by multi-hop data collection in a static data collector based wireless sensor network(WSN) is a major threat to the lifetime of the network. With the advancement of mobile terminal technology, the application of mobile data collectors (MDCs) has gained popularity in a large scale WSN. A WSN design with one or more MDC can significantly diminish the energy hole problem, which in turn prolongs the network operational lifetime. However, most of the MDC based existing schemes suffer from achieving a balance between routing energy consumption and data delivery delay. Moreover, the majority of the sensor network protocols fail to retain their impact as the network topology changes due to the inclusion or exclusion of nodes. So, for a dynamic WSN, it is essential to support a recovery mechanism to continue the data propagation despite inevitable changes in the WSN topology. Considering all the aforementioned challenges, this paper proposes an adaptive hierarchical data dissemination (AHDD) mechanism for multiple MDC enabled dynamic wireless sensor network, which alleviates the energy hole problem as well as resolves the fault-tolerance issue. Simulation results demonstrate that the proposed protocol has shown improved performance with respect to performance metrics namely, network lifetime, energy efficiency, packet delivery percentage, and end-to-end delay.

Previous
Next 
Keywords
Energy

Fault-tolerance

Mobile data collector

Routing

Wireless sensor network

1. Introduction
The Internet of Things (IoT) is noticeably the foremost revolution in information technology since the last decade (Sundhari and Jaikumar, 2020, Chanak and Banerjee, 2020). The IoT is a system of a number of devices, sensors, objects that share information and collaborate through the wired or wireless media. By enabling the collaboration and convergence between systems and introducing a new paradigm of small-cost, reliable, and flexible information technology, automation costs have been reduced, and the reach of automation systems has enhanced (Yue and He, 2018, Glaroudis et al., 2020). Wireless sensor networks (WSNs) is indeed a crucial part of IoT and is majorly applied for environmental data sensing (Ullah, 2020). WSN technology has gained widespread attention since it has significant application value for various applications such as agriculture, defense, intelligent monitoring, etc. (Lee and Ke, 2018, Sundhari and Jaikumar, 2020). WSN is a large set of tiny embedded devices known as sensor nodes with sensing, processing (micro-controller), communication (wireless transceiver), and power units. A sensor node has limited battery power, and battery replacement may be inconvenient and unwanted depending on the application (Yue and He, 2018).

In these circumstances, a sensor node ought to employ as little resources as possible to persist the lifetime of the WSN. A large fraction of energy depletion initiates from communication. During communication, energy expenditure is heavily influenced by the position of a node and its physical distance from the base station (BS). In a multi-hop network, sensor nodes adjacent to the BS are the utmost power draining, as additional energy is needed to forward data from other nodes as well as to relay their respective data to the BS (Jurado-Lasso et al., 2019). In comparison, sensor nodes farthest from the BS (at the border of the sensing area) expend most of their energy in a single-hop network. The inclusion of a mobile data collector (MDC) is one way of improving the longevity of the network by significantly addressing the depletion of network energy (Yue and He, 2018, Wang et al., 2019a). MDCs are robots or unmanned aerial vehicles that can travel across the field to gather sensor-generated data of interest. The data collector’s mobility enables data to be gathered from all sensor nodes in the sensing area by moving MDC closer to the node (Wang et al., 2019b, Donta et al., 2019). However, moving the data collector next to every node considerably increases the data gathering latency in a large scale network. Such a scenario may not satisfy the stringent delay criteria enforced by some real-time applications (Maurya et al., 2019).


Download : Download high-res image (498KB)
Download : Download full-size image
Fig. 1. A WSN network model.

Furthermore, contingent on the application, MDC may be constrained to sojourn at some nominated locations for certain security purposes. In such cases, an MDC begins the data gathering process by periodically touring the series of sojourn points that are nominated by the BS (Moh’d Alia, 2017, Wen et al., 2017). Moreover, for delay-sensitive applications, multiple MDCs may be applied to gather the sensor node’s data from the sensing region (Toor and Jain, 2019, Koosheshi and Ebadi, 2019). In the presence of multiple MDCs, sojourn points are divided into a number of disjoint subsets, and each subset is assigned to one MDC. Each MDC visits its associated sojourn points to collect data and deliver the collected data to the BS. So, sensor nodes are required to disseminate their data at the preferred sojourn point. Nodes in the vicinity of sojourn points are termed as rendezvous nodes (RNs), which cache the incoming data from the distant nodes and forward them to the MDC when MDC comes within its communication range. Recent state-of-the-art approaches confirm that cluster based data communication has better energy efficiency and scalability for a large scale sensor network (Fanian and Rafsanjani, 2019, Ullah, 2020). In a clustered WSN, a cluster head (CH) is chosen from each cluster that aggregates the cluster data and forwards it to the next hop CH to disseminate the data towards a nominated MDC sojourn point (Jurado-Lasso et al., 2019, Krishnan et al., 2019). It eases the routing process as only CHs participate and preserves the network bandwidth by performing data aggregation at each cluster level. Fig. 1 shows a WSN model with multiple MDCs.

1.1. Challenges
In WSN, the sensor nodes are confined to local information (its own and neighbors’ data) as global information sharing results in heavy message exchange and energy consumption. So, the process of clustering and routing protocols should be distributed in nature i.e., every node can make decisions autonomously on the basis of local information only (Deebak and Al-Turjman, 2020, Sundhari and Jaikumar, 2020). In addition, the protocols should be adaptive to the dynamic variations in the network topology, like the addition of new nodes, failure of existing nodes, node movement, etc. (Wang et al., 2018a). Based on the application necessity, occasionally, new nodes may be essential to be added to the current network. On the other hand, due to the hazardous deployment environment, external interference, and limited energy, sensor nodes are prone to malfunction. Moreover, after deployment, a partial movement of sensor nodes may happen owing to various natural catastrophes (Yarinezhad and Hashemi, 2019).

Node failure or movement (especially CHs) affects the stability and efficiency of the network. In fact, under the worst circumstances, the entire network can fail or stop working (Chouikhi et al., 2015). So, the communication protocols should be adaptive in nature such that it can deal with dynamic changes in network scenarios. In the recent past, many researchers have focused on exploring energy efficiency and energy balanced data dissemination via the mobile data collector of WSNs in various applications. However, very little attention has been paid to the possible dynamic changes of the network scenarios while designing the communication protocols for MDC enabled WSN.

1.2. Contribution
Motivated by the above challenges, an adaptive hierarchical data dissemination (AHDD) scheme for mobile data collector enabled WSN has been proposed. In this paper, MDCs move across the sensing field and stop at a number of sojourn points for a sojourn time to collect the sensor data. To move from one sojourn point to the immediate next, MDC follows shortest path. This paper also uses the notion of RNs, which can directly communicate with the MDC and act as a temporary buffer to store the data from CHs.

In a nutshell, the primary contributions of this paper are listed below:

•
Formation of a set of uniformly distributed clusters in order to set up a connected backbone network of CHs where energy and link quality are taken into consideration.

•
Establishment of the loop-free routing trees that guarantee an optimal data transmission where each sojourn point of the MDCs acts as a root of each tree. Moreover, a multi-objective routing cost function is derived to balance the relay load among the CHs.

•
Considering the characteristics of dynamic WSN, an adaptive protocol is proposed that supports node inclusion, exclusion, and node displacement under external interfaces.

•
The proposed clustering and routing algorithms are decentralized in nature, which reduces the communication and computation delays substantially. This paper also presents an analysis of the message and the time complexity of the proposed algorithms.

•
The effectiveness of AHDD and the compared protocols are evaluated in terms of performance metrics namely, network lifetime, energy efficiency, packet delivery percentage, and end-to-end delay. Moreover, the robustness of the proposed scheme is verified by varying the node mobility probability and number of MDCs.

1.3. Organization
The remainder of this paper is arranged as follows. Section 2 presents a literature survey of existing data dissemination approaches for the static and mobile data collector enabled WSN. Section 3 describes various system models such as the energy, mobility, network model, and lists the basic terminologies. Section 4 explains the functioning of the proposed protocol and related lemmas. Section 5 validates the effectiveness of the proposed protocol by means of a simulated evaluation. Finally, Section 6 concludes the paper.

2. Related work
In the last two decades, wireless sensor network (WSN) has evolved as a major research domain considering its broad range of applications (Banđur et al., 2019). The Internet of Things (IoT) uses WSN for environmental sensing and to collect sensed data from sensor nodes for further analysis (Lee and Ke, 2018, Samir et al., 2019). There are many research challenges in WSN like localization, security, node placement, energy conservation, etc. (Yue and He, 2018, Chouikhi et al., 2015). Among which energy conservation has gained maximum attention considering the limited battery power of sensor nodes. Many energy conservation techniques have been studied in the recent past, and clustering has been generally recognized as an effective energy saving, and scalable technique for large-scale WSNs (Ullah, 2020). Cluster based communication has shown better energy efficiency over traditional routing protocols in the field of WSN (Heinzelman et al., 2000, Jurado-Lasso et al., 2019). In clustered WSN, entire cluster data is stored at the cluster head (CH), and based on the mobility type of WSN data collector; CH forwards the cluster data to BS. The WSN data collector can be broadly classified as static data collector and mobile data collector. In the following subsection, various data dissemination protocols in static and mobile data collector are presented.

2.1. Static data collector
In case of static data collector, the entire WSN data to forwarded to the data collector via multi-hop or single-hop communication. The primary objective of these protocols are energy efficiency, and fault-tolerance is considered in some.

2.1.1. Energy aware approaches
Low-Energy Adaptive Clustering Hierarchy (LEACH) (Heinzelman et al., 2000) is the first distributed clustered based communication protocol where the whole network is segmented into several non-overlapping clusters, and CH selection is carried out following a random probabilistic model. Later, many deterministic clustering and routing protocols have been proposed, which use various network parameters for the topology setup. In the paper Darabkh et al. (2019), an Energy aware and density based clustering and routing protocol (EA-DB-CRP) is proposed, which uses parameters like energy, node density for clustering, and routing purpose. Furthermore, in paper (Thangaramya et al., 2019), a neuro-fuzzy based routing algorithm is proposed for WSN to enhance the Quality of Service (QoS) of the network.

2.1.2. Fault-aware approaches
Due to the harsh working environment of sensor nodes, the nodes are prone to failure. However, none of the mentioned approaches consider the fault-tolerance aspect of the WSN. A WSN node can fail for a variety of reasons, depending on the nature of the nodes and their implementation environment (Chouikhi et al., 2015). The failure of a node, particularly CH, has a huge impact on the network topology, especially in cluster-based communication. In this regard, some fault-aware cluster-based protocols have been designed for WSN (Mazumdar and Om, 2020, Wang et al., 2018a, Mazumdar and Om, 2017). Authors in Chanak et al. (2017) propose a distributed routing algorithm to tolerate the network failure in WSN. During cluster formation, each sensor node finds a -vertex disjoint path to CHs, and the CHs forms a -vertex disjoint path to BS. So, if a routing path faults, the appropriate alternative paths can be explored. In the paper Mazumdar and Om (2017), decentralized unequal cluster based fault-tolerant routing protocol (DUCR) is proposed, where the members of a faulty CH adopt a dynamic recovery strategy by sharing the local data. Consequently, DUCR attains constant message and time complexities during clustering and routing algorithms. Nevertheless, the foregoing protocol does not take into account the partial node mobility or node relocation in consequence of various external interference and hazardous deployment environment. Authors in Wang et al. (2018a), design a distributed Cluster-based Routing Protocol (CRPD) that supports the dynamic update of WSN topology in case of new nodes addition and their partial movements. In CRPD, nodes with a higher neighbor degree and residual energy are considered as a better candidate of CH. Moreover, CRPD also obtains constant message and time overhead. However, the aforesaid equal-sized clustering protocols along with multi-hop data forwarding encounter energy hole problem that was initially alleviated using unequal clustering strategies (Bozorgi and Bidgoli, 2019, Elkamel et al., 2019, Vijayalakshmi and Senthilkumar, 2019). This strategy suggests a reduction in cluster size as it approaches the BS.

2.2. Mobile data collector
Recent studies reveal that leveraging the notion of sink mobility has evolved as a more promising approach to address the energy hole problem (Mottaghi and Zahabi, 2015, Wang et al., 2017, Alsaafin et al., 2018).

2.2.1. Single data collector
Research in Vishnuvarthan et al. (2019) resolves the energy hole issue for a linear WSN by finding the optimal speed of the Mobile Data Collector (MDC) with an accurate transmission range of the clusters. The optimal speed of the MDC is evaluated based on the number of transmitted packets and the size of the cluster. The study in Mottaghi and Zahabi (2015) combines the notion of LEACH, mobile sink, & rendezvous nodes, and considerably reduces the network energy consumption than the traditional LEACH protocol. However, this kind of methodology leads to higher transmission energy as it adopts a single-hop data forwarding technique. On the other hand, the paper (Wang et al., 2017) presents an algorithm that formulates a near-optimal route to the latest location of MS in order to minimize the routing tree construction cost.

However, it experiences high intra-cluster communication cost due to the single parameter based CH selection. A further study (Alsaafin et al., 2018) on MDC trajectory planning for data gathering enables the network to dynamically choose the rendezvous points based on the clustering technique in a decentralized manner. This paper suggests three types of MDC trajectory designs referred to as REP (reduced energy path), RDP (reduced delay path), and DBP (delay bound path), which are feasible for energy sensitive, delay-sensitive, and time-bounded applications of WSN, respectively. However, none of these trajectory design strategies are adaptive to the dynamic changes in the network topology. In the paper, Wang et al. (2018b), an Enhanced PEGASIS (EPEGASIS) algorithm for mobile sink support WSN is proposed where the sensor nodes dynamically regulate their transmission range to preserve energy. The nodes closer to the MDC have a smaller transmission range in order to prolong their lifetime by conserving energy. However, the distant nodes from the MDC trajectory use a longer transmission range, which depletes energy early. So, the hot spot problem is not eliminated properly. In the paper Yarinezhad and Hashemi (2018), and Yarinezhad and Hashemi (2019a), a virtual cellular structure based routing protocols are proposed to adjust the routing path of cell heads by defining various routing rules. Both the protocols update the routing table of the cell header such that a minimal delayed path is formed to the new MDC position in a cell. The literature Farzinvash et al. (2019) presents a distributed and energy-efficient MDC based data collection protocol where the normal sensor data is collected by the MDC however the emergency data is propagated to the BS following a minimum spanning tree. This protocol ensures quick transfer of emergency data to BS for early analysis. In the paper Chauhan and Soni (2019) the network is divided into a set of rectangular regions, and from each region, a CH is selected using the nature-inspired firefly optimization algorithm. Subsequently, an MDC is used to collect the regional data from the CHs.


Table 1. Summary of related works.

Protocols	Properties	Performance
Data collector	# of data collector	Fault-tolerance	Node inclusion	Network lifetime	Latency	Delivery ratio
LEACH (Heinzelman et al., 2000)	Static	Single	No	No	Low	Low	Low
EA-DB-CRP (Darabkh et al., 2019)	Static	Single	No	No	Low	Low	Low
CRPD (Wang et al., 2018a)	Static	Single	Yes	Yes	Moderate	Low	High
DUCR (Mazumdar and Om, 2017)	Static	Single	Yes	No	Low	Low	Low
EPEGASIS (Wang et al., 2018b)	Mobile	Single	No	No	Moderate	Moderate	Moderate
In (Farzinvash et al., 2019)	Mobile	Single	No	No	Moderate	Low	Moderate
In (Alsaafin et al., 2018)	Mobile	Single	No	No	Moderate	Moderate	Moderate
OECF (Koosheshi and Ebadi, 2019)	Mobile	Multiple	No	No	High	Low	Moderate
RDPL (Yarinezhad, 2019b)	Mobile	Multiple	No	No	High	Low	High
MEEC (Verma et al., 2019)	Mobile	Multiple	No	No	High	Low	High
2.2.2. Multiple data collector
Recently, many multiple mobile data collector (MDC) based data gathering approach has been proposed which are very useful particularly for delay constraint applications (Toor and Jain, 2019, Koosheshi and Ebadi, 2019, Verma et al., 2019, Yarinezhad, 2019b, Fu et al., 2020). In the paper Toor and Jain (2019), an energy aware cluster based multihop routing protocol is proposed where the network is divided into sectors and a set of MDC is used for data collection from each sector. In Koosheshi and Ebadi (2019) also an MDC based data collection strategy is applied, which uses fuzzy logic. Here, the network is segregated into zones, and each zone contains an MDC for data gathering. OECF uses fuzzy logic method with several inputs such as closest RN, energy, and density to calculate competition radius of a tentative CH. As a result, CHs closer to the MDC trajectory have a longer cluster size. However, as each zone is assigned one dedicated MDC for data collection, OECF may not work well under a limited number of MDCs in the network. The author of the article Yarinezhad (2019b) proposes a protocol for Reducing Delay and Prolonging the Lifetime (RDPL) of WSN based on mobile sink and virtual infrastructure. It uses several virtual rings to advertise the up-to-date location of the mobile sink on the network. If the sensor node needs to transfer the data to the sink, it first requests the nearest ring router to ask for the current location of the sink. Subsequently, the data is forwarded to the mobile sink. Although RDPL supports multiple mobile sinks on the network, the fault tolerance aspect is not taken care of. As a result, the protocol did not operate well under the failure of the router node. Authors in the paper Verma et al. (2019) have proposed a Multiple data collectors based Energy Efficient Cluster-based routing protocol (MEEC) where the CH selection is achieved considering energy, node degree, and distance parameters. The MEEC uses single hop communication among CHs and data collectors that eliminates hot-spot problem from the network. However, this approach may not scale its performance for delay sensitive large scale WSN. Moreover, all the mentioned approaches consider the unrestricted movement of the mobile data collector which may not be feasible for dynamic WSN applications in harsh environment.

From the above discussion, it can be concluded that the MDC based data gathering approaches have improved the longevity of the network and has eliminated the energy hole problem efficiently. A comparative study of the existing protocols’ performance and properties are presented in Table 1.

However, most of the existing MDC based data collection approaches have failed to sustain their worthy performance under the critical environmental conditions that emerge under harsh applications. In this context, this paper proposes an adaptive data dissemination approach to propagate CH data to an MDC sojourn point while considering the potential dynamic changes in the network, such as node mobility, failure, and inclusion.

3. System model
The section comprises of network model along with some preliminary assumptions, energy model, mobility model, and relevant terminologies that are described in the following subsections. For the ease of the reader, a list of notations used in this paper are cataloged in Table 2.


Table 2. Notations.

Symbol	Description
Energy dissipation per bit in the electronic circuit of the radio model
Energy dissipation per bit in the amplifier
Multi-environmental field factor
Energy required to transmit k-bits of data over a distance 
Energy required to receive k-bits of data
Maximum energy capacity of a node
Residual energy of th node
Set of all neighboring edges of the WSN
The maximum neighbor degree of a node
FND	First node die
HND	Half of the nodes die
Transition length of a node 
The maximum transition length
Mobility probability of a node 
Number of sojourn points of an MDC
Set of sensing neighbor of a node 
Neighbor degree of a node 
Sensing radius of each node
Communication range of each node
Communication range of the MDC
Cluster range of the CHs
Timer function for a node 
Cluster head of a node 
The next hop relay agent of the CH 
The link quality between node 
 and 
Total number of sojourn location of all MDCs
Number of MDCs in the network
SP	Sojourn point
RN	Rendezvous node
Received signal strength indicator
3.1. Network model and assumptions
A WSN can be depicted as a set of homogeneous sensor nodes 
 deployed arbitrarily over a planar region. The sensor nodes are generally static; however, they may move due to external interfaces only. The sensory data collection is achieved using one or more MDC such that each MDC(s) halts at certain Sojourn Points (SPs) for data collection. The sensor nodes have limited energy, whereas MDC has sufficient energy to traverse the network, collect data, and return to the BS for data delivery and recharging. Each node 
 is aware of its position using some localization method (Wang et al., 2018c) and the nodes are synchronized w.r.t. their timer values (Benzaïd et al., 2017). It is assumed that the sensor nodes are prone to failure due to their harsh application environment. So, a set of new sensor nodes may be deployed in the existing network topology to preserve the sensing reliability. Furthermore, the performance of the WSN is considered unreliable after half of the nodes die. Hence, if the BS observes the death of approximately half of the deployed sensor nodes (N), it signals the inclusion of a set of new nodes in the network to maintain reliability.

3.2. Energy model
The expenditure of the WSN energy is mostly caused by the radio transceivers of sensor nodes. In this subsection, we present the fundamental radio model used throughout the paper (Heinzelman et al., 2000) for calculation of energy dissipation of sensor nodes. Fig. 2 represents the radio energy model of the transmitter and receiver end for a data stream of -bits over a distance .

3.3. Mobility model
In reality, the performance of dynamic WSN is vulnerable to several environmental interfaces. To quantify the impact of environmental factors on the mobility of sensor nodes, the random walk mobility model is adopted (Qin et al., 2018). In this paper, if a node 
 moves, its mobility is random in arbitrary directions for a transition length 
. We limit the maximum transition length to 
. So, once a node is selected for movement, its transition length is calculated as 
 where  is a random number such that . Subsequently, every node uses a probability model to estimate its mobility likelihood 
. Here, a nodes 
 generates a random number 
 in the range  based on which its mobility is decided using Eq. (1). In this mobility model,  acts as a tuning parameter that reflects the probability of node mobility such that  indicates no mobility and the increasing  value denotes an increase in the number of mobile nodes, where  indicates all nodes are mobile. (1)
 where .

It is to be noted that a sensor node’s movement is only due to some external interference (such as wind, erosion, etc.), and it is randomized. On the other hand, MDC has controlled mobility, and in order to move from one sojourn point to the immediate next MDC follows the shortest path.

3.4. Node failure model
In WSN, sensor nodes are prone to environmental effects since nodes are often deployed in unattended fields. In homogeneous WSN, all sensor nodes possess the same hardware configuration that implies they have the same resilience to the external environmental effects. The probability of a node failure is set to be closely related to the environment around it, and the probability of failure function 
 is defined as in paper (Fu et al., 2020). (2)
where 
 is a multi-environment factor used to quantify the impact of multiple environmental fields and   is a tuning element whose primary function is to regulate the degree to which the node failure is affected by the environment. Considering the failure behavior of electrical equipment,  is set to 10 (Fu et al., 2020).

3.5. Relevant terminologies
The following terminologies are used in the proposed protocol:

•
Neighbor Set (𝓝
): For a sensor node 
, it is the set of all nodes within its sensing range 
. Mathematically it can be expressed as (3)
where 
 refers to the 2D Euclidean distance between node 
 and node 
.

•
Neighbor degree (𝓓
): This parameter finds the population degree (considering number of individuals) of a node i.e., how much the node 
 is dense with respect to the number of neighbors in its sensing range 
. (4)
 

•
Sojourn points (): This is the set of locations where mobile data collectors (MDCs) halts for data collection from proximate sensor nodes.

•
Rendezvous Nodes (): RNs are basically sensor nodes around a SP (
) that can directly transfer data to the MDC when it reaches the corresponding SP. Mathematically it can be expressed as 
They act as buffer to cache the network data until MDC comes for data gathering.

•
Link quality (
): The link quality between two nodes 
 and 
 separated by a distance 
 can be estimated using the RSSI value. This is expressed as (5)
 
where 
,  is the path loss exponent such that  and  is the minimum RSSI value among the communication devices (set as −97 dBm) (Srinivasan et al., 2010, Elhabyan and Yagoub, 2015).

•
Energy level (𝓔
): The energy level of a node is the ratio of remaining energy of the node to its initial energy. Mathematically, (6)
 

•
Alive sensor nodes: These are the nodes having their residual energy greater than the energy threshold value sufficient enough to carry out basic network operations.

•
Network lifetime: There exist several measures of Network lifetime (Yarinezhad, 2019b, Wang et al., 2018b, Mazumdar and Om, 2017). In this paper, we measure it in two forms i.e, the time elapsed from the beginning of network operation until the first node dies (FND) and half of the nodes die (HND) for the first node deployment only.

4. Proposed work
This section introduces an in-depth description of the proposed AHDD protocol. The whole operation of the protocol is divided into three elementary phases, namely, Prepare phase, Network configuration phase, and Steady phase. During the first phase i.e., Prepare phase, BS nominates a set of sojourn points (SPs) and sensor nodes share some local information to their neighbors. Subsequently, the Network configuration phase begins. Here, the network topology is built by diving the network into a set of disjoint clusters and forming a routing tree to disseminate each cluster data to a nominated MDC sojourn point. Finally, the Steady phase conducts the data transmission of the entire network where an elected CH from each cluster aggregates its cluster data and disseminates them to an MDC sojourn point following the formed routing tree. The MDCs visit all their associated sojourn points (SPs) and collect data from the corresponding CHs. After visiting all the associated SPs, an MDC returns to the BS for offloading the collected data. Moreover, a fault-tolerance mechanism is incorporated in the network configuration phase to address the dynamic changes in the WSN topology during the Steady phase. Fig. 3 provides an overview of the proposed protocol’s workflow.

4.1. Prepare phase
Here, we describe the process of sojourn point nomination, rendezvous node selection, and neighbor discovery. The main objective of this phase is to avail each node with some basic information of its neighbors that is required in the execution of subsequent phases.

4.1.1. Sojourn point nomination
At the beginning of network operation, BS nominates a set of sojourn points where the MDCs stop to collect data from sensor nodes. The MDCs sojourn points may be predefined by the WSN application users; otherwise, BS nominates a set of uniformly distributed sojourn points. In a WSN environment, with  MDCs and  sojourn points (where ), each MDC is assigned to a subset of SPs. Each SP has to be visited by one MDC at each network operation round. In the proposed model, the BS nominates the set of SPs as follows.

Let CP(
, 
) be the center point of the region of interest (RoI). Subsequently, for an RoI having dimension , 
 
 
Later, BS forms a virtual ring centered at 
, the circumference of which is used to compute the originating points of multiple MDCs. Here, the coordinates of th MDC’s point of origin (
, 
) are determined as: (7a)
 
(7b)
 
 where 

After nominating the point of origin of all MDCs, the sojourn points of the th MDC are evaluated as follows: (8a)
 
 
(8b)
 
 
 where 
 is the number of sojourn points for an MDC and . This procedure of MDCs’ sojourn point nomination ensures the SPs are well distributed around the network.

4.1.2. Rendezvous Nodes (RNs) selection
Once, the MDC’s sojourn points are successfully elected, each MDC initiates its first trip to select a set of RNs (Rendezvous Nodes) around each SP. RNs are basically sensor nodes around a SP that can directly transfer data to the MDC when it reaches the corresponding SP. Each MDC broadcasts a beacon message (containing its current sojourn point information) around its SPs within the communication range 
 of a sensor node. Upon receiving this message, nodes available in this range set their status as RN and store their corresponding MDC sojourn point. RNs act as a temporary cache to store the data disseminated by CHs towards a SP until the MDC arrives for data collection. So, the entire network data are delivered to the MDCs via RNs. Considering the limited buffer capacity of sensor nodes, the network should have sufficient RNs to store the WSN data. Moreover, deficiency of RNs also results energy hole problem as the limited number of RNs have heavy data relay load. On the other hand, in case of too many RNs the MDC sojourn time is longer as a result data collection delay is enhanced.

Fig. 4, illustrates the sojourn points (SPs) nomination and rendezvous nodes (RNs) selection method discussed above. Here, three MDCs () are shown to nominate four uniformly separated sojourn points (p=4) for each MDC. The sojourn points are chosen following Eq. (8). The blue pins are SPs, and the brown dots around the SPs are RNs. Notice that all RNs have 1-hop connectivity to SPs. The rest of the network data are forwarded towards the SPs where RNs buffer the incoming data packets until an MDC arrives for data collection.


Download : Download high-res image (360KB)
Download : Download full-size image
Fig. 4. MDC sojourn points and RNs.

4.1.3. Neighbor discovery
In the neighbor discovery phase, each node finds its set of neighbors and stores some essential neighbor information. Here, each node broadcasts an  control packet within its sensing range 
 following the non-persistent Carrier Sense Multiple Access (CSMA) protocol is used to avoid collisions (Ashrafuzzaman, 2012). The  control packet contains node_ID, node_location, residual energy information. After receiving the  packets, a node is aware of its set of neighbors along with some basic information. As sensor nodes are memory constrained, storing the entire WSN data is not feasible. So, each node is exposed to limited neighbor information, which is utilized in the later phases.

Fig. 5 illustrates the flow diagram of the prepare phase.

Lemma 1

The message complexity of the prepare phase is , where  is the set of all neighboring edges in the network and the time complexity is 
 where 
 is the maximum neighbor degree of a node in the WSN.

Proof

In the prepare phase, sojourn point nomination is done by the BS without involving any message exchange. For the RN selection, MDCs visit their respective sojourn point and broadcasts a beacon message within 
 range. So, the number of beacon messages broadcasted is equal to the total number of SPs nominated by BS. As a result, the message complexity is limited to 
. On the other hand, during neighbor discovery, each node broadcasts an  message to announce its presence in the network within 
 range. So, every node receives  message from its neighbors in 
 range. As a result, there are two  message exchange for each neighbor edge of a node. Therefore, the total number of message exchange is  i.e., . In addition, as the neighbor discovery is performed in a distributed manner, so the time complexity of the network is the same as the time complexity of a single node. So, in the worst case, a node is required to process 
 number of  messages. In other words, the worst case time complexity is 
.

4.2. Network configuration phase
In this phase, the network topology is built by dividing the sensor nodes into a set of clusters, and from each cluster, a representative called a Cluster Head (CH) is elected. Later, a data routing tree is configured to disseminate each cluster data to its preferred MDC sojourn point. So, the network configuration phase runs in cluster formation and routing tree building modules. However, a major degradation of network performance arises when the configured network topology changes. The major causes of network topology change are (a) node failure due to energy exhaustion or hardware malfunction and (b) node movement due to external interfaces. In practice, new nodes are occasionally deployed to improve the sensing coverage of the network. So, a recovery strategy is required to support such dynamic changes in the network topology. In this context, the proposed cluster formation and routing tree building modules have considered a recovery mechanism to adapt to the changes in the network topology. The detailed working of the proposed clustering and routing algorithms, along with their topology recovery strategies, are described next.

4.2.1. Cluster formation module
Considering the redundancy of WSN data, clustering is an efficient way to reduce the redundant information by performing data aggregation at each cluster level. The elected CH from each cluster is responsible for data aggregation and cluster data propagation towards its preferred SP. The major operations of the clustering module are CH election and cluster member association. As the sensor nodes are exposed to local information only, the clustering algorithm should be distributed in nature, where each node can make decisions autonomously without the intervention of any centralized controller.

For the CH election, each sensor node bids for the nomination of CHs role by considering two factors, i.e., energy level (refer Eq. (6)) and neighboring degree (refer Eq. (4)) of the node. Herein, the first parameter called energy level indicates that energy-rich nodes are preferred for the role of CH. The second parameter, node degree, on the other hand, ensures that nodes with a higher neighboring degree are identified as CH. It should be noted that a node with a high neighboring degree is highly likely to overlap its sensing area with its neighbors. As a result, the sensing coverage of the network does not breach much if such a node dies. Therefore, the sensing coverage of the network is conserved.

Each node uses the aforementioned parameters to set up a countdown timer for the CH selection process. The maximum timer value is limited to 
, i.e., the entire CH election cycle is completed by an interval of 
. Since the sensor nodes’ parameter values are relatively analogous, we aspire to calculate the timer values in such a way that a small change in input values causes a significant variance in the result. In this context, a combination of Sine and Exponential function is formed to design the timer computation function (
), as shown in Eq. (9). (9)
 
where 
 is the maximum allowed waiting time for CH election and 
 
.


Download : Download high-res image (472KB)
Download : Download full-size image
At this moment, each node awaits the countdown timer to perish. Once the timer of a node has expired, it announces itself as a CH by broadcasting a  message using a non-persistent carrier sense multiple access (CSMA) method within the 
 range. Upon receiving HEAD message, the nodes retract their participation from the CH selection. The rest of the nodes meanwhile continue their CH competition until their timer expires or they receive a  message from any other elected CH. This CH selection process helps to ensure that no other CH will remain inside the cluster range of one CH.

However, if multiple  messages are received by a sensor node from a number of CHs, the sensor node keeps a record of these CHs in its 
 set. Later, a set of cluster members is associated with the nominated CHs to segregate the network into a number of clusters. The efficacy of the WSN is strongly affected by the quality of the association between cluster heads and their members. The quality measure of non-CH to CH association can be load balancing and link quality of the cluster. In order to form load balanced clusters, a non-CH node considers the residual energy of candidate CHs where the CH with higher energy is preferred for the association. On the other hand, to improve the link quality of the cluster, RSSI value for each candidate CH is considered. Several studies (Elhabyan and Yagoub, 2015, Baccour et al., 2012) have confirmed that RSSI is a good indicator to estimate the link quality of an edge. So, a non-CH node calculates the link quality (LQ) for each candidate CH using Eq. (5), such that a higher value indicates better link quality. Finally, both energy and LQ parameters are combined to form a cost function (
) as shown in Eq. (10). A non-CH node uses this cost function to choose its corresponding CH, as shown in Eq. (11), such that the minimum cost function value implies the best candidate. After the selection of final CH, a non-CH node sends the  message to inform its membership in the cluster. In this way, the proposed model achieves an autonomous cluster formation of the network. (10)
 where 
 and 
 are weight factors such that 
 and 
 
. (11) 
 
≔
 

However, during the data transmission, the topology of the network may change due to several catastrophes. So, a cluster level recovery strategy is incorporated to deal with such dynamic changes in the network scenarios.

Cluster level recovery:.
The proposed recovery strategy divides the topology change into two scenarios (a) node inclusion and (b) node exclusion.

Node inclusion: In the steady phase, when a node moves or new nodes are deployed, a node may join a new cluster. In both cases, the new entrant node must send a  message within the 
 range to declare its presence. All CHs receiving the request message respond with an  message that includes the CH id and the location information. It is worth noting that a candidate node 
 may receive several  messages from multiple CHs. Under the circumstances, the candidate node selects the node that results in the best quality link to itself as its corresponding CH. Link quality (LQ) can be calculated using Eq. (5). The new node informs its membership to the selected CH by sending a  message. After receiving the  message, the selected CH will be acquainted with the inclusion of the new member. In this way, it is possible to allow the addition of new nodes or the partial movement of existing nodes even during the steady phase.

Node exclusion: Under two cases, a sensor node may leave the network. Firstly, the node has relocated because of various external interference, and secondly, the node has died because of energy depletion or hardware damage. All of these cases are very realistic in the hazardous working environment of the WSN. Failure of nodes (especially CHs) during the steady phase severely disrupts the functioning of WSN. Once a CH fails, all of its cluster data are unavailable to any MDC sojourn point. The cluster members of such an inoperative cluster need to rejoin any other active cluster in order to relay their sensed information. If a cluster member does not receive any ACK message for its transmitted packet over a period of time, it concludes that its CH may be down (Mazumdar and Om, 2017). In this context, it updates its 
 set by removing the faultUnder two cases, a sensor node may leave the network.y CH. Consequently, if the 
 set is not empty, Eq. (11) is applied to pick the best CH among 
 set members. After selecting its tentative CH, the cluster member informs its membership to the CH by sending a  message. On the other hand, CMs that do not have a candidate CH in their updated 
 set participate in the re-election of CHs among themselves. Here, similar to the previous CH election method, all orphan CMs set up a countdown timer to assess their CH role credibility using Eq. (9). Once the timer of a faulty CM expires, it nominates itself as a CH and broadcasts a  message within the 
 range. All orphan CMs receiving this signal stop their timer and join this nominated secondary CH as their head. In this manner, all orphan CMs of a faulty cluster recover either by joining the existing CH or by electing a new CH among themselves. The flow diagram of the clustering protocol is presented in Fig. 6.

Lemma 2

Proof

During cluster formation, once a node nominates itself as a CH, it broadcasts the  message to its neighbors and receives  message from its cluster members. So, there are two message exchanges per CH edge, i.e., the  and  message. As a result, for a network of  nodes, each node sends one control message either  or  during cluster formation. So, the total message exchange for clustering protocol is one per node, i.e.,  for the entire network. In other words, the message complexity is  for a WSN of  nodes.

Moreover, as the clustering algorithm is distributed in nature, each node can make its decision independently, and consequently, the time complexity of the cluster formation is the worst case time complexity of a single node. For the CH election, the algorithm requires constant time i.e.,  as only local information of a node is required for this process. However, for CM association, a non-CH node requires to process each CH information belonging to its 
 set. So, in worst case a node requires to process  CHs where 
 where .

4.2.2. Routing tree building module
In this phase, an optimal loop-free routing path is constructed through which cluster data are relayed to an MDC sojourn point.

Hop count calculation:.
During this step, each CH calculates a hop count value that allows the CH to propagate its cluster data to an MDC sojourn point in a controlled manner. At the outset, the hop value of all CHs is set to infinity, and the hop value of RN is counted to 1 as RNs communicate directly to the MDC. Subsequently, RNs begin the updating of CH hop count process by transmitting the  message containing the hop count and respective SP information in the inter-cluster communication range (
). All CHs within this range receives this signal and set their hop count value to 2. As soon as the hop count of a CH is changed, the CH shares the modified hop information within the range of 
. For example, the 2-hop CHs broadcast their  message, and the receiving CHs can update their hop count to 3 if a lower count results. All CHs continue this process and are finally assigned to the lowest hop count possible. Each CH advertises the HOP message following the non-persistent Carrier Sense Multiple Access (CSMA) protocol to avoid collisions. It should be noted that each CH 
 stores the respective 
 set of all candidate Next Hops (NHs) together with the corresponding SP information resulting in a minimum hop count for communication with an SP. Therefore, in the NH selection phase, 
 chooses one of them as the next hop relay agent based on a cost function that involves several parameters like energy, link quality, and NH forwarding density. The detailed process of next hop relay agent selection is discussed in the next subsection.

Next Hop (NH) selection:.
Here, a CH 
 selects its next hop routing agent 
 from its 
 set. Every CH begins the NH selection process by broadcasting a  message which contains some basic information like position, energy level, and NH forwarding density of the CH. The relay agent selection is performed by means of a cost function. The parameters involved in the cost function design are energy level, link quality, and NH forwarding density of the candidate relay agents. The first parameter, i.e., energy level, ensures that an energy rich next hop is selected as a relay agent, which makes the routing path energy balanced. The second parameter uses the RSSI value of the candidate NHs to select the relay agent, which results in better link quality. The incorporation of the RSSI parameter ensures a reliable link quality of the routing path, which reduces the rate of re-transmission due to the packet drop. The third parameter, i.e., NH forwarding density of the candidate relay nodes, helps to select a relay agent with higher forwarding choices. A CH 
 with limited forwarding alternatives is forced to relay its data to a fixed path such that the failure of a node in the forwarding path left 
 with no choice. On the other hand, if a CH has more forwarding choices, the selection can be adaptive to energy depletion of the path as well as the failure of some forwarding candidates. Finally, the NH selection cost function is designed using these three mentioned parameters, as shown in Eq. (12). The CH 
 selects the candidate NH resulting lowest 
 value as its next hop agent as shown in Eq. (13) and notifies its decision by sending a  message. (12)
  where 
, 
, and 
 are weight factors such that 
 and 
 
. (13) 
 
≔
 

Routing level recovery:.
During the steady phase, each CH forwards its cluster data packets via other CHs/RNs towards the preferred MDC sojourn point. However, if a CH 
 does not receive any ACK for its relayed data packets within a certain time span, it concludes that the selected next hop relay agent has faulted, and a new path needs to be established. Therefore, in order to sustain the network operation, a recovery mechanism should consider the fault-tolerance at the routing level.

To recover from such faults, CH 
 broadcasts a  message within its 
 communication range requesting for connectivity. All CHs receiving this message reply with an  signal provided they have an active next hop relay node other than 
. The  message consists of the sender’s id, the hop count, and the corresponding SP information. Based on the SP association of the  message sender, CH 
 groups them into two sets  and . Here, the  set consists of all candidate relay agents associated with the same SP as that of 
, where any candidate relay agent associated with some other SP is placed in the  group. In order to preserve the data relay load of RNs around the SPs, a CH prefer to choose its relay agent from the  set. In fact, members of the  group are considered to be relay agents only if the  group is empty. However, in either case, the node corresponds to the best link quality to 
 from the considered set is chosen as its new next hop relay agent.

The Fig. 7 shows the flow diagram of the proposed routing protocol along with its fault recovery scheme.

Lemma 3

The running time complexity of the NH selection method is linear i.e., , where  is the maximum cardinality of a CH’s 
 set and the message complexity is 
 for the WSN having 
 number of cluster heads.

Proof

For the routing tree construction, the control message exchange takes place among the CHs only. Initially, every CH shares their 
 degree within the communication range 
. All CHs, after receiving their candidate NHs’  message, selects its relay node using Eq. (12) and passes a  message to inform its decision. So, each CH passes only two messages ( and ) for NH selection phase. As a result, for a network of 
 number of cluster heads, the message complexity is 
 i.e., 
.

Moreover, the NH selection phase is also distributed in nature, so the time complexity of this phase is the worst case time complexity of a single CH. In the proposed routing algorithm, a CH selects its relay agent by comparing the cost value for each NH candidate present in its 
 set. Here, the worst case time complexity is the maximum cardinality of a CH’s 
 set. So, if  is the maximum cardinality then the worst case complexity is  where 
.

Lemma 4

The proposed routing scheme guarantees the loop-free delivery of cluster data to its corresponding MDC sojourn point.

Proof

To prove this theorem let us assume that looping exists in the designed routing tree (Proof by contradiction). A loop occurs around the node 
 if the data packet delivered by 
 to 
 is re-delivered to 
 via another 
 sensor i.e. the path is like 
. However, according to the proposed protocol, a CH 
 delivers its data to the next hop 
 if and only if 
 which states 
. Hence, by transitivity 
 which is logically invalid. Thereby, the proposed protocol assures a loop-free route from each CH to the respective MDC sojourn point.

4.3. Steady phase
This phase conducts the data transmission of the entire network where the CHs accumulate their cluster data and propagate it to an MDC’s sojourn point. For cluster data collection, a CH uses the TDMA protocol, where each cluster member is assigned a specific time slot to send their sensed data. TDMA based link scheduling has drawn a lot of attention over the past few years where links between nodes are assigned time slots, and it is also contention free (Kang et al., 2016). Also, it makes the nodes keep their radio on only at their own dedicated time span, and they turn off their radios at other times so as to reduce energy consumption. Now, the CH performs data aggregation on its cluster data to reduce the data redundancy and communicates the cluster data to an SP via the routing tree constructed in the NH selection phase. The topology constructed during the network configuration phase ensures a steady flow of sensor data to various SPs. All control packets involved in the proposed AHDD protocol are listed in Table 3. The MDCs periodically visit their respective SPs to collect the WSN data from the surrounding RNs. In order to move from one sojourn point to the immediate next, MDC follows the shortest path. In case of any dynamic changes in the network topology, the cluster and routing level recovery strategies are applied to preserve the network operation. It is noteworthy that the steady phase runs until the residual energy of a cluster head drops below a threshold number; subsequently the prepare and network configuration phases are executed again (Hong et al., 2009, Mazumdar and Om, 2017). This ensures that the CHs and the data routing paths are changed periodically based on the credential of the sensor nodes.


Table 3. Control packets and their tuple information.

Phase	Message	Description
Prepare phase	RN beacon	Tuple(SP location)
Tuple(node_ID, node_location, residual energy)
Network configuration phase		Tuple(node_ID, node_location, residual energy)
Tuple(node_ID, node_location)
Tuple(hop count, SP info.)
Tuple(node_id, node_location, residual energy, NH forwarding density)
Tuple(node_id, node_location)
Steady phase		Tuple(node_id, node_location)
Tuple(node_id, node_location, residual energy)
Tuple(node_id, node_location)
Tuple(node_id, node_location)
Tuple(node_id, node_location, hop, SP)
Tuple(node_id, node_location, hop, SP)
5. Performance evaluation
In this section, the performance of the proposed protocol is evaluated and compared with the existing schemes (RDPL (Yarinezhad, 2019b), OECF (Koosheshi and Ebadi, 2019), EPEGASIS (Wang et al., 2018b)). Now, the simulation environment configuration is presented, followed by a brief overview of RDPL (Yarinezhad, 2019b), OECF (Koosheshi and Ebadi, 2019), and EPEGASIS (Wang et al., 2018b) protocols for clarity in presentation. Finally, an extensive analysis of the proposed protocol in terms of several network parameters are discussed.

5.1. Simulation environment
The simulation is carried out using Python programming language (NetworkX Python library) with the Spyder 3.1.2 development environment. During simulations, 200, 400, and 600 sensor nodes are deployed in a  m
 area. Furthermore, to verify the flexibility of the proposed protocol in various WSN applications, we take into account two distinct sensor node deployments obeying uniform and Gaussian distributions, respectively. The uniform node deployment in WSN is generally applied for monitoring applications which demand continuous surveillance of each part of the RoI (Farsi et al., 2019). However, several applications require different degrees of detection ability at various points in the RoI. For example, to safeguard a central camp containing weaponry from the enemies, a larger number of sensors are necessarily deployed around it, while other non-critical objects are sparsely surrounded by the sensors. In such scenarios, Gaussian-distributed deployment (Wang et al., 2012) is more feasible where sensor nodes are randomly but more densely deployed around a central object, and further the location from the center lower the likelihood of the deployment density. Hence, the simulation environment is configured by considering a 2D Gaussian and uniformly distributed deployments to satisfy most of the WSN applications.

The performance of the network is often affected by multiple environmental factors. In order to reflect the environmental impact on WSN performance, the node failure and mobility model discussed in Section 3 is considered. Moreover, empirical studies have recommended that varying the density of the deployed sensors may have a critical effect on network performance. Therefore, the scalability of the proposed protocol over the existing schemes is evaluated by carrying out the simulation analysis while varying the number of nodes (N). It is worth mentioning that the simulation is executed 100 times the average of the result is presented herein. The simulation parameters, as well as their values, are presented in Table 4. During simulation several values of weight factors (
) are tested and finally the one which results better balancing among the parameters are selected.


Table 4. List of simulation parameters.

Region of Interest (ROI)	200 × 200 
Number of sensor nodes (N)	200, 400, and 600
Number of MDCs (m)	1–4
Initial energy of each sensor 
2.0 J
Sensing radius 
10 m
Communication radius 
30 m
Data packet size 	4000 bits
Control packet size 
600 bits
Path loss exponent 	2
50 nJ
0.01 nJ/bit/
1.3 μJ/bit/
MDC speed	5 
5.2. Working of related works for comparison
The related works are noted below with its working.

1.
EPEGASIS (Wang et al., 2018b): It is a chain-based data forwarding scheme with mobile sink support. Here, the sensor nodes adjust their transmission range depending upon their remaining energy. During data forwarding, if a sensor node finds the mobile sink within its optimal transmission range, then direct data communication (1-hop) is considered. Otherwise, the appropriate relay node is chosen to forward the data. However, due to the long range communication in EPEGASIS, the energy hole problem remains.

2.
OECF (Koosheshi and Ebadi, 2019): This approach segregates the network into several clusters, and multiple data collectors are used to collect data from different zones. This is a hierarchical data communication protocol; however, control packet overhead is very high for information exchange like RNs position.

3.
RDPL (Yarinezhad, 2019b): It uses several virtual rings infrastructure to advertise the up-to-date location of the mobile sink on the network. For data transfer, every sensor node contacts the nearest ring router for the position of the mobile sink. Here, clustering is not considered, whereas it supports multiple data collectors.

The major motivation behind selecting these existing protocols is that they cover a wide range of MDC based data gathering techniques such as ring based, cluster based, and chain based. Keeping in view this variety, the proposed protocol is compared with them. In Fig. 8, the clustered network along with RNs, SPs, and routing path formed by the AHDD protocol is presented.

5.3. Simulation results
The simulation results of the adaptive hierarchical data dissemination (AHDD) protocol along with other related schemes RDPL (Yarinezhad, 2019b), OECF (Koosheshi and Ebadi, 2019), and EPEGASIS (Wang et al., 2018b) are presented in terms of different network metrics like network lifetime, energy, packet delivery percentage, and end-to-end delay. During the evaluation of network lifetime and energy efficiency, only failure of the node due to energy depletion is presented. Since, in the presence of physical damage possibility, we cannot justify the fact that a bigger lifetime infers a better protocol if the failure does not depend on battery life only. However, in order to verify the robustness of protocols, the physical damage possibility is considered during packet delivery percentage (PDP) and end-to-end delay evaluation.

5.3.1. Network lifetime
Enhancing the survival time of the network is the paramount objective of the proposed AHDD protocol. In this regard, Fig. 9 presents the number of alive nodes by varying node density () under both uniform and Gaussian deployment scenarios. The simulation results confirm the superiority of the AHDD protocol in terms of extending the survival time of the sensor nodes over the existing ones. It is to be noted that a new set of sensor nodes are deployed in the network once half of the initial deployed nodes die. The proposed protocol extends the lifetime of the sensor nodes by means of an efficient cluster based communication approach that results in minimal energy consumption during network operation. During this evaluation, only the failure of nodes due to battery depletion is presented. Moreover, many applications consider the network performance reliable only till half of the deployed nodes are alive. So, we measure the network lifetime of the AHDD protocol and other related schemes at two instances, i.e., the First node die (FND), and Half of the nodes die (HND) as stated in Section 3.5. From Fig. 10, it can be concluded that the proposed protocol has enhanced the network lifetime under the aforementioned deployment scenarios for variable node densities (200, 400, and 600). Furthermore, the consistent performance under the varying node density reflects the scalability of the AHDD protocol.

5.3.2. Energy efficiency
An energy optimized architecture assures the longevity of the network survival time; accordingly, it is always desirable in energy sensitive applications of WSN. This stimulates the proposed protocol to design an MDC based adaptive hierarchical data dissemination approach with the aim of minimizing the network energy consumption. Fig. 11 shows the comparison plot of the total network energy consumption for 200, 400, and 600 deployed nodes under both uniform and Gaussian deployment scenarios. It is obvious from the energy curves that the AHDD algorithm has better energy efficiency over the other related schemes. The superior performance is mainly contributed by the effective cluster-based data dissemination strategy that induces uniform clustering and routing loads across the network. Furthermore, in order to assess the energy hole issue, we plot the residual energy of 200 sensor nodes deployed via uniform and Gaussian distribution at 400th minute of network operational time in Fig. 12. The residual energy of sensor nodes in AHDD protocol is found to be significantly higher than that of the other considered approaches. This result demonstrates that the proposed protocol is better energy balancing and the smoother energy level of all nodes in the network reflects its improvement in eliminating the energy hole problem. Moreover, the other protocols particularly EPEGASIS suffers from the energy hole problem which can be observed from Fig. 12. Here, many nodes have prematurely exhausted their total energy due to the presence of the energy hole problem. Such non-uniform energy consumption is contributed from the long haul transmission range used by the CHs in EPEGASIS. In Fig. 13, the total energy consumed due to control packet exchange is presented that demonstrates the superiority of the EPEGASIS protocol. However, its overall energy consumption is very high. This is due to the long haul transmission of data packets for distant CHs. On the other side, in RDPL, control packet exchange is involved throughout the network operation as the updated sink position needs to be propagated to each virtual ring router node. This increases the frequency control packet exchange. Moreover, OECF protocol broadcasts the RNs location information to all the sensor nodes in the network. The proposed AHDD protocol uses several control packets (listed in Table 3) during the prepare and network configuration phase. However, in the steady phase, control packets are used only if some fault-tolerance is required. So, the rate of control packet exchange is controlled in network operational time.

5.3.3. Packet Delivery Percentage (PDP)
In addition to energy efficiency, network reliability is one of the essential concerns of the MDC based routing protocols to preserve the network QoS. Herein, the network reliability is measured by the rate of data packets delivered to the MDC in each round. Successful delivery of packets from the source to the MDC denotes network reliability level. In a real scenario, packets reached to the MDC is always lesser in number than packets transmitted because of attenuation, noise, interference, etc. As stated in the paper (Abo-Zahhad et al., 2015), the probability of packet loss increases dynamically if the distance between sender 
 and receiver 
 increases.

The metric Packet Delivery Percentage (PDP) can be defined as, (14)
 

Fig. 14 presents the packet delivery percentage (PDP) of all studied protocols by varying the node density of the network. Here, Fig. 14(a), 14(b) exhibit the PDP till first node die whereas Fig. 14(c), 14(d) show the PDP till half of the nodes die under uniform and Gaussian deployment scenarios. To preserve the network operational reliability, a new set of sensor nodes are deployed in the RoI once half of the deployed nodes dies. So, Fig. 14, Fig. 14 actually show the PDP for all protocols till the entire run of network operation. It can be observed that AHDD has achieved higher data delivery over the other considered protocol. By designing an efficient and scalable data dissemination path for CHs, the proposed protocol reduces the packet failure probability. Moreover, the recovery strategy during the steady phase also ensures preservation of network connectivity despite dynamic changes in the network scenarios.

In addition, performance of the AHDD and related protocols is evaluated for different degrees of node failure. Failure of nodes mainly affects percentage of packets delivered. As a result, a protocol that can maintain better network connectivity despite node failure lead to a better PDP. In Fig. 15, the PDP for 0 percent, 10 percent, and 25 percent failure of the initial nodes deployed are presented. It can be observed that, due to the presence of the recovery strategy, the AHDD protocol has maintained a higher percentage of packet delivery compared to others.

5.4. End-to-end delay
Another QoS concerned metric in MDC based data gathering is the network end-to-end delay that refers to the data delivery timeliness. It is the average time required for successfully delivering the data packets generated by the sensor nodes to the MDC. The lower value of end-to-end delay secures better data delivery timeliness, and consequently, it is highly desirable in delay-sensitive applications of WSN. Fig. 16 depicts the end-to-end delay of the proposed protocol, along with the related schemes for varying node densities under both uniform and Gaussian distributed WSNs. It is clearly seen that the proposed protocol achieves lower end-to-end delay than RDPL, OECF, and EPEGASIS. The major rationale for this is the data routing strategy, which ensures a better hop count minimization of the CHs to their corresponding MDC sojourn point. However, it can be observed that the end-to-end delay tends to increase with the increase in the node density of the network. This happens as an increasing number of nodes also increases the congestion of the network; accordingly, the end-to-end delay increases.

5.5. Variation of different parameters
Here, we assess the impact of node mobility () and MDC variation on the network performance. It provides a more in-depth study of the proposed protocol’s reliability and scalability.

5.5.1. Effect of 
The performance of the network is affected by the degree of node mobility due to some external interference. The parameter  is used to analyze the effect of node mobility probability of the network as defined in Section 3.3. In Fig. 17, Fig. 18, the impact of  on network lifetime and PDP is presented. Here, the value of  is varied from 0.1 to 0.9, where a higher  value indicates more mobility in the network. It can be observed that the proposed protocol has shown better adaptability under node mobility as compared to the other considered protocols for both network lifetime and PDP metrics. This performance is mainly contributed due to the efficient fault-tolerance strategy, which adapts to partial mobility of the sensor nodes even during the steady phase. In OECF and EPEGASIS, if a node moves due to any external interface, no provision for connectivity restoration is provided, particularly w.r.t. CHs. Although the EPEGASIS protocol only requires the mobile sensor node to adjust their transmission range based on the new location in the network. But, due to the possibility of longer communication distance with MDC, the nodes’ lifetime decreases, and data delivery probability also reduces. In RDPL, no mechanism is discussed to deal with the partial movement of sensor nodes due to any external effect. Hence, these results depicted in Fig. 17, Fig. 18 demonstrate the rigidity of the AHDD protocol under dynamic environmental interfaces.

5.6. MDC and nodes variation
Here we evaluate the impact of involving multiple MDCs for network data gathering. We consider 2, 3, and 4 number of MDCs to evaluate the network lifetime, PDP, and end-to-end delay of the network. Moreover, the scalability of the protocols is evaluated by varying node densities from 200, 400, and 600. Figs. 19, 20, and 21, presents the simulation result for 200, 400, and 600 sensor nodes for uniform and Gaussian deployment scenarios. The presence of multiple MDCs enables the nomination of more data collection points, which reduces the data forwarding load on CHs. As a result, the longevity of the network extends with more MDCs applied. This can be observed from Fig. 19, where the network lifetime improves with the addition of MDCs. Moreover, the higher density of SPs with more MDCs involved reduces the CHs to SPs hop count. As a result, the packet delivery percentage (PDP) and end-to-end delay are also improved, as shown in Fig. 20, Fig. 21. However, as the introduction of more MDCs increases the cost of the system, it is required that the designed protocols should work efficiently with a limited number of MDCs. In this context, the proposed protocol has shown consistent performance under the variation of the number of MDCs.

6. Conclusion
In this paper, an adaptive hierarchical data dissemination (AHDD) protocol is proposed for dynamic WSN. The primary concern of this work is to form an energy efficient cluster based routing path for a multiple MDC enabled WSN. A graphical representation of how the protocol efficiently performs network clustering and selects the best CH to SP route is also presented. The proposed protocol improves the survival life of the wireless sensor network by balancing the transmission load among all nodes and saving considerable network energy through the development of distributed algorithms. Moreover, the proposed model supports dynamic changes in the network topology like node inclusion, exclusion, and movement. The addition of fault tolerance in the clustering and routing phases preserve the consistent propagation of network data despite dynamic environmental interfaces. This results in a better packet delivery ratio, which further improves the end-to-end delay of the network. The effectiveness of the proposed protocol over existing schemes, namely RDPL, OECF, and EPEGASIS, can be verified by the simulation results for several network parameters such as energy efficiency, network lifetime, packet delivery percentage, and end-to-end delay.

However, this work assumes that the MDCs are neither energy nor buffer constrained, and their movement is terrestrial. On the contrary, many applications of the Industrial Internet of Things (IIoT) demand aerial mobility of MDCs like UAV for data collection, which has both energy and buffer constraints. So, a future direction of this work is to nominate a set of sojourn points for resource-constrained UAV to gather the sensor data from a 3D-WSN. In addition, taking into account the cost of UAVs, finding an optimum set of such devices to ensure timely data collection can be considered as another future scope to this work.