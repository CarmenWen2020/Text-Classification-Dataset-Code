Breathing signal monitoring can provide important clues for health problems. Compared to existing techniques that require wearable devices and special equipment, a more desirable approach is to provide contactfree and long-term breathing rate monitoring by exploiting wireless signals. In this article, we propose TensorBeat, a system to employ channel state information (CSI) phase difference data to intelligently estimate
breathing rates for multiple persons with commodity WiFi devices. The main idea is to leverage the tensor decomposition technique to handle the CSI phase difference data. The proposed TensorBeat scheme first obtains
CSI phase difference data between pairs of antennas at the WiFi receiver to create CSI tensors. Then canonical polyadic (CP) decomposition is applied to obtain the desired breathing signals. A stable signal matching
algorithm is developed to identify the decomposed signal pairs, and a peak detection method is applied to
estimate the breathing rates for multiple persons. Our experimental study shows that TensorBeat can achieve
high accuracy under different environments for multiperson breathing rate monitoring.
CCS Concepts: • Computing methodologies → Machine learning approaches; • Applied computing
→ Health care information systems;
Additional Key Words and Phrases: Healthcare Internet of Things (IoT), vital sign monitoring, tensor decomposition, stable roommate matching, commodity WiFi, channel state information
1 INTRODUCTION
It is estimated that 100 million Americans suffer chronic health problems such as lung disorders,
diabetes, and heart disease (Boric-Lubeke and Lubecke 2002). About three-fourths of the total U.S.
healthcare cost is spent on dealing with these health conditions. To reduce such costs, there is an increasing demand for long-term health monitoring in indoor environments. By tracking vital signs
such as breathing and heartbeats, a patient’s physical health can be timely evaluated and meaningful clues for medical problems can be provided (Rashidi and Cook 2013). For example, monitoring
breathing signals can help identify sleep disorders or anomalies, as well as decreasing sudden
infant death syndrome (SIDS) for sleeping infants (Hunt and Hauck 2006). Traditional approaches
for monitoring vital signs require patients to wear special devices, such as a capnometer (Mogue
and Rantala 1988) to estimate the breathing rate or a pulse oximeter (Shariati and Zahedi 2005) on
the finger to track heartbeats. Smartphones are now used to estimate the breathing rate by employing a built-in gyroscope, accelerometer (Aly and Youssef 2016), and microphone (Ren et al. 2015),
and for physical activity recognition using an accelerometer (Tao et al. 2016). This requires the patient to place a smartphone near-by and wear sensors in the monitoring environment. Moreover,
the readily available smartphone sensors, such as accelerometer and gyroscope, can only monitor
the breathing rate for a single person. Such existing approaches could be expensive, inconvenient
to use, and annoying even for a short period of time. An alternative approach is needed to provide
contact-free and long-term breathing monitoring at low costs.
Several RF-based systems for vital sign tracking have recently been proposed, which employ
a wireless signal to monitor breathing-induced chest movements and are mainly based on radar
and WiFi techniques. For radar-based vital sign monitoring, several techniques, such as Doppler
radar (Droitcour et al. 2009) and ultrawideband radar (Salmi and Molisch 2011), are used to, which
require special hardware operated at high frequency and at a high cost. Moreover, the Vital-Radio
system employs frequency-modulated continuous wave (FMCW) radar to track breathing and
heart rates (Adib et al. 2015); it requires customized hardware using a wide bandwidth from 5.46
to 7.25GHz. For WiFi-based vital signs monitoring, mmVital (Yang et al. 2016) can exploit the received signal strength (RSS) of 60GHz millimeter wave (mmWave) signals for breathing and heart
rate estimation. mmVital also operates with a larger bandwidth of about 7GHz and uses a customized hardware with a mechanical rotator. Another technique called UbiBreathe uses WiFi RSS
for breathing rate estimation, which, however, requires the device be placed in the line of sight
(LOS) path between the transmitter and the receiver (Abdelnasser et al. 2015).
Compared to RSS, channel state information (CSI) provides fine-grained channel information in
the physical layer, which can now be read from modified device drivers for several off-the-shelf
WiFi network interface cards (NICs), such as the Intel WiFi Link 5300 NIC (Halperin et al. 2010)
and the Atheros AR9580 chipset (Xie et al. 2015). Moreover, CSI includes both amplitude and phase
values at the subcarrier level for orthogonal frequency-division multiplexing (OFDM) channels,
which is a more stable and accuracy representation of channel characteristics than RSS, including
the non–line of sight (NLOS) components for small-scale fading. Liu et al. (2015) use CSI amplitude
data to monitor breathing and heart signals, which requires the person to remain in the sleeping
mode. However, the measured CSI phase data has not been fully exploited in prior works, largely
due to the random phase fluctuation resulting from asynchronous times and frequencies of the
transmitter and receiver. For multiperson breathing monitoring, because the reflected components
in the received signal are from the chests of multiple persons, each varies slightly due to breathing
and the variations are independent. Thus, vital sign monitoring and estimation for multiple persons
still remains a challenging and open problem.
In this article, we propose to utilize CSI phase difference data between antenna pairs to monitor
the breathing rates of multiple persons. First, we show that when the person is in a stationary
state, such as standing, sitting, or sleeping, the CSI phase difference data is highly stable in consecutively received packets, which can be leveraged for extracting the small, periodic breathing signal
hidden in the received WiFi signal. In fact, phase difference is more robust than amplitude, which
usually exhibits large fluctuations because of the attenuation over the link distance, obstacles, and
the multipath effect. Moreover, the phase difference data captures and preserves the periodicity
of breathing, when the wireless signal is reflected from the patients’ chests. To extract the weak
breathing signals, and more important, to distinguish among multiple persons, we propose to
employ a tensor decomposition method to handle the phase difference data (Papalexakis et al.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:3
2016; Luo et al. 2015; Hu et al. 2014). We create the CSI tensor data by increasing the dimension of
CSI data, which can be used to effectively separate different breathing signals in different clusters.
We present a system called TensorBeat—tensor decomposition for estimating multiperson
breathing beats—by exploiting CSI phase difference data. TensorBeat operates as follows. First, it
obtains 60 CSI phase difference data from antenna pairs 1 and 2, and 2 and 3, at the receiver. Next,
a data preprocessing procedure is applied to the measured phase difference data, including data
calibration and Hankelization. In the data calibration phase, the direct current (DC) component
and high-frequency noises are removed. In the Hankelization phase, a two-dimensional Hankel
matrix is created based on the calibrated phase difference data from every subcarrier, and the
rank of the Hankel matrix is analyzed. Then, we adopt canonical polyadic (CP) decomposition
for estimating multipersons breathing signs and prove its uniqueness. After CP decomposition,
we obtain twice the amount of breathing signals, which, however, are randomly indexed. We thus
design a stable signal matching algorithm (i.e., the stable roommate problem (Irving 1985)) to
identify the decomposed signal pairs for each person. Finally, we combine the decomposed signals
in each pair and employ a peak detection method to estimate the breathing rate for each person.
We implement TensorBeat with commodity 5GHz WiFi devices and verify its performance with
five persons over 6 months in different indoor environments, such as a computer laboratory, a
through-wall scenario, and a long corridor. The results show that the proposed TensorBeat system can achieve high accuracy and high success rates for multipersons breathing rate estimation.
Moreover, we demonstrate the robustness of the proposed TensorBeat system for monitoring multiperson breathing beats under a wide range of environmental parameters.
The main contributions of this article are summarized as follows:
(1) We theoretically and experimentally verify the feasibility of leveraging CSI phase difference for breathing monitoring. In particular, we analyze the measured phase errors
in detail and demonstrate that phase difference data is stable and can be used to extract
breathing signs. To the best of our knowledge, we are the first to leverage phase difference
for multiperson breathing rate estimation.
(2) We are also the first to apply tensor decomposition for RF sensing–based vital signs
monitoring. We use phase difference data to create a CSI tensor for all subcarriers
at the three antennas of the WiFi receiver. We then incorporate CP decomposition to
obtain the desired breathing signals. A stable signal matching algorithm is developed to
match the decomposed signals for each person, whereas a peak detection method is used
to estimate multiperson breathing rates.
(3) We prototype the TensorBeat system with commodity 5GHz WiFi devices and demonstrate its superior performance in different indoor environments with extensive experiments. The results show that the proposed TensorBeat system can achieve high accuracy
and high success rates for multiperson breathing rate estimation.
The remainder of this article is organized as follows. The preliminaries and phase difference
analysis are provided in Section 2. We review TensorBeat system design and performance analysis
in Section 3 and verify its performance with extensive experiments in Section 4. We review related
work in Section 5. Section 6 concludes the article.
2 PRELIMINARIES AND PHASE DIFFERENCE INFORMATION
2.1 Tensor Decomposition Preliminaries
A tensor is considered a multidimensional array (Kolda and Bader 2009). The dimensions of the
tensor are called modes, and the order of the tensor is the number of the modes. For example,
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:4 X. Wang et al.
the N-order tensor is a N-mode tensor. Moreover, it is noted that a first-order tensor is a vector,
a second-order tensor is a matrix, and a third-order tensor has a cubic structure. Higher-order
tensors with (N ≥ 3) have a wide range of applications, such as data mining, brain data analysis, recommendation systems, wireless communications, and computer vision, and those that are
healthcare and medical related (Papalexakis et al. 2016). Higher-order tensors face various computational challenges because of the exponential increase in time and space complexity. This leads to
the curse of dimensionality. Fortunately, tensor decomposition as one powerful tool is leveraged
for alleviating the curve by decomposing high-order tensors into a limited number of factors. In addition, it can obtain hidden feature components, thus extracting physical insight of higher-order
tensors. Two main tensor decompositions techniques are tucker decomposition and CP decomposition (Kolda and Bader 2009). We consider CP decomposition for multiperson breathing rate
estimation because it can easily obtain the unique solution (Kolda and Bader 2009). We now provide some necessary definitions and equations of tensor decomposition that can be used for our
proposed algorithm.
Definition 2.1 (Frobenius Norm of a Tensor). The Frobenius norm of a tensor χ ∈ KI1×I2×···×IN is
the square root of the sum of the squares of all of its elements, which is defined by

χ
F =

I1
i1=1

I2
i2=1
··· 
IN
iN =1
x2
i1,i2 ···iN , (1)
where K stands for R or C.
Definition 2.2 (Kronecker Product). The Kronecker product of matrices A ∈ KI×J and B ∈ KM×N
is denoted as A ⊗ B. The result is an (IM) × (JN) matrix, which is defined as
A ⊗ B =
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
a11B a12B ... a1J B
a21B a22B ... a2J B
.
.
. .
.
. .
.
. .
.
.
aI 1B aI 2B ... aI J B
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
. (2)
Definition 2.3 (Khatri-Rao Product). The Khatri-Rao product of A ∈ KI×J and B ∈ KM×J is denoted as A  B. It is the columnwise Kronecker product with size (IM) × J, which is defined as
A  B = [a1 ⊗ b1,a2 ⊗ b2,...,aJ ⊗ bJ]. (3)
Definition 2.4 (Hadamard Product). The Hadamard product of A ∈ KI×J and B ∈ KI×J is denoted
as A ∗ B. It is the elementwise matrix product with size I × J, which is defined as
A ∗ B =
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
a11b11 a12b12 ... a1Jb1J
a21b21 a22b22 ... a2Jb2J
.
.
. .
.
. .
.
. .
.
.
aI 1bI 1 aI 2bI 2 ... aI JbI J
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
. (4)
2.2 CSI Preliminaries
OFDM is an effective wireless transmission technique widely used in many wireless systems, including WiFi (e.g., IEEE 802.11 a/g/n) and LTE (Wang et al. 2016c; Xu et al. 2014). The OFDM
system partitions the wireless channel into multiple orthogonal subcarriers, where data is transmitted over all subcarriers by using the same modulation and coding scheme (MCS) to combat
frequency selective fading. With a modified device driver for off-the-shelf NICs, such as the Intel
5300 NIC (Halperin et al. 2010) and the Atheros AR9580 chipset (Xie et al. 2015), the CSI data can be
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.       
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:5
extracted, which represents fine-grained physical (PHY) information. Moreover, CSI captures rich
wireless channel characteristics such as shadowing fading, distortion, and the multipath effect.
The WiFi OFDM channel can be regarded as a narrowband flat fading channel, which can be
expressed in the frequency domain as
Y = H · X + N , (5)
where Y and X denote the received and transmitted signal vectors, respectively; N is the additive
white Gaussian noise; and H represents the channel frequency response, which can be estimated
from Y and X .
Although the WiFi OFDM system can use 56 subcarriers for data transmission on a 20MHz
channel, the Intel 5300 NIC device driver can only provide CSI for 30 out of the 56 subcarriers. The
channel frequency response of subcarrier i, denoted by Hi , is a complex value, given as
Hi = Ii + jQi = |Hi | exp (j∠Hi ), (6)
where Ii and Qi are the in-phase component and quadrature component, respectively, and |Hi |
and ∠Hi are the amplitude and phase response of subcarrier i, respectively.
For indoor environments with multipath components, the channel frequency response of subcarrier i, Hi , can also be written as
Hi =

K
k=0
rk · e−j2π fi τk , (7)
whereK is the number of multipath components, and rk andτk are the attenuation and propagation
delay on the kth path, respectively.
Traditionally, the multipath components are regarded as harmful for wireless communications,
as they cause the delay spread (requires guard times) and large fluctuation of received wireless
signal (harder to demodulate). For indoor localization systems, multiple signals will be received
from a single transmission, including one LOS signal and many reflected signals. It is a challenging
problem to detect the LOS signal from the mixed multipath components, which is indicative of the
direction of the transmitter (Yang et al. 2013; Wang et al. 2014b). In this article, however, we take
a different view and show that the multiple signals reflected from the chests of multiple persons
can be useful for estimating their breathing rates simultaneously.
2.3 Phase Difference Information
As discussed, we exploit phase difference information for breathing rate estimation. We verify that
the phase difference values between two adjacent antennas are stable for consecutively received
packets in this section. In fact, the extracted phase information from the Intel 5300 NIC is highly
random and cannot be used for breathing monitoring. This is because of the asynchronous times
and frequencies of transmitter and receiver NICs. Two effective techniques have been proposed
for CSI phase calibration to remove the unknown random components in CSI phase data. The first
technique is to take a linear transformation for the CSI phase data over all subcarriers (Qian et al.
2014; Wang et al. 2015b, 2016b). The other technique is to use the phase difference between two
adjacent antennas (in the 2.4GHz band) and to remove the measured average of phase difference
for LOS recognition (Wu et al. 2015). It can be seen that these techniques only obtain the stable
phase information and phase difference data with a zero mean, respectively, but none of these are
useful for breathing rate estimation.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.        
8:6 X. Wang et al.
To prove the stability of measured CSI phase difference in the 5GHz band, we write the
measured phase of subcarrier i, denoted as ∠H
i , per Speth et al. (1999):
∠H
i = ∠Hi + (λp + λs )mi + λc + β + Z, (8)
where ∠Hi is the true phase of CSI data, mi is the subcarrier index of subcarrier i, β is the initial
phase offset at the phase-locked loop (PLL), Z is the measurement environment noise, and λp , λs ,
and λc are the phase errors from packet boundary detection (PBD), the sampling frequency offset
(SFO), and the central frequency offset (CFO), respectively (Speth et al. 1999), which are given by
⎧⎪⎪⎪⎪
⎨
⎪⎪⎪⎪
⎩
λp = 2π Δt
N
λs = 2π ( T 
−T
T ) Ts
Tu n
λc = 2πΔf Tsn,
(9)
where Δt is the PBD delay; N is the FFT size; T  and T are the sampling periods from the receiver
and the transmitter, respectively; Tu is the length of the data symbol; Ts is the total length of the
data symbol and the guard interval; n is the sampling time offset for the current packet; and Δf
is the center frequency difference between the transmitter and receiver. In fact, the values of Δt, T 
−T
T , n, Δf , and β in (8) and (9) are unknown, and the values of λp , λs , and λc can be different for
different packets. Thus, we cannot obtain the true phase ∠Hi from measured phase values.
However, the measured phase difference on subcarrier i is stable, which can be employed for
breathing rate estimation. Since the three antennas of the Intel 5300 NIC are on the same NIC, they
use the same system clock and the same down-converter frequency. The measured CSI phases on
subcarrier i from two adjacent antennas have the same λp , λs , λc , and mi . The phase difference
can be computed as
Δ∠H
i = Δ∠Hi + Δβ + ΔZ, (10)
where Δ∠Hi is the true phase difference of subcarrier i; Δβ is the unknown difference in phase
offsets, which is a constant (Gjengset et al. 2014); and ΔZ is the noise difference. Since in (10) the
random values Δt, Δf , and n are all removed, the phase difference becomes more stable for backto-back received packets. As an example, we plot in Figure 1 the phase differences (marked as red
dots) and the single antenna phases (marked as gray crosses) read from the third subcarrier for 500
consecutively received packets. It can be seen that the single antenna phase is nearly uniformly
distributed between 0 and 360 degrees. However, all phase difference data concentrate in a small
sector between 330 and 340 degrees, which is significantly more stable than phase data.
Breathing rate estimation for multiple persons is a challenging problem because the reflected
components in the received signal are from the chests of multiple persons, each moves slightly
due to breathing, and the movements are independent. Thus, the peak-to-peak detection method
cannot be effective for detecting the multiple breathing signals from the received signal. The aggregated breathing signal from multiple persons is not a clearly periodic signal anymore. Figure 2
shows the detected breathing signals for one person (the upper plot) and three persons (the lower
plot). We can see that for one person, the breathing signal exhibits a noticeable periodicity. Thus,
the breathing rate can be estimated by peak detection after removing the noise. However, the aggregated breathing signal of three persons does not show noticeable periodicity for packets 400 to
600. Traditional FFT-based methods can transform the received signal from the time domain to the
frequency domain to estimate the breathing frequencies from multiple persons. Figure 3 shows the
breathing rate estimation for one person (the upper plot) and three persons (the lower plot) with
the FFT method. We can see that the estimated frequency for one person is 0.2Hz, which is almost
the same as the true breathing rate. However, for three-person breathing rate estimation, the FFT
curve only has two peaks, and the estimated breathing rates are much less accurate. In particular,
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:7
Fig. 1. Phase differences (marked by red dots) and single antenna phases (marked by gray crosses) of the
third subcarrier for 500 back-to-back packets, plotted in the polar coordinate system.
Fig. 2. Detected breathing signals for one person (the upper plot) and three persons (the lower plot).
the third peak cannot be estimated. This is because FFT-based methods require a larger window
size to improve the frequency resolution. We show that the proposed tensor decomposition–based
method is highly effective for multiperson breathing rate estimation in the following section.
3 THE TENSORBEAT SYSTEM
3.1 TensorBeat System Architecture
The main idea of the proposed TensorBeat system is to estimate multiperson breathing rates
by employing a tensor decomposition method. To obtain CSI tensor data, we first create a
two-dimensional Hankel matrix with phase difference data from back-to-back received packets
extracted from each subcarrier at each antenna. Then, by leveraging the phase differences from
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:8 X. Wang et al.
Fig. 3. Breathing rate estimation for one person (the upper plot) and three persons (the lower plot) based
on FFT.
the 60 subcarriers (i.e., that between antennas 1 and 2, and between antennas 2 and 3), we can
construct the third dimension of the CSI tensor data. The TensorBeat system will then leverage
the created CSI tensor to estimate multiperson breathing signals. Our approach is motivated by
two observations. First, for stationary modes of a person, such as standing, sitting, or sleeping,
CSI phase difference from consecutively received packets is highly stable. It can thus be useful for
extracting the periodic breathing signals. Second, the tensor decomposition method can effectively
estimate multiperson breathing beats. We create the CSI tensor data by increasing the dimension
of CSI data from one to three. The higher-dimension CSI data is helpful to effectively separate
different breathing signals by forming different clusters. This strategy is similar to the kernel
method in traditional machine learning, such as support vector machine (SVM) (Wu et al. 2007) or
multiple hidden layers in deep learning (LeCun et al. 2015; Wang et al. 2015b, 2015c, 2017a, 2017b).
As shown in Figure 4, the TensorBeat system consists of five main modules: Data Extraction,
Data Preprocessing, CP Decomposition, Signal Matching, and Breathing Rate Estimation. For Data
Extraction, TensorBeat obtains 60 CSI phase difference data, 30 between antennas 1 and 2, and 30
between antennas 2 and 3, at the receiver with an off-the-shelf WiFi device. The Data Preprocessing module includes data calibration and Hankelization. Data calibration is implemented to
remove the DC component and high-frequency noises. Hankelization creates a two-dimensional
Hankel matrix with phase difference data from each subcarrier for back-to-back received packets.
The rank of the constructed Hankel matrix is then analyzed. We next apply CP Decomposition
to estimate multiperson breathing signals and prove its uniqueness. For Signal Matching, we first
compute the autocorrelation function of the decomposed signals and incorporate a stable roommate matching algorithm to identify the decomposed signal pairs for each person, where a preference list is computed with the dynamic time warping (DTW) values of the autocorrelation signals.
For Breathing Rate Estimation, we combine the decomposed signals in each pair and use the peak
detection method to compute the breathing rate for each person.
The Data Extraction module has a similar design as our prior work PhaseBeat (Wang et al.
2017b). In the remainder of this section, we present the design and analysis of the remaining four
modules module of the TensorBeat system in detail.
3.2 Data Preprocessing
3.2.1 Data Calibration. We use a 20Hz sampling rate to obtain 60 CSI phase difference data, 30
between antennas 1 and 2, and 30 between antennas 2 and 3, at the receiver with an off-the-shelf
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:9
Fig. 4. TensorBeat system architecture.
WiFi device at 5GHz for data extraction. Then, data calibration is applied to remove the DC
component and high-frequency noises. Because the DC component is also considered a kind
of signal, which may affect CSI tensor decomposition, TensorBeat adopts the Hampel filter to
remove the DC component. Unlike traditional data calibration approaches that only remove the
high-frequency noise, we use the Hampel filter for detrending the original CSI phase difference
data. In fact, the Hampel filter, which is set as a large sliding window with 150 samples wide
and a small threshold of 0.001, is first used to extract the basic trend of the original data. Then,
the detrended data is generated by subtracting the basic trend data from the original data. We
also utilize the Hampel filter to reduce the high-frequency noise by using a sliding window of 6
samples wide and a threshold of 0.01.
Figure 5 presents an example of data calibration. We can see that the original phase differences
of all subcarriers have both a DC component and high-frequency noises. With the proposed data
calibration approach, the DC components are readily removed and all subcarriers demonstrate a
similar calibrated signal over the 600 packet range with low noise. Such calibrated signal will then
be used for estimating the breathing rates of multiple persons.
3.2.2 Hankelization. After data calibration, we obtain the CSI phase difference data matrix with
a dimension of (number of packets × number of subcarriers). We then employ a Hankelization
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:10 X. Wang et al.
Fig. 5. Data calibration: an example.
method to transform the large CSI matrix into a CSI tensor by expanding the packets into an
additional dimension (Lathauwer 2011). Specifically, we rearrange the signals of each subcarrier
into a two-dimensional Hankel matrix so that the signals from all 60 subcarriers can be considered
as a three-dimensional tensor. Define Hr as the constructed Hankel matrix with the size I × J for
subcarrier r, which is created by mapping N packets onto the Hankel matrix with N = I + J − 1.
We consider the Hankel matrix with size I = J = N +1
2 . We thus obtain the Hankel matrix Hr for
subcarrier r as
Hr =
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
hr (0) hr (1) ... hr ( N +1
2 − 1)
hr (1) hr (2) ... hr ( N +1
2 )
.
.
. .
.
. .
.
. .
.
.
hr ( N +1
2 − 1) hr ( N +1
2 ) ... hr (N − 1)
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
, (11)
where hr (i) is the calibrated phase difference data from subcarrier r for packet i. In our experiments, we set N = 599 and I = J = 300. To determine the number of components needed for CSI
tensor decomposition, we provide the following theorem for estimating R breathing signals.
Theorem 3.1. If there are R breathing signals in an indoor monitoring environment, the constructed Hankel matrix Hr for subcarrier r has a rank of 2R when noise is negligible.
Proof. When analyzing signal data structure, we assume that noise is negligible. Moreover,
let the ith breathing signal be represented as Si (t) = Ai cos(wit + φi ). The observed signal from a
subcarrier can be represented by Cichocki et al. (2015):
Y (t) =

R
i=1
KiSi (t) =

R
i=1
Kˆ
i cos(wit + φi ), (12)
where Ki is the coefficient for breathing signal i and the new coefficient Kˆ
i = KiAi . The ith component of Y (t), Kˆ
i cos(wit + φi ), can be decomposed using Euler’s formula. We have
Kˆ
i cos(wit + φi ) = Kˆ
i
2 exp(j(wit + φi )) +
Kˆ
i
2 exp(j(−wit − φi ))
= Kˆ
i
2 exp(jφi ) exp(jwit) +
Kˆ
i
2 exp(−jφi ) exp(−jwit). (13)
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:11
Each breathing signal can be separated into two exponential signals with different coefficients.
Combining all the R breathing signals, we have
Y (t) =

R
i=1

Kˆ
i
2 exp(jφi ) exp(jwit) +
Kˆ
i
2 exp(−jφi ) exp(−jwit)

=
2R
i=1
K˜
iZt
i , (14)
where the updated signal Zt
i is denoted as Zt
i = exp(±jwit) and K˜
i = Kˆ
i
2 exp(±jφi ) is its coefficient.
For packets received at discrete times, we represent the received signal as Y (n) = 2R
i=1 K˜
iZn
i . Note
that the combined signal can be considered as an exponential polynomial with 2R different exponential terms. Mapping signal Y (n) for n = 1, 2,..., N into a Hankel matrix with size I = J = N +1
2 ,
we have
Hr =
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
2R
i=1 K˜
iZ0
i
2R
i=1 K˜
iZ1
i ··· 2R
i=1 K˜
iZ
N +1
2 −1
i
2R
i=1 K˜
iZ1
i
2R
i=1 K˜
iZ2
i ··· 2R
i=1 K˜
iZ
N +1
2
i
.
.
. .
.
. ··· .
.
. 2R
i=1 K˜
iZ
N +1
2 −1
i
2R
i=1 K˜
iZ
N +1
2
i ··· 2R
i=1 K˜
iZ N −1 i
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
. (15)
We can see that the Hankel matrix can be decomposed with Vandermonde decomposition
(Lathauwer 2011) as
Hr = Vr · diag(K˜
1,K˜
1,...,K˜
2R ) · V˜ T
r , (16)
where the Vandermonde matrices Vr ∈ K N +1
2 ×2R and V˜ r ∈ K N +1
2 ×2R are given by
Vr = V˜ r =
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
1 1 ··· 1
Z1 Z2 ··· Z2R
.
.
. .
.
. ··· .
.
.
Z
N +1
2 −1
1 Z
N +1
2 −1
2 ··· Z
N +1
2 −1
2R
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
. (17)
Because a Vandermonde matrix is full rank, which is obtained by different poles, the rank of the
Hankel matrix generated by R breathing signals is 2R.
According to Theorem 3.1, 2R signal components are required to separate the R breathing signals. Next, we consider the influence of measurement noise on the Hankel matrix Hr . Because of
noise, the Hankel matrix Hr is actually a full-rank matrix. However, Theorem 3.1 shows that the
rank of the combined breathing signal is 2R, meaning that the first 2R weighted decomposed components are much stronger than the remaining ones as long as the signal-to-noise ratio (SNR) is not
very low. This shows that the Hankel matrix structure can be used to effectively separate breathing signals from white noise. Actually, the different signals will be well denoised and separated by
using tensor decomposition, which is discussed in Section 3.3.
3.3 CP Decomposition
Once the CSI tensor is ready, we apply CP decomposition to estimate multiperson breathing signals. With CP decomposition, the CSI tensor data can be approximated as the sum of 2R rank-one
tensors according to Theorem 3.1. Denote χ ∈ KI×J×K as a third-order CSI tensor, which can be
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017. 
8:12 X. Wang et al.
obtained by the sum of three-way outer products as in Kolda and Bader (2009) and Papalexakis
et al. (2016):
χ ≈
2R
r=1
ar ◦ br ◦ cr, (18)
where ar , br , and cr are the vectors at the rth position for the first, second, and third dimension,
respectively, and 2R is the number of decomposition components, which is the approximation
rank of the tensor based on CP decomposition (Sun and Kumar 2014, 2015). Their outer product is
defined by
(ar ◦ br ◦ cr )(i, j, k) = ar (i)br (j)cr (k), for all i, j, k. (19)
We consider factor matrices A = [a1, a2,..., a2R] ∈ KI×2R, B = [b1,b2,...,b2R] ∈ KJ×2R, and C =
[c1,c2,...,c2R] ∈ KK×2R as the combination of vectors from rank-one components. Moreover, define X(1) ∈ KI×J K , X(2) ∈ KJ×I K , and X(3) ∈ KK×I J as 1-mode, 2-mode, and 3-mode matricization
of CSI tensor χ ∈ KI×J×K , respectively, which are obtained by fixing one mode and arranging the
slices of the rest of the modes into a long matrix (Kolda and Bader 2009). Then, we can write the
three matricized forms as
X(1) ≈ A(C  B)
T , (20)
X(2) ≈ B(C  A)
T , (21)
X(3) ≈ C(B  A)
T , (22)
where  denotes the Khatri-Rao product.
When the number of components 2R is given, we apply the alternating least squares (ALS)
algorithm, the most widely used algorithm for CP decomposition (Kolda and Bader 2009). To decompose the CSI tensor, we minimize the square sum of the differences between the CSI tensor χ
and the estimated tensor:
min
A,B,C






χ −
2R
r=1
ar ◦ br ◦ cr






2
F
. (23)
Note that (23) is not convex. However, the ALS algorithm can effectively solve the problem by
fixing two of the factor matrices to reduce the problem to a linear least squares problem with the
third factor matrix as variable. If we fix B and C, we can rewrite problem (23) as
min
A



X(1) − A(C  B)
T


2
F . (24)
We can derive the optimal solution to problem (24) as A = X(1)[(C  B)
T ]
†. Applying the property
of pseudoinverse of the Khatri-Rao product, it follows that
A = X(1) (C  B)(CTC ∗ BT B)
†
, (25)
where ∗ denotes the Hadamard product. This equation only requires computing the pseudoinverse
of a 2R × 2R matrix rather than a JK × 2R matrix. Note that R is much smaller than J and K,
and thus the computing complexity can be greatly reduced. Similarly, we can obtain the optimal
solutions for B and C as
B = X(2) (C  A)(CTC ∗ ATA)
†
, (26)
C = X(3) (B  A)(BT B ∗ ATA)
†. (27)
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.                  
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:13
Fig. 6. CP decomposition results for a CSI tensor of three persons.
Applying ALS to CP decomposition, we obtain matrices A, B, andC. To guarantee the effectiveness
of the decomposed components, we next examine the uniqueness of CP decomposition. The basic
theorem on the uniqueness of CP decomposition is given in Kolda and Bader (2009), which is
provided in the following.
Fact 1. For tensor χ with rank L, if kA + kB + kC ≥ 2L + 2, then the CP decomposition of χ is
unique, where kA, kB, and kC denote the k-rank of matrices A, B, and C, respectively. Here k-rank
means the maximum value k such that any k columns are linearly independent (Kolda and Bader
2009).
Based on Fact 1, we have the following theorem for the CP decomposition.
Theorem 3.2. For the proposed CSI tensor χ with rank 2R, the CP decomposition of χ is unique.
Proof. The proposed CSI tensor χ is created by K Hankel matrix, where the rth Hankel matrix
Hr is rank-2R according to Theorem 3.1. Thus, for the k-rank of matrices A and B, we have kA = 2R
and kB = 2R. However, because phase differences of subcarriers between antennas 1 and 2 and
antennas 2 and 3 are independent, the k-rank of matrixC is kC ≥ 2. Thus, we have kA + kB + kC ≥
2R + 2R + 2 = 2(2R) + 2, which satisfies the conditions in Fact 1. This proves the theorem.
Theorem 3.2 indicates that the CP decomposition of the created CSI tensor is unique, which can
be used to effectively estimate multiple breathing rates. In the proposed TensorBeat system, we
leverage matrix A = [a1, a2,..., a2R] as decomposed signals S1, S2,..., S2R. For example, Figure 6
shows the results of CP decomposition for CSI tensor data from three persons (R = 3). We can see
that there are six signals. Moreover, signals 1 and 2 are similar, signals 3 and 5 are similar, and
signals 4 and 6 are similar. This is because CP decomposition cannot guarantee that similar signals
are located at adjacent locations (i.e., the output signals are randomly indexed). Thus, we need to
identify the signal pairs among the decomposed signals for each person, which will be addressed
in Section 3.4.
3.4 Signal Matching Algorithm
The CP decomposition of CSI tensor data yields 2R decomposed signals (i.e., S1, S2,..., S2R), which,
however, are randomly indexed. In this section, we propose a signal matching algorithm to pair
the two similar decomposed signals that belong to the same person. The main idea is to leverage
autocorrelation to strengthen the periodicity of decomposed signals and use the DTW method
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017. 
8:14 X. Wang et al.
Fig. 7. Autocorrelation of the decomposed breathing signals.
to compute the similarity value for any pair of signals. Finally, we apply the stable roommate
matching algorithm to pair the decomposed signals for each person using the DTW values as the
closeness metric. We introduce the proposed signal matching algorithm in the following.
3.4.1 Autocorrelation and DTW. After CP decomposition, we first compute the autocorrelation
function of the 2R decomposed signals to strengthen their periodicity. We evaluate the autocorrelation function of the decomposed signals for two reasons. The first is that the autocorrelation of a
decomposed signal can increase the data length, which helps to improve the accuracy of the peak
detection. Second, because the decomposed signals have phase shift and nonalignment, using the
autocorrelation of decomposed signals can reduce such shifts and strengthen the periodicity of the
decomposed signals. Figure 7 shows the autocorrelation of the decomposed breathing signals produced by CP decomposition. We can see that each autocorrelation signal exhibits a more obvious
periodicity than that of the original decomposition signals. Moreover, the data length is increased
from 300 to 600.
Furthermore, we employ the DTW approach to measure the distance between any pair of autocorrelation signals, which is different from the Euclidean distance method that computes the
sum of distances from each value on one curve to the corresponding value on the other curve.
Moreover, the Euclidean distance method believes that two autocorrelation signals with the same
length are different as long as one of them has a small shift. However, DTW can automatically
identify these shifts and provide the similar distance measurement between two autocorrelation
signals by aligning the corresponding time series, thus overcoming the limitation of the Euclidean
distance method.
With the autocorrelation signals, we design the DTW method for measuring their pairwise
distance. Given two autocorrelation signals and a cost function, the DTW method seeks an
alignment by matching each point in the first autocorrelation signal to one or more points
in the second signal, thus minimizing the cost function for all points (Wang and Katabi 2013;
Salvador and Chan 2004, 2007). To reduce the computational complexity of DTW, we apply
downsampling to the two autocorrelation signals, which leads to a reduced number of packets N 
.
Then, considering two downsampled autocorrelation signals Pi = [Pi (0), Pi (1),..., Pi (N  − 1)]
and Pj = [Pj (0), Pj (1),..., Pj (N  − 1)], we need to find a warping path W = [w1,w2,...,wL],
where L is the length of the path and the lth element of the warping path is wl = (ml ,nl ), where
m and n are the packet index for the two downsampled autocorrelation signals. The objective
is to minimize the total cost function by implementing the nonlinear mapping between two
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:15
Fig. 8. DTW results for downsampled autocorrelation signals 4 and 6 (the upper plot) and downsampled
autocorrelation signals 4 and 3 (the lower plot), respectively.
downsampled autocorrelation signals Pi and Pj . The formulated problem is given by
min 
L
l=1

Pi (ml ) − Pj (nl )
 (28)
subject to (m1,n1) = (0, 0) (29)
(mL,nL ) = (N  − 1, N  − 1) (30)
ml ≤ ml+1 ≤ ml + 1 (31)
nl ≤ nl+1 ≤ nl + 1. (32)
The objection function is to minimize the distance between two downsampled autocorrelation
signals. The first and second constraints are boundary constraints, which require that the warping
path starts at Pi (0) and Pj (0) and ends at Pi (N  − 1) and Pj (N  − 1). This can guarantee that all
points of the two downsampled autocorrelation signals are used for measuring their distance, thus
avoiding to use only local data. Furthermore, the third and fourth constraints are monotonic and
marching constraints, which require that there are no cycles for wi and wj in the warping path
and the path is increased with the maximum 1 at each step.
We apply dynamic programming to solve problem (28) to obtain the minimum distance warping path between two downsampled autocorrelation signals. We consider a two-dimensional
cost matrix C with size N  × N 
, whose element C(ml ,nl ) is the minimum distance warping path for two downsampled autocorrelation signals Pi = [Pi (0), Pi (1),..., Pi (ml )] and Pj =
[Pj (0), Pj (1),..., Pj (nl )]. We design the recurrence equation in dynamic programming as follows:
C(ml ,nl ) = 
Pi (ml ) − Pj (nl )
 + min [C(ml − 1,nl ), C(ml ,nl − 1), C(ml − 1,nl − 1)]. (33)
By filling all elements of the cost matrix C, the value C(N  − 1, N  − 1) can be computed as the
DTW value between the two downsampled autocorrelation signals. The time complexity isO(N 2).
Figure 8 shows the DTW results for downsampled autocorrelation signals 4 and 6 (the upper plot)
and downsampled autocorrelation signals 4 and 3 (the lower plot), where we set the downsampling
number of packets as N  = N
10 = 60. It can be seen that downsampled autocorrelation signals 4 and
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:16 X. Wang et al.
6 have a smaller DTW value (i.e., 3.65) than downsampled autocorrelation signals 4 and 3 (i.e., 13.7).
In other words, signals 4 and 6 are more similar and more likely to belong to the same person. We
also find that the downsampled autocorrelation signals have a high similarity in the center than
that on the boundary, and it can reduce the phase shift values. Thus, the DTW value is a good
measure of the distance between two downsampled autocorrelation signals. We need to compute
the DTW values for all downsampled autocorrelation signal pairs, which are then used in stable
roommate matching.
3.4.2 Stable Roommate Matching. Since the CP decomposed signals are randomly indexed (see
Figure 7), we need to identify the pair for each person. With the DTW values for all downsampled autocorrelation signal pairs, we can model this problem as a stable roommate matching problem (Irving 1985; Feng et al. 2015a, 2015b). There is a group of 2R signals, and each signal maintains
a preference list of all other signals in the group, where the preference value for another signal
is the inverse of the corresponding DTW value (i.e., distance). The problem is to pair the signals
such that there is no such pair of signals that both of them have a more desired selection than
their current selection (i.e., to find a stable matching) (Irving 1985; Feng et al. 2015a, 2015b). The
proposed signal matching algorithm is presented in Algorithm 1.
We first compute the autocorrelation of all decomposed signals. Then, each autocorrelation signal populates its preference list with other autocorrelation signals according to the DTW values.
The stable roommate matching algorithm is executed in two steps. In step 1, each signal proposes
to other signals according to its preference list. If a signalm receives a proposal from another signal
n, we implement the following strategy: (i) signal m rejects signal n if it has a better proposal from
another signal, and (ii) signal m accepts signal n’s proposal if it is better than all other proposals
that signal m currently holds. Moreover, signal n stops to propose when its proposal is accepted
and needs to continue to propose to other signals if being rejected. This strategy is implemented
in step 1 of the signal matching algorithm, where we use f inish_f laд to mark whether the current siдnal_num is accepted or not. Moreover, variables accept_num and propose_num are used
to record the current signal’s proposed number and proposing number, respectively. In addition,
variable scan_num is used to record the current scanning signal number. After completing step 1,
every signal holds a proposal or one signal has been rejected by other signals (this case hardly happens in TensorBeat, because the CP decomposition produces two very similar signals with high
probability for each person). Then, we need to delete some elements in all preference lists based
on the following method, which is that if signal m is the first on signal n’s list , then signal n is the
last on signal m’s list. For the proposed algorithm, every signal can reject signals that have less
than accept_num in its preference list symmetrically (reject each other).
An example is shown in Figure 6. According to the DTW values, signals 1, 2, 3, 4, 5, and 6 have
their preference lists as (2, 3, 5, 6, 4), (1, 3, 5, 6, 4), (5, 1, 2, 6, 4), (6, 5, 3, 2, 1), (3, 2, 1, 4, 6), and (4, 5,
3, 2, 1), respectively. When step 1 is executed, we have the following: signal 1 proposes to 2, and
signal 2 holds 1; signal 2 proposes 1, and signal 1 holds; signal 3 proposes to signal 5, and signal 5
holds; signal 4 proposes to signal 6, and signal 6 holds; signal 5 proposes to signal 3, and signal 3
holds; and signal 6 proposes to signal 4, and signal 4 holds. It is easy to find three pairs (1,2), (3,5),
and (4,6).
Although most of decomposed signals are paired in step 1, step 2 will still be necessary for
the more challenging cases of many more breathing signals and NLOS environments. In step 2,
we consider the reduced preference lists, where some of the lists have more than one signal. By
implementing step 2, we can reduce the preference lists such that each signal only holds one
proposal. The main idea is that we need to find some all-or-nothing cycles and symmetrically
delete signals in the cycle sequence by rejecting the first and last choice pairs. The signal in the
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:17
ALGORITHM 1: Signal Matching Algorithm
Input: Decomposed signals: S1, S2,..., S2R.
Output: Matched signal pairs.
Compute autocorrelation of all decomposed signals;
Compute the DTW values for every pair of autocorrelation signals;
Each autocorrelation signal sets its preference list using the DTW values;
//step1;
for siдnal_num = 1:2R do
Set f inish_f laд = 0;
Set scan_num = siдnal_num;
while f inish_f laд = 0 do
if the proposal is the first one then
Proposing signal’s propose_num=the current choice;
Set f inish_f laд = 1;
Proposed signal’s accept_num = scan_num;
else
if the signal prefers the former proposal then
Reject the current proposal symmetrically;
Propose to the next choice;
else
Accept the current proposal;
Reject the former proposal symmetrically;
scan_num = proposed signal’s accept_num;
Propose to the next choice;
end
end
end
end
for siдnal_num = 1:2R do
Reject signals that have less than accept_num in every preference list symmetrically;
end
//step2;
siдnal_num = 1;
while siдnal_num < 2R + 1 do
if propose_num = accept_num then
siдnal_num=siдnal_num+1;
else
Let p1 be a signal whose preference list contains more than one element;
while p sequence is not cyclic do
qi = the second preference of pi ’s current list;
pi+1 = the last preference of qi ’s current list;
end
Denote ps as the first element in the p sequence to be repeated and r as the length of the circle;
for i = 1 : r do
Reject matching (qs+i−2,ps+i−1) symmetrically;
end
siдnal_num = 1;
end
end
Obtain signal matching pairs based on all processed preference lists;
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:18 X. Wang et al.
Fig. 9. Fusion results based on the outcomes of the signal matching algorithm.
cycle accepts the secondary choice, thus obtaining a stable roommate matching. To find all-ornothing cycles, let p1 be a signal with a preference list that contains more than one element and
generate the sequences such that qi = the second preference of pi ’s current list and pi+1 = the last
preference of qi ’s current list. After the cycle sequence generation, denote ps as the first element
in the p sequence to be repeated. Then, we reject matching (qs + i − 2,ps + i − 1) for i = 1 to r
symmetrically, where r is the length of the cycle. Finally, we can obtain signal matching pairs
based on all processed preference lists. The computational complexity of Algorithm 1 is O(R2),
because each of steps 1 and 2 has a complexity of O(R2), respectively.
3.5 Breathing Rate Estimation
3.5.1 Signal Fusion and Autocorrelation. After obtaining the outcomes of the signal matching
algorithm, TensorBeat next applies peak detection to estimate the breathing rates for multiple persons. Compared to the FFT method, a higher resolution in the time domain can be achieved. To
implement peak detection, we first need to combine the decomposed signal pairs for each person
into a single signal by taking the average of the signal pairs. Averaging can decrease the variance of the decomposed signals while preserving the same period. For example, Figure 9 shows
the fusion results based on the outcome of the signal matching algorithm, where three smoothly
decomposed signals with different periods are obtained. To strengthen the accuracy of peak detection, we compute the autocorrelation function again for every fused signal. Figure 10 shows
the autocorrelation of the three fused signals. It can be seen that the length of data is increased
from 300 to 600 and the number of peaks of every signal are also increased, which help improve
estimation accuracy.
3.5.2 Peak Detection. Although the breathing signal is generated by the small periodic chest
movement of inhaling and exhaling, the phase difference data can effectively capture the breathing
rate. Traditionally, estimation of breathing rates is achieved with FFT-based methods. However,
the FFT approach may have limited accuracy because the frequency resolution of breathing signals
is based on the window size of FFT. When the window size becomes larger, the accuracy will be
higher, but the time domain resolution will be reduced. See Figures 2 and 3 for the limitation of the
FFT-based approach for the multiperson scenario. Therefore, we leverage peak detection instead in
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:19
Fig. 10. Autocorrelation of fused signals.
the TensorBeat system to achieve accurate breathing rate estimation for each of autocorrelations
of fused signals.
For peak detection, the traditional method based on amplitude needs to detect the fake peak,
which is not a real peak but has larger values than its two immediate neighboring points. To avoid
the fake peak, a large moving window can be used to identify the real peak based on the maximum
breathing periodicity. This method is not robust, since it requires adjusting the window size. In
TensorBeat, we only consider a smaller moving window of seven samples wide. This is because
we leverage the Hankel matrix and CP decomposition to smooth out the breathing curves, which
hardly contain any fake peaks. Then, for the ith autocorrelation curve of fused signal, we seek
all peaks by determining whether or not the median of the seven samples in the moving window
is the maximum value. Finally, we consider the median of all peak-to-peak intervals as the final
period of the ith breathing signal, which is denoted as Ti . The estimated breathing rates can be
computed as fi = 60/Ti for i = 1 to R.
4 EXPERIMENTAL STUDY
4.1 Experiment Configuration
In this section, we validate the TensorBeat performance with an implementation with 5GHz Wi-Fi
devices. To obtain 5GHz CSI data, we use a desktop computer and a Dell laptop as access point and
mobile device, respectively, both of which are equipped with an Intel 5300 NIC. We use the desktop
computer instead of commodity routers, because none is equipped with the Intel 5300 NIC. The
operating system is an Ubuntu desktop 14.04 LTS OS for both the access point and the mobile
device. The PHY is the IEEE 802.11n OFDM system with QPSK modulation and 1/2 coding rate.
Moreover, the access point is set in the monitor model, and the distance between its two adjacent
antennas is approximately 2.68cm, which is half of the wavelength of 5GHz WiFi. In addition, the
mobile device is set in the injection model and uses one antenna to transmit data. Moreover, we
use omnidirectional antennas for both the receiver and transmitter to estimate breathing signs
beats. With the packet injection technique with LORCON version 1, we can obtain 5GHz CSI data
from the three antennas of the receiver.
Our experimental study is with up to five persons over a period of 6 months. The experimental scenarios include a computer laboratory, a through-wall scenario, and a corridor, as shown in
Figure 11. The first scenario is within a 4.5 × 8.8 m2 laboratory, where both single-person and
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:20 X. Wang et al.
Fig. 11. Experimental setup: computer laboratory, through-wall, and long corridor scenarios.
multiperson breathing rate estimation experiments are conducted. There are lots of tables and
desktop computers crowded in the laboratory, which block parts of the LOS paths and form a complexity radio propagation environment. The second setup is a through-wall environment, where
single-person breathing rate estimation is tested due to the relatively weaker signal reception.
The person is on the transmitter side, and the receiver is behind a wall in this experiment. The
third scenario is a long corridor of 20m, where the maximum distance between the receiver and
transmitter is 11m in the experiment. These scenarios are also considered for single-person breathing rate monitoring. We use NEULOG Respiration to record the ground truths for single-person
breathing rates. Single-person breathing rate estimation can be easily implemented by removing
the signal matching algorithm, because there are only two decomposed signals after CP decomposition in this case. For multiperson breathing rate estimation in the first scenario, all persons
participating in the experiment record their breathing rates by using a metronome smartphone
application with 1 beat per minute (bpm) accuracy at the same time. We consider that five persons
are stationary for LOS and NLOS environments for breathing monitoring. Moreover, there are no
other persons in the breathing measurement area.
For multiperson breathing rate estimation, we need to define a proper metric for evaluating
TensorBeat’s performance. For R estimated breathing rates [f1, f2,... fR], the ith breathing rate
estimation error, Ei , is defined as
Ei = |fi − ˆ
fi | for i = 1, 2,..., R, (34)
where ˆ
fi is the ground truth of the ith breathing rate. We also define a new metric termed success
rate, denoted as SR, which is defined as
SR = N{maxi {Ei} < 2bpm}
N{E}
× 100%, (35)
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:21
Fig. 12. Performance of single-person breathing rate estimation in the computer laboratory, through-wall,
and long corridor scenarios.
where N{maxi {Ei} < 2bpm} means the number of repeated experiments of the maximum breathing rate error less than 2 bpm and N{E} is the number of repeated experiments. We adopt the success rate metric because there are weak signals for multiperson experiments in indoor experiments
at different locations, and sometimes a breathing signal may not be successfully detected (Wang
et al. 2016a, 2017b).
4.2 Performance of Breathing Rate Estimation
In Figure 12, we present the cumulative distribution functions (CDFs) of the estimation errors for
single-person breathing rate detection for three different experiment scenarios. We can see that
for TensorBeat, high estimation accuracy of breathing rates can be achieved in all three scenarios.
The maximum estimation error is less than 0.9 bpm. Moreover, it is noticed that 50% of the tests
for the computer laboratory experiment have errors less than about 0.19 bpm, whereas the tests
for the corridor and through-wall scenarios have errors less than approximately 0.25 bpm and
0.35 bpm, respectively. Thus, the performance in the laboratory setting is better than that in the
corridor and through-wall scenarios. This is because the laboratory has a smaller space and the
breathing signal is stronger than that of other two cases with larger attenuation due to the long
distance and the wall.
Figure 13 presents the performance of breathing rate estimation for different numbers of persons. It is noticed that higher accuracy is achieved for the single-person test, where approximately
96% of the test data have an estimation error less than 0.5 bpm. The five-person test has the worse
performance, where approximately 62% of the test data has an estimation error less than 0.5 bpm.
Moreover, we find that the performance of the two- and three-person tests are similar, both of
which have an error smaller than 0.5 bpm for 93% of the test data. Generally, when the number of
persons is increased, the performance of breathing rate estimation becomes worse. In fact, when
the number of breathing signals is increased, the distortion of the mixed received signal will become larger, thus leading to high estimation errors.
Figure 14 plots the success rates for different numbers of persons. We find that although the
success rate for one person is the highest, there are still a few of the test data that cannot obtain
high-accuracy breathing rate estimation. These test data should come from different locations in
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:22 X. Wang et al.
Fig. 13. Performance of breathing rate estimation for different numbers of persons (computer laboratory).
Fig. 14. Success rates for different numbers of persons (computer laboratory).
the indoor environments, where parts of the received signals are severely distorted. In fact, we
find that low phase difference usually occurs when the SNR is low. However, we can see that
breathing rate estimation for two persons also has a high success rate, because the probability for
two persons to have exactly the same breathing rate is very low. When the number of persons
is increased, the chance of getting two close breathing rates becomes higher. Even in this case,
TensorBeat can still effectively separate them with a high success probability. With the increase
in the number of persons, the success rate for the TensorBeat system decreases. The reason is
that each breathing rate is more likely to cover each other and the strength of the received signal
becomes lower. From Figure 14, we can see that the success rate is about 82.4% when the number
of persons is five.
Figure 15 shows the success rate for different sampling rates. In this experiment, there are four
persons and the window size is set to 30s. From Figure 15, we can see that with the increase in
the number of sampling rates, the success rate is also increased. It is noticed that the success rates
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:23
Fig. 15. Success rates for different sampling rates (computer laboratory).
Fig. 16. Success rates for different window sizes (computer laboratory).
for 5Hz and 30Hz are approximately 70% and 90%, respectively. As the sampling rate is increased,
the length of the data for CP decomposition is increased for the 30s window size case, which
helps to improve estimation accuracy. Furthermore, we find that the performance becomes stable
when the sampling rate exceeds 20Hz, indicating that a sampling rate of 20Hz is sufficient for CP
decomposition. Thus, we set the sampling rate to 20Hz for the TensorBeat experiments.
Figure 16 plots the success rates for different window sizes. This experiment is for the computer
laboratory scenario with four persons and a sampling rate set to 20Hz. From this figure, we can see
that the success rate is greatly increased by increasing the window size of the Hankel matrix from
15 to 30 s. This is because Hankelization will take half of the data to smooth the phase difference
signal, which reduces the resolution in the time domain. Thus, we need to increase the window
size to improve estimation accuracy. Furthermore, the change of success rate is small for window
sizes from 30 to 45 s. Thus, we select a window size of 30 s for the TensorBeat experiments.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
8:24 X. Wang et al.
Fig. 17. Success rates for when multiple persons form a line in the LOS path between the transmitter and
receiver, and when multiple persons are scattered around (computer laboratory).
Finally we examine the impact of LOS and NLOS scenarios. The success rates are plotted in
Figure 17. In this experiment, we consider the challenge condition of the NLOS scenario, where all
persons stay on the LOS path between the transmitter and receiver—that is, they form a straight
line and block each other. From Figure 15, we find that the performance for LOS and NLOS are
nearly the same for the cases of two or three persons, where high estimation accuracy can be
achieved. This is due to the WiFi multipath effect, which is regarded harmful in general but becomes helpful in breathing rate estimation when tensor decomposition is used. The breathing signal of every person can still be captured at the receiver from the phase difference data. However,
when the number of persons is further increased, the success rate decreases quickly. In fact, the
strength of the breathing signals for some persons becomes too weak to be detected when there
are too many people blocking each other.
5 RELATED WORK
This work is closely related to sensor- and RF signal–based vital signs monitoring, as well as CSIbased indoor localization and human activity recognition, which are discussed in the following.
Sensor-based vital signs monitoring with wearable and smart devices employs special hardware
attached to a person’s body to monitor breathing and heart rate data. The capnometer can measure
carbon dioxide (CO2) concentrations in respired gases, which are employed to monitor a patient’s
breathing rate in the hospital. However, it is uncomfortable for patients to wear them, which are
thus leveraged in clinical environments (Mogue and Rantala 1988). Photoplethysmography (PPG)
is an optical technique to monitor blood volume changes in tissues by measuring light absorption
changes, thus requiring sensors attached to a person’s finger, such as the pulse oximeter (Shariati
and Zahedi 2005). In addition, a smartphone can use the camera to detect light changes from
the video frames that can extract the PPG signal to monitor the heart rate (Scully et al. 2010).
Moreover, smartphones can also estimate the breathing rate by using the built-in accelerometer,
gyroscope (Aly and Youssef 2016), and microphone (Ren et al. 2015), which require persons to have
smartphones nearby and wear sensors for breathing monitoring. However, techniques based on
sensors cannot be applied for remote monitoring of vital signs.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 1, Article 8. Publication date: September 2017.
TensorBeat: Tensor Decomposition for Monitoring Multiperson Breathing Beats 8:25
RF-based systems for vital sign monitoring use wireless signals to track breathing-induced chest
changes in a person, which are mainly based on radar and WiFi techniques. For radar-based vital
signals monitoring, Vital-Radio employs FMCW radar to estimate breathing and heart rates, even
for two subjects in parallel (Adib et al. 2015). But the system requires a customized hardware with a
large bandwidth from 5.46 to 7.25 GHz. For WiFi-based vital signs monitoring, the UbiBreathe system employs WiFi RSS for breathing rate monitoring, which, however, requires the device placed
in the LOS path between the transmitter and the receiver for estimating the breathing rate (Abdelnasser et al. 2015). Moreover mmVital based on RSS can use 60 GHz millimeter wave (mmWave)
signal for breathing and heart rates monitoring with large bandwidth about 7GHz, which does not
work well over a longer distance and require high gain directional antennas for the transmitter
and the receiver (Yang et al. 2016; Gong et al. 2010). Recently, the authors have leveraged the amplitudes of CSI data to monitoring vital signs (Liu et al. 2015). This work is mainly to track vital
signs when a person is sleeping, which is limited for monitoring a maximum of two persons at the
same time.
In additional to vital signs monitoring, CSI-based sensing systems recently have also been used
for indoor localization and human activity recognition (Cushman et al. 2016). CSI-based fingerprinting systems have been proposed to obtain high localization accuracy. FIFS is the first work
to uses the weighted average of CSI amplitude values over multiple antennas for indoor localization (Xiao et al. 2012). To exploit the diversity among the multiple antennas and subcarriers,
DeepFi leverages 90 CSI amplitude data from the three antennas with a deep autoencoder network for indoor localization (Wang et al. 2015c, 2017a). In addition, PhaseFi leverages calibrated
CSI phase data for indoor localization based on deep learning (Wang et al. 2015b, 2016b). Different
from CSI-based fingerprinting techniques, the SpotFi system leverages a superresolution algorithm
to estimate the angle of arrival of multipath components for indoor localization based on CSI data
from three antennas (Kotaru et al. 2015). The E-eyes system leverages CSI amplitude values for recognizing household activities such as washing dishes and taking a shower (Wang et al. 2014c). The
WiHear system employs specialized directional antennas to measure CSI changes from lip movement for determining spoken words (Wang et al. 2014a). The CARM system considers a CSI-based
speed model and a CSI-based activity model to build the correlation between CSI data dynamics
and a given human activity (Wang et al. 2015a). Although CSI-based sensing is effective for indoor
localization and activity recognition, there are few works for using CSI phase difference data to
detect multiperson behavior at the same time.
The TensorBeat system is motivated by these interesting prior works. To the best of our knowledge, we are the first to leverage CSI phase difference data for multiperson breathing rate estimation. We are also the first to employ tensor decomposition for RF sensing–based vital sign
monitoring, which can also be employed for indoor localization and human activity recognition.
6 CONCLUSIONS
In this article, we proposed TensorBeat—tensor decomposition for estimating multiperson breathing beats with commodity WiFi. The proposed TensorBeat system employed CSI phase difference
data to obtain the periodic signals from the movements of multiple breathing chests by leveraging
tensor decomposition. We implemented several signal processing methods, including data preprocessing, CP decomposition, the signal matching algorithm, and peak detection, in TensorBeat. We
validated the performance of TensorBeat with extensive experiments under three indoor environments. Our analysis and experimental study demonstrated that the proposed TensorBeat system
can achieve satisfactory performance for multiperson breathing estimation.