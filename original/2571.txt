With the rapid development of location-based social networks (LBSNs), spatial item recommendation has
become an important mobile application, especially when users travel away from home. However, this type
of recommendation is very challenging compared to traditional recommender systems. A user may visit
only a limited number of spatial items, leading to a very sparse user-item matrix. This matrix becomes
even sparser when the user travels to a distant place, as most of the items visited by a user are usually
located within a short distance from the user’s home. Moreover, user interests and behavior patterns may
vary dramatically across different time and geographical regions. In light of this, we propose ST-SAGE, a
spatial-temporal sparse additive generative model for spatial item recommendation in this article. ST-SAGE
considers both personal interests of the users and the preferences of the crowd in the target region at the
given time by exploiting both the co-occurrence patterns and content of spatial items. To further alleviate
the data-sparsity issue, ST-SAGE exploits the geographical correlation by smoothing the crowd’s preferences
over a well-designed spatial index structure called the spatial pyramid. To speed up the training process of
ST-SAGE, we implement a parallel version of the model inference algorithm on the GraphLab framework. We
conduct extensive experiments; the experimental results clearly demonstrate that ST-SAGE outperforms the
state-of-the-art recommender systems in terms of recommendation effectiveness, model training efficiency,
and online recommendation efficiency.
Categories and Subject Descriptors: H.3.3 [Information Search and Retrieval]: Information Filtering; H.2.8 [Database Applications]: Data Mining; J.4 [Computer Applications]: Social and Behavior
Sciences
General Terms: Algorithms, Design, Experimentation, Performance
Additional Key Words and Phrases: Point of interest (POI), real-time recommendation, location-based service,
online learning, efficient retrieval algorithm
1. INTRODUCTION
The rapid development of Web 2.0, as well as location acquisition and wireless communication technologies, have fostered a number of location-based social networks
(LBSNs), such as Foursquare, Gowalla, Facebook Places, and Loopt, where users can
check in at different venues and share life experiences in the physical world via mobile
devices [Bao et al. 2012; Yin and Cui 2016; Cui et al. 2014]. Developing recommendation systems for LBSNs to provide users with spatial items (e.g., a venue or an event
associated with a geographic location) has recently attracted increasing research attention [Bao et al. 2015; Lian et al. 2014; Xie et al. 2016]. This application becomes more
important and useful when a user travels to an unfamiliar area, where the user has
little knowledge about the neighborhood. In this scenario, the recommender system is
proposed as recommendation for out-of-town users in LBSNs in Ference et al. [2013].
In this article, we focus on the problem of spatial item recommendation, aiming to offer
accurate recommendations for both hometown and out-of-town users by mining their
historical behavior data in LBSNs. As suggested in Yuan et al. [2013], Noulas et al.
[2011], Cho et al. [2011] and Lee et al. [2009], human geographical movement exhibits
significant temporal patterns on LBSNs and is highly relevant to the location property.
Therefore, the recommendation should be both time-aware and location-oriented.
Spatial item recommendation is a highly challenging problem because of the following three main reasons. (1) Travel Locality: While LBSNs expand rapidly, the number
of spatial items visited by an individual user is rather small compared to the total
number of spatial items in an LBSN, which results in a very sparse user-item matrix.
The travel locality exacerbates this problem even further. The observation of travel
locality [Levandoski et al. 2012] shows that most users’ check-ins are from their living
regions (e.g., the check-in records generated by users in their nonhome cities only take
up 0.47% of the ones generated in their home cities [Levandoski et al. 2012]). This observation aggravates the data sparsity problem with spatial item recommendation for
out-of-town users (e.g., recommending spatial items in Los Angeles to people from New
York City). (2) Spatial Dynamics of User Behavior: When a user travels to a different
region, the user’s behavior patterns may change. Through Foursquare API1, we extract
the top three categories of check-in spatial items (points of interest; POIs) in three
different cities (Boston, Las Vegas, and the Gold Coast) for a group of users. The group
size is 3000 and each user in this group has check-in records in all three cities. The
percentage of check-ins of each spatial item category is shown in Table I. We observe
that when users are in Las Vegas, they are more interested in visiting casinos (80.32%),
nightlife (10.61%), and outlets (5.82%), while the same users prefer the beach (71.36%),
surf spots (14.82%) and theme parks (9.60%) when in Gold Coast. 3. Temporal influence
plays an important role in analyzing users’ daily activities in LBSNs [Yuan et al. 2013;
Noulas et al. 2011; Cho et al. 2011; Lee et al. 2009]. For example, a user is more likely
to go to a restaurant rather than a bar at noon. Therefore, the recommendation should
be time-aware. To model the temporal influence, an intuitive solution is splitting time
into time slices at the predefined granularity (e.g., hourly or seasonal), then modeling
the temporal preference to spatial items of a user in each time slice from the items
1https://developer.foursquare.com/.
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:3
Table I. Illustration of Spatial Dynamics of User Interests
City Top Item Types Percentage of Check-ins
Gold Coast (AU)
Beach 71.36%
Surf Spot 14.82%
Theme Park 9.60%
Las Vegas (US)
Casino 80.32%
Nightlife 10.61%
Outlet 5.82%
Boston (US)
College 78.32%
Museum 9.45%
Park 7.65%
visited by the user in the time slice. However, splitting time into slices will make the
data even sparser.
Recently, several methods [Bao et al. 2012; Ference et al. 2013] have been developed
to make recommendations for both hometown and out-of-town users. These approaches
either do not address all three aforementioned challenges for spatial item recommendation or address the challenges with ineffective strategies. For example, Ference et al.
[2013] proposed a CF-based method that considers both users who have visited many
common spatial items as the target user and friends mined from the target user’s social
connections in LBSNs. Including the visiting records of social friends is supposed to
handle the travel locality. For example, when similar users cannot provide effective
clues for out-of-town recommendations, the visiting records of social friends will be
used. Nonetheless, according to the survey in Cho et al. [2011], when a user travels
more than 100km, the check-in probability at the same place visited by any of the
social ties is merely 10%. Bao et al. [2012] present a recommender system considering
both user personal interests and the opinions of local experts. They model individual
users’ interests based on the category information of spatial items. The opinions of local
experts are used to solve the travel locality problem. Unfortunately, since the chosen
local experts are users who share the same or similar interests with the target user,
this approach is unable to address spatial dynamics of user behaviors.
In this article, we propose ST-SAGE, a spatial-temporal sparse additive generative
model for spatial item recommendation. Traditional mixture models, for example, Yin
et al. [2014b], consider multiple facets (e.g., time and location) that influence a user’s
choice of spatial items by introducing additional latent variables that act as “switches”
to control which facet is currently active. Unfortunately, it is not only computationally
expensive to learn personalized “switching” variables for individual users, but also
difficult to learn these variables accurately given sparse datasets. Inspired by the
Sparse Additive Generative model (SAGE) [Eisenstein et al. 2011], we have designed
our model in a similar fashion by adding the effect of all the facets in the log space
to avoid the inference of the latent “switching” variables, with the aim of achieving
improved robustness.
To model user visiting behaviors, ST-SAGE takes into account both user interests
and spatial-temporal dynamics of user behaviors. ST-SAGE learns interests of a user
as a topic-based vector by mining the co-occurrence patterns of spatial items and
their content information (e.g., tags and categories). Exploiting the content information
of spatial items addresses the travel locality for out-of-town recommendations. The
content of spatial items serves as the medium for transferring user interests learned
from the hometown to unfamiliar regions.
To adapt to spatial-temporal dynamics of user behaviors, ST-SAGE recognizes two
roles of an individual user in a specific spatial region: local or tourist. Given a specific
location and a specific time, visiting records from local users are mined to learn temporal
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
48:4 W. Wang et al.
native preferences as a topic-based vector. Similarly, visiting records from tourists are
used to learn temporal tourist preferences. Users with the same role at a location are
more likely to share similar preferences and behavior patterns at a specific time. Thus,
to recommend spatial items to a target user u at location l and time t, we consider not
only u’s personal interests, but also the temporal preferences of the crowd members
who have the same role as u. In this way, we leverage the crowd’s temporal preferences
to overcome the sparsity of individuals’ activity data at out-of-town regions at a specific
time. Specifically, given a user u, a specific time t, and the user’s current location l, we
first find a group of users sharing the same role with uwhen they visited l, then produce
the time-aware recommendation based on their temporal preferences and the user’s
personal interests.
When using the visiting history to learn the temporal native preferences and tourist
preferences of a specific region, however, we still face the data-sparsity issue, especially
when the target region is small. Given a specific region r and time t (e.g., at night),
when there are insufficient visiting records generated at the given spatial-temporal
context, its native preferences and tourist preferences cannot be inferred accurately.
To overcome the data sparsity, ST-SAGE integrates a spatial index called the spatial
pyramid, which is a tree structure proposed in Levandoski et al. [2012]. It is first
constructed by partitioning locations of spatial items into spatial grids of varying
sizes at different hierarchies. Then, ST-SAGE applies the additive framework [Ahmed
et al. 2013; Kanagal et al. 2012] to learn the temporal native preferences and tourist
preferences of each region. Briefly, when learning the temporal native preferences and
tourist preferences in a region, the two variables learned for all of the region’s ancestor
grids in the spatial pyramid will be added. Given a specific region r and time t, if there
are few or no activities, we can still infer its native preferences and tourist preferences
guided by its ancestor grids. Through the integration of the spatial pyramid, ST-SAGE
gains another advantage that allows users to switch between different scales of georegions (e.g., zoom in/out on a Google Map) without relearning the parameters. In this
way, this model can be seamlessly connected with Google Maps.
Note that we presented our preliminary study of spatial item recommendation and
proposed a recommender model Geo-SAGE in Wang et al. [2015]. In this article, we
extend Wang et al. [2015] with an in-depth investigation and performance analysis.
Specifically, this article makes the following new contributions: (1) we extend GeoSAGE to ST-SAGE by exploiting and integrating the temporal cyclic effect of user
visiting behaviors; (2) we implement a scalable and parallel model inference algorithm
based on the GraphLab framework; (3) we illustrate a real application scenario of
our ST-SAGE recommender model based on Google Maps; (4) we redo the experiment
and conduct a more comprehensive performance analysis in terms of recommendation
effectiveness, model-training efficiency, and online-recommendation efficiency using
two publicly available real-life datasets; and (5) we provide a more comprehensive
review of the related work.
This article is organized as follows: Section 2 provides preliminary concepts about
the SAGE model. Section 3 formulates our spatial item recommendation problem and
describes the ST-SAGE model. We deploy ST-SAGE to spatial item recommendation
in Section 4. Section 5 discusses the experimental evaluation of ST-SAGE. Existing
research related to our work is surveyed in Section 6. We present our conclusions in
Section 7.
2. PRELIMINARIES ABOUT SAGE
Our model is inspired by the Sparse Additive Generative Model (SAGE) [Eisenstein
et al. 2011], which is an effective generative model without explicit switching variables
[Hu and Ester 2013; Wang et al. 2016]. The basic idea of the model is that, if a variable is
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:5
Table II. Notations of The Input Data
Variable Interpretation
U, R, V, T set of users, locations, spatial items and time slices
W vocabulary set
Du profile of user u
vu,i spatial item of ith record in Du
lu,i location of spatial item vu,i
lu home location of the user u
Wu,i set of words describing spatial item vu,i
wu,i,n nth content word describing spatial item vu,i
su,i whether the user u is a local or tourist on location lu,i
tu,i time of ith record in Du
affected by several components, it can be generated by the mixture of these components
without any explicit indicator variables. The key difference from traditional mixture
models is that the mixture occurs in terms of the natural parameters of the exponential
family instead of distributions. Such a model is robust given limited training data, as
it does not have to infer a complex indicator variable to distinguish the set of causes.
To provide a clearer explanation of SAGE, we use a traditional probabilistic mixture
generative model, LCA-LDA [Yin et al. 2014b], as an illustrative example. LCA-LDA
is a location-content-aware model that aims to mimic the process of human decision
making on spatial items. The model considers the user’s personal interest θuser
u and the
influence of local preference θ crowd
l (note that it does not distinguish between native
preference and tourist preference) in a unified manner, and automatically leverages
the effect of the two factors. Specifically, given a querying user u at a target location l,
the likelihood that user u will prefer item v is computed by combining these two factors
through a linear combination as follows:
P(v|θuser
u , θ crowd
l ) = λuP(v|θuser
u ) + (1 − λu)P(v|θ crowd
l ), (1)
where λu is the “switching” variable that needs to be inferred for each user. Other than
the latent topics, we need to sample the switching variable for each record. Thus, the
complexity is doubled. Evidently, it cannot be inferred accurately when the training
data for each individual user is sparse. In contrast, SAGE combines the two generative
facets through simple addition in log space, as shown in Equation (2). Clearly, this
avoids the need for latent switching variables.
P(v|θuser
u , θ crowd
l ) = P(v|θuser
u + θ crowd
l ) = exp(θuser
u,v + θ crowd
l,v )

v exp(θuser
u,v + θ crowd
l,v ) (2)
3. SPATIAL-TEMPORAL SAGE MODEL
In this section, we first formulate the problem definition, then present our proposed
spatial-temporal SAGE model (ST-SAGE).
3.1. Problem Definitions
For ease of presentation, we define the key data structures as follows, with the involved
notations summarized in Table II.
Definition 1 (Spatial Item). A spatial item is an item associated with a geographical
location (e.g., a restaurant or a cinema).
In our model, a spatial item has three attributes: identifier, location, and content.
We use v to represent a spatial item identifier, lv to denote its corresponding location
identifier, and Wv to represent the set of words describing the item (e.g., tags and
categories). The location information available for each spatial item v in the collected
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.    
48:6 W. Wang et al.
raw datasets is in the form of the (latitude, longitude) pair. We adopt a spatial pyramid
structure [Levandoski et al. 2012] to partition and index the entire geographic area. The
granularities range from cities to streets, depending on the nature of the applications.
The details of the spatial pyramid are described in Section 3.4.
Definition 2 (User Home Location). Following the work of Li et al. [2012], given a user
u, we define the user’s home location as the place where the user lives, denoted as lu.
Due to the privacy problem, user home locations are not always available. For a user
whose home location is not given explicitly, we adopt the method similar to Scellato
et al. [2011] to infer the user’s home location as the cell in the spatial pyramid with the
most of the user’s check-ins.
Definition 3 (Time). t is an ordinal variable, which we use to index the tth time slice
corresponding to a specific time period.
The time information available for each record in the collected raw datasets is usually
in the form of timestamps (e.g., “2010-07-24, 13:45:06”). We divide the timestamps into
time slices using predefined granularity when preprocessing the datasets. The model
in this article focuses on the daily patterns of users’ behaviors as the experimental
results show that the performance of exploring this pattern is best. Thus, we divide the
timestamps into 24 slices based on the hours. However, the recommendation ability of
ST-SAGE is not limited to one specific temporal pattern.
Definition 4 (User Activity). A user activity consists of a six tuple (u, v, lv, Wv, t, s)
A user activity indicates that the user u visits the spatial item v, located at lv and
described as Wv, at time t, in the role of s. If s = 0, the user is recognized as a local and
the activity occurs in u’s hometown. If s = 1, the user u plays the role of tourist when
visiting v.
Definition 5 (User Profile). For each user u, we create a user profile Du, which is a
set of user activities associated with u.
Given a dataset D as the union of a collection of user profiles, we aim to provide
spatial item recommendations for both hometown and out-of-town users. We formulate
our problem as follows, following our previous work [Wang et al. 2015; Yin et al. 2015].
PROBLEM 1 (SPATIAL ITEM RECOMMENDATION). Given a user activity dataset D, a target
user u with his or her current location l and the querying time t (i.e., the query is
q = (u, l, t)), our goal is to recommend top-k spatial items that u would be interested in.
Given a distance threshold d, the problem becomes an out-of-town recommendation
if the distance between the target user’s current location and home location (e.g., |l − lu|)
is greater than d. Otherwise, the problem is a hometown recommendation.
Following related studies [Ference et al. 2013; Mok et al. 2010; Yin et al. 2015, 2016],
we set d = 100km in our work, since a distance around 100km is the typical radius of
human “reach” − it takes 1 to 2 hours to drive such a distance.
3.2. Model Description
To model user activities, we propose an ST-SAGE. Figure 1 shows the graphical representation of ST-SAGE. We first introduce the notations of our model, which are listed
in Table III. Our input data, that is, users’ activity profiles, are modeled as observed
random variables, shown as shaded circles in Figure 1. Similar to existing models [Hu
and Ester 2013; Yin et al. 2014], the topic index of each user activity is considered as
a latent random variable, which is denoted as z.
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:7
Fig. 1. The graphical representation of our model.
Table III. Notations of Model Parameters
Variable Interpretation
K number of topics
zu,i topic assigned to spatial item vu,i
θ0 topic vector of the background
θuser
u topic vector, representing the intrinsic interests of user u
θnative l,t topic vector of l on time t, representing the native preferences at l on time t
θtourist
l,t topic vector of l on time t, representing the tourist preferences at l on time t
φ0 word vector of the background
ψ0 spatial item vector of the background
φtopic
z content word vector of topic z
ψtopic
z spatial item vector of topic z
User Interest Modeling. Intuitively, a user chooses a spatial item at a given location and a specific time by matching one’s personal interests with the content of that
item. Inspired by the early work on user-interest modeling [Hu and Ester 2013; Liu
and Xiong 2013; Yin et al. 2014], ST-SAGE also adopts latent topics to characterize
users’ interests. Specifically, we infer an individual user’s interest vector over a set of
topics according to the user’s visited spatial items and associated contents, denoted as
θuser
u . Thus, our model alleviates the travel locality for out-of-town recommendations, as
the content of the spatial items plays the role of medium through which user interests
inferred from their hometown can be transferred to out-of-town regions. In addition,
we also introduce a background vector over topics θ 0 to capture common topics among
all users. The purpose of using a background model θ 0 is to make the user interests
θuser
u learned from the dataset more discriminative.
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
48:8 W. Wang et al.
Spatial Dynamic Modeling. To adapt to spatial dynamics of user behavior, we
exploit the preferences of the crowds who share the same role as the target user u.
For example, the preferences of the tourists will be leveraged only if the target user is
currently out-of-town. Technically, we introduce two parameters: native preferences and
tourist preferences. Given a location l, the native preferences represent the preferences
of people living at location l, denoted as θnative l . In contrast, the tourist preferences
represent the preferences of tourists travelling in location l, denoted as θtourist
l . Note that
distinguishing native preferences from tourist preferences is one of the fundamental
differences between our model and the LCA-LDA model [Yin et al. 2014b], which also
exploits local activity records at the target location.
Temporal Dynamic Modeling. As users tend to visit different spatial items at
different times, our ST-SAGE model is expected to capture this temporal dynamic. To
model the temporal influence, an intuitive approach is to split time into time slices at
the predefined granularity (e.g., hourly or seasonal), then model the temporal preferences of a user based on the user’s visited spatial items during a time slice. However,
splitting a user’s activity data into multiple slices will make the data much sparser
in a specific time slice, which inevitably makes the inference of personal temporal
preferences overfitting. In light of this, we propose exploitation and integration of the
collective temporal preferences of the crowd with the same role instead of personal
temporal preferences, as shown in Figure 1. The collective preferences of the public
with the same roles, θnative l and θtourist
l , are extended to be temporal vectors θnative l,t and
θtourist
l,t .
Topics Modeling. To take full advantage of the strengths of both content-based and
collaborative filtering-based recommendation methods, a topic z in our ST-SAGE model
is not only associated with a word vector φtopic
z , but also with a vector over spatial items
ψtopic
z . This design enables φtopic
z and ψtopic
z to be mutually influenced and enhanced
during the topic discovery process by associating each other. Thus, the discovered topic
z, on the one hand, can cluster the content-similar items together. On the other hand, it
can also capture the item co-occurrence patterns to link relevant items together, similar
to item-based collaborative filtering methods. We also introduce two background models
for words and items: φ0 and ψ0, respectively. The purpose of using background models
is to make the topics learned from the dataset more discriminative, since φ0 and ψ0
assign high probabilities to nondiscriminative and noninformative words and items.
The generative process of the ST-SAGE model for an individual user activity in the
user profile Du is as follows.
—Draw a topic index zu,i ∼ P(zu,i|su,i,lu,i,tu,i, θ 0, θuser , θnative, θtourist).
—For each content word wu,i,n in Wu,i, draw wu,i,n ∼ P(wu,i,n|φ0, zu,i, φtopic).
—Draw a spatial item vu,i ∼ P(vu,i|ψ0, zu,i, ψtopic).
For each user activity, ST-SAGE first chooses the topic this activity is about. To
generate the topic index z, we utilize a multinomial model, as follows:
P(zu,i|su,i,lu,i,tu,i, θ 0, θuser , θnative
, θtourist)
= P(zu,i|θuser
u + (1 − su,i) × θnative lu,i,tu,i + su,i × θtourist
lu,i,tu,i )
, (3)
where P(z|θuser
u + (1 − s) × θnative l,t + s × θtourist
l,t ), denoted as αu,s,l,t,z, is computed as in
Equation (6). Once the topic z is generated, the spatial item v and the associated content
words are generated as expressed in Equations (4) and (5), respectively:
P(vu,i|ψ0, zu,i, ψtopic) = P(vu,i|ψ0 + ψtopic
zu,i ) (4)
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:9
P(wu,i,n|φ0, zu,i, φtopic) = P(wu,i,n|φ0 + φtopic
zu,i ), (5)
where P(v|ψ0+ψtopic
z ) = γz,v and P(w|φ0+φtopic
z ) = βz,w are computed as in Equation (6).
Note that, in order to model topics based on the background word/item vectors, for
each topic, ST-SAGE models the difference from the background word/item vector in
log-frequencies, instead of the frequencies themselves.
3.3. Model Inference
Our goal is to learn parameters that maximize the marginal log-likelihood of the observed random variables w, v, t, and s, and the marginalization is performed with
respect to the latent random variable z. However, it is difficult to be maximized directly. Therefore, we apply a mixture of EM and a Monte Carlo sampler, the Gibbs EM
algorithm [Wallach 2006], to maximize the complete data likelihood in Equation (7),
where  is the set of all the parameters. In the E-step, we sample latent topic assignments by fixing all other parameters using Gibbs sampling. In the M-step, we optimize
model parameters  by fixing all topic assignments. The two steps are iterated until
convergence.
αu,s,l,t,z = exp(θ 0
z + θuser
u,z + (1 − s) × θnative l,t,z + s × θtourist
l,t,z )

zz exp(θ 0
zz + θuser
u,zz + (1 − s) × θnative l,t,zz + s × θtourist
l,t,zz )
,
βz,w = exp(φ0
w + φtopic
z,w )

ww exp(φ0
ww + φtopic
z,ww)
, γz,v = exp(ψ0
z + ψtopic
z,v )

vv exp(ψ0
z + ψtopic
z,vv )
(6)
P(z, w, v|, s, u, l, t) = P(z|s, u, l, t, θ 0, θuser , θnative
, θtourist)P(w|z, φ0, φtopic)P(v|z, ψ0, ψtopic)
=
|U|
u=1

|Du|
i=1
αu,su,i,lu,i,tu,i,zu,i

|U|
u=1

|Du|
i=1
|Wvu,i
|
n=1
βzu,i,wu,i,n

|U|
u=1

|Du|
i=1
γzu,i,vu,i
(7)
More specifically, we iteratively draw latent topic z for all activity records in the
E-step. When sampling zu,i as expressed in Equation (8), we assume that all other
variables are fixed. z¬u,i represents the topic assignments for all user activities except
the ith activity for user u.
P(zu,i|z¬u,i, w, v, s, u, l, t, ) ∝ αu,su,i,lu,i,tu,i,zu,i ×
|Wvu,i
|
n=1
βzu,i,wu,i,n × γzu,i,vu,i (8)
In the M-step, we optimize the parameters  to maximize the log likelihood of the
objective function with all topic assignments fixed. To update the parameters, we use
the gradient descent learning algorithm Projected Scaled Subgradient (PSSG) [Schmidt
et al. 2007], which is designed to solve optimization problems with L1 regularization
on parameters. More important, PSSG is scalable because it uses the quasi-Newton
strategy with line search that is robust to common functions. Let Lbe the log-likelihood
of the model. According to the limited-memory BFGS [Liu and Nocedal 1989] updates
for the quasi-Newton method, the gradients of model parameters θ 0, θuser , θnative, and
θtourist are provided as follows:
∂L
∂θ 0
z
= d(z) −
|U|
u=1

|Du|
i=1
αu,su,i,lu,i,tu,i,z, ∂L
∂θuser
u,z
= d(u, z) −
|Du|
i=1
αu,su,i,lu,i,tu,i,z
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.                
48:10 W. Wang et al.
∂L
∂θnative l,t,z
= (1 − s) ×
⎛
⎝d(l,t, z) −
|D

(l,t)|
j=1
αuj,sj,l,t,z
⎞
⎠ , (9)
∂L
∂θtourist
l,t,z
= s ×
⎛
⎝d(l,t, z) −
|D

(l,t)|
j=1
αuj,sj,l,t,z
⎞
⎠
where d(z) is the number of activities assigned to topic z, d(u, z) represents how many
activities are assigned to topic z in Du, d(l,t, z) denotes the number of activities assigned
to topic z at location l and time t, D(l,t) is the set of activities occurring at location l
and time t, and uj denotes the user who generates the jth activity record. Similarly,
the gradients of model parameters φ0, φtopic, ψ0, and ψtopic are computed as follows:
∂L
∂φ0
w
= d(w) −
K
z=1
d(z) × βz,w, ∂L
∂φtopic
z,w
= d(z, w) − d(z) × βz,w
∂L
∂ψ0
v
= d(v) −
K
z=1
d(z) × γz,v, ∂L
∂ψtopic
z,v
= d(z, v) − d(z) × γz,v, (10)
where d(w) is the total number of times that word w appears in activities, and d(z, w)
is the number of times that the word w is assigned to the topic z. d(v) is the number
of activities associated with item v, and d(z, v) represents the number of activities in
which topic z is assigned to item v.
Time Complexity. There are two steps in the Gibbs EM algorithm: Gibbs sampling
and gradient descent learning. We assume that the algorithm needs I iterations to
reach convergence. For each iteration, its time complexity is analyzed as follows. In the
E-step, it needs to go through all user check-in records; for each check-in, it requires
O(K) operations to compute the posterior probability distribution for sampling topic z.
Thus, the time complexity in this step is O(K× D), where D =
u |Du| is the total number of check-ins in the dataset. In the M-step, we use the gradient descent learning algorithm to update the model parameters  = {θ 0, θuser , θnative, θtourist, φ0, φtopic, ϕ0, ϕtopic}
based on the topic assignments sampled in the E-step. We assume that the gradient descent algorithm needs J iterations to converge, and in each iteration, the time
complexity to compute the gradients for the model parameters  is O(K × D).
3.4. Spatial Smoothing
To combat data sparsity when modeling the temporal native preferences and temporal
tourist preferences, we adopt a quad tree structure called spatial pyramid, proposed in
Levandoski et al. [2012], to partition and index the entire geographic area. The spatial
pyramid is constructed by partitioning item locations into spatial regions of varying
sizes at different hierarchies. More specifically, the spatial pyramid decomposes the
space into H levels. Level 0 has only one grid cell. For a given level h, the space is
partitioned into 4h grid cells of equal area. Thus, the space can be divided recursively
into numerous cells at different levels with different granularity. The graphical representation of the spatial pyramid is shown in Figure 2.
One of the fundamental assumptions in spatial data mining is that everything is
related to everything else but nearby things are more related than distant things,
which is proposed in Gale and Olsson [1979] as the first law of geography [Shekhar
et al. 2004]. This law is known as the “spatial autocorrelation.” The spatial pyramid
structure can encode this law in an effective manner. That is, for each location l, it
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.   
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:11
Fig. 2. The spatial pyramid.
can be represented by a path from the root node to its corresponding leaf node. We
use a vector to describe the path, (l1, l2,...,lh,...,lH), where lh is a grid at level h
that contains the location l. Based on the vector representation of a location, we can
easily compute the proximity between two locations. For example, if two locations in the
spatial pyramid share more ancestors, then these two locations are more proximate.
When user activity data at a location l and time t is very sparse, both the temporal native preference θnative l,t and the temporal tourist preference θtourist
l,t may not be estimated
accurately. To address this issue, we exploit geographical correlation to enhance the
prior knowledge about the model parameters θnative l,t and θtourist
l,t . Intuitively, if two locations l and l
 are proximate in the geographical space, their temporal local preferences
θnative l,t and θnative l
,t should be similar to each other. The intuition can be applied to the
temporal tourist preferences θtourist
l,t and θtourist
l
,t similarly. To integrate the information
of geographical correlation into our ST-SAGE model, we apply the additive framework
[Ahmed et al. 2013; Kanagal et al. 2012] to compute temporal native preference θnative l,t
and tourist preference θtourist
l,t at location l and time t based on the path vector representation. Specifically, given a location l, its temporal native preference and temporal
tourist preference at time t are represented as follows:
θnative l,t = 
H
h=1
θnative lh,t , θtourist
l,t = 
H
h=1
θtourist
lh,t . (11)
According to these equations, both the temporal native preferences and the temporal
tourist preferences of a location depend on all of its ancestors up to the root. This
representation method enables neighboring locations to share similar preferences as
desired (i.e., the preferences are smoothed over the spatial pyramid). Meanwhile, if
there are few or no activities at a location, we can still infer its preference guided
by its ancestors. In addition, once temporal native preferences and temporal tourist
preferences for each level are learned, this modeling makes the switch between various
granularities fast and convenient by changing the lowest level in the model without
retraining the parameters.
Figure 3 demonstrates an application scenario of ST-SAGE in which the input consists of four elements: the current location, current time, number of recommendations,
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.   
48:12 W. Wang et al.
Fig. 3. The application scenario.
and size of the target region (e.g., zoom in/out on Google Maps [Bao et al. 2012]). The
location and time are captured automatically by the functions of the mobile phones.
By indexing the geographical space using a spatial tree structure, our model supports
users to change the scale of the target region efficiently by switching between different
levels in the tree structure. Although the previous work in Yin et al. [2014] also supports
the change of space granularity, it has to retrain all parameters for the new granularity,
while our model does not. Take the application in Figure 3 as an example. The current
scale corresponds to “Level 3” of the spatial pyramid. If the querying user zooms out
on the map, the map becomes smaller and the granularity of the regions becomes
coarser. ST-SAGE will automatically change the scale from “Level 3” to “Level 2.” As
the model parameters for all levels have been learned, it is not necessary to retrain the
parameters for this “zooming out.” Similarly, if the user zooms in on the map, ST-SAGE
simply switches the scale from the upper level into the lower level without retraining.
3.5. Parallel Implementation
We implement a parallel ST-SAGE inference algorithm on the distributed GraphLab
framework [Low et al. 2012] and parallel gradient descent learning framework PSSG
[Schmidt et al. 2007]. PSSG is scalable because it not only uses the quasi-Newton
strategy with line search that is robust to common functions, but also adopts the
multicore parallel processing strategy. There are two steps in the Gibbs EM algorithm:
Gibbs sampling and gradient descent learning. We decompose the inference procedure
of ST-SAGE into a two-step parallel processing. In the E-step, we implement the Gibbs
sampling algorithm in the GraphLab framework [Low et al. 2012]. In the M-step, PSSG
[Schmidt et al. 2007] is adopted as the parallel gradient descent learning framework
in ST-SAGE.
The GraphLab framework is proposed to support asynchronous, dynamic, graphparallel computation while ensuring data consistency, which is required by Gibbs
sampling to ensure statistical correctness and achieving a high degree of parallel
performance in the shared-memory setting. The GraphLab framework has demonstrated superior performance over popular parallel systems, for example, MapReduce
and Spark, for many machine-learning algorithms [Hu et al. 2015].
This framework implements the gather−apply−scatter(GAS) model, which abstracts
the program into three phases. In the gather phase, each vertex aggregates data from
the scope of the vertex. The scope of a vertex ve includes the data stored in ve as well as
the data stored in all adjacent vertices and adjacent edges. The gather result is used to
update the data stored in this vertex in the apply phase. Last, each vertex triggers its
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:13
Fig. 4. Data graph.
neighboring vertices or modifies adjacent edge data. GraphLab framework stores the
algorithm state as an undirected graph, called the data graph. In this graph, users can
associate arbitrary data with each vertex and edge. In ST-SAGE, we store the state as
a graph in Figure 4. Specifically, we construct an undirected graph that connects each
user with each spatial item. An edge between a user u and a spatial item v contains
the location of the item lv, the role of u at l (a tourist or a local) denoted as s, the time
t, content words of item v and the topic indicator z. For each user u, the number of
the user’s check-ins assigned to each topic z, denoted as d(u, z), is stored in the user’s
associated vertex. Similarly, for each spatial item v, the number of its associated checkins (i.e., d(v)) and the number of its associated check-ins assigned to each topic z (i.e.,
d(z, v)) are stored in its corresponding vertex.
We accelerate the Gibbs EM algorithm by simultaneously sampling new topics according to Equation (8). The variables in Equation (8) are either maintained globally
or in vertices. To improve efficiency further, the global variables are periodically aggregated from the vertices, while the variables in vertices are updated during the gather
and apply phases. New topics are sampled in the scatter phase. As the variables in
the Gibbs EM algorithm are updated with the BFGS algorithm, we run the BFGS
algorithm during the apply phase when gather result is applied to update the related
variables. Algorithm 1 shows the GAS procedure of the ST-SAGE Gibbs Sampler.
4. SPATIAL ITEM RECOMMENDATION USING ST-SAGE
Once we have estimated the model parameter set , given a target user uq with the
current time tq and location lq, we first compute the indicator sq (i.e., the role of target
user uq) according to the distance between the user’s home location luq and lq. Thus, a
query q = (uq,tq,lq, sq) is formed. Then, we compute the probability of user uq choosing
each unvisited spatial item v, as follows:
P(v, Wv|uq,lq, sq,tq, ) = 
K
z=1
P(v, Wv, z|uq,lq, sq,tq, )
= 
K
z=1
P(z|uq, sq,tq,lq, θ 0, θuser , θnative
, θtourist) × P(Wv|z, φ0, φtopic) × P(v|z, ψ0, ψtopic)
= 
K
z=1
αuq,sq,tq,lq,z ×
	|

Wv |
n=1
βz,wv,n

 1
|Wv |
× γz,v
,
(12)
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.    
48:14 W. Wang et al.
where Wv denotes the content words describing item v. We adopt the geometric mean
for the probability of topic z generating the word set Wv, considering that the number
of words associated with different spatial items may be different.
To accelerate the online recommendation process, we propose a ranking framework
in Equation (13) that separates the offline modelling from the online computation to
the maximum extent:
S(q, v) = 
K
z=1
F(z, v)W(q, z)
F(z, v) =
⎛
⎝
|

Wv |
n=1
βz,wv,n
⎞
⎠
1
|Wv |
× γz,v, W(q, z) = αuq,lq,sq,tq,z
, (13)
where F(z, v) represents the offline score that denotes the score of spatial items v with
respect to topic z. This part is computed offline since it is independent from the query
q = (uq,tq,lq, sq). On the other hand, W(q, z) is inferred online, denoting the preference
of query q on topic z. Note that the principal time-consuming components of W(q, z)
are also computed offline (e.g., θ 0, θuser , θnative, and θtourist). This design enables the
maximum separation of the online computation from the offline calculation, which, in
turn, reduces the query time.
The straightforward method of generating the top-k recommendations needs to compute the ranking scores for all items according to Equation (13) and select top-k ones
with highest ranking scores, which is, however, computationally inefficient, especially
when the number of items or the number of item attributes becomes large. To improve
the online recommendation efficiency based on the observation of query preference
sparsity that a query q prefers only a small number of attributes (say, 5–10 latent dimensions) and the query weights on most attributes are extremely small, we adopt the
TA-based query processing technique for top-k recommendations developed in Yin et al.
[2014b]. Since W(q, z) is nonnegative, the proposed ranking function in Equation (13)
is monotonically increasing given a query q, which meets the requirement of the TAbased query processing technique. This technology has the nice property of finding
top-k results correctly by examining the minimum number of items without scanning
all of them, which enables the ST-SAGE model scalable to large-scale datasets.
5. EXPERIMENTS
In this section, we first describe the settings of experiments, including the datasets,
comparative approaches and the evaluation method. We then demonstrate the experimental results.
5.1. Experimental Settings
5.1.1. Datasets. We perform experiments on two real large-scale LBSN datasets (i.e.,
Foursquare and Twitter), and their detailed information is described as follows.
Foursquare. This dataset contains the check-in history on 111,813 spatial items of
4,163 users who live in California from 12/2009 to 07/2013. For each user, it contains
the user’s social ties, check-in POI IDs, location of each check-in POI in terms of
latitude and longitude, check-in time, and the contents of each check-in POI. Each
check-in is stored as user-ID, POI-ID, POI-location, POI-content, check-in time. Each
record in social networks is stored as user-ID, friend-ID, and the total number of social
relationships is 32,512.
Twitter. This dataset is based on the publicly available Twitter dataset [Cheng
et al. 2011]. Twitter supports the third-party location sharing services Foursquare and
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017. 
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:15
Gowalla, in which users of these services opt in to share their check-ins on Twitter.
The original dataset does not contain the category or tag information about venues,
however. Thus, we crawled the category and tag information associated with each
venue from Foursquare with the help of its publicly available API2. The enhanced
dataset contains 114,058 users, 62,547 spatial items, and 1434,668 check-in activities
from 09/2010 to 01/2011. Each check-in record has the same format as the Foursquare
dataset. The dataset does not contain user social network information, however.
To make the experiments repeatable, we will make the datasets and our codes publicly available3.
5.1.2. Comparative Approaches. We compare our ST-SAGE model with the following five
methods representing the state-of-the-art spatial item recommendation techniques.
JIM. JIM [Yin et al. 2015] is a joint probabilistic generative model that integrates
the temporal effect, geographical-social influence, content effect, and word-of-mouth
effect. The word-of-mouth effect refers to the fact that the probability of a user visiting
a spatial item is largely affected by the popularity of this spatial item at the target
region.
UTE+SE. UTE+SE, proposed in Yuan et al. [2013], is a collaborative recommendation model that incorporates both the temporal and spatial information. Given a user
and specific time, it first finds other users sharing similar temporal preference with
the original user and then produces the time-specific recommendations based on their
historical check-ins made around the time.
LCA-LDA. LCA-LDA is a location-content-aware recommender model that is developed to support spatial item recommendation for users traveling in new cities [Yin et al.
2014]. This model takes into account both personal interests and local preferences of
each location by exploiting both item co-visiting patterns and content of spatial items.
Compared with ST-SAGE, LCA-LDA is a traditional mixture model that introduces
“switching” variables to consider multiple factors. In addition, LCA-LDA ignores the
roles of users and does not distinguish between tourist preference and native preference.
UPS-CF. UPS-CF, proposed in Ference et al. [2013], is a collaborative recommendation framework that is especially designed for out-of-town users. This framework
integrates user-based collaborative filtering and social-based collaborative filtering.
That is, it recommends spatial items to a target user according to the activity records
of both the user’s friends and similar users.
CKNN. CKNN [Bao et al. 2012] projects a user’s activity history into the category
space and models user preference employing a weighted category hierarchy. When
receiving a query, CKNN retrieves all users and items located in the querying location,
formulates a user-item matrix online, then applies a user-based CF method to predict
the rating of a querying user on an unvisited item. Note that the similarity between
two users in CKNN is computed according to their weights in the category hierarchy,
making CKNN a hybrid recommendation method.
To further validate the benefits brought by exploiting temporal information and
spatial smoothing based on the spatial pyramid, we compare our model with three
simplified versions of ST-SAGE.
ST-SAGE-S1 is the simplified version of the ST-SAGE model that does not consider
the temporal influence. This means that θnative and θtourist are |R| instead of |R|×|T|
vectors. For each user activity, we sample the topic index z according to the following
equation instead of Equation (3). This simplified version is equal to the Geo-SAGE
2https://developer.foursquare.com/.
3https://sites.google.com/site/dbhongzhi/.
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
48:16 W. Wang et al.
model proposed in Wang et al. [2015]:
P(zu,i|su,i,lu,i, θ 0, θuser , θnative
, θtourist)
= P(zu,i|θuser
u + (1 − su,i) × θnative lu,i + su,i × θtourist
lu,i ).
ST-SAGE-S2 is the simplified version that models the temporal information individually without smoothing. Specifically, we sample the topic index z according to the
following equation:
P(zu,i|su,i,lu,i,tu,i, θ 0, θuser , θnative
, θtourist)
= P(zu,i|θuser
u,tu,i + (1 − su,i) × θnative lu,i + su,i × θtourist
lu,i ).
ST-SAGE-S3 is the simplified version of ST-SAGE that does not exploit the geographical correlation in the spatial pyramid. Thus, the inferred temporal native preference
and temporal tourist preference for location l at time t are not reliable when there are
few or even no user activity records in the corresponding region.
5.1.3. Evaluation Methods. We evaluate both the effectiveness and efficiency of STSAGE. For the efficiency part, we evaluate both the model training and the online
recommendation efficiency.
Recommendation Effectiveness. Since our ST-SAGE model is designed for both hometown recommendation and out-of-town recommendation, we evaluate the recommendation effectiveness of our model under each of these scenarios. Given a user profile in
terms of a collection of user activities, we divide the user’s activities into a training set
and a test set. For the hometown recommendation scenario, we randomly select 30%
of the activity records occurring at the user’s hometown as the test set, and use the
remaining activity records as the training set. Similarly, for the scenario of out-of-town
recommendation, we randomly select 30% of the activity records generated by the user
when the user travels out of town as the test set, and use the remaining activity records
as the training set. To decide whether an activity record occurs in the user’s hometown
or elsewhere, we measure the location distance between the user’s hometown and the
spatial item (e.g., |lu − lv|). If the distance is greater than 100km, we assume that the
activity occurs when the user is out of town. The threshold d = 100km is selected because a distance around 100km is the typical radius of “human reach,” which takes 1
to 2 hours to drive.
According to these dividing strategies, we split the user activity dataset D into the
training set Dtrain and the test set Dtest. To evaluate the recommendation methods,
we adopt the evaluation methodology and measurement Accuracy@k, which is applied
in Hu and Ester [2013], Chen et al. [2009], Cremonesi et al. [2010], Koren [2008] and
Yin et al. [2014]. Specifically, for each user activity record (u, v, lv, Wv, s, t) in Dtest,
we do the following. (1) We compute the ranking score for spatial item v and all other
spatial items that are within the circle of radius d centered at lv and unvisited by u
previously. (2) We form a ranked list by ordering all of these spatial items according to
their ranking scores. Let r denote the position of the spatial item v within this list. The
best result corresponds to the case in which v precedes all the unvisited spatial items
(i.e., r = 1). (3) We form a top-k recommendation list by picking the k top-ranked spatial
items from the list. If r ≤ k, we have a hit (i.e., the ground truth item v is recommended
to the user). Otherwise, we have a miss.
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:17
Fig. 5. Performance on Foursquare dataset.
Fig. 6. Performance on Twitter dataset.
The computation of Accuracy@k proceeds as follows. We define hit@k for a single test
case as either the value 1, if the test item v appears in the top-k results, or the value 0,
if otherwise. The overall Accuracy@k is defined by averaging over all test cases:
Accuracy@k = #hit@k
|Dtest|
,
where #hit@k denotes the number of hits in the test set and |Dtest| is the number of all
test cases.
Recommendation Efficiency. The time cost of training ST-SAGE is mainly affected
by the number of activity records in the dataset and the number of nodes in the
GraphLab framework. Therefore, we evaluate the model-training efficiency of ST-SAGE
with various numbers of nodes. For the online recommendation, the efficiency mainly
depends on (1) the number of all spatial items in the target region and (2) the number of
spatial items recommended. Thus, we test the recommendation efficiency of ST-SAGE
by varying these two factors.
5.2. Recommendation Effectiveness
In this part, we first present the experimental results by comparing our model with
the state-of-art recommendation methods on two real-life datasets for both out-of-town
recommendations and hometown recommendations. Second, we validate the benefits
brought by different strategies adopted by ST-SAGE, such as exploiting temporal effect
and spatial smoothing based on the spatial pyramid.
5.2.1. Results and Analysis. First, we present the experimental results of the comparison between recommendation methods with well-tuned parameters. Figures 5 and 6
report the effectiveness of recommendations on the Foursquare and Twitter datasets,
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
48:18 W. Wang et al.
Fig. 7. Impact of different factors on Foursquare dataset.
respectively. From the figures, we observe that the accuracy values gradually rise with
respect to the increase of k. This is because, by returning more spatial items, it is
more likely that items that users would like to visit will be discovered. We show the
performance when k is set to 5 and 10.
It is apparent that the recommendation methods have significant performance disparity in terms of the top-k accuracy. Figure 5(a) presents the recommendation accuracy
in the scenario of out-of-town recommendations, for which the accuracy of ST-SAGE is
about 0.457 when k = 5, and 0.535 when k = 10. This means that there is a probability
of 45.7% that ST-SAGE will place an appealing POI in the top-5 recommendations and
a 53.5% probability that it will be placed in the top-10 recommendations. Clearly, our
proposed ST-SAGE model outperforms other competitor models significantly, demonstrating the advantages of ST-SAGE over other competitor methods. Several observations are made from the results. (1) ST-SAGE outperforms two other models that also
integrate the temporal information—UTE+SE [Yuan et al. 2013] and JIM [Yin et al.
2015]—demonstrating the advantages of ST-SAGE over other competitor methods that
also integrate the temporal information. (2) CKNN performs worst, as it does not explore the spatial-temporal dynamics since the local experts discovered by CKNN have
the same or similar interests as target users. (3) UPS-CF falls behind ST-SAGE and
LCA-LDA, showing the advantages of using the latent topic models to capture users’
interests by exploiting the content of their visited spatial items. Through the medium
of content, ST-SAGE and LCA-LDA transfer users’ interests inferred in the hometown
to out-of-town regions. In contrast, UPS-CF is a mixture of collaborative filtering and
social filtering, which ignores the effect of content. In addition, according to the survey
in Cho et al. [2011], for movement farther than 100km from the home location, the
probability of visiting the exact same locations as a friend has visited in the past is low.
Figure 6 shows the recommendation effectiveness on the Twitter dataset. As the
social relationship is unavailable on this dataset, UPS-CF has not been evaluated in
this experiment. The trend of the comparison result is similar to that presented in
Figure 5.
There are two parameters in ST-SAGE: the height of the spatial pyramid (H) and the
number of topics (K). The experimental results presented earlier are obtained with the
optimal parameter settings: (1) the optimal height of the spatial pyramid is 5 for both
Foursquare and Twitter datasets; (2) the optimal values of K are 60 for the Foursquare
dataset, and 100 for the Twitter dataset.
5.2.2. Impact of Different Factors. To validate the respective benefits acquired by exploiting the temporal information and spatial smoothing based on the spatial pyramid, we
compare ST-SAGE with the three variant versions: ST-SAGE-S1, ST-SAGE-S2, and
ST-SAGE-S3. The results of this comparison are shown in Figures 7 and 8. From the
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:19
Fig. 8. Impact of different factors on Twitter dataset.
Table IV. Impact of Parameters
Number of Topics
Height 30 40 50 60 70 80
2 0.46 0.498 0.518 0.53 0.534 0.535
3 0.464 0.502 0.525 0.539 0.54 0.543
4 0.471 0.502 0.529 0.546 0.551 0.554
5 0.478 0.513 0.534 0.554 0.556 0.555
6 0.456 0.492 0.513 0.522 0.522 0.527
7 0.421 0.451 0.476 0.485 0.489 0.492
The values with bold-type indicate the optimal parameter setting.
results, we observe that ST-SAGE consistently outperforms the three variant versions
for both out-of-town recommendations and hometown recommendations, which demonstrates the benefits of exploiting the temporal information and spatial smoothing. By
comparing ST-SAGE-S1 and ST-SAGE-S2, we also observe that ST-SAGE-S1 performs
better in out-of-town recommendations while ST-SAGE-S2 performs better in hometown recommendations. This is because the personal activity data is extremely sparse
in out-of-town recommendations, which leads to inaccuracy in inferring the personal
temporal preferences in ST-SAGE-S2.
To study the impact of two parameters in ST-SAGE, H and K, we tried different
setups for these two parameters. Due to space constraints, we show only the Accuracy@10 for the out-of-town recommendations on the Foursquare dataset. We tested
the performance of the ST-SAGE model by varying the height of the spatial pyramid
H from 2 to 7 and the number of topics K from 30 to 80. The results are presented in
Table IV. From the results, we observe that, as H increases, the Accuracy values of
ST-SAGE first increase and then decrease. One possible reason for the early increase
of the Accuracy values is that increasing the height exploits the spatial effect at finer
levels and makes the inference of native and tourist preferences more precise. Later,
Accuracy decreases as H gets larger, because increasing the height makes users’
activity data in a region cell sparser. ST-SAGE achieves its best performance when the
height of the spatial pyramid is set to 5 on the Foursquare dataset. On the other hand,
we also observed that the performance first improves with the increase of the number
of topics K, then the increment becomes small. The reason is that K represents the
model complexity. Thus, when K is too small, the model has limited ability to describe
the data. However, when K exceeds a threshold (e.g., K = 60 in this dataset), the model
is complex enough to handle the data. At this point, it is less helpful to improve
the model performance by increasing K. Thus, we choose H = 5, K = 60 as the best
trade-off between the accuracy and efficiency on the Foursquare dataset.
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
48:20 W. Wang et al.
Fig. 9. Training time of ST-SAGE on GraphLab.
5.3. Recommendation Efficiency
In this section, we first present the evaluation of the offline model-training efficiency.
Then, we present the online recommendation efficiency.
5.3.1. Model-Training Efficiency. To make our ST-SAGE model scalable to large-scale
datasets, we implement it based on the GraphLab framework. The training time of STSAGE on the Twitter dataset is reported under different numbers of nodes in Figure 9.
From the result, we observe that the training time of ST-SAGE decreases significantly
with growing size of distributed GraphLab nodes. We reduce the training time for STSAGE from approximately 100h to less than 10h. Though the basic implementation
of ST-SAGE is costly, the parallel implementation guarantees the scalability of our
ST-SAGE model. This model is thus feasible in practical deployment.
5.3.2. Online Recommendation Efficiency. In this section, we evaluate the recommendation efficiency using the Foursquare dataset. In the efficiency study, we tested top-k
recommendations for the target region with 50km× 50km and 100km× 100km, respectively. Obviously, there are more spatial items in the target region with 100km×100km
than in the region with 50km×50km. All recommendation algorithms are implemented
in Java 1.7 and run on a Windows Server with an Intel E5-2690 CPU and 256G RAM.
For the online recommendation efficiency test, we compare ST-SAGE with UPSCF, CKNN, and UTE+SE. We did not compare our model with LCA-LDA and JIM
due to the fact that the TA algorithm can also be employed to speed up the online
recommendation in the two recommender models, as their ranking functions are also
monotonous. For the online recommendation of ST-SAGE, we adopt two methods to
utilize the knowledge learned offline to produce recommendations. The first method
extends the TA algorithm to produce top-k recommendations, and is denoted as STSAGE-TA. The second method linearly scans all the spatial items in the target region,
computes their ranking scores, then recommends the top-k items with the highest
scores. This method is called ST-SAGE-LS.
Figure 10 presents the average online efficiency of the four different methods. On
average, our proposed ST-SAGE-TA produces top-10 recommendations in 12.1ms and
3.9ms for the target region with 100km × 100kmand 50km × 50km, respectively. From
the figures, we observe that (1) ST-SAGE-TA outperforms ST-SAGE-LS significantly in
all querying regions, which demonstrates that the TA-based query processing technique
is efficient; (2) ST-SAGE-TA and ST-SAGE-LS consistently outperform CKNN, UPSCF, and UTE+SE significantly in both querying regions, showing that the model-based
methods produce faster responses to querying users than memory-based methods once
the model parameters have been learned offline; (3) the time costs of all algorithms in
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:21
Fig. 10. Efficiency of online recommendations.
the target region with 100km× 100km are higher than that in the target region with
50km × 50km due to the increase of the number of the candidate spatial items; and
(4) the time costs of all algorithms increase slowly with the increase of the number of
recommendations (k).
6. RELATED WORK
With the availability of large-scale user activity records in the physical world, many
recent works have tried to improve spatial items recommendation by exploiting the
GPS data, geographical and social influence, temporal effect, and content information
of spatial items.
GPS data. The task of spatial item recommendation is highly related to human
mobility. It is traditionally studied on mobile data, that is, cellphone-based GPS data.
Various works have explored this information to study human mobility, and have promoted a set of location-based applications, including spatial item recommendation
[Beeharee and Steed 2007; Horozov et al. 2006; Park et al. 2007; Simon and Frohlich ¨
2007; Takeuchi and Sugimoto 2006]. The raw GPS data is a sequence of time-stamped
latitude/longitude pairs, and there is no mapping information between geo-coordinates
and specific real-world spatial items. Thus, a spatial item is usually extracted from
users’ GPS trajectory logs as the stay points on which a user spends sufficient time
[Zheng et al. 2009, 2010]. The availability of GPS data is limited due to the user privacy
problem since GPS data is obtained from users’ cell phones through telecommunication services. Generally speaking, existing systems fall into two categories: systems
without content or social information and systems with limited content information.
For the recommender systems without content information, spatial and temporal patterns are commonly adopted with collaborative filtering methods to perform spatial
item recommendation [Zheng et al. 2011; Ge et al. 2010; Zheng and Xie 2011; Leung
et al. 2011]. The content information could be available in certain types of GPS data.
Zheng et al. [2010, 2012] have proposed a user-centered collaborative location and activity filtering approach to find like-minded users and similar activities at different
locations with tensor decomposition. In tour recommendation [Ge et al. 2011; Liu et al.
2011] and tourist spatial item recommendation [Kang et al. 2006], contents related to
travel packages or tourist spatial items, such as package description and spatial item
attributes, are used to analyze user-interested topics.
Geo-Social Influence. Geo-social influence indicates that people tend to explore
spatial items near a spatial item that they or their friends have visited before [Ye et al.
2011]. Many recent studies [Lian et al. 2014; Cheng et al. 2012; Ye et al. 2011; Cho
et al. 2011] show that there is a strong correlation between user check-in activities and
geographical distance as well as social connections. Most of the current spatial-item
recommendation work mainly focuses on leveraging geographical and social influences
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
48:22 W. Wang et al.
to improve recommendation accuracy. For example, Ye et al. [2011] have delved into
spatial-item recommendation by investigating geographical influence between locations and proposed a system that combines user preferences, social influence, and
geographical influence. Cheng et al. [2012] have investigated the geographical influence through combining a multicenter Gaussian model, matrix factorization, and social
influence for location recommendation. Lian et al. 2014] have incorporated the spatialclustering phenomenon resulting from geographical influence into a weighted matrix
factorization framework to deal with matrix sparsity. Ference et al. [2013] have designed a collaborative recommendation framework that considers the activity records
generated by both friends and similar users in a mixture way.
Temporal Effect. The temporal effect of user check-in activities in LBSNs has also
attracted much attention from researchers. Spatial-item recommendation with temporal effect mainly leverages temporal cyclic patterns and temporal sequential patterns
on LBSNs. Gao et al. [2013] have investigated the temporal cyclic patterns of user
check-ins in terms of temporal nonuniformness and temporal consecutiveness. Cheng
et al. [2013] have introduced the task of successive personalized spatial-item recommendation in LBSNs by embedding the temporal sequential patterns. Chen et al. [2013]
have proposed a temporal recommender system and modeled user behaviors based on
intrinsic interest as well as the temporal context in Yin et al. [2014a, 2014b].
Content Information. Most recently, researchers have explored the content information of spatial items to alleviate the problem of data sparsity. Hu and Ester [2013]
have proposed a spatial topic model for spatial-item recommendation considering both
spatial aspects and textual aspects of user posts from Twitter. Yin et al. [2014b] have
exploited both personal interests and local preferences based on the contents associated with spatial items. Wang et al. [2015] leverage content information as the medium
to transfer the users’ personal interest in the hometown to a new place. Liu and Xiong
[2013] have studied the effect of spatial item–associated tags for spatial-item recommendation with an aggregated LDA and matrix factorization method. Gao et al. [2015]
have studied both spatial item–associated contents and user-sentiment information
(e.g., user comments) in spatial-item recommendation and reported good performance.
There are also researchers who focus on supplementing the content information based
on temporal and spatial patterns of topics [He et al. 2016].
7. CONCLUSION
In this article, we proposed a spatial-temporal sparse additive generative model, STSAGE, for spatial item recommendation, which effectively overcomes the challenges
arising from travel locality and spatial-temporal dynamics of user behaviors. Specifically, to combat travel locality, ST-SAGE exploited both the co-occurrence patterns of
spatial items and their content to infer and transfer user interests. To address spatial
dynamics of user behavior, ST-SAGE incorporated the native or tourist preference at
the target location. To combat the data sparsity in modeling the temporal dynamics of
user behaviors, we enhanced the model with smoothing by taking advantage of the temporal preferences of the crowd of similar users. To alleviate the data sparsity confronted
by the inference of temporal native preferences and tourist preferences for each region,
ST-SAGE employed an additive framework to smooth the preferences over a welldesigned spatial pyramid. In addition, we developed a scalable and parallel-learning
algorithm for ST-SAGE based on the GraphLab framework to improve the efficiency of
model training, and efficient top-k query processing techniques (i.e., TA) are employed
to speed up the process of online recommendation. We conducted extensive experiments to evaluate the performance of our ST-SAGE model on two real datasets. The
experimental results reveal the advantages of ST-SAGE over other spatial item recommendation methods for both out-of-town and hometown recommendations in terms of
ACM Transactions on Intelligent Systems and Technology, Vol. 8, No. 3, Article 48, Publication date: April 2017.
ST-SAGE: A Spatial-Temporal Sparse Additive Generative Model 48:23
both recommendation effectiveness and efficiency, which demonstrate the effectiveness
of ST-SAGE in facilitating travel for users in their hometowns as well as in regions
that they are not familiar with.