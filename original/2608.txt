Arriving on time and total travel time are two important properties for vehicle routing. Existing route guidance approaches always consider them independently, because they may conflict with each other. In this
article, we develop a semi-decentralized multiagent-based vehicle routing approach where vehicle agents
follow the local route guidance by infrastructure agents at each intersection, and infrastructure agents perform the route guidance by solving a route assignment problem. It integrates the two properties by expressing
them as two objective terms of the route assignment problem. Regarding arriving on time, it is formulated
based on the probability tail model, which aims to maximize the probability of reaching destination before
deadline. Regarding total travel time, it is formulated as a weighted quadratic term, which aims to minimize
the expected travel time from the current location to the destination based on the potential route assignment.
The weight for total travel time is designed to be comparatively large if the deadline is loose. Additionally, we
improve the proposed approach in two aspects, including travel time prediction and computational efficiency.
Experimental results on real road networks justify its ability to increase the average probability of arriving
on time, reduce total travel time, and enhance the overall routing performance.
CCS Concepts: • Information systems → Information systems applications;
Additional Key Words and Phrases: Intelligent transportation systems, multiagent-based route guidance, arriving on time, probability tail model, total travel time
1 INTRODUCTION
Vehicle route guidance has been a challenging problem in transportation and mobility, which is
crucial for the sustainable development of any city (Zheng et al. 2014; Zhang et al. 2015; Cao et al.
2016a). It attracts broad and deep attention from the government, industry and research communities due to its high relevance to people’s daily life (Chester 2015; Guo et al. 2017; Zheng and Xie
2011; Yuan et al. 2010; Rubinstein et al. 2012). Multiagent-based approaches are often applied in
route guidance (Gan et al. 2015; France et al. 2003; Wilt and Botea 2014; Chen et al. 2014; ZolfpourArokhlo et al. 2014; Lujak et al. 2015), because the agent metaphor for modeling a participant
or decision-maker can capture complex constraints connecting all problem-solving phases (Smith
et al. 2006; Oh and Smith 2008), especially in cooperative vehicle route guidance (Bazzan and Klügl
2014). A transportation system can be modeled as a large, distributed, and dynamic multiagent system where vehicles represented as agents move on the road network following their own routes,
which are determined by themselves or roadside infrastructure agents (Jiang et al. 2014; Cao et al.
2017b).
In multiagent-based route guidance, least expected travel time (LET) paths are first proposed to
provide route guidance to the vehicle agents by the policy-making agents (e.g., city manager or
transportation authority) (Yamashita et al. 2005; Li et al. 2009; Claes et al. 2011; Pan et al. 2013;
Liang and Wakahara 2014; Jiang et al. 2014; Wang et al. 2014a). They consider LET paths as the
optimal option mainly for two reasons: (1) Drivers generally prefer shorter travel time, and (2) LET
paths are likely to result in less total travel time for all vehicles in the whole transportation system,
which is environmentally friendly in that fuel consumption and air pollution are directly relevant
with the total travel time (Liang and Wakahara 2014; Jiang et al. 2014). Although the LET path in
multiagent-based route guidance is popular and has achieved big success considering the environmental impact, a critical issue still remains to be addressed: In real traffic, different drivers may
have different deadlines, and even the same driver may have different deadlines in various scenarios. For instance, if they want to catch up important appointments, then their deadlines might be
tight; if they go shopping, then deadlines might be loose. Simply seeking LET paths for all drivers
may cause some drivers with tight deadlines to miss their deadlines due to the influence from
other drivers, especially those with loose deadlines. This will increase the drivers’ frustration and
impatience, and, as a consequence, the accident occurrence rate.
The probability tail model is proposed as a criterion of the optimal route, which aims to maximize the probability of reaching destination before deadline (i.e., arriving on time) (Fan et al. 2005;
Nikolova et al. 2006; Nie and Wu 2009; Lim et al. 2009, 2013). This criterion has two attractive
properties: (1) It takes the specific demand of deadline into account, giving drivers an extra dimension of settings, and (2) it uses a probabilistic instead of a deterministic metric to evaluate
stochastic traffic situations (i.e., the variance in the probability always relates to the risk), which is
more realistic especially when facing real-world uncertainties (Cao et al. 2017a). The probability
tail model is much consistent with real-world travel behavior and has been applied in many crucial
scenarios, e.g., flight catching, fire rescue, and organ delivery. However, the probability tail model
is originally designed for a single vehicle, which independently pre-computes a path before each
vehicle’s departure. Traffic is known to be dynamic, so the optimality of a pre-computed path may
not hold when all vehicles are en route. Therefore, a multiagent-based cooperative route guidance
approach was proposed in our previous work (Cao et al. 2016a) that extends the probability tail
model to the multiple vehicle settings by solving a route assignment problem at each intersection. This approach is promising in that it is semi-decentralized and can increase the chances of
arriving on time for all relevant vehicles by providing local route guidance. However, a critical
issue is unsolved in that approach: It only considers arriving on time, and some vehicle agents
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
A Multiagent-Based Approach for Vehicle Routing 25:3
may be assigned to detoured routes as long as they can guarantee reaching destination before
deadline. Those routes are likely to cause additional total travel time, especially for the vehicle
agents with loose deadlines, which are deviated from the normal driver’s preference of shorter
travel time. Moreover, unnecessary total travel time always causes additional fuel consumption
and air pollution, which is not environmentally friendly.
Therefore, it is desirable to leverage the advantages of considering both arriving on time and
total travel time at the same time in the muitiagent-based route guidance. Consequently, in this
article, we extend our previous work in Cao et al. (2016a) by integrating the properties of arriving on time and total travel time into the same route assignment problem. More specifically, we
incorporate a quadratic term, which represents the expected travel time from current location to
the destination for the potential road link assignment, into the objective function of the original
arriving on time problem. We also design a weight for the expected travel time term, the value of
which is comparatively large if the deadline is loose. Besides, two improvements are proposed for
our new approach: The predicted travel time on each assigned road link is refined by iteratively
linearizing a non-linear function, and the computational efficiency is enhanced by reformulating
the route assignment problem as a mixed integer linear programming (MILP) problem. Experimental results on real road networks show that our approach outperforms traditional methods,
which can increase the chances of arriving on time and reduce the total travel time.
The rest of this article is organized as follows. In Section 2, we lay down related work on route
guidance approaches considering total travel time and arriving on time, respectively. In Section 3,
we illustrate the framework of our multiagent-based vehicle route guidance. In Section 4, first, we
elaborate the proposed approach that considers arriving on time for all vehicle agents; then we
describe how to integrate the total travel time, both of which are expressed as route assignment
problems, respectively; and, finally, we provide the bound analysis and algorithm summary. In
Section 5, we propose two improvements to our route guidance approach. In Section 6, we present
experimental settings and performance results regarding all the approaches and improvements.
The article ends with conclusions and possible future works in Section 7.
2 RELATED WORK
Most of the multiagent-based vehicle routing approaches rely on the LET paths for route guidance to reduce the total travel time of vehicle agents in the whole transportation system. In one of
the early multiagent-based approaches for route guidance (Yamashita et al. 2005), a global server
agent constantly collects intentions of routes from all vehicle agents. It then computes a predicted
LET path for each individual vehicle agent by cooperatively exploring the collected intentions,
and all vehicle agents update their routes at each intersection accordingly. Based on the work
in Yamashita et al. (2005), Li et al. (2009) predict the potential traffic on each road link at different
time slots according to the collected intentions, and then a corresponding LET path is constantly
computed for each individual vehicle. Similarly, a modified A∗ algorithm (Pan et al. 2013) incorporates a repulsion scheme into the expression of weights on all road links. Then each vehicle
agent recursively computes a LET path in a centralized manner to avoid the situation where too
many vehicle agents rush into a same route. Liang and Wakahara (2014) propose a personalized
rerouting strategy by first ranking vehicles and then calculating a predicted LET path for a vehicle
according to the decision of those who ranked higher. In another centralized approach (Amarante
and Bazzan 2012), each vehicle agent is assumed to know real-time traffic conditions on all road
links and dynamically travels along the latest LET path. Centralized approaches often suffer from
low computational efficiency. Jiang et al. (2014) propose a decentralized pheromone-based vehicle
rerouting approach, in which whenever congestion is predicted by a local infrastructure agent,
the concerned vehicle agents will update their routes by choosing one of the best k LET paths. In
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
25:4 Z. Cao et al.
another decentralized approach, Weerdt et al. (2013) aim to minimize the delays at charging stations for electric vehicles, which incorporates the intentions into the probabilistic arrival time of
those vehicles to each road link. To find the best location to charge, they maximize the expected
utility function for each vehicle. Nevertheless, the results are only verified by the measurement of
total expected travel time rather than whether vehicles arrive on time. Decentralized multiagent
approaches have the capability of adaptively updating routes according to dynamic traffic, and they
are environmentally friendly, because they are likely to reduce the total travel time. However, they
do not consider specific demands of vehicle agents, i.e., preferred deadlines.
Several optimization approaches have been proposed to take drivers’ preferred deadlines into
account. Particularly, the probability tail model is widely adopted for vehicle route guidance (Fan
et al. 2005; Lim et al. 2009, 2013; Cao et al. 2016b), which aims to maximize the probability of
arriving at destination before deadline and is formally expressed as (Lim et al. 2013; Cao et al.
2016b)
max
x
Prob(w x ≤ T )


Mx =
b; x ∈ {0, 1}|Ar |
, (1)
where w denotes random travel time for each road link; M is the node-arc incidence matrix of
the road network; T is the preferred deadline1;
b is an O-D vector, all elements of which are zeros except those for origin (“1”) and destination (“-1”); and x refers to the set of road links where
an element is “1” if the referred road link is on the concerned path. The equality constraint in
Equation (1) guarantees that x is a connected path from origin to destination. This model is more
consistent with real-world travel queries. To improve the computational efficiency of solving the
probability tail model for stochastic vehicle routing, several quasi-convex optimization-based solutions have been developed (Nikolova et al. 2006; Nie and Wu 2009; Lim et al. 2009). But these
solutions are limited by strong assumptions, such as Gaussian distribution of travel time, independence among travel time on different road links, and sufficiently large deadlines, which prevent
its wide application in real transportation systems. To overcome these limitations, a data-driven
solution is proposed (Cao et al. 2016b), which formulates the original stochastic routing problem as
a cardinality minimization problem by directly exploring the real trajectory on road links (Wang
et al. 2014b). Although success is achieved from the computational perspective, most of existing
approaches incorporating the probability tail model independently pre-calculate a path for each
individual vehicle before it departs, without considering the intentions of others (Cao et al. 2016b).
Since traffic is always dynamic, optimality of a pre-computed path may not hold any more once
all vehicles are en route due to the influences from each other. To overcome this limitation, a semidecentralized multiagent-based route guidance approach is proposed, which aims to cooperatively
increase the chances of arriving on time for all vehicle agents. In particular, this approach is characterized by two types of agents, i.e., vehicle agents and infrastructure agents. Vehicle agents follow
the route guidance by infrastructure agents at each intersection, and infrastructure agents locally
collect intentions of concerned vehicle agents and formulate the route guidance as a route assignment problem to guarantee their arrival on time. However, this approach does not consider total
travel time, and some vehicle agents (i.e., especially those with loose deadlines) may be allocated
to detoured routes to give way although they can still guarantee arrival on time. In this case, those
detoured routes are likely to cause unnecessary additional travel time, which is not preferred by
normal drivers, nor is it environmentally friendly.
It is thus desirable to leverage both the advantages of the path based on the probability tail
model (that considers arriving on time regarding different levels of deadlines) and the LET path
1T is actually the remaining time to deadline, and we use “deadline” for simplification in the whole article.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.              
A Multiagent-Based Approach for Vehicle Routing 25:5
Fig. 1. Two types of agents and intention collection.
(that aims to reduce the total travel time) in the multiagent-based route guidance approach, which
is what we propose in this article.
3 MULTIAGENT-BASED ROUTE GUIDANCE
In this section, we briefly introduce the scheme of our semi-decentralized multiagent-based approach for vehicle route guidance, which involves two types of agents, i.e., vehicle agents and
infrastructure agents. Vehicle agents represent drivers and travel on a road network by following
route guidance from infrastructure agents. Infrastructure agents, located at road intersections, collect intentions (i.e., deadlines and destinations) from vehicle agents and conduct route guidance to
the local vehicle agents.
In real traffic, vehicle agents may influence each other due to limited road capacity and rush
hour effect. To consider such influence, intention collection is necessary (Yamashita et al. 2005;
Li et al. 2009; Claes et al. 2011). In our approach, each vehicle agent determines a destination and
a preferred deadline before departure and travels along an initial route given by the probability
tail model in Equation (1). Each infrastructure agent is associated with all traffic lights at a road
intersection. It collects intentions from vehicle agents, which are (1) located on road links directly
connected to that infrastructure agent and (2) facing red lights. The motivation for the latter is
to avoid unnecessary and frequent route changes. Facing green lights may imply that the current
route is sufficiently satisfactory.
Take a one-way road network in Figure 1 as an example, where rд is an infrastructure agent, vi
is a vehicle agent, and pk is a road link. Assume that at this moment, the traffic light associated
with r1 shows red color to p1 and p2. Then r1 collects intentions of v1, v2, and v3. Since this red
color will last for a while,r1 will also collect intentions of other vehicle agents if they later enter p1
or p2 during the same red color period. Other infrastructure agents also work in the same manner.
Once the intentions are collected, the infrastructure agent at each road intersection will compute
and provide route guidance to increase the chance of arriving on time and reduce total travel time
for all concerned vehicle agents. Then the vehicle agents update routes accordingly. On the other
hand, vehicle agents generally have different types of deadlines. Simply seeking LET paths for all
vehicle agents may cause some of them with tight deadlines to miss their deadlines due to the
influences from other vehicle agents with loose deadlines. Motivated by this concern, a desirable
approach is to distribute vehicle agents with loose deadlines to detour crowded paths, to give ways
to those with tight deadlines if necessary. At the same time, vehicle agents always face choices at
an intersection: go straight, turn left, turn right or turn back to enter the next road link. Thus,
in our approach, the infrastructure agent at each road intersection provides route guidance to
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
25:6 Z. Cao et al.
Table 1. Average Computation Time (s)
Variable Notation Variable Notation
v Vehicle agent r Infrastructure agent
T Deadline for vehicle agent Te Expected travel time
Tr Relative deadline on the assigned road link l Options of road links
xij Indicates whether agent i assigned to lj ξ Potential delay
f (x) Predicted travel time on assigned road link c,γ Parameters in f (x)
ψ (x) Expected historical travel time from
assigned road link to destination
α Deadline coefficient
ϕ(x) Estimated travel time from current location
to destination
τ Weight for the total
travel time
vehicle agents by formulating it as a route assignment problem (Papageorgiou 1990), which relies
on the collected intentions. In the next section, we will detail the computation process of the route
assignment problem.
4 ROUTE ASSIGNMENT FOR THE ROUTE GUIDANCE
In this section, we focus on the route assignment problem formulation. We start with the simple
case of only considering arriving on time and then proceed with integrating both arriving on time
and total travel time. Bound analysis and implementation summary are provided in the later part
of this section. Before proceeding, we first introduce the major variables in Table 1, which are
involved in the following route guidance.
4.1 Route Assignment Considering Arriving on Time
Take infrastructure agent r1 and vehicle agents v1, v2, and v3 in Figure 1 as an example and focus
on the route assignment for v1. Assume that (1) destination of v1 is d2, and its preferred deadline
is T1; (2) v1, v2, and v3 are currently facing red light,2 and will next enter p3 or p9. Assignment for
a vehicle agent always influences other vehicle agents. Suppose that the predicted travel time of
v1 on p3 and p9 are Tp
13 and Tp
19, which linearly depend on the number of assigned vehicle agents
to the road links and their lengths.3 Besides, we need to consider traffic conditions from r2 and r4
to d1 or d2, where historical expected travel time is used, because r2 and r4 are comparatively far
away from r1. Assume that the expected travel time from r2 and r4 to d2 are Te
22 and Te
42. Hence,
if v1 is assigned to p3 or p9, then there would be relative deadlines on p3 and p9 for v1, denoted
as Tr
13 and Tr
19. Since deadlines should always be non-negative, we have Tr
13 = max{0,T1 −Te
22} and
Tr
19 = max{0,T1 −Te
42}. Thus there would be a potential delay ξ1 forv1, satisfyingTp
13 −Tr
13 ≤ ξ1 and
Tp
19 −Tr
19 ≤ ξ1 (i.e., ξ1 is non-negative, and there is no delay only if ξi = 0). To guarantee arriving
on time for the three vehicle agents, r1 should minimize the cardinality4 of ξ whose components
are ξi (i = 1, 2, 3).
In view of the above example, we can generalize route assignment performed by each infrastructure agent. First introduce several symbols: (1) lj , choices of road links to enter next, such
as p3 and p9 in Figure 1; (2) xij ∈ {0, 1}, xij = 1 means that vi is assigned to lj , otherwise xij = 0;
2In a real simulation, the three vehicle agents do not necessarily face the red lights at the same time, and it is only a
showcase here regarding how route assignment works. Usually, more than one lane exist on a road link in our simulation,
and there are quite a few combinations regarding which vehicles face the reg lights at the same time.
3Whether the linear assumption holds when car accelerating and deceleration is not considered in this article.
4Cardinality is the number of non-zero components in a vector.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.     
A Multiagent-Based Approach for Vehicle Routing 25:7
(3) I = {1,...,Q} and J = {1,..., L}, indices of vehicle agents and road link choices associated with
the infrastructure agent. Then the problem of maximizing the chance of arriving on time for all
concerned vehicle agents can be expressed as minimizing the cardinality of the potential delay ξ,
as follows:
min
x
Card(ξ)











j ∈J
(fj (x) −Tr
ij) · xij ≤ ξi,∀i ∈ I;

j ∈J
xij = 1,∀i ∈ I;ξi ≥ 0; xij ∈ {0, 1}, (2)
where ξ = {ξ1,...ξQ }, and delay occurs for vi if ξi > 0; xj = (x1j,..., xQj), indicates assignments
to lj ; fj (x), a linear function, denotes predicted travel time on lj ; Tr
ij is relative deadline for vi on
lj ;

j ∈J xij = 1 ensures that vi can only enter one road link, thus only one potential delay takes
effect in
j ∈J (fj (x) −Tr
ij) · xij . Particularly, the linear function fj (x) for lj is expressed as:
fj (x) = cj

i
xij +γj , (3)
where
i xij is amount of vehicle agents assigned to lj , cj , and γj are coefficients. The cardinality
minimization in Equation (2) is difficult to be directly solved. We thus use 1-norm to approximately
solve it (Kim et al. 2009), which can be further expressed as
min
x

Q
i=1
ξi








j ∈J
(fj (x) −Tr
ij) · xij ≤ ξi,∀i ∈ I;

j ∈J
xij = 1,∀i ∈ I;ξi ≥ 0; xij ∈ {0, 1}.
(4)
Equation (4) is a mixed integer quadratic programming (MIQP) problem in nature, which can be
solved by existing solvers.
Note that (1) Equation (4) only outputs a road link for a vehicle agent to enter next, but the
remaining path from assigned road link to destination is also available due to the computation of
relative deadline Tr
ij . The vehicle agent can then follow this complete route if it does not receive
any further guidance after an route assignment, which may happen if afterwards it always faces
green light. (2) As time elapses, deadline Tj will decrease, and we always use the latest Tj when
route guidance is performed. (3) We previously take a simple one-way road network as an example,
and double-way road links can also be easily applied, as long as infrastructure agents dynamically
recognize on which road links vehicle agents are facing red light, and which road links are available
to be assigned to those vehicle agents.
4.2 Route Assignment Considering Both Arriving on Time and Total Travel Time
Previously, we formulated the route guidance as an assignment problem addressed by each infrastructure agent. According to Equation (4), to increase the chance of arriving on time for all vehicle
agents in some cases, the infrastructure agent has to assign vehicle agents with loose deadlines to
detour crowed routes. This kind of assignment is helpful sometimes, since it gives ways to those
vehicle agents with tight deadlines. However, it may increase additional total travel time, especially
for vehicle agents with loose deadlines.
Before formulating route assignment considering both arriving on time and total travel time, we
would like to introduce deadline coefficient α for each vehicle agent, which is a positive parameter,
denoting the levels of deadlines. Specifically, once the O-D pair of a vehicle agent is determined, an
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.                                       
25:8 Z. Cao et al.
expected travel time Te between origin and destination can be derived based on historical traffic
data. Thus, the deadline can be expressed as
T = α · Te , (5)
where T implies a tight deadline if α < 1 and a loose deadline if α > 1. Generally, assignment to
detour crowed routes may happen to vehicle agents with loose deadlines, especially when vehicle agents with tight deadlines compete with them. Therefore, to reduce additional total travel
time while keeping satisfactory probability of arriving on time, we incorporate travel time related
measurement into the objective function of route assignment, which is accordingly formulated as
min
x

Q
i=1
(ξi + τi ·ϕi (x))











j ∈J
(fj (x) −Tr
ij) · xij ≤ ξi,∀i ∈ I;

j ∈J
xij = 1,∀i ∈ I;ξi ≥ 0; xij ∈ {0, 1}, (6)
where τi is the weight for total travel time measurement of vi and ϕi (x) is the travel time measurement based on the assignment decision x. Particularly, ϕi (x) consists of predicted travel time
on assigned road link and historical expected travel time from assigned road link to destination.
To be more specific, if vi is assigned to lj , then ϕi (x) would be expressed as
ϕi (x) =

j ∈J
(fj (x) +ψj (x)) · xij , (7)
where fj (x) is the predicted travel time function on lj , expressed in Equation (3), andψj (x) refers to
the historical expected travel time from lj to destination of vi , which can be obtained from a lookup table. To make the two parts in objective function of Equation (6) comparable, τi is calculated
as follows:
τi = αi (ϵ1 +
j ∈J
max {T e
i j−Ti,0}
|J | )

j ∈J
T e
i j
|J |
, (8)
where αi is the deadline coefficient for vi ; ϵ1 is a small positive constant; Te
ij is the least expected
travel time of the path from the current location to destination, which has to traverse lj ; Ti is the
latest deadline; and |J| is the number of candidate road links to be assigned. The rationale behind
τi in Equation (8) is to approximate the ratio of average possible delay over average possible travel
time. Besides, in many cases, additional travel time is usually caused by the vehicle agent with
loose deadline. Therefore, αi in Equation (8) will help to assign a high weight for total travel time
in Equation (6) if the deadline is loose. Note that, based on all above statements, Equation (6) also
comes down to an MIQP problem.
4.3 Bound Analysis
The 1-norm minimization in the route assignment of Equation (4) is an approximation to the cardinality minimization in Equation (2), and here we analyze its bounds. We assume that regarding
Equation (4), x∗
1 and ξ ∗
1 are the optimal solution to the primal problem, and p∗
1 is the optimal value of
the objective function. We also assume that the optimal value of objective function in Equation (2)
is p∗
2. We wish to note that (1) x∗ refers to the road link assignment for relevant vehicle agents at
an intersection, which also corresponds to the route in probability tail model of Equation (1); (2) ξ ∗
refers to the potential delay regarding the assignment x∗. Since Equation (2) and Equation (4) share
the same constraints, x∗
1 and ξ ∗
1 are the feasible solution to the cardinality minimization problem
in Equation (2). Therefore, p∗
1 is an upper bound to p∗
2. The dual function of Equation (2) can be
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.                                    
A Multiagent-Based Approach for Vehicle Routing 25:9
ALGORITHM 1: Multiagent-Based Route Guidance
Input: V = {v1,...,vQ }, a set of vehicle agents;
R = {r1,...,rG }, a set of infrastructure agents;
Vд=∅, vehicle agents that need guidance at rд;
T Lд, traffic lights associated with rд;
Tдn, Tr d , green light and red light duration;
f lд = 0, indicator of route guidance computation;
1 Each rд ∈ R turns on its associated traffic lights T Lд;
2 Each vi ∈ V determines destination di , deadline Ti , deadline coefficient αi (determined by Ti ),
and computes an initial path Pi using Equation (1);
3 while |V | > 0 do
4 foreach vi ∈ V do
5 if vi reaches di then
6 Deletes itself from V : V = V −vi ;
7 end
8 else
9 Travels along Pi ;
10 Updates deadline Ti ;
11 end
12 end
13 foreach rд ∈ R do
14 foreach tlk ∈ T Lд do
15 Runs according to Tдn and Tr d ;
16 if tlk is in red color phase then
17 rд finds vk facing tlk : Vд = Vд +vk ;
18 rд collects dk and Tk from vk ;
19 end
20 if tlk is at end of red color phase then
21 f lд = 1;
22 end
23 end
24 if f lд == 1 then
25 foreach vi ∈ Vд do
26 Computes relative deadline for vi based on the latest Ti ;
27 Computes its new path P
	
i via Equation (6);
28 Updates its route: Pi = P
	
i ;
29 end
30 Resets parameters: Vд = ∅, f lд = 0;
31 end
32 end
33 end
expressed as д(
λ, ν) = minx,ξ
 Card(ξ) + τi ··ϕi (x) +
i ∈I (νi (

j ∈J xij − 1)) +
i ∈I (λi (

j ∈J (fj (x) −
Tr
ij) · xij − ξi )). Since any feasible solution to the dual problem is a lower bound to the primal
problem (Boyd and Vandenberghe 2004), we assume that ν =
0, the lower bound can be easily calculated by solving д(
λ,
0) = minx,ξ
 Card(ξ) + τi ··ϕi (x) +
i ∈I (λi (

j ∈J (fj (x) −Tr
ij) · xij − ξi )) (the
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.                      
25:10 Z. Cao et al.
Fig. 2. Illustration of the refinement of travel time prediction function.
second and third terms can be expressed as linear functions, see Section 5.2), where λi is known
and λi ≥ 0. In addition, the accuracy for solving the general cardinality minimization problem can
be improved by some variants of 1-norm minimization, e.g., iterated weighted 1-norm heuristic (Candes et al. 2008). We do not elaborate the details here, since they are beyond the interest of
this article.
4.4 Pseudo-Code Summary
We summarize the proposed multiagent-based route guidance considering both arriving on time
and total travel time in Algorithm 1. Lines 1 and 2 initialize infrastructure agents and vehicle
agents. In Lines 3–33, each infrastructure agent recursively assigns paths to vehicle agents who
need route guidance at intersections, until they all reach destinations. Particularly, in Lines 4–
12, each vehicle agent travels along a current route and updates its deadline if it has not reached
destination. In Lines 14–23, during the red-color phase, each infrastructure agent recursively finds
the set of vehicle agents who need route guidance and collects their intentions including deadlines
and destinations. In Lines 25–29, on the completion of the red-color phase, each infrastructure
agent computes the optimal road links for all concerned vehicle agents to enter next based on the
route assignment in Equation (4) and accordingly updates theirs routes. We would like to note that
Algorithm 1 will only consider arriving on time if we set all τi in Equation (6) as 0.
5 FURTHER IMPROVEMENTS
In this section, we further improve the previously proposed route guidance approach, in the following aspects: (1) predicted travel time on assigned road links, through iterative linearization for
more accurate prediction; (2) computational efficiency of our approach, by introducing new variables and additional linear constraints; (3) real-time traffic information acquirement, by allowing
communications between infrastructure agents.
5.1 Refinement of Predicted Travel Time
In view of the analysis in Section 4.1, it is beneficial to assume that fj (x) in Equation (3) is linear,
because in this case route assignment in Equation (6) can be formulated as a canonical optimization
problem, i.e., MIQP, which enables tractable computation. However, by visualizing the statistical
relationship between amount of vehicle agents and expected travel time on some road links (i.e.,
Figure 2(a)), it is obvious that a non-linear function fits the relationship better than a linear function. Therefore, to guarantee both tractable computation and accurate route assignment, we adopt
the non-linear function to predict the travel time on assigned road link but solve the optimization
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.   
A Multiagent-Based Approach for Vehicle Routing 25:11
problem in Equation (6) by iterative linearization. Before showing this refinement, we would like
to reformulate the problem in Equation (6) as Equation (9):
min
x,t
t



















Q
i=1
(ξi + τi ·

j ∈J
(fj (x) +ψj (x)) · xij) ≤ t;

j ∈J
(fj (x) −Tr
ij) · xij ≤ ξi,∀i ∈ I;

j ∈J
xij = 1,∀i ∈ I;ξi ≥ 0; xij ∈ {0, 1},
(9)
To illustrate the refinement of the travel time prediction, we take the two functions in Figure 2(b)
as an example, and denote the linear and non-linear functions as Fj (x) and Fj (x), respectively. In
the first iteration, we use Fj (x) to replace fj (x), and we get a solution, i.e., x(1) to Equation (6). In
the next iteration, we use the first-order Taylor expansion of Fj (x) at x(1) to replace fj (x), which
is expressed as
f (k)
j (x) = Fj (x(k−1)
) + ∇Fj (x(k−1)
)(x − x(k−1)
), (10)
where ∇Fj (x(k−1)
) refers to the first-order derivative of Fj (x) atx(k−1)
, and k is the iteration number
(k is equal to 2 in this context). Consequently, we get an optimal solution to Equation (6), i.e., x(2)
.
We continue to search for a better solution around x(2) on Fj (x), until the objective function value
in Equation (6) does not significantly decrease. To guarantee that the algorithm locally searches
for the optimum on the linearized straight line in each iteration, we limit the searching area by
adding a constraint. Therefore, the optimization problem in the kth iteration is formulated as
min
x,t
t






















Q
i=1
(ξi + τi ·

j ∈J
(f k
j (x) +ψj (x)) · xij) ≤ t;

j ∈J
(f (k)
j (x) −Tr
ij) · xij ≤ ξi,∀i ∈ I;

j ∈J
xij = 1,∀i ∈ I;ξi ≥ 0; xij ∈ {0, 1};
− ϵ2 ≤

i ∈I
xij −

i ∈I
x (k−1)
ij ≤ ϵ2,∀j ∈ J,
(11)
where ϵ2 is a positive integer, denoting local search range.
5.2 Improvement on Computational Efficiency
In this subsection, we improve the computational efficiency by reformulating the route assignment
as a MILP problem. To better illustrate the idea, we take the route assignment considering both
arriving on time and total travel time in Equation (9) as an example, which is completely equal
to Equation (6). Route assignment in Equation (9) is an MIQP problem mainly due to fj (x) · xij
in the first two constraints. After unfolding, quadratic part comes from the term xkj · xij (k ∈ I,
and xkj is a component of xj). Since both xkj, xij ∈ {0, 1}, xkj · xij can be replaced by xij if k = i.
Therefore, the term xkj · xij is quadratic only if k  i. However, xkj · xij (k  i) can also be replaced
by a binary variable with two additional linear constraints.
There are four correct permutations for vector (xkj , xij , xkj · xij), i.e., (0,0,0), (0,1,0), (1,0,0), and
(1,1,1). And we introduce a new variable ykij ∈ {0, 1} to replace xkj · xij (k  i), where eight permutations for vector (xkj , xij , ykij) exist. Therefore we add two linear cuts, i.e., xkj + xij + ykij ≤ 1
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.                                                                                 
25:12 Z. Cao et al.
Fig. 3. Two testing road networks.
and −xkj − xij + 2ykij ≤ 0, to filter out the four faulty permutations (Yang et al. 2013). Then we
reformulate the MIQP problem in Equation (9) as follows:
min
x,t
t

























Q
i=1
(ξi + τi ·

j ∈J
(дj (z) + (γj +ψj (x)) · xij)) ≤ t;

j ∈J
(дj (z) + (γj −Tr
ij)xij) ≤ ξi,∀i ∈ I;
− xkj − xij + 2ykij ≤ 0,...,
xkj +xij +ykij ≤ 1,∀i, k ∈ I, k < i,∀j ∈ J;

j ∈J
xij = 1,∀i ∈ I;ξi ≥ 0; xij ∈ {0, 1},
(12)
where дj (z) = cj

i ∈I zij ; the size of z is same with that of x; zkj is equal to xij if k = i, and ykij
if k  i; ykij is equal to yikj in this scenario; and ψj (x) can be determined through a look-up table based on xij . Thus, Equation (12) is reduced to an MILP problem, which can be solved much
more efficiently than MIQP of similar scale (Fuchs et al. 2015). We wish to note that the MIQP-toMILP transformation approach also directly applies to the refinement of travel time prediction in
Equation (11).
6 EXPERIMENTATION
In this section, we conduct experiments in various settings to extensively compare our route guidance approach with existing methods, showing its advantages of increasing the chances of reaching destination before deadline and reducing total travel time for all vehicles. Accordingly, we first
introduce the experimental settings, then we focus on evaluating the performance of arriving on
time. After that, we test the performance when considering both arriving on time and total travel
time. Finally, we verify all the improvements (proposed in Section 5).
6.1 Road Networks and Parameter Settings
All experiments are conducted on the popular simulation of urban mobility platform,
SUMO (Behrisch et al. 2011). The two testing road networks are parts of two very dense cities,
Singapore and New York, respectively. Each road has two lanes, and their maps are given in
Figure 3, with the following properties summarized by SUMO: (1) network areas are 65,300m2
and 218,000m2, (2) numbers of road links are 507 and 1,121, and (3) numbers of intersections are
98 and 352.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.                                      
A Multiagent-Based Approach for Vehicle Routing 25:13
The configurations of vehicles are as follows: length is 5m; minimal gap is 2.5m; car following
model is Krauss (Behrisch et al. 2011); vehicle generation rate is 20veh/s; origins and destinations
are randomly generated; traffic light duration: Tд = Tr = 20s; vehicles will park and not occupy
road resources when reaching destinations. In addition, once origin and destination of a vehicle
are determined, an expected travel timeTe can be derived based on historical traffic data, which can
be used to describe different levels of deadlines as in Equation (5). Moreover, the proposed approach
needs historical expected travel time to evaluate some parts of a route. Therefore, before testing
our approach, we first randomly run the simulation for 250 times to get an expected travel time of
each road link, where vehicles simply travel along the shortest distance routes. Additionally, we
also use SVR (i.e., support vector regression) (Chang and Lin 2011) to learn the linear and nonlinear functions of predicted travel time through those random simulations, which are described
in Section 5.1. In particular, all experiments in this article are conducted on an ordinary PC with
Intel Core i7-3540M processor and 8.00GB RAM.
6.2 Comparative Performance When Only Considering Arriving on Time
To only consider the arriving on time property, we set all τi in Equation (6) as 0, which is equal
to the route assignment in Equation (4). Then we compare our algorithm with five different route
guidance methods: (1) the SD- (i.e., shortest distance) based method, which pre-computes a path
of shortest distance; (2) the LET-based method, which pre-computes a path of least expected travel
time based on historical traffic conditions; (3) the PTM-based method (Cao et al. 2016c), which
pre-computes a path by Equation (1); (4) the route information sharing (RIS) method, which constantly computes LET paths for vehicles at each intersection by cooperatively exploring their latest intentions of routes (Yamashita et al. 2005); and (5) the τ -rerouting method, claimed to be the
best-performing vehicle rerouting strategy (Jiang et al. 2014). Note that the first three methods precompute route guidance before vehicle departure, while the last two and our approach adaptively
provide route guidance for vehicles en route. Although O-D pairs are randomly generated, for each
specified O-D pair of a vehicle, we adopt the six methods to provide route guidance, respectively.
6.2.1 Different Levels of Deadlines. This experiment varies different levels of deadlines α: 0.4,
0.6, 0.8, 1.0, 1.2, and 1.4, with different numbers of vehicles: 400, 800, 1,200, and 1,600 on both networks. We run the simulation for 500 times under each setting, record the probability of arriving
on time for each vehicle, and plot the average in Figure 4 and Figure 5, respectively. We can observe
that on both networks, the average probabilities always increase with α for all six methods. It is natural, because a vehicle with a very loose deadline has higher chance to arrive on time even if it does
not follow any smart route guidance. Generally, the three pre-computation methods are inferior to
the three adaptive methods, because the optimality of pre-computed paths may not hold, especially
in highly dynamic traffic, e.g., New York network with 1,600 vehicles. However, the inferiority is
not obvious in extremely sparse or saturated traffic, such as Figure 4(a), Figure 4(d), and Figure 5
(a). In sparse traffic, vehicles rarely influence each other, and the shortest distance path is sufficiently satisfactory. In over-saturated traffic, vehicles almost cannot proceed even if they receive
adaptive guidance. Among the three pre-computation methods, PTM-based method achieves the
highest overall performance, because it takes deadline into account, although in an independent
manner. As for the three adaptive methods, our approach is always better than the other two in
terms of overall probabilities of arriving on time, especially in Figures 4(b) and (c) and Figures 5(b),
(c), and (d), where the traffic densities are moderate. In most cases, RIS method is better than the
τ -rerouting method, because it is centralized, where a global server constantly predicts the LET
path for each individual vehicle, based on latest intentions of routes. This superiority does not hold
for New York network with 1,600 vehicles, because the traffic density is comparatively high, and
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
25:14 Z. Cao et al.
Fig. 4. Different types of deadlines on Singapore map. [Note: α- deadline coefficient.]
Fig. 5. Different types of deadlines on New York map. [Note: α- deadline coefficient.]
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
A Multiagent-Based Approach for Vehicle Routing 25:15
Fig. 6. Different penetration rates. [Note: α- deadline coefficent; λ- penetration rate.]
the τ -rerouting method is especially effective where congestion is likely to occur. However, both
methods do not care about whether vehicles would be late regarding their preferred deadlines. On
the other hand, our approach cooperatively explores the deadlines of other vehicles and recursively provides guidance by solving an optimization problem, which aims to guarantee arriving at
destination before deadline for all concerned vehicles, thus achieving the best overall performance.
6.2.2 Different Penetration Rates. We test the three adaptive approaches5 with different penetration rates λ defined as the percentage of vehicles sharing their intentions. Those vehicle agents
that do not share their information will follow the routes pre-computed by Equation (1). We take
both networks with 1,200 vehicles as study cases, and adopt two penetration rates, λ = 0.8 and
0.4. From Figure 6, we notice that average probabilities for the three methods decrease as λ becomes smaller. It is natural, since route guidance in them all reply on intentions. Particularly, the
RIS method is centralized, and missing intentions of routes may globally influence route guidance of others, so the τ -rerouting method and our approach achieve better performance regarding
λ = 0.4, especially for tight deadlines on both networks, i.e., from α = 0.6 to 0.8. Although the τ -
rerouting method is decentralized, missing intentions may make infrastructure agents unable to
report congestion timely, which causes more vehicles to miss their deadlines. On the other hand, in
our approach, predicted travel time on assigned road link relies on both vehicle amount and road
link length. Missing intentions only partially influences our approach. Moreover, our approach
always takes deadline into account, and thus it achieves the best overall performance for different
penetration rates.
5The three pre-computation methods do not involve intention sharing, and it makes no sense to test penetration rates for
them.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
25:16 Z. Cao et al.
Fig. 7. Different compliance rates. [Note: α- deadline coefficent; ρ- compliance rate.]
Fig. 8. Different percentages of tight deadlines. [Note: Ptight- percentage of tight deadlines.]
6.2.3 Different Compliance Rates. We further test the three adaptive approaches with different
compliance rates ρ defined as the percentage of vehicles following the route guidance by infrastructure agent. We take both networks with 1,200 vehicles as study cases, and adopt two compliance rates, ρ = 0.8 and 0.4, the results of which are plotted in Figures 7(a) and (b), respectively. We
would like to note that the three adaptive approaches in Figure 4(c) and Figure 5(c) refer to ρ = 1.
Combining those figures together, we notice that average probabilities for the three methods on
both networks decrease as ρ becomes smaller. However, our approach achieves the highest overall
performance for each setting, because it takes arriving on time into account, although some of the
vehicles may not follow the guidance. We also observe that the τ -rerouting method in Figure 7(a)
has lower probability, especially for α = 0.8 and ρ = 0.4. It happens because vehicle density is
comparatively higher on Singapore network, where congestion is likely to happen. If most of the
vehicles do not follow the rerouting, then they may have to stay in congestion for a longer time.
Generally, our approach will achieve higher probability of arriving on time as ρ increases, which
provides convincing incentives for vehicles to follow the route guidance.
6.2.4 Different Percentages of Tight Deadlines. We take both networks with 1,200 vehicles as
study cases to further test our approach against different percentages of tight deadlines. In this
situation, α is set as 0.8 for a tight deadline and 1.2 for a loose deadline. Their percentages are
Ptight and 1-Ptight. In Figures 8(a) and (b), as Ptight increases, the average probabilities for the three
pre-computation methods drop more quickly on Singapore network, because its traffic density is
comparatively high, where vehicles always influence each other. There is only slight decrease for
our approach on both networks, which is better than the other two adaptive methods. Although the
RIS method on Singapore network is competitive to our approach, we highlight that the RIS method
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
A Multiagent-Based Approach for Vehicle Routing 25:17
Fig. 9. Performance considering both arriving on time and total travel time. [Note: Ptight- percentage of tight
deadlines; τi- weight for total travel time.]
is centralized, becoming prohibitively time-consuming as network size and vehicle number scale
up.
6.3 Overall Performance When Considering Both Arriving
on Time and Total Travel Time
We further test our approach considering both the arriving on time and total travel time at the
same time, where τi in Equation (6) is 0 only if αi is 0. To simplify the illustration, we only compare
all the adaptive approaches. To show the advantages brought by considering both arriving on
time and total travel time, we also compare it with the one that only considers arriving on time
(i.e., we enforce τi to be 0). Moreover, we use the two networks with 1,200 vehicles as study cases.
Note that τi  0 refers to the route assignment in Equation (6), which considers both arriving
on time and total travel time. And corresponding average probabilities of arriving on time and
average total travel time against different percentages of tight deadlines are all plotted in Figure 9.
From the four figures, we observe that the results for Singapore network and New York network
share the similar pattern. Therefore, we emphasize on the analysis for Singapore network. From
Figure 9(a), we notice that, as Ptight increases from 0 to 1.0, the average probability of arriving on
time decreases for all methods. It is natural, since the deadlines of most vehicle agents become
tighter as Ptight increases. However, the average probabilities of arriving on time for τi = 0 and
τi  0 are much higher than those of the other two methods. It happens because the τ -rerouting
method and the RIS method do not take arriving on time into account. On the other hand, we
notice that the average probabilities of τi = 0 are higher than that of τi  0 as Ptight increases from
0.6 to 1. It happens because all vehicle agents will reduce the total travel time to some extent, and
those tight deadlines are likely to be missed due to influence from each other for τi  0. However,
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.    
25:18 Z. Cao et al.
Fig. 10. Refinement of prediction, Singapore. [Note: Ptight- percentage of tight deadlines.]
the difference of the probabilities is very slight for the two methods. On the other hand, from
Figure 9(b), we observe that, comparing the method of τi  0 with τi = 0, the average total travel
time of the former is much lower than that of the latter, especially as Ptight increases from 0 to 0.6.
That is because the route assignment in Equation (4) does not consider the total travel time. And
if the deadlines of most vehicle agents are loose, Equation (4) will randomly output a route as long
as it guarantees arriving at the destination before the deadline, which is likely to be a detoured
path and cause additional travel time. To the contrary, the second objective term in Equation (6)
will help to reduce the additional travel time while increasing the chance of arriving on time,
especially for the case of loose deadlines. As Ptight continues to increase, the two methods will
achieve similar performance, because in the case of tight deadlines, the method of τi = 0 generally
will not cause the additional travel time any more. Additionally, the total travel time metric is
also helpful for preventing long delay, which is a kind of sacrifice made for others. Without this
metric, some vehicle agents may experience unexpectedly long delay as the original arriving on
time metric cares more about whether vehicle agents arrive on time than how long they might be
delayed. This can be indicated by Figures 9(a) and (b), especially for Ptight from 0.4 to 0.8, where
the probabilities of arriving on time are decreased a bit, but the total travel time is reduced more
obviously.
On the other hand, we do not observe significant changes with Ptight for the τ -rerouting method
and RIS method, because they do not provide route guidance based on the deadline. At the same
time, we notice that only the RIS method achieves slightly better performance than our method
of τi  0 regarding the average total travel time, because the former is centralized, which relies
on the global real-time information to directly reduce the total travel time. And it is more costly
compared with our method of τi  0. Besides, the average probabilities of arriving on time for the
RIS method is also lower than that of our method.
6.4 Improved Performance When Considering Both Arriving
on Time and Total Travel Time
We conduct experiments to verify the improvements on travel time prediction and computation
efficiency proposed in Section 5.
6.4.1 Refinement of Travel Time Prediction. We proposed to refine the predicted travel time on
the assigned road link by iteratively linearizing a more accurate learned function. We adopt the
Singapore network with 1,200 vehicles as a study case to investigate this improvement to the route
assignment (i.e., the original route assignment is formulated as Equation (6), and the refinement
is formulated as Equation (11)). All the results regarding the average probabilities of arriving on
time and average total travel time are plotted in Figures 10(a) and (b), respectively.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.   
A Multiagent-Based Approach for Vehicle Routing 25:19
Table 2. Average Computation Time (s)
Singapore New York
400 800 1,200 1,600 400 800 1,200 1,600
MIQP 3.29 3.81 7.49 13.34 2.18 1.87 3.87 7.75
MILP 0.62 0.75 0.86 2.55 0.39 0.46 0.77 0.96
From Figures 10(a) and (b) we observe that the refinement of travel time prediction improves
the average probability of arriving on time and reduces the average total travel time (except for
Ptight = 0.6 regarding the total travel time.6 Nevertheless, the difference is not significant, which is
acceptable). This advantage comes from the fact that the proposed method approximates a nonlinear function, which is more accurate than the previous linear prediction. We also notice that,
compared with other values, the improvement for Ptight = 0 and Ptight = 0.2 regarding the average probabilities of arriving on time are not that obvious. It happens because most vehicles have
loose deadlines for Ptight = 0 and Ptight = 0.2, and they still have higher chances of arriving on time
although the infrastructure agents perform route assignment based on the inaccurate linear prediction of travel time. However, as Ptight increases, this improvement becomes more obvious. To
the contrary, the reduction of the total travel time is much more obvious for Ptight = 0, 0.2, and 0.4
in comparison with others. It happens because, if most of the deadlines are loose, then there would
be much room to reduce the travel time, where a more accurate travel time prediction can better
result in less total travel time compared with an inaccurate prediction function.
6.4.2 Improvement of Computation Efficiency. Original route assignment considering both arriving on time and total travel time is formulated as an MIQP problem in Equation (6), and we
reformulate it as an MILP problem in Equation (12). To show the efficiency improvement, we use
Pyomo (www.pyomo.org) to, respectively, solve the two problems regarding the same route assignment at each intersection and record the average computation time for both networks in Table 2.
We see that as vehicle number increases, the average computation time becomes longer for both
problems. This happens because more vehicles are likely to request for route guidance at an intersection if traffic density is larger, thus the scales of the two optimization problems both increase,
and longer computation time is needed. That also explains why the computation time on Singapore
network is longer than that of New York network. However, for both networks, MILP problem can
be more efficiently solved than MIQP problem of similar scale, especially for Singapore network
with 1,600 vehicles, which is around 6 times faster.
7 CONCLUSION AND FUTURE WORK
In this article, we propose a semi-decentralized multiagent-based route guidance approach to consider both arriving on time and total travel time. It is formulated as a route assignment problem at
each road intersection by leveraging intentions of the vehicle agents. Besides, we also improve the
proposed route guidance approach in the aspects of travel time prediction and computational efficiency, respectively. Experimental results confirm its superior performance over existing methods.
As the chance of vehicles’ arriving on time is increased, drivers’ satisfaction gets improved, which
also reduces accident rate due to drivers’ frustration and impatience. At the same time, as the average total travel time is decreased, fuel consumption and air pollution can also be accordingly
reduced. These are the important missions of the intelligent transportation and sustainable urban
development. We would like to highlight that we did not claim that our approach will definitely
reach the global optima, and we did not either compare it with the centralized approach, which
6It might be caused by the fact that the refinement takes more effects on the arriving on time than the total travel time.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 3, Article 25. Publication date: December 2017.
25:20 Z. Cao et al.
exactly corresponds to our approach. Although this centralized approach may lead to better performance regarding the arriving on time, it should consider all the influence between any vehicles
on any road links at any time, which is difficult to formulate and solve.
In the future, we will develop a more intelligent algorithm to calculate the weight τi for total
travel time, which can reduce the total travel time while not decreasing the chance of arriving on
time. At the same time, we will investigate the fixed historical O-D pairs instead of highly random
ones, which fit people’s daily routines. Besides, we will try road networks with less traffic lights or
intersections, e.g., Paris and Berlin, to investigate the influence of network topology and density
of infrastructure agents. Additionally, we will also consider the situation where the vehicle agents
set may their deadlines aggressively in a selfish manner.