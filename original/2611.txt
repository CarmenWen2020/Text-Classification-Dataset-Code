Machine learning and artificial intelligence techniques have been applied to construct online portfolio selection strategies recently. A popular and state-of-the-art family of strategies is to explore the reversion phenomenon through online learning algorithms and statistical prediction models. Despite gaining promising
results on some benchmark datasets, these strategies often adopt a single model based on a selection criterion (e.g., breakdown point) for predicting future price. However, such model selection is often unstable
and may cause unnecessarily high variability in the final estimation, leading to poor prediction performance
in real datasets and thus non-optimal portfolios. To overcome the drawbacks, in this article, we propose to
exploit the reversion phenomenon by using combination forecasting estimators and design a novel online
portfolio selection strategy, named Combination Forecasting Reversion (CFR), which outputs optimal portfolios based on the improved reversion estimator. We further present two efficient CFR implementations based
on online Newton step (ONS) and online gradient descent (OGD) algorithms, respectively, and theoretically
analyze their regret bounds, which guarantee that the online CFR model performs as well as the best CFR
model in hindsight. We evaluate the proposed algorithms on various real markets with extensive experiments.
Empirical results show that CFR can effectively overcome the drawbacks of existing reversion strategies and
achieve the state-of-the-art performance.
CCS Concepts: • Applied computing → Law, social and behavioral sciences; Economics; • Computing
methodologies → Artificial intelligence; Machine learning; Online learning settings;
Additional Key Words and Phrases: Portfolio selection, online learning, mean reversion, combination forecasting reversion, combination forecasting estimators
1 INTRODUCTION
Online portfolio selection (OLPS) aims to determine an investment allocation for a set of assets and
dynamically change it on the fly. Recent years have witnessed much research effort from artificial
intelligence and machine-learning researchers [11, 48, 49] to design OLPS strategy [1, 7, 14, 15, 24,
33] through online learning algorithms and statistical prediction models. Among them, one class
of representative and state-of-the-art studies is the reversion strategies [7, 29, 34, 38, 41], which
capture and utilize the mean or median reversion phenomena in the financial markets to maximize
the cumulative return on investment.
Though these reversion algorithms achieve promising results, they perform poorly on certain
datasets, e.g., DJIA [38, 41]. A key reason is that these strategies often select a single model and
ignore the non-stationary nature of financial time series [4], such as mean or median model, whose
prediction is based on a selection criterion (e.g., breakdown point) or general data characteristics
(e.g., noisy data and outliers) [29]. However, the issue of model selection is highly non-trivial
in time series analysis and forecasting. One major drawback of model selection is its instability,
which may cause an unnecessarily high variability in final estimation/prediction [60] and thus
likely lead to sub-optimal portfolios. Furthermore, the assumption of single-period prediction [33,
41] also leads to estimation error, thus making the performance extremely poor [34].
To address the above drawbacks, we propose a novel multi-period OLPS strategy named Combination Forecasting Reversion (CFR), which explicitly estimates the next price relative by combining
forecasting estimator and is more accurate than traditional simple mean/median estimators. To
handle the non-stationary characteristics of price time series, we first use the ARIMA model to
preestimate the next price [42]. Then, we apply online learning theory to find the optimal portfolios by exploiting the reversion property with the combination forecasting estimator. The proposed combination forecasting scheme in this work specifically aggregates four types of different
predictive models, including mean estimator [34], median estimator [29], ARMA [2], and ARIMA
models [42]. In particular, ARIMA can deal with the non-stationary characteristics of price time
series [42], while the median estimator is robust to noisy data and outliers [29]. Thus, we can apply
online learning algorithm with CFR for modeling non-stationarity of time series data with ARIMA
for OLPS and for dynamically improving the robustness of OLPS in complex scenarios. We also
develop two efficient implementations of the combination forecasting estimator based on online
Newton step (ONS) and online gradient descent (OGD) algorithms, and we analyze their regret
bounds theoretically, which guarantee that the online CFR strategy is provably as well as the best
CFR strategy in hindsight.
To the best of our knowledge, CFR is the first OLPS algorithm that exploits the reversion phenomenon by applying the combination forecasting estimator of aggregating multiple time series
predictive models with online learning theory. Though simple in nature, CFR is more robust than
existing algorithms and empirically achieves significantly better performance in terms of cumulative wealth. Besides, CFR is robust to different parameter settings and can withstand a reasonable
transaction cost.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:3
As a summary, the main contributions of this article include the following:
(1) We propose a novel multi-period OLPS strategy named CFR, which explicitly estimates
the next price relative via combination forecasting estimator and is more accurate than
simple mean/median estimators.
(2) We exploit two types of combination forecasting estimation based on ONS and OGD algorithms to obtain optimal approximal solution.
(3) We obtain the theoretical regret bound of the CFR algorithms, which guarantee that the
online CFR strategy is as good as the best CFR strategy in hindsight.
(4) We conduct extensive experiments to empirically evaluate the proposed CFR algorithms
by comparing with various state-of-the-art algorithms, in particular mean reversion
algorithms.
The rest of the article is organized as follows. Section 2 formulates the online portfolio selection
problem and reviews some related work. Section 3 presents the proposed algorithm and gives
some theoretical results. Section 4 empirically evaluates CFR’s efficacy on real markets. Section 5
summarizes the article.
2 PRELIMINARIES AND RELATED WORK
In this section, we first describe the problem setting and then introduce and analyze related work.
2.1 Problem Setting
Consider an investment task over a financial market with d assets for n trading periods. On the
tth period, the asset prices are represented by a close price vector pt ∈ Rd
+, and each element pi
t
represents the close price of asset i. The changes of asset prices are represented by a price relative
vector xt = (x1
t ,..., xd
t ) ∈ Rd
+, where xi
t indicates the ratio of close price to last close price of asset i
at the tth period, i.e., xi
t = pi
t /pi
t−1. Let us denote xn
1 = (x1,..., xn ) as the sequence of price relative
vectors for n periods.
At the beginning of the tth period, we diversify the capital among the d assets according to a
portfolio vector bt = (b1
t ,...,bd
t ) ∈ Rd
+, wherebi
t represents the proportion of wealth invested in the
asset i. Typically, we assume the portfolio is self-financed and no margin/short is allowed, which
means bt ∈ Δd , where Δd = {bt : bt ∈ Rd
+,
d
i=1 bi
t = 1}. The investment procedure is represented
by a portfolio strategy, that is, b1 = 1
d 1 and following sequence of mappings bt : (Rd
+)
t−1 → Δd ,
t = 2, 3,..., where bt = bt (xt−1 1 ) is the portfolio used on the tth trading period given past market
sequence xt−1 1 = (x1,..., xt−1). We then denote by bn
1 = (b1,..., bn ) the portfolio strategy for n
periods.
On the tth trading period, a portfolio bt achieves a portfolio period return st , that is, the wealth
increases by a factor ofst = bT
t xt = d
i=1 bi
txi
t . Since we reinvest and adopt price relative, the portfolio wealth would multiplicatively grow. Thus, after n trading periods, a portfolio strategy bn
1 produces a portfolio cumulative wealth Sn, which increases the initial wealth by a factor of n
t=1 bT
t xt ,
that is, Sn (bn
1 , xn
1 ) = S0
n
t=1 (bT
t xt ), where S0 is the initial wealth, which is set to 1 in this article.
The OLPS problem can be formulated as a sequential decision task. The portfolio manager aims
to design a strategy bn
1 to maximize the portfolio cumulative wealth Sn. The portfolios are selected
in a sequential fashion. In each period t, given the historical information, the manager learns to
select a new portfolio vector bt for the next price relative vector xt , where the decision criterion
varies among different managers. The resulting portfolio bt is scored based on the portfolio period
return of st . Such procedure repeats until the end of trading periods and the portfolio strategy is
finally scored by the cumulative wealth Sn.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.    
58:4 D. J. Huang et al.
Table 1. Description of Notations
Notation
d: number of assets
n: trading periods to be invested
pi
t : close price of asset i
pt : close price vector
xi
t = pi
t /pi
t−1: ratio of close price to last close price of asset i
xt = (x1
t ,..., xd
t ) ∈ Rd
+: price relative vector
xn
1 = (x1,..., xn ): sequence of price relative vectors for n periods
x˜t
i : predictive value of ith estimator on tth period
Δd = {bt ∈ Rd
+ :
d
i=1 bi
t = 1}: portfolio is self-financed and no margin/short is allowed
bi
t : proportion of wealth invested in the asset i
bt = (b1
t ,...,bd
t ) ∈ Rd
+: portfolio vector
bn
1 = (b1,..., bn ): sequence of portfolio vectors for n periods
st : portfolio period return
Sn: portfolio cumulative wealth
A0, B0, C0: exact price sequences
A1, B1, C1: sequences contaminated by an outlier of 10
“?”: price to be estimated
Acc: accurate target price
k: number of estimators
wi : weight of ith estimator
w: weight vector
t : loss function
As with most of the existing works [34], in the above model, we make several general
assumptions:
(1) Transaction cost: We assume no transaction cost or taxes in this OLPS model;
(2) Market liquidity: We assume that one can buy and sell required quantities at last closing
price of any given trading period;
(3) Impact cost: We assume that market behavior is not affected by a OLPS strategy.
These assumptions are not trivial, which has been explained in all existing work (refer to Section 2.2 for detail). We will empirically analyze the effects of transaction costs in Section 4.
We also summarize all the frequently used symbols that appear in the above model and the rest
of the article in Table 1, to make it easy to follow.
2.2 Related Work
OLPS is an important topic in online finance [32, 56] and in the AI community [1, 24, 29, 34, 36, 38,
54]. It has been extensively explored following the principle of Kelly investment [31]. Constantly
rebalanced portfolios (CRP) keeps fixed weight for each asset on all periods. Best CRP (BCRP) [14],
the best CRP strategy over a whole market sequence in hindsight, is an optimal strategy if the
market is i.i.d. [16]. Successive CRP (SCRP) [22] and online Newton step (ONS) [1] implicitly estimate
the next price relative via all historical price relatives with a uniform probability.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.  
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:5
Besides estimation via all historical price relatives, some strategies predict the next price relatives by selecting a set of similar price relatives. Nonparametric kernel based moving window (BK )
[24] measures the similarity by kernel method. Following the same framework, nonparametric
nearest neighbor (BN N ) [25] locates the set of price relatives via nearest-neighbor method. Li et al.
[36] proposed correlation-driven nonparametric learning (CORN), which measures the similarity
via correlation.
Moreover, another type of estimation is to predict the next price relative via a single-value prediction. Exponential gradient (EG) [28] estimates next price relative as last price relative. Passiveaggressive mean reversion (PAMR) [41] and confidence-weighted mean reversion (CWMR) [38] estimate next price as the inverse of last price relative, which is in essence the mean reversion principle. Recently, Li and Hoi [34, 37] proposed online moving average reversion (OLMAR), which
predicts the next price relative using moving averages and explores the multi-period mean reversion. Huang et al. [29] proposed a robust median reversion (RMR) algorithm by using L1-median
estimator. Some other algorithms do not focus on estimation. Universal portfolios (UP) [14, 15]
is the historical performance-weighted average of all CRPs. Anti-correlation (Anticor) [7] adopts
the consistency of positive lagged cross-correlation and negative autocorrelation to adjust the
portfolio.
2.3 Analysis of Existing Work
We analyze the mean reversion strategies PAMR, OLMAR, and RMR, which belong to “follow the
loser” category [35] and are closely related to this article. Let us consider the estimation methods
of existing work. In practice, a Kelly portfolio manager [31, 52] first predicts x˜t+1 in terms of k
possible values x˜ 1
t+1,..., x˜ k
t+1 and their corresponding probabilities p1,...,pk , where x˜i
t+1 denotes
one possible combination vector of individual price relative predictions. Then he/she can figure
out a portfolio by maximizing the expected log return on these possible combinations, i.e.,
bt+1 = arg max b∈Δd

k
i=1
pi log 
b · x˜
i
t+1

.
As different estimation methods result in different x˜i
t+1 and pi and leading to different portfolios,
an accurate estimation method is crucial to the success of a strategy.
PAMR implicitly assumes x˜ 1
t+1 = 1
xt withp1 = 1, i.e., it estimates next price relative as the inverse
of last price relative. From the price perspective [34], it implicitly assumes that next price p˜t+1 will
revert to last price pt−1,
x˜t+1 = 1
xt
⇒ p˜t+1
pt
= pt−1
pt
⇒ p˜t+1 = pt−1,
where x and p are all vectors and the above operations are element-wise. Rather than p˜t+1 =
pt−1, OLMAR estimates the next price as a moving average at the end of the tth period, i.e.,
p˜t+1 = MAt (w) = 1
w
t
i=t−w+1 pi , where MAt (w) denotes the moving average with a w-window.
RMR estimates the next price as a median at the end of the tth period, i.e., p˜t+1 = L1medt+1 (w) =
arg minµ
w−1 i=0 pt−i − µ2, where · is L2 norm.
These estimators pursue simple mean value evaluation or robustness to noise and outlier. However, they do not consider the statistically intrinsic properties of the data and prediction model.
There are two potential problems with the estimation process. First, stock price sequences are always non-stationary, and hence the estimated values of the existing mean reversion are not very
accurate. Second, almost all the mean or median reversion algorithms use single prediction model,
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.  
58:6 D. J. Huang et al.
Table 2. Illustration of Different Price Estimation Methods on Toy Data
Price: t0 → t1 → t2 → ... Acc OLMAR RMR CFR
A0 : 1, 2, 4, 8, ? 16 3.75 3 16
A1 : 1, 2, (10), 8, ? 16 5.25 5 15.16
B0 : 1, 2, 4, 2, 4, 8, ? 4 3.5 3 4
B1 : 1, 2, 4, 2, (10), 8, ? 4 4.5 3 3.98
C0 : 1, 0.5, 0.25, 0.5, 0.25, 0.125, ? 0.25 0.44 0.25 0.25
C1 : 1, 0.5, 0.25, 0.5, (10), 0.125, ? 0.25 2.06 0.25 0.25
Note: A0 and A1, B0 and B1, and C0 and C1 represent price sequences. A0, B0, and C0
are the exact price sequences, and A1, B1, and C1 are price sequences contaminated by
an outlier of 10. “Acc” is the accurate target price for forecasting.
which usually has unstable estimated values and thus makes the non-optimal portfolios. These
two drawbacks motivate the proposed methods in this article.
3 COMBINATION FORECASTING REVERSION STRATEGY
In this section, before we present the proposed CFR strategy, we first consider a toy example
to show the drawbacks of non-stationary price sequences and the unstability of single-model
prediction.
3.1 Motivating Example
The toy market consists of one volatile stock, and ti (i≥0) denotes the period that requires estimation. Several sequences of price time series are listed in Table 2. Note that the price sequences are
non-stationary due to the long-term trend. A0 and A1 are exponential-type price sequences and
their prices change by exponential factor 2. B0 and B1 are growth-oriented price sequences and
their prices change by sequent factor of 2, 2, 1
2 , 2, 2, 1
2 ,.... For example, let Pti be the price of the
ith period, then Pt1 = Pt0 × 2 = 1 × 2 = 2, Pt2 = Pt1 × 2 = 2 × 2 = 4, Pt3 = Pt2 × 1
2 = 4 × 1
2 = 2,....
C0 and C1 are attenuation-type price sequences, and the price changes by sequent factor of 1
2 , 1
2 , 2, 1
2 , 1
2 , 2,.... Moreover, A0, B0, and C0 are exact price sequences, while A1, B1, and C1 are
the sequences contaminated by an outlier of 10. “?” denotes the price to be estimated and Acc is
the accurate target price. The estimated prices clearly show that the next prices estimated by either OLMAR or RMR (except C0, C1) are far away from the accurate values, which thus leads to
inaccurate price and sub-optimal portfolios.
In contract to OLMAR and RMR, the estimated next prices of different scenarios by the proposed CFR approach in Table 2 (the detailed calculation is omitted) are clearly more accurate. In
particular, for all types of price sequences A0, A1, B0, B1, and C0, C1, our new estimator is much
closer to the targets than OLMAR and RMR, indicating that the new method can better deal with
non-stationary multiple-period price sequences. For the contaminated price sequences A1, B1, and
C1, CFR can handle noise and outliers as well as RMR, and it is also closer to the target prices than
other estimators, validating its robustness to noise and/or outliers. Although the toy example has
only a single asset, it can be easily extended to the scenario of multiple assets. The key motivation
behind the proposed CFR strategy is that the financial market is often highly complex and very
difficult to make accurate forecasting by any single forecasting model. Therefore, instead of using
a single model for forecasting, we are prepared to explore the combination forecasting [60], which
is often considered as a successful alternative for time series forecasting in References [5, 55].
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:7
3.2 Formulation
To better exploit the reversion property meanwhile avoid suffering from the limitations of existing strategies, we propose a new strategy for online portfolio selection, named Combination
Forecasting Reversion (CFR), which is based on the idea of obtaining the next price relative x˜t+1
by using Combination Forecasting (CF) estimator, and then maximize the expected return b · x˜t+1
while keeping last portfolio information via regularization.
Specifically, rather than p˜t+1 = MAt (w) or p˜t+1 = L1medt+1 (w) obtained by single estimator, it
estimates next price by combining multiple estimators at the end of the tth period, i.e., p˜t+1 =
CFt+1 (k) = k
i=1wip˜t+1 i . Then, the expected price relative with the CF estimator is
x˜t+1 (k) = CFt+1 (k)
pt
=

k
i=1
wix˜
t+1 i , (1)
where k is the number of estimators,wi is the weight of the ith estimator, and x˜t+1 i is the predictive
value of the ith estimator on (t + 1)th period.
The combination forecasting community has been extensively explored [13, 30, 57]. In general,
there are two modes for combination forecasting, that is, weight synthesis and regional synthesis,
where the former is widely used in research community. In this regard, there are many ways to
determine the combined weight, such as arithmetic mean, mean square reciprocal and variance
reciprocal [3, 53, 60]. In this article, to estimate the next price relative x˜t+1 of Equation (1), we will
calculate the CF estimator of historical prices based on online learning theory.
Online learning is a method of machine learning in which data becomes available in a sequential
order and is used to update our best predictor for future data at each step, as opposed to batch
learning techniques that generate the best predictor by learning on the entire training data set at
once. Online learning is generally defined in a game-theoretic framework, where the data, rather
than being chosen stochastically, are chosen arbitrarily, possibly by a powerful adversary with full
knowledge of our learning algorithm. In this article, the procedure of online setting is as follows.
At period t, we need to make a prediction p˜t for the price, after which the real price pt is
revealed, and we suffer a loss denoted by t (pt, p˜t ). Our goal is to minimize the sum of losses over
a predefined number of iterations T . A reasonable benchmark is to try to be not much worse than
the best case. More precisely, let
t (w) = t (pt, p˜t (w)) = t

pt,

k
i=1
wip˜
t
i


(2)
denote the loss of the prediction given by CF estimator with weight w. We define the regret as
RegretT (Alg) =

T
t=1
t (wt ) − min
w

T
t=1
t (w). (3)
We wish to obtain an efficient algorithm, whose regret grows sublinearly in T , corresponding to
an average per-round regret going to zero as T increases. Below, we present two combination
forecasting estimators by using two popular online convex optimization methods: the first is so
called “Combination Forecasting based on Online Newton Step” [26, 27, 59], we name it as CF-ONS;
the second is so called “Combination Forecasting based on Online Gradient Descent” [26, 27, 59],
we name it as CF-OGD. These two estimators are illustrated in Section 3.3.
To this end, we can calculate the expected price relative following the idea of so called combination forecasting reversion. Based on the two combination forecasting estimators, we can infer
two types of CFR by Equation (4):
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.         
58:8 D. J. Huang et al.
Combination Forecasting Estimators: CF-ONS and CF-OGD
x˜t+1 (k) =
⎧⎪⎪⎪⎪⎪⎪⎪⎪
⎨
⎪⎪⎪⎪⎪⎪⎪⎪
⎩
CF-ONS(k)
pt
=

k
i=1
wONS
i x˜
t+1 i
CF-OGD(k)
pt
=

k
i=1
wOGD
i x˜
t+1 i
, (4)
where k is the number of estimators,wONS
i andwOGD
i are the weights of the ith estimator obtained
by CF-ONS and CF-OGD, respectively.
Based on the obtained price relative x˜t+1 in Equation (4), we further adopt the idea of an effective online learning algorithm, that is, passive-aggressive (PA) learning [17] to exploit combination forecasting reversion. Generally proposed for classification, PA passively keeps the previous
solutions if the classification is correct, while aggressively approaches a new solution if the classification is incorrect. Thus, following similar idea to PAMR/OLMAR [34, 41], we can formulate the
optimization as follows.
Optimization Problem: CFR for OLPS
bt+1 = arg min b∈Δd
1
2
b − bt 2 s.t. b · x˜t+1 ≥ ϵ (5)
The above optimization problem attempts to find an optimal portfolio by minimizing the deviation
from last portfolio bt subject to b · x˜t+1 ≥ ϵ. On the one hand, if the constraint is satisfied, that is,
the expected return is higher than a threshold, then the resulting portfolio equals to the previous
portfolio. On the other hand, if the constraint is not satisfied, then the formulation will figure out
a new portfolio such that the expected return is higher than the threshold, while the new portfolio
is not far from the last one. This explicitly reflects the idea of exploiting reversion principle in our
OLPS method. In fact, x˜t+1 is the price relative estimated via these estimators, while the constraint
b · x˜t+1 ≥ ϵ means that next price will revert to the estimators and guarantees a certain return on
the portfolio.
3.3 Algorithms
Before presenting the CF-ONS and CF-OGD estimators for the combination forecasting of historical prices, we need to define the following parameters. The decision set K is the set of available
candidates (k-dimensional vector) at each iteration, which is defined as K = {w ∈ Rk :
k
j=1wj =
1,wj ∈ [0, 1]}. We denote by D the diameter of K, and bound as, D = supw1,w2 ∈K  w1 − w2 2 = √
k. Next, we denote by G the upper-bound of  ∇t (w)  for all t and w ∈ K. This parameter
depends on the loss function, and its computation is done accordingly. For example, for squared
loss, we get that G = D. Finally, we denote by α the exp-concavity parameter of the loss functions
{t }
T
t=1, i.e., it holds that exp(−αt (w)) is concave for all t. This parameter is relevant only for
exp-concave loss functions, and its computation is also done according to the loss function considered. It can be shown that α = 1
2k when the squared loss is considered. Using these parameters,
the CF-ONS and CF-OGD estimators are illustrated by Algorithm 1 and 2, respectively.
Algorithm 1 uses ONS to provide CF estimation. It shows how to choose wt in each iteration,
when the loss functions {t }
T
t=1 are assumed to be α-exp-concave in w. There are two key updates
as follows:
Aj = Aj−1 + ∇j∇T
j , wj+1 =

Aj
K

wj − 1
η
A−1
j ∇j
	
.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.     
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:9
ALGORITHM 1: CF-ONS(k, η)
Input: Parameter k≥2, learning rate η.
Output: Estimated x˜t+1.
Procedure:
Initialization: w0 ∈ K, A0 = εI;
for j = 1 to t + 1 do
Predict next price vector:
p˜j (wj ) = k
i=1 wj
i p˜
j
i ;
Receive pj and incur loss j (wj );
Let ∇j = ∇j (wj ), update the matrix:
Aj = Aj−1 + ∇j∇T
j ;
Update the parameter vector:
wj+1 = Aj
K (wj − 1
ηA−1
j ∇j );
end
x˜t+1 = p˜t+1 (wt+1)/pt .
Here, Aj
K is the projection in the norm induced by Aj , i.e., Aj
K (y) = arg minx ∈K (x − y)
TAj (x −
y). In case the dimension k of At is large, we note that its inverse can be efficiently re-computed
after each update using the Sherman-Morrison formula, i.e.,
A−1
t = 
At−1 + ∇t∇T
t
−1
= A−1
t−1 − A−1
t−1∇t∇T
t A−1
t−1
1 + ∇T
t A−1
t−1∇t
.
Algorithm 2 for choosing wt at each time point is based on OGD. Specifically, it updates the
weight wt by
wj+1 =

K

wj − 1
η
∇j
	
.
Here, K refers to the Euclidean projection onto K, i.e., K (y) = arg minx ∈K  x − y 2. This
algorithm is applicable to general convex loss functions, as well as to exp-concave ones. It is computationally simpler but has a somewhat worse theoretical result compared to the previous one,
when considering an exp-concave loss function.
After obtaining the next price relative, we can obtain the final portfolio selection formula by
solving the Optimization Problem. Note that Equation (5) is a convex optimization problem with
constrained, and thus, it can be solved directly via the generalised Lagrange multiplier method
[8]. Finally, parameter λt+1 and portfolio b are updated as follows. Please refer to Appendix A.1
for detailed derivation.
Proposition 3.1. The solution of optimization problem without considering the non-negativity
constraint is
bt+1 = bt − λt+1 (x˜t+1 − xt+1 · 1),
where xt+1 = 1
d (1 · x˜t+1) denotes the average predicted price relative and λt+1 is the Lagrangian multiplier calculated as
λt+1 = min 

0, x˜t+1bt − ϵ
x˜t+1 − xt+1 · 12

.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.        
58:10 D. J. Huang et al.
ALGORITHM 2: CF-OGD(k, η)
Input: Parameter k≥2, learning rate η.
Output: Estimated x˜t+1.
Procedure:
Initialization: w0 ∈ K;
for j = 1 to t + 1 do
Predict next price vector:
p˜j (wj ) = k
i=1 wj
i p˜
j
i ;
Receive pj and incur loss j (wj );
Let ∇j = ∇j (wj ), update the parameter vector:
wj+1 = K (wj − 1
η ∇j );
end
x˜t+1 = p˜t+1 (wt+1)/pt .
ALGORITHM 3: CFR(ϵ, x˜t+1, bt )
Input: Reversion threshold ϵ>1, predicted next price relative vector x˜t+1, current portfolio bt .
Output: Next portfolio bt+1.
Procedure:
Calculate the following variable:
λt+1 = min 
0, x˜ t+1bt −ϵ
x˜ t+1−xt+1 ·12

;
Update the portfolio:
bt+1 = bt − λt+1 (x˜t+1 − xt+1 · 1);
Normalization:
bt+1 = arg min b∈Δd
b − bt+1 2.
Note that, to ensure that the portfolio is non-negative, we finally project the above portfolio to
the simplex domain [20], as shown in the last step of Algorithm 3.
To sum up, Algorithms 1 and 2 illustrate the CF estimation, where the price relatives x˜t+1 are
based on ONS and OGD, respectively. Note that in Algorithms 1 and 2, in practice, we first use four
basic estimators, MA [34], L1-median [29], online ARMA [2], and online ARIMA [42] to calculate
their next price p˜t+1, respectively, and then use the results to obtain the CF estimation. Algorithm 3
shows the proposed CFR procedure, which exploits the online PA learning. Finally, Algorithm 4
presents the overall CFR strategy (including CFR-ONS and CFR-OGD, which are based on CF-ONS
and CF-OGD, respectively) for OLPS under the generic framework. Below, we give the theoretical
results of regret for the main Algorithm 4.
3.4 Theoretical Results
Before giving the main theorems, we first put some necessary assumptions:
(1) The loss function {t }
T
t=1 are α-exp-concave in CFR-ONS. While the loss functions {t }
T
t=1
are strongly convex in CFR-OGD.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.      
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:11
ALGORITHM 4: CFR Strategy for Online PS
Input: Reversion threshold ϵ>1, window size w≥2, market sequence xn
1 .
Output: Cumulative wealth after n periods Sn.
Procedure:
Initialization: b1 = 1
d 1, S0 = 1, p0 = 1;
for i = 1 to n do
pi = xi · pi−1;
end
for t = 1, 2,...,n do
Receive stock price: xt ;
Update cumulative return: St = St−1 × (bt · xt );
Predict next price relative vector:
x˜t+1 = CF-ONS(k, η) or CF-OGD(k, η);
Update the portfolio:
bt+1 = CFR(ϵ, x˜t+1, bt ).
end
(2) The weight vector w satisfy w ∈ K. It is also a standard assumption, and the decision set
is generally set to be bounded.
(3) The price is bounded by a constant that is independent of T . Without loss of generality,
we assume that | pi
t | < 1 for all t.
For Algorithm 4, we can prove the following theorems, and thus bound the regrets of CFRs.
Please refer to Appendices A.2 and A.3 for detailed proofs.
Theorem 3.2. Let k ≥ 1, and set A0 = εIk , ε = 1
η2D2 , η = 1
2 min{4GD, α}. Then, for any data sequence {pt }
T
t=1 that satisfies the assumption 3, Algorithm 1 generates an online sequence {wt }
T
t=1, for
which the following holds:
RegretT (CFR-ONS) ≤ O(log(T )). (6)
Theorem 3.3. Let k ≥ 1, and set η = 1
Ht . Then, for any data sequence {pt }
T
t=1 that satisfies the
assumption 3, Algorithm 2 generates an online sequence {wt }
T
t=1, for which the following holds:
RegretT (CFR-OGD) ≤ O(logT ). (7)
Remark 1. It should be noted that the combination method used in this article like ensemblelearning method in machine learning. Specifically, from the combination of learning algorithms
[18], the CFR is equivalent to the Stacking [10] in ensemble learning. Ensemble learning [21, 45,
51, 58] is an important method in machine learning, it virtually shares the same theme as portfolio
selection [43, 49]: namely, diversification. In Section 4, we will compare the CFR with two classical
ensemble-learning algorithms (Bagging and AdaBoost) for online portfolio selection.
4 EXPERIMENTS
In this section, we use the cumulative wealth, statistical test, and other performance criteria to measure the performance of the proposed CFR algorithms and evaluate their effectiveness, by comparing with 14 existing strategies and 2 classical ensemble-learning methods [45], including the family
of state-of-the-art strategies by exploiting reversion properties. We also conduct experiments on
online ARIMA algorithm as a comparison, which is called OLAR.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
58:12 D. J. Huang et al.
Table 3. Summary of Real-World Benchmark Datasets
Dataset Region Time Frame #Days #Assets
NYSE(O) U.S. 07/03/1962–12/31/1984 5,651 36
NYSE(N) U.S. 01/01/1985–06/30/2010 6,431 23
DJIA U.S. 01/01/2001–01/14/2003 507 30
MSCI Global 04/01/2006–03/31/2010 1,043 24
4.1 Datasets
In our experiments, we adopt the historical daily prices in stock markets, which are easily obtained from Yahoo Finance.1 Data from other types of markets, such as high-frequency intra-day
quotes, currency, and commodity markets, are either expensive or hard to obtain and process,
which can reduce the experimental reproducibility. Here, we test the portfolio strategies on four
public datasets from real markets,2 which are summarized in Table 3. For more detailed data statistics about the datasets, refer to Appendix A.4.
The first dataset “NYSE(O)” is the well-known NYSE dataset, one “standard” dataset pioneered
by Cover [14] and followed by most subsequent researchers on the field of on-line portfolio selection in References [1, 24, 28]. This dataset contains 5,651 daily price relatives of 36 stocks in
New York Stock Exchange (NYSE) for a 22-year period from July 3, 1962 to December 31, 1984.3
The principle of the data collection is to first rank the NYSE stocks by market cap and then select
the first 36 stocks, such as Coca-Cola Bottling Co. Consolidated (COKE), 3M Company (MMM),
International Business Machines Corporation (IBM), and so on, as components.
The second dataset “NYSE(N)” is the extended version of NYSE(O) and is collected by Gabor ´
Gelencser and Li Bin [ ´ 36].4 For consistency, this dataset is from January 1, 1985 to June 30, 2010,
which consists of 6,431 trading days and covers the global financial crisis in 2008. It is worth
noting that this new dataset consists of 23 stocks rather than the previous 36 stocks owing to
amalgamations and bankruptcies, such as Sears and Kmart. All self-collected price relatives are
adjusted for splits and dividends, which is consistent with the previous “NYSE(O)” dataset.
The third dataset “DJIA” is collected by Borodin et al. [7], which consists of 30 stocks from Dow
Jones Industrial Average containing price relatives of 507 trading days, ranging from Jan. 1st 2001
to January 14, 2003. The fourth dataset is “MSCI,” a collection of global equity indices that are the
constituents of MSCI World Index. It contains 24 indices that represent the equity markets of 24
countries around the world and consists of a total of 1,043 trading days, ranging from April 1, 2006
to March 31, 2010.5
As we can see, the above testbed covers much long trading periods from 1962 to 2010 and diversified markets, which enables us to examine how the proposed CFR strategy performs under
different events and crises. For example, it covers several well-known events in the stock markets,
such as dotcom bubble from 1995 to 2000 and subprime mortgage crisis from 2007 to 2009. The
first three datasets are chosen to test strategy’s capability on stocks, while the MSCI dataset aims
to test the proposed strategy on global indices, which may be potentially applicable to “Fund on
1http://finance.yahoo.com. 2All datasets and their compositions can be downloaded from http://olps.stevenhoi.org/. 3According to El-Yaniv’s homepage http://www.cs.technion.ac.il/rani/portfolios/ and Helmbold et al. [28], the dataset was
originally collected by Hal Stern.
4The dataset before 2007 was collected by Gabor Gelencs ´ er, the remaining data from 2007 to 2010 was collected by Li Bin ´
via Yahoo Finance.
5The constituents of MSCI World Index are available on MSCI Barra (http://www.mscibarra.com).
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:13
Fund” (FOF). As a remark, although we numerically test the proposed algorithm on stock markets,
we note that the proposed strategy could be generally applied to any type of financial markets.
4.2 Experimental Setup and Metrics
In our experiments, we implement the proposed CFR-ONS and CFR-OGD algorithms. The proposed CFR strategy has two parameters w and ε, since it combined OLMAR and RMR. To compare
different methods fairly and consistently, we follow the OLPS toolbox implementation6 [39], and
empirically set the parameters w=5, ϵ=10, and p+m=7 on all the settings. For ARMA, we set the
initial parameter γ 0 = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7]/104 on the tth period, η = 103 and ε = 10−5.5.
For ARIMA, we set the initial parameter γ 0 = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7]/t 2 on the tth period,
η = 1.75 and ε = 10−0.5.
We adopt the most common metric, cumulative wealth, to primarily compare different trading strategies. In addition to the cumulative wealth, we also adopt annualized Sharpe Ratio (SR)
to compare the performance of different trading algorithms. In general, higher values of the cumulative wealth and annualized Sharpe Ratio indicate better performance. Besides, we also adopt
Maximum Drawdown (MDD) and Calmar Ratio (CR) to analyze a strategy’s downside risk. The
lower the MDD, the less the strategy’s (downside) risk is. The higher the CR, the better the strategy’s (downside) risk-adjusted return is.
4.2.1 Performance Criteria. One of the standard criteria to evaluate the performance of a strategy is portfolio cumulative wealth achieved by the strategy until the end of the whole trading
period. In our experiments, we simply set the initial wealth S0 = 1, and thus Sn denotes portfolio
cumulative wealth at the end of the nth trading day, which is the ratio of the portfolio cumulative
wealth divided by the initial wealth. Another equivalent criterion is Annualized Percentaдe Yield
(APY), which takes the compounding effect into account, that is, APY = √y Sn, where y is the number of years corresponding to n trading days. APY measures the average wealth increment that
one strategy could achieve compounded in a year. W inninд Ratio (WR) denotes the percentage of
cases when the proposed strategy beats the baselines. Typically, the higher the value of portfolio
cumulative wealth or annualized percentage yield and WR, the more performance preferable the
trading strategy is.
For some process-dependent investors [44], it is important to evaluate risk and risk-adjusted return of portfolios [46, 47]. One common way to achieve this is to use annualized standard deviation
of daily returns to measure the volatility risk and annualized Sharpe Ratio (SR) to evaluate the
risk-adjusted return. For portfolio risk, we calculate the standard deviation of daily returns and
multiply by √
252 (here, 252 is the average number of annual trading days) to obtain annualized
standard deviation. For risk-adjusted return, we calculate annualized Sharpe Ratio according to
SR = APY−Rf
σp , where Rf is the risk-free return, and σp is the annualized standard deviation of daily
returns. Basically, higher annualized SR indicate better performance of a trading strategy concerning the volatility risk.
We also adopt Calmar Ratio (CR) to measure the return relative of the drawdown risk of a
portfolio, calculated as CR = APY
MDD , where MDD is the Maximum DrawDown and measures the
downside risk of different strategies. Generally speaking, higher Calmar Ratios indicate better
performance of a trading strategy concerning the drawdown risk.
To test whether simple luck can generate the return of the proposed strategy, we can also conduct a statistical test to measure the probability of this situation, as is popularly done in the fund
management industry [23]. First, we separate the portfolio daily returns into two components:
6Our source code will be released and made available in the Github project: https://github.com/OLPS.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
58:14 D. J. Huang et al.
one benchmark-related and the other non-benchmark-related by regressing the portfolio excess
returns against the benchmark excess returns. Formally, st − st (F) = α + β (st (B) − st (F) + ϵ (t)),
where st stands for the portfolio daily returns, st (B) denotes the daily returns of the benchmark
(market index) and st (F) is the daily returns of the risk-free assets (here, we simply choose Treasury bill and set it to 1.000156, or equivalently, annual interest of 4%). This regression estimates
the portfolio’s alpha(α), which indicates the performance of the investment after accounting for
the involved risk. Then, we conduct a statistical t-test to evaluate whether alpha is significantly
different from zero, by using the t statistic α
SE(α ) , where SE(α) is the standard error for the estimated alpha. Thus, by assuming the α is normally distributed, we can obtain the probability that
the returns of the proposed strategy are generated by simple luck. Generally speaking, the smaller
the probability, the higher confidence the trading strategy.
4.2.2 Transaction Cost. In reality, an important and unavoidable issue is transaction cost [40].
While our model in Section 2.1 is concise and not complicated to understand, it omits the transaction costs. We shall now relax some constraints to address these issues. Generally, there are two
ways to deal with this problem. The first is that the portfolio selection process does not consider
the transaction costs while the following re-balancing incurs transaction costs and this method
has been commonly adopted by learning to select portfolio strategies. The second way is that the
transaction costs are directly involved in the portfolio selection process. In our experiments, we
take the first way and adopt proportional transaction cost model, which is proposed by References [6, 7]. Specifically, rebalancing the portfolio incurs a transaction cost on every buy and sell
operation with regarding to a transaction cost rate γ ∈ (0, 1). At the beginning of the tth trading
day, the portfolio manager rebalances the portfolio from the previous closing price adjusted portfolio ˆ
bt−1 to a new portfolio ˆ
bt , incurring a transaction cost of γ
2 ×
i | b(t,i) − ˆ
b(t−1,i) |, where
the initial portfolio is set to (0,..., 0). Thus, with transaction cost rate γ , the cumulative wealth
achieved by the end of the nth trading day can be expressed as
Sn = S0
n
t=1
⎡
⎢
⎢
⎢
⎢
⎣
(bt · xt ) ×

1 − γ
2
×

i
| b(t,i) − ˆ
b(t−1,i) |


⎤
⎥
⎥
⎥
⎥
⎦
.
To the best of our knowledge, this model cannot work for high-frequency data, since even a small
rate will cause all methods to approach to zero.
4.3 Comparison Approaches
In our experiments, we compare the proposed algorithms with a number of benchmarks and existing strategies. We implement the proposed CFR strategy. Below, we summarize a list of compared
algorithms, all of which provide extensive empirical evaluations in their respective studies. All
parameters are set according to their original studies:
(1) Market: Market strategy that is uniform buy-and-hold (BAH) strategy
(2) Best-Stock: Best stock in the market, which is a strategy in hindsight
(3) BCRP: Best constant rebalanced portfolios strategy in hindsight
(4) UP: Universal portfolios strategy with parameters δ0 = 0.004, δ = 0.005, m = 100, and
S = 500 [50]
(5) EG: Exponential gradient algorithm with the best learning rate η = 0.05 [46]
(6) ONS: Online Newton step with the parameters η = 0, β = 1, and γ = 1
8 [1]
(7) Anticor: BAH30(Anticor) as a variant of Anticor to smooth the performance, which
achieves the best performance among the three solutions [12]
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.   
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:15
Table 4. Cumulative Wealth of Various Strategies on the Four Datasets
Methods NYSE(O) NYSE(N) DJIA MSCI
Market 14.50 18.06 0.76 0.91
Best-stock 54.14 83.51 1.19 1.50
BCRP 250.60 120.32 1.24 1.51
UP 26.68 31.49 0.81 0.92
EG 27.09 31.00 0.81 0.93
ONS 109.91 21.59 1.53 0.86
Bk 1.08E+09 4.64E+03 0.68 2.64
BN N 3.35E+11 6.80E+04 0.88 13.47
CORN 1.48E+13 5.37E+05 0.84 26.19
Anticor 2.41E+08 6.21E+06 2.29 3.22
PAMR 5.14E+15 1.25E+06 0.68 15.23
CWMR 6.49E+15 1.41E+06 0.68 17.28
OLMAR 3.68E+16 2.54E+08 2.12 16.39
RMR 2.07E+17 2.70E+08 2.58 16.36
AdaBoost.R2 2.41E+17 5.10E+08 2.76 17.50
Bagging 4.02E+17 3.36E+09 3.00 18.04
OLAR 9.07E+17 3.99E+08 2.61 22.45
CFR-ONS 1.21E+18 2.28E+11 6.93 54.55
CFR-OGD 1.82E + 18 3.33E + 11 5.54 60.11
Note: The best results on each dataset are highlighted in bold.
(8) BK : Nonparametric kernel-based moving window strategy with W = 5, L = 10, and c =
1.0 for daily datasets that has the best empirical performance according to Reference [24]
(9) BN N : Nonparametric nearest-neighbor-based strategy with parameters W = 5, L = 10,
and pφ = 0.02 + 0.5 −1
L−1 [25]
(10) CORN: Correlation-driven nonparametric learning approach with parametersW = 5 and
ρ = 0.1 [36]
(11) PAMR: Passive-aggressive mean reversion strategy with parameter ϵ = 0.5 [41]
(12) CWMR: Confidence-weighted mean reversion strategy with parameters ϕ = 2 and ϵ =
0.5 [38]
(13) OLMAR: Online moving average reversion strategy with parameters ϵ = 10 and w = 5
[34]
(14) RMR: Robust median reversion with parameters ϵ = 10 and w = 5 [29]
(15) AdaBoost.R2: Adaptive boosting regressor with linear loss function [19]
(16) Bagging: Bootstrap aggregating with simple averaging [9].
4.4 Experimental Results
4.4.1 Cumulative Wealth. Table 4 summarizes the cumulative wealth achieved by various methods without considering transaction costs. As we can see, the proposed CFR strategy outperforms
all the existing methods on all the datasets in our experiments. Especially, CFR-ONS and CFROGD achieve better results than OLMAR and RMR among the multiple-period mean reversion
strategies, which further shows the robustness of the proposed algorithms. Besides the preceding
final cumulative wealth, we are also interested in examining how the total wealth achieved by
various strategies changes over different trading periods. In Figure 1, we plot the wealth achieved
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.  
58:16 D. J. Huang et al.
Fig. 1. Trend of cumulative wealth achieved by six strategies during the entire period on the four datasets.
Table 5. Statistical Test of CFR-ONS
Stat. NYSE(O) NYSE(N) DJIA MSCI
Size 5651 6431 507 1043
MER (CFR-ONS) 0.0080 0.0047 0.0043 0.0041
MER (Market) 0.0005 0.0005 −0.0004 0.0000
WR 0.5733 0.5548 0.5444 0.6098
α 0.0074 0.0041 0.0048 0.0041
β 1.2829 1.1651 1.1925 1.1287
t-statistics 16.4504 9.9704 4.2565 7.7861
p-value 0.0000 0.0000 0.0000 0.0000
Table 6. Statistical Test of CFR-OGD
Stat. NYSE(O) NYSE(N) DJIA MSCI
Size 5651 6431 507 1043
MER (CFR-OGD) 0.0081 0.0047 0.0038 0.0042
MER (Market) 0.0005 0.0005 −0.0004 0.0000
WR 0.5746 0.5556 0.5661 0.6107
α 0.0075 0.0042 0.0043 0.0042
β 1.2449 1.1163 1.0661 1.1090
t-statistics 16.7756 10.2011 3.9446 7.7321
p-value 0.0000 0.0000 0.0000 0.0000
by the proposed CFR algorithms (CFR-ONS and CFR-OGD), state-of-the-art algorithms (OLMAR,
RMR), plus two benchmarks (Market and BCRP). From the results, we can see that the proposed
CFR strategy consistently surpassed the benchmarks and the competing strategies over the entire
trading period on all datasets, which again validates the efficacy of the proposed technique. In
Figure 1(b), there is a temporary drop in cumulative wealth at 6,000 trading periods, which corresponds roughly to October 14, 2008. During 2007 and 2009, due to the financial crisis, the cumulative wealth of CFR-OGD has dropped from 1.02E+11 to 2.20E+10, decreasing around 78.43%. While,
the CFR-ONS’s cumulative wealth has dropped from 7.36E+10 to 2.58E+10, decreasing around
64.95%. However, the curves of CFR-ONS and CFR-OGD are still above other algorithms, i.e., the
CFR strategy achieved the biggest cumulative wealth. Finally, to measure whether the results are
generated by simple luck, we conduct widely accepted statistical test. Tables 5 and 6 further show
some statistics [23] of CFR-ONS and CFR-OGD, from which we can see that they have small pvalues, which means that their excellent performance is not due to luck but owing to their strategy
principles. To be specific, the probabilities for achieving the excess returns by luck are almost 0.
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:17
Table 7. The Comparison of APY, Volatility, Sharpe Ratio, MDD, and CR Among OLMAR,
RMR, OLAR, AdaBoost.R2, Bagging, and CFR (CFR-ONS, CFR-OGD) Strategies
Criteria Strategy NYSE(O) NYSE(N) DJIA MSCI
OLMAR 4.6626 1.1051 0.4346 1.0121
RMR 5.1251 1.1100 0.6058 1.0112
OLAR 5.5501 1.1420 0.6168 1.1766
APY AdaBoost.R2 5.1676 1.1623 0.6661 1.0453
Bagging 5.3124 1.3247 0.7309 1.0610
CFR-ONS 5.6369 1.7341 1.6316 1.7177
CFR-OGD 5.7607 1.7744 1.3544 1.7845
OLMAR 0.5657 0.5684 0.5216 0.3913
RMR 0.5699 0.5667 0.5164 0.3929
OLAR 0.5756 0.5687 0.4988 0.4091
Volatility AdaBoost.R2 0.5671 0.5694 0.5270 0.3957
Bagging 0.5682 0.5691 0.5278 0.4031
CFR-ONS 0.5695 0.5659 0.4988 0.3886
CFR-OGD 0.5626 0.5587 0.4654 0.3910
OLMAR 8.1708 1.8739 0.7565 2.4846
RMR 8.9235 1.8880 1.0957 2.4721
OLAR 9.5725 1.9378 1.1563 2.7781
Sharpe Ratio AdaBoost.R2 9.0419 1.9712 1.1880 2.5407
Bagging 9.2793 2.2575 1.3091 2.5329
CFR-ONS 9.8280 2.9935 3.1907 4.3171
CFR-OGD 10.1687 3.1043 2.8244 4.4620
OLMAR 0.4362 0.9334 0.4395 0.4537
RMR 0.4248 0.9052 0.3705 0.5085
OLAR 0.4525 0.9296 0.3639 0.4632
MDD AdaBoost.R2 0.4629 0.9198 0.3794 0.4806
Bagging 0.4323 0.8895 0.3775 0.4883
CFR-ONS 0.4255 0.8847 0.2784 0.2384
CFR-OGD 0.4051 0.8146 0.2049 0.2333
OLMAR 10.6898 1.1840 0.9889 2.2306
RMR 12.0633 1.2262 1.6349 1.9887
OLAR 12.2665 1.2286 1.6952 2.5402
CR AdaBoost.R2 11.1629 1.2637 1.7558 2.1750
Bagging 12.2895 1.4894 1.9364 2.1730
CFR-ONS 13.2488 1.9601 5.8614 7.2063
CFR-OGD 14.2216 2.1782 6.6105 7.6489
Note: The best results on each dataset are highlighted in bold.
The results show that the CFR strategy is a promising and reliable portfolio selection technique
to achieve high return with high confidence. Besides, we can find that the winning ratio (WR) of
CFR-ONS against market strategy is bigger than 54% (55% for CFR-OGD) on all datasets, which
further shows the superiority of the proposed strategy.
4.4.2 APY, Volatility, Sharpe Ratio, MDD, CR. Table 7 summarizes the APY, volatility, annualized Sharpe Ratio, MDD, and CR. From the results, we observe that on the four datasets, the
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
58:18 D. J. Huang et al.
Table 8. The Comparison of Turnover Among OLMAR, RMR, AdaBoost.R2,
Bagging, and CFR (CFR-ONS, CFR-OGD) Strategies
Strategy NYSE(O) NYSE(N) DJIA MSCI
OLMAR 1.478456 1.386448 1.434590 1.482887
RMR 1.401743 1.295016 1.318602 1.401225
AdaBoost.R2 1.366466 1.246057 1.296507 1.364286
Bagging 1.391969 1.287180 1.301647 1.362730
CFR-ONS 1.401689 1.233792 1.172301 1.395220
CFR-OGD 1.369171 1.211833 1.206060 1.401072
CFR strategy achieves the best performance in all criteria. Specifically, CFR-OGD achieves the
highest APY, Sharpe Ratio, CR, and lowest volatility, MDD among seven algorithms on NYSE(O)
and NYSE(N) datasets. On DJIA dataset, CFR-OGD achieves the lowest volatility, MDD, and highest CR, while CFR-ONS achieves the highest APY and Sharpe Ratio. On MSCI dataset, CFR-OGD
achieves the best performance in all criteria, except volatility, while CFR-ONS achieves the lowest
volatility. However, CFR-ONS’s volatility and MDD on NYSE(O) are two inconsistent expected performances. CFR-ONS’s volatility is higher than that of the three algorithms (OLMAR, AdaBoost.R2
and Bagging), and its MDD is higher than that of RMR, but they are almost the same as these four
algorithms (OLMAR, RMR, AdaBoost.R2, and Bagging). These encouraging results show that CFR
strategy reaches a good trade-off between return and risk, even though the risk is not explicitly
taken into account in our problem formulation.
4.4.3 Turnover. Roughly speaking, the turnover is the average percentage of wealth traded in
each period. In our experiment, we compare the turnover of CFR with that of the state-of-the-art
strategies (OLMAR, RMR) and two classical algorithms of ensemble learning (AdaBoost.R2, Bagging). They are all designed as multiple-period reversion strategies, and therefore the comparison
among them is more significant. Table 8 presents the explicit turnover value of some strategies. As
we observed, the turnover of CFR-ONS and CFR-OGD are smaller than that of OLMAR and RMR
on all datasets. Compared with AdaBoost.R2 and Bagging, the proposed strategies obtain smaller
turnover on NYSE(N) and DJIA, and almost the same turnover on NYSE(O) and MSCI. First, the
smaller turnover means that the portfolio is more stable, which can be attributed to the resistance
to the noise or outliers. Hence, the small turnover empirically shows the robustness of the proposed strategy. Second, the smaller turnover usually results in less transaction costs. From Table 4,
we can see that the proposed algorithms achieve highest cumulative wealth without considering
transaction costs. At the same time, they get smaller turnover. Thus, they will perform well when
transaction costs are taken into account.
4.4.4 Parameter Sensitivity. Now, we experimentally evaluate how different choices of parameters affect the cumulative wealth. CFR algorithms (CFR-ONS, CFR-OGD) contain two parameters,
the sensitivity parameter ϵ and window size w, since they combine the MA and L1-median estimators. First, we examine the performance of the proposed algorithms by varying sensitivity
parameter ϵ from 0 to 100 with fixed w = 5. Figures 2 and 3 show the effect of sensitivity parameter ϵ on cumulative wealth of CFR-ONS and CFR-OGD, respectively. The cumulative wealth
sharply grows as ϵ increases and then tends to stable when ϵ exceeds 10. Second, we evaluate the
parameter window size by varying w from 3 to 100. With fixed ϵ = 10, Figures 4 and 5 show the
effect of window size w of CFR-ONS and CFR-OGD, respectively. On three of the four datasets
(except DJIA), we can see a clear trend of the cumulative wealth with w: first sharply up and then
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:19
Fig. 2. Parameter sensitivity of CFR-ONS w.r.t. ϵ with fixed w=5.
Fig. 3. Parameter sensitivity of CFR-OGD w.r.t. ϵ with fixed w=5.
Fig. 4. Parameter sensitivity of CFR-ONS w.r.t. w with fixed ϵ=10.
Fig. 5. Parameter sensitivity of CFR-OGD w.r.t. w with fixed ϵ=10.
slowly down when w exceeds 5. Hence, w = 5 is the best choice when ϵ = 10 (except DJIA). In
summary, for most values of ϵ and w, our methods outperform the existing ones.
4.4.5 Transaction Costs. In practice, transaction cost is an important and practical issue for
OLPS. In our experiment, we adopt proportional transaction costs model and test the effect of proportional transaction costs with the transaction cost rate γ varies from 0 to 1%. Our method is also
compared with Market, BCRP, OLMAR, and RMR. Figures 6 and 7 present the results of CFR-ONS
and CFR-OGD on four daily datasets, respectively. As we can see, the performance with transaction
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
58:20 D. J. Huang et al.
Fig. 6. Scalability of the total wealth achieved by CFR-ONS with respect to transaction cost rate γ%.
Fig. 7. Scalability of the total wealth achieved by CFR-OGD with respect to transaction cost rate γ%.
costs is market dependent. When the transaction costs increase, the total wealth achieved by CFR
strategy drops considerably, which is consistent with other strategies. At the same time, the CFR
strategy always achieves the maximum cumulative wealth when the transaction cost rate is fixed.
We also observe that the proposed strategy can withstand reasonable transaction cost rates, and
can beat the existing methods with the transaction cost rate above 0.62% on the first three datasets
(around 0.6% on MSCI). Compared with the benchmarks, the results clearly demonstrate that, on
all datasets, the performance of the two algorithms (CFR-ONS, CFR-OGD) are considerably robust
with respect to the transaction costs. In summary, the proposed strategy can withstand moderate
transaction costs, even though we do not explicitly tackle it during the portfolio selection process,
and hence it is practical applicable.
5 CONCLUSION
In this article, we propose a novel multiple-period OLPS strategy named CFR, which exploits the reversion phenomenon in financial markets by combination forecasting estimator and online learning techniques. In general, different prediction models can provide different useful information;
if we simply drop some models that have the higher forecast deviations, then it will lose some
useful information. Combination forecasting, however, can make use of various prediction models to solve the problem more comprehensively, rather than a single predictive model, and can
effectively reduce the influence of some random factors in a single prediction model, to improve
the prediction accuracy. At the same time, CFR can overcome the drawbacks of the existing OLPS
techniques due to the instability of single prediction model, noisy data and outliers, and the nonstationarity of the price time series. For CFR strategy, we achieve some good theoretical results.
Extensive experiments on real markets also show that the CFR strategy beats all the state-of-theart strategies in literature and achieves promising performance on the benchmark datasets. In the
future, we will study other robust estimation methods and performance measures. Furthermore,
in a similar way to Cover’s study about the side information for universal portfolio, we can also
consider incorporating other additional information (including the impact historical price data,
ACM Transactions on Intelligent Systems and Technology, Vol. 9, No. 5, Article 58. Publication date: June 2018.
Combination Forecasting Reversion Strategy for Online Portfolio Selection 58:21
market liquidity, and trading volume) into the proposed CFR strategy, which is somewhat more
reasonable way to do back test in practice.