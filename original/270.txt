The Power system is a crucial Cyber-Physical system and is prone to the False Data Injection Attack (FDIA). The existing FDIA detection mechanism focuses on DC state estimation. In this paper, we propose a phased AC FDIA targeting at generation rescheduling and load shedding. After injecting the false data into the measurements, the estimated states will be deviated from those in normal conditions. The proposed mechanism extracts the spatial and spectral features of the modes decomposed from the estimated states using variational mode decomposition (VMD). Then LSTM-Autoencoder is trained by learning the temporal correlations between the multi-dimensional feature vectors. The reconstruction error deviation vectors of the feature vectors are calculated and updated by LSTM-Autoencoder. Based on these error deviation vectors, the Logistic Regression (LR) classifier is trained to determine whether the error deviation vector is abnormal. We evaluate the performance of the proposed mechanism with comprehensive simulations on IEEE 14 and 118-bus systems. The results indicate that the mechanism can achieve a satisfactory attack detection accuracy.

Previous
Next 
Keywords
False data injection attack

AC state Estimation

Variational mode decomposition

LSTM-Autoencoder

Deviation vector

Logistic regression

1. Introduction
The integration of information technologies with existing power networks aims to increase capacity, efficiency, and reliability of smart grids, which nevertheless poses great challenges to their cyber and physical security. State Estimation (SE), being a critical power grid application, highly depends on the data interaction between the supervisory control and data acquisition (SCADA) system and smart meters, making it highly vulnerable to cyber attacks (Yan et al., 2012). Particularly, adversaries can interfere the result of SE by manipulating the measurements, which in turn may lead to wrong operations of control center, even physical and economic damages of power grids (Dobakhshari et al., 2019)– (Ten et al., 2008).

False Data Injection Attack (FDIA) is one of the most challenging threats to SE (Liu et al., 2017). Different from other attacks such as jamming attack and flooding attack, FDIA can be stealthily launched without being detected by bad data detection (BDD) (Tanet al., 2017), (Tajer, 2019). Therefore, much effort has been paid to study possible ways to construct FDIA, i.e., FDIA attack models. However, most of works target on DC SE, in which the relationship between measurements and states is linear. Meanwhile, both DC and AC FDIA detection methods have been investigated in previous literature. In the formulation of DC SE, many FDIA detection methods have been proposed including data-driven based method (Che et al., 2019), Kalman filter (Liu et al., 2009), sparse optimization (Guan and Ge, 2018), machine learning-based methods (Kim et al., 2010), (Yu et al., 2019), and hardware protections (Yang et al., 2017). However, detecting AC FDIA is with more practical significance as AC SE model are more commonly employed in the real world utilities compared to DC SE (Yu and Chin, 2015), (Deng and Liang, 2019). The detection methods for DC FDIA always cannot adequately detect AC FDIA. There is little existing work on detecting AC FDIA, especially detecting the unknown attack patterns. For the general AC FDIA, Gu et al. proposed a detection mechanism based on analyzing the Kullback-Leibler distance between the probability distribution of the normal and compromised measurements (Chaojun et al., 2015; Che et al., 2019). However, the performance of this mechanism is unknown when considering the dynamic changes of the system topology. In (Yu et al., 2019), the discrete wavelet transform (DWT) algorithm is adopted to extract the state features and a deep neural networks (DNN) based classifier is trained to identify FDIA. However, training the classifier is time consuming because the dimension of the feature vector is tens times of the number of the system buses. The authors in (Liu and Li, 2017) proposed an information-network-based state estimation technique to defend against AC FDIA. Reference (Zhang et al., 2019) implemented AC FDIA detection by actively changing the transmission line parameters. Although these work shows good detection performance on general AC FDIA, the detection performance on the emerging attack models is unknown.

In this paper, a new detection mechanism is proposed to identify a proposed AC FDIA which tries to induce the operators to shed power. Different from the previous work taking the measurements as the detecting object, our detection mechanism mines the characteristics of the estimated states to identify this attack. Variational mode decomposition (VMD) algorithm is adopted to extract the spatial and spectral features which can comprehensively represent estimated state. We train an improved long short term memory (LSTM) model (LSTM-Autoencoder) to learn the temporal correlations from the normal feature vectors sequence. Based on the trained model, we can calculate the reconstructed error deviation vectors between the re-constructed and the original feature vectors. Eventually, the Logistic Regression (LR) classifier is adopted to identify FDIA by distinguishing the error deviation vectors derived from the normal and the attacked feature vectors. Our main contributions in this paper are as follows:

•
We formulate a new-type AC FDIA trying to induce operators to shed power. The contaminated measurements can be achieved by solving the attack model.

•
Using a signal-processing based method VMD to extract the spatial and spectral features from the estimated states, which is novel. The feature vectors are treated as time series data for the ongoing study.

•
We calculate the reconstructed error deviation vectors which are assessed by the LSTM-Autoencoder. The deviation vectors are served for the LR classifier. A deviation updating criterion is proposed to improve the accuracy of the deviation.

•
The detection performance of our mechanism is evaluated on two test systems. The influence of some factors on detection performance are carefully investigated.

Next section introduces the vulnerability of SE and FDIA. A new AC FDIA is modeled to induce load shedding. Section III illustrates the VMD-based feature extraction method with explaining the features. In section IV, we elaborate the implementation process of the detection mechanism in details. The numerical results are provided in Section V. Conclusion and future work are presented in Section VI.

2. State estimation and attack models
SE is performed based on the measurements collected by smart meters and sent to Energy Management System (EMS) by SCADA (Manandhar et al., 2014). As shown in previous work, both DC SE and AC SE are vulnerable to FDIA, while this paper focuses on AC SE FDIA as it is of more practicability in real world applications.

2.1. State estimation of power system
Considering a power system with  buses and  branches. The measurement vector is denoted by 
. The state vector is denoted by 
 which contains voltage magnitude
, and phase angle 
, where . The relationship between  and  can be expressed as  where  is additive standard white Gaussian noise with the covariance . 
 and 
 are the real and reactive power flow from bus  to bus , 
 and 
 are the real and reactive power injection at bus . Without any noise, i.e., , the functions between measurements and states can be defined in the following four cases:(1)
(2)
(3)
(4)
where 
 and 
 are the real and imaginary parts of the admittance matrix, 
 is the phase difference between bus  and bus . The goal of state estimation is to find the estimated states which can best approximate the measurements according to the relationship . Given ,  and , and the system state can be estimated by solving the following weighted least square (WLS) object function.(5)
 

Equation (5) can be solved by Newton-Raphson method and its variants.

2.2. Bad data detection and False Data Injection Attack
In AC SE, system state variables include both voltage magnitudes and phase angles. It is noted that in order to bypass the BDD, the adversaries need to know the system state and the topology information. The measurement residual is calculated using the difference between the observed measurements  and the measurements 
 inferred by the estimated states. If 
, the estimated states 
 can pass the BDD and the operations of control center are regarded to be trust-worthy. However, false data added to the measurement  can successfully bypass the BDD if 
, where  is the injected error on the system state, because the residual under attack is unchanged:(6) 
 
 

In this paper, we make the common assumption that the adversaries have the full network information and the ability of manipulating the measurements and system states whereas similar to (Liu et al., 2014), partial network information may be sufficient to construct the AC FDIA by updating the state vectors.

2.3. AC FDIA inducing power shedding
The proposed FDIA scheme occurs in two rounds of optimal power flow (OPF). In the first round, the adversaries minimize the number of compromised meters and manipulate the measurements to make the operator believe that the limits of transmission lines are violated. The operators will reschedule the power to avoid the limit violation. Only when rescheduling does not work, the operator will take the emergency action of load shedding to avoid further deterioration of the situation. Therefore, the proposed FDIA is launched in two stages: 1) injecting the false data leading to power rescheduling; 2) injecting the false data after power rescheduling aiming to cause load power shedding.

The first stage of the AC FDIA can be modeled as:(7) 
 
(8)
(9)
(10)
(11)
(12)
(13)
(14)
where ,
 and 
 are measurements of real and reactive power flow from bus  to bus  without FDIA; 
 and 
 are measurements of real and reactive power injection at bus  without FDIA; 
 is the phase angle difference between 
 and 
 after implementing FDIA. 
 is the attack vector to the measurements. The objective of the attack (7) is to minimize the number of meters to launch FDIA, while bypassing BDD, satisfying the power balance constraints (10)–(13), and resulting in the violation of power flow limits (14). By solving the above model, the attackers can successfully launch the FDIA causing the transmission lines overloaded. Consequently, the operator has to reschedule the power generation to alleviate this situation by solving the following problem:(15) 
 
(16a)(16b)(16c)
(16d)
where  is the control vector of generation rescheduling;  is the state vector; 
 is the limit of line flow between bus  and bus ;  is the set of the overloaded lines.  is the power flow constraints.  is the inequality constraints describing the limits of generated active and reactive power, and voltage. Equation (16c), (16d) describe the limits of state variables and generation rescheduling. To alleviate line overloads without load shedding in a fast and reasonably accurate way, the generation rescheduling and the state variables can be calculated and updated by the method proposed in (Guo et al., 2019a). After the generation rescheduling, the attackers will solve (7), (8), (9), (10), (11), (12), (13), (14) again to launch a second-round attack based on the new measurements. Then the control center will be fooled to believe the rescheduling does not work such that load shedding will be taken as an emergency action. In view of this, the proposed two-round attack has successfully caused load shedding through FDIA into the state estimator's measurements.

3. State estimation and attack models
Detecting FDIA can be treated as a binary classification problem and the extracted features are crucial to the detection performance. Authors in (Yu et al., 2018) properly employed DWT to extract the FDIA features in the dynamic system operations. Although DWT is an efficient feature extraction method, its performance excessively depends on choosing the mother wavelets. The spectrum locality of the orthogonal basis functions will get worse as the scale enlarging, and this may limit the further decomposition of the signal. To overcome the disadvantages of DWT, authors in (Thirumalaisamy and Ansell, 2018) proposed the Empirical Mode Decomposition (EMD) which can decompose the signal into several Intrinsic Mode Function (IMF) without considering basis function. However, EMD may easily cause mode mixing which results in the adjacent IMFs be hardly distinguished. As an improvement of EMD, VMD can effectively overcome mode mixing and has been employed to many power system-related research such as power quality analysis and system disturbance assessment,etc. In this paper, we use VMD to decompose the estimated state vector and extract the features.

We would like to clarify that the estimated state is chosen as the target to extract features for the following reasons. 1) The estimated state vector is leaner than the measurement vector, leading to reduced computational effort on extracting the features. 2) The estimated states have more direct impacts on the system operation compared to the raw measurements. Moreover, different estimated states have temporal correlations, and different spatial and energy spectral characteristics because they are calculated from the measurements collected at consecutive discrete time instances of the transient and dynamic system operations. In this section, we extract both spatial and spectral features from the decomposed modes.

3.1. Variational mode decomposition
VMD was proposed for decomposing the original signal  at time  into  Intrinsic Mode Functions (IMFs). The IMF can be defined as a amplitude modulation frequency modulation model 
(spatial mode) as below (Dragomiretskiy and Zosso, 2014):(17)
(18)
where 
 is a non-decreasing phase function. Define 
 and 
 
 as the envelope and its instantaneous frequency. VMD can be represented as a constrained variational problem which is given by:(19) 
 
 
 
 where 
 is the corresponding center frequency of the  mode,  is the impulse function, and 
 represents gradient with respect to . The squared l2-norm of the base band-shifted Hilbert analytic function with non-negative frequencies gives the bandwidth of each mode. Define the data fidelity balancing parameter and the Lagrange multiplier as and , this variational problem can be solved by introducing the augmented Lagrangian multiplier (Dragomiretskiy and Zosso, 2014). In the Fourier domain, the spectral mode corresponding to 
 is given as:(20)
 
where 
 is the Fourier transform of the signal S(t). VMD is aimed at continuously updating the optimal solution of the constrained variational problem under a given threshold. VMD is a generalization of the classic Wiener filter into multiple bands, which indicates the decomposition process of VMD is of fine robustness, and is of strong auto-adaptive ability to the unstable signals (Dragomiretskiy and Zosso, 2014). The steps involved in VMD are summarized as: 1) Updating modes in Fourier domain using Weiner filter centred at the current center frequency 
. 2) Updating the center frequencies 
. 3) Updating the Lagrangian multiplier to efficiently reconstruct the efficient signal. 4) Repeating these steps until the iteration criterion 
 is satisfied. The VMD algorithm is summarized as Algorithm 1. Particularly,  = 10−6 is used in this paper.

Algorithm 1 Variational Mode Decomposition
Initialize:
iteration criterion spectral mode 
the center frequency
the lagrangian multiplier 
 and iterations 
Step 1: Update 
 
;
Step 2: Update 
 
;
Step 3: Update 
;
Step 4:
 otherwise go to Step 2.
3.2. Spatial features of the modes
VMD decomposes the received signal, i.e., the estimated state variable , into a specified number of modes. Let  be the number of decomposed modes, then the output of VMD can be written as:(21)
where 
 is the spectral mode generated in calculation of VMD. In the following, we will describe the spatial and spectral features obtained from 
 and 
. It has been verified in (Wang et al., 2019) that the statistic-based features of these spatial modes can represent the distinguished signals. In this paper, four statistic-based features are used to characterize the attacker's behavior. The spatial features are obtained as follows:(22)
 
 
(23)
 
 
(24)
where  is the number of discrete samples in a mode, which is also equal to the number of sample size. 
 is the  sample amplitude of the mode. 
, 
 and 
 are the mean, variance and skewness of the  mode. Particularly, the Euclidean Distances 
 between the decomposed modes and original signal is selected as a spatial feature, which can describe the similarities between the decomposed modes and the original signal (Tabaghi et al., 2020). 
 and 
 are the  sample of the  mode and the  sample of the original signal at time . Therefore, there are  spatial features extracted for one estimated state:(25)

3.3. Spectral features of the modes
Different spectral modes contain different frequency components, the high frequency components are included in the low-order spectral modes. Different types of input signals have different frequency components in the same-order spectral modes 
, and the magnitudes of the spectral modes are different. To highlight the differences between the spectral modes extracted from different types of signals, the energy spectrum distribution of spectral mode 
 is exploited to extract feature, which can be generated after the Fourier Transform on 
. The amplitude of the energy spectrum and the number of points in discrete Fourier Transform are defined as  and , respectively. Similar to (Satija et al., 2019), we select Flatness 
, Centroid 
, Coefficients of variation 
, Skewness 
, Brightness 
, spectral roll off 
 of the energy spectrum as the spectral features.(26)
 
 
 
(27)
 
 
 
(28)
 
(29)

Specifically,  measures the power variations in the carriers of a signal;  is the center frequency in the energy spectrum 
 can be chosen as a feature because the spectrums have different coefficients of variation.  can measure the symmetry or asymmetry of a distribution.  can measure the ratio of the sum of magnitudes above a given boundary magnitude to the total sum of all the magnitudes in a spectrum.  measures the right-skewness of the spectrum. Therefore, there are   spectral features. Together with the spatial features discussed in Section III-B, the final feature vector of  can be written as:(30)

4. Time series analysis-based false data injection attack detection scheme
As stated in Section II-C, the proposed AC FDIA can be successfully launched if attackers know the topology of power system and are capable of corrupting a limited meters. However, this does not make the proposed FDIA to be undetectable. It is widely accepted that the estimated states have temporal correlations and can be treated as time series data. The spatial and spectral features of the time series data in normal operating conditions will be different from those when the FDIA occurs. Therefore, we can identify FDIA by analyzing the temporal correlations between the feature vectors composed of the spatial and spectral features. In this section, we will propose a time series analysis-based detection method, LSTM-Autoencoder, to detect the proposed AC FDIA. The LSTM-Autoencoder uses only the normal sequences for training. This is particularly useful in scenarios when FDIA data is not available or is sparse, making it difficult to learn a classification model over the normal and anomalous sequences.

4.1. Overview of the proposed detection framework
As the core of our proposed detection mechanism, LSTM-Autoencoder learns the vector representation of the multivariate time-series data and reconstructs the time-series data. As shown in (Mirze and Cosan, 2018), if the LSTM-Autoencoder is trained by “normal” feature vectors. The reconstruction error of the “attack” feature vector is bigger than that of the “normal” feature vector. Inspired by this (Malhotraet al., 2016), proposed an anomaly detection method based on the distribution of the reconstruction errors but this method needs to preset a threshold and has a high false alarm rate. As an alternative, we identify the FDIA by analyzing the deviation of the reconstruction errors.

As depicted in Fig. 1, our proposed detection mechanism can be divided into two stages. In the first stage, set the observation window as , the measurement series at time  can be written as 
, where 
. After performing the SE on each measurement 
, we can get the estimated state series 
. Then the BDD mechanism is adopted to eliminate the bad data. The estimated state will be selected as the detection object if it passes the BDD. To launch the proposed FDIA, attacker will perform the first-stage attack to cause the transmission line overloading. The system will do the generation optimization strategy to update voltage and phase angle and the measurements. At last, the attacker will launch FDIA again to induce power system perform the power shedding operation. Then, the system will do state estimation to generate the attack estimated states. Next, we use VMD to decompose the “normal” and “attack” estimated states to generate the feature vectors. In the second stage, we use the normal feature vectors to train LSTM-Autoencoder and input the attack and normal feature vector time sequence to calculate the error deviation vectors of the reconstruction error vectors. At last, the error deviation vectors of the reconstruction error vectors corresponding to the “normal” and “attack” estimated states are calculated and labeled as the final feature vectors. To detect FDIA automatically, we divide the final feature vectors as the training and testing dataset and adopt the Logistic Regression (LR) classifier (Gu et al., 2014) to identify the proposed FDIA in a fast and supervised manner.

Fig. 1
Download : Download high-res image (1MB)
Download : Download full-size image
Fig. 1. Overview of the proposed FDIA detection mechanism.

The LSTM-Autoencoder is stacked by multiple layers of LSTM network, and is trained to reconstruct the feature vectors sequence in reverse order. Given the state feature vector as 
 at time , and the  element of 
 as 
. The sequence of the state feature vectors can be written as 
, where  is the number of the observed sequences. For 
, 
, , 
 is the length of the observed vectors sequence. Use three main gate structures, the LSTM network can capture the long-time correlations between the inputs by updating the old information, useful information and the cell state (Ergen and Kozat, 2017).

Inputting the whole sequence into the Encoder, we can get the encoder output sequence set 
. These outputs will be treated as the inputs of Decoder after the mean pooling operation. Eventually, we can get the output of Decoder and the reconstructed input 
 and 
, respectively. To facilitate the understanding, the reconstruction process of LSTM-Autoencoder is shown in Fig. 2. For the input sequence 
, , the state vector 
 of the Encoder can be calculated by 
 and 
. The state vector 
 of Encoder can be used as the last vector to initiate the state vector 
 of the Decoder, namely 
. A linear layer is added to the top of the Decoder, and its weight matrix and bias vector are 
 and 
. The reconstructed data can be calculated as 
. The Decoder uses 
 to reconstruct 
 and gets the next state vector 
.

Fig. 2
Download : Download high-res image (188KB)
Download : Download full-size image
Fig. 2. The reconstruction process of LSTM-Autoencoder.

4.2. FDIA detection based on reconstruction error deviations
In our detection method, the LSTM-Autoencoder is trained by the “normal” feature vectors. The reconstruction errors of the “normal” feature are smaller than that of the “attack” features. Based on this, same like reference (Malhotraet al., 2016), calculating the abnormal score 
 of the input 
 and compares it with the preset threshold 
 to identify the FDIA. If 
, it means that 
 is abnormal. However, it is not applicable to directly use the distribution of the reconstruction errors as the detection criterion because the reconstruction errors of some features in the same vector may be large, and the reconstruction errors of other features may be small, this may result in the reconstruction error always fluctuates around 0 and eventually leads to high false alarm rate. To overcome this defect, we use error sequence to assess the current reconstruction error, and calculate the deviation of the current reconstruction error from the past reconstruction error sequence as the new feature vector to represent “normal” and “attack” estimated states. Define the reconstructed error as 
. For an error sequence 
, 
, …, 
, . The deviation of the current reconstruction error is defined as:(31)
 
 
where 
 and 
 are the mean and the standard deviation of the error sequence in the past  time period. Adopt the exponentially calculation to amplify the deviation. The error deviations of all the features constitute the error deviation vector. To avoid the influence of the abnormal deviation on calculating the subsequent deviations. We use the following rules to update the construction error: 1) set 
, if 
, where  is the tolerance of the upper bound of the reconstruction error sequence. 2)set 
, if 
, where  is the tolerance of the lower bound of the reconstruction error sequence. 3) the mean and the standard deviation of the error sequence are updated as follows:(32)
 
(33)
 

Finally, the error deviation vectors are labeled to train the LR classifier. As shown in Fig. 3. 
 compose the original feature vector and 
compose the error deviation vector. The implementation of the proposed detection mechanism is summarized in algorithm 2.

Fig. 3
Download : Download high-res image (202KB)
Download : Download full-size image
Fig. 3. The example construction of error deviation vector.

5. Test setup

Algorithm 2 The implementation of the proposed detection mechanism.
Generate false estimated states by solving the two-stage FDIA model. Define the normal estimated states dataset as 
, and the false estimated states dataset as 
. Pre-set the initialization parameters for the involved algorithms.
Step 1: Decompose the estimated states into 
 and 
 using VMD;
Step 2: Calculate the spatial and spectral features according to (22)–(24) and (26)–(29). Construct the feature vector 
 for and ;
Step 3: Let 
 be the feature vector of , 
 be the feature vector of . Use 
 to train LSTM-Autoencoder;
Step 4: Calculate the error deviation vectors 
, 
, 
 and 
 for 
, 
, 
 and 
 using LSTM-Autoencoder;
Step 5: Add the class to the error deviation vectors;
Step 6: Train Logistic Regression classifier using the labeled error deviation vectors 
 and 
;
Step 7: The identification task is accomplished based on 
 and 
 using the Logistic Regression classifier.
5.1. Experiment preparation
We evaluate the performance of the proposed detection mechanism on IEEE 14- and 118-bus systems. Take the IEEE 14-bus system as an example which is shown in Fig. 4, the measurements
 and the states 
 are typically taken. For both fully observed test system, two additional meters are installed at the slack bus to measure its voltage magnitude and phase angle. The 118 system is fully observed with 39 pairs of injection measurements and 111 pairs of flow measurements, so 
. MATPOWER is used to generate the “normal” measurements by performing OPF (Zimmerman et al., 2011), and the “attack” measurements are generated by solving the proposed attack model. The estimated states are achieved by performing SE and treated as the time series data and decomposed by VMD.

Fig. 4
Download : Download high-res image (307KB)
Download : Download full-size image
Fig. 4. The topology of the IEEE 14-bus system.

To enable the research more practical significance, we adopt 400 New York independent system operator (NYISO, available on http://www.nyiso.com.) hourly load data as the bus loads. For the IEEE 14-bus system, we link each load bus with one region of the NYISO using the following matrix. The first row of the matrix is the bus number, and the second row is the corresponding NYISO region number. Readers can refer to (Chaojun et al., 2015) for a detailed procedure of generating the measurements of this test system. There are 5 generators and 20 branches in 14-bus system, and 19 generators and 177 branches in 118 bus-system. So we can get 
 and 
 topology changes under the stability states according to the N−1 rules (Lin et al., 2019).

(2 3 4 5 6 9 10 11 12 13 14).

(1 2 3 4 5 6 7 8 9 10 11).

We randomly select 2 PQ buses with the loads ranging from 50% to 150% of the original load to simulate the load change. We can get 
, feature vectors in which 200000 samples are used for training LSTM-Autoencoder and the rest feature vectors are divided into the validating dataset and testing dataset in a 7:3 ratio to train and test the regression classifier. Using the rest feature vectors we can also generate 145600 compromised estimated states. Fig. 5 shows the curves of the “Estimated” and “Attack” estimated state values. In the IEEE 14-bus system, the voltage magnitude differences between the “Estimated” and the “Attack” estimated states are not significant compared with the voltage phase differences. We would like to clarify that in Fig. 5 the “Attack” label means the attacked estimated state, and the “Estimated” label means the normal estimated state, and “normal” means the real state. In this paper, the relative errors of the measurements before and after the SE are less than 5%, and the system residual  is always less than 7. In the following experiments, we first set the threshold  of BDD as 10. Our simulation is implemented by using MATLAB on a 64-bit computer with the processor of 2.9 GHz clock speed, and 16 GB RAM. Using python 2.7 (Python 2.7.0 and Jul. 2010., 2010) and Keras framework (Chollet, 2015) to train the LSTM-Autoencoder without GPU.

Fig. 5
Download : Download high-res image (821KB)
Download : Download full-size image
Fig. 5. The state values before and after attack.

5.2. Parameter determination of VMD
As shown in Table 1, we introduce the evaluation parameters such as Accuracy (Acc), Precision (Pre), Recall, F1.


Table 1. Evaluation parameters.

Precision	TP/(TP ​+ ​FP)
Recall	TP/(TP ​+ ​FN)
Acc	(TP ​+ ​TN)/(TP ​+ ​FN ​+ ​TN ​+ ​FP)
F1	2∗Precision∗Recall/(Precision ​+ ​Recall)
In this subsection, we evaluate the parameter sensitivity of VMD. For VMD, the number of decomposed modes , and data fidelity balancing parameter , and noise-tolerance  should be preset. Assuming the optimal number of the decomposed modes is . If  and  are small, it may cause the mode mixing problem. If  is small  and  is large, it may reduce the convergence speed. If  is large  and  is large, it may cause the modes regarded as noise. As a rule of thumb, we set  and tol to 20000 and 10−6. We randomly select 4 “normal” and 4 “attack” feature vectors for each of the two bus systems to determine  by calculating the ratio of the energy accumulation of the decomposed modes to that of the original signal. The ratio is defined as follows:(34)
 
where 
,
 are the  element of the original signal vector, the total number of the elements and the  element of the  mode. As a rule of thumb, we set  to 20000. From Fig. 6, we can conclude that: 1) the ratio goes up with the number of decomposed modes grows; 2) 7 and 6 can be chosen as the appropriate number of the decomposed modes for the 14-bus and 118-bus systems because the ratios of the two bus systems are all over 95%. So, we set  and  to 20000 and 7 for both of the test systems.

Fig. 6
Download : Download high-res image (428KB)
Download : Download full-size image
Fig. 6. The ratio curves of the number of the decompose-d modes K.

5.3. Reconstruction performance of LSTM-Autoencoder
In this subsection, we investigate the data reconstruction performance of LSTM-Autoencoder. We fit the LSTM-Autoencoder model to our training data and train it for 200 epochs. The “Henormal” method to initiate the weights, and “Sigmoid” is selected as the activation function of LSTM, and the “Sigmoid” is selected as the transfer function, and the learning rate is set to 0.001, and the observation window  is firstly set to 5. Adam optimizer is adopted to shorten the training time because there are hundreds parameters need to be optimized (Kingma and Ba, 2015). The technique “dropout” is employed to the fully-connected layers at 20% dropout ratio to randomly drop the weights to avoid overfitting. By analyzing the detection results from Table 2, it can be concluded that the proposed method can effectively detect FDIA. For the two bus systems, the detection accuracy is more than 90%, but the detection mechanism works slightly poor on the IEEE 118-bus system due to its more complex topology. This is because in this paper, the estimated states are firstly decomposed into many modes thereafter spatial and spectral features are extracted. The difference between the normal and attack feature values extracted from IEEE 14-bus system is bigger than that between the normal and attack feature values extracted from IEEE 118-bus system. It is also observed that the training time of LSTM-Autoencoder for the two bus systems is more than 3000s, so we train LSTM-Autoencoder model in an offline way. The time of training and testing mainly focus on training and performing LSTM-Autoencoder. The average detection time for each estimated state is about 2.77 ms. From Fig. 7, we can see that the Mean Absolute Error (MAE) of the reconstruction converges to about 0.05.


Table 2. Detection performance of the proposed mechanism.

Test system	Correctly identified	Normal to attack	Attack to normal	Detection accuracy	Training time	Average testing time
IEEE 14-bus	81734	3344	2282	93.56%	3060.85s	2.77 ms
IEEE 118-bus	81026	3618	2716	92.75%	3146.36s	2.94 ms
Average	81380	3482	2500	93.16%	3103.61s	2.86 ms
Fig. 7
Download : Download high-res image (230KB)
Download : Download full-size image
Fig. 7. The reconstruction error over the epochs.

5.4. Experimental protocl of LSTM-Autoencoder
Furthermore, we study the impact of the number of the hidden layer units of the Encoder and Decoder on the detection performance. In this experiment, the Encoder and Decoder with one hidden layer. The multiple of the number of the input layer units is defined as  ranging from 0.2 to 0.8, which means that the LSTM-Autoencoder has the sturcture as input layer-c∗input-c∗input-output layer. We would like to clarify that in LSTM we use “Henormal” method to initiate the weights, and select “Sigmoid” as the activation function and the transfer function. The learning rate is set to 0.001, and the observation window  is set to 5. The parameters  and  of VMD are set to 20000 and 7. False Positive Rate (FPR) and False Negative Rate (FNR) are used to assess the performance of our detection mechanism and defined as the probability that the “normal” data is identified to be “attack” and the probability that the “attack” date is identified to be “normal”. As shown in Fig. 8, the detection accuracy increases as  increasing. We can get the highest detection accuracy when  = 0.8. It certainly increases the time to train.

Fig. 8
Download : Download high-res image (296KB)
Download : Download full-size image
Fig. 8. Detection accuracy and training time with different LSTM-Autoencoders.

LSTM-Autoencoder with  increasing. We set  to 0.6 because the detection accuracy changes little when it ranging from 0.6 to 0.8.

Analyzing the impact of the number of hidden layers on the detection performance. From Fig. 8 we can observe that the detection accuracy only raises 2% with the sturcture of input layer-0.8∗input-0.8∗input-output layer comparing with that of input-0.6∗input-0.6∗input-output. Fig. 9 shows that the FNR and FPR for both bus systems are achieved below 4% when c increases from 0.6 to 0.8. But as the number of the hidden layer increases the training time may increase substantially. This demonstrates that the structure input-0.6∗input-0.6∗input-output is reasonable.

Fig. 9
Download : Download high-res image (336KB)
Download : Download full-size image
Fig. 9. FNR and FPR with different LSTM-Autoencoders.

5.5. Robustness of proposed method
We continue to numerically evaluate the robustness of the proposed detection mechanism to environmental noise. In this simulation, we add Gaussian Noise, Non-Gaussian noise and Mixed noise into the measurements, and assign the threshold . These measurements are used to train the LSTM-Autoencoder. Define the additive noise as , and the state vectors without and with attack are defined as 
 and 
, where 
. The false-to-state measurement ratio is defined as FSR = 10 log (
/
), where 
 is the variance of the “attack” estimated state variables, and 
. If 10log (
/
) = 2, it means that the variance of the state vector contributed by the attacker is 1.58 dB higher than the “normal” state. If FSR ​= ​0, it means that there is no FDIA. The structure of LSTM-Autoencoder is fixed as input layer-0.8∗input-0.8∗input-output layer. In LSTM we use “Henormal” method to initiate the weights, and select “Sigmoid” as the activation function and the transfer function. The learning rate is set to 0.001, and the observation window  is set to 5. The parameters  and  of VMD are set to 20000 and 7. Fig. 10 shows the detection accuracy of our proposed detection mechanism under 3 kinds of noise with the FSR changing from 3 to 15. We can conclude that as the FSR increases, the detection accuracy decreases under the three kinds of noise. Gaussian noise has the minimum impact on detection accuracy and Non-Gaussian noise has the maximum impact on detection accuracy. This is because that the patterns of the“normal” data and the “attack” data are more distinguishable when the noise has regular distribution. To investigate the detection ability for different attack intensities. We classify the FDIAs into three categories: 1) strong attack: if FSR is bigger than 0.97, namely 
/
≈1.25, or the mean of the compromised voltage magnitude 
 is bigger than 1.1 times of that of the normal voltage magnitude 
, or 
 is bigger than 1.3 times of 
. 2) weak attack: if FSR is smaller than 0.45, namely 
/
≈1.11, or the mean of the compromised voltage magnitude 
 is bigger than 1.05 times of that of the normal voltage magnitude 
, or 
 is smaller than 1.1 times of 
. 3) medium attack: all other FDIAs. The White Gaussian Noise  is assigned as the environment noise. From Fig. 11, we can observe that the proposed mechanism is more powerful to detect the “strong” attack than detect the “weak” attack. In both bus systems, the detection accuracy for the 3 attacks is more than 90%. But it is lower for the IEEE 118 bus-system than that for the IEEE 14 bus-system, this is because the fluctuation of the state magnitudes is not significant, and normal power system operation events may also introduce more complex power injection/flow changes in the larger system. Fig. 11 also shows that the detection performance of our proposed method will decrease with FSR increasing. Although in the real time scenarios noise is mostly non-Gaussian, the detection accuracy of our proposed method can reach about 90% and 85% when the FSR is less than 8 for IEEE 14-bus and 118-bus systems. The proposed method is effective to detection the proposed FDIA. We would like to clarify that conducting the experiments under the noisy environment is to mainly verify the robustness of the proposed method. Same like reference (He et al., 2017), the authors also verify their proposed method under the assumption that the environment is noisy.

Fig. 10
Download : Download high-res image (435KB)
Download : Download full-size image
Fig. 10. Detection accuracy with the different noise environment for IEEE 14-bus and 118-bus systems.

Fig. 11
Download : Download high-res image (235KB)
Download : Download full-size image
Fig. 11. Detection Accuracy of different attack.

For the medium attack, the detection accuracy for IEEE 14-bus system is higher than that for IEEE 118-bus system. This is because a slightly larger sudden change in consecutive system states, which does not comply with the nature of system dynamics, and it maybe a indication of FDIA, and our proposed mechanism can successfully capture this feature. However, it can be observed that the detection accuracy for the IEEE 118-bus system is higher than the detection accuracy for the IEEE 14-bus system. This is because the noise influence is as significant for detecting the compromised voltage angle in IEEE 118-bus system, but not significant for detecting the voltage angle and voltage magnitude, it means that the proposed mechanism increases the false positive in IEEE 14-bus system. Despite the slightly degraded performance for detecting the weak attack in IEEE 14-bus system, our mechanism can still achieve a satisfactory over all detection accuracy for the two test system (the overall detection accuracy for IEEE 14-bus system is greater than that for IEEE 118-bus system in the 3 attack scenarios).

5.6. Comparison result and discussion
In this subsection, we firstly study the impact of the observation window size on detection performance and then do some comparison experiments with the existing methods and discuss the experiment results. In this case, the observation window size  ranging from 4 to 8. The structure of LSTM-Autoencoder with variable observation window size and other simulation parameters are adopted as Section V-E described. As shown in Fig. 12, the highest detection accuracy is the highest when the observation window size . Afterwards, the detection accuracy decreases somewhat. This is because as the observation window size increases, there is more information involved in one-time input and may be not enough units in the Encoder and Decoder layer to effectively represent the input. In the IEEE 118-bus system, although the detection accuracy is.

Fig. 12
Download : Download high-res image (390KB)
Download : Download full-size image
Fig. 12. The impact of the observation window size on IEEE 14-bus and 118-bus systems.

The highest when , the larger window size will reduce the speed of Adam optimizer and increase the time for modeling LSTM-Autoencoder. When , for the two test systems, the detection accuracy for the “normal” and “attack” estimated states are 95.86% and 92.88%, 93.26% and 92.24%, respectively. From Fig. 12 we can see that in IEEE 14-bus system, the average detection rate (True Negative Rate, TNR) are the highest when the observation window size , but the Compromised-to-Compromised detection rate (True Positive Rate, TPR) is the highest when the observation window size . While in IEEE 118-bus system, the average detection accuracy and the Normal-to-Normal detection rate are the highest when the observation window size , but the Compromised-to-Compromised detection rate is the highest when the observation window size . Considering the average detection rate, we can select the observation window size as 7 and the average accuracy are about 94% and 93% for IEEE 14-bus and 118-bus systems, respectively. However, the larger window size will reduce the speed of Adam optimizer and increase the time for modeling LSTM-Autoencoder. Considering the trade-off between the detection rate and the time consumption of model training, we can select the window size as for both bus systems. We simultaneously evaluate the performance of the proposed mechanism facing the operation faults environment. We set the constant value of −15 MW as the load of the PQ buses to simulate the operation fault condition because the normal level of the power flow on the bus is about 10 MW. Define the number of the operation fault buses as . One-tenth of the testing data generated by the operation faulted measurements.

The simulation result is presented in Fig. 13, which illustrates that the proposed detection mechanism can effectively identify the “anomalous” estimated states with operation faults. With the number of fault buses  increases, the detection accuracy improves. For the IEEE 14-bus system, the detection accuracy is 94.54% and 95.56% when  and . This is because with the  increasing, the wrong operation fault loads may induce more “anomalous” estimated states. The measurements in the IEEE 118-bus system change faintly with operation faults because there are more PQ buses of 118-bus system than that of 14-bus system, and this results in the proposed mechanism with a general detection performance for the larger system.

Fig. 13
Download : Download high-res image (226KB)
Download : Download full-size image
Fig. 13. The detection accuracy under different number of buses with operation faults.

At last, we validate the advantages of our detection mechanism by comparing with RNN-Autoencoder (Wong and Luo, 2018) based detection mechanism and ARIMA (Guo et al., 2019b) based detection mechanism using the following evaluation indexes: TPR, Precision, Recall and FPR. As LSTM is a modified version of RNN, in this part of experiment RNN-Autoencoder has the same structure of LSTM-Autoencoder. The Receiver Operating Characteristic (ROC) curve and the Precision Recall (P-R) curve are plotted in Fig. 14 and Fig. 15, respectively. TPR is used to evaluate the sensitivity of our scheme and defined as the probability that the “attack”data is identified to be “attack”. From Fig. 14, we can observe that the proposed mechanism can archive the best performance, and the area under the curve which is called AUC = 0.9464. This validates the excellent performance of our detection scheme. We can also observe that the proposed scheme has the highest precision under the same Recall. As shown in Table 3 we can see that our proposed method is superior to the other two methods.

Fig. 14
Download : Download high-res image (265KB)
Download : Download full-size image
Fig. 14. The ROC curves comparison for different algorithms.

Fig. 15
Download : Download high-res image (284KB)
Download : Download full-size image
Fig. 15. The P-R curves comparison for different algorithms.


Table 3. Detection performance comparison.

Detection Mechanism	Accuracy	F1	Recall
LSTM-Autoencoder	94.56%	93.68%	94.54%
RNN-Autoencoder	89.14%	88.91%	88.47%
ARMA	84.75%	84.24%	84.62%
From Table 3, we can see that the detection performance of the proposed method is better than that of ARMA and RNN-Autoencoder. This is because RNN has problems of gradient vanishing or explosion, and LSTM has more complicated gate functions that learns to control the flow of information, to prevent the vanishing gradient and to allow the recurrent layer to more easily capture long-term dependencies. Futhermore, ARMA requires that the series data be stationary, or stable after differencing. It can only capture the linear relationship but not the nonlinear relationship. This results in the relatively poor detection performance compared with LSTM-Autoencoder.

6. Conclusion
In this paper, we propose a novel mechanism to detect a new AC FDIA which tries to induce scheduling and load shedding. A signal-processing-based method VMD is employed to decompose the estimated state into several modes, from which we can extract the spatial and the spectral features. We use the feature vectors extracted from the “normal” estimated states to train the LSTM-Autoencoder model which can learn the temporal correlations between the feature vectors. Using the trained LSTM-Autoencoder, we calculate and update the deviation vectors of the reconstruction errors as the experimental dataset. Based on the labeled deviation vectors, the LR classifier is capable of identifying FDIA from the normal system operation events. In the simulations, we first study the performance of the proposed mechanism, and determine the number of the decomposed modes. Then we investigate the impact of the structure of LSTM-Autoencoder on the detection performance. We also study the impact of the noise and the observation window size, and the number of the fault buses on the performance of our detection mechanism. we evaluate the performance of our method by comparing with those of the RNN-Autoencoder and ARIMA-based methods. The simulation results illustrate that the proposed detection mechanism is robust to the environment noise, and it is resilient to the faulted buses. The simulation results show that the proposed mechanism is effective to detect the FDIA and it has a better performance than the other existing detection methods. In the future, we will exploit the behaviors of the FDIA in big power system, and analyze the relations between the attack characteristics and the complexity of the power system. We will study how to apply the proposed mechanism in detecting FDIA in big power system with a rapid speed.