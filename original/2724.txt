Detecting and delineating hot spots in data from radiation sensors is required in applications ranging from monitoring large geospatial areas to imaging small objects in close proximity. This paper describes a computational method for localizing potential hot spots in matrices of independent Poisson data where, in numerical terms, a hot spot is a cluster of locally higher sample mean values (higher Poisson intensity) embedded in lower sample mean values (lower background intensity). Two numerical algorithms are computed sequentially for a 3D array of 2D matrices of gross Poisson counts: (1) nonnegative tensor factorization of the 3D array to maximize a Poisson likelihood and (2) phase congruency in pertinent matrices. The indicators of potential hot spots are closed contours in phase congruency in these matrices. The method is illustrated for simulated Poisson radiation datasets, including visualization of the phase congruency contours. The method may be useful in other applications in which there are matrices of nonnegative counts, provided that a Poisson distribution fits the dataset.

Introduction
Applications of radiation monitoring systems range from the detection of unsecured radioactive sources in otherwise normal environments to situational awareness after a nuclear disaster. Fixed-position sensor systems are popular (cf. [1, 2]) and there is increasing use of mobile sensors—ground-based [3,4,5,6], on aerial platforms [6,7,8], or combinations of both [9, 10].

A two-stage radiation monitoring system has acquisition and digitization of sensor data in a first stage followed by data processing in a second stage (cf. [10]). This paper focuses on data processing where the digitized sensor data is matrices of Poisson counts. In many applications, an objective in the processing stage is detection and delineation of potential radiation hot spots which, in numerical terms, means

discovering clusters of comparatively high radiation intensity in the digitized sensor data, and

quantifying the relative positions of the clusters.

We discuss a numerical computational method for this objective. The method is a combination of commonplace algorithms (for example, the discrete Fourier transform) and relatively newer results in tensor math for numerical data.

The numerical output of this processing is convenient for visual display and for superimposing on other digitized data, such as registered visual images (cf. [11]) or geospatial maps of a region of interest. For example, ATAK [12,13,14] is an application for Android smartphones and tablets which uses GPS together with maps of an operational area to display real-time information to field personnel. GPS-registered localization of potential radiation hot spots can be transmitted from a centralized server to ATAK devices and superimposed on infrastructure maps for local situational awareness. Near real-time numerical computation is expected on fast, inexpensive Graphical Processing Units [15].

“Tensor factorization and phase congruency for 2D frames of Poisson data” section describes the Poisson assumptions about the digitized sensor data and introduces the two key numerical computations. The computations are discussed and illustrated by simulation in “Nonnegative tensor factorization: Poisson data” and “Phase congruency in a 2D grid” sections. “Conclusions” section is conclusions. The Appendix has succinct summaries of the two computations, with references that contain the algorithmic details.

Tensor factorization and phase congruency for 2D frames of Poisson data
Various systems output sensor data at discrete time stamps (cf. [2,3,4, 16, 17]) with different physical interpretations and different digital formats. This paper concentrates on digitized sensor data in the format of 2D matrices in which the data is total measured counts in a Poisson process [18]. An example of contemporary technology is a coded aperture system for which an output matrix of Poisson data is computed when the input data is Poisson (cf. [19,20,21,22,23]).

We will call the 2D data matrix a frame. Each frame is an 𝑋×𝑌 grid of independent Poisson counts. When a sequence of frames is generated over time, each frame has a discrete time stamp or index marking its place in the sequence. We assume that the set-up for data-acquisition is the same for every frame in a sequence, in particular, the acquisition time interval for recording gross counts is the same and the points in the 2D grids remain registered with respect to the object or area being scanned.

Given n frames with individual time stamps 𝑡1<𝑡2<⋯<𝑡𝑛, the 3D dataset 𝐃 is the 𝑋×𝑌×𝑛 array in which the n frames are “stacked” in order 1, 2, ..., n. By assumption, background radiation is independent and identically distributed (𝐢𝐢𝐝) Poisson counts with fixed intensity 𝜆𝐵 at each grid point in 𝐃. A potential hot spot in 𝐃 is a cluster or subgrid H of 𝐢𝐢𝐝 sample values which are greater on average than the 𝐢𝐢𝐝 sample values at neighboring grid points. Unless stated otherwise, it is assumed that the location, shape, and Poisson intensity 𝜆𝐻 of a hot spot H do not change in a sequence of frames. (Unshielding a hot spot and small shifts in position are discussed respectively in the short “Unshielding a source” and “Real or apparent motion of a hot spot” sections.)

Two numerical computations constitute our two-step procedure for detection and delineation of potential hot spots in dataset 𝐃:

1.
nonnegative tensor factorization of 3D array 𝐃 [24, 25].

2.
phase congruency in pertinent 2D arrays [26,27,28].

The tensor factorization is computed to maximize a Poisson likelihood conditioned on the sample dataset 𝐃. This yields a second 3D array 𝐌 to augment 𝐃; then phase congruency is computed for both 𝐃 and 𝐌. The coordinates of closed contours in phase congruency define the position and approximate outline of potential hot spots in 𝐃. Clusters in scatter plots of phase congruency are additional information.

Phase congruency is a frequency-based analysis based on well-known methods in discrete math, including wavelets and discrete Fourier transforms. The tensor factorization is a relatively new development in tensor math. Computation with tensors is more complex than with conventional 2D matrices, but the tensor factorization can reveal numerical relationships in higher dimensions.

Nonnegative tensor factorization: Poisson data
Notation and computed tensor M
Given the nonnegative integer array 𝐃, we compute a nonnegative real-number array 𝐌 to maximize the conditional Poisson likelihood 𝑃(𝐃|𝐌). The objective is localization of potential hot spots in 𝐃, to which end the computed array 𝐌 augments the dataset 𝐃 both for visual comparisons and for the computations in “Phase congruency in a 2D grid” section.

The array 𝐌 is computed in tensor math. In computational linear algebra, an 𝑛th-order tensor is an n-dimensional array of real numbers [29,30,31]. Thus, the 64×64×20 dataset 𝐃 in the following “Simulation” section is a 3rd-order tensor with indices 1 to 64 in its tensor mode-1 and mode-2 (the first and second dimensions in the 3D array) and index 1 to 20 in its tensor mode-3 (the third dimension).

Computations in tensor math that minimize certain error functions have become important tools in applications involving real-number arrays of data (cf. [24, 25, 29, 32, 33] and their references). “Nonnegative tensor factorization of Poisson data” section in Appendix is a succinct outline of the computation of the tensor 𝐌 to maximize 𝑃(𝐃|𝐌) by solving an equivalent minimization problem [24, 25].

The computed tensor 𝐌 has the same dimensions as the data tensor 𝐃. For short notation, let index i denote a 3D-location in tensor 𝐃. Let 𝑥𝑖 [or 𝑚𝑖] denote the value in 𝐃 [or 𝐌] at location i. A value 𝑚𝑖 in 𝐌 is usually not a simple sample mean of the data 𝐃 in any single dimension; however, the sum ∑𝑖𝑚𝑖 in 𝐌 equals the sum ∑𝑖𝑥𝑖 in 𝐃, and the sample mean value 𝜇𝐃 of the entire dataset 𝐃 is preserved in the projection of tensor 𝐌 in each of its three modes:

𝜇𝐃=𝜇𝐌1=𝜇𝐌2=𝜇𝐌3.
The sample variance of 𝐌 in each of its modes is smaller than the corresponding sample variance of 𝐃:

𝜎2𝐌𝑖<𝜎2𝐃𝑖 for 𝑖=1,2,3.
This tends to smooth the values in subgrids of similar values in 𝐌 while sharpening the boundaries between adjacent subgrids of higher and lower values. Small subgrids or point sources with insufficient sample count in 𝐃 are not guaranteed to emerge strongly in 𝐌, especially if dominated by nearby subgrids with higher total counts. Overall, however, recurrent subgrids are accentuated more in 𝐌 than in 𝐃, and this is an advantage in the computation of phase congruency in “Phase congruency in a 2D grid” section.

The optimal tensor 𝐌 is computed in a factorized form for which the user must specify the number of components R [24, 25, 34]. We use 𝑅=10, a number found empirically for datasets in this paper such that changes in the numerical values computed in 𝐌 are relatively insignificant for 𝑅>10.

Simulation
A dataset 𝐃 is simulated as follows:

Each frame is a 64×64 grid. Background radiation is simulated for each frame separately as iid Poisson with intensity 𝜆𝐵=0.1. For comparisons across different cases, the same simulated background frames are repeated in all examples.

The dataset 𝐃 is 64×64×20, a 3D grid of 20 frames of independent Poisson random variables totaling approximately 82K samples. For reference, the sample mean of the 20-frame background grid without hot spots is 0.0999 and the variance is 0.1001.

To simulate a hot spot H, a subgrid is generated 𝐢𝐢𝐝 with Poisson intensity 𝜆𝐻, 𝜆𝐻>𝜆𝐵, and embedded in a background frame. Locations and shapes of hot spot subgrids within a 64×64 frame and across the 20 frames are described below. To compare results when hot spots are added or deleted, the same simulated values for a hot spot are used regardless of whether other hot spots are present.

The simulated hot spot geometries are a point source, a 2×2 subgrid, and a larger angled shape with different Poisson intensities in two parts.

Hot spots 𝐻1 and 𝐻2
Two hot spots 𝐻1 and 𝐻2 are embedded in each frame of the 3D grid of background samples. 𝐻1 is a point source—the same single grid point in each 64×64 frame with iid sample values at Poisson intensity 𝜆𝐻1=4. 𝐻2 is a square 2×2 subgrid with 𝜆𝐻2=𝜆𝐻1/4=1.

Figure 1a is a 3D bar plot of the sample mean of the 64×64×20 dataset 𝐃 in its tensor mode-3, which is the 64×64 matrix of sample mean values in the 20 frames. Figure 1b is the corresponding plot for the mode-3 mean values of tensor 𝐌 that maximizes the Poisson likelihood 𝑃(𝐃|𝐌).

Fig. 1
figure 1
3D bar plots for two hot spots 𝐻1,𝐻2. a Data tensor 𝐃. b Computed tensor 𝐌.

Full size image
As noted in “Notation and computed tensor M” section, the sample means are equal and the sample variance in a mode of 𝐃 is larger than in the same mode of 𝐌. The sample mean is 𝜇𝐃=𝜇𝐌=0.1019 and the sample variances are

 mode-3  mode-2  mode-1 𝐃0.01030.00180.0017𝐌0.00530.00080.0008
Hot spots 𝐻1,𝐻2,𝐻3
Figure 2 is the same layout as Fig. 1 but adds an additional hot spot 𝐻3, a right-angled subgrid with its two arms having different Poisson intensities. The intensity in the arm parallel to the mode-1 axis is 𝜆𝐻1/8=0.5 and in the other arm is 𝜆𝐻1/4=1=𝜆𝐻2.

Fig. 2
figure 2
3D bar plots for three hot spots 𝐻1,𝐻2,𝐻3. a Data tensor 𝐃. b Computed tensor 𝐌.

Full size image
The sample mean is 𝜇𝐃=𝜇𝐌=0.1072 and the sample variances are

 mode-3  mode-2  mode-1 𝐃0.01500.00210.0022𝐌0.01070.00100.0011
Phase congruency in a 2D grid
The method of phase congruency
Both the data tensor 𝐃 and the optimal Poisson-likelihood tensor 𝐌 in “Nonnegative tensor factorization: Poisson data” section are discrete grids in which a potential hot spot is a subgrid of higher mean value embedded in a neighborhood of lower mean value. A method based on Fourier frequencies is used for automatic (unsupervised, non-interactive) detection and delineation of these subgrids.

In practice, an unsupervised method should accommodate different ranges of numerical values in grids and diverse subgrid shapes. Phase congruency in a matrix of real numbers does this by computing agreement or congruency locally in a 2D grid in the frequency domain [26,27,28].

In the Fourier representation of signals, including multidimensional arrays of numerical data, the unique role of phase in locating “events” such as edges or points has long been recognized (cf. [35]). In conventional image processing, phase congruency assigns an invariant measure of significance to localized edges, lines, and corners [26,27,28, 36,37,38]. For the numerical data in 𝐃 and 𝐌, it reveals boundaries separating subgrids of higher average values from lower average values, thereby delineating clusters with higher sample means embedded in local neighborhoods of lower sample means. The coordinates of closed contours in 2D phase congruency define the location and outline of a potential hot spot cluster.

Cluster boundaries in 2D grids are step discontinuities characterized by coherence in phase of Fourier frequency components at several scales and orientations. Kovesi’s refined algorithm [26] with noise compensation uses wavelets for local frequency information at a fixed number of scales and filters at a fixed number of orientations. Given an 𝑋×𝑌 matrix, the computation returns an 𝑋×𝑌 array of values in the range 0 to 1 where 0 indicates no significant “event” and 1 indicates high significance. Phase congruency is a dimensionless, normalized measure, and the information in phase congruency covariance matrices is conveniently displayed as contour and scatter plots.

In practice, the user must assign parameters such as the number of wavelet scales and the number of orientations. “Phase congruency in 2D grids” section in Appendix lists the values recommended in the literature [26] and used in this paper.

Simulation
Two and three hot spots
Figure 3 shows phase congruency computed for the data 𝐃 in Fig. 1 with the two hot spots 𝐻1 and 𝐻2. Figure 3b is a contour plot for phase congruency in the 64×64 mode-3 sample mean values, the sample values averaged over the 20 frames. The 2D grid coordinates of the two closed contours in Fig. 3b define the location and outline of two potential hot spots.

Fig. 3
figure 3
Phase congruency in data tensor 𝐃 in Fig. 1. a, c Scatter plots for the 20 frames along mode-3. b 3-level contour plot

Full size image
Let 𝑁𝐻 denote the sum of the sample values in a potential hot spot H. The integer 𝑁𝐻 is the Poisson count observed in the subgrid H of the larger grid 𝐃. The counts enclosed by the respective contours of 𝐻1 and 𝐻2 in Fig. 3b are 𝑁𝐻1=83 (sample mean 4.15 in the 20 frames) and 𝑁𝐻2=92 (sample mean 1.15). The total count in 𝐃 outside these two contours is 8010 (approximate background sample mean 0.098 in the 20 frames).

Phase congruency in the mode-1 and mode-2 projections is additional information. Figure 3a, c are scatter plots of phase congruency of the respective sample mean values (a) in the 20×64 mode-2 projection retaining mode-3 and mode-1 axes and (c) in the 64×20 mode-1 projection retaining mode-2 and mode-3 axes. These scatter plots are contour magnitudes with the extremes (lowest and highest) omitted. The mode-3 index steps from the newest frame 20 to the oldest frame 1, bottom-to-top in (a) and left-to-right in (c).

Clusters for 𝐻1 and 𝐻2 in the scatter plots (a), (c) are irregular and incomplete but align with the hot spot contours in (b); however, clusters are also seen outside the true hot spots. These extra clusters are created by random events in the background Poisson process, specifically, by random “Poisson clumps” [39] of grid points with higher sample values than the neighboring values. These events occur randomly from frame to frame, but when averaged over all 20 frames, most counts are too small to emerge from background as phase congruency contours in (b).

Figure 4 shows phase congruency in the computed tensor 𝐌 in the same layout as Fig. 3. The two closed contours in Fig. 4b correlate strongly with Fig. 3b; however, the scatter plots in Fig. 4a, c have fewer random clusters and better delineation of the two hot spot clusters aligned with the contours in (b). The gaps in plots for 𝐻2 in frames 1 to 7 in Fig. 4a and frames 3 to 6 in Fig. 4c are due to random samples in 𝐻2 with comparatively low values in those projections at those particular frames.

Fig. 4
figure 4
Phase congruency in computed tensor 𝐌 in Fig. 1. a, c Scatter plots for the 20 frames along mode-3. b 3-level contour plot

Full size image
Figure 5 shows phase congruency in the data 𝐃 in Fig. 2 with the three hot spots 𝐻1,𝐻2,𝐻3. Figure 6 has the same layout for the computed tensor 𝐌. 𝐻1 is occluded by 𝐻3 in the 20×64 projection in (a), but the count in 𝐻1 per frame accumulates in that mode-1 projection. The gap in scatter plot (a) at mode-1 indices 46 to 49 reflects the lower count in that arm of 𝐻3 without 𝐻1. The other arm of 𝐻3 has Poisson intensity 1 instead of 0.5 and averages twice the count.

Fig. 5
figure 5
Phase congruency in data tensor 𝐃 in Fig. 2. a, c Scatter plots along mode-3. b 3-level contour plot

Full size image
Fig. 6
figure 6
Phase congruency in computed tensor 𝐌 in Fig. 2. a, c Scatter plots along mode-3. b 3-level contour plot

Full size image
The contours in Fig. 5b delineate the three subgrids 𝐻1,𝐻2,𝐻3. Their respective counts are 𝑁𝐻1=83 (sample mean 4.15 in the 20 frames), 𝑁𝐻2=92 (sample mean 1.15), 𝑁𝐻3=489 (sample mean 0.81). The total count in 𝐃 outside these three subgrids is 7521 (approximate background sample mean 0.093).

Unshielding a source
If a hot spot is heavily shielded by other material initially but the shielding is removed at some time stamp in a sequence of frames, clustering in mode-3 in tensors 𝐃 and 𝐌 facilitates detecting its unshielding. (Evolution might also occur, as in a sequence of frames of the uptake of a radiotracer by an organism [17]).

The data 𝐃 in Fig. 7 has 𝐻2 shielded in frames 1 to 9, then unshielded in frames 10 to 20. Figure 8 is the same layout for the computed tensor 𝐌. Qualitatively speaking, Figure 8 assists the localization of 𝐻2 with better definition in the scatter plots than Fig. 7.

Fig. 7
figure 7
Phase congruency in data tensor 𝐃 with unshielding of 𝐻2 at frame 10 (mode-3 index 10). a, c Scatter plots along mode-3. b 3-level contour plot

Full size image
Fig. 8
figure 8
Phase congruency in computed tensor 𝐌 with unshielding of 𝐻2 at frame 10 (mode-3 index 10). a, c Scatter plots along mode-3. b 3-level contour plot

Full size image
Real or apparent motion of a hot spot
There may be real or apparent movement of a hot spot in a sequence of frames. Repositioning a sensor array creates an apparent shift of a stationary source and misaligns with previous frames, but if the real or apparent motion is minor relative to the generation of frames, then the hot spot shift is small in consecutive frames in 𝐃.

Figures 9 and 10 show a small shift in 𝐻2 at frame 10. The dotted-line arrow in the contour plot (b) indicates the direction of the shift. The scatter plots (a), (c) show the relatively small shift in the 𝐻2 cluster beginning at mode-3 index 10 (frame 10), with fewer random clusters and better delineation in Fig. 10 than Fig. 9.

Fig. 9
figure 9
Phase congruency in data tensor 𝐃 with apparent motion of 𝐻2 at frame 10 (mode-3 index 10). a, c Scatter plots along mode-3. b 3-level contour plot with dotted-line arrow in direction of motion

Full size image
Fig. 10
figure 10
Phase congruency in computed tensor 𝐌 with apparent motion of 𝐻2 at frame 10 (mode-3 index 10). a, c Scatter plots along mode-3. b 3-level contour plot with dotted-line arrow in direction of motion

Full size image
Conclusions
This paper presents a two-step, numerical computation for automatically localizing potential hot spots in matrices of gross Poisson counts:

1.
Given a 3D dataset 𝐃 of 2D frames of Poisson count data, a 3D tensor factorization 𝐌 is computed to maximize the conditional Poisson likelihood 𝑃(𝐃|𝐌). The maximization of this likelihood is achieved by minimizing a Kullbach–Leibler divergence function [25, 40], specifically, 𝐌 is computed in tensor math to minimize the function ∑𝑖𝑚𝑖−𝑥𝑖 log 𝑚𝑖 for index i over the nonnegative integers 𝑥𝑖 in 𝐃 and the corresponding nonnegative reals 𝑚𝑖 in 𝐌.

2.
Phase congruency is computed for the two grids 𝐃 and 𝐌 projected in their three tensor modes. Phase congruency provides an invariant, normalized, numerical measure of “events” in 𝐃 and in 𝐌. Kovesi’s method [26] incorporates compensation for noise, a weighting for the spread of local frequencies, and filtering attuned to step discontinuities in diverse orientations in the grids.

The computed tensor 𝐌 augments the data tensor 𝐃 for analysis of phase congruency. There is strong correlation between 𝐃 and 𝐌 in the contours of phase congruency in the sample mean values over a sequence of frames, but there are greater differences in the contours of phase congruency in the sample means along the axis of frames (along the capture-time index). Random clusters may occur in a sequence of frames in 𝐃 due to Poisson clumping of background counts, even at a low Poisson rate. The computation of 𝐌 tends to suppress these random clusters and reveal the contours of recurring clusters.

Areas of current research and development include:

1.
The mathematical relationship between background Poisson probabilities and the level sets of phase congruency in a grid 𝐃. The goal is a probability-based decision rule for potential hot spots based on results in Poisson Scan Statistics (cf. [41,42,43]). This work includes a characterization of false positives (random clusters incorrectly called hot spots) and false negatives (failures to detect true hot spot clusters). Bayesian Spatial Scan Statistics [44] may yield lower error rates.

2.
Fusion of data from multiple sources. Some applications have multiple radiation monitoring systems [9] or multi-modal sources of information [45]. In certain situations, tensor math facilitates the fusion of numerical data [46] into a composite situational map for a geospatial area.

The application in this paper is matrices of Poisson radiation data; however, the method is potentially useful in other applications involving matrices of nonnegative integer counts that are described by a Poisson probability law. We point out that if the average counts are small and the occurrences of high counts are rare events in a dataset, then a Poisson approximation might be justified by the so-called “Poisson law of small numbers” [47].

Appendix
Appendix
Nonnegative tensor factorization of Poisson data
Background references in tensor computation with definitions, basic tensor math, and aspects of numerical algorithms include [29,30,31,32,33]. This section summarizes the nonnegative tensor factorization of a data tensor 𝐃 of independent Poisson samples.

In contemporary numerical math, an 𝑛th-order tensor is an n-dimensional array of real numbers. In this terminology, a 1D vector is an order-1 tensor and an 𝑀1×𝑀2 matrix is an order-2 tensor. If tensor 𝐃 is an 𝑀1×𝑀2×⋯×𝑀𝑛 array, then its mode-1 index is the integer range 1:𝑀1, its mode-2 index is 1:𝑀2, ..., its mode-n index is 1:𝑀𝑛.

Classic matrix computation is a starting point for developments in tensor computation [30]. In particular, many aspects of Singular Value Decomposition (SVD) of matrices generalize to Higher-Order SVD (HOSVD) of 𝑛{th}-order tensors [29, 33]. Further results in tensor math concern factorizations for least-squares error (LSE); specifically, given tensor 𝐃, the tensor 𝐃̂  is computed in a designated factorized form to minimize the norm ||𝐃−𝐃̂ ||𝐹 [32, 33]. (The Frobenius norm ||𝐘||𝐹 of tensor 𝐘 is the square root of the sum ∑𝑖𝑦2𝑖 over all the values 𝑦𝑖 in 𝐘 [30]).

Implicit in using LSE for a rank-1 tensor factorization of 𝐃 is an assumption of Gaussian variation in the data [24]. An alternative is to compute a Poisson model 𝐌 for tensors of nonnegative counts which might be sparse [24, 25]. This includes nonnegative arrays of radiation data 𝐃 which is Poisson in distribution.

Given order-n tensor 𝐃 of nonnegative integer counts, the tensor 𝐌 is computed to maximize the conditional Poisson likelihood 𝑃(𝐃|𝐌). 𝐌 is a tensor of nonnegative real numbers the same size as 𝐃. Letting index i denote a 3D-location in 𝐃 and 𝑥𝑖 [or 𝑚𝑖] the value in 𝐃 [or 𝐌] at i, then the likelihood 𝑃(𝐃|𝐌) is maximized by minimizing the function

∑𝑖𝑚𝑖−𝑥𝑖 log 𝑚𝑖,
the negative log of 𝑃(𝐃|𝐌) except for an additive constant that depends only on the dataset 𝐃. The set {𝑚𝑖} of local Poisson parameters in 𝐌 optimizes 𝑃(𝐃|𝐌) assuming independent samples of Poisson random variables in 𝐃.

The iterative computation developed in [24, 25] computes the optimal tensor 𝐌 in a rank-1 factorized form. For an 𝑛{th}-order tensor 𝐃 and a user-specified number of components R, the method computes scalors 𝛼𝑟 for 1≤𝑟≤𝑅 and matrices 𝐴(𝑖) of respective sizes 𝑀𝑖×𝑅 for 1≤𝑖≤𝑛; then the tensor 𝐌 is

𝐌=∑𝑟=1𝑅𝛼𝑟𝑎(1)𝑟∘𝑎(2)𝑟∘⋯∘𝑎(𝑛)𝑟
where 𝑎(𝑖)𝑟 is the 𝑟th column of matrix 𝐴(𝑖) and ∘ is outer product. The outer product of n matrices creates an 𝑛th-order tensor.

Convergence of the iteration to a tensor 𝐌 maximizing 𝑃(𝐃|𝐌) has been proved for mild conditions on the nonzero values in 𝐃 (roughly, both the density of nonzero values and their spread with respect to the size of the component matrices 𝐴(𝑖) must be adequate) [24]. The implementation in MATLAB Tensor Toolbox version 2.6 [34] is a version of the alternating Poisson regression in [25]. We used default values of the control parameters (see [34]) except that the stopping tolerance was 0.5e−03. Random number generation was reset to its default seed at the start of each run so that the iteration began with the same “randomized” initial tensor. As noted in “Nonnegative tensor factorization: Poisson data” section, the number of components 𝑅=10 for these datasets is an empirical value where, for 𝑅>10, the computed tensor 𝐌 has relatively insignificant changes in numerical values.

Tensor factorization reveals multilinear relationships in a multidimensional numerical dataset. There are well-documented numerical methods to maximize conditional Poisson likelihood without tensor math (cf. [21,22,23, 38, 40]), but a mathematical model of the source-to-detector projection of data is required.

Phase congruency in 2D grids
Phase congruency in 2D finds boundaries between subgrids of higher mean values and adjacent neighborhoods of lower mean values, or vice versa. When the grid is sample mean values from a spatial Poisson process like dataset 𝐃 or from an array of Poisson parameters like computed tensor 𝐌, the boundaries delineate clusters of samples iid at higher Poisson intensities, or potential hot spots, embedded in background samples iid at a lower Poisson intensity. See [26,27,28] for details of phase congruency in 2D using wavelets. This section is a high level description and includes the control parameter settings recommended in the literature [26].

The input matrix is an 𝑋×𝑌 grid. For each grid location, and each scale and orientation, the initial energy is found by convolving the 2D array with even-odd quadrature filters, then the results are processed in these steps:

1.
Randomness in phase due to noise is estimated. Noise-suppression parameter 𝑘=2 indirectly sets a reference for noise in phase that is subtracted locally.

2.
To insure that the spread of frequencies is adequate, a sigmoid weighting function penalizes too few in-phase frequencies. Sigmoid function parameter 𝑐=0.5 is the cut-off below which deemphasis kicks in, and parameter 𝑔=10 controls the sharpness of the function.

3.
The adjusted energies are summed over all filter orientations and divided by the sum of the response amplitudes of the wavelets over all orientations and scales. This paper uses 4 wavelet scales and 6 filter orientations in 2D. To limit the spatial extent of the phase analysis in 2D, frequencies with wavelengths larger than 𝜆𝑚𝑖𝑛=3 are suppressed.

The maximum and minimum moments of phase congruency covariance are 𝑋×𝑌 matrices of phase information from all scales and orientations [28]. These matrices are computed in a suite of downloadable MATLAB programs [26] and their average is used in this paper. Phase congruency has been implemented for 3D grids [48] like dataset 𝐃; however, the 3D computation and visualization are more complicated than 2D, and a preliminary evaluation did not show substantial changes in the outcomes for the 3D datasets in this paper.