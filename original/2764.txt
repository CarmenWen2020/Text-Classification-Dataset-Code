Recent advances in Internet applications have facilitated information spreading and, thanks to a wide variety of mobile devices and the burgeoning 5G networks, users easily and quickly gain access to information. Great amounts of digital information moreover have contributed to the emergence of recommender systems that help to filter information. When the rise of mobile networks has pushed forward the growth of social media networks and users get used to posting whatever they do and wherever they visit on the Web, such quick social media updates already make it difficult for users to find historical data. For this reason, this paper presents a social network-based recommender system. Our purpose is to build a user-centered recommender system to exclude the products that users are disinterested in according to user preferences and their friends' shopping experiences so as to make recommendations effective. Since there might be no corresponding reference value for new products or services, we use indirect relations between friends and “friends’ friends” as well as sentinel friends to improve the recommendation accuracy. The simulation result has proven that our proposed mechanism is efficient in enhancing recommendation accuracy.

Introduction
With the development of modern technology and the wide-spread use of mobile devices, people nowadays have convenient access to information. Therefore, recommender systems are extensively adopted in various commercial and educational fields. Whenever a user is interested in a specific product or service, he or she may first ask his/her friends about their shopping experiences and then find more information on the Internet [1]. Nevertheless, it is very time-consuming to read customer reviews of all items listed in the search results list. For example, to find the best restaurants in the designated area, users may follow websites like Google Map to check the comments and star ratings one by one. However, those reviews with star ratings but no comments will be doubted.

Recommender systems have been applied in various fields, like tourism industry, food industry, and film industry and so on [2, 3]. There are many restaurants and movies to choose but not everyone meets the need because each person has different preference: it could be the prices, the brands or the specifications. In such a context, we began to think if we could build a user-centered, personalized recommender system.

Modern recommendation systems are becoming more and more complex with the improvement of technology, and they require a lot of resources [4, 5] and privacy issues. Different phases in the recommendation process also may be at risk for private data exposure [6]. For example, in the user modeling phase, information of every user will be accessed to confirm each one’s identity.

In this paper, we propose a novel recommender system that integrates with social network websites, like Facebook, Twitter and Yelp, to particularly deal with the cold-start problem. While users share information with friends, not only users facilitate the spread of messages and help promote the products or services or attract more consumers, but also the recommender system learns user preferences based on users or their friends’ most recent posts and relevant shopping experiences [7, 8]. According to such information, even in a cold-start condition without rating or review for new products or services, the recommender system still can make follow-up recommendations, and users can save time to find ideal targets. Through the newly established review procedure, users can find suitable products or services more quickly and accurately [9,10,11].

This paper is organized as follows. “Background and related work” section describes the background and related work, including recommender systems, Web 2.0 and social networks. “Methods” section states the problem and how to solve it. “Analysis” section gives the experiment and methodology, and results and discussion are presented in “Result and discussion” section. The conclusion is given in “Conclusion” section.

Background and related work
This section introduces recommender systems, Web 2.0 and social networks.

Recommender systems
According to Resnick and Varian [12], recommender systems, for user convenience, can filter information based on user preferences and provide information to users that they might be interested in. Schafer et al. [13] moreover mentioned three advantages of recommender systems: Converting Browsers into Buyers, Increasing Cross-sell, and Building Loyalty. Generally, traditional recommender systems require explicit or implicit user interactions. Explicit method relies on explicit user ratings while implicit ones are based on implicit observations of users’ behaviors. The Table 1 compares their differences.

Table 1 Recommender system comparison
Full size table
Figure 1 displays three most popular recommendation approaches: collaborative filtering, content-based filtering and hybrid recommender. Collaborative filtering, first introduced by Goldberg et al. [3] in 1992, was presented in their email filtering system, Tapestry. According to the known preferences of a group of users, the system could help other users perform filtering and make recommendations. Collaborative filtering approach collects user ratings on items to predict user preferences. Based on the opinions of other users who share similar interests, the approach filters items and makes recommendations. Using the collaborative filtering approach, people can help each other to perform filtering [14, 15]. In e-commerce recommender systems nowadays, collaborative filtering that make recommendations according to the shopping experiences of similar users is the most important and widely used approach. The Table 2 compares the advantages and disadvantages of the three recommendation approaches mentioned above.

Fig. 1
figure 1
Recommendation approaches

Full size image
Table 2 Comparison of three recommendation approaches
Full size table
Cold-start problem
Cold start, in the beginning, refers to the way a computer cuts off power and restarts, and later extends to the state of a product before a new product user comes into existence, establishes an effective relationship with the user, and continues to generate content and interaction. Cold-start problem is a common research question in recommendation systems [16,17,18] and its biggest problem with cold start is that the system cannot do anything about not collecting enough user information or making any inferences about the project.

Figure 2 shows three categories of cold-start problems:

New community: when a new system launches, there may be many items in the catalog but little user interaction and presence, making it difficult to provide reliable recommendations.

New items: new items of the system, there may be relevant content information, but there is no user interaction.

New users: new users may enter the system without any interaction with the systems and without any personalized recommendations for the guests.

Fig. 2
figure 2
Cold-start problems

Full size image
In recent years, methods like transfer learning [19], active learning [20], and zero-shot learning [21] are often used to solve cold-start problems.

Brief intro to Web 2.0
Instead of being identified by a software standard, Web 2.0, which is considered as a platform, refers to special user-centered web applications that enable information sharing and collaborative works on the Internet. Typical Web 2.0 applications include RSS, blogs, Wiki, social networking websites and so on. The differences between Web 1.0 and Web 2.0 are shown in the Table 3.

Table 3 Differences between Web 1.0 and Web 2.0.
Full size table
While Web 1.0 was a one-way information provider with little interaction between the user and the website, Web 2.0 is user-oriented.

Really simple syndication (RSS)
RSS is a format for delivering regularly changing web content like blogs, news headlines and information exchange. Users or applications that subscribe to RSS feeds are able to receive most recent updates.

Blog
Blogs, one of web 2.0 applications, allow users to have their own blogs or websites and become content sources that can be transformed into self-media. Each blog may comprise information, including text, pictures, graphics, audios or videos. Recent famous blog service providers in Taiwan include the “Wretch” blog and the “PIXNET” blog.

Wiki
Wiki is an open-source, collaborative system in which anyone can publish, edit and share. All types of users can contribute knowledge and peers can edit and help improve it.

Link: https://en-wikipedia-org.ezproxy.auckland.ac.nz/wiki/Wiki.

Social network
Social network that relies on human-to-human interactions has been a new form of communication, like Facebook, for example. Social network is also the basis of our proposed recommender system and it will be further defined in the following section.

Social network
A social network is comprised of a group of people who share similar personal interests, and can be a way to stay connected or befriend with others. Based on the idea, social networking websites are online platforms that people use to build social networks. Using the Internet, users can interact and share information with each other in real-time without face-to-face communication. In this paper, the social networking websites are used for simulation because each has a great number of users and massive amount of personal data.

Let us take Facebook as an example. It recommends new friends to users or help reconnect with long-lost friends. Games that users can play on Facebook, like Happy Farm, are able to bring families and friends together and strengthen their relationships.

Facebook: In addition to text messages, Facebook users are able to send information to others such as images, photos, pictures and voice messages. Also, Facebook users can add others as friends, connect with them, and receive automatic notifications when friends edit personal information or post status updates. The advantages and disadvantages of social media are presented in Table 4.

Table 4 Advantages and disadvantages of social media
Full size table
EdgeRank is the algorithm that Facebook originally used to decide which posts to show first in each user’s News Feed. Boring stories are hidden by the algorithm. “So, if your story doesn’t score well, no one will see it.”

Facebook, at the 2010 F8 Conference, revealed that they used three metrics to calculate EdgeRank:

∑𝑒𝑑𝑔𝑒𝑠𝑒𝑢𝑒𝑤𝑒𝑑𝑒,
(1)
𝑢𝑒 (Affinity Score): how “connected” is a particular user to the edge?

𝑤𝑒 (Edge Weight): what actions were taken by the user on the content?

𝑑𝑒 (Time Decay): how old is the post?

In 2014, Facebook CEO Mark Zuckerberg declared in a press conference that “our goal is to build the perfect personalized newspaper for every person in the world.” This newspaper would “show you the stuff that’s going to be most interesting to you”.

In 2015, Facebook made adjustments to its News Feed algorithm and decided what to prioritize according to the equation: News Feed Visibility = 𝐼×𝑃×𝐶×𝑇×𝑅.

𝐼 (Interest) = interest of the user in the creator.

P (Post) = the post’s performance amongst other users.

C (Creator) = performance of past posts by the content creator amongst other users.

T (Type) = types of posts (status, photos, links) that user prefers.

R (Recency) = how new the post is.

Facebook, in January 2018, took another move: prioritizing the posts from users’ friends and family, and de-prioritizing content from businesses, brands, and media.

Yelp
Yelp was initially an email-based system that users could email their friends with recommendations for restaurants. However, friends might receive so many emails. Later, Yelp added a review system that business owners cannot edit or remove the content on their business pages. To encourage users to write reviews, the company built the Yelp Elite Squad to recognize people who are active in the Yelp community and role models on and off the Yelp site. The Yelp Elite members are invited to local events and meet-ups, inspiring others to contribute their own opinions. Most review sites focus on one single product or service, like hotels or restaurants, and have no functions of social networking. However, Yelp has both.

Yelp has three major functions: (1) Check-In: this function is synchronized with Facebook so that users and their friends are able to see the rank of the check-in locations according to the number of check-ins; (2) Tips: it is a way to divide long reviews and short ones; (3) Compliment: users can send a compliment about a review or to a reviewer.

Methods
Based on the intimacy and friendship on Facebook, this paper uses the indirect relations on Yelp as the sources of data to deal with cold-start problem [23, 24].

Problem statement
People may search across the Internet for reviews for a shop, a location or a product. However, once the search is narrowed down to a particular range, users need to check the reviews one by one, which is an enormously time-consuming process. Users are unable to find what they need quickly.

Generally speaking, most people favor the reviews written by their friends or coworkers, rather than those by strangers. A cold-start problem means that the recommender system cannot make recommendations for a new user with no history. For example, without enough user history, Facebook would use friends with similar interests to alleviate the cold-start problem. But, if the information is little, the system is still unable to make recommendations [24,25,27].

To cope with the above-mentioned problems, we use Yelp check-ins and reviews to determine the relationships between users. Although this is not a novel method, we can find a user’s interests and the interest similarities with his/her friends (see Figs. 3 and 4). Moreover, different from other systems, we use the sentinel user selection [9] (see Fig. 5) as the basis of the recommender system. The sentinel user selection algorithm is based on Miao’s algorithm [9].

Fig. 3
figure 3
Direct relation

Full size image
Fig. 4
figure 4
Indirect relation

Full size image
Fig. 5
figure 5
Sentinel user on top layer

Full size image
System framework
The system framework (Fig. 6) consists of three parts: (1) data acquisition, including user interest analysis and product analysis; (2) personalized recommender system, including direct and indirect relations; and (3) list of recommendations for users.

Fig. 6
figure 6
System framework

Full size image
Procedures
Our method includes the following steps: (1) gather user data and user review, (2) select the business category (Select Food), (3) select the food types (5 types of cuisines), (4) test the recommendation data, and (5) analyze the recommendation data. The procedures flowchart were presented in Fig. 7.

Fig. 7
figure 7
Flowchart

Full size image
Analysis
The simulation is based on the crowd-sourced reviews from the Yelp Dataset (Link: https://www.yelp.com/dataset/).

Simulation design
Yelp collects reviews for not only foods but also businesses. Currently, there are 1293 kinds of businesses in total based on the Yelp Dataset. Restaurants in the “Food” category, which occupies most of the reviews, and there are about 140 labels defined by Yelp which will be the focus of our simulation.

Steps
1.
Extract the restaurant categories because the Yelp Dataset provides not only restaurant categories but also entertainment categories.

2.
Classify the restaurant categories and retrieve data of 13,273 restaurants in the top 5 food types: American (traditional), Italian, Chinese, American (new) and Mexican.

3.
Load reviews. Keep only one review written by the same user for the restaurant on the same day.

4.
Remove those reviews that are not categorized as useful, interesting, or cool.

5.
Get the interest value Iu(c).

With user information of interest,

Iu(𝑐)=𝑛𝑐∑𝑗𝑖=1𝑛𝑖,1≤𝑖≤𝑗,
(2)
nc: number of user comments in each category.

𝑛𝑖: number of users interested in this category.

𝑗: number of category.

Without user information of interest,

Iu(𝑐)=∑𝑛𝑖=1𝐹𝑖(𝑢)×𝐼𝑓𝑖(𝑐)∑𝑛𝑖=1𝐹𝑖(𝑢),𝑖≤𝑛,
(3)
𝐼𝑓𝑖: level of interest for each category of user friend.

𝑛: number of users’ friends on Yelp.

𝐹𝑖(𝑢): user to friend interaction scores based on ay-fb-friend-rank algorithm [28].

6.
Calculate the recommendation ratio to users.

𝑅(𝑐)=𝐼𝑢(𝑐)∑𝑗𝑘=1𝐼(𝑘),𝑖≤𝑐≤𝑗,
(4)
𝐼(𝑘): level of interest for all categories.

Test steps
All parameters in each category are weighted to compute the popularity weight so that users can find the item with the top R(c).

There are two weighting variables: (1) popularity of place, (P)P: users’ desired restaurants are usually hot attractions or iconic spots, (2) places that have been visited by friends, F(P): users are also interested in the places which friends have already visited. Other parameters include:

𝑊(𝑝): weight value of popularity.

𝛼: weight value of acceptance.

𝑃(𝑝): popularity of the place.

𝛽: weight value of friends’ reviews.

F (𝑝): place that has been visited by friends.

1.
Calculate popularity of place, 𝑃(𝑝) and places that have been visited by friends, 𝐹(𝑝) that previously described

𝑃(𝑝)=𝑛𝑐ℎ,𝑝max(𝑛𝑐ℎ,𝑝)+𝑛𝑙𝑖,𝑝max(𝑛𝑙𝑖,𝑝),
(5)
𝑛𝑐ℎ,𝑝: number of reviews for a location

𝑛𝑙𝑖,𝑝: rating of a location

𝐹(𝑝)=𝑛𝑐𝑛𝑠,
(6)
𝑛𝑠: number of reviews for a location

𝑛𝑐: rating of a location

2.
Sentinel user’s interest in a specific item, 𝐴(𝑝). We design the behavior weights according to the Rocchio algorithm. 𝑆𝐶=0.5 means that the sentinel user has reviews in this category and is scored between 4 and 5. 𝑆𝐶=0.2 scores 3 while SC = − 0.5 scores between 1 and 2.

𝐴(𝑝)=∑𝑛𝑝𝑖=1𝑆𝐶𝑖𝑛𝑝.
(7)
3.
Calculate the weight value, W′(p). A positive number of 𝐴(𝑝) means that the sentinel user is interested and a negative number means that the sentinel user is not interested, so we fine-tune 𝑊(𝑝) to the new 𝑊′(𝑝)

𝑊′(𝑝)=𝑊(𝑝)+𝐴(𝑝).
(8)
4.
Calculate the new interest value I′u(c)

𝐼′𝑢(𝑐)=𝐼𝑢(𝑐)+𝛼𝑐𝐴(𝑝).
(9)
5.
Regulate R(c) with the new interest value 𝐼′𝑢(𝑐)

R(c)=𝑙′𝑢(𝑐)∑𝑗𝑘=1𝐼(𝑘),1≤𝑐≤𝑗
(10)
Evaluation metrics
Mean Reciprocal Rank, MRR: MRR is a measure of the accuracy and average rank. The following equation shows that MRR is the average of the reciprocal ranks of results for a sample of queries n:

MRR=1𝑛∑𝑖=1𝑛𝑠𝑒𝑞𝑖,
(11)
𝑠𝑒𝑞𝑖 refers to the rank position of the first relevant document for the ith query. According to the predicted probability, the top k items are compared. When an item is relevant and predicted correctly, a score is assigned. The earlier the item appears, the higher the score is, i.e. RR = 1. If there is no correct item, RR = 0. The mean value of n experiments is MRR.

Simulation data and results
Scenario 1: reviews submitted to Yelp from January 1, 2016 to December 31, 2016 were taken for simulation. Among those, we retrieved 20 reviews written by users who also wrote reviews between January 1, 2017 and December 22, 2017 to estimate accurate recommendations for new items.

Scenario 2: using Yelp review data from January 1, 2017 to December 22, 2017, 20 people who submitted reviews during the period were selected to estimate accuracy rate of new users.

Result and discussion
The experimental results of the small sample were evaluated, and the largest review category was used as the preference type to verify the accuracy rate of each category. In case of equal recommendation ratio, the system is prioritized according to the highest percentage of merchants: 2 American (traditional) → 4 Italian → 1 American (new) → 5 Mexican → 3 Chinese.

Scenario 1
The Table 5 shows the MRR based on user history only in order to find their interest and the Table 6 reveals that the recommendation results based on friends’ reviews were better.

Table 5 MRR based on user history only = 57%
Full size table
Table 6 MRR based on friend recommendation = 57.25%
Full size table
The Table 7 proves that the addition of sentinel friend improved recommendation accuracy. Figure 8 below compares the MRR results based on user history, friend recommendation and friend recommendation and A(P).

Table 7 MRR based on friend recommendation and A(P) = 58.5%
Full size table
Fig. 8
figure 8
Comparison of the MRR results: user history only, friend recommendation vs. friend recommendation and A(P)

Full size image
The Table 8 shows the MRR result based on sentinel user’s interest in a specific item, A(P) and Popularity of Place P(P). The Table 9 displays the MRR result based on A(P) and F(P), the place that has been visited by friends. Figure 9 proves that the recommendation accuracy based on F(P) was better than that based on P(P).

Table 8 MRR based on A(P) and P(P) review category = 56.8333%
Full size table
Table 9 MRR based on A(P) and F(P) review category = 61%
Full size table
Fig. 9
figure 9
Comparison of the A(P)-based MRR results for new items: P(P) review category vs. F(P) review category

Full size image
Scenario 2
Classical probability is the statistical concept that assumes that all outcomes in the experiment are likely to occur equally. The probability of an event is equal to the ratio of the number of favorable outcomes to the total number of possible outcomes for the experiment.

𝑃(𝐴)=nt,
(14)
𝑃(𝐴): probability of an event,

𝑛: number of favorable outcomes,

𝑡: total number of possible outcomes.

Scenario 2 focuses on new users who did not submit reviews in 2016. Therefore, the classical probability for the experiment is 1/5 = 20%.

Tables 10 and 11 prove that the recommendation results based on friends’ reviews were better. The Table 11 also reveals that the addition of sentinel friend did not improve the recommendation accuracy. Figure 10 compares the MRR result of new users’ friendships.

Table 10 MRR based on friend recommendation = 34.25%
Full size table
Table 11 MRR based on friend recommendation and A(P) = 34.25%
Full size table
Fig. 10
figure 10
Comparison of the results of new users’ friendships

Full size image
The Tables 12 and 13 both reveal that the outcome based on A(P) but the Table 12 uses P(P) review category while the Table 13 uses F(P). Figure 11 below compares the sentinel mechanisms based on A(P) and P(P).

Table 12 MRR based on A(P) and P(P) review category = 31.0833%
Full size table
Table 13 MRR based on A(P) and F(P) review category = 33.8333%
Full size table
Fig. 11
figure 11
New users calculate popularity and friend popularity based on A(p)

Full size image
Conclusion
In this paper, we propose a personalized recommender system based on the review data from the Yelp dataset. To deal with the cold-start problem for new users, we use indirect relations between friends and “friends’ friends.” If the friend does not have related data, the system finds friend’s friends to make recommendations as accurate as possible. The experiment results reveal that when we use the sentinel mechanism to calculate and obtain the recommendation data, our proposed method obviously outperforms, proving that the use of indirect relations in social networks can improve recommendation accuracy.

