The analysis of various data is a challenging issue in the field of air traffic flow management (ATFM). Managing a large volume of data and their correct interpretation plays a key role in the prevention of air accidents, human errors, and flight interactions. In general, pilots and flight navigators deal with massive and variety information, including flight safety messages, meteorological messages, aviation notes for air man (NOTAMs) and etc. Therefore relationship between Heterogeneous big data is problem. Recently, the semantic web has been recognized as a novel foundation of knowledge management that relies on ontology (concept modeling language). The present study aimed to propose an efficient infrastructure for ATMs by defining the concepts, rules, and relationships between the concepts related to the scope of flight information. To this end, we designed and implemented the ontology of flight safety messages, which included an important part of flight operation information. In this research, the internet protocol suite (IPS)-based aviation networks and methontology methodology were exploited for the engineering of the ontology of flight messages. In addition, the implementation process was carried out using the Protégé software. The analysis of the system was performed using the actual data of Mashhad Airport, Iran. Finally, the implementation of the ontology of flight messages was demonstrated after a case study of several flight examples. The developed ontology could be incorporated into the foundation of an aeronautical telecommunication network (ATN) aviation network as an application.

Introduction
Today, the growth of human communities and the increasing need for travel have led to more transfer of products. Among various travel methods, air travel is of particular interest in terms of quality, speed, security, and comfort. Increased flights and air travel require an efficient air traffic flow management (ATFM) system. The diversity of information and its analysis are important challenges in ATFM. In general, most pilots and air traffic controllers deal massive information, including flight safety messages (e.g., flight plan, airplane departure, arrival messages, flight delays, changes in the flight plan, flight cancelation, and airplane return), meteorological messages, aviation NOTAMs, snow, volcanic phenomenon NOTAMs, ATM messages, airline information messages, and aircraft systems warnings. An important issue regarding ATFM is the arrangement of the flight traffic sequence for preventing the interference and delay of flights. The analysis of this information is extremely difficult and mostly associated with human error. Any mistakes in the interpretation and analysis of aviation data (especially flight safety messages) may lead to air accidents and cause irreparable financial and human damages.

The semantic web has presented the solution of giving meaning to data by means of knowledge graphs (ontology), with the aim of taking a step from a data-based system toward an information-based system on web data, which affects all the infrastructures of knowledge-based systems. In this context, the ontological approach to the words and concepts in a field of knowledge and their correlations is the infrastructure for the formation of the knowledge graphs (ontology) in that field. In fact, the main goal of ontology for flight safety messages in aviation is that the compatibility between systems and intelligent agents conveys the meaning of information, so that the ability to access information is optimal and enables the processing of the information by the machine correctively.

Ontology defines a joint concept table for the pilots, flight staff, flight dispatchers, and air traffic controllers who need to share information in a specific field and domain. This glossary includes the definitions of basic concepts (understandable by machine), formation of flight safety messages, as well as their interpretation and communication. This ontology is defined in the official and processing language of the machine for the purpose of semantic commonalities in automated systems, and the implementation of the process is carried out by a Web Ontology Language. The Web Ontology Language (OWL) is a family of knowledge representation languages for authoring ontologies. Ontologies are a formal way to describe taxonomies and classification networks, essentially defining the structure of knowledge for various domains: the nouns representing classes of objects and the verbs representing relations between the objects.

Ontologies resemble class hierarchies in object-oriented programming but there are several critical differences. Class hierarchies are meant to represent structures used in source code that evolve fairly slowly (perhaps with monthly revisions) whereas ontologies are meant to represent information on the internet and are expected to be evolving almost constantly. Similarly, ontologies are typically far more flexible as they are meant to represent information on the internet coming from all sorts of heterogeneous data sources. Class hierarchies on the other hand tend to be fairly static and rely on far less diverse and more structured sources of data such as corporate databases [1].

The present study aimed to design the ontology for flight safety messages, which encompassed an important part of flight operation information. The ontology could be directly used by pilots, flight staff, flight dispatchers, air traffic controllers, aviation information networks, and systems based on web and TCP-IP (e.g., ATN). Web semantic technology help machines understand data. To enable the encoding of semantics with the data, well-known technologies are RDF (resource description framework) [2] and OWL (Web Ontology Language) [3]. These technologies formally represent the meaning involved in information. For example, ontology can describe concepts, relationships between things, and categories of things. These embedded semantics with the data offer significant advantages such as reasoning over data and dealing with heterogeneous data sources. They are built upon the World Wide Web Consortium’s (W3C) XML standard for objects called the Resource Description Framework (RDF) [3, 4]. OWL is one of the W3C/IETF standards that work over Internet protocol suite(TCP/IP).

The implementation of the process was carried out using the Protégé software and methodology. The use of the ontology through IPS-based aviation networks enables the interpretation of aviation messages by the systems and machines that are classified as flight operations to improve the concepts of safety and reliability in air traffic control.

The following sections of the article have been structured, with Sect. "Literature review" reviews the previous methods in the ontology of ATM field, Sect. "Ontology domain of flight safety message" describes the ontology domain of flight safety message, and Sect. "Methodology" explain about methontology methodology. Then in Sect. "Implementation of the ontology of flight safety messages" implementation of the ontology of flight safety messages and evaluates and test the; in addition, Sect. 6 has been dedicated to a conclusion.

Literature review
In [5], the researchers divided ontology into four categories of upper ontology, domain ontology, interface ontology, and process ontology. Domain ontology refers to the modeling of a specific domain of knowledge through a specific semantic representation and display of concepts based on their application. Upper ontology is a model of common objects, which are generally applied in a domain of the related fields. Interface ontology describes the concepts of two fields, whereas process ontology explains the inputs, outputs, constraints, and sequences of the information involved in businesses or engineering processes [5]. Some researchers believe that domain ontology is the most important category that has been defined in a specific domain as it provides the words in the field of domain concepts and the desired field, as well as their communication, activities occurring in the field, and the primary theories of the domain [6].

Ontologies are used with various objectives, including the place where people, computers or both require the conceptualization of a domain. According to Noy et al. [7], one of the goals of domains is the implementation of a phrase by sharing the joint concept in the information structure between individuals or smart agents. In addition, Reese et al. [8] used ontologies to build simulation and training scenarios.

The open travel alliance (OTA) messaging system is among popular and widely used ontologies. In [9], the researchers aimed to use OTA messages and generate a new ontology for air travels as well. In [10], the researchers attempted to manage air traffic by information sharing, which was carried out by various ontologies. For instance, information of ontology was used for indexing and searching, while a different ontology was applied to prevent accidents and traffic alerts, and another case was exploited to run a system. As a result, satisfaction with airlines increased, which in turn led to the higher national aviation system (NAS) efficiency. The following ontologies are common for space and aeronautical applications.

Critical ontology has been developed for the indexing and searching of meteorological documents. One of the uses of the critical ontology relates to the concepts of specific weather conditions and the relevant scenarios for air traffic alert and collision avoidance systems [11].

AIAA is a semantic database used to generate concepts and vocabulary communication in the field of aviation [12].

XCALIBR is the ontology that is used for designing spacecraft and supporting spacecraft designers in determining the dependence of components on other elements [13].

MillInfo ontology describes military aviation information as the basis for the semantic architectural models of air force systems [14].

TSONT ontology is applied to simulate air force in war. The main goal of general research is re-construction for use in the development of various air route simulations and clash of fighter aircrafts [15].

The evaluation of previous studies and ontologies in the aviation area [16] showed that most of the studies in this regard have been focused on the construction of aircrafts or spacecraft, as well as military aviation activities. On the other hand, the studies in the non-military aviation domain have often been focused on ATM, the implementation of aviation NOTAMs, and aviation meteorology based on the format of the International Civil Aviation Organization (ICAO). In the present study, we chose the domain of flight safety messages, which is frequently used during flight operations, and no specific ontology has been carried out in this regard; this may be considered the novelty of our research. In addition, this domain is a joint field between the ICAO as the executor of aviation governance and the International Air Transport Association (IATA) as the representative of aviation companies [17,18,19].

In [20] researchers propose an approach to decision-support systems (DSS) in air traffic management (ATM) based on an ontology including concepts and instances of trajectories and meteorology. Temporal and spatial relationships are then set in this ontology. Reasoning rules are also build to represent knowledge in DSS. A case study shows a reroute scenario during a thunderstorm. In this scenario, information of the flight and the weather is combined to support decision-making by the proposed approach.

In [21] a group of researchers describe a study comparing two recently released and independently-developed complex ontologies focused on Air Traffic Management (ATM)—the NASA ATM ontology and an ontology derived from the ATM information reference model. They develop a methodology for manually comparing two ontologies and identifying what we describe as exact, light, and mismatches between concepts in the two ontologies. Also describe a classification scheme that characterizes mismatches in terms of the general reason for the mismatch. This approach can be applied to improve existing ATM ontologies and foster interoperability, which will benefit aviation stakeholders.

Ontology domain of flight safety message
Ontology is a clear and formal description of the concepts within a domain. The features of each concept and special attribute and various properties of the concept are known as properties. Furthermore, classes are taken into account by the majority of ontologies to define the domain concepts. A class could encompass several subclasses, which describe the more specific concepts of the parent class. The following issues should be considered for the initial definition of ontology:

(A)
It should be made clear which questions are to be addressed by the ontology. For instance, this article is supposed to address questions such as:

What kind of aviation messages are exchanged in the ontology?

In which airports and systems could they be implemented?

Is it possible to enter information into the radar and aircraft autopilot system through the ontology?

Could it be developed and integrated with other systems?

(B)
The users of the ontology should be determined; the ontology could be used by the flight crew, air traffic controllers, airlines, and travel and pilgrimage agencies.

(C)
The project scope should also be determined in the design and implementation of the ontology. In the present study, the domain considered for the ontology partly included safety messages, such as the flight design, airplane departure, arrival messages, flight delay, changes in the flight plan, flight cancelation, and flight return. These messages were in the range of the required information and data for air traffic control, pilots, flight crew and flight dispatcher. In addition, the aviation messages for the flight operations included meteorological messages, aviation NOTAMs, aviation maps, air information services, ATM messages, aviation company information messages, and aircraft systems alerts (Fig. 1).

Fig. 1
figure 1
Mass of aviation information required by pilots and flight attendants and scope of ontology

Full size image
(D)
The general goals of ontology design should be clarified. In the present study, we had primary and secondary categories of objectives. The primary goal is to create and develop an ontology for air traffic management (ATM) based on flight safety messages exchanged in aeronautical telecommunications network (ATN). The secondary goal is Development of ontology for other parts of air traffic management based on the example created in this research and moving towards the development of semantic web-based software based on ontology in air traffic management.

(E)
The uses of ontology should be determined. In the present study, the applications of the ontology were as follows:

(1)
Given the significantly large volume of the required data for flight operations, a method should be established to present data to aviation machines and systems in a plausible manner.

(2)
The public understanding of the structure of the aviation information should be shared among humans or machine factors.

(3)
The aviation domain knowledge and flight safety messages should be reusable.

(4)
The domain knowledge should be separated from the operational knowledge.

(5)
The domain knowledge should be analyzed.

For instance, an FPL includes detailed information about a flight. If the FPL is expressed based on the ontology, it will be able to form a target on the radar automatically. Similarly, the radar inside the airplane exchanges information between the radar target and its own systems with the same ontology. Notably, this version should be debugged and evaluated after defining the primary ontology version, which is possible through specialized discussions with the experts in the field for which the ontology has been prepared. Nonetheless, the revision process should be carried out in the primary ontology in any way possible, and the iterative process continues through all the stages of the ontology lifecycle.

Methodology
A specialized methodology could be exploited to generate and evaluate ontology. There are standard ontology generation methodologies, and various methodologies could be used depending on the application of the ontology. Some of the most important ontology generation methodologies include:

Methontology methodology

Ontology development

On-to-knowledge methodology (OTKM)

NeOn methodology

Methontology methodology was developed in the Artificial Intelligence Lab of the Technical University of Madrid (UPM). The Methontology framework enables the construction of ontologies at the knowledge level and encompasses the identification of the ontology development process, as well as a lifecycle based on evolving prototypes and specific techniques for the description of the processes.

Ontology development was developed based on software management principles in order to achieve high-quality ontology at low maintenance costs. In this methodology, the instructions are presented for the conceptualization and design stages in algorithm forms.

OTKM was designed based on the European project of EU-IST (No. 10132), which created an ontology-based tool environment to accelerate knowledge management. This methodology was generated with a large number of heterogeneous, distributed, and semi-structured documents, which mostly exist in large corporate intranets and the global internet platform. The results of this project are:

(1)
A set of tools for processing semantic information and user access;

(2)
OIL, which is a web-based core inference layer;

(3)
Formation of a conventional methodology;

(4)
Validation through industrial case studies.

NeOn methodology is used to create the ontology networks that are adapted from the scenario-based method and supports the aspects of development collaboration and ontology reuse, as well as the dynamic evolution of the ontology networks in distribution environments. The methodology encompasses a set of nine scenarios for the generation of ontologies and ontology networks, which emphasizes the reuse of ontology and non-ontology resources, re-engineering and integration, cooperation, and dynamism in the ontology construction process. The NeOn glossary comprises of processes and activities, the identification and definition of which occur when the ontology networks are formed jointly by the construction team. The methodology instructions for various processes and activities of the ontology network development procedure include the reuse of the ontology and non-core resources, deploying the characteristics of the ontological requirements, ontology localization, and process planning. In the current research, the processes and activities were carried out through the three stages of filling out a card, workflow, and sampling.

In the current research, we applied the methontology methodology considering the numerous advantages for the preparation of ontologies in specialized application domains. Furthermore, the methodology exploits a thesaurus of an organized source of knowledge provided by the experts in the field. The semantic relations (general/specific) in the thesaurus allowed us to create the hierarchical structure required for the ontology. Notably, we applied the methontology methodology with 11 stages as depicted in Fig. 2.

Fig. 2
figure 2
Eleven stages of ontology engineering based on methontology methodology

Full size image
A few basic laws also helped with the decision-making stages of the ontology generation process, as follows:

There is no one-size-fits-all way to model a domain, but rather various executive options, and the optimal solution in modeling a domain depends on two parameters, which are the application that the designer has in mind and the developments that are envisaged for the model.

Ontology development is necessarily an iterative process.

The concepts of ontology are limited to the names of objects (physical/logical) and their relations within the domain. These concepts are very similar to the names (objects) and verbs (relations between objects) that may be found in the sentences describing the scope of the problem.

Regarding the selection of various solutions, we should consider a more efficient solution that is more logical, has a higher capacity for development, and is maintained easier. In addition, ontology is a model of world realities, and ontological concepts should reflect these realities.

Implementation of the ontology of flight safety messages
Based on the scope of the definition in Sect. 3, the methontology methodology was selected for the implementation and evaluation of the ontology of flight safety messages. In addition, the IPS-based aviation network standard and the methontology methodology were applied for the engineering of the ontology of flight messages. The Protégé software was also used to implement the ontology. The system was tested based on the actual data of Mashhad Airport, which were obtained from the outbound and inbound flights of the airport, collected through the radar system and FDS, and finally normalized. By conducting a case study on several flight data samples, we demonstrated the implementation of the flight message ontology, the development of which as an application based on the ATN aviation network could lead to its exploitation. In the present study, the ontology engineering was based on a top-down approach to ontology construction (methodology), the main stages of which included:

Building a glossary of terms;

Unification of the concepts;

Building a concept classification;

Diagram of the binary relations between the concepts.

In practice, ontology development encompasses the following steps (Fig. 3):

Defining the classes in the ontology

Arrangement of the classes in a hierarchy of ‘parent–child classes’

Defining the features and describing the values that are allowed to be possessed by the features;

Determining the values of the features for the class samples.

Fig. 3
figure 3
Implementation of classes and subclasses in Protégé software

Full size image
Flight information messages
According to the ICAO documents, the flight information messages included:

(1)
Messages containing aviation traffic information;

(2)
Messages containing meteorological data;

(3)
Messages containing the performance status of the aviation equipment;

(4)
Messages containing information on the flight safety messages;

(5)
Messages containing the airline messages.

Types of flight safety messages
Safety messages include the flight plan, departure and arrival messages, flight delays, changes in the flight plan, cancelations, and flight return (Table 1).

Table 1 Various types of flight safety messages
Full size table
Flight plan message
A flight plan includes the details of flight operations. The plan should be presented to the flight plan acceptance unit within a minimum of one hour and maximum of 24 h before the flight. The flight should occur up to one hour after the time announced in the flight plan. Otherwise, the flight plan would be canceled and should be presented again. Figure 4 depicts a flight plan filled as a hypothetical flight (Fig. 5).

Fig. 4
figure 4
Example of flight plan message

Full size image
Fig. 5
figure 5
Implementation of class of flight plan message in Protégé software

Full size image
Departure message
A departure message announces the departure time of the flight from the airport of origin to the destination airport (Fig. 6).

Fig. 6
figure 6
Structure of departure message

Full size image
Arrival message
An arrival message announces the arrival time of the airplane at the airport.

Delay message
The pilot or their representative is allowed to announce a delay of up to 15 min after the flight time is specified in the flight plan (Figs. 7, 8).

Fig. 7
figure 7
Structure of arrival message

Full size image
Fig. 8
figure 8
Structure of delay message

Full size image
Change message
The pilot or their representative is allowed to announce a change in the type of the airplane up to 15 min after the time has been specified in the flight plan. The goal of this message is to inform the relevant units about the change that is to be expected in the primary flight plan (Fig. 9).

Fig. 9
figure 9
Structure of change message

Full size image
Cancelation message
The purpose of a cancelation message is to inform the relevant units about the cancellation of the flight (Fig. 10).

Fig. 10
figure 10
Structure of cancelation message

Full size image
Glossary of terms
The glossary of terms was formed based on the terms existing in the thesaurus. In the current research, these terms were extracted and selected by the subject matter experts from various sources in each field (Table 2).

Table 2 Example of glossary of terms and concepts
Full size table
Classification of concepts with a taxonomic structure
Extensible markup language (XML) standard for objects called the resource description framework (RDF) originally designed as a metadata data model. It has come to be used as a general method for conceptual description or modeling of information that is implemented in web resources, using a variety of syntax notations and data serialization formats. It is also used in knowledge management application. The body of knowledge modeled by a collection of statements may be subjected to reification, in which each statement (that is each triple subject-predicate-object altogether) is assigned a URI and treated as a resource about which additional statements can be made that help from Borrowing from concepts available in logic (and as illustrated in graphical notations such as conceptual graphs and topic maps) can be use (Fig. 11).

Fig. 11
figure 11
Basic RDF triple comprising (subject, predicate, object)

Full size image
The classification of the concepts was based on the conceptual system in thesauruses. In the present study, each reference term was intended as a concept or class, and the relationships (general/specific) were converted into relationships (subclass/class) using taxonomy or the graph theory in the four sections of subclass, disjoint, exhaustive, and partition (Fig. 12).

Fig. 12
figure 12
Hierarchical diagram with taxonomic structure

Full size image
Diagrams of single-function binary connection diagrams
Taxonomic diagrams were formed in the previous step to classify the concepts. Afterwards, the established diagrams were evaluated and determined as a goal in the stages of the conceptualization of forming the single-function binary connection diagrams (Fig. 13).

Fig. 13
figure 13
Example of single-function binary connection diagram

Full size image
Table of dictionary of concepts, examples, relationships, and features
Table 3 shows the concepts used in the scope of the ontology, along with the relationships, examples, and characteristics of the examples.

Table 3 Dictionary of concepts, examples, relationships, and features
Full size table
Table of single-responsibility binary relations
Table 4 shows the single-responsibility binary relations defined in the dictionary of the concepts. The generation of the table required the explanation of each single-responsibility binary relation in detail, such as the degree of influence, inverse relations, and the mathematical properties.

Table 4 Single-responsibility binary relations
Full size table
Table of class features
Contrary to the sample properties, which described the concept samples and received their values in the samples, Table 5 describes the properties of the concept classes and defines the corresponding values in the classes. Class features are inherited by subclasses. For each class feature, the ontology developer should fill the related fields with information on the name of the concept in which the feature is defined, type of the value, value, unit of measurement, value accuracy (in case of numerical values), ability, and sample features, the values of which could be evaluated based on the value of the class feature.

Table 5 Table of class features
Full size table
Formal rules table (inferred)
For this stage, the ontology developer should identify and accurately describe the formal rules required for the desired ontology; there are inferred formal rules for each definition. The methontology process should assist the information on name as an explanation for NL, which includes a logical term that officially describes the term using primary instructions, logic, concepts, features, the single-responsibility relationships that refer to its meaning, and the used variables (Table 6).

Table 6 Formal rules (inferred)
Full size table
Table of the definition of rules
Similar to the previous section, the ontology developer had to determine and describe the required rules for the ontology based on the table of rules. For each rule definition, the methontology considers the items such as the name, NL explanation, formal description of the rule, concepts, traits, and relations for the table, which are referred to, as well as the variables used in the ruling term. The following specific format is used by methontology to draw the rules:

If < conditions > then < consequent > 

In the model above, the left side of the phrases includes the rules and conditions, and the right side of the rule includes the adopted arrangements (Table 7).

Table 7 Applied rules
Full size table
Description of the samples
The ontology developer may define the related samples that emerge in the concept dictionary in a sample table in order to define the samples when a special ontology model is generated. For each sample, the ontology developer should define the name, which is a conceptual title belonging to the feature values of the name. Table 8 shows an example of flight TBZ5699 on Mashhad-Tehran route, which was expressed for its FPL message and CNL message.

Table 8 FPL and CNL example for TBZ5699 flight
Full size table
FPL Message:

FF OIFMZTZX OIIIZAZA OIIIZAZX OIIIZTZX OIIXZQZX OIIXZRZX OIMMZAZA.

OIMMZPZX OIMMZTZX OISSZTZX.

301838OIMMZPZX.

(FPL-TBZ5699-IS

-MD83/M-SDFGHIRWXY/S

-OIMM1200

-N0442F320 ORDOB1C ORDOB A647 SBZ/N0442F320 A647 MUXOR MUXOR1V

-OIII0120 OIFM OISS

-PBN/B2B3B4 DOF/180131 REG/URCQC PER/C)

Supplementary:

-E/0249 P/TBN R/EV S/M J/F

A/W AND R STRIP WITH COMPANY LOGO ON THE TAIL C/AMID)

Cancel Message:

311105OIMMZPZX

(CNL-TBZ5699-OIMM1200-OIII-DOF/180131).

Conclusion and research implications
Pilots and air traffic controllers use massive information, including flight safety messages, meteorological messages, aviation NOTAMs, aviation maps, AIS, ATM messages, aviation company information messages, and aircraft system alerts. The analysis and evaluation of such volume of data are extremely difficult. In fact, the main goal of ontology generation for the management of flight safety messages in aviation is to initially establish the same language between the mechanized systems and smart factors involved in the ATM, followed by providing the possibility of the accurate processing of the information by a machine.

Ontology defines a joint glossary for the pilots, flight crew, flight dispatchers, and air traffic controllers who need to share information in a specific field and domain. The glossary contains the definitions of basic concepts for creating flight safety messages, interpretation, and communication to be comprehended by a machine. In the present study, the ontology was generated for the flight safety messages that contained an important part of the flight operation information. The ontology could be directly used by pilots, flight crew, flight dispatchers, air traffic controllers, systems, and web and TCP/IP-based air communication networks (e.g., ATN).

Web semantic base on designed ontology in aviation domain help aeronautical machines understand aviation data and have authority. OWL is one of the W3C/IETF standards that work over internet protocol suite (TCP/IP) same as, ATN networks that work on IPS and semantic web platform

The implementation of the ontology was carried out using the methontology methodology and the Protégé software. The use of the ontology based on the IPS-based aviation networks leads to the processing of aviation messages by flight operations systems and machines, thereby ensuring safety and reliability in air traffic affairs.

Protocol and RDF query language (SPARSQL) is an RDF query language that is, a semantic query language for databases—able to retrieve and manipulate data stored in (RDF) format. SPARQL allows users to write queries against what can loosely be called “key-value” data or, more specifically, data that follow the RDF specification of the W3C. Thus, the entire database is a set of “subject-predicate-object” triples. This is analogous to some NoSQL databases’ usage of the term “document-key-value”, such as MongoDB. This NoSQL databases can be used in aviation telecommunication network (ATN) applications. Therefore, it is recommended that an information retrieval structure be developed in the ontology based on the SPARSQL in further studies and be used in a flight operation system.