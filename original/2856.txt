With the proliferation of the Semantic Web technologies, more and more spatial knowledge bases are being published on the Web. Discovering spatial links among spatial knowledge bases is crucial in achieving real-time applications such as reasoning and question answering over spatial linked data. However, existing approaches rely on numerous high-cost Dimensionally Extended Nine-Intersection Model (DE-9IM) computations which lead to inefficient spatial link discovery. To address this problem, we propose a novel approach for discovering topological relations based on the spatial link composition, namely DORIC. Different from conventional spatial link discovery methods, DORIC further reduces the required number of DE-9IM computations by composing existing spatial links. Specifically, we first propose a spatial link composition (SLC) model to infer new spatial links of topological relations from existing or intermediate links. We replace part of high-cost DE-9IM computations with relatively low-cost SLC, and it leads to reduced spatial link discovery time. Then to maximize the utility of SLC during the process of DORIC, we design two effective strategies for deciding the discovery and access orders. Experiments on three real-world datasets show that the proposed DORIC outperforms the state-of-the-art approaches in terms of the spatial link discovery time.

Access provided by University of Auckland Library

Introduction
With the proliferation of knowledge sharing communities and the automated information extraction technologies, large-scale knowledge bases, such as DBpediaFootnote1, YAGOFootnote2, and FreebaseFootnote3, have been constructed and they are available on the Web. Knowledge bases typically follow the well-known data model resource description framework (RDF). RDF [25] is a World Wide Web Consortium (W3C) standard model for knowledge representation on the Semantic Web. W3C also provides the SPARQL [28] language for querying RDF data.

Recently, spatial extensions to the RDF model have been proposed. For example, GeoSPARQL [27] is an Open Geospatial Consortium (OGC) standard that supports representing and querying geospatial data. stRDF [11] extends RDF with the ability to represent spatial and temporal data. A query language stSPARQL, which extends SPARQL, is proposed for querying stRDF data as well.

With the help of tools for the extraction, cleansing, generation, and publication of RDF data (e.g., GeoTriples [13], TripleGeo [26], OpenLink VirtuosoFootnote4, Apache FusekiFootnote5, and SRQ [7]), the number of the spatial RDF datasets is increasing. The spatial RDF datasets, which are compatible with the Linked Data Principles, are published on the Linked Open Data (LOD) cloudFootnote6. These spatial RDF datasets are also called spatial linked data or spatial LOD data since they are inter-operable and inter-linkable.

For example, LinkedGeoDataFootnote7 includes more than 20 billion triples describing millions of spatial entities (ses) collected from OpenStreetMapFootnote8. Greek Linked Open DataFootnote9, which is transformed from petabytes of Greek earth data, covers various aspects of coastline, buildings, administrative geography, etc. Nomenclature of Territorial Units for StatisticsFootnote10 (NUTS) contains classification information of territorial units of the whole European regions. An example of spatial linked data of NUTS is described as follows:

Example 1
(Spatial Linked Data) Figure 1 shows an example of spatial linked data extracted from NUTS. There exist three spatial entities (ses) (e.g., nuts:DEA59, nuts:DEA, and nuts:FR), and each spatial entity (se) is connected to a geometry via the relation ngeo:geometry. For instance, nuts:FR indicates a region whose type is ramon:NUTSRegion. In addition, nuts:FR is a French region which can be inferred from its label FR-FRANCE. In addition, nuts:FR has a geometry nuts:FR_geometry whose type is a multipolygon. ngeo and ramon are ontologies for describing geographical regions. There also exist relations between ses, e.g., nuts:DEA is disjoint with nuts:FR.

Fig. 1
figure 1
An example RDF graph from NUTS

Full size image
While spatial linked datasets are being added to the LOD cloud, they are merely sparsely linked with each other [17]. According to [35], 44 percent of general (i.e., non-spatial) LOD datasets have no linkage to other datasets. This problem is even more severe for spatial linked datasets where only 7.1 percent of ses are linked to other entities [19]. The provision of spatial links among entities is of vital importance since such links are central to achieve the scalability of applications such as structured machine learning [44], query answering [24], and click prediction [45, 46].

Existing approaches for spatial link discovery [36, 43] mainly focus on finding spatial equivalence relation between ses. This results in leaving other spatial relations (e.g., topological relations) being undiscovered. More recently, the problem of spatial link discovery of topological relations has been studied in [9, 38, 40]. AML [9] is an ontology matching system which applies filtering techniques to discover topological relations with the help of ESRI Geometry API. SILK [40] computes topological relations between two ses according to the Dimensionally Extended Nine-Intersection Model (DE-9IM) [6] standard and employs a blocking technique to reduce the search space. DE-9IM is a topological model, which is an OGC standard, used to describe the spatial relations between two geometries. RADON [38] minimizes the number of the DE-9IM computations by combining techniques of space tiling, Minimum Bounding Box (MBB)-based approximation and sparse indexing.

However, even after applying the indexing and MBB-based approximation, the number of the DE-9IM computations is still relatively large. This leads to low efficiency and low scalability of spatial link discovery for topological relations due to the high cost of the DE-9IM computations.

In this paper, we propose a novel approach for Discovering Topological Relations based on Spatial Link Composition, namely DORIC. Unlike existing approaches for spatial link discovery, DORIC further reduces the number of DE-9IM computations by composing existing spatial links to infer new links. The motivating observation behind DORIC is presented in the following running example of NUTS.

Fig. 2
figure 2
An example of geometries from NUTS

Full size image
Example 2
(Motivating Example) Figure 2 illustrates the geometries of the three ses shown in Fig. 1, which are identified by nuts:DEA59, nuts:DEA, and nuts:FR. Note that only two (totally seven) polygons of nuts:FR are shown in Fig. 2 due to the space limit. Existing approaches [38, 40] have to perform the high-cost DE-9IM computation many times to discover the topological relations among the three ses. However, suppose that there exist two spatial links (nuts:DEA59,within,nuts:DEA) and (nuts:DEA,disjoint,nuts:FR), then it is possible to infer (nuts:DEA59,disjoint,nuts:FR) by composing the two given spatial links. (nuts:DEA59,disjoint,nuts:FR) indicates that nuts:DEA59 is disjoint with nuts:FR. In this way, spatial link composition could reduce the number of the DE-9IM computations.

In existing approaches, the spatial link (nuts:DEA59,disjoint,nuts:FR) has to be computed using DE-9IM. DE-9IM checks thousands of points contained in the geometries of nuts:DEA59 and nuts:FR to figure out their relation. Spatial link composition is relatively low-cost when compared to the DE-9IM computation. Thus, consequently DORIC could achieve better efficiency than the state-of-the-art spatial link discovery approaches.

Specifically, we first present a spatial link composition (SLC) model to formalize the problem of link composition for topological relations. We follow the topological relations specified by Simple Features (i.e., Simple Feature Access) since Simple Features relations are commonly used in the literature [38, 40]. Simple Features is both OGC and ISO standard that describes a common storage and access model of geometries. Hereafter, topological relations indicate Simple Features relations unless otherwise stated. In detail, Simple Features relations include equals, disjoint, intersects, touches, within, contains, overlaps, and crosses. Figure 3 shows an example of Simple Features relations between two geometries. Note that overlaps can be seen as a subset of intersects since overlaps indicates that two geometries have some but not all points in common and intersects denotes that two geometries have at least one point in common. Formal definitions of Simple Features relations can be found in [37].

Fig. 3
figure 3
An example of the Simple Features relations between two geometries g1 and g2

Full size image
SLC is carried out during the entire procedure of DORIC to check whether a spatial link between a pair of ses (s,t) is composable. To maximize the utility of the proposed SLC model, i.e., to compose as many spatial links as possible, two research issues are arising: (1) How to decide the discovering order of topological relations? (2) How to decide the access order of ses?

For the first issue, there are total 40,320 cases since it is a permutation problem of arranging eight relations into a particular order. Simple random selection would not perform well. Thus, we propose a score function to rank topological relations. The rationale behind the score function lies in the expectations: high reusability first, high composability last, and low computation cost first.

For the second issue, to access ses efficiently we follow the state of the art by indexing the space covered by the geometries of ses, and mapping ses to the corresponding index. Then, we augment the spatial index with quantitative information (i.e., how many ses are contained in the indexed space). The rationale of the augmentation is that the more the number of initial ses, the higher the possibility of new spatial links being discovered by the SLC model.

The contributions of this paper are summarized as follows:

We propose the spatial link composition (SLC) model to compose spatial links of topological relations.

We introduce two strategies to decide the discovering order of topological relations and the accessing order of ses for maximizing the utility of the SLC model.

We present the DORIC algorithm, which combines the SLC model and its two dedicated strategies, to efficiently discover spatial links of topological relations.

We conduct experiments on three real-world spatial linked datasets to show the superiority of DORIC over the state-of-the-art approaches in terms of the spatial link discovery time.

The rest of the paper is organized as follows. Section 2 reviews the related work. Section 3 defines the problem and Sect. 4 states the research objective. Proposed approaches and experimental results are described in Sects. 5 and 6. Section 7 concludes the paper and discusses future works.

Related work
Generic link discovery Link discovery is an important task in the research field of Semantic Web. Links are essential building blocks for applications targeting knowledge bases or LOD data, such as question answering [8, 39, 48] and structured machine learning or deep learning [4, 14, 42].

Generic frameworks for link discovery (LD) are widely studied in the literature. SERIMI [3] is proposed to match instances between a source and target RDF datasets, without prior knowledge of the data, domain, or schema of these datasets. The matching is achieved based on traditional IR, string matching techniques, and a similarity function for disambiguation. Zhishi.link [22] is the instance matching system which employs a distributed framework to index and process RDF datasets. The authors of [22] propose scalable matching strategies for calculating similarities between two RDF datasets.

Another type of LD framework is based on machine learning techniques. Nikolov et al. propose KnoFuss [21] which targets on integration of semantic annotations from different RDF datasets. This system is composed of several stages for schema matching, instance co-referencing, and inconsistency resolution. LIMES [20] is an approach for a time-efficient link discovery in metric spaces. LIMES utilizes mathematical characteristics of metric spaces in the mapping process to prune a large number of instance pairs that do not satisfy the mapping conditions. Chu et al. propose RuleMiner [5] which discovers and validates integrity constraints automatically. RuleMiner discovers rules expressed with Denial constraints which subsume many rule languages. SlamPred [47] combines low-rank and sparse properties of the target network and the information of multiple aligned networks to address the link prediction problem.

Spatial entity resolution In the area of spatial link discovery, most of the approaches are designed to discover only spatial equivalences (i.e., spatial entity resolution) [30, 36, 43]. Salas and Harth [30] address the problem of finding spatial equivalences between geospatial RDF datasets. They also propose a method for finding spatially co-located features across spatial RDF datasets which finds equivalences by analyzing the Hausdorff distance distribution in the datasets. Sehgal et al. [36] proposed a method for resolving location entities in geospatial data. To perform accurate resolutions, their method learns how to combine the different features such as location name, spatial coordinates, location type, and demographic information. Vilches-Blázquez [43] et al. present a co-reference resolution approach which is composed of a set of heuristics for interlinking geospatial linked data. Based on the proposed heuristics, they connected resources from GeoLinkedData.es and DBpedia.

Topological link discovery Some researchers try to discover diverse spatial links of topological relations, which are not limited to the equals relation. Kyzirakos et al. [12] designed a semantic spatial database management system STRABON that employs stRDF and stSPARQL to store and query spatial data. AML [9] is an ontology matching system which implies filtering techniques to discover topological relations with the help of ESRI Geometry API. Saveta et al. propose a spatial benchmark generator SPgen [34] for testing the performance of topological link discovery systems. Ahmed et al. [1] present a method of simplifying the geospatial representation (i.e., geometries) of ses to accelerate the topological link discovery while sacrificing the accuracy to some extent. Unlike [1], the target of this paper is an entirely accurate topological link discovery.

SILK [40] and RADON [38] are the most relevant approaches to our work, which both compute the precise topological relations between two ses according to the DE-9IM model. SILK applies a blocking technique to index ses for reducing the search space. RADON combines space tiling, MBB-based approximation, and a sparse index to reduce the number of the DE-9IM computations. However, even after applying these indexing and filtering techniques, the required number of high-cost DE-9IM computations is still large.

More recently, RADON2 [2] adds a simple strategy to RADON, which shares the computation of intersection matrix (IM) when discovering topological relations. However, to share the IM computation all topological relations should be checked for a se pair. It causes higher cost of a DE-9IM computation, while RADON only needs to check one target topological relation for each time. Santipantakis et al. [32] propose a framework stLD that supports discovery of topological and proximity relations. stLD utilizes the blocking technique to speed up the spatial link discovery. MaskLink [31, 33] is other approach designed for discovering of topological and proximity relations. MaskLink supports streaming data and improves the filtering process by eliminating ses that cannot be linked.

Problem statements
RDF models data as a set of triples (subject, predicate,object). Entities (subject) are linked to other entities (object) via relations (predicates). For instance, a triple (nuts:FR_geometry,rdf:type,ngeo:MultiPolygon) represents the fact that the geometry of France is a type of multipolygon. An entity which is associated with geographical information is called a spatial entity se, e.g., nuts:FR.

We define a spatial RDF knowledge base as a directed graph, namely a spatial knowledge graph, which is denoted by G=(V,E), where V indicates a collection of vertices and E denotes a collection of edges. Each vertex v (subject or object) implies a se or a generic entity ge (non-spatial entity), and each edge e (predicate) refers to a relation that links entities. Each se is associated with a geometry, which is commonly a polygon or multipolygon. The problem of discovering spatial links is formalized as follows:

Definition 1
(Spatial Link Discovery) Given a set of source spatial entities S and a set of target spatial entities T from two spatial knowledge graphs GS and GT, the goal of Spatial Link Discovery is to find a set of spatial links SLink(S,T)={(s,tr,t)|s∈S,t∈T,tr∈TR}, where TR indicates the topological relations.

Spatial relation between two ses is decided by the topological relation of their corresponding geometries. There are three definition families of topological relations: Simple Features, Egenhofer, and Region Connection Calculus (RCC8). Each family divides all possible spatial relations into eight basic topological relations, but not in the same way. Among the three families, we focus on the Simple Features relations since it is widely adopted.

The precise meaning of each topological relation can be described by the DE-9IM model [6]. DE-9IM is a standard topological model used to describe the spatial relations of two geometries g1 and g2. DE-9IM is based on a 3×3 intersection matrix with the form:

⎡⎣⎢dim(I(g1)∩I(g2))dim(I(g1)∩B(g2))dim(I(g1)∩E(g2))dim(B(g1)∩I(g2))dim(B(g1)∩B(g2))dim(B(g1)∩E(g2))dim(E(g1)∩I(g2))dim(E(g1)∩B(g2))dim(E(g1)∩E(g2))⎤⎦⎥
(1)
where dim(⋅) is a function which returns the maximum number of dimensions of the intersection (∩) of the interior (I), boundary (B), and exterior (E) of geometries g1 and g2. The range of dim(⋅) lies in {-1, 0, 1, 2}, where -1 indicates that there is no intersection, 0 means the intersection is a point, 1 implies the intersection is a line, and 2 denotes the intersection is an area. In addition, the binary version of dim(⋅) ranges in {false, true}, where false indicates that there is no intersection, and true means there exists an intersection which could be a point, a line, or an area.

Formal definitions of Simple Features relations, e.g., equals, intersects, touches, within, contains, overlaps, and crosses, w.r.t. DE-9IM are given in [37]. Thus, topological relations can be computed using the intersection matrix of DE-9IM accordingly. Note that disjoint can be obtained simply by the inverse of intersects, i.e., (s, disjoint, t) = ¬ (s, intersects, t).

Objective of our research
The objective of this work is to design a spatial link discovery method which discovers topological relations between spatial entities in an accurate and efficient way. We perform two tasks to reach this goal: 1) modeling of spatial link composition (SLC) and 2) design of strategies which maximize the utility of SLC model.

(1)
A novel spatial link discovery method is needed to find out topological relations between spatial entities quickly and completely. To reduce the number of high-cost DE-9IM computations, which is the main obstacle to achieve efficiency, we propose to compose existing spatial links for inferring new links. To figure out all the possible compositions, we design the simple inference rules for topological relations (SIRTR). Then we formally model SLC based on SIRTR. The details are given in Sect. 5.1.

(2)
SLC should be performed as many times as possible to reduce the spatial link discovery time. To maximize the utility of SLC, we design two strategies. Specifically, a score function is proposed to rank and determine the discovering order of topological relations. Besides, indexing and filtering techniques are introduced to decide the accessing order of spatial entities. Sections 5.2 and 5.3 present the overall contents.

Proposed approach
Existing approaches for spatial link (i.e., topological relation) discovery [9, 38, 40] employ indexing and filtering techniques to reduce the search space and then compute precise topological relations based on DE-9IM. However, the DE-9IM computation is a high-cost operation since it needs to check the interior, boundary, and exterior of two geometries. In addition, the number of the DE-9IM computations is still relatively large (except for equals and within relations) even after applying indexing and filtering techniques and thus leads to a long execution time of discovering topological relations.

The major insight behind our proposed DORIC is that composing existing or intermediately discovered spatial links could further reduce the needed number of the DE-9IM computations. Additionally, the spatial link composition takes relatively low cost when compared to the DE-9IM computation. Thus, DORIC could outperform existing approaches in terms of the spatial link discovery time.

Specifically, we first propose a spatial link composition (SLC) model to compose existing or intermediately discovered spatial links for inferring new (i.e., undiscovered) spatial links. Here, existing spatial links indicate the spatial links contained in GS and GT. Then, two strategies are introduced to maximize the utility of the SLC model together with augmented spatial indexing and MBB-based filtering methods. Finally, we describe the algorithm of DORIC.

Spatial link composition model
Link composition (i.e., mapping composition [10]) is applied to infer new links between two entities by reusing already existing links. Thus, new links are generated indirectly via one or more intermediate links instead of computing the relation of the two entities. The problem of general link composition is formalized as follows:

Definition 2
(Link Composition) Given a set of source entities S∘, a set of target entities T∘, a set of intermediate entities I∘, two sets of links Link(S∘,I∘) and Link(I∘,T∘), link composition aims to discover new links Link(S∘,T∘)={(s,r,t)|s∈S∘,t∈T∘,i∈I∘:∃(s,r,i)∈Link(S∘,I∘)∧∃(i,r,t)∈Link(I∘,T∘)}.

where r typically indicates the owl:sameAs relation. The focus of this paper is spatial link composition w.r.t. Simple Features relations, which is a specific sub-problem of general link composition. Before introducing our proposed SLC model, we describe the RCC8 [29] first since RCC8 is the underlying basis of our SLC model. RCC8 is a first-order theory that is based on a binary connectedness relation and has canonical models defined over connected topological spaces [15, 41]. RCC8 is widely used for qualitative spatial representation and reasoning.

RCC8 consists of eight basic relations that are possible between two geometries: disconnected (DC), externally connected (EC), equal (EQ), partially overlapping (PO), tangential proper part (TPP), tangential proper part inverse (TPPi), non-tangential proper part (NTPP), and non-tangential proper part inverse (NTPPi).

Table 1 Composition table for RCC8 relations (from [16, 29])
Full size table
Table 2 Equivalence mapping between RCC8 and Simple Features relations (from OGC)
Full size table
Based on the definitions of RCC8 relations, composition results of RCC8 relations are summarized in [16, 29]. To make the paper self-contained, we present the composition results of RCC8 relations in Table 1. For each pair of RCC8 relations (tr1,tr2), the corresponding table cell indicates all possible relations of a pair of ses (se1,se3) when composing two links (se1,tr1,se2) and (se2,tr2,se3).

In addition, OGC provides the equivalence mappings between RCC8 and Simple Features relations, which is shown in Table 2. Note that, crosses relation is omitted since crosses is designed for point-to-line, point-to-area, and line-to-area only, i.e., it does not support area-to-area relation.

By combining Tables 1 and 2, we observed that there exist three kinds of compositions:

The first kind of composition results in all the six relations. For instance, compose(within,contains) = {disjoint,touches,overlaps,equals,within,contains}

The second kind of composition derives part of the relations. For example, compose(contains,disjoint) = {disjoint,touches,overlaps,contains}

The third kind of composition generates only one topological relation. Precisely, compose(disjoint,contains) = {disjoint}

Based on the third kind of composition, we propose simple inference rules for topological relations (SIRTRs). SIRTR specifies all possible binary link compositions of Simple Features relations. Binary link composition denotes the link composition via exactly one intermediate se. Fifteen rules of SIRTR are represented in Table 3, where etr stands for a topological relation of an existing link eLink and ntr indicates a topological relation of a newly inferred link nLink. Now we are ready to introduce the SLC model.

Table 3 Simple inference rules for topological relations
Full size table
Definition 3
(Spatial Link Composition: SLC) Given a set of source spatial entities S, a set of target spatial entities T, a set of existing spatial links SLink, and the simple inference rules for topological relations SIRTR, SLC aims to compose new spatial links SLink(S,T) such that

SLink(S,T)={(s,ntr,t)|s∈S,t∈T,i∈S∪T:∃(s,etr1,i)∈SLink∧∃(i,etr2,t)∈SLink∧∃(etr1,etr2,ntr)∈SIRTR}
The SLC model is proposed to reduce the execution time of discovering topological relations. It can be achieved due to the following two factors. Firstly, new spatial links can be discovered by composing the existing or intermediately generated spatial links and this results in the reduced number of the DE-9IM computations. Secondly, the execution of the SLC model is relatively low-cost.

Discovering order of topological relations
The discovering order of topological relations is important for the efficient execution of SLC. To decide the discovering order properly, we propose a score function to rank topological relations. The rationale of the score function is as follows:

High reusability first: The higher reusability of a topological relation tr, the higher possibility of new spatial links being discovered by the SLC model. The reusability indicates the possibility of a tr being utilized as an etr1 or etr2.

High composability last: The higher composability of a tr, the higher possibility of new spatial links with tr being discovered by the SLC model. The composability denotes the possibility of a tr being inferred as a ntr.

Low computation cost first: The more existing spatial links, the higher the possibility of new spatial links being discovered by the SLC model. Moreover, the lower computation cost would discover more spatial links per time unit.

Table 4 Notations for discovering order of topological relations
Full size table
Table 4 lists the notations used in this section. The proposed score function Score(tr) for a Simple Features relation tr is expressed as follows:

Score(tr)=Ru⊝(tr)Cp⊝(tr)×Cc⊝(tr)
(2)
f⊝(tr)=f(tr)maxf(⋅)
(3)
Ru(tr)=|etr∈SIRTR∧etr=tr||etr∈SIRTR|
(4)
Cp(tr)=|ntr∈SIRTR∧ntr=tr||ntr∈SIRTR|
(5)
Cc(tr)=Cf(tr)×Ff(tr)
(6)
Cf(tr)=|ce∈DE−9IM(tr)||ce∈DE−9IM|
(7)
where Ru(tr) , Cp(tr) , Cc(tr) , Cf(tr) , and Ff(tr) stand for reusability, composability, computation cost, computing factor, and filtering factor of a tr. f⊝(⋅) is a normalization function which is used to normalize Ru(tr) , Cp(tr) , and Cc(tr) when calculating Score(tr) . In addition, Ff(tr) ranges in [0,1] and the smaller Ff(tr) means the smaller search space. The value of Ff(tr) depends on the two sets of spatial entities S and T. Further description about Ff(tr) will be given in Sect. 5.3.

On the contrary, Ru(tr) , Cp(tr) , and Cf(tr) are static, i.e., independent from input datasets, and thus can be precomputed. Ru(tr) and Cp(tr) are computed based on SIRTR. Cf(tr) is calculated according to the DE-9IM model, where ce denotes the needed computing element. An example of computing Score(tr) is illustrated as follows:

Example 3
(Computing Score(within)) To determine the discovering order of a topological relation within, Ru(within) is computed firstly. Based on SIRTR (see Table 3), within appears 5 times as etr1 or etr2, and the total number of etr is 30, thus Ru(within) equals 5/30. Similarly, there are 3 rules that infer within as the relation of a new link, and the total number of new links is 15; thus, Cp(within) comes to 3/15. On the other hand, the mask code string of within in DE-9IM is ”T∗F∗ ∗F∗ ∗ ∗”. It means that only the first, third, and sixth elements are needed to check whether within holds. Since there are totally 9 elements in DE-9IM, the Cf(within) equals 3/9. Given the maximum values of the three function, e.g., Ru(⋅)max=12/30, Cp(⋅)max=4/12, and Cf(⋅)max=6/9, after applying normalization (Eq.  (3)), finally Score(within) comes out as 0.278/Ff(within).

Note that, Score(tr) can be easily modified by attaching weights to reusability, composability, and computation cost for fitting specific datasets or applications. Moreover, the weights can be adjusted by supervised or unsupervised machine learning techniques. However, this is out of the scope of this paper, and we stick to Eq. (2) since it is general and parameterless.

Accessing order and filtering of spatial entities
Apart from the discovering order of topological relations, the accessing order of ses is also vital to improve the efficiency of the SLC model. To efficiently access ses, we first index space and map each se to the indices w.r.t. its geometry. Table 5 lists the notations utilized in this section.

Table 5 Notations for accessing order of spatial entities
Full size table
Space tiling is an indexing technique for ses and it is widely adopted in link discovery approaches [18, 19, 38]. Space tiling divides n-dimensional affine space into finite hyperrectangles hrs with the same edge length ln of each dimension. Then, hrs are indexed by vectors i∈(N1×⋯×Nn) to serve as addressable buckets for ses w.r.t. their geometries. hrs can be adjusted according to the spatial datasets by changing the granularity factors Δ={(l1)−1,(l2)−1,…,(ln)−1}.

After indexing the space, it is required to map each se to corresponding hrs w.r.t. its geometry. We employ the concept of Minimal Bounding Box (MBB) [23] to address this goal. MBB (also called envelop) of a geometry is a rectangular box with the smallest measure within all points of the geometry lie. The smallest measure can be an area, volume, or hypervolume in higher dimensions. For example, given a geometry g in a two-dimensional space, we construct its MBB □(g) and transform □(g)’s corner coordinates into corner hr buckets. Then g is mapped to hr buckets which locate in the range of corner buckets.

Our basic idea behind the accessing order of ses is quantitative hr first, i.e., grant priority to access a hr with the larger number of ses. The rationale is that the more initial ses, the higher chance of discovering more initial spatial links, thus leading to the higher possibility of new spatial links being discovered by the SLC model.

Consequently, we need to know how many ses are indexed to each hr. Through the MBB-based mapping, se-first mappings MSH = (a se, corresponding hrs) are generated. Based on MSH, we create hr-first mappings MHS = (a hr, corresponding ses). Then, MHS is transformed into quantitative hr mappings MH#S = (a hr, number of corresponding ses). Finally, hrs are accessed in descending order of MH#S w.r.t. the number of corresponding ses.

On the other hand, MBB is also helpful in filtering ses to reduce the search space. For a transitive tr, ¬tr(□(s),□(t))⇒¬tr(s,t) can be inferred since g⊆□(g) always holds. [38] employs this property to filter ses for equals, within, and contains. Besides, we propose to filter disjiont additionally in our MBB-based filtering method MBBFilter(⋅). MBBFilter(⋅) filters disjiont based on an inference rule that disjoint(□(s),□(t))⇒disjoint(s,t). Thus, Ff(tr) in Eq. (6) is further specified as follows:

Ff(tr)=|SEP⊖|+1|{(s,t)|s∈S,t∈T}|+1
(8)
where SEP⊖ denotes the remaining pairs of ses (s, t) after applying the MBBFilter(tr) . We add a constant value 1 to the molecular and denominator to avoid Ff(tr) being 0, since Ff(tr) is the denominator of the Eq. (2).

figure f
DORIC algorithm
We describe the procedure of DORIC in Algorithm 1. DORIC combines the proposed methods for discovering topological relations between two sets of ses. Specifically, DORIC takes source spatial entities S, target spatial entities T, and the granularity factors Δ as inputs. In addition, if S or T contains spatial links within itself, i.e., ∃SLink(S,S) or ∃SLink(T,T), then the spatial links are imported as well.

Firstly, the estimated total hypervolume (ETH) of S and T is calculated in Lines 1–2 according to [38]. For example, in 2-D space ETH is the multiplication of number of ses, average length, and average of width. If ETH(S) is larger than ETH(T) , we swap S and T to reduce the size of the spatial index. Spatial indexing is performed in Lines 3–8. computeHr(□se) computes hrs that the MBB of se lies in. Then Lines 9–10 generate an ordered list of Simple Features relations OTR as well as a filtering pair list FPL. Finally, spatial links of each tr is discovered in the order of OTR in Lines 11–13 and the discovered spatial links SLink are returned as a result. The main functions, e.g., getDiscoveryOrder() and discoverSpatialLinks() , are described in detail in Algorithms 2 and 3.

figure g
Algorithm 2 describes the getDiscoveryOrder() , which takes two sets of spatial entities S and T as inputs and returns an ordered list of Simple Features relations OTR. Specifically, Lines 2–7 compute the filtering factor Ff(tr) based on MBBFilter() . Note that, Ff(tr) is set as 1 for touches and overlaps since MBBFilter() cannot be applied to these relations. Then Lines 8–9 calculate Score(tr) and add it to OTR. Finally, OTR is sorted in descending order of Score(tr) and returned as a result.

figure h
The function of discoverSpatialLinks() is explained in Algorithm 3. Inputs of Algorithm 3 include two sets of spatial entities S and T together with their spatial indices, one of the Simple Features relations tr, and a filtering pair list FPL created by getDiscoveryOrder() . If there already exists spatial links SLink, SLink are also imported. SLink can either be existing spatial links contained in S and T, or be the intermediate results of DORIC. discoverSpatialLinks() traverses hrs in descending order of the number of corresponding ses. For each pair of (s, t) contained in a hr, Lines 3–7 checks whether the pair of (s, t) is filterable w.r.t. FPL. Note that, if tr is disjoint we add (s, disjiont, t) to SLink, otherwise (s, tr, t) is judged as "does not hold". For an unfilterable pair, the composability of (s, tr, t) is checked in Lines 8–9. Finally, for only unfilterable and uncomposable (s, tr, t) , Lines 10–11 conduct the DE-9IM computations.

Theorem 1
(Accuracy) DORIC is complete and correct.

DORIC adopts space tiling to index ses. The completeness of the application of space tiling for the topological link discovery is proved in [37]. Now we give the proof for the correctness of DORIC.

Proof
DORIC firstly employs MBB-based filtering MBBFilter(⋅) and spatial link composition SLC(⋅) to reduce the number of DE-9IM computations. MBBFilter(⋅) is based on the transitive property of trs and ⊆, and SLC(⋅) is built on the basis of the precise composition table for two topological relations. Then DE−9IM(⋅) is executed to check whether (s, tr, t) holds according to the DE-9IM model for the unfilterable and uncomposable se pairs. Thus, the correctness of DORIC is proven since MBBFilter(⋅), SLC(⋅), and DE−9IM(⋅) are all correct. □

Then we analyze the time complexity of DORIC as follows:

Theorem 2
(Complexity) Algorithm DORIC has time complexity O(|P|2+|SE|+|HR|⋅log|HR|+|S|⋅|T|+∑tr∈TR∑hr∈HR∑(s,t)∈hr(log|FPL(tr)|+|SLink|⋅k⋅log|SLink|)+|s|⋅|t|⋅Cf(tr)).

Proof
Firstly, computing the ETH of source and spatial entities S and T (Lines 1–2) requires O(|P|) time, where |P| indicates the total number of points contained in S∪T. Indexing the spatial entities w.r.t. the space (Lines 3–8) entails O(|SE|+|HR|⋅log|HR|) time, where |SE| denotes the number of ses included in S∪T and |HR| stands for the number of hrs after applying space tiling. Then we calculate the discovery order of TR (Line 10) which calls for O(|S|⋅|T|) time, where |S| and |T| means the number of ses contained in S and T. Finally, spatial links are discovered iteratively (Lines 11–13) in O(∑tr∈TR∑hr∈HR∑(s,t)∈hr(log|FPL(tr)|+|SLink|⋅k⋅log|SLink|)+|s|⋅|t|⋅Cf(tr)) time, where |SLink| denotes the number of discovered spatial links and k indicates the number of spatial links which can be utilized as etr1. Besides, |s| and |t| represent the number of points existed in each geometry of s and t. Thus, the theorem is proved. □

Experiments
We conducted experiments on three real-world spatial LOD datasets to test the efficiency of the proposed DORIC in terms of the spatial link discovery time (ldt) and the number of DE-9IM computations (ndc). As described and proved in Theorem 1, the precision is always 1 and all the topological relations would be returned completely. Thus, only execution time related factors were tested. The performance of DORIC was compared with 4 baseline topological relation discovery approaches: RADON [38], RADON2 [2], STRABON [12], and SILK [40]. Table 6 lists the notations used in this section.

Table 6 Notations that are used in the experiments section
Full size table
Settings
Datasets Three spatial LOD datasets were employed in our experiments. (1) NUTS contains classification information of territorial units of the whole European regions, as introduced in the motivating example. (2) Greek Administrative GeographyFootnote11 (GAG) describes the administrative divisions of Greece, e.g., prefectures, municipalities, districts, etc. The coordinate system adopted by GAG is GGRS87 (Greek Grid). Thus, we transformed it to widely used WGS84 for comparing with other datasets. (3) CORINE Land CoverFootnote12 (CLC) collects data regarding the land cover of 33 European countries. We extracted 20,000 ses from CLC and formed a sub-dataset namely CLC20K for simplicity. Statistical information of the datasets is shown in Table 7. Besides, all the datasets are two-dimensional data, i.e., each point is composed of a longitude and a latitude. For the granularity factor, average heuristic [38] was adopted to generate hrs. The average heuristic indicates that the average width and height length of □(se) are utilized as the unit length.

Table 7 Statistical information of spatial LOD datasets
Full size table
Baseline methods Four topological relation discovery approaches are chosen as baselines. RADON, RADON2, and SILK are precise DE-9IM computation-based approaches, and STRABON is a spatial database management system.

RADON [38]: RADON combines space tiling, MBB-based approximation, and a sparse index to reduce the number of DE-9IM computations.

RADON2 [2]: RADON2 is an extension of RADON, which additionally proposes to share the computing of intersection matrix used in DE-9IM to speed up the spatial link discovery.

STRABON [12]: STRABON is a semantic geospatial database management system that can be used to store and query linked geospatial data.

SILK [40]: SILK applies a blocking technique to index ses for reducing the search space. The blocking factor was set as 10, which is the same as in [40].

Platform and parameters We implemented algorithms of DORIC in Java (version 9.0.1). Experiments were conducted on a server machine with 8 core Intel Xeon CPU E5, 512GB SSD, 64GB memory, and running on Ubuntu 16.04. All data were kept in memory. We conducted experiments on SILK version 2.7.1 and STRABON version 3.2.11.

Experimental results
To test the efficiency of our proposed approach DORIC, it was executed on three different dataset pairs that were GAG and CLC20K (GC), NUTS and CLC20K (NC), and NUTS and GAG (NG). The results in term of the total ldt and ndc are shown with comparison of baseline approaches. Then, to verify the effectiveness of the proposed strategies for maximizing the number of spatial link composition (nslc), experiments were conducted with various discovering and accessing orders. Furthermore, detailed results in terms of ldt for each topological relation (tr) are presented.

Overall comparison with baselines w.r.t. spatial link discovery time and number of DE-9IM computations
In this section, the overall performance of the proposed DORIC was tested with comparison of the baseline approaches in terms of ldt. ndc was tested as well since it is a crucial factor which affects the execution time.

Fig. 4
figure 4
Comparison of DORIC, STRABON, and SILK in terms of the link discovery time (ldt) on 3 dataset pairs

Full size image
Fig. 5
figure 5
Comparison of DORIC, RADON2, and RADON in terms of the link discovery time (ldt) on 3 dataset pairs

Full size image
Figure 4 shows ldt of DORIC, STRABON, and SILK on 3 dataset pairs. SILK adopts the blocking technique and STRABON applies the spatial index R-tree-over-GiST [12] over ses to speed up the spatial link discovery. DORIC performed 285% and 51% faster than SILK and STRABON. It was due to that DORIC is equipped with efficient methods of space tiling index, MBB-based filtering, swapping, and the SLC model. These methods replace the high-cost DE-9IM computations with low-cost operations.

Figure 5 illustrates ldt of DORIC, RADON2, and RADON on GC, NC, and NG. RADON2 performed slightly faster than RADON due to the sharing of intersection matrix computations. The difference was notable in GC since ses in GAG and CLC20K have much more points than that of NUTS. And more points in ses result in the higher cost in DE-9IM computations. Compared with RADON2 and RADON, the proposed DORIC additionally propose to use the SLC model and the MBB-based filtering for disjoint. As a result, ldt of DORIC came out to be 4.33% and 10.15% less than RADON2 and RADON, respectively.

The basic idea of our DORIC is to reduce ndc by replacing it with lightweight operations such as composing existing spatial links and filtering. Figure 6 presents ndc of DORIC, RADON2, RADON, and SILK on 3 dataset pairs. STRABON is excluded since it is a query-based system and thus ndc cannot be counted. RADON2 resulted much less ndc due to the sharing of intersection matrix computations. However, RADON2 has to check every tr (i.e., precisely compute a tr) for a certain pair of ses while DORIC and RADON only need to check one tr. And this required much more time for RADON2 to execute a DE-9IM computation.

As shown in Fig. 6, ndc of DORIC was 12.37% and 81.08% less than RADON and SILK, respectively. DORIC and RADON additionally apply swapping, MBB-based filtering for equals, within, and contains when compared with SILK. DORIC employs spatial link composition and filtering for disjoint to further reduce ndc.

Fig. 6
figure 6
Comparison of DORIC, RADON2, RADON, and SILK in terms of the number of DE-9IM computations (ndc) on 3 dataset pairs

Full size image
Detailed comparison with baselines w.r.t. spatial link discovery time for each topological relation
In this section, we analyze the efficiency of DORIC with the comparison of baseline approaches w.r.t. each topological relation touches, disjoint, contains, overlaps, within, equals. Note that intersects can be obtained by simply reversing disjoint.

Fig. 7
figure 7
Detailed comparison of DORIC, RADON2, RADON, STRABON, and SILK in terms of link discovery time (ldt) on 3 dataset pairs

Full size image
Figure 7 shows the ldt of DORIC, RADON2, RADON, STRABON, and SILK w.r.t. each tr on dataset pairs GC, NC, and NG. The discovery order of trs was {equals, within, overlaps, contains, disjoint, touches}. ldt of RADON2 was taken by the discovery of within and overlaps in large part. Most se pairs were filtered for equals, and after discovering overlaps there was rarely DE-9IM computations needed to be executed due to the intersection matrix sharing. As shown in Fig. 7, DORIC resulted in less ldt for every tr than baseline methods excluding RADON2. When compared with RADON, the advantage of DORIC lied in within, contains, and disjoint. Specifically, the reduced ldt was contributed by SLC 83%, 78%, and 66% for within, contains, and disjoint, respectively. The remaining part was carried out by the MBB-based filtering.

Table 8 Number of spatial link composition (nslc) with various discovering and accessing orders on different dataset pairs
Full size table
Self-comparison with varying discovering order of topological relations (OTR) and accessing order of hyperrectangles (OHR)
In this section, we verify the effectiveness of the 2 proposed strategies designed to maximize the utility of the proposed SLC model. First one is for discovering order of topological relations OTR, and second one is for accessing order of hrs (OHR).

Table 8 shows the number of spatial link compositions (nslc) with various strategies for orders on 3 dataset pairs. rOTR indicate the reverse version of OTR. For example, suppose that OTR equals {equals, within, overlaps, contains, disjoint, touches} then rOTR comes to {touches, disjoint, contains, overlaps, within, equals}. rOHR denotes the reverse version of OHR. hrs with more ses are accessed first in OHR, but visited last in rOHR.

As shown in Table 8, nslc of (OTR, OHR) was 7.74%, 3.01%, and 6.87% greater than (rOTR, OHR) on GC, NC, and NG, respectively. It means the proposed strategy for OTR increases the utility of the SLC model. On the other hand, (OTR, OHR) performed only 0.37% better than (OTR, rOHR). However, when (OTR, OHR) is compared with (rOTR, rOHR), the difference in terms of nslc increased to maximum 12.21% on NG and 10.17% on average. It indicate that the proposed strategy for OHR has little impact on nslc itself. But we could expect synergy of two strategies to increase the usage of the SLC model.

DORIC performed SLC (i.e., discovered spatial links via SLC) 3.01%, 6.87%, and 7.74% more times under OTR than rOTR on NG, NC, and GC respectively. It was due to that under OTR, DORIC discovered high reusability, high composability, and low computation cost tr first and this increased the utilization of the SLC model.

Conclusion and future work
In this paper, we presented DORIC, an efficient approach for discovering spatial links of topological relations based on spatial link composition. We proposed a spatial link composition SLC model to compose spatial links of topological relations from existing spatial links for reducing the high-cost DE-9IM computations. In addition, we design two strategies to maximize the utility of the SLC model during the spatial link discovery. Specifically, the first strategy is designed for deciding the discovering order of topological relations and the second strategy aims to determine the accessing order of spatial entities. Experimental results on three real-world LOD datasets, e.g., NUTS, GAG, and CLC20K, showed that DORIC outperformed the state-of-the-art approach in terms of the link discovery time. It could be achieved since DORIC reduced the number of high-cost DE-9IM computations.

We have some directions for future work. Firstly, we plan to extend the current binary SLC model to support n-ary composition to increase the utility. Secondly, we aim to design methods to reduce the discovery time for touches and overlaps further. Thirdly, we will study how to store and preprocess semantic spatial big data and discover spatial links in parallel fashion. And finally, more experiment would be conducted on large-scale, highly overlapped datasets with comparison of more baseline approaches, e.g., stLD [32] and MaskLink [31, 33].