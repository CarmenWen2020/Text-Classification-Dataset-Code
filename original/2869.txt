Time evolving networks have some properties in common with complex networks, while some characteristics are specific to their time evolving nature. A number of interesting properties have been observed in time-varying complex networks such as densification power-law, shrinking diameter, scale-free degree distribution, big clustering coefficient and the emergence of community structure. Existing generative models either fail to simulate all the properties or undermine the social interactions between the existing nodes over time. In this paper, we propose a generative model called socializing graph model (SGM) for those networks that evolve over time. It is an iterative procedure consisting of two steps. In the first step, we add one new node to the network at every timestamp and connect it to an existing node using a preferential attachment rule. In the second step, we add a number of edges between the existing nodes in order to reflect the emergence of social interactions between nodes over time and mimic the evolution of real networks. We present empirical results to show that SGM generates realistic prototypes of evolving networks.

Access provided by University of Auckland Library

Introduction
Time evolving networks (TENs), also called time-varying complex networks, have a wide variety of applications in many domains including economics, business, transportation and natural, social and computer sciences. Examples of such networks include online social networks, scientific collaboration networks, co-authorship, citation networks, and many more. While TENs have some characteristics, such as small-world property and power-law degree distribution, in common with complex networks, e.g., web graphs, they also exhibit important differences, such as shrinking diameter over time, because of their time evolving nature.

A number of studies Mislove et al. [23], Kumar et al. [19], Ahn et al. [2] and Leskovec et al. [21] have focused on the empirical analysis of time evolving networks to examine their properties. These studies revealed that some properties are common in TENs and that they share a common internal structure. In the past, graph models were successful in simulating properties of web graphs and thus, it is natural to propose models for time evolving networks. Unlike the complex networks, which are static, TENs are dynamic networks and it is challenging to model such time-varying complex networks that grow and evolve over time with the addition of new components and connections.

Current network models either fail to realize all the properties of TENs or propose an unrealistic method of creating new links between the existing nodes over time. For example, in the iterated local transitivity (ILT) model Bonato et al. [7] simply double the number of nodes in a graph at every timestamp making it hard to generate a graph of a given size. Moreover, in the ILT model, at each timestamp and for every existing node, a new node is cloned which joins to the closed neighbor set of its cloning node. This cloning of all the existing nodes increases the network size exponentially, and the degree distribution of the resulting graph does not follow a power-law. Another example is the Kronecker graph model Leskovec et al. [20] in which estimating parameter values for introducing stochasticity into the model are non-trivial and we need a good estimation of these values for simulating some properties, e.g., shrinking diameter. In this regard, given a real graph then finding the maximum likelihood stochastic Kronecker initiator matrix becomes an optimization problem and complicates the model.

In this paper, we put forward a simple yet effective model to simulate the properties of time evolving networks. Our model does not intend to generate a graph that has the same metric values as that of a given real-world graph. Our model is about how to incrementally build graphs that present the interesting properties observed in real-world time evolving graphs. In other words, our main motivation is to propose such a model that would help us in understanding the mechanism that drives the generation of time-varying complex networks. Motivated by the need to propose a simple yet realistic model and to augment the methods available for understanding the evolutionary nature of these time-varying complex networks, we establish a method for prototyping these time evolving networks. Our model realistically suggests two steps to generate a network. In the first step, we add a new node to the network at each timestamp and connect it to exactly one node using the rich-get-richer method. This approach is more realistic than duplicating or cloning the whole or a portion of a graph because it is more appealing to assume that a new node will connect with one node at the time of joining the network and will create new links later. In the second step, we generate a number of new connections between the existing nodes. This step distinguishes our model from the previous models in the logic that we can control the number of links to be added and the method to add them. This step realizes the social interactions between the existing nodes. As the network grows and more nodes are added to it, more interactions are probable to occur between the nodes. A good model should adopt this behavior and should realistically create more links over time in the network. While most previous works introduce new edges between a new node and an existing node, our model takes on this social behavior and suggests a method based on the transitivity of nodes to add links between existing nodes. This change in the generation of new links leads to a network that simulates all the desired properties of TENs.

Our model is based on the concept of socialization over time. Intuitively, we believe that if a user has been a part of a network for a long time, he is more probable to interact with other users than a new user. A long-time user can concentrate more links around himself, an old paper has more chances to be cited, an established autonomous system can accommodate more customers, a popular aged website can attract more users, and so on. We deploy this social behavior with a twist in our model and mix it with the transitive nature of relations between nodes. In social networks, the friend of my friend is not necessarily my friend but is far more likely to be my friend than a randomly chosen user. For example, if X is a friend of Y and Y is a friend of Z then it is highly likely that X will also be a friend of Z. This phenomenon of the transitive relationships is also known as triadic closure and has been observed in social networks Romero and Kleinberg [29], Huang et al. [17]. We formulate this common belief and propose a local preferential attachment rule to create closed friendship triangles in graphs.

Our contribution to the ongoing research on TENs is as follows. (1) Our two-step approach realizes the emergence of new nodes in the network and the emergence of new links between existing nodes to mimic the growth and socialization over time in networks. (2) The main novelty lies in the second step where we add edges between existing nodes, not between the new node and an existing node. We connect friends of a node following a local preferential attachment rule and generate triadic closures over time which helps evolving network properties such as shrinking diameter and high clustering coefficient. This step also helps us to better understand the growth of connections between existing nodes. (3) Our model can be used to study the mechanism that drives the generation of TENs. It has a tunable parameter to control the density of the generated graph. By tuning this single parameter, we can generate TENs of different property values.

Our model obeys all the well-known properties of time-varying complex networks. The graphs generated by our model have a higher clustering coefficient than random graphs and have a small diameter to comply with small-world networks. By examining different schemes for creating links in the second step, we learn that the addition of new links between closely related nodes produces a graph that follows a scale-free degree distribution in opposition to a graph generated by creating edges between random nodes. We also discover that social interaction between nodes of relatively high degrees results in a shrinking diameter graph. The tunable parameter of our model handles the densification of a graph and can be used to construct graphs with varying density.

The rest of the paper is organized as follows. In Sect. 2, we outline the well-known properties of time evolving networks. In Sect. 3, we formally present our model. In Sect. 4, we provide the characterization of the behavior of our model and present simulation results to show that our model simulates all the properties of time-varying complex networks. We discuss the related work in Sect. 5 and conclude the paper in Sect. 6.

Properties of time evolving networks
A network, or a graph, interchangeably, defines a pair-wise relation between objects of interest. A graph represents the objects as vertices or nodes and relations between them as edges or links. Mathematically, a graph G is represented as G(V, E) where V is the set of vertices and E is the set of edges in G, whereas a graph at time t is represented as Gt(Vt,Et). A graph may be directed or undirected but in this paper we will focus on undirected graphs only. It is relatively new to propose models for TENs and new properties are being discovered with time; therefore, we limit ourselves to some of the well-known and agreed-upon properties of TENs.

Small-world property
Small-world networks have a small diameter and exhibit a high clustering coefficient. A small-world network is distinguished from other networks by two specific properties, the first being high clustering and the second being a small diameter. Mathematically, the clustering coefficient Cv of a node v of degree dv is the proportion of the number of edges ev between the neighbors of v relative to the total number of possible edges between the neighbors, given by

Cv=2∗evdv(dv−1)
(1)
The overall clustering in a network can be determined by averaging the clustering across all individual nodes. A small-world network has a higher clustering coefficient than random graphs Watts and Strogatz [34]. According to the second property of small-world networks, the mean geodesic, i.e., the shortest-path distance between the nodes increases logarithmically, i.e., very slowly as a function of the number of nodes in the network. The average shortest path length of a network is calculated as the mean of the shortest geodesic distances between all possible pairs of nodes, given as

Lavg=1n(n−1)∑i≠jd(vi,vj)
(2)
where n is the number of nodes in the network and d(vi,vj) represents the shortest distance between nodes vi and vj. Many studies have shown that the web Albert et al. [3], Broder et al. [8], scientific collaboration Newman [24] and social networks Mislove et al. [23], Ahn et al. [2], Adamic et al. [1] show small-world property.

Scale-free degree distribution
The scale-free degree distribution indicates the undemocratic nature of networks and proposes that a small proportion of nodes have a very high degree compared to others in the network. Real networks often show a skewed node–degree distribution in which most nodes have only a few edges or links but there exist some nodes which are extremely linked. This heavy-tailed distribution is known as power-law or scale-free degree distribution. The degree of a node is the number of edges adjacent to it. Let a node v have degree dv; a scale-free network that follows a power-law can be expressed mathematically as

P(dv)∼(dv)−γ
(3)
That is, fraction P(dv) of nodes in the network having dv links to other nodes follows the above equation for large values of dv, where the value of γ typically lies in the range 2<γ<3. However, some real-world graphs have the value of γ outside this range Ferrara and Fiumara [13], Mislove et al. [23]. Studies Mislove et al. [23], Kumar et al. [19], Golder et al. [16] confirm that many real-world graphs follow a power-law degree distribution.

Densification power-law and shrinking diameter
Recently, Leskovec et al. [21] discovered that time evolving networks have two important properties that distinguish them from complex networks. The first property states that a graph at time t, represented as Gt, with |Et| number of edges and |Vt| number of nodes satisfies a densification power-law for a constant α in the range [1, 2] such that

|Et|∼(|Vt|)α
(4)
It tells us that the average degree of a network grows to infinity with the number of nodes in the network over time, in contrast to complex networks that have a constant degree on average. The second property states that the average distance or diameter of a network decreases with time. Both of these properties are related to dynamic networks, i.e., time-varying complex networks only. It is reported in Kumar et al. [19], Leskovec et al. [21] that citation graphs, internet graphs of autonomous systems and online social networks demonstrate these properties.

Community structure
Time evolving networks often organize themselves into small groups or clusters in which intra-group links are significantly higher than inter-group links. More specifically, a network is said to have community structure if the nodes of the network can be clustered into sets of nodes such that each set of nodes is densely connected internally and sparsely with the rest of the network. Community structures are quite common in real networks. For example, social networks include community groups based on common location, lifestyle, interest and profession. There is a wide variety of available methods with varying degrees of success to detect community structure in a network and the discussion is beyond the scope of this paper. We will rely on a method that uses modularity to detect communities in a network. The modularity Newman [25] measure is used to assess the quality of a network partitioning into communities. This measure can be expressed as

Q=12|E|∑i,j∈V[Ai,j−kikj2|E|]Δ(ci,cj)
(5)
where |E| is the number of edges in a network, Ai,j is the edge weight connecting vertex i and j, ki is the degree of vertex i and Δ(ci,cj) is a function returning 1 if the community assignments of vertex i and vertex j are the same and 0 otherwise.

Socializing graph model
In this section, we formally present our model called socializing graph model (SGM). SGM generates undirected graphs and can be run for any period of time t(t>0), given an initiator graph at t=0. We represent a network as an undirected graph G=(V,E) where V is the set of nodes and E is the set of edges. We represent nodes in a graph G as {v1,v2,v3,…,vn} and edges as {e1,e2,e3,…,em} such that there are a total of |V|=n number of nodes and a total of |E|=m number of edges in G. In this model, a network evolves over time and we represent a graph at time t as Gt(Vt,Et) such that at any instant of time t, there are |Vt|=nt number of nodes and |Et|=mt number of edges in the network. Time is discretized, and a single timestamp is needed for a transition of Gt to Gt+1. In a single timestamp, we perform two steps, namely node step and edge step. The initiator graph G0 at t=0 could be any connected graph with |V0|≥3, for example, a connected triplet such that |V0|=3 and |E0|=3. At time t (t>0), we perform two steps in order as follows.

Node step: A new node x arrives and connects to an existing node y via one edge such that

nt+1=nt+1
(6)
We call it node equation. The probability Py of selecting node y is proportional to its degree dy, i.e.,

Py=dy∑nti=1di
(7)
This equation suggests that a high degree node attracts more nodes and helps the network to follow a power-law for its degree distribution.

Edge step: In the edge step, we add Δ number of edges in the network such that

mt+1=mt+⌈β∗mtnt⌉
(8)
We call it the edge equation. Here,Footnote1Δ=⌈β∗mtnt⌉−1 (we consume one edge in the node step) and β is a real number in the range [1,2]. β is the only tunable parameter of SGM and it controls the densification of the generated graphs. It should be noted that β determines the value of α of densification power-law (see Eq. 4). Therefore, β lies in the range [1,2]. In order to add an edge in the edge step, a node x is picked uniformly at random from Gt. An edge is created between two friends y and z of x such that z is selected uniformly at random from friends of x whereas y is selected from friends of x with probability Py given as

Py=dy∑fxi=1di
(9)
Here, dy is the degree of y and fx is the number of friends of x. It means we apply preferential attachment within friends of x and pick y with probability proportional to its degree. We repeat this process Δ number of times in the edge step. It should be noted that we update the degree value of a node every time an edge is created in the edge step. It should also be noted that the number of friends of x must be greater than one, i.e., fx≥2. The newly added node in the node step is not considered as node x during the edge step, but it can be picked as node z since node z is selected from friends of x with uniform probability. We will see in the experimental section that this model produces optimal networks that follow all the properties of real networks. Please note that the nodes x, y and z are distinct nodes. We allow multiple edges but do not allow self-loops in our model.

As pointed out in the introductory section, our model is based on the idea of rich-get-richer, socialization over time and the transitive nature of relations between nodes in a graph. We incorporate the rich-get-richer rule in the node step by borrowing the linear preferential attachment method. In the edge step, we create a number of new edges between the existing nodes to realize that nodes interact with one another over time and enrich a network through socialization. We build up transitive relations between nodes in the edge step for several good reasons including (1) we create more closed triads than open ones for a high clustering coefficient, (2) in order to complete transitive links, we skip nodes of degree one when we pick node x, and this helps in realizing a power-law degree distribution and (3) a node at one of the ends of a link created in the edge step has a high degree, and this helps to keep the average path length constant or decrease over time.

Ideally, we want a generative model: (a) that produces realistic-looking networks that follow the properties of real networks. (b) That is simple, based on the observed behavior of real networks, and easy to understand and implement (c) that have tunable parameters instead of estimated parameters (d) that could be easily extended to incorporate new characteristics of real networks in the future.

Empirical results
Characterization of socializing graph model
Rigorous analysis of the socializing graph model seems to be quite difficult. Therefore, we provide the characterization of the behavior of the socializing graph model through numerical simulations. We give an extensive numerical exploration of our model and plot the properties of the generated graphs against its tunable parameter β. The parameter β is used to control the density of a generated graph. As the value of β increases, we add more edges in the network in a single timestamp that results in a denser graph. We set the value of β={1.1,1.15,1.2,1.25,1.3}, generate graphs and check the properties of the generated graphs in each case. We use a limited range of β because the higher values of β could generate a graph that is too dense to be real as the real-world graphs are not very dense Melancon [22]. All the results presented in this section are averaged over 5 readings.

Small-world: We change the value of β and find the clustering coefficient and path length of the generated graphs. We present the results in Fig. 1. We do not find any clear trend in the case of clustering coefficient except that the generated graphs show high clustering at all the values of β. In the case of path length, we see that as the value of β increases, the generated graphs tend to have shorter path lengths. The obvious reason is that a denser graph usually offers more paths between two nodes than a relatively sparse graph. As a result, a denser graph will have a shorter path length and a small diameter. In the edge step of SGM, we add an edge between two friends of a node and form a closed triplet. These closed triplets help in producing graphs with high clustering coefficients and shorter path lengths.

Fig. 1
figure 1
Average clustering coefficient and average path length of 20 graph snapshots generated by SGM at different values of β

Full size image
Degree distribution: We provide the degree distribution of nodes in the generated graphs for different values of β in Fig. 2. The straight line of the cumulative distribution function of the degree of nodes on a log–log plot depicts that the distribution follows a power-law of the form P(dv)∼(dv)−γ where dv is the degree of node v. To verify, we apply the power-law fitness test on the generated graphs as described in Clauset et al. [10]. We provide the test results in Table 1. The table shows that the value of γ is always in the range [1,3]; however, it does not follow any clear trend. The small values of KS.stat denote better fit whereas the high values of KS.p-value indicate that the test accepted the hypothesis that the tested data could have been drawn from the fitted power-law distribution. Based on this test, we conclude that SGM graphs are scale-free graphs. In the node step of SGM, we apply the preferential attachment rule in the form of Eq. (7), whereas in the edge step, we apply the local preferential attachment rule through Eq. (9). These two equations help SGM to generate scale-free graphs.

Fig. 2
figure 2
Degree distribution in SGM graphs at different values of β

Full size image
Table 1 The results of fitting the power-law on SGM graphs at different values of β
Full size table
Densification power-law: For different values of β, we find that the average degree of SGM graphs increases with time as shown in Fig. 3a. Similarly, Fig. 3b shows that the number of edges increases super-linearly with the number of nodes in SGM graphs. It should be obvious that the value of β determines the value of α in Eq. (4). At timestamp t+1, we add edges equal to the ratio of edges to nodes at time t scaled by β. When β=1, we get a linear relationship between the nodes and edges. When β>1, the edges increase super-linearly with the nodes and follow the densification power-law given in Eq. (4). In addition, we have already observed in Fig. 1b that the average path decreases with time as SGM graphs grow. All these properties are in accordance with the densification law of time evolving networks as described in Leskovec et al. [21].

Fig. 3
figure 3
a Average degree and b nodes versus edges plot of SGM graphs at different values of β

Full size image
Fig. 4
figure 4
The cumulative distribution function of communities of different sizes in SGM graphs at different values of β

Full size image
Community structure: We vary the value of β and find the modularity and non-overlapping communities in SGM graphs using the Spinglass method Reichardt and Bornholdt [28]. We present the results in Fig. 4 in the form of the cumulative distribution function of the size of communities. It should be noted that we binned the community sizes with a bin size of 500. The plots show the size of a community versus the cumulative probability where a dot shows that we find a community of a particular size, and the digit shows the number of communities of that size. We also give the value of modularity and the number of communities in each graph. The plots depict that we always find communities in SGM graphs. A general trend is that as the value of β increases, we find a lesser number of communities in a graph and the value of modularity also decreases. A low modularity at high values of β means there exists many edges between nodes in different communities, and as a result, we find lesser number of non-overlapping communities. It seems that a high-density SGM graph has low modularity and vice-versa.

Comparison with other models
In this section, we compare the graphs generated by socializing graph model with that of Barabasi–Albert (BA) model Barabasi and Albert [4] and Forest Fire (FF) model Leskovec et al. [21] with reference to the properties of TENs discussed in Sect. 2. In our implementation, we start with a closed triplet at time t=0, i.e., at t=0,n0=3 and m0=3, and evolve the network as per node and edge equations discussed in Sect. 3. In one simulation, we generate a dynamic network as a sequence of 20 graph snapshots G1,G2,…,G20 such that a transition from Gi to Gi+1 needs 5000 timestamps, i.e., if Gi=Gt then Gi+1=Gt+5000. All the results are averaged over 5 simulations. We set the value of β=1.2. For comparison, we also present the results of Barabasi–Albert (BA) and Forest Fire (FF) models. In the implementation of the BA model, we set m0=3 and m=2, i.e., at every timestamp, a new node is added, and it connects with two existing nodes using preferential attachment rule as discussed in Barabasi and Albert [4]. While implementing FF model, we adjust the forward and backward burning probabilities as recommended in Leskovec et al. [21] such that the model generates a realistic-looking undirected graph.Footnote2

Fig. 5
figure 5
Average clustering coefficient and average path length of 20 graph snapshots generated by SGM, BA and FF models. It depicts that the graphs generated by SGM and FF follow the small-world property

Full size image
Small-world property
This property is characterized by a higher clustering coefficient than in the random graphs and a logarithmic upper bound on the path lengths, i.e., the average path length should be less than log(n) at any time instant where n is the network size at that time. Figure 5 plots the average clustering coefficient and the average path length of graphs G1,G2,…,G20 of SGM, BA and FF models. In Fig. 5a, we see that in the case of the BA Model, the average clustering coefficient is very small as expected because this model produces graphs with a low clustering coefficient. On the other side, in SGM, we add edges between nodes that have a transitive relation between them and it results in a high clustering coefficient. A high clustering in SGM is supported by the fact that we convert open triplets to closed triplets in the edge step. The FF graphs also have a high clustering coefficient but lower than that of SGM graphs. In Fig. 5b, we show the average path length as the network evolves. In the case of the BA model, the average path length increases with time and is not sub-logarithmic to the network size. In SGM, it increases sub-logarithmically with the network size and decreases with time, a property specific to time-varying complex networks. We find a similar trend in FF graphs. However, FF graphs have shorter path lengths than SGM graphs.

Fig. 6
figure 6
Degree distribution of G5, G10, G15 and G20 snapshots generated by SGM, FF and BA models

Full size image
Scale-free degree distribution
The scale-free degree distribution is characterized by a highly heterogeneous degree distribution that follows a power-law. In Fig. 6, we show the degree distribution of G5, G10, G15 and G20 snapshots on a log–log scale. All the three models, i.e., SGM, BA and FF, follow a power-law with different values of power-law exponent γ as characterized by a straight line on the log–log plots. The node step in SGM follows a preferential attachment or rich-get-richer rule similar to the BA Model. However, in the edge step, we create edges between friends of existing nodes using a local preferential attachment scheme. This local preferential attachment rule disturbs the heterogeneity of degree distribution to a lesser extent, and the degree distribution still follows a power-law with a smaller value of γ than that of the BA Model. Since the FF model also exhibits rich-get-richer flavor in its design, the FF graphs also follow a power-law. For quantitative measures, we also apply power-law fitness test on the generated graphs as described in Clauset et al. [10]. We present the results in Table 2. The table shows that the BA model generates a graph with power-law exponent γ nearly equal to 3, and a very high KS.p-value means the distributions fit a power-law very well. Similarly, SGM graphs have a strong KS.p-value, meaning that the power-law hypothesis cannot be rejected on these graphs. The power-law exponent is nearly 2.1 in the case of SGM. Although FF graphs also obey power-law distribution, the small KS.p-value indicates a poorer fit by a power-law distribution Clauset et al. [10]. It would be worth mentioning that we are not claiming that based on the small KS.p-value, we can reject the null hypothesis for the FF model. We argue that a small KS.p-value indicates a poorer fit by a power-law distribution on FF graphs compared to the SGM graphs.

Table 2 The results of fitting the power-law on SGM, BA and FF graphs
Full size table
Fig. 7
figure 7
Average degree and nodes versus edges plot of 20 graphs generated by SGM, FF and BA models. It confirms that graphs generated by SGM and FF follow the densification power-law

Full size image
Densification power-law
The densification power-law states that (1) the average degree of a graph increases with time, (2) the number of edges increases super-linearly with the number of nodes, and (3) the average path length of a graph decreases with time. Figure 7a shows that the average degree of the graphs generated by SGM and FF increases with time, while in the BA Model it remains constant. Figure 7b shows the nodes vs. edges plot of G1,G2,…,G20 graphs generated by these models. It confirms the super-linear relationship between the nodes and edges in SGM and FF graphs. For shrinking diameter or average path length, we see in Fig. 5b that in SGM and FF, the average path length decreases with time, while in the BA model it increases with time. One possible reason is that when we create a link between two nodes y and z, the shortest path between y and the friends of z decreases by one hop. The same is true between node z and the friends of y. Since node y has a relatively high degree because it is picked using a local preferential attachment rule and when we create a link between node y and z given that node y has a high degree, the shortest path between many nodes of the network decreases. And since we repeat this process for every new edge created in the edge step, the diameter of the resulting graph decreases though it shrinks marginally.

Community structure
We measure the community structure of G20 graphs generated by SGM, FF and BA models using the Spinglass method Reichardt and Bornholdt [28] as this method performs better than other algorithms even for high mixing coefficient as discussed in Orman and Labatut [26]. We find the modularity, the size and the total number of non-overlapping communities in G20. The results are compiled as the cumulative probability of finding a community of a particular size or less than that size as shown in Fig. 8. Please note that we binned the community sizes with a bin size of 500. The plots show the size of a community vs. the cumulative probability where a dot shows that we find a community of a particular size, and the digit shows the number of communities of that size. Interestingly, both SGM and BA models have the same number of communities and high modularity values, whereas FF graph has a lower number of communities and a small modularity value. It should be noted that in the BA Model, all the communities are of the almost same size and seem very homogeneous in size. On the other side, the graphs generated by SGM have communities of different sizes. Some communities are very small, while a few communities are very large, and this type of distribution of community sizes has been observed in literature Ferrara [12], Tibély et al. [33]. These studies Ferrara [12], Tibély et al. [33] observed the existence of a large amount of communities whose size is very small and a very small amount of large communities in complex real-world networks. The small modularity of the FF graph means that it has sparse connections between the nodes within modules but relatively dense connections between nodes in different modules. This experiment shows that the community structure in SGM graphs is closer to that of real-world graphs, whereas it is less realistic in BA and FF graphs.

Fig. 8
figure 8
The cumulative distribution function of communities of different sizes in G20 in SGM, FF and BA models

Full size image
Discussion
In social networks, two types of processes occur over time: growth and socialization. Growth means that the number of nodes in the network increases over time, and socialization means that the number of links between existing nodes increases over time. In socializing graph model, the node step accounts for the growth, and the edge step accounts for the socialization in real networks. In the node step, we apply the rich-get-richer rule for a power-law degree distribution. In the edge step, we apply the rich-by-socializing rule and mix it with transitive relations between nodes. In the edge step: (1) we add Δ number of links which leads to a graph where the number of edges increases super-linearly with the number of nodes, and the average degree of the network increases with time (2) we create transitive links which increases the number of triangles in the network resulting in a high clustering coefficient graph (3) when we create transitive links, one of the nodes is of high degree that helps in shrinking the diameter of the graph. To summarize, rich-get-richer, rich-by-socializing and transitivity are the key elements of SGM, and when combined, they help SGM in producing realistic-looking graphs.

Related work
Developing models for time evolving networks is relatively a new field and most of the related work could be divided into (1) finding properties and (2) developing models. First, we discuss the properties of time-varying complex networks and then the generation models.

The authors in Mislove et al. [23], Ahn et al. [2] study the properties of complex networks by analyzing large-scale online social networks (OSNs) and discover link symmetries, scale-free degree distributions, clustering phenomena and community formations. Golder et al. [16] analyze the Facebook network by studying the messaging pattern between friends and report that the degree distribution of the Facebook network follows a power-law. Kumar et al. [19] study the structure and dynamics of online social networks over time and proposes a generative model for OSNs. Similarly, Leskovec et al. [21] analyze evolutionary aspects of some real-world networks such as citation graphs and find that the average degree of such graphs increases over time while the diameter shrinks with time. Both of these properties are dynamic and could be observed in time-varying complex networks only.

Generative models for complex networks produce graphs that typically satisfy the small world and scale-free degree distribution properties. For example, the preferential attachment model Barabasi and Albert [4], one of the best known models for complex networks, simulates scale-free property. A number of studies Giammatteo et al. [15], Flaxman et al. [14], Deijfen et al. [11], Bu et al. [9] extend preferential attachment mechanism to generate models for static complex networks. Giammatteo et al. [15] propose a model of network growth aimed at mimicking the evolution of the World Wide Web. This work proposes the centrality or importance of a vertex based on its PageRank value and not on its degree and applies preferential attachment rule with a rewiring procedure to produce a required complex network. The work mainly focuses on producing a scale-free degree distribution network and does not consider other properties of complex networks. Similarly, the work in Flaxman et al. [14] generates power-law degree distribution graphs by combining geometric random graphs and preferential attachment graphs. Maria et al. [11] combine rich-get-richer and rich-by-birth effects for producing scale-free networks. In Bu et al. [9], the authors introduce the concept of ”last updating time” that depends on the interactive behavior of a node and by changing a threshold value different network topologies could be acquired. Leskovec et al. [21] propose the Forest Fire model that simulates the densification power-law and shrinking diameter in addition to the properties simulated by complex networks. Similarly, the Kronecker multiplication model also simulates many of the properties of TENs; however, generating a stochastic Kronecker model is non-trivial and makes it less appealing for modeling TENs. A deterministic model introduced in Bonato et al. [7], called iterated local transitivity (ILT), for OSNs and other complex networks dynamically simulates several of their properties but fails to produce a scale-free degree distribution graphs. The work presented in Tamara et al. [32] focuses on the implementation and scalability of block two-level Erdos–Renyi (BTER) model Seshadhri et al. [30]. The work explains how to choose the BTER parameters to match the specified degree distribution and clustering coefficient of a given graph. The core-periphery or core-fringe structures have also gained popularity in the last two decades. There have been a significant amount of research on these networks Benson and Kleinberg [5], Stephen and Martin [31]. Although core-fringe structure sounds reasonable, it is argued that they are merely accounted for by heterogeneous degree distributions Kojaku and Masuda [18]. The work presented in Purohit et al. [27] takes the distribution of different motifs as input and generates a synthetic graph. We first need to compute the distribution of atomic motifs in a given graph and then generate the graph accordingly. More recently, generative adversarial networks (GANs) are being deployed to generate static as well as temporal graphs Zhou et al. [36], Zhou et al. [35], Bojchevski et al. [6]; however, these methods are trained on deep neural networks and hence might not be good candidates to compare against stochastic generative models.

Conclusion and future work
Time evolving networks, also called time-varying complex networks, arise in a variety of real-world graphs ranging from citation graphs to online social networks. These networks have a number of properties in common, as outlined by the research community. We propose a two-step generative model for these networks with a distinguishing feature of socialization in these networks. The graphs generated by our model simulate all the properties, such as small-world property, scale-free degree distribution, densification law, shrinking diameter over time and the emergence of community structure, associated with these networks. We propose this model so that a reader can better understand the properties of temporal graphs and how these properties emerge in these networks. The list of properties of TENs keeps growing with new properties being added by the research community. However, we focus on some of the well-known and agreed-upon properties in this paper. We believe that our model could be a good starting point, and new features could be added to realize new characteristics of TENs in the future.