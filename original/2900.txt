Community structures detection is critical in the analysis of features and functions of complex networks. Traditional methods are mostly concerned with the topology information of networks when conducting community detection, and can only describe the community structures from one aspect. For a more comprehensive analysis of the network, there is often attribute information available and it is a good complement to topology information. In this paper, we propose two parameter-free models based on nonnegative matrix factorization (NMF for short), Topology and Attribute NMF (TANMF for short) and Topology and Attribute Symmetrical NMF (TASNMF for short), combining topology information and attribute information for community structures detection. In addition, the multiplicative update rules are designed and the convergence is proved. Systematic experiments on both the synthetic and the real networks demonstrate the effectiveness and efficiency of our methods.

Access provided by University of Auckland Library

Introduction
Complex networks are abstracts of complex systems. In reality, many complex systems can be described as complex networks, such as social networks, urban transport networks, and power grids. Recently, a great deal of research has been done on real networks, showing that they have a common characteristic, community structure [1]. A community is a set of nodes that have a similar link pattern. Evidences show that community structures often correspond to functional units. For example, a community in a protein network is a group of proteins that have similar functions, a community in a social network is a group of humans with common characteristics such as educational level [2], and a community in a financial network is a number of countries or companies that have a large influence on each other [3].

Because of the critical role that community structure plays in the analysis of complex networks, several methods have been developed for the purpose of detecting it, many of which use only topology information [4,5,6,7,8]. And one of the most frequently used methods is nonnegative matrix factorization (NMF) [9, 10], which functions to decompose a high-dimensional matrix into two or several nonnegative matrices with low-dimension whose product can be a good approximation of the original matrix. NMF is widely used due to its pure additivity constraint (i.e., all elements stay nonnegative after factorization), which enables the results to present physically meaningful character in practical problems [11,12,13,14,15].

However, the approaches only apply topology information for community detection, and in reality, there is often attribute information of nodes available, such as keywords describing the nodes in citation networks, places of residence of the nodes in social networks, or the areas of the nodes’ business in financial networks, which is a good complement to topology information. How to combine the attribute information with the network topology to guide the community detection process is an interesting problem. We use a toy example in Fig. 1 to clarify the motivation. There are ten nodes in the network, each has four color attributes. The network is sparse and the topology information is very limited, making the community detection result unstable. The attribute information can help guide the detection process and can significantly improve the performance. Many methods have been proposed and can be broadly divided into several categories: modifying objective functions of classical clustering algorithms [16,17,18], probabilistic-model-based algorithms [19,20,21,22], dynamical system-based methods [23,24,25], and NMF-based algorithms [26,27,28,29,30,31,32], such as SCI and CDE. More can be found at [33, 34].

SCI [26] gives the semantic description of community. Further, embedding methods based on NMF emerged [29, 30, 32]. CDE preprocesses the original adjacency matrix to obtain a community structure embedding matrix. Moreover, DII [31] is proposed to dig out hidden attribute information behind the topology structures. Although the above methods enhance NMF from different aspects and improve the accuracy of the community detection results to some extent, they also suffer from excessive parameter settings, leading to problems such as time-consuming and unstability of final results. In this paper, we propose two joint nonnegative matrix factorization models that can combine topology information and attribute information of complex networks. The methods are parameter-free, making them more efficient and easy to use. Extensive experiments have been conducted to validate the advantages of our methods.

The rest of this article is organized as follows: Section 2 briefly introduces the related community detection methods. Section 3 details the proposed methods, TANMF and TASNMF, including the models, algorithms and the convergent proofs. Section 4 gives the experimental results and Sect. 5 concludes.

Related work
In recent years, various methods for community detection have been proposed. Below, we summarize the works related to ours, including the ones based solely on network topology and those combining network topology and attribute information for community detection.

Community detection based on network topology
Nonnegative matrix factorization (NMF) [10] has been developed rapidly in the field of community detection and has become one of the most commonly used community detection methods due to its good interpretability. The exact formula is given below:

minF≥0,G1≥0∥A−FG1∥2F
(1)
where A∈Rn×m is a given matrix to be decomposed, F∈Rn×k is basis matrix, and G1∈Rk×m is coefficient matrix, k≪min(n,m).

Based on the advantages of NMF, a series of NMF-based community detection methods have emerged. One of the most widely used is SNMF [35], which is a special case of NMF where the factorized matrix is symmetric. Its objective function is as follows:

minF≥0∥A−FFT∥2
(2)
where A∈Rn×n is a given symmetric matrix and F∈Rn×k is basis matrix, k≪n.

Community detection based on network topology and attribute information
Although community detection methods based on network topology have been well developed, it can analyze networks merely from one aspect. In addition to the network topology, node attribute information is often used for community detection. For example, a person in a social network usually has attribute information such as gender, education, and home address. Integrating network topology and node attribute information for community detection can capture network characteristics more comprehensively, thereby obtaining better results.

On this basis, many methods for community detection based on attribute information have been derived. Among them, the most famous method is SCI [26], which combines topology information and node attribute information for community detection; the objective function is as follows:

minU≥0,C≥0∥U−WC∥2F+α∑∥C(:,j)∥21+β∥A−UUT∥2F
(3)
where α is a nonnegative parameter to make a trade-off between the first error term and the second sparsity term, β is a positive parameter for adjusting the contribution of network topologies. U is the community membership matrix and C is the community attribute matrix.

CDE [29] alters the adjacency matrix to obtain a better result. Based on the adjacency matrix, CDE constructs a community structure embedding matrix M, which could explore inherent community structures.

M=max{logTijDdidj−logk,0}
(4)
where Tij is the weight matrix, di is the degree of the node i, and D=∑idi. The objective function form of CDE is similar to that of SCI’s:

minU≥0,C≥0∥W−UC∥2F+α∑∥C(:,j)∥21+β∥M−UUT∥2F
(5)
where M is the community structure embedding matrix, and the meanings of other symbols are the same as above.

On the basis of the methods above, this paper makes some improvements, removes the cumbersome parameter constraints, and gives the objective function, which also combines topology and attribute information. Detailed formulas and derivations are explained below.

Model description
Consider an undirected network G=(V,E) with node set V and edge set E, the adjacency matrix can be represented as A∈Rn×n, where Aij=1 if there is a link between nodes i and j, and 0 otherwise. In addition to topology information, there is also attribute information W∈Rn×m, such as semantic characteristics and political affiliations, where Wij=1 if node i has attribute j and 0 otherwise.

Topology and attribute NMF (TANMF): the proposed model
Modeling network topologies
As mentioned above, NMF decomposes the adjacency matrix A into two nonnegative matrix F1 and G such that A≈F1G, leading to the following nonlinear programming problem:

minF1≥0,G≥0∥A−F1G∥2F,
(6)
where ∥⋅∥F is the Frobenius norm of the objective function. F1 is the basis matrix and G is the coding matrix. The community memberships of the nodes can be explicitly designated by G. The above objective function only uses topology information for community detection.

Modeling network attributes
As we have mentioned above, the topology information is often noisy, and the attribute information can help obtain more explainable results. We treat attribute matrix W∈Rm×n in a similar way, leading to the following nonlinear programming problem:

minF2≥0,G≥0∥W−F2G∥2F
(7)
Unified model: TANMF
By combining topology and attribute information (combining the above two formulas), we get the unified objective function for our TANMF model:

minF1≥0,F2≥0,G≥0O1(F1,F2,G)=∥A−F1G∥2F+∥W−F2G∥2F
(8)
Multiplicative updating rules for TANMF
There are several types of algorithms designed for nonnegative matrix factorization [36], including multiplicative update rules [9, 10], project gradient algorithm [37], Newton algorithm [38], and quasi-Newton algorithm [39]. In our draft, we select multiplicative update rules because of its simplicity and effectiveness. The algorithm is gradient-descent-based. Details can be found in [40]. The algorithm alternatively optimizes G, F1, and F2, respectively, while fixing the other two.

Taking the derivative with respect to G gives:

∂O1∂G=2(FT1F1G+FT2F2G)−2(FT1A+FT2W)
(9)
Based on the gradient-descent algorithm, one has the following update rule:

Gij:=Gij−ηij∂O1∂Gij,
(10)
or

Gij:=Gij+ηij[(FT1A+FT2W)ij−(FT1F1G+FT2F2G)ij],
(11)
where ηij is some step size and i=1,2,…,c,j=1,2,…,n.

Letting:

ηij=Gij(FT1F1G+FT2F2G)ij
(12)
gives the multiplicative update rule of G:

Gij:=Gij(FT1A+FT2W)ij(FT1F1G+FT2F2G)ij
(13)
Similarly, the multiplicative update rules of F1 and F2 are:

F1ij:=F1ij(AGT)ij(F1GGT)ij
(14)
F2ij:=F2ij(WGT)ij(F2GGT)ij
(15)
Algorithm 1 summarizes the detailed updating procedure.

figure e
Based on Algorithm 1, we can get the optimal community membership matrix G, determining the community label q for each node j, i.e., q=argmax1≤i≤cGij.

Illustrative example
We use a toy example in Fig. 1 to illustrate how the proposed method works. There are ten nodes in the network, each has four color attributes. We solve the unified TANMF model to obtain the coding matrix G, from which the two communities can be explicitly recovered.

Fig. 1
figure 1
Illustrative example to demonstrate how the proposed model works

Full size image
Proof of convergence
We then use auxiliary function to prove the convergence of the multiplicative update rules.

Theorem 1
The value of the objective function in (8) is non-increasing under the multiplicative update rules (13), (14), and (15).

The proof of Theorem 1 is based on auxiliary function.

Definition 1
[10]: Q(G,G′) is an auxiliary function for O1(G) if the conditions

Q(G,G′)≥O1(G),Q(G,G)=O1(G)
(16)
are satisfied.

Auxiliary function is useful in the proof of convergence due to the following property.

Lemma 1
[10]: If Q(G,G′) is an auxiliary function, then O1(G) is non-increasing under the update:

Gt+1=argminGQ(G,Gt)
(17)
where t is the iteration index.

Proof 1
O1(Gt)=Q(Gt,Gt)≥Q(Gt+1,Gt)≥O1(Gt+1).
□

The key to prove the convergence of Eqs. (13), (14), and (15) is to introduce appropriate auxiliary function for O1(F1,F2,G) using the following lemma.

Lemma 2
[41]: For any matrices T∈Rn×n, B∈Rk×k, S∈Rn×k, S′∈Rn×k, if A and B are symmetric, the following inequality holds:

∑i=1n∑j=1k(TS′B)ijS2ijS′ij≥tr(STTSB)
(18)
Proof 2
Let Sij=S′ijuij. We rewrite this inequality as follows:

Δ=∑i=1n∑j=1k(TS′B)ijS2ijS′ij−tr(STTSB)=∑i,p=1n∑q,j=1kTipS′pqBqjS′ij(u2ij−uijupq)
Because T, B is symmetric, we can get:

Δ=∑i,p=1n∑q,j=1kTipS′pqBqjS′ij(u2ij+u2pq2−uijupq)=12∑i,p=1n∑q,j=1kTipS′pqBqjS′ij(uij−upq)2≥0
□

According to the above two lemmas, we give an auxiliary function for G.

Lemma 3
The following function is an auxiliary function for O1(G) when fixing F1 and F2 and neglecting constants which are independent of G:

Q(G,G′)=−2tr(ATF1G+WTF2G)+∑i=1c∑j=1n(FT1F1G′)ij⋅G2ijG′ij+∑i=1c∑p=1n(FT2F2G′)ij⋅G2ijG′ij
(19)
Proof 3
First, it is obvious that when G=G′, the equation Q(G,G)=O1(G) holds. Second, since FT1F is a symmetric matrix, we can obtain the following inequalities according to lemma 2:

∑i=1c∑j=1n(FT1F1G′)ij⋅G2ijG′ij≥tr(F1GGTFT1)∑i=1c∑j=1n(FT2F2G′)ij⋅G2ijG′ij≥tr(F2GGTFT2)
which indicate that the last two terms of Q(G,G′) are always bigger than the first term of O1(G). Thus, the conditions of Eq. (16) are satisfied. □

The auxiliary function Q(G,G′) is convex since

∂2Q(G,G′)∂G2ip=2(FT1F1G′+FT2F2G′)ip≥0,i=1,2,…,c,p=1,2,…,n,
(20)
which implys that its minimum value can be obtained through:

∂Q(G,G′)∂Gij=0
(21)
and the optimal solution is

Gij=G′ij(FT1A+FT2W)ij(FT1F1G′+FT2F2G′)ij.
(22)
From Lemma 1, one can see that the value of the objective function in (8) is non-increasing under the update rule (13).

The following two lemmas introduce auxiliary functions for F1 and F2, respectively.

Lemma 4
The following function is an auxiliary function for O1(F1) when fixing F2 and G and neglecting constants which are independent of F1:

Q(F1,F1′)=−2tr(ATF1G)+∑i=1n∑p=1k(F1′GGT)ip⋅F12ipF1′ip
(23)
Proof 4
Since GGT is a symmetric matrix, one has:

tr(F1GGTFT1)≤∑i=1n∑p=1k(FTFG1′)ip⋅G12ipG1′ip.
Hence,

Q(F1,F1′)≥O1(F1),Q(F1,F1)=O1(F1).
□

Lemma 5
The following function is an auxiliary function for O1(F2) when fixing F1 and G and neglecting constants which are independent of F2:

Q(F2,F2′)=−2tr(WTF2G)+∑i=1m∑p=1k(F2′GGT)ip⋅F22ipF2′ip.
(24)
Proof 5
Same as above. □

Using the above three auxiliary functions, one can easily prove that the value of objective function in (8) is non-increasing under the updating rules (13), (14), (15).

Topology and attribute symmetrical NMF (TASNMF)
Note that the adjacency matrix A is symmetric, but this may not be true for F1G. To overcome this issue, the TANMF model is improved to the following TASNMF model:

minF1≥0,F2≥0,G≥0O2(F1,F2,G)=∥A−GTF1G∥2F+∥W−F2G∥2F.
(25)
Similar to TANMF, we also design multiplicative update rules for TASNMF. Taking the derivative with respect to G gives:

∂O2∂G=2(F1GGTFT1G+FT1GGTF1G−F1GAT−FT1GA)+2(FT2F2G−FT2W).
(26)
Based on the gradient-descent algorithm, we set

ηij=Gij(F1GGTFT1G+FT1GGTF1G+FT2F2G)ij.
(27)
The multiplicative update rule of G is:

Gij:=Gij(F1GAT+FT1GA+FT2W)ij(F1GGTFT1G+FT1GGTF1G+FT2F2G)ij.
(28)
Similarly, the multiplicative update rules of F1 and F2 are:

F1ij:=F1ij(GAGT)ij(GGTF1GGT)ij;
(29)
F2ij:=F2ij(WGT)ij(F2GGT)ij.
(30)
Algorithm 2 summarizes the detailed update process.

figure f
Experimental results
In this section, we firstly conduct experiments to evaluate the robustness of our proposed methods TANMF and TASNMF; then, we compare the two methods with four different baseline ones on both synthetic and real-world networks.

Description of synthetic and real-world networks
Girvan-Newman benchmark
Wang [26] The standard Girvan–Newman (GN) benchmark network [5] consists of 128 nodes, which are divided into four disjoint communities. On average, there are kin edges between nodes in the same communities, and kout edges between nodes in different communities.

The attributes of the nodes are generated as follows: For each node in the i-th community, a 4h-dimensional binary vector is generated as the attribute vector, in which the ((i−1)h+1)-th to (ih)-th elements are drawn from a binomial distribution with the probability ρin and the rest are drawn from ρout. We set h=50 in this benchmark network.

Lancichinetti–Fortunato–Radicchi benchmark
Chang [42] The standard Lancichinetti–Fortunato–Radicchi (LFR) benchmark network model [43] is also commonly used in evaluating community detection algorithms because of its good approximation to real networks. The parameters we used to generate networks are borrowed from [44] and are detailed in Table 1. Specifically, the complexity of network structure will increase with the increase in mixing parameter μ.

We use the same method described above to generate node attributes in LFR benchmark. We suppose that each node in the i-th community has h strongly correlated binary attributes and (c−1)h weakly correlated binary attributes with its community (c is the number of communities in the network). Hence, each node has ch attributes. We set h=60 in this benchmark network.

Table 1 The specific setting values of parameters in LFR-benchmark network
Full size table
Real networks
In this paper, five real-world datasets including Cora network and WebKB networkFootnote1are used. Details are as follows.

(1)
Cora network: There are 2708 nodes in the dataset; each is a scientific publication belonging to one of seven classes, including case-based reasoning, genetic algorithms, neural networks, probabilistic methods, reinforcement learning, rule learning, and theory. Besides, each publication has 1433 attributes, meaning the existence or absence of words.

(2)
WebKB network: The dataset is a collection of citation networks of four universities (Cornell, Texas, Washington, and Wisconsin). Every university’s network is divided into five classes, including Course, Student, Faculty, Project and Staff. Each publication has 1703 attributes which are represented by binary vectors, meaning the existence or absence of words.

(3)
Delicious network:Footnote2 This dataset is obtained from the Delicious social bookmarking system. It has 1867 users, interconnected in a social network generated by Delicious mutual fan relationships. There are 53,388 tags in this network as attributes of each node.

Table 2 gives the detailed information of the real networks.

Table 2 Basic information of six real networks
Full size table
Baseline methods and evaluation metrics
In this paper, we use Louvain [45], SNMF [35], SCI [26], and CDE [29] as the baseline methods for comparison. Louvain and SNMF only use topology information for community detection. SCI and CDE combine topology and attribute information for community detection.

We use two metrics including NMI and kappa to evaluate the performance of the methods.

(1)
Normalized mutual information (NMI) [46]: NMI is often used to measure the similarity of two clustering results. For two different community labels A and B, NMI is defined as follows:

NMI(A,B)=−2∑ki=1∑kj=1CijlogCijNCi.C.j∑ki=1Ci.log(Ci.N)+∑ki=1C.jlog(C.jN)
(31)
where N is the number of nodes, k is the number of communities, Cij is the number of nodes in community i assigned to community j and Ci. is the sum of the i-th row of matrix C, log is the natural logarithm. Note that the value of NMI is between [0, 1].

(2)
Kappa [47]: Kappa considers the influence of random effects and the calculation formula of kappa is as follows:

kappa=accuracy−expectedaccuracy1−expectedaccuracy
(32)
where accuracy=TP+TNTP+TN+FP+FN, which is defined by the confusion matrix showed in Table 3.

Table 3 Confusion matrix of binary classification
Full size table
Based on these two metrics, we conduct the following experiments. The detailed results are as follows.

Parameter sensitivity analysis of SCI and CDE
There are several parameters in SCI and CDE. We conduct sensitivity analysis of model parameters α,β in SCI and κ,α,β in CDE, as shown in Figs. 2, 3, and 4, showing that the results of SCI and CDE are sensitive to their parameters. In our experiments, we set α=1, β=1 in SCI and α=1, β=1 in CDE. κ is selected to achieve the best NMI.

Fig. 2
figure 2
Community structures detection results of CDE. The results are sensitive to κ

Full size image
Fig. 3
figure 3
Community structures detection results of CDE. The results are sensitive to α and β

Full size image
Fig. 4
figure 4
Community structures detection results of SCI. The results are sensitive to α and β

Full size image
Community detection results
In this section, we test the robustness of TANMF and TASNMF on synthetic benchmark networks and real networks, respectively, and compare the practicability with other algorithms. All our results take the averages of 50 tests.

Synthetic networks
Firstly, we evaluate the performance of TANMF and TASNMF under different attribute strengths. From Figs. 5 to 6, one can see that: (1) the results of both methods decrease with increasing ρout and decreasing ρin. (2) The methods score the lowest when there is no attribute information. (3) The attribute information is indeed a good complement to topology information.

Fig. 5
figure 5
The performance of TANMF and TASNMF on GN-benchmark. a–d show the community detection results under different ρin, while e–h show the results under different ρout. More specifically, the first two of every four graphs ((a–d) and (e–h)) are the results of TANMF and the last two are the results of TASNMF. Noting that “Noattribute” indicates the results of community detection without using attribute information. Both of our proposed methods TANMF and TASNMF perform well, with no significant decrease in detection results as kout rises

Full size image
Fig. 6
figure 6
The performance of TANMF and TASNMF on LFR-benchmark. a–d show the community detection results under different ρin, while e–h show the results under different ρout. More specifically, the first two of every four graphs ((a–d) and (e–h)) are the results of TANMF and the last two are the results of TASNMF. Both of our proposed methods TANMF and TASNMF perform well on LFR benchmarks, which is more practical than GN networks. The attribute information is indeed a good complement to topology information

Full size image
Secondly, we compare the performance of the proposed methods with baseline ones on synthetic networks with different attribute strengths. The results are shown in Figs. 7 and 8. One can conclude that: (1) In most cases, the results of SNMF are the worst, especially on LFR benchmarks, which are more complex and practical. It means the attribute information is helpful indeed. (2) The results of TANMF and TASNMF are among the best, and they are parameter-free.

Fig. 7
figure 7
Performance of different methods under different ρin and ρout settings on GN-benchmark networks (kout=8). The performance of our proposed methods TANMF and TASNMF is good

Full size image
Fig. 8
figure 8
Performance of different methods under different ρin and ρout settings on LFR-benchmark networks (μ=0.8). Our proposed methods TANMF and TASNMF are among the best

Full size image
Fig. 9
figure 9
Comparison of calculation time of different methods on GN-benchmark networks. The y-axis is the calculation time (in seconds). Our proposed methods TANMF and TASNMF take less time than SCI and CDE

Full size image
In order to further verify the effectiveness of the proposed methods, we compare the computing time with the baseline ones. As one can see from Figs. 9 and 10: (1) SNMF is the most effective model. However, it only uses network topology information for community detection. (2) The time required for TANMF and TASNMF is the second only to SNMF. They only require less than half the time of SCI.

Fig. 10
figure 10
Comparison of calculation time of different methods on LFR-benchmark networks. The y-axis is the calculation time (in seconds). Our proposed methods TANMF and TASNMF are fast on large complex networks

Full size image
Real networks
Consequently, we evaluate the proposed methods on five real networks. The results are presented in Table 4, and the best results are shown in bold. From the table, one can observe that: (1) TANMF and TASNMF outperform the baseline ones in most cases, which further proves their effectiveness. (2) In addition, the results of SNMF and Louvain are not satisfactory, meaning that the topology information alone is not sufficient.

Table 4 Performance comparison of disjoint communities (bold numbers represent the best results)
Full size table
In addition, we have proved that the multiplicative update rules are convergent. Here, we evaluate the convergent speed of these rules using the WebKb data sets. From Fig. 11, one can observe that the convergent speed of our proposed methods is similar to that of NMF, and the local optima can be achieved within 100 iterations in most cases.

Fig. 11
figure 11
Convergence analysis of TANMF and TASNMF on different networks: (a) wisconsin, (b) washington, (c) texas, (d) cornell. The convergent speed of our proposed methods is fast, and the local optima can be achieved within 100 iterations in most cases

Full size image
We also compared the calculation time (100 iterations) of the proposed methods with the baseline ones, which are shown in Fig. 12. One can observe that: (1) Since SNMF only uses topology information, the calculation time is the least among the five. (2) Due to parameter-tuning and the complexity of updating rules, SCI and CDE require more time. (3) Our proposed methods TANMF and TASNMF are parameter-free, and the time required is very short.

Fig. 12
figure 12
Comparison of calculation time of different methods in WebKb datasets. The y-axis is the calculation time (in seconds). Our proposed methods TANMF and TASNMF are very efficient

Full size image
A case study
Specifically, we use the Delicious social bookmarking system network as a case study. It has 1867 users, interconnected in a social network generated by Delicious mutual fan relationships. There are 53,388 tags in this network as attributes. We use the Louvain method to set the number of communities to 103.

We select four communities as examples to analyze the attribute information, as shown in Fig. 13. Figure 13a is a group of Internet managers, and the main work is to “stimulate staff proactivity, profiling the market,” etc., and the words “dns” and “www” show the great relevance of users to the Internet. Figure 13b is a group of designers, such as web designers. Designers usually need the most “inspiration” to work on their projects. The term “technology for kids” indicates that some designers are specifically designed for children. Besides, “custom” also happens to be a characteristic of design. Figure 13c is most likely a group of students or teachers since the biggest word is “education.” “math, music, art” are the courses that students need to learn, and “ipad” is the learning tool. The love of playing “games” can also be said to be a characteristic of students. Figure 13d consists of airline staffs. Obviously, “aviation, aircraft” is the most direct indication of the characteristics of the user. The “recipe” of the meal on the plane, the “design” of the plane and “enhancements” to the functions of the aircraft, and the “technology learning” to enhance the piloting of the plane, all reflect the characteristics of these users from the side.

Fig. 13
figure 13
Word clouds of different communities. Each word cloud shows the top10 attributes in the community, and the sizes of the words are proportional to their community attribute values. a Internet managers b Designers c Students or teachers d Airline staffs

Full size image
Conclusion
In this paper, we proposed two joint nonnegative matrix factorization methods to detect community structures in attribute networks. The methods combine topology information and attribute information, making the results more reasonable and explainable. The methods are parameter-free and easy to use. The experiments conducted on both synthetic and real-world networks show the effectiveness of the proposed methods. There are several interesting problems for future work, including generalization of TASNMF to overlapping community detection, multi-view community detection in attribute networks. Particularly, multi-view clustering has recently received a lot of attention, since many real datasets are composed of different views. For example, the same event can be reported in multiple languages, or in both text and pictures. These views are compatible and complementary, and how to integrate them is the key of multi-view clustering. Our proposed methods can be naturally applied to multi-view clustering.