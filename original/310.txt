The network topology formation in an Edge Infrastructure-as-a-Service (EIaaS) paradigm must consider the placement of Edge Computational Nodes (ECNs) so as to minimize the delay. Existing ECN placement schemes consider redundant node density, non-optimal location selection, and distance-based association, which affect the ultra-low latency requirement(s) of applications. Further, per ECN to IoT nodes association is key to efficient utilization of ECNs and delay minimization between IoT node(s) and ECN. This work proposes a Cost-aware Edge Computational Node Placement (coECNP) scheme for optimal topology formation in EIaaS paradigm with the objective of IoT nodes delay minimization. It formulates ECN placement problem as a constrained optimization problem. Each iteration in the location discovery module of coECNP identifies optimal placement location by utilizing IoT node’s density on an updated set of IoT nodes and hop-distance among previous iterations’ ECN locations and current candidate locations. As a result, it maximizes the number of IoT nodes that access ECN with minimum hop-distance, leading to end-to-end delay minimization. The assignment module of coECNP takes care of previously assigned nodes in each iteration before associating new IoT nodes to the nearest ECN to attain balanced mapping. Thus, it alleviates total delay from IoT node to respective ECN and enhances edge resource utilization to cater the application(s) near real-time execution requirement(s). The performance comparison indicates that coECNP achieves promising results by reducing IoT nodes delay by 23%–64%, 20%–66%, and 35%–73% on periodic, event-based, and query-based data traffic scenarios, respectively, under various network settings, compared to the benchmark solutions.

Keywords
IoT
Edge computing
EIaaS paradigm
Topology formation
Edge resource utilization

1. Introduction
The seamless integration of edge computing into various domains such as IoT, industrial IoT (IIoT), Cyber–Physical System (CPS), etc., results in enhanced system performance and reduced operational cost (Zhang et al., 2021, Qiu et al., 2020, Xu et al., 2018, Yu et al., 2017). Edge computing paradigm enables the computation at the network edge and store, process, analyze most of the data generated by IoT nodes close to, or at the edge (Shi et al., 2016).

Edge computing solutions mitigate the network latency, bandwidth, data storage, security, and other compliance issues associated with cloud infrastructure (Yu et al., 2017, Shi et al., 2016, Cao et al., 2020, Li et al., 2018b, Khan et al., 2019). The edge varies according to the required goals. Broadly, edge is categorized into three categories named as thick edge, thin edge, and micro edge (Mitch Tseng Todd Edmunds, 2018, Wopata, 2020). The thick edge consists of powerful computing and large storage space (such as data centers, cell tower data centers etc.) responsible for bulk processing (such as factory level data storage and analysis). The thin edge provides the moderate level computation and storage facilities (such as single-board computer (e.g. Raspberry Pi), industrial PC equipped with Intel i-series processor etc.). Micro edge consist of sensors which are responsible for data generation and/or actuation.

With local computation and faster decision-making the edge complements the power of the cloud to build a cost-effective, powerful IoT solution termed as Edge Infrastructure-as-a-Service (EIaaS). An EIaaS setup is a network of computational nodes named as Edge computational Nodes (ECNs) capable of hosting and executing application components. These application components take inputs from various data sources and process them to cater the needs of the system.

The EIaaS paradigm has applicability into a wide range of applications such as intelligent factories, smart plants, prognostic and health management, smart homes, etc. (Qiu et al., 2020, Xu et al., 2018, Yu et al., 2017). It enables the application providers to deploy services efficiently and instantly. Most of these applications are latency-sensitive such as monitoring (latency  1 s), supervisory control (latency  100 ms), safety alarming (latency  1 s) etc. (Candell et al., 2018, Mitch Tseng Todd Edmunds, 2018). For instance, shop floor applications in a smart factory are latency-sensitive, which require their treatment at various components along the chain.

The successful completion of these applications requirement(s) depends on various components such as, topological arrangement of IoT nodes, computational hardware, number of ECNs and their placement, association of IoT nodes to relevant ECN (EIaaS topology), etc. Sometimes it includes a higher degree of interconnection, cognitive automation, shifting information collection, and processing into cloud-based applications (Wollschlaeger et al., 2017, Mitch Tseng Todd Edmunds, 2018). Specifically, when the application(s) interacts with the environment, both end-to-end delay from IoT node to ECN and processing delay at ECN play a paramount role, and it depends heavily on the aforementioned components. Thus, data transmission and decision making process should be optimized as timely as possible to enhance system performance (Xu et al., 2018).

This work does a systematic review of the related research in a pursuit to investigate the role of ECN placement and IoT nodes mapping among ECNs for topology formation in EIaaS paradigm. Most studies (Ren et al., 2019, Lin et al., 2019, Fan and Ansari, 2018, Yousefpour et al., 2018, Chen et al., 2018) in this direction take a reactive approach and focus on offloading schemes under the assumption of already deployed Edge Servers/Edge Nodes (ESs/ENs) in the network. The question of how to place ESs in a given resource-constrained IoT network to optimize network performance, is less targeted. The ES placement strategies for Mobile Edge Computing (MEC) and Wireless Metropolitan Area Network (WMAN) environment broadly focus on two aspects: communication metric and workload balancing. Along with placement, the number of ESs also impacts the deployment cost and QoS requirements. The number of ESs in the deployment is a trade-off between operator/manufacturer budget constraints and required application performance. The trade-off is optimized using budget or QoS requirement based approaches (Lähderanta et al., 2021). The budget based approach places a fixed number of ESs (determined by operators budget constrains) such that delay between node-ES pair is minimized, whereas, QoS based approach determines the minimum number of ESs which satisfies the given QoS parameter (such as maximum tolerable access delay for a node is h-hop). The proposed work assumes a fixed number of ECNs followed by majority of the surveyed studies discussed in Lähderanta et al. (2021).

Authors discussed various approaches to minimize the access delay between end devices and ESs/cloudlets (Gravalos et al., 2016, Li and Wang, 2018, Li et al., 2018a, Meng et al., 2017, Zeng et al., 2019, Yang et al., 2019, Wang et al., 2020, Chin et al., 2020, Fan and Ansari, 2019). The above mentioned schemes do not address the balanced workload assignment among ESs that impact edge resource utilization. However, balanced workload assignment among ESs with access delay minimization is addressed by few studies (Lähderanta et al., 2021, Liang and Li, 2017, Wang et al., 2019, Guo et al., 2020, Jia et al., 2017). Liang and Li (2017) discussed a device remapping based load balancing scheme that results in higher energy consumption of end devices and increased delay. Whereas, historic workload information is required in Lähderanta et al. (2021) and Wang et al. (2019). Moreover, these schemes (Lähderanta et al., 2021, Liang and Li, 2017, Wang et al., 2019) are restricted to use in direct (one-hop) communication scenario and utilize Euclidean distance to assign end nodes to respective ESs. In contrast, in resource-constrained IoT networks, multi-hop communication is preferred and hop distance is used as a decision parameter in end nodes assignment to minimize delay and energy consumption (Kumar and Patel, 2011). Density based placement schemes (Jia et al., 2017, Veeramani and Mahammad, 2020, Peng et al., 2021) suffer from issues such as redundancy, non-optimal location selection, and unbalanced node–ECN mapping.

Further, most of these schemes modeled end-to-end delay as total delay and processing delay at ES is ignored. Moreover, MEC solutions focus on performance issues associated with consumer of data, while in above discussed network set-up, performance issues associated with data transmission and end device association with appropriate ES need to be addressed (Wopata, 2020). Further, under the assumption that each IoT node location as candidate location for ECN placement and each ECN as candidate for mapping the IoT nodes, the number of possible placement and mapping strategies are combinatorial. Therefore, EIaaS topology formation by selecting an optimal placement and mapping strategy among a large set of choices, which minimize the delay and maximize the efficient utilization of edge resources, is challenging. It initiates the requirement of a heuristic solution to cope with efficient placement and mapping problem in reasonable time.


Fig. 1. coECNP mechanism’s levels of abstraction.

This paper takes up the ECN placement and IoT nodes to ECN mapping problem for topology formation in EIaaS paradigm and formulates as a constrained optimization problem. We propose a Cost-aware Edge Computational Node Placement (coECNP) scheme for topology formation in EIaaS paradigm for delay minimization in order to satisfy near real-time demands of application(s). Fig. 1 depicts the modular functional architecture of coECNP scheme. The bottom most layer represents the physical view of an industrial plant equipped with IoT nodes (such as sensors). The remaining layers represent the logical abstraction of modules of coENCP scheme.

Key contributions of this work are as follows:


Table 1. Summary of ES and cloudlet placement schemes.

References	Mechanism	Delay	Balanced assignment	Limitations
[19], [20], [22], [23], [24], [25] and [27]	ILP, PSO, Online algorithm, Dominating set and simulated annealing, Benders decomposition, Binary based differential evolution cuckoo search, heuristic approach	Yes	No	Balanced workload/node assignment is not addressed that affects response time and edge resource utilization.
[21], [28] and [30]	means	Yes, Yes, Yes	No, No, Yes	Euclidean distance is preferred over hop distance in IoT nodes mapping.
[18] and [29]	PACK, MIP	Yes, Yes	Yes, Yes	Restricted to use for direct (one-hop)
communicationscenario.
Prior historic workload information is required.
[31]	HAF	Yes	No	HAF scheme did not address redundancy issue.
DBC	Yes	Yes	DBC scheme randomly selects optimal location among candidate ones.
[26]	 clustering	Yes	No	Random selection of initial  cluster centers among candidate ones leads to higher delay and reduced edge resource utilization, redundancy factor is not considered in selection of initial cluster centers.
[35]	Discrete differential evolution algorithm	No	Yes	The response time is modeled as function of computing delay and impact of communication delay on response time is ignored.
[36]	Binary gray wolf genetic scheme	No	Yes	The scheme ignores the delay aspects.
[33]	Density based multi-sink placement	Yes	No	Randomly selects sink placement location among candidate ones and limited to direct communication scenario.
[34]	Density based clustering	Yes	No	Restricted to use in direct communication scenario.
•
We propose a Cost-aware Edge Computational Node Placement (coECNP) scheme for topology formation in EIaaS paradigm for latency-sensitive applications. coECNP scheme is structured around three modules: location identification for ECN placement, mapping of IoT nodes among ECNs, and EIaaS topology configuration.

•
To identify optimal locations for ECNs placement, we propose a location discovery mechanism that considers hop-distance and eliminates redundant nodes for density computation in the process of optimal location identification. A mapping scheme is proposed named as Minimum Set Assignment First that minimizes the difference of mapped nodes among ECNs. Further, we extend the mapping scheme to handle the critical cases in node–ECN mapping.

•
The simulation experiments show that coECNP scheme outperforms the benchmark solutions in terms of delay and energy consumption of IoT nodes under various network settings and data traffic scenarios, respectively. coECNP scheme reduces delay and energy consumption by 23%–64%, 20%–66%, 35%–73%, and 11%–58%, 13%–58%, 29%–55%, respectively, on periodic, event-based, and query-based data traffic scenarios under various network settings.

In the following we discuss related work in Section 2 followed by system model and problem formulation in Section 3. The coECNP scheme for ECN deployment and IoT nodes mapping is discussed in Section 4. Section 5 discusses the proposed scheme’s theoretical analysis with respect to benchmark schemes. Section 6 presents the experimental results. Section 7 discusses the theoretical analysis of coECNP with various network centrality measures followed by conclusion in Section 8.

2. Related work
This section discusses some notable recent work addressing ES placement schemes as Table 1 provides a summary. The problem at hand shares some similarities with ES placement strategies in MEC, WMAN, and cloudlet placement schemes in WMAN.

Gravalos et al. (2016) proposed a linear programming based gateway placement mechanism in IoT network to minimize gateway access cost from end devices while taking care of the essential QoS requirements. Li and Wang (2018) proposed a solution for energy-aware ES placement in MEC environment. Authors adopted particle swarm optimization (PSO) technique to determine the placement locations. Meng et al. (2017) discussed a cloudlet placement problem to minimize delay between users and cloudlets. Authors considered task transmission delay as total completion delay. Yang et al. (2019) discussed a cloudlet placement and task allocation problem in MEC using benders decomposition to minimize delay and energy consumption. Zeng et al. (2019) devised a cost-effective ES placement scheme using simulated annealing and dominating set to minimize the number of ESs while ensuring QoS requirement. Wang et al. (2020) proposed a binary-based differential evolution cuckoo search algorithm to minimize the latency and deployment cost for optimal cloudlets deployment in IoT. Fan and Ansari (2019) devised a cost aware cloudlet placement scheme in MEC to minimize cloudlet cost and average end to end delay using a heuristic solution. These schemes (Gravalos et al., 2016, Li and Wang, 2018, Meng et al., 2017, Zeng et al., 2019, Yang et al., 2019, Wang et al., 2020, Fan and Ansari, 2019) are designed to minimize access delay and ignore the balanced end nodes assignment that causes poor utilization of edge resources. Further, the schemes (Gravalos et al., 2016, Li and Wang, 2018, Meng et al., 2017, Zeng et al., 2019, Fan and Ansari, 2019) ignore data processing delay at ESs.

Liang and Li (2017) discussed a location-aware service deployment scheme to minimize cloud service access latency. Authors adopted -means clustering to form the device cluster and select Edge Cloud Server (ECS) nearest to cluster center for service instance deployment. Further, a load balancing mechanism is proposed that remapped the mobile devices of overloaded ECS to under-loaded ECS. It increases the number of hops in communication paths that results in higher delay and energy consumption. Li et al. (2018a) designed an ES placement scheme using -means algorithm to reduce the average completion time of the system. Guo et al. (2020) utilized means algorithm to place a fixed number of ESs with the objective of communication delay minimization and balance the workload. Wang et al. (2019) described an efficient ES placement strategy in MEC to minimize workload difference among ESs and access delay between end user devices and ESs using Mixed-Integer Programming (MIP). The scheme requires prior information about workload of the base station. Lähderanta et al. (2021) discussed an ES placement algorithm in edge computing infrastructure, named PACK, to minimize distance between server and their associated access points and takes care of load balancing. Although, in absence of historic workload information the objective function is reduced to end-to-end latency minimization only. These schemes (Lähderanta et al., 2021, Liang and Li, 2017, Wang et al., 2019) utilized Euclidean distance as a decision parameter in end node assignment and restricted to direct (one-hop) communication scenario that leads to higher energy consumption and delay in resource-constrained networks.

Jia et al. (2017) discussed a cloudlet placement scheme in WMAN to address access delay and optimal user to cloudlet assignment. Authors devised Heaviest Access Point First (HAF) and Density based Clustering (DBC) schemes. HAF selects the location of heavily loaded access points for the placement of cloudlets. DBC selects access points with dense user area to place cloudlets and achieves optimal user to cloudlet assignment using relative distance. DBC addresses redundancy factor to determine placement locations. However, it randomly selects optimal placement location among candidate ones that leads to non-optimal cloudlet placement that results in higher energy consumption and delay in resource poor networks.

Chin et al. (2020) proposed a -clustering algorithm for queuing model-based ES placement in mobile cloud network to minimize the network traffic. The  clustering scheme selects  nodes having the highest request as ESs for initial cluster formation. It utilizes shortest hop distance to assign the request of remaining nodes among ESs. Next, in each cluster a new node is selected as ES, and requests of remaining cluster nodes are assigned to the corresponding node. This process runs iteratively until the traffic load difference between previous and current iteration is less than a predefined threshold. This scheme selects the initial cluster center without considering redundancy factor that leads to higher access delay and reduces the edge resource(s) utilization. Moreover, the optimal initial  ES selection (if more than  nodes having same highest request) is not addressed. Random selection of initial ESs causes higher delay and reduces edge resource utilization. Wang et al. (2021a) discussed a fog node deployment scheme in a smart factory using discrete differential evolution algorithm to minimize the response time and achieve load balancing. The schemes assumes that communication delay between fog node and terminal device(s) is constant. However, in realistic wireless network scenario, communication delay is defined as function of distance/hop-count and has major impact on response time. The assumption of constant communication delay converts the response time minimization and load balancing cost function to only load balancing. Wang et al. (2021b) discussed a binary-based gray wolf genetic scheme for ES placement scheme in intelligent manufacturing to achieve cost reduction and load balancing. However, authors did not consider the communication and data processing delay that directly affects the system performance. The delay should be minimize in order to cater the near-real time system requirements. Kasi et al. (2021) perform the comparative analysis of local search algorithms (hill climbing and simulated annealing) with genetic algorithm for ES placement in IIoT and cellular network. The analysis indicates that genetic algorithm outperforms the considered local search algorithms.

Density based clustering schemes are also utilized in WSN to reduce latency and energy consumption (Veeramani and Mahammad, 2020, Peng et al., 2021). Veeramani and Mahammad (2020) proposed a heuristic solution that selects maximum degree nodes for multi-sink placement. Peng et al. (2021) discussed a density based network clustering and selects initial Cluster Heads (CHs) using node’s residual energy. Since, initially each node has same energy level that leads to random CH selection. It relocates CHs role among other nodes over course of time based on some parameters. On the other hand, ECN placement location needs to be determined optimally since a fixed number of ECNs (high cost and resource-rich devices compared to IoT nodes) are placed at these locations at once and do not support location migration flexibility like CHs. These schemes only considers the direct communication scenario and balanced assignment issue remains unaddressed.

The proposed work collectively addresses the ECN placement and balanced IoT–ECN mapping problem compared to the above-discussed schemes. The proposed coECNP scheme determines the optimal locations for ECN placement by taking care of the above-discussed shortcomings of existing works to minimizes the maximum hop distance between IoT–ECN pair. It takes care of redundancy issue and utilizes hop distance between candidate locations and previously placed ECNs to determine optimal location(s) for ECN placement that mitigates the close placement of ECNs and leads to reduced access cost between IoT–ECN pair (see Section 4.1). Next, it maps the IoT nodes among ECNs in a balanced fashion using a mapping mechanism (see Section 4.2) to accomplish balanced IoT–ECN mapping. Thus, coECNP minimizes IoT nodes delay and utilizes edge resources efficiently.

3. System model and problem formulation
The EIaaS is abstracted as an un-directed graph , where,  is the set of  IoT nodes defined as 
, and  is the set of links among them. The number of ECNs () are determined using Elbow method (Marutho et al., 2018, Lovén et al., 2020). The Elbow method is used to determine the appropriate number of clusters in clustering analysis. The cost function for the same is defined as, (1)
where,  is the element of cluster 
 and  is the number of clusters 
. The curve between cost function () and number of clusters () follows the shape of elbow and the  value corresponding to elbow point is selected as appropriate number of clusters.

Each IoT node (
) is enabled with sensing and limited processing, storage, communication functionalities (such as Arduino/TelosB board equipped with low storage and micro-controller). Each ECN (
) is a full functional EIaaS device equipped with more processing and storage capabilities (such as single board computer (example Raspberry Pi), industrial PCs etc.) than IoT nodes. Two arbitrary IoT nodes, 
 and 
 are said to be neighbor if 
. IoT nodes communicate with respective ECN either directly or using a multi-hop path over wireless channel. It is assumed that network gateway is aware of location and IDs of IoT nodes.

In EIaaS enabled IoT network, each IoT node produces a significant amount of data that requires to be processed at respective ECN in near real-time fashion to minimize the overall delay so as to meet the applications’ requirements. The total delay in this process is caused due to end-to-end (E2E) delay from IoT node to the respective ECN and the data processing delay at that ECN (Yu et al., 2017). The total delay (
) between th IoT node (
) and respective th ECN (
) is characterized by Eq. (2). (2)
where, 
 and 
 are the end-to-end delay from th IoT node to th ECN along path  and data processing delay at th ECN for th IoT node, respectively.

End-to-End delay between an IoT node and ECN consists of link delay (transmission and propagation delay) and forwarding delay at intermediate IoT nodes. Let path  between th IoT node (
) and th ECN (
) consist of a set of links and intermediate nodes (including 
 and 
) defined as  and . Assume 
 and 
 represents the link delay on a link  and data forwarding delay at an intermediate node . The 
 is given by Eq. (3). (3)

It is evident from Eq. (3) that link and forwarding delay follows a proportionality relationship to the path length(hop distance) from node to respective ECN. The hop distance from IoT node to ECN varies as per ECN placement strategies. Furthermore, the data processing delay of th IoT node (
) at th ECN (
) is given by Eq. (4). (4)
 
 
where, 
 and 
 represents the waiting time of 
 at 
 and data processing time of 
 at 
 after getting ECN resources. The waiting time varies as per mapping schemes and 
 depends on computation requirement to process the data. Moreover, IoT nodes mapping among ECNs also impacts E2E delay and edge resource utilization.

The above discussion formulates the foundation to consider ECN placement and IoT nodes mapping among ECNs for topology formation in EIaaS paradigm to serve latency-sensitive applications. The list of important symbols used in this work is summarized in Table 2.


Table 2. Notations.

Symbol	Descriptions
Cluster center
Element of 
Elbow method cost function
Set of IoT nodes 
Set of unassigned IoT nodes
Set of link among IoT nodes
Set of edge computational nodes 
Set of neighbors of th IoT node
Set of IoT nodes mapped to th ECN (
)
Set of IoT nodes having 
th element of set 
Set of 
Set of next-hop neighbors of IoT nodes
Set of common next-hop IoT nodes
Set of unique next-hop IoT nodes
Maximum transmission range of IoT nodes
Euclidean distance between IoT nodes 
 and 
Hop distance between 
 and 
Density of th IoT node
Cardinality of set 
Value of maximum density
Hop distance of candidate IoT node, having 
 located at maximum hop distance from locations of previous ECNs
Index of node having maximum density
Location of th IoT node
Total delay between th IoT node and th ECN
End-to-End delay from th IoT node to th ECN along path 
Data processing delay at th ECN for th IoT node
Link delay along path  from th IoT node to th ECN
Data forwarding delay at intermediate nodes along path  from th IoT node to th ECN
Data processing delay for th IoT node at th ECN after getting resources
Binary variables for mapping and placement
ECN location discovery module
IoT nodes mapping module
EIaaS topology configuration module
Minimum set assignment first mapping scheme
Extended 
 scheme
Standard deviation
3.1. Problem formulation
The ECN placement and IoT nodes mapping among ECNs play a pivotal role in total delay minimization of IoT nodes. This work formulates the IoT nodes delay minimization problem as follows. Given the set of  IoT nodes and  ECNs, determine the  optimal locations 
 to place ECNs and map IoT nodes among ECNs such that total delay of IoT nodes is minimized, i.e. (5)

Subject to constraints (6)
 (7)
 (8)
 (9)

Eq. (5) represents the cost function with the objective of delay minimization. Constraint (6), (7) assure that each IoT node is served and by exactly one ECN. Constraint (8) represents that each ECN is deployed at only one location, while constraint (9) assures the placement of  ECNs in the network. 
 and 
 are binary variables given by Eqs. (10), (11). (10)
  (11)
 

4. The coENCP mechanism
This section discusses the proposed mechanism executed at the network gateway. coECNP scheme is composed of: (i) ECN Location Discovery (
), (ii) IoT nodes Mapping (
), and (iii) EIaaS topology configuration (
) modules, as depicted in Fig. 2. 
 and 
 modules determine optimal locations for ECNs placement and optimal mapping of IoT nodes among ECNs such that IoT nodes total delay is minimized. Finally, 
 module configures the EIaaS topology by establishing a connection between IoT nodes and respective ECN.

4.1. ECN location discovery

 module is responsible for discovering optimal locations to place the ECNs in the network. Algorithm 1 describes ECN location discovery procedure. The module accommodates a location discovery function  that associates each element of set  to a unique element of set that consists of IoT nodes locations, defined as, . For instance, if location discovery function selects location of th IoT node to place th ECN then 
.

These locations are determined based on density of IoT nodes, where, density is defined as number of neighbors of IoT node (line 7–9) given as: (12)
where, 
 if 
, and 
, otherwise.

In first iteration, 
 module assigns the IoT nodes to set 
 and calculates the density of each IoT node. 
 determines the highest density IoT node in 
 (line 12–20). It selects location of highest density node to place first ECN. Next, 
 assigns highest density IoT node and its one-hop neighbors to a corresponding set 
 at first ECN (line 21–34).

For example, in Fig. 2 suppose the total number of ECNs to be placed are two (). 
 selects 
 as highest density node and 
 to place first ECN (
). It also assigns 
 and its one-hop neighbors to corresponding set 
. Thus, at the end of first iteration, 
 returns the optimal location to place first ECN (
) and set 
 that consists of highest density IoT node and its one-hop neighbors.

In next iteration, 
 calculates the new highest density IoT node to identify the placement location of next ECN. There can be a situation where IoT nodes mapped to ECN(s) in the previous iteration(s) can again participate in density determination during the location discovery process for next ECN. This, in turn, leads to redundant density calculation for IoT nodes.

For instance, in Fig. 2, 
 and 
 become the maximum density IoT nodes with density value 5. The neighbor set of 
 consists of three redundant neighbors 
, 
, and 
, which are already assigned to 
. Similarly, the neighbor set of 
 contains 
 as redundant neighbor. To avoid such redundancy in density calculation, 
 determines the new highest density IoT node(s) on an updated set of IoT nodes. It obtains the set of updated IoT nodes by removing the nodes which are already assigned to ECN(s) from total IoT nodes (line 36).

 obtains 
 and selects 
, 
, and 
 as candidate locations to place second ECN (
). 
 selects the location of IoT node situated at maximum hop distance from the location of previous ECN(s) among candidate locations to place next ECN (line 26–31). 
 module selects 
 to place 
 (see Fig. 2). One-hop IoT nodes assignment to corresponding set and calculation of updated set of IoT nodes follows the same procedure as first iteration. This module returns the optimal ECN placement locations and set of one-hop IoT nodes assigned to respective ECNs.

 module returns 
, 
 as ECN placement locations, and 
, 
 as set of one-hop IoT nodes, respectively, for the scenario depicted in Fig. 2.

4.2. IoT nodes mapping
Execution of 
 module is initiated after termination of 
. 
 module consists of a mapping function defined as, 
. Where, 
 is the set of IoT nodes returned by 
 module after th iteration termed as set of remaining IoT nodes (
 in Fig. 2). Mapping function associates each IoT node (
) to a unique ECN (
) to accomplish efficient EIaaS design.

Fig. 3. IoT nodes mapping under different schemes.

Minimum Set Assignment First (
 mechanism is proposed to achieve balanced mapping of IoT nodes among ECNs. It maps next-hop IoT nodes among ECNs by taking care of previously assigned IoT nodes at each ECN. It compares sets of IoT nodes mapped to ECNs 
 and selects the ECN with minimum IoT nodes as the candidate one for next-hop IoT nodes mapping. 
 scheme updates the set of remaining IoT nodes by removing currently assigned next-hop IoT nodes to candidate ECN from current 
. 
 assigns next-hop IoT nodes to candidate ECN in each iteration and terminates when updated set of remaining IoT nodes becomes empty (
).

For example, Fig. 3 depicts a sample scenario of 
 based mapping for two ECNs. 
 mechanism selects second ECN (at 
 in Fig. 3) as candidate ECN. It maps IoT nodes 
 to second ECN and updates the set of IoT nodes at respective ECN as 
. 
 obtains the updated set of remaining IoT nodes as 
, after removal of currently mapped IoT nodes 
 at second ECN. Thus, at the end of first iteration, seven and nine IoT nodes are mapped to first and second ECN, respectively.

 selects first ECN (at 
 in Fig. 3) as candidate ECN in next iteration and assigns IoT nodes 
 to it. After assigning these nodes to respective ECN, 
 obtains 
. In next iteration, second ECN (having 9 nodes) is selected as candidate ECN to assign IoT nodes 
. After this assignment, set of remaining IoT nodes becomes empty (
) that leads to the termination of 
. Thus at the end, IoT nodes mapped to first and second ECN given as, 
, 
.

Fig. 3 depicts the comparison of proposed 
 scheme with Shortest Distance Edge Server (
) assignment scheme. 
 assigns next-hop IoT nodes to the nearest ECN without taking care of previously assigned nodes. It returns 
 and 
 after termination. 
 and 
 maps (10, 12) and (9, 13) nodes to first and second ECN, respectively. It indicates that the proposed 
 scheme minimizes the difference of assigned IoT nodes among ECNs as compared to 
 scheme that leads to balanced mapping of IoT nodes.

CRITICAL CASE : Although 
 mechanism performs better than 
 scheme, in some cases, it may lead to unbalanced mapping of IoT nodes among ECNs. For instance, th and th ECN consists of 
 and 
 nodes, where 
  
. Next, 
 selects th ECN as candidate ECN to assign next-hop IoT nodes. There can be some nodes in the set of next-hop nodes of th ECN that also belongs to next-hop node set of th ECN. 
 assigns all nodes to th ECN that reduces the number of nodes for th ECN, causes unbalanced assignment. For instance, IoT nodes 
 belong to next-hop nodes for both ECNs, however, 
 assigns these nodes to second ECN (see 
 scheme based mapping of IoT nodes in Fig. 3).

To handle such unbalanced mapping of IoT nodes, an extended version of 
 scheme is proposed termed as Extended-
 (
).
4.2.1. Extended-
The core idea of the 
 scheme is to take care of unique and common next-hop neighbors during the mapping of remaining IoT nodes among ECNs. Fig. 4 depicts the th iteration instance of IoT nodes to ECN mapping. Algorithm 2 describes the steps involved in 
. The 
 scheme sorts the set 
 that comprises the set of IoT nodes at ECNs 
 in descending order (line 3). It selects last two adjacent elements 
 and 
 (where  is the cardinality of set 
) from sorted 
 (line 6). 
 selects the ECNs corresponding to 
 and 
 as candidate ECNs to map the next-hop IoT nodes. For instance, if sorted 
 is given as 
 then last two adjacent element 
 and 
 represents the 
 (set of IoT nodes at second ECN) and 
 (set of IoT nodes at fourth ECN), respectively.

 determines set of next-hop neighbors for candidate ECNs. IoT nodes that belongs to set of next-hop neighbors of both candidate ECNs are termed as common next-hop IoT nodes. The set of unique next-hop IoT nodes is obtained by removing the set of common next-hop IoT nodes from next-hop neighbors set at each candidate ECN (line 7–17).

 schemes selects the th ECN (ECN corresponding to 
) and maps the respective unique next-hop IoT nodes to it (line 18). After mapping unique next-hop neighbors to 
, proposed scheme calculates the cardinality difference () between set 
 and 
. The value of cardinality difference () determines the assignment policy for the nodes belonging to the set of common next-hop IoT nodes. 
 maps common nodes equally between both candidate ECNs in case of zero difference (). In other cases (when value of ), proposed scheme selects the candidate ECN having minimum nodes to assign  nodes from common next-hop IoT nodes. Remaining common next-hop IoT nodes are assigned equally between both candidate ECNs (line 22–37).


Fig. 4. IoT nodes to ECN mapping using 
.

 performs the similar procedure between next-hop neighbors of 
 and unique neighbor set of 
 in next comparison. Thus, it performs  comparison per iteration to map IoT nodes to the relevant ECNs. In each iteration’s last comparison (th), the value of  is determined after assigning unique next-hop IoT nodes to both candidate ECNs (line 19–20). The mapping procedure of common next-hop IoT nodes follows the same as previous ones.

Thus, 
 scheme achieves the objective of balanced mapping of IoT nodes among ECNs by taking care of currently assigned, unique, and common next-hop IoT nodes at each ECN. The proposed 
 (see Fig. 3 for IoT nodes mapping using 
 scheme) described in the following through an example.

•
 applies sorting and selects 
 (ECN at 
 in Fig. 3) and 
 (ECN at 
 in Fig. 3) as the candidate ECNs. Further, it determines the set of next-hop neighbors for both candidate ECNs as 
 and 
.

•
Set of next-hop IoT nodes 
 and 
 did not have any common node, therefore, 
. Set 
 and 
 are assigned to set of unique next-hop nodes at ECNs as 
 and 
.

•
It assigns 
 and 
 to 
 and 
, respectively. In such a way, 
 accomplishes two-hop IoT nodes mapping at respective ECNs.

•
Next, 
 maps the IoT nodes located at three-hops distance from ECNs. It selects 
 and 
 as candidate ECNs and determines set of next-hop nodes as 
 and 
.

•
Both ECNs have same nodes in set of next-hop IoT nodes, therefore, 
, 
 and 
.

•
 determines value of  by taking cardinality difference of 
 and 
, before mapping common next-hop IoT nodes.

•
Since value of  is one, therefore, 
 maps one node from 
 to 
 and remaining nodes in 
 are assigned equally between 
 and 
.

•
 scheme returns the sets of IoT nodes mapped at first and second ECN (
 and 
) as 
 and 
 after termination.

•
 scheme maps 11 IoT nodes at each ECN.

It can be inferred from the above discussed illustration that difference of IoT nodes mapped between 
 and 
 is minimum in 
 compared to 
 and 
, hence, leads to balanced mapping of IoT nodes.

Lemma 1

 minimizes total delay by reducing forwarding delay at intermediate IoT nodes and achieves efficient utilization of ECNs.

Proof

 scheme categorizes next-hop IoT nodes into unique and common IoT node set before mapping to ECNs. For example, proposed scheme selects 
 and 
 as candidate ECNs in th 
 iteration. 
 determines next-hop nodes for th and th ECN as 
 and 
. It obtains the common and unique next-hop node for th and th ECN as: 
, 
, and 
, respectively. It associates 
 and 
 to 
 and 
. Further, it associates 
 between 
 and 
 such that 
 is minimized that enhances ECNs utilization. Further, assume that 
 and 
 are the th hop IoT nodes mapped to ECN 
 and 
 that share ‘’ nodes as common in set 
. The 
 schemes maps common ‘’ nodes between 
 and 
 in balanced manner rather than mapping them randomly to any ECN. Hence, it reduces the data forwarding burden on respective IoT node that leads to data forwarding delay minimization. □

4.3. EIaaS topology configuration
 module takes care of ECN placement at identified locations (by setting 
) and connection establishment between IoT nodes and respective ECN to configure the EIaaS topology. Once ECNs are placed, each ECN broadcast an  packet that contains IoT–ECN mapping information. On reception of  packet from an ECN, IoT node searches for its ID in the received message and transmits an  message to the ECN after successful ID matching. Thus, each IoT node is associated with its respective ECN (see EIaaS topology configuration module in Fig. 2).

4.4. Complexity analysis
This subsection discusses the computational complexity of coECNP scheme. 
 module determines IoT nodes density in 
 time and this procedure is repeated  times. Thus, time complexity of proposed location discovery module is 
. 
 sorts 
 based on number of associated IoT nodes that takes  time and performs  comparisons in each iteration. This procedure is repeated 
 times, where 
 is the network wide maximum hop distance from an IoT node to its respective ECN. Thus, time complexity of 
 scheme is 
.

5. Comparative analysis
This section discusses an example scenario to show the effectiveness of proposed scheme over HAF and DBC schemes. Fig. 5 depicts a sample scenario for ECN placement and IoT nodes mapping to corresponding ECN using proposed (coECNP), HAF, and DBC schemes. coECNP scheme assigns (11,11) nodes to both ECNs with ECN access cost as 35 hops. HAF did not address the redundancy to determine ECNs placement locations, hence, leads to higher access cost than proposed scheme. Although, DBC takes care of redundancy in ECNs placement locations determination but fails to select the optimal location among candidate locations. Both HAF and DBC assign IoT nodes to ECN located at the shortest distance without taking care of previously assigned IoT nodes, which leads to an unbalanced assignment. HAF and DBC assign (6,16) and (7,15) IoT nodes among ECNs with ECN access cost as 66 hops and 47 hops, respectively. Moreover, coECNP also reduces the maximum hop distance (
) from 6 hops (in case of DBC) and 7 hops (in case of HAF) to 3 hops.

It is obvious from the discussed example that the coECNP scheme outperforms HAF and DBC schemes in terms of ECN access cost and balanced IoT nodes mapping among ECNs, which plays a critical role in accomplishing objective function. Furthermore, proposed scheme takes 
 time in ECN placement as same as DBC. Although, HAF performs ECN placement in 
 but leads to higher access cost. Moreover, HAF and DBC schemes perform IoT nodes mapping in , whereas, proposed scheme achieves optimal mapping for IoT nodes in 
. The above discussion indicates that proposed scheme determines optimal ECN placement location in same computational cost as DBC and attains optimal IoT nodes mapping among ECNs with lower computational cost in comparison to HAF and DBC.

6. Experiments and results
Performance of the proposed coECNP scheme is evaluated using discrete event simulator NS-3.30 in terms of ECN access cost, IoT nodes mapping among ECNs, energy consumption, average total delay, and edge resource utilization.

6.1. Experimental setup
This section describes the parameter value used in experimentation. The simulation experiments are performed using NS-3.30 running on Ubuntu 18.04 with Intel core i5 processor (3.10 GHz) and 6 GB RAM. The initial experimental set-up consists of 50 randomly deployed IoT node in the area of 200 × 200 m
 (see Fig. 6a). Subsequently, a denser network is constructed by varying the number of nodes (see Figs. 6b and 6c) and their transmission range (see Figs. 7a and 7b). The transmission range is initialized as 20 m (lower transmission range results in disconnected graph). Table 3 summarizes the simulation parameters. The parameters in Table 3 are set accordingly to the specifications of TelosB sensor nodes as described in Sapna et al. (2020). Energy consumption in transmitting B bits from IoT node to respective ECN is modeled using energy model discussed in Verma et al. (2019). We perform the simulation experiments using periodic, event, and query based data traffic patterns to evaluate the performance of coECNP in various scenarios. In the simulation environment, we assumed a clear Line of Sight (LoS) and did not consider any moving obstacle such as a robot, vehicle, etc. The values for energy consumption in transmission and reception of one-byte packet are approximately 40.2 μJ and 37.2 μJ, respectively. coECNP scheme is compared with means, HAF, DBC, k-clustering, and Random (RND) ECN placement schemes in terms of ECN access cost (hops), IoT nodes mapping among ECNs, energy consumption (Joules), average total delay (Seconds), and edge resource utilization.


Table 3. Simulation parameters.

Parameter	Value
Monitored area	200 × 200 
Number of IoT nodes	50–100
Number of ECNs	3
Supply voltage	3 
Sleep state current	0.001 
Idle state current	0.021 
Transmit state current	18.8 
Receive state current	17.4 
IoT node’s initial energy	5 
Data size	200 
Data rate	250 
6.2. Performance metrics
coECNP scheme is evaluated with respect to the following parameters.

6.2.1. ECN access cost
It is defined as the function of hop distance from IoT node to its corresponding ECN. ECN access cost is highly dependent on the location of ECNs and varies according to the placement strategies. Moreover, the 
 (refer Eq. (3)) shares the proportionality relation with ECN access cost.

6.2.2. IoT nodes mapping among ECNs
Proposed scheme uses the standard deviation (SD) as a metric to evaluate the IoT nodes mapping among ECNs. IoT nodes mapped to th ECN (
) is given by 
. The SD is given by Eq. (13). (13)
 
where, 
 represents the average value of nodes mapped for all ECNs. Small SD indicates more balanced IoT nodes mapping among ECNs. This parameter impacts the total delay of IoT node (refer Eq. (4)).

6.2.3. Average total delay
It is used to test the effectiveness of proposed scheme. It is characterized by Eq. (5) (see Section 3.1). To achieve more realistic data processing time at ECN (
 in Eq. (4)), it is assumed that ECN is 200 times faster than IoT node and average data processing time at IoT node is considered as 400 ms (Yousefpour et al., 2018).

6.2.4. Edge resource utilization
It is used to measure the performance of proposed scheme in terms of utilization of edge resources. It is measured using the standard deviation of load distribution among ECNs. The load among ECNs must be distributed equally so as to utilize edge resources in a balanced fashion (Qiu et al., 2020). The lower SD value represents the balanced load distribution among ECNs, whereas, higher SD value represents that ECNs are underutilized/over-utilized.

6.2.5. Energy consumption
Energy is a critical resource for resource constrained IoT nodes (Sisinni et al., 2018). The overall energy consumption from IoT nodes to their respective ECN follow the proportionality relationship with hop distance. Hence, it can be minimized by placing ECNs at optimal location and efficiently mapping nodes among them. The total Energy Consumption 
 in transmitting  bits between an IoT–ECN pair along path  is given as (Verma et al., 2019): (14)
where,  represents the set of nodes along path  and 
, 
 represent the energy consumed in transmission and reception of  bits at node , respectively.

6.3. ECN access cost
This subsection discusses the ECN access cost for various ECN placement schemes under different network settings.

6.3.1. ECN access cost under varying number of IoT nodes
Fig. 8 depicts that coECNP scheme obtains minimum ECN access cost compared to benchmark ECN placement techniques in the network of 50, 75, and 100 nodes, respectively. coECNP reduces ECN access cost by 32%, 6%, 39%, and 44% compare to means, DBC, HAF, and RND schemes in the network of 50 nodes. coECNP adopts hop metric over distance metric for assignment of IoT nodes. It leads to the reduction of network wide ECN access cost. Therefore, coECNP performs better than means.

HAF selects the locations of maximum density IoT nodes to place ECNs. It does not take care of the redundancy that occurred in the density calculation. For example, in Fig. 5, HAF selects the location of highest density node’s (
 and 
) to place the ECNs. In this scenario, maximum ECN access cost is increased from 3 hops (in case of coECNP) to 8 hops. It also leads to higher network wide ECN access cost than coECNP scheme. In this scenario, HAF returns network wide ECN access cost as 66 hops.

DBC scheme overcomes redundancy issue occurred in HAF by removing the already assigned IoT nodes. DBC selects 
 to place first ECN (
) (see Fig. 5). DBC evaluates the placement location for second ECN (
) by removing the one-hop nodes mapped to 
. It selects 
, 
, and 
 as the candidate location to place 
. However, DBC takes care of the redundancy issue to determine the location to place the next ECN. Still, it did not provide a mechanism that selects the optimal location among these candidate locations. For instance, if DBC selects 
 to place 
 then it achieves network wide ECN access cost as 47 hops and maximum ECN access cost as 6 hops.

 module in coECNP scheme assigns more one-hop IoT nodes than HAF by taking care of redundancy in the process of location identification for ECN placement. 
 module also overcomes the shortcoming of DBC scheme. It determines the hop distance between candidate locations and already placed ECNs. Further, it selects the IoT node situated at farthest hop distance among candidate locations for ECN placement. coECNP scheme selects the 
 (location of non-redundant highest density node located at farthest hop distance from location of 
) to place 
 (see Fig. 5 for coECNP scheme). It reduces network wide ECN access cost from 47 hops (in case of DBC) to 35 hops and maximum ECN access cost from 6 hops to 3 hops. RND placement scheme places the ECN randomly that leads to higher ECN access cost than other schemes.

Further, we evaluate the coECNP scheme in the network of 75 and 100 nodes. In these cases, network becomes dense compare to previous scenario due to the addition of new IoT nodes. It leads to better connectivity among IoT nodes and eliminates the possibilities of longer paths from IoT nodes to corresponding ECN. In case of 75 IoT nodes, coECNP achieves 23%, 11%, 25%, and 45% less ECN access cost than means, DBC, HAF, and RND schemes, respectively. In dense network scenario, difference of ECN access cost between proposed scheme and DBC is increased. Moreover, in this scenario two ECN locations selected by HAF share zero redundant nodes. It reduces ECN access cost difference between HAF and coECNP compared to network of 50 nodes. Similar to the 75 nodes network scenario, 100 nodes network achieves better connectivity among IoT nodes. The coECNP scheme reduces the ECN access cost by 11%, 14%, 46%, and 52% than means, DBC, HAF, and RND strategies.

The above discussion indicates that ECN access cost between coECNP and means is reduced as the number of nodes increases in the network, due to better connectivity among nodes. As the network becomes dense, the availability of candidate locations for ECN placement also increases. Since, DBC selects a random location among the candidate ones that leads to higher access cost than coECNP. The difference in ECN access cost between coECNP and HAF is affected by redundancy factor that occurred in ECN location discovery phase.

The performance of proposed coECNP scheme is compared with clustering scheme (Chin et al., 2020). The performance of clustering is highly dependent on the selection of initial cluster centers. It does not consider the redundancy and optimal cluster center selection aspects during the cluster center initialization phase that results in higher ECN access cost. coECNP scheme obtains 26%, 15%, and 35% lower ECN access cost compared to clustering scheme in the network of 50, 75, and 100 nodes, respectively.

6.3.2. ECN access cost under varying transmission range
coECNP is further analyzed with respect to ECN access cost under different network scenarios by varying the transmission range of IoT nodes. Fig. 9 represents that coECNP achieves minimum ECN access cost than benchmark mechanisms in the network of varying transmission range. coECNP reduces ECN access cost by 16%, 9%, 34%, and 41% than means, DBC, HAF, and RND schemes, respectively at 30m transmission range. The increase in transmission range creates new communication links among IoT nodes that enhance the connectivity among nodes than previous case (20m transmission range). It also reduces the hop distance between IoT nodes and their corresponding ECN.

Fig. 9. ECN access cost under varying transmission range.

Due to the better connectivity among IoT nodes, access cost difference in proposed and means scheme is reduced. coECNP reduces ECN access cost by 13%, 10%, 35%, and 43% than means, DBC, HAF, and RND ECN placement strategies with 40 m transmission range. It is concluded from the above discussion that coECNP performs better than benchmark schemes under various network settings. The difference of ECN access cost between coECNP and means is reduced as network becomes dense. DBC and HAF scheme follows the same trends of previous dense network scenarios (similar to the network of 75 and 100 IoT nodes).

coECNP scheme obtains 33% and 34% lower ECN access cost as compared to clustering scheme in the network of 50 IoT nodes with 30 m and 40 m transmission range, respectively.

6.4. IoT nodes mapping among ECNs
This subsection compares the performance of coECNP scheme to benchmark schemes with respect to mapping of IoT nodes among ECNs.

6.4.1. IoT nodes mapping among ECNs under varying number of nodes
Fig. 10 represents the standard deviation (SD) value of IoT nodes mapping among ECNs in the network of 50, 75, and 100 nodes for proposed coECNP and benchmark schemes. coECNP achieves minimum SD value in each network setting, hence outperforms other schemes. The mapping of IoT nodes is highly affected by the placement location of ECNs. Improper placement of ECNs causes unbalanced mapping of IoT nodes (refer Fig. 5). 
 module assures efficient placement of ECNs that enhance the chances of balanced mapping. The DBC, means, HAF, and RND schemes map nodes to the nearest ECN without taking care of already assigned nodes at that ECN that causes unbalanced mapping of IoT nodes.

coECNP considers both currently mapped IoT nodes and hop distance metric(refer 
 module) to achieve balanced mapping of IoT nodes. In 
 module, 
 mechanism categories the next-hop IoT nodes into unique and common nodes. 
 scheme maps unique and common nodes among ECNs in balanced fashion. It minimizes the difference of mapped IoT nodes among ECNs. coECNP achieves 24%, 20%, 25%, and 39% more balanced mapping than means, DBC, HAF, and RND schemes in the network of 50 nodes. Fig. 10 indicates that as number of nodes increase the value of SD is reduced for coECNP. This reduction occurs due to the availability of more next-hop nodes. coECNP achieves 20%, 38%, 47%, 58% and 66%, 84%, 84%, 88% more balanced mapping of IoT nodes among ECNs compared to means, DBC, HAF, and RND schemes in the network of 75 and 100 nodes, respectively.

The -clustering scheme does not take up balanced IoT–ECN mapping into consideration, whereas the mapping module of coECNP scheme ensures balanced IoT–ECN mapping. coECNP obtains 25%, 49%, and 85% more balanced IoT–ECN mapping than  clustering scheme in the network of 50, 75, and 100 nodes, respectively.

6.4.2. IoT nodes mapping among ECNs under varying transmission range
coECNP scheme is further investigated under various network settings by varying the transmission range of IoT nodes in the network of 50 nodes. Fig. 11 depicts the SD of IoT nodes mapping for network of 50 nodes with 20 m, 30 m, and 40 m transmission range, respectively. The SD of IoT nodes mapping among ECNs remains same for means scheme in each transmission range setting (due to Euclidean distance based assignment). In this case, SD values reflect less deviation compare to network scenario of varying nodes due to the less availability of next-hop nodes. coECNP achieve less SD values in case of 30 m transmission range than 20 m due to better connectivity among nodes. coECNP assigns 80% nodes in 
 module and get less next-hop nodes that increases SD value compared to previous network settings (20 m and 30 m) in case of 40 m transmission range.


Fig. 11. IoT–ECN mapping under varying transmission range.

coECNP obtains 37%, 44%, 52%, 58%, and 13%, 30%, 39%, 49% more balanced mapping of IoT nodes in case of 30 m and 40 m than means, DBC, HAF, and RND schemes. It can be inferred from the above results that the difference of SD values between coECNP and benchmark scheme is reduced as network approaches from multi-hop (for 20 m and 30 m) to one-hop (case of 40 m) scenario.

SD value of IoT nodes mapping among ECNs in Fig. 10, Fig. 11 depicts that coECNP scheme achieves more balanced IoT node’s mapping than benchmark mechanisms under various network scenarios. SD values follow a decreasing trend in the network of varying IoT nodes. Further, SD value increases as network approach from multi-hop to one-hop scenario (case of 40 m transmission range) under varying transmission range. Although, the SD value trend (increasing/decreasing/random) also depends on network topology for different scenarios . 
 mechanism in 
 module assures that proposed scheme always achieves more balanced mapping of IoT nodes than benchmark schemes.

coECNP scheme achieves 49% and 21% more balanced mapping as compared to clustering in the network of 50 nodes with 30 m and  m transmission range, respectively.

Under the assumption that each IoT node generates constant traffic periodically, the number of IoT nodes assigned to corresponding ECN can be treated as the load of that ECN. In such scenario, SD of IoT nodes mapping can be interpreted as SD of load among ECNs. The above discussion indicates that proposed coECNP scheme achieves minimal SD. Hence, it also leads to more balanced load assignment among ECNs. Further, the balanced load assignment among ECNs leads to better edge resource utilization. Under the above-mentioned assumption coECNP achieves balanced load distribution among ECNs that reduces the possibility of over/under loading of ECNs.

6.5. Scalability analysis
The scalability of a scheme is defined as the measure of its ability to maintain the network performance efficiency as some parameters of the network increases. We consider optimal scalability aspect for analysis with respect to a triplet defined as: Environment, Independent parameter(s), and Observed metric(s). The environment consists of parameters that define operational condition of the network such as network area, initial distribution of nodes etc. Independent parameters are the number of nodes and transmission range. The observed metric(s) is the quantity of interest measure in the network such as ECN access cost and IoT–ECN mapping (measured using SD of mapped nodes among ECNs) in our case. The environment initially consists of a randomly deployed network of 50 IoT nodes (refer Fig. 6a).

We discuss the optimal scalability analysis of coECNP scheme with respect to benchmark schemes (HAF, DBC, -means, -clustering) on the observed metrics. A scheme is termed as optimally scalable with respect to a given triple if no other method is more scalable with respect to the same triple.

During the ECN’s location discovery process Gateway (GW) node determines the density of every node. For a node, density is defined as the number of one-hop neighbors (see Eq. (12)). GW node uses nodes location information to find the one-hop neighbors of each node. Upon finding the density of all the nodes, the location of the node with the highest density value is selected as the location for first ECN placement. This procedure of determining the location for first ECN is common for HAF, DBC, and coECNP scheme. Hereafter the procedure for subsequent placement of ECNs differ for these schemes. This variation in respective mechanisms influence the observed metrics (ECN access cost and SD of mapped IoT nodes among ECNs).

The HAF scheme selects the locations for  ECNs in greedy manner based on the decreasing density values of nodes. As network moves from sparse to denser, where, density of network is given by the actual number of edges among nodes divided by the total number of possible edges in network. It implies that a denser network approaches towards maximum network density value (one). Therefore, for a denser network it is likely that the nodes will have higher node densities. In case of denser network the probability of a node having higher density is more if it is a neighbor of a high density node. Therefore, in denser networks the probability of one-hop neighbors (with respect to highest density node) having next higher density is more. This leads to close placement of ECNs that results in higher ECN access cost and unbalanced IoT–ECN mapping indicated by high SD values.

The DBC scheme excludes the highest density node and its one-hop neighbors in each iteration for selecting the next ECN location. This enhances the ECN placement location compared to HAF schemes. However, in case of multiple candidate locations with the same density value, the DBC scheme randomly selects one. In such scenario, it leads to higher ECN access cost and higher SD values for IoT–ECN mapping.

The performance of -clustering scheme highly depends on the selection of initial cluster centers. The -clustering scheme selects the initial cluster centers in greedy manner (as similar to HAF) and does not consider optimal cluster center selection among candidate ones (as similar to DBC) that leads to higher ECN access cost and higher SD value for IoT–ECN mapping.

The coECNP scheme selects the optimal location for ECN placement in each iteration by determining the hop distance between ECN locations of previous iterations and current iteration’s candidate locations. It selects the next ECN location among the candidates having maximum hop distance from the ECN locations of previous iterations. The coECNP scheme performs better compared to HAF and DBC in terms of optimal placement of ECNs thus better ECN access cost and balanced IoT–ECN mapping (indicated by the lower SD values).

From the above discussion we conclude that coECNP scheme performs better when network scale up. The HAF and DBC schemes does not scale well with respect to ECN access cost and IoT–ECN mapping and an increasing trend is seen in the observed metrics (see Fig. 8, Fig. 10). The proposed coECNP shows a significant improvement with respect to HAF and DBC schemes, and marginal with respect to k-means scheme. Thus, the coECNP scheme overall scales well with denser networks in terms of the observed metrics.

6.6. Average total delay
This subsection discusses the performance of coECNP scheme with benchmark schemes in terms of average total delay (see Eq. (5)) of IoT nodes. The total delay depends on ECN placement and mapping of IoT nodes among ECNs (refer Section 3). It is evident from the above discussion that proposed coECNP scheme achieves optimal ECN placement (see Section 6.3) and balanced mapping of IoT nodes (see Section 6.4) compared to benchmark schemes.


Fig. 13. IoT nodes’ average total delay under periodic, event, and query based data traffic scenarios.

This work evaluates the performance of coECNP scheme in an industrial use case scenario. Edge computing solutions enhance overall operational efficiency in industrial use case(s) by minimizing the delay. The data traffic pattern between IoT nodes and ECNs varies as per application requirements. These data traffic patterns are divided into three categories as (i) periodic data traffic, (ii) event-based data traffic, and (iii) query-based data traffic (Sisinni et al., 2018).

IoT nodes transmit data to respective ECN over a fixed interval in periodic data traffic scenario. In case of event-based data traffic scenario, IoT nodes of event-region(s) transmit more data traffic than normal nodes. Whereas, IoT nodes transmit data based on the demand of end-user(s) in query-based scenario. For instance, in an industrial equipment health monitoring application, IoT nodes (such as sensors installed on machine equipment) transmit data to respective ECN (according to the above-mentioned data traffic pattern(s)). ECN processes the received data to keep track of the current health status of machine and take decision(s) accordingly that ensures overall operational efficiency.

We conduct the experiments to test the performance of coECNP scheme in terms of IoT nodes delay under various network settings on periodic, event-based, and query-based data traffic scenarios. IoT nodes transmit data to respective ECN over an interval of one second in periodic data traffic scenario. Event and query based data traffic scenarios are generated by varying the data generation interval at IoT nodes (nodes having lower data generation interval indicates the event traffic) and amount of data transmitted from IoT nodes (in query-based scenario end user can demand varying amount of data from different IoT nodes).

Fig. 12 depicts an instance of event and query based traffic scenarios for the network of 100 IoT nodes. Fig. 13 depicts IoT node’s average total delay under periodic, event-driven, and query-based scenarios for the network of 50, 75, and 100 nodes, respectively. coECNP scheme achieves minimum delay in each network setting for each data traffic scenario compared to benchmark schemes. coECNP scheme determines the optimal ECN placement locations and assures efficient mapping of nodes among ECNs using location discovery and mapping modules. The location discovery module obtains the optimal locations for ECN placement that minimizes the maximum hop-distance between IoT node and respective ECN (see Section 6.3). As a result, the E2E delay between IoT node–ECN pair is minimized. The mapping module maps the IoT nodes to the nearest ECN and minimizes the difference of mapped IoT nodes among ECNs (see Section 6.4). It alleviates E2E delay between IoT node and respective ECN, and data processing delay at that ECN. Thus, proposed coECNP scheme leads to total delay minimization for IoT nodes than its counter part schemes.

coECNP reduces the average total delay by 53%, 11%, 69%, 71%, and 37%, 23%, 42%, 66%, and 23%, 26%, 53%, 65% compared to means, DBC, HAF, and RND schemes in the network of 50, 75, and 100 IoT nodes, respectively. In case of event-based data traffic, coECNP achieves 45%, 11%, 75%, 78%, and 36%, 13%, 59%, 64%, and 36%, 25%, 56%, 61% average total delay reduction than means, DBC, HAF, and RND schemes for the network of 50, 75, and 100 nodes, respectively. coECNP reduces the average total delay by 72%, 10%, 64%, 86%, and 80%, 40%, 87%, 90%, and 26%, 40%, 51%, 57% in comparison to means, DBC, HAF, and RND schemes under query-based data traffic in the network of 50, 75, and 100 nodes, respectively.

We compare the performance of coECNP scheme with clustering in the network of 50, 75, and 100 nodes on periodic, event-based, and query-based data traffic, respectively. coECNP scheme reduces the average total delay by 41%, 27%, 42% for periodic data traffic. It obtains 44%, 15%, 46% lower average total delay than clustering under event-based data traffic. In case of query-based data traffic scenario, coECNP scheme reduces average total delay by 43%, 55%, 47%, respectively.

coECNP assumes that each event/query has same priority and probability of occurrence of event/query at each IoT node is equal. However, application-specific requirements (such as temporal requirement based on event/query type) can be accomplished by designing the suitable task(event/query) scheduling mechanisms over the proposed EIaaS paradigm. The scheduling involves the decision making procedure about how data should be transmitted, and how edge resources are utilized by taking care of event/query types (such as, critical task, normal task, query with strict temporal requirements etc.) in order to meet the application-specific requirements (Qiu et al., 2020).

6.7. Edge resource utilization
This work utilizes the standard deviation of load distribution among ECNs as an indicator to measure the efficacy of coECNP scheme in terms of edge resource utilization. The smaller SD value indicates the balanced edge resource utilization, whereas, higher SD value represents the over/under utilization of edge resources. Fig. 14 depicts the standard deviation of load distribution among ECNs for coECNP, k-means, DBC, HAF, and RND schemes in various network settings under different data traffic scenarios.

coECNP scheme obtains minimum SD values of ECNs load distribution than benchmarks schemes in periodic traffic scenario. It indicates that proposed scheme utilizes the edge resources in balanced fashion. Each IoT node transmit same amount of data periodically to respective ECN in periodic traffic scenario. On the other hand, in event/query based scenario data traffic variation among ECNs depends on various factors such as number of IoT nodes in event/query region, amount of transmitted data etc. coECNP scheme also achieves better or approximately equal (see coENCP and DBC schemes SD values in Fig. 15b, and coENCP and means schemes SD values in Fig. 15c) edge resource utilization due to optimal mapping of nodes. Data traffic in event/query based scenario does not reflect the consistent pattern as a periodic traffic scenario. Therefore, it requires an efficient inter-ECN communication mechanism to achieve balanced load distribution among ECNs.

The mapping module ofcoECNP scheme takes care of balanced IoT–ECN mapping that leads to balanced utilization of edge resources as compared to clustering scheme on different data traffic patterns under various network settings.

6.8. Energy consumption
Energy is a critical resource for resource constrained IoT nodes (Sisinni et al., 2018). This subsection discusses the energy consumption of IoT nodes for various ECN placement schemes in various network settings under various data traffic scenarios. Energy consumption of IoT node depends on the number of hops between IoT node and respective ECN that varies according to ECN placement and mapping schemes. coENCP scheme performs optimal ECN placement (see Section 6.3) and balanced mapping (see Section 6.4) that minimizes the energy consumption of IoT nodes compared to benchmark schemes.

Fig. 15 depicts the average energy consumption of IoT nodes under various data traffic scenarios in the network of 50, 75, and 100 nodes for coECNP and benchmark schemes, respectively. coECNP achieves minimum energy consumption among various ECN placement schemes due to optimal ECN placement and efficient mapping of nodes among ECNs. coECNP achieves 38%, 6%, 43%, 53%, and 24%, 11%, 28%, 56%, and 15%, 17%, 57%, 62% less energy consumption compared to means, DBC, HAF, and RND schemes in the network of 50, 75, and 100 nodes under periodic data traffic, respectively. In case of event-based data traffic, coECNP scheme reduces energy consumption by 38%, 11%, 44%, 55%, and 18%, 14%, 38%, 54%, and 13%, 19%, 60%, 62% than means, DBC, HAF, and RND schemes for the network of 50, 75, and 100 nodes, respectively. Further, coECNP reduces the energy consumption by 37%, 9%, 28%, 55%, and 21%, 8%, 48%, 56%, and 29%, 40%, 56%, 62% in compared to means, DBC, HAF, and RND schemes for query based traffic in the network of 50, 75, and 100 IoT nodes, respectively.

Fig. 15 depicts that coECNP scheme obtains lower energy consumption in comparison to clustering in the network of 50, 75, 100 nodes under different data traffic patterns. coECNP scheme reduces energy consumption by 36%, 21%, 52% for periodic data traffic. coECNP obtains 36%, 33%, 53%, and 22%, 30%, 49% lower energy consumption as compared to clustering scheme on event and query-based data traffic, respectively.

7. Theoretical analysis
This section represents the theoretical analysis of proposed coECNP scheme with respect to various network centrality measures to indicate the efficacy of coECNP schemes. This work adopts the degree centrality measure with certain extensions (refer Section 4.1) to identify the optimal ECN placement locations. Closeness centrality measure defines the closeness of a node to all other nodes in the network. On the other hand, eigenvector centrality measures the importance of node by considering the degree of both node and its neighbors.

Lemma 2

coECNP scheme identifies optimal ECN placement locations compared to closeness-centrality scheme.

Proof

The results in Fig. 16 indicates that the nodes located at the center of graph have more closeness centrality than other nodes. Closeness-centrality based scheme selects  nodes having maximum closeness centrality values (in descending order) for ECN placement as 
 in the network of  nodes. On the other hand, coECNP iteratively selects the location of  nodes 
 as optimal ECN placement locations that have maximum density and satisfy 
. Closeness centrality scheme only consider the distance measure in ECN placement, whereas, coECNP maximizes the number of nodes that access respective ECN with minimum distance. Further, it also takes care of appropriate mapping of IoT nodes among ECNs taking hop distance and balanced assignment into consideration for delay minimization. □

Lemma 3

coECNP scheme maximize the number of nodes that access respective ECN with in one-hop compared to eigenvector centrality scheme.

Proof

Given the network of  nodes, assume coECNP and eigenvector centrality based scheme assigns 
 and 
 nodes as 1-hop neighbors to ECNs. 
 is the union of one-hop nodes assigned to different ECNs i.e. 
, where, 
 is the set of one-hop nodes associated to th ECN. Further, coECNP scheme takes redundancy issue into account in identification of maximum density nodes i.e. 
. However, eigenvector centrality scheme selects ECN placement locations by considering density of nodes and its neighbors but did not considers redundancy issue that leads to 
. Further, ECN placement without addressing redundancy issue also leads to unbalanced nodes assignment among ECNs (refer eigenvector centrality scheme in Fig. 16). Therefore, it can be concluded that ECN placement location determined by coECNP maximize the number of nodes that access respective ECN with in one-hop to minimize delay. □

Lemma 4

coECNP scheme determines ECN placement location 
 
 times faster than closeness centrality and eigenvector centrality schemes.

Proof

coECNP schemes takes 
 computational time to determine the optimal ECN placement locations in the network of  nodes. Whereas, closeness centrality and eigenvector centrality schemes identify the optimal locations for ECN placement in 
. It indicates that proposed scheme achieves optimal results with 
 
 times reduced computational cost. □

8. Conclusion
This work investigates the role of ECN placement and mapping of IoT nodes among ECNs for topology formation in EIaaS paradigm to serve latency-sensitive applications. We propose a solution, coECNP, that collectively addresses ECN placement and IoT nodes mapping issues to minimize the delay of IoT nodes and enhance edge resource utilization in order to accomplish an optimal topology formation in EIaaS paradigm. coECNP consists of three modules. The location discovery function in 
 module selects the optimal locations for ECNs placement to minimize E2E delay between IoT node and respective ECN with 
 computational cost. Further, we propose 
 and 
 mapping schemes under 
 module that minimizes the difference of mapped IoT nodes among ECNs with computational cost of 
. These schemes minimize the total delay of IoT nodes and enhance edge resource utilization. Finally, 
 module accomplishes the EIaaS topology formation by utilizing the information received from 
 and 
 modules. We conduct the simulation experiments to test the effectiveness of coECNP scheme with benchmark schemes. Simulation results indicate that coECNP outperforms benchmark schemes in terms of average total delay, energy consumption, and edge resource utilization on various data traffic scenarios under various network settings.

Future work includes the extension of coECNP scheme in EIaaS paradigm by designing efficient mechanism(s) such as an intelligent inter-ECN coordination mechanism that maximizes balanced utilization of edge resources and satisfies application-specific requirements.