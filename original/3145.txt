The need to benefit from information technologies in the twenty-first century digital age is increasing in all economies to overcome problems and difficulties and to have desired solutions. So, developing algorithmic thinking has been important as a skill that requires the application of knowledge from different disciplines, especially science, technology, engineering and mathematics, and improves solving real life problems. Therefore, there is a need for practical studies on how to develop algorithmic thinking and what kind of activities and learning content can be used in classrooms. The effect of STEM-focused physical computing activities with Arduino on algorithmic thinking skills and STEM awareness of teacher candidates was investigated by mixed-method research. In addition, student-teacher roles in the activities and the advantages-disadvantages of the activities were discussed by considering the views of the teacher candidates. The study group of the research consists of twenty-four volunteer students. They were selected by purposive sampling method, and they are studying in the last year of science teaching undergraduate program at twelve different universities in Turkey. The findings showed that STEM-focused physical computing activities developed teacher candidates’ algorithmic thinking skills. Therefore, it can be said that the activities increased the awareness of teacher candidates about STEM. The effect size (Cohen d) of the STEM awareness scale was calculated as 0.98 according to the pre-test and post-test averages.

Access provided by University of Auckland Library

Introduction
Today, occupations usually involve problem solving. Rapid developments in technology increase the problems and put them into a more complex structure. Taking advantage of computer technologies for solving complex problems is now a necessity, and its use is becoming more widespread (Gürbüz et al., 2017). In this process, algorithmic thinking, which reflects the working logic of computers, comes into prominence more and more to take full advantage of the opportunities provided by technology (Angeli & Valanides, 2020). While algorithmic thinking, which is often used interchangeably with computational thinking in the literature, focuses more on the design phase of problem solving, computational thinking focuses on data and interpretation of data (Blannin & Symons, 2019). Using computational thinking skills to solve a problem includes algorithmic thinking and programming skills to have the desired solution, even if these two concepts are considered different from each other (Angeli, 2021).

Algorithmic thinking, which is no longer seen as a skill unique to computer programmers, has become a new type of language and literacy in today’s world. Using information technologies with algorithmic thinking, solving a problem and designing logical models to implement solutions are important skills for today’s students. Even if today’s younger generation is not a part of the information technology industry in the future, they need to know algorithmic thinking and programming, understand how to integrate it into their fields and how to become a producer. It seems possible with STEM education and STEM-focused programming education. In STEM education, which focuses on solving real life problems with an interdisciplinary approach (Bybee, 2010), perhaps the best way to teach students how to integrate technology is to teach them programming. Because in the programming process, students learn to develop their solutions and answers instead of using pre-existing solutions by using their algorithmic thinking skills.

In recent years, algorithmic thinking and programming have become a fundamental part of STEM education (Weintrop et al., 2016) with the increasing use of computational software in STEM professions (Wing, 2008). This change of STEM has made teaching algorithmic thinking and programming skills important in K-12 education (Grover & Pea, 2013). On the other hand, the ability of teachers to teach this way of thinking in their fields depends on their being adequately trained before or in-service. There is evidence in the literature that teacher candidates lack sufficient knowledge and skills to learn algorithmic thinking in their undergraduate education (Angeli, 2021; Angeli & Valanides, 2020). Therefore, there is a need for applied studies on teaching algorithmic thinking in teacher candidate education. It is significant for teachers to experience STEM-focused activities where they can use their algorithmic thinking and programming skills, and gain knowledge, skills and awareness to carry such applications into the classroom because skill development in the individual is only possible with the use of related skills. Awareness, on the other hand, affects the attitudes and behaviours of individuals positively and directs people to the right attitude and behaviour (Sarı et al., 2020). As a result, this research examines the use of STEM-focused physical computing activities in the context of science lessons to teach science teacher candidates to think algorithmically and to gain awareness and experience.

Theoretical framework
Programming and algorithmic thinking
The digital transformation that started with Industry 4.0 causes individuals to consider digital competencies. It is now aimed to train individuals who not only use technology effectively but also solve problems and develop products using technology. The programming skill is considered as a basic and necessary skill as well as a literacy skill in this process (Nouri et al., 2020; Wei et al., 2021). The terms “programming” and “coding” are often used interchangeably in the literature. Programming is designing an algorithm (strategy) to solve a problem (Gülbahar & Karal, 2018). Algorithm, on the other hand, are step-by-step instructions that must be undertaken for the realization of any process and ensure the automation of solutions (Hava & Koyunlu-Ünlü, 2021). In addition, programming can also be defined as writing this algorithm in a language that the computer can understand (Gülbahar & Karal, 2018).

Programming has gained a new meaning and has become a structure that includes the fields of science, mathematics, engineering and technology with the importance given to STEM education all over the world (Junior et al., 2013). It is now expected to acquire not only the concepts and processes of a programming language but also skills such as problem solving, algorithmic thinking, critical thinking and creativity (Bergersen & Gustafsson, 2011; Kobsiripat, 2015; Korkmaz, 2012).

Students seek solutions to the problem by using their algorithmic thinking skills in the programming process. Therefore, this process can contribute to the development of algorithmic thinking (Fanchamps et al., 2021). Algorithmic thinking is a thought process that expresses an individual’s solving a problem by developing a series of steps taken in order to reach the desired result with creative and logical thinking (Katai, 2014; Ziatdinov & Musa, 2012). According to Futschek (2006), algorithmic thinking is a detail-oriented skill that activates one’s cognitive ability to understand and analyse problems, develop a set of steps towards an appropriate solution, streamline steps, and find spare steps to provide alternative solutions. According to Blannin and Symons (2019), algorithmic thinking encompasses a set of skills that include four areas: design thinking, decomposition, pattern recognition, and abstraction. These skills are used in schools to enable students to solve problems, think critically, and collaborate.

Understanding that algorithmic thinking supports technology today and that errors or difficulties in technology can be solved with an algorithmic approach are skills needed in a wide variety of industries. Countries are trying to add algorithmic thinking skills to their curricula for this reason. In developed countries such as the USA, France and England, algorithmic thinking has taken its place in curricula (Blannin & Symons, 2019). Plans were made for teaching algorithmic thinking to students and teachers in the 2023 Education vision of the Ministry of National Education in Turkey (MEB, 2018). Algorithmic thinking activities can be seen in many different areas such as mathematical problems, historical studies, text analysis, science activities and mind games. Algorithmic thinking activities can be seen in many different areas such as mathematical problems, historical studies, text analysis, science activities and mind games. Also, according to Nijenhuis-Voogt et al. (2021), algorithmic contexts should be connected to students’ everyday life. This skill can be acquired by students through non-computer activities as well as by teaching programming (Li et al., 2020). In this study, the physical computing approach was used to teach algorithmic thinking. Physical computing is a method that aims to design intelligent systems that receive information from the outside world through various sensors and processes and use this information (Montemayor et al., 2002). This approach is involved in many applications, from designing cyber systems, which are important components of Industry 4.0, to smart systems used in daily life. The fact that technological production is the main emphasis in STEM education brings physical computing to the fore.

Physical computing with Arduino and STEM education
Physical computing is an approach in which a person can develop tangible products that exchange data with the physical outside world as a result of using software and hardware together with imagination and creativity (Przybylla & Romeike, 2014). In physical computing activities, hardware such as sensors, LEDs, servo motors and programming components such as problem solving, algorithm creation and code writing are brought together. Information from computer science, engineering and other related disciplines are applied with an interdisciplinary approach and interactive designs are realized with the real world in these activities, which also include the creative thinking and engineering design process (Juškevičienė et al., 2021). Physical computing activities allow students to develop meaningful products for learning by combining the principles of constructivist learning and computer programming. According to the constructivist learning theory, learning is most effective when learners construct knowledge and consciously participate in creating visible artefacts (Resnick, 1996). In physical computing activities, learners develop creative solutions to real life problems and develop tangible products that are meaningful to them and interact with the environment. Thanks to these activities, students can answer the question “Why do I need this information?” and thus learning can be meaningful.

Although Lego Mindstorms, Bee-Bot and mBot robot kits are used for physical computing (Juškevičienė et al., 2021), the Arduino microprocessor is preferred more with its cheapness and flexible structure (Arslan & Tanel, 2021; Sarı, 2019). The Arduino processor uses a text-based programming language (Banzi, 2011). But in the last decade, Arduino hardware has been paired with Scratch and reduced to teaching programming using visual coding blocks instead of text-based coding. The simultaneous integration of Scratch visual coding and Arduino hardware has provided STEM education accessibility for students and teachers of all levels. Users find block-based programming and even hybrid structure by adding Arduino hardware to the mBlock platform, which is a visual programming tool (Fidai et al., 2020). This feature of Arduino offers an environment where young age groups and those who are new to programming can perform their designs. As an add-on to the Arduino processor, various sensors that can detect physical environment properties such as temperature, pressure, gas and distance can be used and data can be collected with these sensors. So it can be used in different disciplines as well as easily integrated into educational environments (Cakir & Guven, 2019; Sarı, 2019). Arduino has a feature that allows original designs and thus can serve STEM literacy fields by contributing to STEM education (Wang et al., 2016). Studies show that the use of Arduino in STEM applications increases students’ interest and motivation (Dönmez, 2017; Sarı & Yazıcı, 2020) and improves their perceptions of STEM careers (Kuo et al., 2019). It is also stated that skills such as problem solving, creative thinking, algorithmic thinking, and collaborative work can be developed with Arduino applications (Alimisis & Kynigos, 2009). Arduino-based physical computing activities can enable students to apply science and mathematics disciplines to real life and can make a significant contribution to achieving the goals of STEM education. On the other hand, the lack of basic knowledge and skills for the use of Arduino tools by teachers and students can negatively affect the process and develop negative attitudes towards such applications (Sarı & Karaşahin, 2020). Therefore, teachers should have basic knowledge and skills about Arduino tools to use them effectively in STEM learning environments.

Accordingly, in this study, it is aimed that science teacher candidates experience STEM-focused physical computing activities, gain algorithmic thinking skills, and raise awareness for such applications. Based on the stated purposes, the research questions (RQs) were determined as follows:

RQ #1: Is there a significant difference between before and after the application algorithmic thinking skills of teacher candidates? RQ #2: Is there a significant difference between teacher candidates’ STEM awareness levels before and after the application? 3. RQ #3: What are the advantages and disadvantages of STEM-focused physical computing applications considering the views of teacher candidates?

Methods
Research design
“Simultaneous Nested Mixed-Methods research model” was used in this research. According to Cresswell (2003), quantitative and qualitative data are collected and analysed simultaneously in this method. During the research process, both quantitative and qualitative data were collected. “STEM Awareness Scale” and “Algorithmic Thinking Skills Rubric” were used in the quantitative dimension and the interview form in the qualitative dimension.

Study group
The research was carried out within the scope of the project supported by the Scientific and Technological Research Council of Turkey (TÜBİTAK) in 2021. The study group of the research consisted of twenty-four science teacher candidates studying in the last year of science teaching at twelve different universities in Turkey. The participants were selected voluntarily according to the purposeful sampling method. In the purposeful sampling method, the participants are determined under the criteria determined by the researcher. The researcher can carry out in-depth research on the subject in this way (Patton, 2002). In this context, the participants were selected from the students who had not received STEM and Arduino programming training before. Since the teacher candidates completed a compulsory course on basic computer skills in their undergraduate education, the participants generally had basic skills such as word processing, spreadsheets, presentation tools and internet use. In addition, the participants had knowledge and skills about student-centred practices by completing the special teaching methods course in science education. None of the participants had experience in STEM activities, programming, coding, and algorithmic thinking. Participants participated in the study after signing consent forms. In the study, names such as K1, K2, K3 … were used for the teacher candidates, instead of using their real names in terms of ethics.

Design and implementation of STEM-focused physical computing activities
The teacher candidates carried out eighteen different activities during the courses of 56 h. First of all, the theoretical foundations of STEM education, the engineering design process and its applicability in science lessons were discussed in the activities, and in-class application examples were made. The importance of the algorithm in the problem solving process and the concept of the algorithm in daily life were studied practically within the scope of programming. The Arduino platform and programming language were introduced to them, and they were informed about the beginner’s text-based Arduino software IDE. The use of some necessary sensors in the activities was demonstrated by mini-projects. Block-based programming was preferred because the participants did not know any programming language. The Arduino processor uses a text-based programming language borrowed from the C++ language (Banzi, 2011). However, text-based coding is thought to be difficult for beginners because it contains its own spelling rules and has an abstract structure, and it is considered that this situation may develop negative attitudes towards coding in learners (Gomes & Mendes, 2007; Kurihara et al., 2015). Visual block coding was carried out with the mBlock platform in the activities considering that teacher candidates have just started programming. At the same time, it was ensured that the hybrid structure and visual blocks were examined in their corresponding textual codes.

The study aimed to teach algorithmic thinking to teacher candidates through STEM-focused physical computing activities. Therefore, sub-skills covered by algorithmic thinking (Futschek, 2006) were taken into account while designing the activities. Physical computing stages were applied in activities developed based on science curriculum topics. In the activities given in Table 1, a real life problem situation was presented and they were asked to look for solutions to the problem under physical computing and design prototypes.

Table 1 STEM-focused physical computing activities
Full size table
The participants designed a traffic light using different coloured LEDs in the first activity. The first activity was planned at a simple level so that the participants could easily understand and apply the physical computing stages. The complexity of the missions increased as the activities progressed. The participants designed a speed detection and warning system using the ultrasonic distance sensor in the second activity. Participants designed a system that calculates the speed of vehicles and gives warnings with different coloured LEDs according to the speed value in order to prevent accidents on the road passing in front of a school. In the fuel gauge design activity, the participants designed a vehicle fuel gauge as an engineer working in an automotive company. They detected the water level using the distance sensor in this activity. The participants calculated the fill rate for a tank through mathematical modelling using the values they obtained, and designed a warning system with LEDs and buzzers in different colours according to the fill rate and reflected the fuel level on the screen. They designed a smart lighting system for a stadium that works in three stages according to the light level of the environment in the last activity, which has the most complex structure (if the light level is high, none of them lights up, if the light level is low, half of the system works, if the environment is dark, the whole system lights up). They also developed a light-emitting system for the off-field areas of the stadium according to the motion-sensing sensor. Thus, they carried out an energy-efficient design. In stadium lighting activity, the participants investigated the differences between the serial and parallel connection of the LEDs and according to the results, they decided to establish a parallel connection. Participants worked in groups of four in a collaborative learning environment in all activities. The activity guide (worksheet) covering the problem situation and the stages of the physical computing process (as well as the steps of the algorithmic thinking skill) was given to the groups, and designs were made by applying the stages on the worksheet. The groups presented and discussed their designs in the learning environment. Some images of the applications are given in Fig. 1, and examples from the worksheets are given in Fig. 2.

Fig. 1
figure 1
Prototypes with STEM-focused physical computing examples

Full size image
Fig. 2
figure 2
Worksheet examples

Full size image
Data collection tools and analysis of data
Algorithmic thinking skill rubric
The “Algorithmic Thinking Skill Rubric” developed by the researchers was used to measure the participants’ algorithmic thinking skills. According to Tekindal (2008), performance evaluation is the evaluation of the works that individuals perform through active learning and the products they create as a result of these studies. The most prominent of the tools that come to the fore in this evaluation are rubric tools. Goodrich-Andrade (2001) defined the steps to be followed in the development of the rubric as determining the purpose, defining the criteria, determining the scoring strategy, determining the performance levels and getting an expert opinion. As a result, an expert in the field of STEM applications and an assessment and evaluation specialist, under the coordination of an expert in the field of STEM education and programming with Arduino, followed the following steps during the development of the rubric: 1. Determining the purpose of the project, 2. Determining the main criteria and sub-criteria (performance indicators) based on the purpose, 3. Defining the performance indicators (evaluation categories) in a way that will enable the differentiation of the performance of the individuals of the determined criteria, 4. Taking expert opinion for the criteria.

Futschek (2006) defined algorithmic thinking skills as the ability to analyse the problem, express the problem clearly, find possible solutions to the problem, create an accurate algorithm based on the solution ways, consider the limitations and constraints of the problem, and improve the algorithm. Algorithmic thinking is a thought process to formulate the steps of the desired solution (Hu, 2011; Katai, 2014). Three main headings and fourteen items were created by the researchers based on the literature as “understanding the problem”, “determining the solution strategy” and “creating the algorithm” as indicators of algorithmic thinking skills. The levels of these items were determined by the researchers as Not Specified (0), Should be Improved (1), Partially Sufficient (2), Sufficient (3) (Table 2).

Table 2 Algorithmic thinking skill rubric
Full size table
The rubric was shared with the students before the project and the students were informed about the aim. A well-structured rubric and clearly stating the objectives make the scores obtained by the students more meaningful and reliable. The inter-rater reliability coefficient, which was frequently used in its development, was calculated to determine the reliability of the rubric. At the end of the study, the worksheets used by the participants for each activity were evaluated with the “Algorithmic Thinking Skill Rubric”. Working papers were evaluated by 2 independent experts and consistency between experts was determined by Weighted Kappa. Determining the achievements and specific criteria for these achievements within the scope of the project was accepted as evidence for the scope validity of the scale (Moskal & Leydens, 2000).

STEM awareness scale
A two-factor, 17-item 5-point Likert-type scale developed by Buyruk and Korkmaz (2014) was used to determine the STEM awareness levels of teacher candidates. Kaiser-Meyer-Oklin (KMO) and Bartlett tests were first performed on the data to determine the construct validity of the scale by Buyruk and Korkmaz (2014), and the KMO value was 0.947 and the Bartlett test value was χ2 = 2300.239; sd = 136 (p = 0.000). Cronbach’s Alpha reliability coefficient is 0.927. Cronbach’s Alpha value for the “Positive Perspective” factor was 0.929; The Cronbach’s Alpha value for the “Negative View” factor is 0.806. On the other hand, it was stated that the scale items and factors explained 57% of the total variance. The scale was applied as a pre-test and post-test at the beginning and end of the activities of the project, and whether there was a difference between the environments related to the data obtained was determined by the related sample t-test.

Semi-structured interview form
A semi-structured interview form was used to determine the opinions of the participants about the possible advantages and disadvantages of using the activities carried out in the classroom environment and the skills they gained with the project. The interview form consisting of four items was prepared by two researchers who are experts in the field of STEM education and applied at the end of the project (Appendix-1). Key concepts were determined by examining the raw data obtained, and the final codes and themes were created by examining the relationship between these concepts. Two independent researchers performed the content analysis using the codes created from the raw data. Consistency among researchers was calculated using the formula of Miles and Huberman (1994) and was found as 87.2. The fact that the Miles and Huberman reliability coefficient is above 70 indicates that the agreement between the researchers is reliable (Miles & Huberman, 1994).

Results
The findings obtained from quantitative and qualitative data in line with the objectives of the study are presented below.

Is there a significant difference between before and after application algorithmic thinking skills of teacher candidates?
The findings regarding the effect of STEM-focused physical computing activities on algorithmic thinking are given in Table 3. While there was no significant difference between the “understanding the problem” sub-dimensions of teacher candidates’ algorithmic thinking skills, there was a statistically significant difference in favour of the post-test in the dimensions of “Algorithmic thinking skills rubric in general” (t(23) = −3.14, p = 0.01 < 0.05) and “Creating the algorithm” (t(23) = −3.23, p = 0.00 < 0.05) and “Determining solution strategies” (t(23) = −2.40, p = 0.02 < 0.05). Statistical significance tests should be interpreted together with the effect size. The effect size value helps to make a more accurate decision about the results obtained by eliminating the errors caused by the number of samples (Fan, 2001). The effect size calculated according to the pre-test and post-test averages of the teacher candidates’ algorithmic thinking skills was found as Cohen d = 0.64 in the overall rubric, Cohen d = 0.65 in the dimension of “Creating the Algorithm” and 0.48 in the dimension of “Determining the Solution Strategies”. These values are in the range of medium effect values determined by Cohen (Cohen, 1988). The Weighted Kappa coefficient values determined to obtain the general agreement between the scores of the two raters are between 0.77 for the pre-test and 0.79 for the post-test. It is observed that this agreement is at a moderate level (Cohen, 1988).

Table 3 Related sample t-test results of pre-test and post-test mean scores of teacher candidates’ algorithmic thinking skills
Full size table
Is there a significant difference between teacher candidates’ STEM awareness levels before and after the application?
The findings regarding the effect of STEM-focused physical computing activities on STEM awareness are given in Table 4. According to the related sample t-test results, it is observed that there is a statistically significant difference between the pre-test and post-test averages of the teacher candidates in terms of the STEM awareness test (t(23) = −4.01, p = 0.001 < 0.05). This difference is in favour of the post-test averages. Therefore, it can be said that the activities increased the awareness of teacher candidates about STEM. The effect size (Cohen d) of the STEM awareness scale was calculated as 0.98 according to the pre-test and post-test averages. This value is in the large effect value range determined by Cohen (Cohen, 1988).

Table 4 Related sample t-test results of pre-test and post-test mean scores of teacher candidates in STEM awareness test
Full size table
What are the advantages and disadvantages of STEM-focused physical programming applications considering the views of teacher candidates?
The codes were determined, and the themes of teacher-student roles in the classroom and advantages-disadvantages of the practices were formed from these codes by evaluating the opinions of the participants about the practices. The findings are given in Table 5.

Table 5 Advantages and disadvantages of the application and teacher and student roles in STEM-focused physical computing applications with Arduino
Full size table
In STEM-focused physical computing practices, teacher candidates defined the student as inquiring-questioning, problem-solving, entrepreneurial, creative, collaborative, critical and analytical thinking, technology literate, science-literate and productive, and the teacher as a guide, technology literate, entrepreneur, innovative, critical thinker, curious, patient and leader. These roles are expected from students and teachers in today’s contemporary educational practices. The statements of some teacher candidates related to the subject are given below:

K-5: While describing the role of the teacher in STEM activities, we can say that the teacher should be a guide, not an informant.

K-13: The teacher is only in the role of a guide. S/he gives the question and the problem and then follows the steps by observing the students.

K-2: Thanks to these activities, students become more curious and thus take a role as inquiring individuals.

K-9: In the classroom, students are in the role of problem solvers. Creative thinkers are successful in solving problems.

Teacher candidates highlighted the advantages of STEM-focused physical computing applications on skill development. They stated that such practices will contribute to the development of twenty-first-century skills such as decision making, creative thinking, analytical thinking, entrepreneurship, communication skills, collaborative work, especially problem solving skills. As the disadvantages of the applications, the most mentioned effectiveness was the time-consuming application process and the lack of materials. In addition, crowded classrooms, different levels of readiness, the passiveness of some individuals in the group, problems of adaptation to the curriculum and collaborative work were expressed as possible disadvantages. Participant opinions on the subject are given below:

K-8: STEM-focused Arduino activities are activities that increase students’ problem-solving, entrepreneurship and communication skills.

K-23: These practices can increase students’ creativity, collaborative work and analytical thinking skills.

K-11: While implementing these activities, there may be some disadvantages such as planning, time and directing students.

K-22: The lack of materials may be at the forefront in physical programming applications with Arduino. In addition, the readiness levels of the students may differ and it may cause some students to be passive in the group.

Discussion and conclusion
The effect of STEM-focused physical computing activities on the development of teacher candidates’ algorithmic thinking skills and increasing their STEM awareness was investigated in this study. Quantitative findings showed that teacher candidates experienced statistically significant learning outcomes for algorithmic thinking in the process of performing activities. It has been concluded that there is an increase on the skills of determining solution strategies and creating algorithms, which are specified as algorithmic thinking sub-dimensions. Although the teacher candidates did not directly express their views on algorithmic thinking skills in the qualitative data, they stated that some skills that strengthen algorithmic thinking would be gained, and this supports the quantitative results. Participants stated that physical computing activities will contribute to the development of problem solving, decision making, analytical thinking, creative thinking and collaborative working skills and will provide a different perspective. According to the literature, algorithmic thinking is the process of revealing strategies for solving a problem by using creative and logical thinking skills (Ziatdinov & Musa, 2012) and this process includes the skills that enable students to solve problems, think critically, cooperate (Blannin & Symons, 2019) and to make decisions (Lockwood et al., 2016). Therefore, both quantitative and qualitative results show that STEM-focused physical computing activities have a positive effect on teacher candidates’ algorithmic thinking skills. This result is compatible with the findings of studies reporting that computer programming (Bers et al., 2014) and robotic programming (Angeli, 2021) activities are effective in the development of students’ algorithmic thinking skills. Teacher candidates faced real life problems in this study in which STEM-focused physical computing activities were carried out with Arduino. They determined the inputs and outputs of the problem and developed step-by-step solutions with verbal expressions. They chose the most appropriate solution in line with the criteria and limitations of the problem, created the prototype and coded according to the solution stages. It can be said that this whole process was successful in the development of teacher candidates’ algorithmic thinking skills.

In the literature, there are different strategies, programming tools and activities that are used in research on the development of algorithmic thinking. Angeli (2021) determined that robotic programming activities with LEGO WeDo improved pre-service teachers’ algorithmic thinking skills. Fanchamps et al. (2021) have found evidence that programming with Lego robotics following a Sense-Reason-Act (SRA) cycle improves algorithmic thinking and also students using SRA programming learn algorithmic skills better. In the study of Juškevičienė et al. (2021) with secondary school students, they determined that physical computing activities with Arduino in STEAM education improve algorithmic thinking. They stated that the physical programming strategy can contribute to engineering education. These studies for the development of algorithmic thinking are mostly directed to the field of computer science. In this study carried out with pre-service science teachers, the activities were designed for STEM education in a way to cover science lesson achievements. As a result of study, it was found that physical programming activities with Arduino support algorithmic thinking. The physical programming activities designed in this context can be used to plan the educational process for science classes or STEM courses.

Considering the findings of the study for the second sub-problem, it was observed that STEM-focused physical computing activities positively affected the STEM awareness of teacher candidates. Awareness scale scores increased significantly after the activities. According to Hutton and Baumeister (1992), increasing the level of awareness strengthens the relationship between attitude and behaviour by bringing awareness and sensitivity to the individual. Strengthening the attitudes and behaviours of teacher candidates may be effective in spreading such practices and thus increasing the STEM workforce with programming and algorithmic thinking skills. Considering the role of STEM education in shaping culture and economic development, it is very valuable to increase the awareness of teacher candidates about STEM (Sarı et al., 2020).

When the participant’s views on the third sub-problem were evaluated, it was determined that teacher candidates had positive opinions about the activities in general. The teacher candidates highlighted the role of the teacher as a guide, technology literate, entrepreneur and innovator in STEM-focused physical computing activities. The advisory teacher is a leading role for the part of today’s student-centered approaches. On the other hand, the fact that teacher candidates define both the teacher and the student as technology literate shows that they believe this skill is necessary for the activities. Knowledge and skills related to information technologies are used in the use of physical programming and Arduino tools in the activities, and thus these skills can be developed. Technology literacy is very important for teachers to integrate technology into learning environments and to benefit from the opportunities provided by educational technologies (Dinçer, 2018). Teacher candidates have experience by performing applications for the integration of technology into STEM education with STEM-focused physical computing activities. This situation was also reflected in the opinions of the participants and the integration of technology and providing interdisciplinary teaching were described as the advantages of the activities. According to the participants’ views, it was emphasized that researching, inquiring, problem-solving, being creative and being collaborative are the most important roles for the students attending the activities. These roles are the characteristics expected from students in today’s learning environments. Based on the opinions of teacher candidates in the study, it was determined that Arduino and STEM-focused physical computing applications could contribute to the development of high-level skills such as problem solving, decision making, creativity, collaborative work, design skills and entrepreneurship skills. In the literature, there are findings reporting that programming activities with Arduino/robotic tools improve students’ problem solving (Wang et al., 2016), creativity (Kobsiripat, 2015), collaborative work (Alimisis & Kynigos, 2009), design and entrepreneurship (Sarı & Yazıcı, 2020) skills in line with the views of teacher candidates. In addition, these views of teacher candidates coincide with the current science curriculum because science, engineering and entrepreneurship practices are included in the curriculum to gain these skills. It shows that the activities are compatible with the aims and objectives of the science curriculum. The teacher candidates listed the possible disadvantages of the activities as time limitations, lack of materials, difficulty in applying in crowded classrooms, differences in readiness levels, and problems of adaptation to the curriculum. Such disadvantages can be seen as possible problems that may be experienced in the implementation processes in the classrooms. However, these problems can be overcome and applications can be done when adequate preparation is made in terms of knowledge and experience and physical sense for innovative education practices by the collaboration of students, teachers and school management.

The teachers need to experience this process before the service to carry algorithmic thinking and STEM-focused physical computing activities to their classrooms. Teacher candidates who graduate by experiencing STEM-focused activities understand the relationship of STEM with real life, can adopt the STEM education approach and can direct their students to STEM fields by positively influencing the students’ attitudes (Corlu et al., 2014). On the other hand, considering that the main emphasis in STEM education is technological production, the positive opinions of teacher candidates towards STEM-focused physical computing applications and their gaining skills and experience are also important. An imagined idea can be turned into reality using different fields and technologies, and a solution to current life problems can be developed by working product-oriented by including physical programming practices with Arduino in STEM education. As a result, it can be said that STEM-focused physical computing activities improve algorithmic thinking skills, increase STEM awareness, serve STEM literacy areas, and improve life skills such as problem solving, creativity, and collaborative work.

Suggestions
According to the results of the research, the use of physical computing and algorithmic thinking skills in the problem solving process in STEM learning environments will contribute to the quality of STEM education and the skill development of learners. The study can be recommended to practitioners as an example of technology integration into STEM education. Thus, the widespread effect of the study will also increase.

Considering the positive effects of the study on algorithmic thinking skills, it can guide studies to develop computational thinking skills. This study, which was carried out with teacher candidates, can be taken as a model to be examined at different teaching levels. The results will be valuable as a wealth of literature together with this study.

The study is limited to teacher candidates, four activities and algorithmic thinking skills. The study can guide the different levels of teaching. The activities were planned in a mixed research design. If it is planned with action research, it will be beneficial in eliminating possible difficulties in the process.