Advising students through their study plans is one of the essential steps towards academic success. The matching of students’ needs and courses offered at a university requires comprehensive planning and scheduling. To avoid the problem of mismatch, which usually leads to cancellation courses with low enrollment, a decisive advising process is deemed necessary. Although such a topic received attention from previous work in the area, we could not trace any research references to the use of blockchain in solving the complex advising process. This research explores a topic that is still in its infancy. Blockchain is a new technology proposed to create an effective advising system based on a decisive preregistration process. The proposed system has adopted a hybrid approach integrating the client-server legacy centralized methodology with the blockchain decentralized approach. Ethereum blockchain network is used in the proposed system to create a consensus-validated advising environment. The smart contracts used in such a system offer the students the freedom to modify the courses selections, based on the map of several students tentatively registered in the courses at any particular time. The proposed system has been analyzed, designed, implemented, and applied empirically on students’ records extracted from the Banner Enterprise Resources Planning (Banner-ERP) system. The results are promising and provide a proof of concept. The experimental results have also been compared with students’ course requirements reaching a satisfactory level of efficiency in the advising process.

Access provided by University of Auckland Library

Introduction
Advising is a critical process in academic curriculum planning and scheduling. When university students are provided with effective advising services, graduation rates and student performance are improved (Laghari et al., 2015). Frequently, advising takes place through lengthy meetings with the advisors that end up in a partial computerized process through notetaking. As curriculums become more complex with the introduction of specialties, double majors, and cross-discipline minors, student advising for curriculum becomes a complicated process, as many parameters need to be analyzed to choose an optimal curriculum path (McBeath & Atkinson, 1992). Issues like student profile, gross point average (GPA), performance in specific topics make the optimization task a computerized task using either intelligent analytics or decision support techniques (Daramola et al., 2014). These tools improve the advising process in the hands of a student’s advisor. In addition, expert systems may be used to capture the advisor’s knowledge rules and completely automate the advising process. In the case that academic advisors are administrators with limited experience and knowledge in the academic disciplines, the automated system secures a standard quality in the advising process among all students (Nwagu et al., 2018; Shatnawi et al., 2014).

Aside from the valuable academic experience for students, the advising process offers significant data for the university to plan and schedule courses in the various disciplines. Historical data, enrollment records, and advising lead to three important data sources used in the scheduling intelligence to optimally plan for the offering in the upcoming academic periods (Laghari et al., 2015). While historical data and enrollment records are registered in the university platform, there is a major ambiguity related to advising data. Advising sessions may lead to an agreed suggested curriculum plan that could be ignored by the student (Siegfried et al., 2003); therefore, it is not as reliable as the historical and enrollment data. Some advising sessions may also lead to vague results due to the many curriculum paths that could be suggested to the advisees. A decisive advising process may lead to more confining data that will be valuable in the advising process. These data must be screened for conformity against the academic rules and regulations receiving a consensus as valid preregistration input (Daramola et al., 2014; Nwagu et al., 2018).

With the large number of students seeking courses suggested by their advisors and the limited number of offered courses due to resources and scheduling issues, students’ registration is clustered based on the individual needs. Clustering refers to the distribution of the students over the offered courses and may lead to enrollment concentration in some courses leaving others with low enrollment. Courses with low enrolments are vulnerable to cancelation at the end of the registration period leaving no time to perform additional advising, developing alternative plans, and no time to make such changes.

Based on the mentioned dilemma a new approach that could offer an early map of clustering and enough time to re-consult the advisor and change the pre-registered courses during the enrollment period is needed.

Literature review
Academic advising should be a collaborative process between the advisor and the student, helping students optimize their career paths and develop their decision-making skills (Mohamed, 2016). The quality of services offered by the university’s academic advising office is a contributing factor to the career path of the students (Abouchedid & Nasser, 2002). The accuracy of the selected study plan pathway is a critical factor to the students’ academic success (Coll, 2008; Van den Wijngaard, 2019). Because academic advising is a significant factor of students’ success, assurance of high quality advising is crucial (Young-Jones et al., 2013).

Van den Wijngaard (2019) characterizes advising as a “discipline in praxis”, emphasizing the impertinence of a scholarly approach and activity in academic advising praxis. While the study has identified the skills and competencies that academic advisors should have in order to practice efficient advising, it has not investigated the level of student satisfaction with regard to the advising process. Inconsistencies may arise from the personality variants of advisors that may differentiate the satisfaction levels. Complimentarily, Streufert, 2019 has investigated this area of research and found that the effort consuming process often leads to different levels of academic experience students receive from the advisors. In surveys related to the advising process, satisfaction was found to be related to the advisor’s skills, especially when students seek alternative pathways. Additionally, Pizzolatto (2006) had identified different advising styles that may lead to a divergent academic experience. All three authors have worked on the effect of the skills and styles of advisors in the advising process. These findings are significant since these advisor variants exist in the academic system yet consistency in the advising process remains a significant deficiency.

By 2000, the research focus shifted towards the creation of automated advising systems that ensure consistency in the advising process since all students experience the same style of the advising process. During the last two decades, several studies have identified the need for a normalized and automated process in advising using decision support systems, expert, knowledge management, and intelligent systems. Much of previous work was based on the design of rule-based systems for automated advising systems. Siegfried et al. (2003) identified the complexities of an advising system early on. Although they proposed an automated advising system that is performing adequately for a particular university their solution cannot be expanded or easily customized to meet the regulations and complexities of other universities. The absence of a “one-fits-all” advising system is also highlighted by the work of Iatrellis et al. (2019) who identified some complicated cases of student intensions to follow specific plans due to scheduling, prerequisites, and personal student profiles. At a later effort, Engin et al. (2014) proposed an Oracle-based expert system that recommends courses to undergraduate students and eligibility for scholarships. The findings of Siegfried et al. (2003), Engin et al. (2014), and Iatrellis et al. (2019), have all identified the complexities of advising systems, moreover, have not managed to provide a set of rules and regulations that are universally practiced across all higher education institutions. Perhaps the definition of such a basic regulatory framework could initiate s standard block of an automated advising system that can be adapted to meet the complexities of each academic institution.

Albalooshi and Shatnawi (2010) proposed a computerized advising system that recommends courses for registration based on the analysis of the university transcript. The proposed rule-based system may be useful as a generic framework that highlights the operational capacity of an automated advising system but undermines the complexities arising from complex situations. Decision support systems could provide adequate support to advisors. Aslam and Khan (2011), Werghi and Kamoun (2009) have worked on the usage of decision support tools for academic advising and suggested Decision Support Systems that provides an automated curriculum planning and scheduling of courses based on the input that students provide. Both systems used structures as decision trees, to mirror academic rules and prerequisite constraints. Laghari (2014) has presented an advanced solution using a Java-based automated advising system (called ACAS), as a decision support system in the student registration process. The work of Albalooshi and Shatnawi (2010), Aslam and khan (2011), Werghi and Kamoun (2009), and Laghari (2014) had a significant limitation by placing all the decision process on the student side eliminating the role of academic advisors.

Other previous studies were focused on knowledge management in the advising process. The knowledge that is gained during the advising process is a significant institutional resource to improve the curriculum and career path of the students (Laghari & Khawaja, 2012). As curriculum complexities increase with the offering of various specialties, the development of a web-based knowledge management system is discussed by Hwang et al. (2011) to simplify these complexities. The knowledge management system presents to the students appropriate academic resources and documents that must be read when they make decisions regarding their academic careers. In the same direction, Daramola et al. (2014), and Andrews and Tynan (2012) proposed a collaborative knowledge management system for advising sessions between faculty and students to optimize the path to graduation.

Laghari and Khawaja (2012), Hwang et al. (2011), Daramola et al. (2014) based their work on the management of internal knowledge that assimilates the distance learning trends in academic advising. Their work was complemented by researchers that incorporated external resources into the knowledge management process. Nguyen et al. (2021) have also developed a course recommendation system using data mining to automate and simplify the courses selection. The availability of a large volume data in advising repositories of the universities leads to the development of intelligent-based systems. These analytical systems are mainly focused on the utilization of advising data by the universities to improve curriculum design and course offering plans. Shatnawi et al. (2014) proposed an intelligent system that uses mining association rules in course offerings based on the selection of students during advising (Hou, 2017). The system improves the course schedule according to the analytics produced from the advising process. Using rule mining the systems analyses selected course’s aggregates from previous semesters and recommends course offering schedules.

Henderson and Goodridge (2015) discussed the development of an intelligent Java Web-Server application that uses intelligence from historical data to provide services in curriculum advising and status paths towards graduation. Data analytics are also used by Laghari et al. (2015) using Python to analyze decisions curriculum design. The course selections are stored to prepare the University for improving scheduling and curriculum design. Nwagu et al. (2018), Loukil et al. (2021) and Pechenkina (2017) have suggested an intelligent support system using analytics to support the advising process. These additive services become more significant to the hands of students with the advancement of mobile applications in education.

Although our literature review has received valuable input from earlier work in the area, there are no previous references in the research journals related to the blockchain application in the advising process because the blockchain application in education is extremely new (Grech & Camilleri, 2017). The work of Shatnawi et al. (2014) has introduced the notion of the mining process that is similarly used in blockchain platforms. This work has inspired us with the idea to use blockchain technology in the advising process using Ethereum, which is a blockchain generation platform. A blockchain is a peer-to-peer, shared, immutable, and distributed ledger that records transaction data and tracks assets (Patil & Puranik, 2019). Additionally, it is shared among all its members (students, advisors, chairs, data analysts). Assets could be physical, such as property, digital as a certificate, or a course registration as in the proposed advising system. Students’ registration in a course (more specifically the number of students currently registered in a course) is represented (updated) in a block, and it is broadcasted to all member nodes of the blockchain. When a consensus is met between all nodes and the new block becomes valid, it is added to the blockchain (Mselmi, 2020; Nakamoto, 2009; Patil & Puranik, 2019).

Solution through Blockchain technology
Blockchain is a new technology that may be used to create an effective advising system based on decisive preregistration process and decentralized consensus in advising data validation. In this study we refer to blockchain consensus as representing the block’s validity mechanism (Kundu, 2019), which is different from the same term used as a reference to the validated advising environment. Blockchain is a distributed peer-to-peer ledger (the chain) that could record advising sessions in the form of blocks (Christidis & Devetsikiotis, 2016). When a new advising session is initiated, it is broadcasted among the peers preserving the student’s anonymity. The blocks are shared among the participants to receive validity. The sense of trust is also enhanced by the immutability of blocks, where all transaction data are stored permanently and remain reputed. Accordingly, the proposed advising system complies with the set of criteria that define the blockchain use cases’ characteristics of the ledger, multiple writers, trust, disintermediation, interaction, controlled by rules, and have real-world value (Greenspan, 2015). The main objective of our work is to investigate the use of blockchain technology in the advising process by creating a use case, implement a testing application, and applying it to a sample of students to perceive the genuineness, uniqueness, and effectiveness of utilizing the blockchain system.

The proposed system
Background
Many fields of business that need tracing and/or group approvals based on contracts are now subject to reengineering using the relatively new blockchain technology. This work shows a hybrid case for a four tiers Study Planner and Scheduler system (SPS). SPS system is using the conventional three tiers (front end, domain, and back end) plus blockchain tier. Keeping the system working in the conventional environment with the well-known web servers will reduce the cost needed for transactions that make changes in data. This cost is paid in (gwei) which is a fraction of the (ether) cryptocurrency. The amount is called (gas) consumption and is only required for functions that need approval under the blockchain network. Gas refers to the transaction cost that a user needs to pay to the network miners for their computational efforts. Gas amount depends on the type and size of the transaction, for instance, more gas is required for transactions that need urgent confirmation. The idea of the SPS hybrid (centralized and decentralized) system is to retrieve the study plan template applied in the college of Business Administration of the university under study. One of the five programs’ plan is retrieved (Business Administration “BUSI”, Finance “FINA”, Accounting “ACCT”, Management Information Systems “MISY” and Human Resources Management “HRMT”) based on the major that is identified when the student logged in to the system successfully. When the plan is retrieved, a communication with banner data is established to identify and correctly highlight the completed and currently registered courses. It will also calculate and displays the number of the completed, currently registered as well as the number of credits left for the student to graduate.

The proposed approach is expected to deal with and circumvent the following problems:

Optimize and keep track of students’ courses selection path.

Control the number of credit hours that a student can select based on their CGPA.

Maintain a sort of contract that binds the students to their selected courses.

Avoid missing the opportunity of registering in a potentially running course.

Prevent closing of low enrolled courses at the last minute to put students in chaos.

Allow the administration/registration to offer any demanded course based on the students’ needs regardless of the offering semester. Dividing the courses over the two main semesters offer a chance for resources planning, but it should not be a limitation for institutions that are using credit hours. It is the student’s right to select any course he/she is eligible to take in any semester, but this is usually not the case due to resources constraints.

A blockchain network with its smart contracts comes here as a suitable solution. Under this solution, a student will see the number of students registered in the courses life and they can comfortably select those courses with high enrollments. They can also register in courses with low enrollments and monitor the number growing during the registration period. Students have the freedom to change their minds at any time and select another course/section with a satisfactory enrollment during the planning or registration period. Smart contracts are used to generate immutable records, for example, in our case a registration course list.

The proposed SPS system consists of several use cases to handle the various functions as shown in the following section.

System Interface
Let us look at the final product before going through its development life cycle. This approach will make the reader understand the analyses, design, and implementation phases appropriately.

Figure 1 shows a sample of the MIS plan for a randomly selected student. Courses that are completed (green), registered (yellow), selected (light blue), not yet completed (red), as well as those courses that the student has met their prerequisite(s) and is eligible to study next semester (purple) are marked appropriately (as shown in the legend).

Fig. 1
figure 1
Sample of a student study plan

Full size image
Each button in Fig. 1 shows the course Id followed by the number of the pre-registered students in the course. Let us take (BUSI 3321–11) as an example. BUSI 3321 represents the course Id and number (11) indicates that 11 students are currently pre-registered in the course including the current student (because it is in light-blue color). Course BUSI 3312–18 has 18 students but the current student is not registered, but eligible to select (color purple). Since one of the selected courses (PHED 1111–3) has a low tentative enrollment and is likely to be canceled, thus it would be a good decision for the student to replace it with BUSI 3312. Is it possible to do so within the constraint of a 15-credit limit? If we know that, the second digit of each course code represents the credit hours, therefore PHED 1111 carries 1 credit and BUSI 3312 carries 3 credits. This means we need two extra credits to be able to do such a change as restricted by 15 maximum credits enforced by the smart contract. Since the currently selected credit as shown at the top right corner in light blue is 13, then we have the margin of two extra credits. Therefore, the answer is yes it is possible to make such an update based on the status. Making such a change before the end of the registration period will guarantee the offering of the selected courses without falling into the trap of last-minute cancellation where almost all the other offered courses reached the maximum capacity. Having such a life updated map gives the students a unique opportunity to monitor, update and secure the offering of the selected courses when the schedule is constructed by the administration.

System analysis
The proposed SPS system consists of several use cases to handle the various functions as shown in the use case diagram (Fig. 2). Two primary actors (Student and College admin) are interacting with the system and one extra secondary actor (Banner-ERP) is needed. The latter is used to retrieve the students’ grades that are needed for most of the use cases.

Fig. 2
figure 2
Use case diagram for the Study Planner and Scheduler System

Full size image
The system is decomposed into several subsystems (or functions) which are called in the software engineering terminology as ‘use cases’. These use cases are triggered externally (by the actors), internally, or temporal (time-based triggers like timely report generation). However, most of the use cases shown in Fig. 2 are simple external events. To understand the functionality of each use case a glossary is formed in Table 1 that shows the description as well as the hosting platforms of each use case.

Table 1 Use cases (UC) description along with their hosting platform
Full size table
The base of the system was already implemented and used by the researchers as a personal desktop advising support tool for seven years. Its functionality was limited to one student at a time and not available to the students themselves. The existing system was modified to run on the internet and be available to the students. Ethereum layer was added to the three layers web-based platform for this research. The system design is detailed in this work to show the level of integration between the web and blockchain architectures. The platform column of Table 1 shows that data used in the conventional functions (such as registration and login) are stores in a centralized internet-based database to minimize the blockchain’s expensive storage. Other functions that need students’ entry recording and controlled by smart contracts are stored in the decentralized Ethereum blockchain network. However, the generation of the final schedule by the administrator uses the data stored in both centralized and decentralized storage.

System design
Figure 3 shows the design class diagram of the Study Planner and Scheduler System. A class is a blueprint or a template, contains attributes and methods, used to create objects. For instance, all form objects are instantiated from the Form class. The different objects are instantiated from the Course class that contains the course code, course name, current number of students registered in the course, and course credit hours as attributes. Methods are the functions that an object can perform such as increase or decrease the number of registered students. In the SPS system, a simple form (frmLogin) is needed for the students and administrators to log in. For the first entry, both students and administrators need to register in the system through the registration form (frmRegister) class that can be accessed through the login page. However, the administrator’s role has to be approved by the system’s owner. Form’s data are collected from Banner and carried through by (User) object. Student’s courses are retrieved and saved in SQL server through the Controller class using (MsSqlConnect) class that was developed to make the database manipulation easier to implement and reusable. Both (Course) and (StudyPlanGenerator) classes are contributing to the personalized plan courses integration. The above-mentioned classes participate in the creation of the plans’ forms highlighting the completed, registered, and eligible courses.

Fig. 3
figure 3
Class Diagram for the Study Planner and Scheduler System

Full size image
All the previously mentioned classes are used in the development of the conventional three tiers system (front end, domain, and back end) where the back end is located in the web-hosting server. The student then can click on any of the eligible courses to select them tentatively for the next semester. This process, as well as the update and delete, are performed within the Ethereum network based on a smart contract that permits the student to select the eligible courses and track any update or delete. The (BlockChain) class is shown in the class diagram representing the Ethereum network.

System implementation
The proposed system was implemented using ASP.NET as the core of the application. Students’ grade data are extracted from the banner system and loaded in a hosted MS server database, which represents the backend. C# code was used for the implementation of the software domain based on the class diagram shown in Fig. 3. A simple user interface was developed for the users to enter their student IDs. This ID is used by the domain layer to extract the student’s data from the database, manipulate it and display the student’s plan as in Fig. 1. The colors code was explained previously and a legend palette shows the colors keys and their meanings.

Most universities’ administrative applications run on a client-server or cloud centralized platforms. In our case, a hybrid blockchain architecture is proposed. It combines the immutability of smart contracts in blockchain with the efficiency in data management of a centralized ERP system. Wang et al. (2019) used a similar approach in their Internet of Things applications to handle a large volume of data with efficiency and minimum cost. How data are stored and manipulated in a blockchain application determines the degree of performance. Following the recommendations of Paik et al. (2019) and Herrmann et al. (2018), we have made a discrete layer of data for the smart contract in the blockchain and data flows from the centralized system to improve system efficiency.

The decentralized part of the application was implemented using Remix Ethereum Network (REN) using solidity language in writing the smart contract. When the user/student clicks, the buttons of any eligible course it makes contact with REN and MetaMask (added as an extension to Google Chrome browser) that popups up asking for permission to consume Ethereum gas. When the permission is granted the score of the clicked course is increased and displayed on the button caption and the purple color is changed to Aqua. However, if the Aqua button is clicked the opposite process is actioned where the course score decreased and converted to a purple color representing a delete process. Note that all courses selected by any given student/account are already stored within the student’s record for the student’s schedule (selected courses) whenever needed.

Methodology
A sample size of 108 accounts were created through MetaMask (Rinkeby Test Network) for students selected randomly from the MIS department. The selected students were from all the four academic levels (this is easy to find out because students’ IDs start with the joining year). The number of students selected for the experiment was based on the ratio of the distribution level as shown in Table 2. The maximum number of credit hours allowed for each student to register was restricted through the smart contract to 15 (five courses with three credits, or more if the course credits are lower) which represents the standard semester credits for an average student.

Table 2 Number of students selected for the experiment
Full size table
This limit could be made flexible in the future based on the student’s cumulative GPA and as per the University policy. Since each student has several combinations of eligible courses that he/she can select from, a small program was developed to extract courses from the eligible pool and within the 15 credits limit randomly. The selected courses are then registered through the Ethereum network to simulate the students’ selections. The payment method for the real blockchain transactions is through Ethereum coin Ether and is expected to be subsidized by the university as part of the inclusive services offered to the students.

The results produced from the proposed system need to be compared with other controlled data. Formal surveys were conducted before the beginning of the semester to get the students’ wish list of courses that are used partially for the courses selection and schedule. The survey was created using google survey form (one of the google docs) that lists the study plan courses for the major selected by the surveyed student. Multi-pages were used to direct the survey through the appropriate study plan. However, courses of a given plan were categorized (such as university, college or major required course, elective courses, etc.) with indication to the number of maximum credits/courses needed for each category. One of the summer school surveys with 113 participants was selected for comparison purposes. Google offers analysis of the survey responses through showing the total number (and percentage) of students registered in every course. These numbers represent the base of comparison with the experimental data produced from the proposed blockchain approach.

This research compares the experimental and controlled survey data through the model shown in Fig. 4, based on the questions listed below,

Q1: Is the number of credits selected by students within the recommended limit?

Q2: Is there any duplication in students’ courses registration?

Q3: Is the blockchain approach more effective than the conventional survey method?

Experimental results
Several types of charts were investigated to find the best one that could characterize the growth in the number of registered students for the courses over time. The RADAR chart type was found to present such growth as seen in Fig. 5. If we trace MISY 3321 (the outer blue line) for instance, it has crossed zone 5 when about 10 students have registered, zone 10 for about 20 registered students then zone 15 at 33, and 20 at 55 reaching 26 as a final number. The figure shows the Management Information Systems (MIS) plan including College of Business Administration (COBA) courses only. The representation of the entire plan’s courses that include preparatory, skills building, liberal study, etc. will not be of a noticeable difference, apart from the fact of being administered by other colleges.

Fig. 4
figure 4
Blockchain experiment versus the conventional survey comparison model

Full size image
Let us now look at the status when all the students registered tentatively. For the final stable standing of courses, a line chart is more suitable to represent the status as in Fig. 6.

Fig. 5
figure 5
Courses Registration Growth over time

Full size image
If we suppose that only courses having 10+ registered students can be offered, then 15 courses can be offered for the MIS plan. This signs 76 (26%) registration as failed attempts which means students were registered in courses with low numbers will lead to cancelation. The case will be worse if only those courses with 15+ students are planned to offer. In this scenario, more than half of the students will end up with failed courses (having many registered students below the threshold) as seen in Table 3.

Fig. 6
figure 6
MIS courses status after all the samples registered their allowed credits tentatively

Full size image
Table 3 Success and fail registration for thresholds 10 and 15 students
Full size table
Making current registration status available to the students and giving them a chance to amend their registrations will enhance the status. Adjusting the tentatively offered courses during the registration period could increase the number of successfully registered courses. After undertaking such amendments in the experiment, results shown in Table 4 were produced.

Table 4 Comparison between the success/fail registration cases before and after adjustment
Full size table
In Table 4, the number of courses having 15+ students was increased from 5 to 15 and the percentage of fail registration was dropped from 64% to 11%.

The system offers the students the freedom to change the courses selections based on the map of the number of students tentatively registered in the courses at any particular time. When the due time reached, the system stops the courses manipulation and send a message to the administrator showing the map of students’ number for each course. Such a map will help the administration to make the best possible decision to maximize the number of offered courses and sections with the optimum resources distribution and minimum (if ever) cancelation. This decision will meet the requirements of students who have already expressed their interest in the selected course that is going to make the schedule.

Benchmarking
The results produced from the experiments need to be compared with other controlled data. Formal surveys were usually conducted before the summer semesters to get the student’s wish list of courses that are used partially for the courses selection and schedule. The data are analyzed to answer the questions mentioned in the methodology.

Q1: Is the number of credits selected by students within the recommended limit?

The proposed system controls the number of credits registered by the students through smart contracts. On the other side, the survey had limited control over the number of credits that a student can pre-register. Despite the clear instructions to the surveyed students, more than 25% (33 out of 129) have selected more than the maximum credits.

Q2: Is there any duplication in students’ courses registration?

One record is expected from each student participating in the survey data, but the data shows 12.5% of them (16 out of 129) have recorded their interest twice. However, no duplicate is ever possible in the proposed experimental system due to the constraints enforced by the smart contract.

Q3: Is the blockchain approach more effective than the conventional survey method?

The data collected from the proposed system and the survey (controlled) are summarized in Table 5.

Table 5 Comparison between the results of the proposed system and the survey data
Full size table
The comparison of the results produced from the proposed system against the controlled group reveals that the percentage of genuine registration in the proposed system is significantly higher than the ones collected through the survey (p < 0.05, t = 1.849). This result leads to:

More students’ satisfaction for meeting their requirements.

More students’ commitments to their selection lead to better management planning.

Conclusions
Our work explores a research area that is still in its early stages, but it is a pioneering effort to explore the blockchain potential and create a seeding process for further exploration in the education sector. The major goal of this article is to explore the promising blockchain technology applied to the advising process. We present an innovative method of dealing with smart contracts as a preregistration data asset in the advising process that is a valuable resource in the discipline curriculum scheduling. Our work has also demonstrated how decentralization can be used in student advising proving audibility in the process. Our system adopted a hybrid approach in data management integrating client-server as an input inwards data into the blockchain application. It also spread management and responsibilities of the blockchain among the blockchain academic peers advancing the necessary synergy among structural academic functions and virtual networks to achieve consensus in the advising sessions. Furthermore, Ethereum smart contracts advanced the credibility of the outcomes of the advising process. The immutability of smarts contracts enhanced the trust and security shared among peers in our application. Our approach of developing a value creation model has received a positive emblem based on the results measured by our application since it encourages the students to participate in the advising peer-to-peer process. It not only creates an innovative operational model but also improves the efficacy of the advising process. The approach also provided a solution to the complexities raised in the advising process under a centralized structure, promising the development of more complex systems in the future in the education field.

Limitations and future work
Since blockchain-based advising is one of the new approaches, this promising work has an exploratory nature. Accordingly, several features that may be available or can be added to enhance the advising process are overlooked. However, the results proved the main concept and showed a margin for such additions. Institute policies and other rules and restrictions can be controlled through the smart contract.

Examples for the addition may include an opportunity for the users to view the status and select completed courses to repeat for a better GPA. The limitations of the current system to select a maximum of 15 credit hours can be more flexible depending on the student’s CGPA and based on the University policy. The system could also be improved to recommend the pivotal courses for the students to take first as a critical path. This may lead to semi-auto courses selection that only needs the user’s approval (or minimum modifications). Using such a potential system may lift the restrictions of dividing courses as fall or spring semester courses for better resources management. Lifting such restrictions will increase the students’ freedom in selecting the courses and semesters and shorten the study time if possible. Graduate students may have more privileges of having a couple of hours above the limit. Internship courses were exempted from this work experiment because it has special rules.

We conclude that blockchain smart contracts can be used to enforce the institution’s policies. As well as the advantage of the smart contracts, many opportunities for enhancement can the system have towards a fully or semi-automated validated advising.