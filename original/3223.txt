The lack of message encryption characterizing wireless avionic protocols, including Automatic Dependent Surveillance - Broadcast (ADS-B), recently favored the rise of a few communities that, gathering data collected by receivers at the ground or in space, offer advanced services, while at the same time releasing the cited data to the public.

In this context, hiding the location of an ADS-B receiver could be useful for several reasons, including military and privacy aspects. Therefore, taking into account these considerations, the data provided by a few antennas in one of the most popular crowdsourcing platforms, Opensky Network, are released removing any information that could lead to their direct location identification.

In this manuscript, we investigate the effectiveness of protecting location privacy in avionic crowdsourced networks. As a worst-case scenario, we demonstrate that, when a feasible number of receivers are deployed in the same area of a protected one, due to the nature of involved ADS-B data, standard time-based localization schemes can identify the location of any protected receiver. Our model, applied to real data, can identify the location of a protected receiver with an error ranging from 0.9 km to 2.6 km, depending on the target sensor—while the location uncertainty induced by the anonymization technique was expected to be of approximately 450 km.

Our findings, supported by an extensive experimental campaign run over real data, apply to a variety of potentially protected receivers. Moreover, we also provide effective countermeasures to increase receivers’ location privacy. Finally, we discuss the trade-offs implied by the cited countermeasures, showing that it is possible to increase location privacy while not decreasing data utility.

Keywords
Crowd sensing and crowd sourcing
Location management
Security and privacy

1. Introduction
Modern commercial and military aircraft nowadays adopt several wireless technologies to exchange information, to perform fine maneuvers at the landing time, as well as to allow remote tracking and monitoring from ground base stations (Strohmeier et al., 2014), (Strohmeier et al., 2017). To name a few, such technologies include the Secondary Surveillance Radar (SSR), used mainly by ground station to request additional information from the aircraft, the Traffic Collision and Avoidance System (TCAS), used to avoid aircraft collisions, and Automatic Dependent Surveillance - Broadcast (ADS-B) (Schäfer et al., 2019). In particular, thanks to ADS-B, the aircraft can convey position and velocity information, and its integration has become mandatory within all the aircraft flying in most of Class A, B, and C air-spaces, starting from the year 2020 (Strohmeier et al., 2018a). Being conceived at the end of the 1980s, with message availability as the only core part of the design, the afore-mentioned technologies usually deliver messages in clear text, without any authentication or encryption security protection (Strohmeier et al., 2015a), (Sathaye et al., 2019a), (Sathaye et al., 2019b), (Smith et al., 2018).

In the last decade, the lack of any encryption mechanism in ADS-B messages originated by aircraft has triggered the rise of a few open and private avionic communities, dedicated to the collection of such messages (Moser et al., 2016). Successful examples include FlightRadar24 (Flight Radar 24, 2020), FlightAware (FlightAware, 2020), PlaneFinder (PlaneFinder, 2020), adsbexchange (S-xchange, 2020), and Opensky Network (Opensky Network, 2020), to cite a few (Schäfer et al., 2014). These communities are based on a set of ADS-B receivers spread at the ground level and recently on LEO satellites, continuously gathering data and providing them to dedicated collection servers via regular Internet connections (Strohmeier et al., 2019). Thanks to the collected data, these platforms can provide advanced services, such as aircraft tracking, route control and verification, and aircraft delay prediction. In a few cases, such as with adsbexchange and Opensky Network, the collected data are also released to interested parties, and can be used to push companies and research communities toward the development of innovative techniques and services.

In this context, Opensky Network stands out among the others, since it has been conceived on purpose for the air traffic research community (Strohmeier et al., 2015b). As of January 2020, Opensky Network includes more than 2500 receivers, deployed over 190 countries worldwide. Besides, data released to the research community have been used in several scientific contributions in the avionic systems area (Schäfer et al., 2018) (see Section 3 for an overview).

An interesting functionality offered by Opensky Network consists of protecting the privacy of the location of contributing receivers, thanks to the provisioning of an anonymity feature. When such a functionality is activated by the user operating the particular ADS-B receiver, the location of the contributing receiver is protected, by nullifying all the information that would allow the straightforward identification of the location of the receiver, such as the latitude, longitude, and altitude geographical coordinates, as well as the values of the Received Signal Strength Indicator (RSSI) of the packets received from the emitting aircraft on the particular receiver. Throughout this paper, we refer to these receivers as protected.

Protecting the location of a receiver could be useful for several reasons. To provide a few examples, ADS-B receivers deployed in specific locations could be able to detect sensitive events, e.g., the presence of a military base, unauthorized invasion of air-spaces, or the violation of regional restrictions imposed on specific flights. These motivations could definitively trigger adversarial entities to roughly localize the sensor and physically remove it.

Our contribution. In this paper, we review, improve, and extend our recent contribution (Sciancalepore et al., 2019a), showing that the current strategies deployed to protect the location of contributing receivers in one of the most popular avionic crowdsourced networks do not fully accomplish their aim. As a worst-case scenario, we show that, under suitable conditions, the location of a protected receiver can be revealed from the disclosed data with remarkable accuracy, using customized time-based location estimation techniques. To achieve this goal, the strategy described in this paper needs only the following: (i) the location of ADS-B receivers deployed in the same area of the protected one, but that disclosed publicly their location; (ii) the timestamps of the messages emitted by aircraft equipped with ADS-B, and received on all the sensors in the same geographical area; and, (iii) the position of the aircraft delivering the messages, that is provided within the ADS-B messages. We show that a customized location estimation technique rooted in a Least Squares (LS) estimator, combined with dedicated data cleansing operations, can be applied to identify the position of the protected receiver, reporting location estimation errors not exceeding few tens of meters in controlled scenarios. To provide further insights, we also applied the devised strategy on experimental data, freely-available from the Opensky Network avionic crowdsourced platform, achieving a location accuracy of a few hundred meters. If desired, these results further enable the identification of the specific location of the receiver with a little additional effort, e.g., through a physical follow-up inspection in the identified area (ADS-B receivers are located outdoor, with clear sky visibility, and thus they do not require indoor inspection). Overall, our investigation demonstrates that, under realistic conditions, providing full location privacy to receivers in avionic crowdsourced networks cannot be fully achieved, the current settings withstanding.

To solve the above issue, we illustrate and study three different countermeasures that can be provided by operating entities to improve the location privacy of contributing receivers. We show that the following countermeasures: (i) smartly corrupting the reception timestamps provided by the protected receivers; (ii) nullifying them; and, (iii) deploying multiple protected receivers in the same geographical region with a common identifier, are all effective strategies—with different trade-offs—to increase the receivers’ location privacy, while minimally decreasing the value of the provided data.

We remark that this contribution does not aim to provide a brand new localization algorithm. Instead, we customize and apply a localization algorithm based on the Time Difference of Arrival (TDoA) strategy, to reveal a potential weakness in the current operation mode of popular avionic crowdsourced networks, and we show how such vulnerabilities can be fixed by operating entities through sound and viable techniques. In addition, we remark that the identification of the specific issues motivating receivers to provide data to the community, while maintaining their location privacy, is outside the scope of our work. Indeed, we aim at investigating the research problem related to the degree of location privacy that can be provided in such a setting, and the countermeasures that can be deployed to increase the location privacy of contributing receivers.

Compared to the preliminary version of our work presented in (Sciancalepore et al., 2019a), the following novel contributions are provided in this manuscript:

-
Analytic Model Improvement. In this extended version of the paper, we have refined the analytic model of the location estimation technique, including considerations about the lack of perfect synchronization among receivers (see Section 5).

-
Novel Simulation Results. In this extended version of the paper, we provide new results, specifically about the minimum number of public receivers to be deployed around the protected receiver to obtain meaningful position estimation of the cited protected receiver. The above considerations are key to understand the performance of our experimental evaluation on real data (see Section 6.1).

-
Enhanced Experimental Performance Assessment. In this extended version of the paper, we enhanced significantly our experimental performance evaluation. First, focusing on the same receiving sensors tackled in our conference paper, we improved the location accuracy achieved via the proposed technique, resulting in an error that, in 90% of the cases, is less than 1 Km—in our previous results we had a bound of 4 Km. Further, we demonstrated the reproducibility and global validity of our results, applying our technique on two additional receivers in the same area. We achieve a remarkable accuracy in locating protected receivers, even in the case the airplanes considered in the location estimation technique are not uniformly distributed around the receiving sensor. Specifically, for another sensor located within an area of size 45 × 45 km, we obtained a location error that, in 90% of the cases, is less than 650 m, while, for a sensor located at the boundary of the perimeter, where the distribution of aircraft is not perfectly uniform around the sensor location, in 90% of the cases the error is less than 2.6 Km (see Section 6.2).

-
Countermeasures. In this extended version of our conference, we propose and validate the effectiveness of several different countermeasures to protect receivers' privacy. We investigate the effectiveness of the proposed countermeasures using real data available from the Opensky Network crowdsourced platform and, for each solution, we also describe the pros and cons (see Section 7).

Finally, we highlight that our findings have been already notified to the Opensky Network platform. The owners of the platform have now clarified that: “despite the fact that this is prohibited by the terms of use, it is fundamentally not possible to fully prevent reverse engineering of the receiver location based on its data”.

Roadmap. The rest of the paper is organized as follows: Section 2 introduces background details on the ADS-B communication technology and its relationship with open crowdsourced communities such as Opensky Network; Section 3 summarizes related work; Section 4 depicts the system and the adversary models assumed in this work, along with necessary preliminary assumptions. Section 5 illustrates the logic of the location estimation strategy, while Section 6 provides an extensive performance evaluation of our strategy, using both synthetic and real data. Section 7 illustrates the countermeasures useful to improve location privacy of protected receivers, by showing their effectiveness on real data; related trade-offs are also discussed. Finally, Section 8 concludes the paper.

2. Background on ADS-B
ADS-B has been conceived in the late 1980s, to provide the aircraft with a communication technology to autonomously broadcast identification and position information, without waiting for dedicated signals from base stations located at the ground. However, the interest in this technology is raising only in the last decade, mainly due to the regulations imposed by the International Civil Aviation Organization (ICAO), that has forced its integration in the large part of aircraft flying in Class A, B, and C airspaces of the US and EU by the 2020 (Strohmeier et al., 2015a), (Kacem et al., 2018).

The ADS-B transponder installed in an aircraft mainly consists of two parts. The first one is a Global Navigation Satellite System (GNSS) receiver, continuously acquiring the position of the aircraft using the signals emitted by dedicated satellites. The second one is an ADS-B transceiver, that periodically broadcasts the position and the identification data of the aircraft. Therefore, any entity equipped with a compatible receiver (being either on the ground or over the air) can receive the messages. This operational mode is referred to as ADS-B OUT, and it is the one whose integration is mandatory by 2020. According to an additional operational mode, referred to as ADS-B IN, aircraft can also exchange messages, improve situation awareness, and autonomously regulate self-separation. However, at the time of this writing, the integration of ADS-B IN capabilities is not mandatory, representing still an optional capability (Strohmeier et al., 2017).

ADS-B messages are emitted on the 1090 MHz frequency band, referred to as 1090 MHz - Extended Squitter (1090 ES), using a Pulse-Position Modulation (PPM) modulation scheme where each pulse lasts for 1 μs (Calvo-Palomino et al., 2018). Along with the very high transmission power of the aircraft (up to 500W), this contributes to creating a very large transmission range, that in practical conditions easily reaches 450 km. The messages are characterized by a very limited size, of only 112 bits. The fields of a regular ADS-B message are summarized in the following Fig. 1.

Fig. 1
Download : Download high-res image (179KB)
Download : Download full-size image
Fig. 1. Standard data organization in ADS-B messages.

Any ADS-B message dedicates 24 bits to the identification of the emitter of the message, reporting its ICAO address, assigned by the ICAO when the transponder is installed in the aircraft. Overall, we can notice that only 56 bits are available for data, and the nature of such data varies according to the specific message type. A message could carry position information, or velocity information, or other data related to weather conditions.

We notice that ADS-B messages report the position according to the well-known CPR format, using 34 bits each for the latitude and the longitude. Therefore, given the limited available payload size, two ADS-B messages are required to completely deliver the position. These two messages are called the odd and the even message, respectively.

Looking at the previous Fig. 1, it also emerges that ADS-B messages do not include any security feature. While a huge amount of contributions already identified and tried to address these shortcomings from a network security perspective (see, for instance, our recent contribution in (Sciancalepore and Di Pietro, 2019) and the survey reported in (Strohmeier et al., 2015a)), the availability of plain-text messages allows any-one equipped with compatible equipment to receive the messages, and to build customized services using the received data.

In this context, fully-private companies (PlaneFinder, FlightAware) and open-participation initiatives, e.g., FlightRadar24 and Opensky Network, have been established, to continuously collect data delivered from the aircraft (Schäfer et al., 2014). In the following, we focus on the Opensky Network community, operating from 2014, and actively releasing data to researchers worldwide for validation and experimentation activities (Schäfer et al., 2018).

The released data contain the following information:

∙
SensorType, identifying the manufacturer of the specific ADS-B receiver;

∙
sensorSerialNumber, uniquely identifying the receiver (note that this field reports a negative number in the receiver activates the anonymity feature);

∙
SensorLatitude, providing the latitude coordinate of the ADS-B receiver;

∙
SensorLongitude, providing the longitude coordinate of the ADS-B receiver;

∙
SensorAltitude, reporting the elevation of the receiver;

∙
timeAtSensor, reporting the reception timestamp, in seconds;

∙
timestamp, reporting the hardware reception timestamp, in nanoseconds;

∙
timeAtServer, reporting the timestamp of the reception of the message on the servers of the community, in seconds;

∙
rawMessage, providing the binary payload of the received ADS-B packet;

∙
RSSIPacket, providing the RSSI of the ADS-B packet at the receiver;

∙
RSSIPreamble, providing an estimation of the RSSI of the messages, computed over the preamble of the message;

∙
SNR, providing the Signal to Noise Ratio (SNR) of the message at the receiver.

A distinctive feature supported by Opensky Network is the possibility to hide the location of the receiver in the data disclosed by the community. When such a feature is desired, the contributing receiver can activate a functionality called anonymity (as reported by the website). Activating this function, the location of the receiver is hidden from the data by eliminating, for each of the entries provided by the receiver, the data referred to the latitude, longitude, and altitude of the receiving sensor, as well as any field related to the RSSI of the packet.

An open question is related to the reason the community does not hide completely these data in the files released to the public, instead of releasing them with the above-highlighted modifications. We can guess that the reason behind this choice is in the usage of the data itself. In many locations, there are very few receivers to cross-check information and verify the performance of the devoted techniques, and therefore the semi-anonymized data provided by these receivers are inalienable.

At this time, the anonymity functionality is not provided by other similar communities, such as adsbexchange— this latter one allowing the full download of the data .1 We highlight that this fact does not decrease the significance of the topic, as future businesses based on the release of ADS-B data could claim the ability to hide the location of a receiver based on the same mechanisms currently in place, but failing in fully achieving the objective.

We stress that protecting the location of an ADS-B receiver could be reasonable due to several motivations. For instance, sensors deployed close to borders between neighboring countries could sense events taking place in other countries, where the deployment of an ADS-B receiver is not allowed by region-specific regulations. Moreover, ADS-B receivers located in specific regions could detect sensitive events, such as aircraft movements in a military base and the violation of air-spaces restrictions, thus motivating the adversaries to locate and shut them down. Finally, the entity operating the receiver could decide not to reveal its position, being afraid of tampering and physical damages.

As of January 2020, 80 over 979 online receivers (8.17%) have opted-in for protecting their location.

3. Related work
Several research contributions in the last years used experimental aircraft data released by the Opensky Network community to test and validate valuable research ideas. These works include not only aircraft localization and path verification, but also meteorological considerations and privacy issues. A few examples include (Sciancalepore et al., 2019b), (El Marady, 2017), (Baker and Martinovic, 2016), (Gökgöz, 2018), (Hurter et al., 2019), (Liu et al., 2019), (Sciancalepore and Di Pietro, 2019), (Weinert et al., 2019), (Trüb et al., 2018), (Strohmeier et al., 2018b), and (Martínez-Prieto et al., 2017).

The localization strategy customized and applied in this paper is inspired by traditional localization schemes based on multi-lateration techniques. We notice that these approaches have been already used in the context of avionics communication networks, but with a different system model and objective than the ones considered in our paper. For instance, the authors in (El Marady, 2017) applied a time-based multi-lateration technique in a framework fusing ADS-B data and other aircraft-related information, intending to verify the track of an aircraft. Similarly, the authors in (Baker and Martinovic, 2016) applied the time difference of arrival (TDoA) technique to verify the position emitted by an aircraft via the ADS-B system, considering a fixed and a mobile receiving node as reference anchors of system. A grid-based localization approach has been recently proposed by the authors in (Strohmeier et al., 2018a), where the k-nearest neighbor (k-NN) algorithm has been used to assist the traditional MLAT approach and overcome its weaknesses. It is also worth to note the approach by the authors in (Schäfer et al., 2016), using the Doppler effect to verify that the source of an ADS-B signal is moving, and verify its claimed track. Compared to these valuable approaches, the system model and the objective of this paper are different. Indeed, we aim to localize a completely-passive receiver, leveraging both the information of the airplane and similar information from other ADS-B receivers in the area. This scenario is also different compared to classical auto-localization approaches such as the one applied in the GPS, using dedicated signals to enable the localization. Another recent contribution is the work by the authors in (Darasbeh et al., 2020), where the authors investigate the effectiveness of integrity verification on ADS-B messages thanks to a network of fully passive sensors on the ground, demonstrating that, conversely to multi-lateration techniques, a single ADS-B receiver can be used to verify the trustworthiness of the messages. Recently, the authors in (Calvo-Palomino et al., 2020) demonstrated that ADS-B signals could be used also for GPS spoofing detection, leveraging low-cost receivers for signal reception, as well as the combination of Doppler shift and ad-hoc deep learning techniques for anomaly detection. The usage of ADS-B signals for GPS spoofing has been discussed also by the authors in (Liu et al., 2020), that exploited the RSSI and the reception timestamps of ADS-B messages on multiple receiving stations to train a machine learning framework that can detect the real position of an aircraft, as well as to identify GPS spoofing attacks. Note that, in principle, also the GPS spoofing detection techniques adopted in (Oligeri et al., 2019) and (Oligeri et al., 2020) could be used in our same context to identify the location of the receiving anchor. However, they are used in a different context (mobile receiver GPS spoofing and vessels location estimation). Also, the authors in (Kamsing et al., 2020) used ADS-B data provided by the Opensky Network to verify the trajectory of airplanes passing through a local airport. To this aim, they used statistical clustering methods, such as Gaussian mixture and K-mean clustering.

We remark that this work aims to investigate the location privacy of an ADS-B receiver, by obtaining a rough location estimation of the location of the receiver, leveraging only publicly-available noisy traces. Therefore, even if the system model considered in this work is similar to the previous ones, the objectives are different.

A summary of the features of the above-discussed works is reported in Table 1, showing also the differences of the cited works compared to our contribution.


Table 1. Summary of Features and Differences of our solution and recent contribution on Aircraft Localization.

Ref.	Localization Target	Input Data	Receivers Dynamicity	Best Receivers Selection
El Marady (2017)	Aircraft	Messages timestamps	Static	×
Baker and Martinovic (2016)	Aircraft	Messages timestamps	Mobile	×
Strohmeier et al. (2018a)	Aircraft	Messages timestamps	Static	×
Schäfer et al. (2016)	Aircraft	Messages frequency of arrival	Static	×
Darasbeh et al. (2020)	Aircraft	Messages information	Static	×
Calvo-Palomino et al. (2020)	Generic	Messages information	Mobile	×
Liu et al. (2020)	Aircraft	Messages arrival times at server and RSSI	Static	×
Oligeri et al. (2019)	Generic	Messages information	Mobile	×
Oligeri et al. (2020)	Generic	Messages information	Mobile	×
Kamsing et al. (2020)	Aircraft	Messages timestamps and information	Static	×
Jansen et al. (2018)	Aircraft, UAV	Messages timestamps and information	Moving	×
Eichelberger et al. (2017)	Generic	Messages timestamps	Static	×
This paper	Protected Receiver	Messages timestamps	Static	✓
We notice that most of the above-discussed contributions focused either on aircraft location verification or motion verification, using ADS-B timestamps, frequency of arrival, and packets information. We also highlight that, at a cursory analysis, the issue identified in this paper could appear to be solvable, in principle, using strategies that are similar to the ones proposed in other papers, such as (Jansen et al., 2018), (Eichelberger et al., 2017). However, it should be noted that, on the one hand, the objectives of the cited works are different than the one tackled in this paper—they mainly refer to the usage of ADS-B signals as a replacement to GNSS. On the other hand, we notice that the scenario tackled in our paper is completely different than the one in (Jansen et al., 2018) and (Eichelberger et al., 2017), (Oligeri et al., 2020) and (Oligeri et al., 2019), as well as other time-based or message-based localization techniques. Indeed, the authors of the cited works have full control over the deployment, and they could select the ADS-B receivers placed in the best location, where the effects of interference and multipath could be best mitigated. Conversely, we do not control the protected receiver, and we have to deal with undesired effects such as interference, multipath, and sub-optimal deployment. Hence, the solutions in the cited papers do not find a direct application in our context. Moreover, we stress that our paper aims to provide evidence that, even in the worst-case scenario where data are very noisy, the location of a protected receiver could be revealed with reasonable accuracy. The application of other methods to the same problem could achieve even better results, strengthening the claims reported in this paper. However, this is not the scope of this paper. For the sake of completeness, in Section 6.3 we will report a comparison between the proposed technique and the WCL technique, used by the approaches in (Oligeri et al., 2020) and (Oligeri et al., 2019) for GPS spoofing detection.

Finally, with reference to the vast amount of the current literature about the lack of location privacy in crowdsourcing applications, such as (Boukoros et al., 2019), (Shokri et al., 2011), (Zakhary and Benslimane, 2018), (Sun et al., 2017a), and (Sun et al., 2017b), our paper provides new evidence that full location privacy in the ADS-B scenario is not available, even if some lightweight countermeasures can be deployed to increase the effort of the attacker in determining the location of a contributing receiver.

Overall, together with our preliminary conference contribution in (Sciancalepore et al., 2019a), this paper is the first one to consider and analyze location privacy issues in a crowdsourced avionics network, as well as to provide methods to enhance the privacy of the receivers.

4. Scenario and adversarial model
This section introduces the scenario assumed in this paper and the features and tools used by the adversary to spot the location of protected receivers. Specifically, Section 4.1 introduces the model of the system and the assumptions, while the adversarial model is presented in Section 4.2.

4.1. Reference scenario and assumptions
We assume that K ADS-B receivers, also referred to as sensors, are deployed over a specific area. Each receiver is equipped with an omnidirectional ADS-B antenna, thus being able to detect and decode ADS-B messages emitted from the aircraft in the area. We assume there are N aircraft, each of them emitting M ADS-B messages, that could be received by the K receivers on the ground. Note that despite our scenario explicitly refers to manned aircraft, it is further extensible also to unmanned aerial vehicles, due to the recent integration of ADS-B capabilities on-board (Alzahrani et al., 2020). The data sensed by the receivers are then delivered via a dedicated connection to the servers of a crowd-sourced platform, offering dedicated services over the data and releasing them to interested parties. We also assume that  receivers share their location, being public receivers, while the remaining one, namely the protected receiver, activates the anonymity feature offered by the crowd-sourced platform to hide its location. Note that the protected receiver actively takes part in the system, by providing all the data to the servers of the crowdsourced platform. Then, the server protects its location by hiding the data regarding its latitude, longitude, altitude, and the estimates of the RSSI.

In line with the information provided by an ADS-B message, we assume that the location of an aircraft at the time when the message is emitted is well-known. It is worth to highlight that the N aircraft do not need to be located in the scenario all at the same time, but they can appear in the area at a given time and then disappear later on.

Also, our model assumes that the ADS-B receivers are synchronized, up to a factor φk, representing its time shift to an ideal reference clock. This assumption is in line with the current deployment of the system, where the ADS-B sensors are loosely time-synchronized thanks to an Internet connection and the UTC source.

Besides, we assume that the reception timestamps are affected by measurement errors, that are independent and identically distributed (i.i.d.), with mean value 0 and variance 
. These assumptions are in line with practical operational conditions of the ADS-B receivers, since the receiving devices are commercial-off-the-shelf (COTS) devices, with a time accuracy limited by the rate of the ADC and the resolution of the internal clock (Ricciato et al., 2018). Overall, this assumption is conservative and represents the worst case.

Our scenario assumes a Line Of Sight (LOS) propagation model between the receivers and the aircraft. This assumption is reasonable when applying time-based localization techniques on avionics data, and it is motivated by the specific deployment of the receivers, positioned at elevated locations, characterized by a clear view of the sky (Strohmeier et al., 2015c), (Strohmeier et al., 2018a).

We remark that identifying (even roughly) the specific location of one particular receiver is not easy, despite the data provided by the selected crowdsourced community can be used to have an idea of the area where the protected receiver is deployed. Indeed, the environment where the specific receiver is deployed could be affected by several disturbance effects, such as the deployment of massive man-made constructions or high mountain ranges. These factors can change the profile of the receiving range of the sensors along specific directions, complicating the understanding of its location and compromising the effectiveness of trivial estimation techniques, such as the ones based on the computation of the centre of the locations of the detected airplanes (more details about these considerations will be provided in Section 7).

Finally, we highlight that the anonymity functionality provided by the reference crowdsourced platform Opensky Network has been conceived to ensure the receivers’ location privacy, and not to protect their unique identifier (i.e., to guarantee their anonymity). Despite these problems are strictly related, they become different when a given number of sensors are deployed in the same region: in this scenario, the scheme discussed in this paper can reveal the location of the sensors, but not infer any useful information about their identity (see Section 7 for more details).

4.2. Adversary model
We hereby describe the adversary model assumed in our work identifying, in line with the actual literature, the capabilities, the assumptions, and the goals of the adversary (Do et al., 2019).

Assumptions. We assume the adversary ε features an Internet connection, used to access to the online database of the Opensky Network community. We also assume that ε has a registered account, used to access the services provided by Opensky Network. We remark that, despite the access to the database could require an account, this does not compromise the stealthiness of the attack. Indeed, the revelation of the location of a receiver does not directly lead to the account of the eavesdropper.

Capabilities. The adversary ε assumed in this paper is a global eavesdropper, not emitting any ADS-B message on the wireless channel. Indeed, it stays stealthy, by simply connecting to the online platform of the crowdsourcing community. In line with the adversary models used in the literature (Do et al., 2015), we define the following capabilities.

∙
Copy. This capability allows ε to download a copy of the database 𝓓 of Opensky Network, available online free or on a registration basis, and retrieving the data about the ADS-B messages collected by the receivers affiliated with the community. The information contained in the database is composed of the fields reported in the following Eq. 4.2:

𝓓
 
where stpi is the sensorType field of the i-th packet, IDi is the sensorSerialNumber field, slati is the sensorLatitude field, sloni is the sensorLongitude field, salti is the sensorAltitude field, tssi is the timeAtSensor field, tsi is the timestamp field, tsvi is the timeAtServer field, msgi is the rawMessage field, rpki is the RSSIPacket field, rpbi is the RSSIPreamble field and, finally, snri is the SNR field.
Note that The data collected by the adversary include the location and data sensed by public ADS-B receivers (not protecting their location), as well as the data sensed by the protected receivers, that opted-in for having their location private.

∙
Deploy. In addition, when required, the adversary ε could also deploy on purpose additional ADS-B sensors, and register each of them to the avionics community. These new sensors will be characterized by unique values of the fields stpi, IDi, slati, sloni, and salti. This active feature could be useful in scenarios where the target protected receiver does not have a sufficient number of receivers in the neighborhood to launch the attack described in this paper. Note that this is not a limitation of the attack, as avionic crowdsourced communities are always looking for new contributors to extend the reach of their services.

Goals. The adversary ε aims to reveal the rough location of a protected receiver, namely xn, i.e., one of the sensors that hid its location. To this aim, ε uses the latitude and longitude coordinates of the sensors that did not opt in for the protection of the location, i.e., the values of slatn, slonn, and saltn, s.t. n ∈ N, and the timestamps and time at sensor fields of the packets received by all the involved sensors, i.e., tssi and tsi.

Finally, we highlight that the adversary could easily identify the receivers that are deployed around the protected one, by simply looking at the geographical distribution of the locations reported by the aircraft. Roughly, these locations will be distributed inside a circle-shaped area, and partially overlapping analogous circles identify receivers that are deployed in the same area.

5. Locating ADS-B receivers
This section illustrates the model and the mathematical logic of our location estimation strategy. Specifically, in Section 5.1 we provide the logic of the LS estimator, which is the main building block of our technique. Then, section 5.2 describes the complete location estimation strategy, as well as the details of the cleansing and refinement operations on the data. We report the main notation used in this manuscript in the following Table 2. Note that we use lower-case symbols for scalar values, while boldface lower-case letters designate vectors.


Table 2. Notation summary.

Symbol	Description
K	Total number of ADS-B receivers in the scenario.
N	Total number of ADS-B messages delivered by each aircraft.
M	Total number of aircraft in the scenario.
Kn(m)	Number of ADS-B receivers correctly decoding the message m delivered by the aircraft n.
Rkn(m)	Reception timestamp of the message m delivered by the aircraft n and detected by the receiver k.
tn(m)	Reception timestamp of the message m delivered from the aircraft n.
dkn(m)	Euclidean distance between the ADS-B receiver k and aircraft n, computed at the transmission time of the message m.
pk	3-D position of the receiver k.
pn(m)	3-D position of the aircraft n at the time instant when the packet m has been emitted.
φk	Time shift between the local clock of the receiver k and an ideal reference absolute clock.
gkn(m)	Gaussian noise factor affecting the measurement of the timestamp of the packet m transmitted by the aircraft n and decoded by the receiver k.
It is worth noting that the location estimation scheme discussed in this paper has been inspired by similar time-based localization techniques discussed in (Ricciato et al., 2018) and (Ricciato et al., 2016). However, there are some differences both in the system model and the particular application of the two strategies. Indeed, while the reference papers considered a 2-D localization scenario and devised a 2-D localization strategy, in this paper we extend the model to a 3-D scenario, modifying accordingly the LS model (see Section 5.1). Besides, the reference paper considered the distributed localization of an active moving entity, emitting messages, thanks to a ground-based infrastructure deployed on purpose. In this paper, conversely, the problem is to localize a completely-passive receiver, leveraging only the data it sensed and reported to a centralized server.

We stress that the aim of this paper is not to provide a brand new localization algorithm, as several different strategies can be used to solve this specific problem, possibly leading to performances that are even better than the ones achieved in this paper. Conversely, our paper aims to investigate the degree of privacy that can be provided to participating sensors in avionics crowdsourced communities, to prove that the actual settings cannot fully achieve this objective, and to propose effective countermeasures to increase location privacy.

5.1. The least-squares estimator
Considering the notation summarized in Table 2 and the assumptions described in Section 4, the reception timestamp of the packet m delivered by the aircraft n and received on the receiver k can be expressed as in reported in Eq. (1):(1)
 

where dkn(m) = ‖pk −pn(m)‖ is the euclidean distance between the receiver k and the aircraft n at the time instant where the packet m is has been emitted, c is the speed of light, and φk, accounts for the delay between the clock of the generic receiver k and an ideal absolute reference clock. Note that, while the terms pn(m) are well-known, the terms pk are known only for the  receivers whose position is public, while they are unknown for the receiver k, that activated the anonymity option.

Thanks to Eq. (1), the problem can be cast into a non-linear LS form. With the aim of reducing numerical errors, we recenter the timestamps for each packet m around the reference time R1n(m), and re-scale all terms by the speed of light c (James et al., 2013). To this aim, the new terms reported in the following Eq. (2a), (2b), (2c), (2d) are introduced.(2a)
≝
 
(2b)
≝
 
(2c)
≝
(2d)
≝

Considering the above variables, Eq. (1) can be re-formulated as in the following Eq. (3):(3)

Further elaborations of Eq. (3) lead to the following Eq. (4):(4)

We recall that the terms in the vector 
 can be obtained directly from the data, and the same is valid for the terms pn(m). Considering the left side of Eq. (4), the variable 
 can be considered a constant value, summing up to the local value of the noise 
. Thus, from now on, it can be discussed as a unified error term 
, considering both the errors due to the de-synchronization and the wireless channel unpredictability, as in Eq. (5).(5)

To ease the notation, we indicate all the variables of interest (i.e, the unknown variables) with the vector. 

We highlight that the set of unknown variables minimizing the estimation errors in Eq. (4) are coincidental with the ones that can be obtained by extracting and applying the negative log-likelihood function to the same equation above. Therefore, we can express the negative log-likelihood function as:(6)
 
𝓐

Note that, besides the variables of interest for our problem, that are the 3-D coordinates of the protected receiver, also the transmission timestamps of the aircraft are unknown. Therefore, the direct resolution of Eq. (3) would require the estimation of a total number of 3 + M ⋅ N unknown variables, including the x-y-z coordinates of the protected receiver, and M timestamps for each of the N planes considered in the scenario.

However, it is possible to get rid of the M ⋅ N transmission timestamps by taking into account the pairwise differences between the reception timestamps on the receiver. Specifically, for a generic packet m sent by the aircraft n, consider the reference receiver 
 and another receiver 
, and denote the difference between their respective time-of-arrivals residuals by:(7) 
≝
 

In the following, we select the reference receiver as 
, i.e., the reference receiver is selected as the unknown receiver. This modification allows us to neglect all the pairwise differences computed on the public receivers, as they are constant values that only introduces numerical inaccuracies. Therefore, only the terms that include the unknown variable are considered in the equation from now on.

We highlight that this formulation of the problem introduces non-independent error terms, that must be included in the expression of the generalized LS form through a non-diagonal covariance matrix, hereby denoted as Σm. In the scenario under investigation, the covariance matrix is characterized by a simplified structure, independent of the particular reference receiver, with diagonal elements having a value of 2 and off-diagonal values set to 1. The interested reader can refer to (Ricciato et al., 2018) for more details.

To sum up, the following Eq. (8) illustrates the final form of the LS estimator:(8) 
 
 
𝓐
 
 
𝓐
 
 

where Kn(m) refers to the number of receivers that successfully received the m − th packet sent by the n-th aircraft. With the formulation in Eq. (8), the dimensionality of the search space has been drastically reduced to 3, i.e., only the variables of interest for our problem.

Besides being the core building block, the LS estimator described above represents only a component of the overall location estimation technique, and it should be integrated with appropriate techniques to filter out outliers and refine the results. These aspects are described in the following.

5.2. Details of the location estimation technique
As discussed in previous work about wireless localization and multi-lateration, the method discussed above can provide very good position estimations in practice, under the assumption that most of the aircraft used for the messages timestamps differences are uniformly distributed around the point to be localized in its proximity.

Due to geometrical reasons, when the trajectories of the considered airplanes are not uniformly distributed, the LS estimator is biased, and it tends to produce a solution that is affected by an error (typically, the estimator tends to produce a solution biased toward the densest location, where more aircraft are located). Generally speaking, the LS estimator conceives the least dense area as a global minimum area and, when the points in that area are evaluated, it could not find any further point in that area able to further minimize the estimation error. Therefore, it stops prematurely.

However, given the very large area of the scenario and the lack of any control over the position of the planes, this cannot be achieved in practice for every run of the LS estimator.

Thus, to correctly discover the position of the unknown receiver, the LS estimator discussed in Section 5.1 should be executed repeatedly for I runs, each time considering a different subset of the available aircraft. The idea is that, over different runs starting all from similar points, the estimator would statistically remove the bias, tending toward the most likely solution.

The pseudo-code of the complete location estimation algorithm is provided in the following Algorithm 1Algorithm 1.


Algorithm 1. Pseudo-code of the multi-stage location estimation algorithm.



In summary, the devised location estimation technique requires a number of I of executions of the LS estimator introduced in Section 5.1, resulting in a pool of I tuples, containing the latitude, longitude, and altitude output coordinates of the protected receiver. In principle, the I executions could be parallelized, leading to a significant improvement in the total execution time. However, reduced location estimation errors can be obtained by serializing them, i.e., providing the output coordinates of the iteration i as input to the iteration i + 1. We recall that, due to the nature of the problem, real-time constraints are not involved, and thus it is reasonable to trade-off improved resolution accuracy with increased execution times.

As anticipated before, some of the computed solutions might be far from the real position of the unknown receiver, given that the geometry of the scenario is not perfect, i.e., the airplanes are not always uniformly distributed near respect to the target position. Thus, we apply a pruning algorithm that cuts off a given percentage of outliers. Specifically, the algorithm iteratively calculates the median of all the available solutions and, for each run, cuts off from the pool the points having the greater distance from this median point. In this way, outliers are cut off and more accurate location estimations are provided. The pseudo-code of the pruning algorithm is shown in Algo. 2.Algorithm 2


Algorithm 2. Pseudo-code of the pruning algorithm.



We remark that assuming a uniform distribution of the airplanes around the protected receiver is a reasonable assumption in regular operational conditions, where aircraft can appear anywhere around the location of the protected receiver.

Finally, we highlight that the described technique is effective also when multiple protected receivers are deployed. While location data are removed from the disclosed data, each receiver still maintains a unique identifier (such identifier, however, is not linked to any position data). Thus, when a sufficient number of public receivers are deployed around the protected receivers, it is always possible to identify packets received by each of them and to apply the described technique to guess its likely location.

6. Performance evaluation
The time-based localization scheme detailed in Section 5 has been implemented in 
©
 R2019a, and its effectiveness has been assessed via extensive simulations, to characterize its performance in controlled operational conditions. Then, the same technique has been applied to real data, released from the Opensky Network avionics crowdsourced platform. We highlight that all the tests reported in the following sections have been obtained on a Dell XPS 9560 laptop machine, running the Linux Ubuntu 18.04 LTS operating system and featuring 32 GB of RAM. The results of the simulations have been reported in Section 6.1, while the application of the location estimation technique to real data is discussed in Section 6.2. Finally, Section 6.3 compares our algorithms with competing solutions.

6.1. Simulation results
This section is dedicated to the investigation of the performance of the previously-described location estimation strategy, and the evaluation of the impact of each factor on its accuracy. Specifically, in each of the following tests, we focus on a particular factor, and we investigate how the variation of such a factor affects the performance of the scheme. The tests consider both controllable and uncontrollable parameters. The controllable parameters are the ones that can be tuned manually, such as the number of planes to be considered and the number of packets for each plane trajectory. The uncontrollable factors, instead, are the ones that cannot be tuned, as they depend either on the underlying characteristics of the scenario or on the physical limitations of the sensing equipment, such as the packet loss and the measurement noise.

The results have been reported using the Empirical Cumulative Distribution Function (ECDF) of the 2-D location estimation error, and they have been computed each over 1000 realizations of the experiments, by changing the position of the protected receiver and a specific system parameter. We highlight that the LS problem modeled in Section 5.1 has been solved by using the fminsearch tool provided by Matlab. Indeed, after experimenting with all the functions offered by Matlab to solve the problem, this is the one that achieved the best accuracy.

We first investigate the performance of the described algorithm under an increased level of measurement noise affecting the timestamps. We remark that this is a very important parameter in our analysis, as the acquisition of the timestamps is not executed by the deployer of the system, but by the operator of the protected receiver. In this test, assuming the measurement noise is modeled as a variable distributed uniformly at random in the interval 
, we increased the variance of the noise σe, to model less-accurate timestamps.

Fig. 3 illustrates the results of our test, obtained by considering 10 distinct aircraft trajectories, with each aircraft emitting 50 packets, and no packet losses events on any of the communication links.

Fig. 3
Download : Download high-res image (130KB)
Download : Download full-size image
Fig. 3. Position estimate error of our technique, considering several different values of the variance 
 of the noise affecting the timestamps.

Overall, in line with regular location estimation techniques, our results confirm that the accuracy in the position estimation strictly depends on the accuracy of the timestamps. It is worth to note that even when the noise is uniformly distributed in the range  nS (i.e., a medium-level inaccuracy), the performances are still remarkable, as in more than the 90% of the tests our algorithm reported position estimation errors less than 150 m. In practice, these errors translate into a very limited degree of location privacy for the protected receivers. When the measurement error becomes more pronounced (e.g., σe = 500 ns), our location estimation technique can identify the location of the protected receiver with an accuracy of less than 700 m in the 90$ of the tests. We remark that even this level of accuracy enables the understanding of the district where the sensor is deployed, and only requires a physical survey of a reduced area to further locate the sensor.

We also investigated the performance of our scheme when more aircraft trajectories are considered for the solving of the LS problem. Fig. 4 reports the results of our analysis, where we considered a measurement noise of 5 nS affecting the timestamps.

Fig. 4
Download : Download high-res image (148KB)
Download : Download full-size image
Fig. 4. Position estimate error, considering a different amount of aircraft trajectories.

The results show that considering more trajectories increases the accuracy of the location estimation strategy. Indeed, this improvement is due to the geometrical distribution of the positions of the aircraft to the one of the protected receiver, that becomes closer to a uniform distribution by increasing the number of aircraft. We also notice that this increase is not linear, but reaches a saturation. This is confirmed by looking at the performance of the algorithm with 5 and 10 aircraft trajectories. The only positive effect of such an increase in the number of trajectories is a reduction in the variance of the results, turning in the reduction of the extreme tails of the ECDF. Without loss of generality, we can conclude that our location estimation technique does not need an overwhelming amount of trajectories to achieve good results, thus not being a memory-hungry scheme. Besides, a small number of aircraft trajectories can be used, resulting in a limited observation time window.

Considering the uncontrollable parameters of our scheme, packet loss issues play a significant role. Indeed, recent studies such as (Sciancalepore et al., 2019b) proved that the ADS-B communication technology is characterized by significant losses, mainly due to the lack of any coordination in the access to the wireless medium. Therefore, we also evaluated the performance of the described technique when a significant percentage of the packets are lost. The results of our analysis are provided in the following Fig. 5, considering 10 aircraft trajectories and a variance of 5 ns in the measurement error of the timestamps.

Fig. 5
Download : Download high-res image (130KB)
Download : Download full-size image
Fig. 5. Position estimate error, considering several levels of packet loss.

We can notice that the location estimation technique is characterized by remarkable performances also in challenging scenarios, where the packet loss is significant. Considering a medium packet loss level of 20%, the error on the final positional estimate is always less than 130 m, leading to the identification of the position of the protected receiver. The performances slightly decrease when the 40% of the packets are lost, suggesting that cleansing operations on the data are necessary.

We remark that the identification of the position of a protected receiver does not need to happen in real-time. Indeed, considering that the attack is stealthy, the protected receiver is likely to be static, occupying the same position for a long time. Therefore, an adversary can acquire a significant amount of data for a long time, and then leave out from the algorithm the packets that are characterized by a significant loss percentage (e.g., they are not received by the majority of the receivers in the area).

Another factor that is worth considering is the number of packets from the same aircraft trajectory that are needed to provide acceptable performances. The impact of this factor is summarized in Fig. 6, obtained by varying the overall number of packets transmitted by an aircraft from a minimum of 20 to a maximum of 100 in a selected unit time.

Fig. 6
Download : Download high-res image (113KB)
Download : Download full-size image
Fig. 6. Position estimate error, considering an increasing number of ADS-B packets.

Overall, we notice that our technique does not require an overwhelming number of packets to achieve reasonable accuracy. A limited number of packets, e.g., 20 for each aircraft trajectory, are enough to provide errors that are always less than 140 m, practically achieving the target objective. Increasing the number of packets only have effects on the tails of the ECDF, reducing the variance in the final position estimate.

From the previous investigations, we can conclude that the proposed time-based location estimation techniques can identify the location of the protected receivers with remarkable accuracy and reasonable system requirements. Specifically, a limited number of aircraft trajectories and a few messages for each aircraft are necessary to reduce the error to as little as 100 m. The most significant parameters in the analysis are, for sure, the accuracy of the timestamps and the packet loss. The accuracy of the timestamps mainly relies on uncontrollable elements, such as the type of the sensor and its deployment, while the packet loss can be reduced by increasing the observation time. Indeed, in more challenging scenarios, an increased observation window could be desirable, to acquire more packets and reduce the impact of the packet loss on the accuracy of the location estimation.

Finally, we investigated the performance of the described location estimation technique while varying the number of public receivers deployed around the target receiver. Given that the effect of an increasing number of receivers could be appreciated only when the level of the noise is quite high, for this study we assumed the noise to be uniformly distributed in the range , where σ = 0.001 ms, 10 trajectories with 20 packets each, and a 0% packet loss. The results of the simulation study are provided in Fig. 7.

Fig. 7
Download : Download high-res image (151KB)
Download : Download full-size image
Fig. 7. Position estimate error of the described scheme, varying the number of public receivers located around the target protected receiver.

The results indicate that, in general, the location estimation technique requires at least 3 receivers to be located around the target public receivers to obtain acceptable performance. When only 2 receivers are considered, a consistent amount of solutions are characterized by position estimation error higher than 10 km. When 3 receivers are available, instead, in 90% of the cases the position estimation error is less than 4 km, and the performances further improve with 4 receivers. When the number of receivers further increases, the performances tend to remain almost unvaried, indicating that the LS estimator cannot find additional directions to further minimize the objective function in Eq. (8).

Overall, our simulation analysis indicates that, depending on the level of the noise affecting the scenario, at least 3 public receivers, i.e., receivers whose deployment location is well-known, are required to be deployed around a protected receiver, to have chances of identifying its location with meaningful accuracy in ideal conditions. However, dealing with an increased number of receivers can provide additional benefits when the number of trajectories, the packet loss percentage, and the noise affecting the timestamps are not ideal. These considerations are key to correctly evaluate our real performance assessment, discussed in the following section.

6.2. Performance assessment over real data
We also tested the described location estimation scheme using real data, provided by the Opensky Network community, and publicly available at the link: https://opensky-network.org/datasets/raw/.

To test the effectiveness of the location estimation technique, we selected the area represented in the following Fig. 8, coincidental with Switzerland. This choice is due to three main motivations: (i) this area includes several ADS-B receivers, significantly reducing packet loss issues affecting the operation of the ADS-B technology; (ii) this area includes many aircraft, thus increasing the data available for testing, and, (iii) this area is dense of mountain ranges, possibly breaking the assumptions in our LOS model and representing a reasonable worst case.

Fig. 8
Download : Download high-res image (669KB)
Download : Download full-size image
Fig. 8. Physical topology of the ADS-B receivers considered for the experimental assessment.

We highlight that testing our solution in areas different than Switzerland is not possible at this time, given that receivers deployed in other areas are too far from each other to create suitable conditions. However, we remark that an attacker interested in locating an anonymous receiver could always create the ideal conditions for the attack, e.g., by roughly identifying its location (e.g., by looking at the coordinates of the plane it detects), and then deploying and registering to the crowdsourcing platform several receivers suitable for the location estimation technique to work as intended. Thus, leveraging a significant number of colluding sensors is not the best case for the adversary, but a reasonable scenario.

The following discussion only targets public receivers, whose position is made publicly available from Opensky Network. This is necessary for two main reasons. First, the knowledge of the real position of all the receivers in our scenario is necessary to calibrate our technique, i.e., to quantitatively measure its performance and location estimation error. Also, dealing only with public receivers, we do not violate the terms of usage associated with the data available from the Opensky Network crowdsourced platform.

Specifically, our analysis consider three different receivers, namely # 954778341, # 81491016, and # 1805967060.

In each test, we assumed that one particular receiver is protected, that activated in for the anonymity feature, while the coordinates of six additional receivers are assumed to be public. For our analysis, we selected 200 position messages and 10 different aircraft, and we divided the messages into groups of 10 trajectories each. For each trajectory, we run the location estimation technique on a given combination of an increasing number of planes, from 5 to 10. To minimize packet losses, we selected only packets that have been detected by at least 4 different receivers. Such a choice allowed us to work with a packet loss rate of 13%, thus guaranteeing a minimum impact on the accuracy that can be achieved through the proposed technique.

To synchronize the timestamps on the public receivers, we adopted the approach recommended in (Strohmeier et al., 2018a). Specifically, we used the position of the aircraft emitting ADS-B packets (included as a payload in the messages), we approximated their propagation time using the well-known formula 
 
, and we compensated the received timestamp by the computed time offset with respect to a reference receiver. However, this procedure could be performed only for public receivers, whose position is well-known. For the protected receiver, instead, we only considered the raw timestamp, without any clock offset compensation (as in a real scenario).

To help the readers to get a feel of the good performance of our solution, for each of the assumed protected receivers, we also report in Fig. 12 the mean point of the obtained ECDF on the real map.

Fig. 12
Download : Download high-res image (628KB)
Download : Download full-size image
Fig. 12. Estimated positions of the assumed protected receivers on the real map. Blue circles represent public receivers, red circles show protected receivers, while green markers indicate the mean point of the solutions of our multi-stage location estimation technique. (For interpretation of the references to colour in this figure legend, the reader is referred to the Web version of this article.)

The results provided in Figs. 9 and 10 confirm that the location estimation technique discussed in the previous sections can obtain the position of the protected receiver with reasonable accuracy. Starting from an uncertainty area of about 60 × 35km2, the location estimation technique identifies the location of the protected receiver with an error that, in 90% of the cases, is less than 1 km and 0.9 km, for the sensors # 954778341 and # 1805967060 respectively. Despite these errors could appear quite large, we remark that ADS-B antennas are typically located at a significant altitude from the ground, in locations that have full sky visibility. Thus, identifying the specific location of the receiver in such a short-range would require only minimal additional effort. Indeed, these results limit the effective location privacy that can be provided to such receivers, and they confirm that complete location privacy in this scenario is hard to achieve.

As for the results shown in Fig. 11, we note that the points recovered by the location estimation algorithms are affected by a bias, leading to an estimation error that, in 90% of the cases, is less than 2.5 km. We remark that such a bias is due to the particular geometry of the considered scenario, i.e, the location of the supposed protected receiver to the position of the public receivers. Indeed, the estimator could not find a direction where further minimizing the estimation error, thus converging to a local minimum, achieving a sub-optimal solution. Even in this unfavorable scenario, the error is less than 2.5 km.

The difference between the performance obtained in the simulations and the ones obtained using real data can be explained by looking at several elements that, in the real deployment scenario, could differ from our simulation analysis. In particular: (i) the location of the receivers reported by the crowdsourcing platform could be affected by measurement errors; (ii) the aircraft location could be affected by measurement errors, as the aircraft travels at very high speed; (iii) the measurement noise in the scenario could be significant; (iv) the timestamps could be corrupted by physical effects, such as shadowing and Non-Line of Sight (NLOS) paths, not considered in the model described in Section 5.1; and, (v) the receivers are not perfectly synchronized, leading to noisy data and errors on the location estimation.

It is worth noting that, even in this worst-case scenario, the location of a protected receiver could be identified with a relatively small error, compromising its privacy. Indeed, even with an error in the order of 1–2 km, it is possible to understand the geographical area, the Country, and also the district where the receiver is positioned, enabling any powerful adversary to identify the location of the sensor with a remaining little effort.

6.3. Comparison
In this section, we compare the performance of our multi-stage location estimation technique with other solutions, available in the literature.

Our first investigation is on the effectiveness of the pruning algorithm described in Algo. 2.

First, note that the introduced pruning algorithm is a distance-based outlier detection technique. Therefore, for every run, the algorithm identifies as an outlier the point that is farther from the median of all the points in the dataset. In principle, any outlier detection algorithm can be applied to the problem, and also the Local Outlier Factors (LOF) is an option (Breunig et al., 2000).

To provide further insights, we compared the performances of our pruning algorithm and the LOF technique, assuming the protected receiver is the sensor # 1805967060, working with real data provided by the Opensky Network platform. The results of our comparison have been reported in the following Fig. 13.

Fig. 13
Download : Download high-res image (105KB)
Download : Download full-size image
Fig. 13. Position estimate error on the location of the sensor # 1805967060 based on real data, assuming to use the pruning algorithm defined in Algo. 2 and the LOF technique.

We can notice that, compared to the performance of the pruning algorithm, the LOF technique introduces a slight increase in the position estimate error, of approximately 60 m. Looking into the outlier discrimination process, we noticed that often the LOF technique tends to eliminate points that are characterized by a reduced rank, based on the density of the neighbors. However, at the same time, these solutions are located mostly in the middle location among the groups of neighbors. Given that the solutions of the LS algorithm tend to distribute around the true solution, this strategy translates into a small increase of the position estimate error.

However, note that this is a very reduced performance drop, that confirms that almost any outlier detection technique can be used to meet our objectives.

In addition to the previous analysis, we also compare our multi-stage location estimation technique with a reference benchmark scheme, and specifically, the Weighted Centroid Localization (WCL) strategy used for location estimation in several scientific contributions, such as (Oligeri et al., 2019), (Oligeri et al., 2020), (Subedi and Kwon, 2016), and (Wang et al., 2011), to name a few.

We selected the WCL scheme among the other solutions as it represents one of the most natural and intuitive strategy to solve the problem of localizing a receiver from a set of position-based measurements. In detail, according to the WCL scheme, the position of the receiver, namely pk, is computed as a weighted mean of all the positions reported in the ADS-B messages detected by the specific receiver, in line with the following Eq. (9).(9)
where pn(m),x and pn(m),y are the x and y coordinates of the m − th airplane emitting its n − th message, respectively, while wm,n is the weight assigned to the specific n − th message of the m − th airplane. Usually, in many contributions such as (Oligeri et al., 2019), (Oligeri et al., 2020), (Subedi and Kwon, 2016), and (Wang et al., 2011), the weights are computed based on the Received Signal Strength (RSS). However, given that the messages reported by the protected receiver to the main server do not have any RSS value, we selected a uniform weight wn,m = 1 for every message, i.e., we assigned the same weight to all the packets. Note that, to obtain multiple solutions also for the WCL technique, we partitioned the set of airplanes detected by each target receiver in multiple distinct sets, and we evaluated the performance of the WCL scheme considering each time a different set of airplanes.

The following Fig. 14 reports the results of the comparison between our multi-stage location estimation technique and the WCL technique, based on real data provided by Opensky Network, considering the sensors # 954778341, # 1805967060, and # 81491016.

Fig. 14
Download : Download high-res image (138KB)
Download : Download full-size image
Fig. 14. Comparison between our multi-stage location estimation technique and the WCL technique, based on real data, considering the sensors # 954778341, # 1805967060, and # 81491016.

We can see that our multi-stage location estimation technique is always more accurate than the WCL strategy. The best performance for the WCL solution are obtained for the sensor # 1805967060, but they are characterized by an error that, on average, is approximately 2.5 km, compared to the 750 m of our solution. Even worse performance are obtained by the WCL for the remaining two sensors.

Despite the very good results obtained by the devised location estimation strategy compared to a well-known scheme such as the WCL, we would like to highlight that the described location estimation technique is only one of the many possible choices to tackle the problem of identifying the location of an ADS-B receiver. To this aim, we would like to remark that the scope of our paper is to point out the potential location privacy issues affecting protected receivers in avionics crowdsourced networks, and to identify potential countermeasures to improve privacy protection. Conversely, identifying the best time-based localization solution to break the location privacy is a localization problem, that goes beyond the scope of this paper.

7. Countermeasures
The previous sections showed the effectiveness of the described time-based localization scheme in estimating the position of protected receivers. Indeed, when some public receivers are located around the protected receiver, the position of this latter sensor could be revealed with remarkable precision, leading to the compromise of the protection measure envisioned by the Opensky Network crowdsourced platform.

In this section, we extend our analysis, and we investigate how the location of protected receivers could be enhanced, by using dedicated strategies. Overall, three strategies can be identified: (i) corrupting on purpose the timestamps of the packets received on the protected receivers; (ii) nullifying timestamps on the protected receivers; and, (iii) deploying multiple protected receivers in the same region sharing a common identifier.

Corrupting timestamps on Protected Receivers. This protection strategy is inspired by the observations developed in Section 6.1, and in particular from the discussion about the impact of the noise on the location accuracy. In Fig. 3, we showed that the accuracy of the location estimation algorithm decreases when an increasing level of noise affects the data. Thus, corrupting on purpose the reception timestamps of the messages received by the protected receiver worsens the performance of the location estimation algorithm, increasing the size of the area where the sensor could be located.

To test the effectiveness of such a strategy, we evaluated the position estimate error of the scheme when the real timestamps of the protected receivers tackled in Section 6.2 are corrupted with n artificial noise samples, distributed uniformly at random in the domain 
, where the value of 
 is increased from 0.001 ms to 1 ms. Fig. 15, Fig. 16, Fig. 17 show the horizontal error of the location estimation strategy, for the sensors # 954778341,# 1805967060, and # 81491016, respectively.

Fig. 15
Download : Download high-res image (135KB)
Download : Download full-size image
Fig. 15. ECDF of the position estimate error associated with the location estimate of sensor # 954778341, while corrupting the timestamps on the protected receiver with increasing level of uniform noise.

Fig. 16
Download : Download high-res image (138KB)
Download : Download full-size image
Fig. 16. ECDF of the position estimate error associated with the location estimate of sensor # 1805967060, while corrupting the timestamps on the protected receiver with increasing level of uniform noise.

Fig. 17
Download : Download high-res image (148KB)
Download : Download full-size image
Fig. 17. ECDF of the position estimate error associated with the location estimate of sensor # 81491016, while corrupting the timestamps on the protected receiver with increasing level of uniform noise.

The three figures show a similar trend. Specifically, extracting the noise samples uniformly at random with 
 widens the location error up to about 30–40 km.

Similar performances are achieved also by summing up to the reported timestamp a noise extracted from a uniformly at random distribution with a domain size of 200 μs (i.e, 
). Considering that the maximum transmission rate recommended by the ADS-B standard is fixed at 6 msgs/s, such a strategy would not be an issue for the applications tracking the airplanes, that could still maintain data consistency — packets would not be re-ordered at the Opensky Network servers. Indeed, using noisier data would decrease the effectiveness of time-based aircraft localization techniques. However, it would be possible to improve the aircraft location estimation accuracy by combining the noisy data with the ones provided by other public receivers located in neighboring areas, being these latter ones less noisy. That is, multi-lateration can still be performed by combining the data provided by the protected receiver with the data provided by non-protected receivers.

Nullifying timestamps on Protected Receivers. Another strategy that can be used to hide the location of the protected sensor consists in nullifying the timestamp value, as already performed for the SensorLatitude, SensorLongitude, SensorAltitude, RSSIPacket, RSSIPreamble, and SNR fields. On the one hand, using such a strategy the only timestamp available from the protected sensor would be the value of the TimeAtSensor field, which is reported with an accuracy of 1 s. Thus, the location estimation algorithm would achieve the same performances investigated above for the first protection strategy, where the timestamp was corrupted with noise values extracted uniformly at random with a domain size of 1 s. On the other hand, given the low accuracy of the timestamp, the only information the adversary could use to determine the location of the protected receiver would be the position of the planes detected by the protected receiver itself. To the best of the authors’ knowledge, this challenging task has not been investigated in the literature.

Leveraging the assumption of the omni-directionality of the receiving antenna, possible adversarial strategies could include adopting the mean of the position of all the aircraft detected by the sensor, or the median value, as the most likely position of the receiving sensor. Table 3 reports the location estimation error for each of the three receiving sensors investigated above, when the mean and the median of the position of the detected aircraft are considered as the most likely location of the receiving sensors, while Fig. 18 shows the distribution of the aircraft and the obtained mean and median solutions for an exemplary use-case, related to the receiver # 1805967060.


Table 3. Location error by assuming the mean and the median of the detected aircraft as the location of the protected receiver.

Receiver	Error on the Mean Point [km]	Error on the Median Point [km]
# 954778341	27.062	23.297
# 81491016	40.845	35.628
# 1805967060	33.71	31.074
Fig. 18
Download : Download high-res image (286KB)
Download : Download full-size image
Fig. 18. Location of all the aircraft detected by a reference receiver (sensor ID, 1805967060), real receiver location, and estimated locations as the mean and the median of the positions of all the aircraft detected by the sensor in a full-day reference observation period.

It emerges that neither the mean nor the median can be considered as reliable statistical tools to estimate the location of the receiver. Indeed, while the receiving antenna could be omnidirectional in principle, the physical environment around the location of the sensor is mostly asymmetric, due to the presence of natural or man-made obstacles, leading to unequal maximum reception ranges. We notice that, using the cited countermeasure, the data provided by the protected receivers cannot be used to perform aircraft multi-lateration. However, the data still have some (decreased) utility, such as identifying the path of an aircraft or its location. Further, all the other applications not requiring multi-lateration can still be performed, thanks to the data provided also by the anonymous receiver.

Multiple Protected Receivers with a Common Identifier. Another effective strategy that could be provided to guarantee the location privacy of a protected receiver is to leverage a set of protected receivers deployed in the same area, characterized by the same numeric identifier. If p is the number of protected receivers in a given area sharing the same SensorSerialNumber value, assuming the ideal scenario where no packet loss phenomena are present (the best scenario from the attacker perspective), the attacker will observe exactly p replicas of a given received packet, all being characterized by the same identifier. However, the adversary will not be able to associate a specific timestamp to a specific protected receiver, given that the data would not contain any valuable identifier (we recall that the RSSI is already nullified in the provided data). Overall, the uncertainty factor for the adversary will be equal to 
 
, and such uncertainty will provide an increased advantage to each protected receiver.

To explain the effectiveness of our countermeasure, let us recall Eq. (7). We also recall that, based on Eq. (5), 
, dkn(m) = ‖pk −pn(m)‖, while 
 refers to the reception timestamp of the message m delivered by the aircraft n and detected by the receiver k, after normalization and re-scaling.

From Eq. (8), we also recall that, according to the LS algorithm, all the terms ξkn(m) should be summed.

Let us assume the case of a single protected receiver. In this scenario, the only unknown variable in Eq. (8) is 
, i.e., the 3-D unique location of the protected receiver 
. Therefore, the solution of the LS instance in Eq. (8) converges toward the location 
.

Let us now assume the case of two protected receivers, p = 2, namely 
 and 
, identified with the same unique identifier. In this scenario, the adversary would notice two replicas of each m having unknown identifier. Therefore, to continue apply the LS method in Eq. (8), the adversary should select only one of them, with an average error probability that is 
 
 
. Thus, considering M received packets, on average, 
 
 packets will be associated to the receiver 
, and the remaining 
 
 packets will be associated to the receiver 
. Therefore, 
 
 terms in Eq. (8) will be centered around the location of the receiver 
, namely 
, while the remaining 
 
 terms will be centered around the location of the receiver 
, namely 
. As a result, on average, the LS technique will provide a solution centered in the mean location of the two protected receivers, i.e., 
 
.

The same logic applies also with a generic number p of protected receivers characterized by the same identifier, leading to a solution point that, on average, is the mean location of the p receivers, i.e., 
 
.

Without loss of generality, many parameters affect the effectiveness of such countermeasure. First of all, the receivers should be deployed sufficiently far from each other. Otherwise, simply taking the arithmetic mean of the timestamps for each unique received packet would lead to the identification of the most feasible location of the receivers. To demonstrate this claim, assuming the simplified scenario of p = 2 protected receivers sharing the same identifier, we investigated via the same simulation framework used in Section 6.1 the location estimation accuracy that could be achieved when the receivers are deployed at an increasing mutual distance dp, between 1000 m and 10,000 m each other. The results are shown in Fig. 19.

Fig. 19
Download : Download high-res image (138KB)
Download : Download full-size image
Fig. 19. Location accuracy when p = 2 protected receivers are deployed at an increasing mutual distance dp from each other.

If the receivers are close, e.g., within 1000 m, the adversary could take the mean value of the timestamps for each received packet, and locate the protected receivers with similar accuracy to the regular scenario (straight line in Fig. 19). Instead, the farther the receivers will be from each other, the larger will be the mutual difference between the timestamps, and the larger will be the uncertainty area.

At the same time, we highlight that deploying a reduced number of protected receivers sharing the same unique identifier could not be enough to protect the location privacy of each of them. The adversary could adopt a strategy where it selects, for each unique received packet, a different timestamp, creating several combinations of possible reception timestamps. Overall, assuming p protected receivers and M unique packets received by each of them, a total number of pM packets combinations will be available, leading each to a different solution. Fig. 20 illustrates the required number of comparisons assuming a specific number of packets and protected receivers.

Fig. 20
Download : Download high-res image (209KB)
Download : Download full-size image
Fig. 20. Number of Location Estimations with an increasing number of protected receivers and packets.

Depending on the configuration of all the parameters discussed in Section 6.1, the solutions of the time-based localization technique will create regional clusters, i.e., areas located very close, indicating the likely presence of a protected receiver. However, given that the minimum number of packets to be used in the location estimation protocol cannot be decreased (decreasing it would lead to worst performance), deploying a large number of protected receivers leads to an overwhelming amount of combinations and an increase of the areas of the cluster, nullifying the effectiveness of any location estimation technique.

Thus, to be effective, the discussed strategy would require the control of a suitable number of receivers, and the possibility to place them sufficiently far from each other.

We remark that other possible identification strategies, such as the ones based on the fingerprinting of the communication link between the protected receivers and the server, could not be useful under general assumptions, especially when the receivers are located in the same geographical area.

Finally, a motivated adversary could try to cluster the data based on ADS-B features (e.g., the position of the aircraft, or the number of replicas of the same packets on multiple receivers). However, the location identification task for the attacker still would not be easy, due to effects such as the unpredictability of the channel quality, interference, lack of reliability of ADS-B communications, unpredictable packet losses due to the geometry of the aircraft in an area, and sub-optimal deployment of the receivers. Therefore, we believe such a scheme could not be used effectively in practice.

8. Conclusions
In this paper, we have shown that the location privacy mechanisms provided by the Opensky Network platform are subject to severe threats. Our attack is inspired by a standard time-based localization technique that, using: (i) the location and timestamps provided by receivers that do not opt-in for location privacy; (ii) the timestamps provided by receivers that do opt-in for location privacy; and, (iii) the location of emitting aircraft, embedded in ADS-B messages, reveals with remarkable accuracy the location of protected receivers. When tested on the real-data provided by Opensky Network, the correct location of the protected receiver is identified with an error ranging from 0.9 km to 2.6 km (against the expected 450 km), confirming that location privacy with the current system setting can be compromised.

Finally, we also proposed a few countermeasures that, with a negligible trade-off on the usability of the data provided by the target receivers, still allow the provisioning of basic services such as aircraft tracking and delay estimation, while also guaranteeing receivers location privacy.
