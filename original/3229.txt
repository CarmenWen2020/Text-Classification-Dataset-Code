5G promises much faster Internet transmission rates at minimum latencies with indoor and outdoor coverage in Smart Cities. 5G could potentially replace traditional Wi-Fi for network connectivity and Bluetooth technology for geolocation with a seamless radio coverage and network backbone therefore accelerating new services such as the Internet of Things (IoT). Although Wi-Fi 6 is already in the market designed for IoT applications. New Smart City applications based on Big Data will depend on 5G as a mobile Internet service provider therefore eliminating the need to deploy additional private network infrastructure or mobile networks. The benefits due to the expanded network access and enhanced connectivity between devices also intrinsically increase cybersecurity risks. Cyber attackers will be provided with additional digital targets; in addition, wireless and mobile network including the access channel infrastructure will be shared between independent services. To address these cybersecurity issues, this article presents the Blockchain Random Neural Network for Cybersecurity applications in a holistic digital and physical cybersecurity user and channel authentication methods. The user identity is kept secret as the neural weights codify the user information, although in case of cybersecurity breach, the confidential identity can be mined and the attacker identified. The proposed method therefore enables a decentralized authentication method. The validation results prove that the addition of the Blockchain Random Neural Network provides a user access control algorithm with increased cybersecurity resilience and decentralized user access and connectivity.

Previous
Next 
Keywords
Random neural network

Blockchain

Distributed ledger technology

Cybersecurity

Internet of things

5G

Smart Cities

1. Introduction
There are many definitions of Smart Cities with numerous approaches that cover their implementation, the key common concept is that Smart Cities must adapt to its different user needs and requirements. Functionality must be ready to use and services shall be “invisible” to Smart City users. There is not a unique Smart City driver, although technology in Smart Cities facilitates numerous Human to Human (H2H), Machine to Machine (M2M) and Human to Machine (H2M) combination of both services and applications. The main Smart City enabler is the Internet of Things (IoT), an ecosystem of interconnected devices, sensors and servers that collect, exchange and process Big Data. In the IoT, things are objects of the physical world (physical things) that can be sensed or objects of the information world (virtual things) that can be digitalized; both objects can be identified, integrated into a digital model and information transmitted via sensors and wired or wireless communication networks (International Telecommuni, 2012). The IoT is the natural technical evolution of cloud computing, edge computing, decentralization, transmission networks and communication protocols. IoT technologies in Smart Cities enable intelligent decision making and higher level services that facilitate the provision of advanced functionalities; these innovations present numerous advantages including the optimization of its assets, energy usage and maintenance.

5G will be an innovative mobile solution for Smart Cities that consists of very high carrier frequencies with great bandwidth (mmWave), extreme node and device densities (ultra-densification) and large numbers of MIMO antennas (massive multiple-input multiple-output) (Palattella et al., 2016). Potential new 5G applications in Smart Cities are divided into Enhanced Mobile Broadband, Ultra Reliable Low Latency Communications and Massive Machine Type Communications. 5G will be also highly integrative: the connection to a 5G air interface and spectrum together with LTE and WiFi will enable global, reliable, scalable, available and cost-efficient connectivity solutions that provide high rate coverage and a seamless user experience. These two features are considered as a potentially key driver for the expansion of a global IoT into Smart Cities (Andrews et al., 2014). To achieve these additional requirements supported by high data rates, extremely low latency, and a significant improvement in users’ perceived Quality of Service (QoS); the core network of 5G will have to reach higher levels of flexibility and intelligence to increase node capacity where energy and cost efficiencies will become even more critical considerations (Agiwal et al., 2016).

Big Data will expand current Smart City services with data analytics and data correlations to enable informed decisions by citizens and decision makers (Joshva Devadas et al., 2019). The IoT cloud will be key to successfully orchestrate the connection of an increasing number of smart devices, manage the transmission of larger volumes of information, store the Big data, make data operations, data analytics and finally visualise key insights to Smart City users (Jeet Kaur et al., 2019). Big Data will solve numerous Smart City issues, mostly related to asset management, proactive maintenance, energy optimization, usage prediction where information can be accessed at mobile phone level via a common Smart City apps.

1.1. Research motivation
These higher levels of network integration and comprehensive data connectivity between smart devices enabled by the IoT and 5G are provided at a cybersecurity cost. The benefits of additional services and performance also intrinsically increase cybersecurity vulnerabilities as cyber attackers are provided with a greater network access and additional digital targets (Andrea et al., 2015; Deogirikar and Vidhate, 2017; Granjal et al., 2015). Key cybersecurity risks that 5G incorporates include: 1) the dependency to a single 5G service provider, mobile users will not be supported with a back-up infrastructure such as Wi-Fi in case 5G service providers do not deliver their agreed Service Level Agreements. 2) Single access to user information, 5G rogue nodes could entirely collect user metadata such as geolocation and personal data. In addition, IoT also includes key cybersecurity vulnerabilities: 1) Unsecured IoT devices can be orchestrated to launch larger and greater Distributed Denial of Services (DDoS) attacks. 2) Easier reach to cloud and edge computing servers via the additional IoT gateways. 3) IoT solutions are normally provided with dedicated connections to the dedicated cloud from the service provider, this additional decentralized connectivity enables further backdoors access and spyware.

1.2. Research proposal
Recent Blockchain solutions enable the digitalisation of contracts as it provides authentication between parties and the encryption of information that gradually increments while it is processed in a decentralized network such as the IoT (Huh et al., 2017). To address the increased cybersecurity risk of 5G in the IoT for Smart City applications and services such as rogue 5G nodes; this article proposes a holistic digital and physical cybersecurity user authentication method based on the Blockchain Random Neural Network. The Blockchain Random Neural Network configuration has analogue biological properties as the Blockchain where neurons are gradually incremented and chained through synapses as variable user access credentials increase. In addition, information is stored and codified in decentralized neural networks weights. The Blockchain Random Neural Network solution is equivalent to the Blockchain with the same properties: user identity authentication, data encryption and decentralization where user access credentials are gradually incremented and learned. The presented application can be generalized to emulate an Authentication, Authorization and Accounting (AAA) server where user access information is encrypted in the neural weights and stored decentralized servers. The main advantage of this research proposal is the biological simplicity of the solution however it suffers high computational cost when the neurons increase.

1.3. Research structure
Distributed Ledger Technologies in the IoT, 5G, IoT, Neural Networks applications in Cryptography and Blockchain solutions in Cybersecurity, Software Defined Networks and Privacy-Preserving Machine Learning related work is described in Section 2. The Blockchain Random Neural Network mathematical model presents in Section 3 a decentralized solution that emulates the Blockchain validation process: mining the input neurons until the neural network solution. Two models of the presented Blockchain algorithm applied to Cybersecurity in Smart Cities are proposed in Section 4. The user access authentication covers holistically its digital access through the seven OSI layers and its physical identity, such as passport ID, before is permitted access to IoT network resources. The method forces the user to be physically authenticated before access to the IoT network is allowed, therefore cybersecurity is increased by reducing the likelihood of criminal network access. The user digital OSI layer identification that includes its MAC and IP address in addition to its physical identification such as biometrics generate the Private Key, whereas there is no need for a Public Key. The 5G node identity authentication model follows a similar approach; 5G nodes are authenticated before they are enabled into the Smart City where the associated International Mobile Subscriber Identity (IMSI) provides the Private Key. Experimental results in Section 5 demonstrate that the additional Blockchain Random Neural Network provides increased cybersecurity resilience and decentralized confidentiality to user access, connectivity and authentication. The main conclusions presented in Section 6 share that the user identity is kept secret codified in the neural weights although in case of cybersecurity breach the identity can be mined and the attacker identified.

2. Research background
There are already security frameworks that integrate Blockchain technology with smart devices for Smart City applications (Biswas and Muthukkumarasamy, 2016); the solution is structured in a physical layer formed of sensors and actuators that gather and transmit data to the next protocol layer. The communications layer provides different data transmission methods such as Wi-Fi, 5G, Ethernet and Bluetooth where Blockchain protocols are inserted to enable the security and privacy of data. The database layer consists on the distributed ledger that stores the records from the physical layer; these records are classified as permissionless or public and permissioned or private. Finally, the interface layer consists of the several smart applications such as smart parking, smart home, smart health that integrate with each other for effective decisions. An Intelligent Transport System based on the Blockchain is also implemented via several layers (Yuan and Wang, 2016): the physical layer covers the field assets of the solution, the data layer specifies the chained data blocks and the related Blockchain techniques such as asymmetric encryption, time stamping, hash algorithms and Merkle trees. The network layer provides the mechanisms of distributed peer to peer networking, data forwarding and verification. The consensus layer covers the agreement algorithms such as proof of work, proof of stake or proof of movement. The incentive layer includes the economic reward into the Blockchains and specifies its issuance and allocation methods. The contract layer contains scrips, algorithms and smart contracts which are self-verifying, self-executing and self-enforcing; this layer is activated with the static data stored in the Blockchain. Lastly, the application layer packages services and applications such as ride sharing and logistics.

2.1. Distributed Ledger Technologies in the IoT
Distributed Ledger Technologies (DLT) and the services they provide are the solution for the IoT management of connected devices, privacy and reliability issues. (Arslan et al., 2020). DLT applications include tracking of connected devices, enabling the transaction process and verification while keeping data semi-anonymous. In addition, due to its decentralized architecture, DLT also avoids single points of failure and provides mass scale reliability for the stored and communicated content. The current centralized IoT architecture faces several issues as all operations of all the devices in the network are computed using a single server. This creates a single point of failure while creating the server as a target of security and privacy attacks (Atlam and Wills, 2019). DTL provides solutions to these drawbacks such as lack of maturity, scalability, latency and interoperability in addition to legal and regulatory challenges. IoT requirements such as security, privacy, identity management, M2M transactions traceability and provenance could be addressed with DTL features based on decentralized information, cryptographic security, transparency and tamper proof features (Zhu et al., 2019).

Key issues of adopting DLT in the IoT is the scalability due to overheads from metadata, such as digital signatures, and computing latency that prevents DLTs on real time applications (Elsts et al., 2018). Alternatives such as IOTA can be considered although the Proof or Work is still not feasible in IoT devices characterised by low computing power and low battery. Another obstacle to consider for DTL in wireless IoT is the high amount of the data in relation to the small payloads of the Wireless protocols (Danzi et al., 2020). DTL technologies have been designed and optimised for mostly upload connections whereas its application in Wireless solutions requires uplink and download link traffic. Finally DLT solutions do not support the required service differentiation demanded by IoT services with high reliability requirements.

To address some of the issues of IoT information security, a lightweight authentication mechanism in cloud-based IoT environment is proposed that enables authenticated users to access the data of IoT sensors remotely (Wazid et al., 2020). The algorithm is based on one-way cryptographic hash functions along with bitwise XOR operations and a fuzzy extractor mechanism employed at the user's end for local biometric verification. Similarly, a lightweight Blockchain-enabled RFID-based authentication protocol is used for supply chains in 5G mobile edge computing environments (Jangirala et al., 2020). The solution supports the required bandwidth to secure real-time data about goods in transit within supply chains. Another authentication scheme for the exchange of information via the cloud is based on two connections: authentication between a user and a cloud server and authentication between an IoT device and a cloud server (Challa et al., 2020). Both entities must first mutually authenticate each other with the help of a trusted authority; once the authentication is successful, they can establish a session key for their future secure communication. A comprehensive analysis explores cutting-edge IoT technologies though the fundamentals, principles, architectures, applications, challenges, and promises of the Internet of Things (Firouzi et al., 2020). The study also covers details of IoT and its underlying technologies from embedded systems to cloud computing, big data analytic and the ability of IoT within healthcare for personalized and tailored content in a cost-effective health delivery.

Similar to Blockchain, Directed Acyclic Graphs (DAG) also store data transactions which are represented as nodes. Transactions are directed linked to one or several other newer transactions in topological ordering without loops (Liu et al., 2020). DAGs do not have blocks therefore there is not a mining process. Every new transaction refers to its parent transactions, signs their hashes validating the DAG, and finally includes the hashes in the new transaction. Although Blockchains possess better immutability than DAGs; these perform better at handling a large number of transactions with a greater scalability than Blockchains.

2.2. 5G
5G will support a wide range of industry business models and use cases that address motivations from different stakeholders such as mobile network operators, infrastructure, cloud service providers and tenants (Adam and Ping, 2018); these diverse devices and applications will lead to several cybersecurity requirements, in addition to performance requirements from future applications as well as regulatory compliance with Service Level Agreements in multi-tenant cloud environments. SHIELD is a novel design and development cybersecurity framework that offers Security as a Service in 5G (Katsianis et al., 2018). SHIELD framework manages network functions and Software Defined Networks (SDNs) for virtualization and dynamic placement of virtual network security, Big Data analytics for real-time incident detection and mitigation, trusted computing attestation techniques for securing both the infrastructure and its services.

Future 5G cellular networks will facilitate the physical system communications through different technologies such as device to device communications that need to be protected from eavesdropping, especially with the large amount of traffic that will constantly flow through the network (Atat et al., 2017). The connectivity of numerous stand alone IoT systems through the Internet or 5G Networks introduces numerous cybersecurity challenges as sensitive information is prone to be exposed (Mozzaquatro et al., 2018); an ontological analysis improves IoT cybersecurity by delivering security services adapted to different threats.

The next wireless strategy is centered on 5G and IoT functionality (Chang et al., 2017); while the confidence of the future mobile technology will help innovate governments, workforce, industry and social media, the key threat to future mobile wireless development is the growing concern of its anomaly detection. Fog and mobile edge computing will play a key role in the upcoming 5G mobile networks to support decentralized applications, data analytics and self network management by using a highly distributed computing model (Fernández et al., 2018). User centric cybersecurity solutions in 5G networks apply Deep Learning techniques to detect network anomalies (Fernandez et al., 2018). The method requires the collection, process and analysis of large amount of data traffic from a great number of network connections in real time and in an autonomous way.

The protection of the 5G is key for its success as system security is the foundation for 5G development (Lu and Da-Xu, 2018). The significant factors of the security model are the protection and integration of heterogeneous smart devices with Information Communication Technologies (ICT) where mobile cloud computing leverages 5G mobile technologies. With the development of 5G, defensive mitigations against threats from wireless communications based on mobile cloud computing have been playing a notable role in the Web security domain and Intrusion Detection Systems (IDS) (Gai et al., 2016).

2.3. Internet of Things
The evolution of the IoT technology started from Machine to Machine to connect machines and devices, Interconnections of Things that connect any physical or virtual object and finally Web of Things that enables the collaboration between people and objects (Lee et al., 2013). The IoT is formed of three layers (Jing et al., 2014): sensor, transportation and application that similar as traditional networks, also present security issues and integration challenges. Because physical, virtual and user private information is captured, transmitted and shared by the IoT sensors, the enforcement of security and privacy policies shall include cybersecurity threats on data conﬁdentiality and authentication, access control within the IoT network, identity management, privacy and trust among users and things (Roman et al., 2011). The dynamic IoT is formed by heterogeneous technologies that provide innovative services in various application domains which shall meet flexible security and privacy requirements.

Traditional security mitigations cannot be directly applied to the IoT due the different standards, communication protocols and scalability issues due to of the greater number of interconnected devices (Sicari et al., 2015). An important challenge for supporting diverse multimedia applications in the IoT is the heterogeneity of security in wired and wireless sensor and transmission networks that requires a balance between flexibility and efficiency (Zhou and Chao, 2011). Secure and Safe Internet of Things (SerIoT) improves the information and physical security of different operational IoT application platforms in a holistic and cross layered manner (Gelenbe et al., 2018). SerIoT covers areas such as mobile telephony, networked health systems, the Internet of Things, Smart Cities, smart transportation aystems, supply chains and industrial informatics (Domańska et al., 2018).

2.4. Neural networks and cryptography
A linear scheme based on the Perceptron problem, or NP problem, is used in zero-knowledge interactive identification protocols (Pointcheval, 1994). Three and five pass identification protocols perform similar to other smart cards applications where an identification process between the subject and the authoriser requires approximately 6 Kbytes of data to obtain the standard security level of 10−6 with a very secure secret key. Two multilayer neural networks are trained on their mutual output bits with discrete weights to achieve a synchronization that can be applied to a secret encryption key exchange over a public channel (Kinzel and Kanter, 2002). The two trusted parties chose the secret initial weight vectors, agree on a public sequence of input vectors and exchange public bits where for each transmission, a new secret key has to be agreed without any previous secret information stored. The above key exchange protocol can be broken by three different cryptanalytic attacks (Klimov et al., 2002). The genetic attack simulates a large population of neural networks with the same structure as the two parties and trains them with the same inputs where networks whose outputs mimic those of the two parties stay and multiply while unsuccessful networks die. The geometric attack exploits the neural configuration of the attacker network based on the similarity to the unknown network although it provides a diﬀerent output for a given input. Finally, the probabilistic attack considers the complexity to predict the position of a point in a bounded multidimensional box after several random transitions instead of predicting accurately its original position.

Feed forward neural networks are applied as an encryption and decryption algorithm with a permanently changing key (Volna et al., 2012). The method consists on the division of an input message into 6-bit data sets, no predetermined number of neurons in the hidden layer and an output layer that is formed of six neurons, one for each bit. The network is trained on the binary representation of the ASCII symbols. A two-stage multilayered neural network also provides a cryptography solution (Yayık and Kutlu, 2014): The neural network of the first stage generates based pseudo random numbers used parameters to initialize the input values, initial network weights and the number of neurons within the hidden layers. The neural network of the second stage encrypts information based on the non-linearity of the model; each block is formed of seven bits that represent the ASCII values where digits are mixed with other blocks with a random number of iterations. This random number is obtained as a parameter from the first stage neural network. A high level review of neural networks applications to different cryptography elements (Schmidt et al., 2008) covers private key protocols such as key exchange protocol, private and public keys. In addition, the review also includes visual cryptography that transmit secret images across a public network, hidden communications within redundant bits inserted in the transmission of the message, design of random generators and finally digital watermarking, the inclusion of a signature into the media in order to provide authentication and content protection.

2.5. Blockchain and security
Currently; there is a great research effort in Blockchain algorithms applied to security applications. A punishment method that includes adversary behaviours is based on the Blockchain action ledger that eliminates the incentive to attack edge servers and mobile devices in the edge network (Xu et al., 2017). The interactions between a mobile device and an edge server are modelled as a Blockchain ledge where mobile devices either transmit a request to the server in order to obtain real-time service or launch an attack against the server for illegitimate access. On the other hand, the server also decides to permit the request from the mobile device or attack it. An ISO/IEC 15408-2 compliant security auditing system is generated from a Blockchain network embedded into the backbone communication architecture (Cha and Yeh, 2018). The Blockchain auditing system covers authentication, access control, block query, de-identification, encryption and key management. A conceptual model fuses Blockchains and cloud computing over three deployment modes (Gai et al., 2018): Cloud over Blockchain, Blockchain over Cloud and Mixed Blockchain-Cloud. A Blockchain consensus model implements IoT security (Gupta et al., 2018) for devices that present constrained resources. The method applies a distributed voting system for power and bandwidth requirements to prevent Denial of Service attacks.

A Blockchain mechanism continuously evaluates legitimate presence of user in valid IoT zones without user intervention (Agrawal et al., 2018). The solution addresses the lack of trust between IoT entities, removes single points of failure and predicts the user next zone visit via the use of IoT crypto tokens and Markov prediction models. A secure mutual authentication with an exhaustive access control system for industry 4.0 is proposed based on a Blockchain (Lin et al., 2018). The presented solution provides anonymous authentication, auditability and confidentiality based on integrated attribute signature, multi-receivers encryption and a message authentication code. A decentralized Ethereum Blockchain enables smart contracts to survey data from the Industrial Internet of things (IIoT) to the cloud (Fan et al., 2020). The Ethereum method provides four security design features: the selection of current Blockchain nonce as a random seed, the writing of the auditing rules into the Blockchain, the use of the block number on the Ethereum as the security timestamp and the requirement of payment of ether as deposit.

2.6. Software Defined Networks
Software Defined Networks (SDN) detach the forwarding process of network packets in the hardware (data plane) from the routing process in the software (control plane). This approach enables a cloud based network management with similar advantages: efficient network configuration, performance and monitoring based on remote access. An overview of current SDN technologies for IoT applications (Bera et al., 2017) is based on edge networking, access, core and data center networking. The key issues of the integration of SDN with IoT ranges from wireless mobility, adequate policy enforcement, independent hardware platform, and practical deployments. An IoT architecture combines the feature of SDN for traffic control and resource management with fog computing for low and predictable latency (Tomovic et al., 2017) to address the key intrinsic IoT issue based on low power low bandwidth devices. The functionality of fog orchestration is delegated to an SDN controller in order to achieve higher efficiency whereas some SDN controller tasks are delegated to the fog node for higher scalability.

In addition, a Blockchain based distributed cloud architecture with an SDN enable controller and fog nodes at the edge of the network is proposed for IoT applications (Kumar et al., 2018). The model provides low-cost, secure and on-demand access to the computing infrastructure in an IoT network where the exchange tokens register key actions such as the performance of a computation, the transfer of a file or the provision of a set of data. A cooperative IoT security via SDN reduces the risk of Cybersecurity vulnerabilities in the IoT by orchestrating defense mechanisms that share the attacking information with peer controllers and block the attacks (Grigoryan et al., 2018). A secure framework that acts as an intrusion detection system for IoT based on SDN generalizes the integration of SDN and IoT based on Deep Learning (Dawoud et al., 2018). The anomaly detection module uses Restricted Boltzmann Machines (RBM) to measure the data loss between the input and the reconstructed record. A detection approach that applies Bayesian models detects malicious devices inside an SDN using trust computation (Meng et al., 2018). After identifying untruthful devices by means of a Bayesian inference approach, the SDN controller updates its routing tables and direct traffic to bypass malicious points.

2.7. Privacy-Preserving machine learning
Machine Learning and Artificial Intelligence can be applied for Privacy-Preserving user data. A framework protects the privacy requirement of different data providers within the cloud (Li et al., 2018). The method is based on a public-key encryption with a double decryption algorithm that encrypt their data sets with different public keys. For a successful implementation of machine learning systems for privacy concerns, the knowledge gap between Machine Learning and privacy communities must be addressed (Al-Rubaie and Chang, 2019). Key issues of Machine Learning for privacy preserving are the abundance of new methods, the scalability of the algorithms in terms of processing and communication costs, the security assumptions and the policies that specify the rules or privacy guarantees. Machine Learning as a Service trains and deploys machine learning models on cloud providers’ infrastructure however these services require accessibility to the raw data which is often privacy sensitive and may generate potential security and privacy risks (Hesamifard et al., 2018). CryptoDL is a client-server cloud method that applies neural network algorithms to encrypt data enabling a data sharing service without revealing sensitive data. Privacy-preserving distributed Machine Learning for permissioned Blockchain networks deploys learning models without data centralization while addressing the privacy, security and performance issues of the traditional models (Kim et al., 2019). The model treats any private learning algorithm as a non-deterministic function where an effective error-based aggregation rule is defined to prevent attacks that try to deteriorate the accuracy of the model.

3. The Blockchain Random Neural Network
Blockchain (Nakamoto, 2008) is based on cryptographic concepts which can be applied similarly by the use of Neural Networks. Information, or Big Data, in the Blockchain is contained in blocks that also include a timestamp, the number of attempts to mine the block and the previous block hash. Decentralized miners then calculate the hash of the current block to validate it. Smart City information contained in the Blockchain consists of transactions which are authenticated by a signature that uses the Smart City asset private key, transaction origin, destination and value (Fig. 1).

Fig. 1
Download : Download high-res image (208KB)
Download : Download full-size image
Fig. 1. Blockchain model.

3.1. The Random Neural Network
The Random Neural Network (Gelenbe, 1989, 1993a, 1993b) is a spiked recurrent stochastic model. The main analytical properties are the “product form” and the existence of a unique network steady state solution. The Random Neural Network model represents more closely how signals are transmitted in many biological neural networks where they travel as spikes rather than as fixed analogue signals.

3.1.1. Definition
The Random Neural Network consists on n-neurons. The state of the n neuron network at time t is represented by the vector of non-negative integers k(t) = [k1(t), … ki(t)] where ki(t) is the potential of neuron i at time t. Neurons interact with each other by interchanging signals in the form of spikes of unit amplitude:

•
A positive spike is interpreted as excitation signal because it increases by one unit the potential of the receiving neuron m, km(t+) = km(t) ​+ ​1;

•
A negative spike is interpreted as inhibition signal decreasing by one unit the potential of the receiving neuron m, km(t+) = km(t) – 1, or has no effect if the potential is already zero, km(t) = 0.

Each neuron accumulates signals and it will fire if its potential is positive. Firing will occur at random and spikes will be sent out at rate r(i) with independent, identically and exponentially distributed inter-spike intervals:

•
Positive spikes will go out to neuron j with probability p+(i,j) as excitatory signals;

•
Negative spikes with probability p−(i,j) as inhibitory signals.

3.1.2. Principles
A neuron may send spikes out of the network with probability d(i). We have:(1)

The Random Neural Network weight parameters w+(j,i) and w−(j,i) are the non-negative rate of excitatory and inhibitory spike emission respectively from neuron i to neuron j:
(2)

Information in this model is transmitted by the rate or frequency at which spikes travel. Each neuron i, if it is excited, behaves as a frequency modulator emitting spikes at rate w(i,j) = w+(i,j) ​+ ​w−(i,j) to neuron j. Spikes will be emitted at exponentially distributed random intervals (Fig. 3). Each neuron acts as a non-linear frequency demodulator transforming the incoming excitatory and inhibitory spikes into potential.

Fig. 3
Download : Download high-res image (118KB)
Download : Download full-size image
Fig. 3. The Random Neural Network model.

This network model has a product form solution; the network's stationary probability distribution can be represented as the product of the marginal probabilities of the state of each neuron.

3.1.3. Theorem
Let's define the probability distribution of the network state as p(k,t) = Prob[k(t) = k)] and the marginal probability a neuron i is excited at time t as qi(t) = Prob[ki(t) > 0]. The stationary probability distribution p(k) = limt →∞p(k,t) and qi = limt→∞qi(t) where k(t) is a continuous time Markov chain that satisfies Chapman-Kolmogorov equations.(3)
λ
λ
 
(4)
where the λ+(i), λ−(i) for i = 1, …,n satisfy the system of nonlinear simultaneous equations:(5)λ
(6)λ
λ

If a nonnegative solution {λ+(i),λ−(i)} exists to equations (3), (5), (6) that meets qi < 1 then:(7)

The network will be stable if a value qi < 1 can be found. The average potential at a neuron i is qi/[1-qi] and the rate of emission of spikes from neuron i in steady state is qir(i). If we have λ+(i) ​> ​[r(i) ​+ ​λ−(i)] for any neuron means that the neuron is unstable or saturated; this implies that it is constantly excited in steady state and its rate of excitatory and inhibitory spike emission r(i) to another neuron j will be r(i)p+(i,j) and r(i)p−(i,j) respectively.

3.2. The Blockchain Random Neural Network
The Random Neural Network with Blockchain configuration consists of L Input Neurons, M hidden neurons and N output neurons. Information in this model is contained within the networks weights w+(j,i) and w−(j,i) rather than neurons xL, zM, yN themselves.

•
I = (ΛL, λL), a variable L-dimensional input vector I Є [-1,1]L represents the pair of excitatory and inhibitory signals entering each input neuron respectively; where scalar L values range 1 < L< ∞;

•
X = (x1, x2, …, xL), a variable L-dimensional vector X Є [0,1]L represents the input state qL for the neuron L; where scalar L values range 1 < L< ∞;

•
Z = (z1, z2, …, zM), a M-dimensional vector Z Є [0,1]M that represents the hidden neuron state qM for the neuron M; where scalar M values range 1 < M< ∞;

•
Y = (y1, y2, …, yN), a N-dimensional vector Y Є [0,1]N that represents the neuron output state qN for the neuron N; where scalar N values range 1 < N< ∞;

•
w+(j,i) is the (L ​+ ​M ​+ ​N) x (L ​+ ​M ​+ ​N) matrix of weights that represents from the excitatory spike emission from neuron i to neuron j; where i Є [xL, zM, yN] and j Є [xL, zM, yN];

•
w−(j,i) is the (L ​+ ​M ​+ ​N) x (L ​+ ​M ​+ ​N) matrix of weights that represents from the inhibitory spike emission from neuron i to neuron j; where i Є [xL, zM, yN] and j Є [xL, zM, yN].

The key concept of the Blockchain Random Neural Network model is that the neuron vector sizes, L, M and N are variable rather than fixed. The input layer X corresponds the user incremental data; the hidden layer Z are the neural values of the chain and the output layer Y codifies the user Private Key (Fig. 4). Neurons or blocks are iteratively added where the value of the additional neurons consists on both the value of the additional information and the value of previous neurons therefore forming a neural chain.

Fig. 4
Download : Download high-res image (135KB)
Download : Download full-size image
Fig. 4. The blockchain random neural network.

3.2.1. The Blockchain Random Neural Network Model
3.2.2. Private key
The private key Y = (y1, y2, …, yN) consists on the user or application digital credentials specifically assigned to them. This includes biometrics or any other cryptographic algorithm such as Advanced Encryption Standard (AES) 256-bit cipher. The private key is presented by the user, or the application, every time new data is to be inserted therefore requiring user credentials validation.

3.2.3. Validation and Data
The neural network blockchain model defines Validation and Data as:

•
Validation, V(t) = {V(1), V(2), … V(t)} as a variable accumulative vector where t is the validation stage;

•
Data, D = {d1, d2, …dt} as a set of t I-vectors where do = (eo1, eo2, …eoI) and eo are the I different dimensions for o = 1,2, … t.

The first Validation V(1) has associated an input state X = xI that corresponds d1 representing the user data. The output state Y = yN corresponds to the user Private Key and the hidden layer Z = zM corresponds to the value of the neural chain that will be inserted in the input layer for the next transaction. The calculated neural network weights w+(j,i) and w−(j,i) are stored in the decentralized network and retrieved in the mining process. The second Validation V(2) has associated an input state X = xI that corresponds to the user data d1 for the first Validation V(1), the chain, or the value of the hidden layer zM and the additional user data d2. The output state Y = yN still corresponds the user Private Key and the hidden layer Z = zM corresponds to the value of the neural chain for the next transaction. This process iterates as more user data is inserted. The neural chain can be formed from the values of the entire hidden layer neurons, a selection of neurons, or any other combination to avoid the reverse engineering of the Private Key from the stored neural weights.

3.2.4. Neural Chain Network and Mining
Data is validated or mined by calculating the outputs of the Random Neural Network using the transmitted network weighs, w+(j,i) and w−(j,i) at variable random inputs X = xI, or following any other method. This process emulates the traditional Blockchain Proof of Work mining process where miners race to find a target hash. The Random Neural Network with Blockchain configuration is mined when an Input I is found that delivers an output Y with an error Ek lesser than a threshold T for the retrieved user neural network weights w+(j,i) and w−(j,i):
 
where Ek is the minimum error or threshold, y'n is the output of the Random Neural Network with mining or random input X = xI and yn is the user or application Private Key. The mining complexity can be tuned by adjusting Ek. Once the solution is found, or mined, the user or application data can be processed. The potential value of the neural hidden layer Z = zM is added to form the neural chain as the input of the next transaction along with the user new data. Finally, the proposed method calculates the Random Neural Network with gradient descent learning algorithm for the new pair (I, Y) where the new generated neural network weights w+(j,i) and w−(j,i) are stored in the decentralized network. The mining process increases on complexity as more user data is inserted.

3.2.5. Decentralized information
The user data I is crypted in the neural network weights w+(j,i) and w−(j,i) are stored in the decentralized network rather than distributing its data I directly. The user data is decrypted within the mining process when the user presents its biometric key therefore making secure to store information in a decentralized system. The neural network weights expand as more verification data is inserted creating an adaptable method.

4. The Blockchain Random Neural Network in Smart Cities
4.1. Internet of Things Cybersecurity model
The private key Y = (y1, y2, …, yN) consists on the user digital AAA authentication credentials that covers the seven layers of the OSI model and physical information such as a passport, biometrics or both. The private key is presented by the user every time its credentials require verification from the accepting roaming node (Table 1).


Table 1. Private key.

Private Key	Bits	Reference	Type	Interface
y8	72	User	Physical	Passport - Biometrics
y7	16	Web	Digital	OSI Layer 7
y6	16	Middleware	OSI Layer 6
y5	16	Socket	OSI Layer 5
y4	16	Port	OSI Layer 4
y3	32	IP	OSI Layer 3
y2	48	MAC	OSI Layer 2
y1	16	Bit	OSI Layer 1
The first Roaming R(1) has associated an input state X = xI which corresponds to v1 and represents the user verification data. The output state Y = yN corresponds to the user Private Key and the hidden layer Z = zM corresponds to the value of the neural chain that will be inserted in the input layer for the next roaming. The second Roaming R(2) has associated an input state X = xI which corresponds to the user verification data v1 for the first Roaming R(1), the chain (or the value of the hidden layer zM) and the additional user data v2. The output state Y = yN still corresponds the user Private Key and the hidden layer Z = zM corresponds to the value of the neural chain for the next transaction.

The first Roaming R(1) calculates the Random Neural Network neural weights with an Ek < Y for the input data I = (ΛL, λL) and the user private key Y = yN. The calculated neural network weights w+(j,i) and w−(j,i) are stored in the decentralized network and are retrieved in the mining process. After the first Roaming; the user requires to be validated at each additional Roaming with its private key. Its verification data is validated and verification data vt from Roaming R(t) are added to the user profile.

4.2. 5G cybersecurity model
The private key Y = (y1, y2, …, yN) consists on the Intelligent Building International Mobile Subscriber Identity (IMSI). The private key is presented by the Intelligent Building within the Smart City every time a 5G node becomes operational and its identity credential requires authorization and verification from the Intelligent Building in order to enable its digital channel (Table 2) for IoT services.


Table 2. IMSI Private Key yN.

Identifier	Code	Digits	Bits	Name	Key
IMSI	MCC	3	12	Mobile Country Code	y3
MNC	3	12	Mobile Network Code	y2
MSIN	9	36	Mobile Subscription Identification Number	y1
The first Authentication A(1) corresponds to the 5G node identity data v1. The output layer of the Blockchain neural network is assigned to the Intelligent Building Private Key and the hidden layer contains the value of the neural chain that will be inserted in the input layer for the next authentication. The second Authentication A(2) has associated the 5G node identity data for the first Authentication A(1), the chain, or the value of the hidden layer zM and the additional 5G node identity data v2. The output state Y = yN still corresponds the Intelligent Building Private Key. This process iterates as more 5G node identity data is inserted in a staged enabling process. After the first Authentication; the 5G node requires to be validated at each additional Authentication with the Intelligent Building private key. The 5G node verification data is validated and verification data vt from Authentication A(t) are added to the Intelligent Building information.

5. Smart City blockchain random neural validation
This section proposes a practical validation of the Blockchain Random Neural Network model in the Smart City that covers the Internet of Things and 5G. The software used in the experiments is the network simulator Omnet ++ with Java. In both validations the Blockchain Random Neural Network is trained based on an input state X ​= ​xI that corresponds the node Vt and the output state Y = yN represents the user Private Key YN.

5.1. Blockchain cybersecurity in IoT
The three independent experiments will emulate a 1) Bluetooth network with roaming validation of MAC addresses, 2) WLAN network with roaming validation of MAC and IP addresses and 3) LTE Mobile network with a roaming validation of MAC and IP and user Passport (Table 3).


Table 3. Neural Blockchain in IoT and Cybersecurity Validation – Node values.

Type	Use	Coverage	Layer	Node Vt	User yN
Bluetooth Master	Room
Floor	10 m
3140m2	MAC	48 bits
01-23-45-67-89-XX	48 bits
01-23-45-67-89-AB
Wireless LAN Access Point	Building
Campus	100 m
0.314 km2	MAC-IP	48 ​+ ​32 bits
192.168.11.XX	48 ​+ ​32 bits
192.168.11.11
Mobile LTE Base Station	City
Country	1 km
31.4 km2	MAC-IP
PASSPORT	48 ​+ ​32 bits
N/A	48 ​+ ​32+72 bits
VGD12345F
The user is assigned a private key yN that requires validation before is allowed to transmit. When the user travels through the space, the credential private key is validated by the roaming node. The decentralized system retrieves the neural weights associated to the private key, mines the block, adds the node code and stores back the neural network weights in the decentralized system. This validation considers mining as the selection of random neuron values until Ek < T. When the user roams, the private key is presented and the information of the node (MAC and IP address) vt is added to the neural chain once it is mined. Each bit is codified as a neuron however rather than the binary 0–1, neuron potential is codified as 0.25–0.75 (Fig. 8); this approach removes overfitting in the learning algorithm as neurons only represent binary values.

Fig. 8
Download : Download high-res image (281KB)
Download : Download full-size image
Fig. 8. Neural Blockchain in Cybersecurity validation.

The simulations are run 100 times for a Bluetooth MAC Network (Table 4). The information shown is the number of iterations the Random Neuron Network with Blockchain configuration requires to achieve an Ek < 1.0E-10, the error Ek, the learning and mining time, the number of iterations to mine the Blockchain and the number of neurons for each layer: input xL, hidden zM and output yN.


Table 4. Bluetooth MAC simulation – learning and mining.

Roaming	Learning Iteration	Learning Time (s)	Learning Error	Mining Iteration	Mining Time (ms)	Mining Threshold	Mining Error Ek	Number of Neurons (xL, zM, yN)
1	233.00	136.26	9.96E-11	36.22	1.811	1.00E-05	2.48E-06	48-4-48
2	190.52	124.47	9.46E-11	24.88	2.49	1.00E-05	3.30E-06	100-4-48
3	171.42	108.48	9.40E-11	56.32	10.70	1.00E-05	3.01E-06	152-4-48
4	160.90	112.29	9.18E-11	758.37	227.51	1.00E-05	3.97E-06	204-4-48
5	150.67	101.04	9.12E-11	109.10	45.822	1.00E-05	3.64E-06	256-4-48
6	144.31	93.33	9.43E-11	116.59	68.79	1.00E-05	3.13E-06	308-4-48
7	140.00	94.47	9.47E-11	354.38	287.05	1.00E-05	3.09E-06	360-4-48
8	137.00	104.99	9.06E-11	2134.31	2326.39	1.00E-05	3.70E-06	412-4-48
9	132.99	116.77	8.75E-11	12.13	18.0737	1.00E-05	3.56E-06	464-4-48
10	131.00	99.98	9.30E-11	141.99	282.56	1.00E-05	3.26E-06	516-4-48
With four neurons in the hidden layer, the number of learning iterations gradually decreases while the number of input neurons increases due to the additional information added when roaming between nodes. The results for the mining iteration are not as linear as expected because mining is performed using random values (Fig. 9). Mining is easier in some Roaming stages when it would have been expected harder as the number of neurons increases.

Fig. 9
Download : Download high-res image (209KB)
Download : Download full-size image
Fig. 9. Bluetooth MAC simulation – learning and mining.

The Learning Threshold (LT) and Mining Threshold (MT) parameters tune the Blockchain Random Neural Network performance, or number of iterations, as shown on Table 5. As expected, the higher accuracy in the learning stage correlates with higher learning iterations and lower number of mining iterations as the network is trained with more accurate values.


Table 5. Bluetooth MAC simulation – network parameters – iteration.

Roaming	LT	Learning Iteration	Mining Iteration
MT = E−03	MT = E−04	MT = E−05	MT = E−03	MT = E−04	MT = E−05
1	1.00E-05
1.00 E−10	118.00
233.00	118.00
233.00	118.00
233.00	6.08
4.39	13.80
11.92	63.81
35.18
2	1.00E-05
1.00 E−10	97.30
190.70	97.32
190.58	97.35
190.68	3.22
3.26	10.88
10.71	65.10
26.24
3	1.00E-05
1.00 E−10	88.03
171.58	88.02
171.48	88.03
171.58	5.56
4.73	19.94
17.77	115.85
52.78
4	1.00E-05
1.00 E−10	83.00
160.88	83.00
160.91	83.00
160.92	33.36
33.86	190.97
242.29	1645.15
704.04
5	1.00E-05
1.00 E−10	78.00
150.69	78.00
150.77	78.00
150.72	4.98
4.09	28.42
34.75	203.37
99.85
6	1.00E-05
1.00 E−10	75.00
144.54	75.00
144.55	75.00
144.53	4.59
3.97	35.33
35.32	291.99
147.27
7	1.00E-05
1.00 E−10	73.00
140.00	73.00
140.01	73.00
140.00	5.23
4.47	137.24
72.15	833.42
416.99
8	1.00E-05
1.00 E−10	71.13
137.00	71.06
137.00	71.14
137.00	7.00
6.74	555.00
306.91	6431.53
2614.85
9	1.00E-05
1.00 E−10	69.00
132.99	69.00
133.00	69.00
133.00	1.05
1.04	3.64
3.21	27.12
13.78
10	1.00E-05
1.00 E−10	68.69
131.00	68.69
131.00	68.74
131.00	1.34
1.29	24.02
23.11	290.39
134.65
Table 6 shows the Learning and Mining Errors; the Blockchain Random Neural Network adjusts to the to the Learning Threshold and Mining Threshold.


Table 6. Bluetooth MAC simulation – network parameters – error.

Roaming	LT	Learning Error	Mining Error
MT = E−03	MT = E−04	MT = E−05	MT = E−03	MT = E−04	MT = E−05
1	1.00E-05
1.00 E−10	9.49E-06
9.96E-11	9.49E-06
9.96E-11	9.49E-06
9.96E-11	4.07E-04
3.03E-04	3.23E-05
3.21E-05	8.45E-06
3.00E-06
2	1.00E-05
1.00 E−10	9.55E-06
9.34E-11	9.51E-06
9.40E-11	9.51E-06
9.34E-11	3.40E-04
2.89E-04	3.87E-05
3.36E-05	8.42E-06
3.23E-06
3	1.00E-05
1.00 E−10	9.65E-06
9.30E-11	9.69E-06
9.36E-11	9.65E-06
9.31E-11	3.45E-04
3.74E-04	3.88E-05
3.08E-05	8.41E-06
3.18E-06
4	1.00E-05
1.00 E−10	9.44E-06
9.22E-11	9.46E-06
9.21E-11	9.46E-06
9.21E-11	4.74E-04
4.50E-04	4.33E-05
3.76E-05	8.12E-06
3.22E-06
5	1.00E-05
1.00 E−10	9.41E-06
9.10E-11	9.38E-06
9.01E-11	9.42E-06
9.08E-11	4.44E-04
3.97E-04	4.32E-05
3.65E-05	8.27E-06
2.72E-06
6	1.00E-05
1.00 E−10	9.41E-06
9.18E-11	9.44E-06
9.18E-11	9.44E-06
9.21E-11	4.81E-04
5.30E-04	3.85E-05
3.43E-05	8.11E-06
3.40E-06
7	1.00E-05
1.00 E−10	9.19E-06
9.46E-11	9.21E-06
9.45E-11	9.20E-06
9.43E-11	6.00E-04
5.81E-04	4.65E-05
4.30E-05	7.93E-06
2.95E-06
8	1.00E-05
1.00 E−10	9.65E-06
9.08E-11	9.76E-06
9.09E-11	9.65E-06
9.06E-11	7.01E-04
6.62E-04	5.57E-05
4.83E-05	8.23E-06
3.75E-06
9	1.00E-05
1.00 E−10	9.70E-06
8.75E-11	9.69E-06
8.74E-11	9.72E-06
8.71E-11	2.34E-04
2.43E-04	4.43E-05
3.79E-05	8.19E-06
3.53E-06
10	1.00E-05
1.00 E−10	8.88E-06
9.33E-11	8.88E-06
9.30E-11	8.81E-06
9.29E-11	5.26E-04
4.70E-04	5.26E-05
5.15E-05	7.83E-06
3.41E-06
The Blockchain Random Neural Network algorithm shall detect tampering to be effective (Table 7) where Δ represents the number of tampered bits.


Table 7. Bluetooth and WLAN simulation – tampering error.

Roaming	Bluetooth - MAC	WLAN - IP
Error
Δ = 0.0	Error
Δ = 1.0	Neurons (xL, zM, yN)	Error
Δ = 0.0	Error
Δ = 1.0	Neurons (xL, zM, yN)
1	9.96E-11	1.31E-03	48-4-48	9.28E-11	1.18E-03	80-4-80
2	9.49E-11	1.50E-04	100-4-48	9.57E-11	1.63E-04	164-4-80
3	9.18E-11	4.32E-05	152-4-48	9.36E-11	5.21E-05	248-4-80
4	9.38E-11	1.95E-05	204-4-48	9.50E-11	2.23E-05	332-4-80
5	9.01E-11	8.54E-06	256-4-48	9.21E-11	1.02E-05	416-4-80
6	9.07E-11	4.28E-06	308-4-48	9.36E-11	5.22E-06	500-4-80
7	9.49E-11	2.56E-06	360-4-48	9.12E-11	3.07E-06	584-4-80
8	9.33E-11	1.71E-06	412-4-48	9.28E-11	2.10E-06	668-4-80
9	8.93E-11	9.00E-07	464-4-48	9.25E-11	1.15E-06	752-4-80
10	9.59E-11	7.22E-07	516-4-48	9.55E-11	7.81E-07	836-4-80
The effects of tampering the neural blockchain (Fig. 15) is detected by the learning algorithm even when the tampered values only differ in a bit, Δ = 1.0, although this error reduces with an incrementing roaming as the number of neurons increases. Both Bluetooth and WLAN Networks perform similarly.

Fig. 15
Download : Download high-res image (209KB)
Download : Download full-size image
Fig. 15. Bluetooth and WLAN simulation – tampering error.

5.2. Blockchain cybersecurity in 5G
The experiment will emulate a gradual implementation of a 5G network in an Intelligent Building were 5G nodes are increasingly enabled into the Smart Building for IoT services (Table 8).


Table 8. Neural Blockchain in Cybersecurity Validation – 5G Node values.

Simulation	Application	Cell	Coverage	5G Node Identity Vt	Intelligent Building IMSI YN
Five
5G Nodes	Intelligent Building	Pico	100 m
0.314 km2	60 bits
234-151-234512340-4	60 bits
234-151-234512351
A 5G Network generic Performance Specification is shown on Table 9:


Table 9. 5G network performance specification.

Data Rate	Frequency	Latency	Modulation	Cell
20 Gbit/s	3.5 GHz–26 GHz	<1 ms	Non-Orthogonal Multiple Access	Pico Small
The Intelligent Building is assigned to an IMSI private key yN whereas the gradual addition of 5G nodes require validation before they are enabled to transmit IoT information into the Intelligent Building. When an 5G node is ready to become operational, its identity is validated by the Intelligent Building. The decentralized system retrieves the neural weights associated to the private key, mines the block, adds the node code and stores back the neural network weights in the decentralized system (Fig. 16). When more 5G nodes are ready to become operational, the Intelligent Building uses its IMSI private key yN and the 5G node identity vt is added to the neural chain once it is mined.

Fig. 16
Download : Download high-res image (166KB)
Download : Download full-size image
Fig. 16. Neural Blockchain in 5G Cybersecurity validation.

The simulations are run 100 times for a five 5G node Network. The information shown in Table 10 is the number of learning iterations and time the Random Neuron Network with Blockchain configuration requires to achieve an Ek < 1.0E-10.


Table 10. 5G blockchain random neural network simulation – learning.

5G Node	Learning Iteration	Learning Time (s)	Standard Deviation	95% CR	Learning Error	Standard Deviation	95% CR	Number of Neurons (xL, zM, yN)
1	267.00	43.548	0.00	0.00	9.50E-11	5.20E-26	1.02E-26	60-4-60
2	219.73	36.488	0.51	0.10	9.48E-11	3.06E-12	5.99E-13	124-4-60
3	194.76	34.504	0.49	0.10	9.38E-11	3.36E-12	6.58E-13	188-4-60
4	178.91	34.294	0.49	0.09	9.29E-11	3.36E-12	6.59E-13	252-4-60
5	167.22	36.741	0.42	0.08	9.45E-11	4.28E-12	8.39E-13	316-4-60
Table 11 shows the error Ek, the number of iterations and time to mine the Blockchain and the number of neurons for each layer; input xL, hidden zM and output yN for a mining threshold of 1.00E-02.


Table 11. 5G blockchain random neural network simulation – mining.

5G Node	Mining Iteration	Mining Time (ms)	Standard Deviation	95% CR	Mining Threshold	Mining Error Ek	Standard Deviation	95% CR	Number of Neurons (xL, zM, yN)
1	1.07E+02	7.49E+00	1.05E+02	2.07E+01	1.00E-02	4.54E-03	3.15E-03	6.17E-04	60-4-60
2	1.02E+04	1.63E+03	9.83E+03	1.93E+03	1.00E-02	6.63E-03	2.55E-03	5.00E-04	124-4-60
3	1.04E+05	3.02E+04	9.58E+04	1.88E+04	1.00E-02	8.03E-03	1.72E-03	3.36E-04	188-4-60
4	6.32E+05	2.84E+05	7.88E+05	1.54E+05	1.00E-02	8.47E-03	1.33E-03	2.60E-04	252-4-60
5	5.70E+05	3.82E+05	6.30E+05	1.24E+05	1.00E-02	8.87E-03	1.02E-03	2.00E-04	316-4-60
With four neurons in the hidden layer, the number of learning iterations gradually decreases while the number of input neurons increases due to the additional information added activating 5G nodes. The results for the mining iteration are not as linear as expected because mining is performed using random values (Fig. 17). Mining is easier in the final authentication stage when it would have been expected harder as the number of neurons increases.

Fig. 17
Download : Download high-res image (269KB)
Download : Download full-size image
Fig. 17. 5G network simulation – learning and mining iterations.

Similar to the previous validation, the learning and mining time follows their respective number of iterations although the processing time per iteration increases at each step as the solution of the Blockchain Neural network equations increase in complexity (Fig. 18).

Fig. 18
Download : Download high-res image (118KB)
Download : Download full-size image
Fig. 18. 5G network simulation – mining time per iteration.

The Blockchain Random Neural Network algorithm must detect 5G rogue nodes to be effective (Table 12); Δ represents the number of bit changes in the Node identity vt for different values hidden neurons ZM.


Table 12. 5G network simulation – rogue node tampering error.

5G Node	Δ	Neurons (xL, zM, yN)	Error	Neurons (xL, zM, yN)	Error	Neurons (xL, zM, yN)	Error
1	0.0
1.0	60-4-60	9.50E-11 1.83E-03	60-60-60	9.97E-11 1.53E-03	60-60-60	9.97E-11
1.53E-03
2	0.0
1.0	124-4-60	9.84E-11 2.43E-04	124-60-60	9.93E-11 1.40E-04	124-124-60	9.98E-11
1.40E-04
3	0.0
1.0	188-4-60	9.01E-11 6.76E-05	188-60-60	9.93E-11 3.57E-05	188-188-60	9.98E-11
3.78E-05
4	0.0
1.0	252-4-60	8.91E-11 2.58E-05	252-60-60	9.95E-11 1.30E-05	252-252-60	9.99E-11
1.48E-05
5	0.0
1.0	316-4-60	8.88E-11 1.57E-05	316-60-60	9.95E-11 6.08E-06	316-316-60	9.99E-11
4.54E-06
The simulation results show that the increment of neurons in the hidden layer requires additional learning iterations. However, this increment is not reflected in higher accuracy to detect input errors or 5G rogue nodes, therefore ZM = 4 is the most optimum configuration for this model.

6. Conclusions
This article has proposed the application of the Blockchain Random Neural Network in IoT and 5G infrastructure for Smart Cities where neurons are gradually incremented as user validation data increases. This configuration provides the proposed algorithm with the same properties as the Blockchain: security and decentralization with the same validation process: mining the input neurons until the neural network solution is found. The presented model can be generalized to any Authentication, Authorization and Accounting (AAA) server.

The Random Neural Network in Blockchain configuration has been applied to a 1) an IoT AAA server that covers the digital seven layers of the OSI Model and the physical user credentials such as passport or biometrics, 2) a 5G node authentication process in Intelligent Buildings. Experimental results show that Blockchain applications can be successfully implemented in Smart City infrastructure using neural networks. Mining effort is gradually increased as user information expands where data is encrypted in a decentralized network. In addition, validation results demonstrate that rogue users or cyber attackers can be detected and identified.

Future work will include the validation of the Blockchain with other neural networks such as Long Short Term Memory to compare the mining results. The expansion of the Roaming and Authentication stages will assess the mining effects in a longer term. The balance between the number of neurons that form the neural chain versus new user data will be assessed in terms of learning, mining iterations and the detection of rogue nodes tampering the network.