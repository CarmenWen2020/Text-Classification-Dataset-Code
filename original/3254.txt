With the advent of a hyper-connected society, expectations for blockchain technology and its potential have increased. Blockchain technology is emerging as a method to solve security vulnerabilities in the IoT and mobile devices that are already used in various industrial fields. However, the security problem is still one of the most critical issues. The conventional blockchain has a problem in which the performance decreases as the number of participants increases because all of the users participate in the verification. As a result, it is not suitable for traditional IoT and mobile environments in which resources are limited.

This work presents an approach of applying a blockchain system in a D2D (Device-to-Device) environment and proposes solutions for the problems of conventional mobile device communication and blockchain consensus algorithms. After a blockchain system in a wireless network environment is separated into an off-blockchain and an on-blockchain, the divided blockchains are processed in three steps. In the first stage of 0ff-blockchain, our proposal confirms the safety of IoT devices that transfer confidential data. In the next stage, the devices reduce the risk of eavesdropping from a third party by calculating the security capacity using the resources of the mobile devices which register for membership on a private blockchain. In the last stage, the devices join the blockchain consensus process. The reliability of the consensus and the performance of the system are improved through calculation of the real participation probability of the participants by the communication elements and by determining whether each node is a selfish participant. As a result, our work proposes a consensus algorithm suitable for D2D communication and a SBC(Selective Blockchain) system considering environmental characteristics.

Previous
Next 
Keywords
D2D

Identity impersonation

Wiretapping

Free-riding

IoT

Authentication

Smart registration

Blockchain

1. Introduction
Along with the rapid development of device networking services, the Internet of Everything (IoE) is evolving as a connection for all types of equipment through the Internet of Things (IoT). The wireless environment of the fifth generation (5G) improves the existing system with respect to the networking demands and should provide a road map for reliable and resource-efficient solutions (Li et al., 2019a). Device-to-device (D2D) communication has been selected as one of the three core services of 5G technology related to massive machine-type communications (mMTC) for providing services that include live video streaming and virtual reality (VR) videos (Popovski et al., 2018). Unlike conventional networks where all communications have to pass through a base station (BS), D2D communication is able to exchange flexible data between devices without base stations or fixed intermediate infrastructures and then transmit these data to the BS when the devices are in the BS range (Gupta and Jha, 2015). D2D communication can reduce network traffic, communication delay, and battery power consumption by direct communication. It also has the advantage of continuous communication between automatically connected devices even when the BS stops because of disasters such as earthquakes and wars.

However, the number of security threats that can occur because of the development of the D2D communication has also increased, as shown in Fig. 1 (Zhang and Lin, 2017) (Fodor et al., 2012) (Liu et al., 2014). Unless specific and stringent security regulations are established, the security may be uncertain at the stage of the device and platform development (Wang and Yan, 2015). In particular, security enhancement is an essential factor in the environment of personal data exchange, such as financial transactions. Therefore, it is necessary to prevent security threats with a security policy ensuring the integrity of the data exchanged between the UE devices (Haus et al., 2017). Another security threat which commonly occurs in D2D networks is wiretaps (Mei et al., 2017). Unauthorized users can intercept messages by using interfering signals such as noise and reduce communication performance. If the message transmission that includes noise and fading elements excluded from normal communication is considered, these factors can interfere with the eavesdropper's signal. This also helps to improve the secure transfer rate (Yue et al., 2013). Moreover, considering that the D2D networks have open and distributed properties, these networks are considerably vulnerable to significant effects of selfish users that behave uncooperatively in delivering certain content to other users. This type of behavior is called a free-riding attack (Timothy, 2017). The blockchain is a mechanism that provides reliable transactions between untrusted nodes through a consensus algorithm in a distributed environment. Therefore, the free-riding attack can be solved by a blockchain mechanism based on a consensus algorithm that separates unreliable nodes, such as selfish nodes, and ensures the impartiality and availability of data access only for the normal nodes in the D2D network, similar to the distributed environment.

Fig. 1
Download : Download high-res image (192KB)
Download : Download full-size image
Fig. 1. D2D communication phase and security threats.

The blockchain technology can solve such security problems in peer-to-peer (P2P) networks such as the D2D environment. It is a process that records all of the transactions which occur during a certain period, generates a unit storage called a “block” and sequentially stores the units in a “chain” formed to prevent arbitrary modification of the dat a (Yaga et al., 2019). It ensures the integrity and reliability of records with an open distributed ledger technology that allows the data to be owned and verified by all of the distributed nodes participating in the blockchain network (Li et al., 2020). Therefore, it can provide a solution to the security problems faced by the centralized cloud-based IoT and the network expansion problems related to the reliability and management of the device in D2D communication (Huh et al., 2017). However, these solutions have constraints related to the limited resources of the IoT and mobile devices because the traditional blockchain uses a consensus algorithm for obtaining the proof of work of transactions frequently requiring a considerable amount of computing power or leading to considerable network traffic.

This paper proposes a blockchain-based system that provides the following security services to prevent the threats.

•
Authentication:

-
TEE-based IoT device authentication mechanism that can authenticate not only the equipment but also the users

-
Because the proposed system uses a private blockchain for high security, authentication to continuously restrict and manage participants

-
Authentication mechanism optimized for lightweight IoT devices as opposed to traditional methods focused on transactions

•
Confidentiality and Authorization:

-
Secrecy capacity (SC) computation to ensure confidentiality to prevent eavesdropping

-
Permissions decision of the verifiers to participate in the proposed consensus process dependent on the resource usage.

-
Reducing the probability of malicious participants in the blockchain network by checking whether each participant is a safe participant or not

•
Cooperative consensus algorithm:

-
Efficient and amicable consensus excluding participants that do not use resources, such as selfish nodes

-
A consensus mechanism to ensure the fairness and availability of each node, not simply to allocate incentives

-
The proposed mechanism to take advantage of the private blockchain which is the equitable authority of all the verifiers, while compensating for the weaknesses of significantly decreasing throughput due to the increased number of verifiers

This paper discusses the limitations of traditional consensus algorithms and proposes a selective byzantine fault tolerance (SBFT) method to solve the conventional problems occurring in D2D communication and blockchain. By computing the SC of each device's resource and selecting the participants through the proposed smart registration service (SRS), we enhance the reliability of the verifiers and prevent eavesdropping to guarantee authentication and confidentiality. The results of our study show that the efficiency is improved, particularly when the consensus algorithm is executed in the blockchain where many users are registered.

The rest of this paper is organized as follows. The next section analyzes the three representative security threats (identity impersonation, wiretapping, and free-riding) in detail in a D2D environment and presents the security requirements and proposed solutions to the threats. Section 3 discusses traditional research related to the proposed solutions, such as the SC and blockchain. Section 4 introduces a blockchain system based on the SRS and SBFT. Section 5 evaluates the proposed mechanism such as participation computation using the SC and comparison of practical byzantine fault tolerance (PBFT) (commonly used in the private blockchain) and SBFT. Section 6 concludes this paper with some emphasis and extensions.

2. Security threats and requirements in D2D communications
This section presents the mechanisms currently used to identify and address the security threats in a D2D network. The threats generally include identity theft, eavesdropping, free-riding, and data modification. These problems are likely to arise from an unauthorized or malicious user's intervention in D2D communications without some central management. This paper explains the security problems and requirements as well as suggests some suitable solutions for secure D2D communication to prevent malicious intervention, as specified in Table 1.


Table 1. Requirements and proposed solutions of security threats.

Threats	Explanation	Requirement	Solution
Identity Impersonation	Unauthorized users participate legally in a D2D network with malicious purposes	Design of the device authentication	IoT device authentication based on TEE
Wiretapping	Some messages in D2D communication may be eavesdropped by authorized or unauthorized users	Recipient identification with higher SC than eavesdroppers	SRS
Free-riding	Selfish users do not forward some data to other users	Design of a cooperative mechanism to ensure impartiality and availability	SBFT
Data Modification	Malicious users manipulate or modify data	Add digital signatures to the data and check the integrity or validity of messages	Blockchain System
2.1. Identity impersonation
When dealing with sensitive information, blockchain technology is expected to be used as a technical solution for security problems in D2D communication with the IoT environment. However, there are problems with the authority in the blockchain network and many devices require safeguards such as device identification, control, and access (Kishigami et al., 2015). If private blockchains are used to satisfy the high-security requirements in the IoT system, authentication methods are needed to continuously proceed with the restrictions and management of the nodes. Therefore, IoT environment-optimized mechanisms instead of conventional methods focused on transactions should be implemented.

Unlike the public blockchain in which there is no specific certification process, the private blockchain configured for confidential information requires additional reliability-based certification processes (Pilkington, 2016). In addition, if a participant registered with a membership of the private blockchain is malicious, the participant becomes an eavesdropper and has the authority to leak confidential information. The participant's device also needs authentication because the authority may be abused. Finally, if the attacker is already involved in the blockchain, it is impossible to determine whether the requested transaction is generated by the attacker or a normal participant.

Therefore, an authentication mechanism is required to prevent data leakage by both malicious devices and participants in the D2D environment. This paper shows that this problem can be solved by certifying the device based on the trusted-execution environment (TEE).

2.2. Wiretapping
When D2D communication is applied in the real world, interference between devices frequently occurs and some messages are eavesdropped by this interference. The interference from multiple D2D communication cells increases the number of received messages in malicious nodes than authenticated receivers (Haus et al., 2017). This is referred to as wiretapping.

In traditional networks, the noise and fading factors, as primary causes of an unstable network environment, are considered to degrade the communication performance. However, when the message is wiretapped between the devices within a certain radius of the D2D communication, these elements can help to improve the secure transmission rate by preventing the eavesdropper from receiving signals. The SC represents the security transfer proportion and helps aids the calculation to maximize the recipient's SC based on the communication elements. This approach can prevent the eavesdropped messages and allow safe communication. Research is currently underway which utilizes these elements in order to safely transmit secret messages without the use of additional security keys to obstruct potential eavesdroppers (Zhang and Lin, 2017).

In the present study, the participants are registered by using SC at the SRS stage in the private blockchain. The SRS based on the SC shows that security can be established by reducing the probability of malicious eavesdroppers in the blockchain network and checking whether each participant is a normal node for the consensus process.

2.3. Free-riding
Some nodes participating in the D2D connection do not transfer data to other nodes while receiving the data from the connected nodes to conserve energy. This is called a free-riding attack (Karakaya et al., 2009). As one of the many problems which commonly occurs in P2P networks, it is difficult to form a voluntary and altruistic peer for the high quality of service that is intended to be achieved in a shared network which sends and receives large amounts of data. In these distributed computing systems, the attack can easily cause CPU resource shortages and system failures. In addition, if media streaming systems are formed by devices such as smartphones, the systems can be maintained when each node should collaborate. If the system consists of only a small number of users, the streaming quality is poor. Finally, selfish nodes cause abnormal communication, which prevents the formation of a normal network structure and reduces the availability.

IIn a general reputation system, only the data received by each node may be misreported for cheating the system. As a new node can easily join the network, there is also the problem that the network resources can be easily used by repeatedly changing the online identity (Hong et al., 2017). Distributed computing systems can also have side effects such as network vulnerabilities and partitioning. Incentive mechanisms have been investigated as a method to solve these problems. However, an appropriate mechanism for IoT systems that can ensure the fairness and availability of each node, instead of simply allocating incentives, needs to be developed (Ouaddah et al., 2016).

All of the peers participating in the private blockchain have fair authority. Only peers authorized by a trusted server can participate and rapidly proceed with the consensus to create a block. While the fairness and availability problems of a distributed computing system can be solved by the block-chain technology, there are some disadvantages of limiting dozens of peers because of the increased network traffic and decreased throughput, which is inversely proportional to the number of participants. In particular, in the IoT environment, this problem is critical because the devices with limited resources suffer from difficulties for the calculation capacity of the consensus process. A consensus cannot ordinarily be reached and there can even be some situations in which the entire system cannot fail.

The SBFT proposed in this paper calculates the degree of participation of each peer and selects the validators for the consensus. This can prevent free-riding attacks and provide better performance of the throughput.

3. Related works
3.1. Secrecy capacity
Public information can be sent to both receivers and eavesdroppers in wireless networks. Hidden eavesdroppers can continuously transmit signals containing the detected audio or video information to eavesdropping receivers over a range of hundreds of meters. In this case, the signal of the eavesdropper is regarded as the periodically generated noise. If the sender assumes that the noise is transmitted with a transmission capacity that cannot be decoded by the eavesdropper, the data can be transmitted safely. The SC is this eavesdropping channel code that can transmit securely. Irrespective of the computing ability of the eavesdropper, without sharing the security key by using the physical characteristics of the channel (Hayashi and Chen, 2019). Therefore, by calculating the SC in both the eavesdropper and the recipient, it prevents wiretapping by malicious eavesdroppers and enables secure communication. In order to obtain a positive SC, the SC of the primary channel must have a larger value than the SC of the eavesdropping channel (Hayashi and Chen, 2019).

As shown in Fig. 2, a sender transmits a message (MSG) channel capacity, Cm of the main channel determined through two channels after the codec encodes the MSG. The Cw of the wiretapping channel is determined by the legitimate sender and receiver in addition to the channel capacity mate transmitters and eavesdroppers. The MSG transferred through the channels is combined with some noise. If the channels are symmetrical, the maximum SC efficiency is SCn in Equation (1) (Yu et al., 2019; Gopala et al., 2008). If SCi becomes negative, it is can be sent, while maintaining full security, is expressed as defined as “0”.(1)

Fig. 2
Download : Download high-res image (78KB)
Download : Download full-size image
Fig. 2. Wiretapping channel mode.

Here, Cm should have a value higher than Cw in order to obtain the maximum SCn. If the MSG is transmitted while maintaining SC in which the eavesdropper cannot be decrypted, the MSG can be transmitted securely. Therefore, secure communication is achieved when the SC of the authorized recipient is maximized without eavesdropping by a third party. This study registers the peers or participants who constitute the blockchain network by applying SC in the smart registration service phase. By doing so, we aim to reduce the probability of malicious participants in the blockchain by checking whether each participant is a secure node.

3.2. Consensus algorithm in blockchain
The consensus algorithm in the blockchain is a method in which the participants reach an agreement on the equivalent result when there is a time difference in reaching the data in the P2P network (Shalaby et al., 2020). The blockchain collects the transaction history and shares the identical blocks with the participants (at least 50% of the participants). The participants execute the consensus algorithm to validate the shared block and to prevent duplication and errors. This excludes the possibility that the participants will modify or delete data as well as ensuring reliability. If the attacker attempts to violate the rights of the block or modify the transaction history, it is nearly impossible that the block history would be modified.

As the blockchain is technology that can be applied to various fields such as finance and industry, the consensus algorithm is very diverse. In this section, this paper analyzes the limitations of typical algorithms (PoW and PBFT) used in the public and private blockchains, and identifies the necessary elements of a suitable and efficient blockchain for a D2D network.

3.2.1. Proof-of-work algorithm
The PoW is a representative consensus algorithm of the public blockchain that anyone can participate in. The main process is to find a nonce value and share the block of participants that found the nonce value. As the number of participants is unlimited, the time consumption efficiency is poor, because all the participants need to verify the block. Because the PoW is a majority decision algorithm, it is possible for each participant or the group with most of the computing power to disapprove or alter the blocks. The participants create a group called a “Mining Pool” to mine and share the rewards. There is plenty of possibility for these groups to collaborate and manipulate the results. In addition, long chains are judged to be the correct chains. If normal transactions exist in short chains, there is a problem of finality uncertainty in which transactions are rejected.

The PoW algorithm finds the nonce that satisfies the difficulty, as shown in Fig. 3, and then shares the nonce with all of the participants. When the node that receives the block verifies and agrees by more than 50%, the block is added to the chain. Fig. 4 shows the execution time of the PoW algorithm according to the difficulty level. The faster this processing time is, the more difficult it is. This implies that a high level of difficulty increases not only the processing time but also the computing power required for mining (Li et al., 2019b). If the high difficulty level requires a considerable amount of resources, it cannot be applied in an IoT environment composed of lightweight equipment. Moreover, in an IoT environment that requires fast verification as well as accuracy, the consensus process should be simpler than the PoW algorithm.

Fig. 3
Download : Download high-res image (199KB)
Download : Download full-size image
Fig. 3. Block information created by the PoW algorithm.

Fig. 4
Download : Download high-res image (184KB)
Download : Download full-size image
Fig. 4. Consensus processing time according to the difficulty level of the PoW.

Due to the disadvantage of traditional blockchain technology, the design of a scalable, computable, energy-efficient, and safe blockchain for IoT applications is a challenging work direction. IOTA uses Tangle, which is a Direct Acyclic Graph (DAG) structure (Sengupta et al., 2020). Transactions called sites are stored in DAG after the nodes verify the issuance and validity of the transactions. Every time a new transaction is created, the transaction is marked on the edge of the DAG and should be approved by the previous two transactions, which are the parent transactions (Popov, 2018). To approve the user's own transactions, the user should work to approve other transactions. The approval process is carried out with a much lower difficulty than the difficulty level of PoW (Baek and Lin). To attack the tangles, opponents should have 34% of the network hash power, which is lower than 51% of the PoW, to create and verify false transactions. In fact, 34% of the hash power is realistically achievable (Ince et al., 2018). Temporary solutions to 34% attacks are also addressed by a separate node called the Coordinator node. The Coordinator node acts as an administrator signing the latest good state of the system. Therefore, the Tangle structure is not suitable in the D2D environment because the platforms are centralized.

Because of the easy participation in the D2D network, the applied consensus algorithm is ideal to involve the mechanisms used in public blockchains. However, it is difficult for the consensus algorithm of the public blockchain to determine the level of security of participants and to maintain safety. In this paper, the security level of participants is determined and demonstrated by the resources utilized so that they can participate in the consensus algorithm. The proposed algorithm is able to ensure the device safety of participants in line with the characteristics of the D2D environment.

3.2.2. Practical byzantine fault tolerance algorithm
The PBFT is a Byzantine fault model such as PoW and is a type of consensus algorithm that solves the performance and finality problems of PoW. However, unlike in PoW, all of the nodes need to know about each other's existence. This algorithm is adopted and used mostly in consortium-based private blockchains such as Hyper ledger fabric. Hyper ledger provides a membership service and a chain code service. After registration with the membership service, the PBFT algorithm of the chain code service proceeds with the P2P transaction agreement. After checking the transactions of the majority, the nodes create a block. When the number of illegal nodes is f, the total number of nodes should be 3f+1 and the number of nodes required to generate the validated block is more than f+1. The PBFT should satisfy a certain number of participants, unlike the PoW process, irrespective of the number of nodes (Shalaby et al., 2020).

As the one node elected as the primary node forwards the transactions received from the client to the rest of the nodes, the fork, which is one of the problems of the PoW, does not take place. This method also has the advantage of no repetitive calculations to find answers from a mining system and faster speed. For reliable transactions, the chain code services are executed in three steps, namely the deployment, invoke, and query sequence, as shown in Fig. 5. After the completion of these steps, the entire system in which the blockchain can be used is constructed.

Fig. 5
Download : Download high-res image (529KB)
Download : Download full-size image
Fig. 5. The three steps, deployment, invoke, and query, of chain code services.

Fig. 6 shows the runtime of the PBFT algorithm according to the number of nodes. The faster process speed and the lower compensation system compared to the public blockchain indicate that all of the participants have equal rights to the data. However, the larger the number of nodes, the slower the consensus processing speed. Therefore, it is important to select an appropriate number of verifiers for the consensus.

Fig. 6
Download : Download high-res image (182KB)
Download : Download full-size image
Fig. 6. Consensus time according to the number of nodes in PBFT.

The D2D network that consists of mobile devices has limitations in terms of the capacity of batteries and memories. It can be seen that the blockchain system is suitable for PBFT, which has light and fast properties of a consensus algorithm. Since the increased number of verifiers also increases the consensus processing time, the constraints are still not solved. Therefore, this paper proposes a mechanism to reduce time while increasing the reliability of the consensus by censoring the verifier participating in the consensus process according to the security level.

4. Proposed blockchain system
This section presents the SBC based on the SBFT consensus algorithm to select the normal and collaborative verifiers according to the security degree of the device. The SBC structure consists of the off-blockchain and on-blockchain structures for the optimized blockchain systems in the D2D network. It describes the overall architecture and how to authenticate and select certain nodes that want to participate in the consensus process.

4.1. Overview
Fig. 7 shows the overall architecture of the SBC using the SBFT algorithm proposed in this paper. The SBC consists of two main parts. Prior to sharing and storing the information in the blockchain in D2D communication, the off-blockchain includes the authentication of low-power IoT devices and collection of user data. In the other part of the SBC, the users can obtain relevant permissions and participate in the blockchain network by utilizing the communication resources between devices, which is called the on-blockchain. The blockchain environment part, i.e., the on-blockchain, is composed of SRS and SBFT as the blockchain consensus algorithm to determine and manage the security of the participants. Simulations are conducted on the basis of the proposed structure to analyze the performance. The identity impersonation, eavesdropping, and free-riding problems can be solved by the proposed mechanism, thereby improving the vulnerability of the confidentiality and availability of data.

Fig. 7
Download : Download high-res image (264KB)
Download : Download full-size image
Fig. 7. Overall architecture of the SBC.

Fig. 8 shows the sequence diagram illustrating the overall process of the SBC. The IoT equipment based on TEE is authenticated to prevent identity impersonation and data leakage by malicious devices or participants in the D2D environment. In the SBC network, each node has a finished setting environment such as Hyperledger, go-lang, or NodeJS and creates a blockchain pool. After the authentication step, the preliminary participants are authorized by calculating the SC and dividing the level of the SC value. If they do not pass over the appropriate level, they cannot go to the next step. In this simulation, the appropriate level was set to 3, as shown as Fig. 8. The passed nodes obtain participant qualification as a preliminary verifier (pre-verifier) and request the SRS to connect to the SBC network. The SRS authorizes registration and searches for records that have previously participated and if it is a new registration, it broadcasts information about the new node to other nodes. If the node was previously registered, the part where the information is broadcast is skipped. The participants authenticated through the SRS on the basis of this step can generate some blocks and are qualified as nodes that can participate in the consensus process. When a participant requests the creation and verification of a smart contract, the SBFT algorithm calculates the resource usage (RU) for each node and participates as a verifier to validate the contract. This not only performs the consensus algorithm but also examines the high RU to determine whether the verification node is free-riding. After the calculation of their participation in accordance with the SC and RU, the verifiers with the right of consent are classified and perform the SBFT. At the end of the SBFT process, the blocks are chained together and disseminated.

Fig. 8
Download : Download high-res image (474KB)
Download : Download full-size image
Fig. 8. Sequence diagram with the pseudo-code for the overall process of the SBC.

4.2. IoT device authentication
After the information is collected by the intelligent sensors of the IoT devices, the data is transferred to the server. The environment is divided into the server, applications, and IoT devices for self-control management (Wei et al., 2012). Traditional IoT research shows that more than 90% of mobile applications dealing with sensitive information face hacking threats and are at a high risk of hacking in low-power channels accessible to any node (You et al., 2018). Because of non-authenticated objects and data modulation, these accidents still occur frequently and specific authentication methods are needed to resolve these problems. The off-blockchain attempts to prevent the risk that may occur when the device that is authenticated by the server and the non-identified device are connected.

Because it is impossible to distinguish between a malicious and normal node in the conventional authentication mechanism based on the same AID (Apple bundle identifier), the proposed authentication method uses the TEE on the trusted zone (TZ) mounted on mobile equipment. Almost all Android devices are equipped with TEE platforms that separate the accessible/inaccessible areas of the operating system to provide an isolated environment and ensure the confidentiality and integrity of a certain code and internally loaded data. It also helps the authentication process with some apps running on TEE-based mobile platforms. With reference to Table 2, the steps in Fig. 9 are as follows.

(1)
When downloading the developed app from the specified server, KSEED based on a block cipher algorithm is issued and delivered to the app.

(2)
The user initially launches the app and inputs Uid and Upw.

(3)
The server checks them by using the general method.

(4)
The app on the user's device hashes and sends the DID device's universally unique identifier (UUID) to the server.

(5)
KSEED and AID are sent by TZ and checked.

(6)
If the result is true, hash value (A) is generated and sent to the server.

(7)
Hash value (B) is also created in the same manner in the server.

(8)
The server compares (A) and (B).

(9)
If these values are the same, the authentication is completed and the random key, Krandom is encrypted as C(Krandom) and sent.


Table 2. Symbols used in Fig. 9, equations (2), (3), (4), (5), and their definitions.

Symbol	Definition
DID	Device ID
AID	App ID
Krandom	Random Key
Uid	User's ID
Upw	User's Password
Ucode	User's code
Kseed	Seed Key
P	Transmission Power
RSSIm	Signal strength between the sender and receiver
RSSIw	Signal strength between the sender and wiretapper
Signal disturbing the receiver
Signal disturbing the eavesdropper
W	Transmission bandwidth
C	CPU occupancy
M	Memory capacity
Fig. 9
Download : Download high-res image (447KB)
Download : Download full-size image
Fig. 9. Sequence diagram for IoT device authentication.

Krandom is used for user authentication by encrypting Uid and Upw to prevent maliciously transforming the data or intercepting encryption keys by using automatic login, cookies left after shutdown, and session values. If the result of Step 5) is false, the server is wicked. The user removes the app and downloads it again. The IoT-device authentication mechanism prevents potential leakage of the user, third party, and even corporate information exposed to malicious threats. Therefore, it is required to verify that it is a safe device by encrypting the information in the IoT-certified area of the off-blockchain and proceeding to the on-blockchain area.

4.3. Smart registration service
Information can be easily tapped when an unauthorized third party is located close to an authorized target in a wireless communications network. Therefore, security is very essential, particularly in a finance-related blockchain network that stores transaction details in blocks, as personal data can also be leaked. When a PBFT consensus participant is called a node, some authorized nodes may abuse it and produce the wrong result as the block is considered normal although more than half of the nodes collide and store the wrong block (Kuo et al., 2017). Therefore, the “Registration Allowed Participant” is managed according to the secure transmission rate by using the smart registration service.

First, Cm in Equation (2) and Cw in Equation (3) are obtained and substituted into Equation (1) to obtain Equation (4). According to Equation (4), SRS as the first step in the suggested on-blockchain system calculates the device's SC for the communication strength, noise, and fading element values, which are the resources of D2D communication. According to the calculated SC value, the level is divided. The RSSI values that have the most significant effect on the SC in D2D communication consist of the resulting values from the simulated Wi-Fi Direct project and are derived by using the communication strength, as shown in Table 3. The participants above an appropriate value can be authorized to participate in the consensus algorithm and be assured of communication in a safe wireless environment for the consensus.(2)
 
(3)
 
(4)
 
 


Table 3. Level according to SC based on RSSI and according to RU.

Level	SC range	RU range (%)
1	–	CPU< 0.01 & memory ≤ 0.06
2	less than −70 dBm	CPU<0.01 & 0.06 < memory ≤ 0.08
3	−60 to −70 dBm	0.01 ≤ CPU < 0.03 & 0.08 < memory
4	−50 to −60 dBm	0.03 ≤ CPU < 0.05 & 0.08 < memory
5	more than −50 dBm	0.05 ≤ CPU & 0.08 < memory
Therefore, according to the proposed equation, the larger the SC is, the higher the probability that the receiver can safely receive data without eavesdropping. The SBS can determine the normal and safety nodes depending on the higher SC. As a result, this step uses the SC to avoid the risk of eavesdropping and identify authorized users to ensure confidentiality.

In addition, if a device had previously been connected, it would be judged that the values of each SC were the same, followed by re-connection. If the newly registered or calculated hash values are different, the stored list would be deleted and newly registered. This approach achieves secure communication between two mobile devices more quickly. In other words, the SC is calculated from the value of the communication power which was used for device authorization and then used to verify devices before registering them with the SRS to facilitate secure device registration and management.

4.4. Selective byzantine fault tolerance
The PBFT algorithm causes the problem of availability decrease because of the decrease of the transaction processing speed as the number of verifiers increases. As the number of verifiers decreases, there is a risk that some nodes will collide and manipulate the blockchain maliciously. In other words, the number of verifiers poses problems of a long processing time and the lack of the verifiers' authority management. Currently, some researchers are working on finding solutions to these problems.

The second phase (SBFT) of the proposed on-blockchain proceeds with the consensus after the participants subscribing to the SRS confirm their reliability. This algorithm is used to derive the participation by using the RU value of the node. It selects the verifiers that can participate in the consensus protocol, while deciding whether each node is free-riding. The method enables consensus by safe participants and consequently improves the performance to demonstrate the potential for efficient SBC.

The RU of each node is divided into levels and applied to the algorithm. The criteria for distinguishing between the levels were improved with the Universal Control Plane (UCP) implemented as a Docker virtual machine in the Hyper Ledger environment.

In Fig. 12, the participation of each participant appears at a level and if the level is low, the node does not participate in the consensus algorithm, as the RU required for the consensus is significantly low and affects the execution time. In order to obtain the corresponding level of each node, the algorithm used by calculating the degree of participation, PRi, determines whether the ith node participates in the consensus for each node by using Equation (5).(5)
 

Fig. 12
Download : Download high-res image (340KB)
Download : Download full-size image
Fig. 12. Changes of the SBC participants by participation level.

According to the value of PRi, which is a participation level derived as a result of the SC and RU, the smaller the value is, the more likely it is that the node is free-riding. The communication bandwidth refers to the amount of information that can pass within a given time period and is set to W = 1 in this environment. In addition, the significantly low level of participation specified in Table 3 reveals that the CPU occupancy is nearly 0% and the memory capacity is about 0.06%. This implies that the lower level nodes have a copy of the data to create a block in the memory without participating in the actual consensus.

According to the simulation results shown in Fig. 13, the number of nodes with low participation increases in proportion to the number of nodes participating in the blockchain. The proposed algorithm based on the degree of participation improves the overall processing time in proportion to the number of nodes because all of the nodes do not have to communicate for the consensus. This can also prevent free-riding attacks and decreased availability.

Fig. 13
Download : Download high-res image (211KB)
Download : Download full-size image
Fig. 13. Number of verifiers by the rate of the lower participation in accordance with CPU occupancy ≅ 0 and memory capacity ≅ 0.06.

5. Experiments and evaluation
During the consensus process of P2P systems, such as the blockchain, a free-riding attacker may only obtain transactions including sensitive information and not participate in the consensus. Many peers often experience CPU overload or network congestion as attackers consume network resources without providing their own resources, such as CPU or memory, to the network (Krishnan et al., 2004) (Ramaswamy and Liu, 2003).

Therefore, this paper demonstrates how much the resources of the system are consumed according to the number of peers participating in the PBFT consensus. To select selfish nodes that do not use individual resources, the participation rate is calculated based on the RU of each peer. This paper shows how much impact the system's overall resources are affected when consensus validators are selected with this value. In addition, the overall system resources and the overall consensus execution time were analyzed when PBFT and SBFT were executed, increasing the same number of peers in the blockchain system.

5.1. Simulation environment
The simulation environment configures the Wi-Fi Direct environment with several Android mobile devices for the D2D communication test and checks the D2D connection-related information. In order to analyze the existing blockchain technology in detail, public and private blockchain environments were constructed and tested. The public blockchain confirmed the block generation time according to the nonce difficulty referred to in the PoW consensus project developed using Java source code. In the case of the private blockchain, a virtual environment was constructed by using Docker S/W. After the creation of a blockchain image in Docker as well as the installation of Hyper Ledger 0.6 Open Source and the necessary programs, the UCP is linked to calculate the execution time and the RU of each node accurately and objectively according to the number of nodes.

The proposed mechanism can analyze and solve the problems of existing technology when combined with mobile devices and the blockchain technology. This simulation yielded the results required for building a safe and efficient system using the proposed scheme in a D2D environment and analyzing the advantages of the scheme.

5.2. Comparison of PBFT and SBFT
Before comparing and analyzing the algorithm, Fig. 14 shows the resource usage in the private blockchain as Hyper Ledger and how to change the CPU and memory usage of the blockchain system according to the number of nodes. The Hyper Ledger Fabric project used for the simulation implements a blockchain network with nodes created in a virtual machine (VM). The VM has configured memory and Windows cannot allocate more than a specific amount of memory because of Windows security policies that allocate the amount of memory to each program. Fig. 14 shows that with 48 nodes, the allocated memory reaches its limit and remains stable. However, the memory shown in Fig. 14 does not burden only one node and distributes the burden among all of the nodes. As a result, we can infer that the resource usage of the existing private blockchain system increases according to the number of participant nodes.

Fig. 14
Download : Download high-res image (194KB)
Download : Download full-size image
Fig. 14. Average resource usage of Hyper Ledger.

The SBC system uses the SBFT algorithm for consensus when the SC guaranteed by SBS and the RU of the verifier satisfy an appropriate level in the on-blockchain area. If the participants are determined on the basis of the participation calculation according to Equation (5), the participant exclusion rate is, on average, less than 10% and the RU changes, as shown in Fig. 15. Therefore, on the basis of the RU amount according to the total number of nodes, we can infer that the RU of each node is also affected.

Fig. 15
Download : Download high-res image (229KB)
Download : Download full-size image
Fig. 15. Overall RU of the blockchain system.

In this simulation, the number of participating nodes was increased by 5 people and each node maintains a fair condition. As the number of nodes increases, the number of nodes corresponding to the RU level 1 condition also increases. As the number of nodes increases, the overall RU increases the simulation time to that shown in Fig. 14. When the consensus was calculated by the participation of the nodes, the difference of the CPU occupancy that had a considerable influence on the participation could be derived, as shown in Fig. 16. However, as the number of nodes increases, the average CPU occupancy does not increase consistently. As shown in Fig. 13, the larger the number of participating verifiers, the lower the participation rate. Therefore, even if the number of nodes increases, the number of selfish nodes that do not actually participate in the consensus decreases the overall CPU occupancy to around 11.9%. Therefore, the participation rate is low in the case of the nodes that occupy only the memory without actually using the CPU at all. The reason for this is to occupy memory, only storing the block without broadcasting it. This result proves that the overall CPU occupancy of the entire system decreases with increasing number of nodes, as derived using Equation (3).

Fig. 16
Download : Download high-res image (301KB)
Download : Download full-size image
Fig. 16. Comparison of PBFT and SBFT in terms of average CPU occupancy of the entire system (%).

When SBFT was used, the overall execution time of the consensus decreases, as shown in Fig. 17. In particular, there is a significant difference in the vicinity of 50 nodes. As the number of nodes increased, the number of selfish nodes also increased, so that the number of verifiers which have the ability of the consensus process is fewer. This implies that the PBFT as a traditional consensus mechanism waits a long time for the selfish nodes to complete the consensus process, whereas the SBFT is able to reduce the waiting time by excluding the selfish nodes suspected of free-riding attacks. In addition, even if the number of nodes increases to 50 or more, there are many verifiers that do not use resources. This indicates that the CPU occupancy and the total consensus time are more efficient than the conventional consensus algorithm. It also implies that the degree of participation using the SC and RU assures the reliability and the overall processing speed although the number of nodes increases. The black line is the range obtained by measuring the CPU occupancy of the whole system from the maximum number of the verifiers selected by the lowest RU level and lowest SC levels to the minimum number of the verifiers selected by the highest RU level and highest SC levels. Although the maximum number of validators is increased by lowering the authorized level, it is still lower than the CPU occupancy of the entire system of the existing PBFT.

Fig. 17
Download : Download high-res image (203KB)
Download : Download full-size image
Fig. 17. Comparison of the overall execution times of PBFT and SBFT.

6. Conclusion
This paper investigated the background of D2D technology, which allows direct communication using mobile devices of users, such as blockchain based on the P2P network. As a solution to security vulnerabilities such as insufficient device authentication, eavesdropping by unauthorized users, and free-riding of selfish peers, the SBC system consists of two stages of off-blockchain and on-blockchain included in the existing D2D communication. The proposed system can be analyzed in detail to ensure the security of the existing D2D network and blockchain. During the IoT device certification phase of off-blockchain in the first area of the SBC system, the device was certified using the proposed mechanism to prevent accidents caused by unauthorized devices and data forgery, thereby reducing the risk of hacking and ensuring stability. Next, the second area, on-blockchain, offers smart registration and blockchain services. Prior to the proposed SBFT, the smart registration service confirms the security of verifiers by identifying and registering devices that do not pose a risk of eavesdropping which frequently occurs in D2D communication.

The blockchain technology will be applied to many fields in the near future to achieve digital convergence. For advanced platforms, it is necessary to escape the simple approach of “blockchain is the answer”. To solve existing large and small problems, it is very important to specifically analyze the benefits of applying the blockchain and to determine whether it is appropriate for the specific application field. Future work will seek to explore the real feasibility utilizing OMNet ++ to simulate typical D2D communication technologies in Wi-Fi-Direct and LTE-D2D environments (Nardini et al., 2016). We will also analyze the communication results and structures that occur when searching for near distance equipment of users and services on mobile devices from the security perspective. The proposed consensus algorithm and architecture will be supplemented by deriving additional security requirements. We look forward to aiding D2D security and stability studies in this white paper. Also, this research will be further developed for lightweight and reasonable blockchain systems.

