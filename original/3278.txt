Localization is one of the most important topics of cyber physical system. In the last decades, much attention has been paid to the precise localization and performance evaluation in wireless sensor networks. Inertial-measurement-unit and Time-of-Arrival fusion is a state-of-the-art method to solve the accumulative error and drifting problem faced by sole inertial-measurement-unit positioning and navigation. Network cooperative technology could effectively suppress the accumulative error. This paper presents a spatial-temporal constrained particle filter algorithm for cooperative target tracking, so as to solve the problem of multi-target high-precision position tracking in complex and highly dynamic environments. Firstly, we propose an error-ellipse-resampling particle filter method. In the resampling stage of the particle filter, error ellipses with different confidence probabilities would be established with the use of the known estimated center and confidence scale, to achieve hierarchical resampling optimization based on the geometrical position of particles. As for cooperative tracking, an optimization method of state estimation based on spatial distance constraint is proposed, so that the Bayesian filter can benefit from spatial information and achieve cooperative tracking of spatial-temporal information fusion. Numerical experimental results show that the proposed error-ellipse-resampling particle filter could decrease the growth rate of cumulative errors and reach a positioning accuracy of 1.05 m, multi-target cooperative error-ellipse-resampling particle filter can effectively eliminate the cumulative error and achieve a positioning accuracy of 0.24 m.

Keywords
Cooperative target tracking
Accumulative error
Particle filter
Error ellipse resampling
Spatial temporal constraints

1. Introduction
Target tracking has attracted extensive attention in applications such as intelligent traffic management systems and autonomous driving (Yuan et al., 2017; Wang et al., 2020a; Chen et al., 2019a). The Global Positioning System (GPS) is generally suitable for substantial outdoor positioning applications. However, in urban areas with dense buildings, GPS positioning cannot take advantage of its high accuracy due to the effects of signal blocking and multipath. Conventional wireless positioning technologies, such as Received Signal Strength (RSS) (Duan et al., 2020), Time of Arrival (TOA) (Xu et al., 2017), Time Difference of Arrival (TDOA) (Nicholas et al., 2018), and Angle of Arrival (AOA) (Zheng et al., 2018), could provide real-time accurate position estimation in areas that cannot be covered by GPS signals. However, in practical applications, these methods require pre-deployment of anchors, which makes them unsuitable for positioning estimation in unknown areas (Bianchi et al., 2019). Currently, Inertial Navigation System (INS) that utilizes an Inertial Measurement Unit (IMU), could provide a low-cost solution for position estimation in unknown areas. The advantage of INS is that its position estimation is self-contained without additional infrastructure (Huang et al., 2010). However, it still faces the shortcoming of accumulative errors. In other words, it has difficulties to provide accurate position estimation for long-time applications (Ahmed and Tahir, 2017).

Filtering methods provide a practical and reliable positioning solution for improving the positioning accuracy of IMU (Vagle et al., 2018). Jonasson et al. (2020) developed two Extended Kalman Filter (EKF) concepts to estimate the vehicle position during a safe stop. In (Enayati et al., 2015), an improved Unscented Kalman Filter (UKF) is designed for robust estimation of position. Liu et al. (2020) proposed an improved Particle Filter (PF) algorithm for reducing the long-term accumulative error inherent in inertial positioning. However, they could only suppress the growth rate of the cumulative errors to a certain extent, but not eliminate it completely. So far, there are still challenges in improving the accuracy of positioning algorithms with filtering techniques. In practical applications, system models and measurement models are usually non-linear. EKF estimates the mean and covariance of the state by linearizing the state equation, but it is accompanied by a tedious calculation process of the Jacobian matrix (Ghobadi et al., 2017). Since errors are introduced by linearization, UKF is still not suitable for higher-order nonlinear system models (Lee and McBride, 2019).

Compared with other filtering methods, although PF based on Monte Carlo sampling (Wang etal., 2020b) would pay more computational cost, it has better adaptability to nonlinear non-Gaussian systems (Fu and Jia, 2010; Veeramalla and Talari, 2020). However, PF still faces the problem of sample degeneracy and impoverishment (Ghobadi et al., 2017; Fu and Jia, 2010). Existing studies have proposed solutions to improve resampling, such as systematic resampling (Ala-Luhtala et al., 2016), stratified resampling (Li et al., 2015), etc. Both resamplings are based on a layered idea. After a series of iterations, the number of particles will be reduced, which would result in that most of the weights are occupied by a little part of them. Thus, the final state estimation results of general methods are not always as satisfactory as expected. To address this issue, in this paper, we proposed a resampling algorithm based on error ellipse estimation. The error ellipses are constructed based on different confidence probabilities, and the particle set is implemented to solve the problem of sample degeneracy and impoverishment.

In addition, the multi-source information fusion method is also a typical means to solve the accumulative errors of IMU (Chen et al., 2019b). IMU/GPS integrated navigation system could achieve centimeter-level positioning accuracy in vehicle navigation, but it cannot provide smooth positioning services in densely-built urban areas (Zhao, 2016). IMU/WiFi fusion provides a relatively stable positioning solution but requires pre-deployment of anchors and a large number of pre-measurements (Zou et al., 2017). With the implementation of IMU/UWB (Ultra-Wideband) fusion positioning technology, a reliable implementation for the positioning requirements under a long time and large distance span could be satisfied (Xu et al., 2018). UWB positioning method bases on TOA distance measurements, and it could provide decimeter-level positioning accuracy. Nevertheless, most IMU/TOA fusion positioning methods still need to deploy communication base stations.

In anchor-free scenarios, the mobile node only need integrate inertial sensor and ranging sensor to achieve multi-target cooperative positioning based on its own-collected inertial and distance measurements (Fan et al., 2019). The distance measurements between nodes could be used as spatial state constraints. With the use of Bayesian statistical inference, the posterior state mean under distance constraints would be obtained (Zachariah et al., 2012). Xu (Xu et al., 2019) and Zihajehzadeh (Zihajehzadeh and Park, 2016) respectively proposed cooperative positioning techniques based on IMU/TOA fusion, which utilized spatial information to optimize the tracking of multi-target positions. However, these static fusion optimization methods also require the deployment of external anchors. Wireless signals are easily blocked due to non-line-of-sight (NLOS) factors and finally result in positioning errors. To address this issue, we introduced a statically optimized posterior state mean to the filtering process in time series, and achieved spatial-temporal fusion in anchor-free cooperative target tracking.

Generally, in this paper, we propose a cooperative target tracking algorithm that combines spatial-temporal measurements. In the aspect of time series, an optimized historical position is used as the initial prediction center to establish error ellipses, and an improved layered resampling algorithm is put forward to solve the particle degradation and depletion problem faced by traditional particle filtering. Furthermore, we propose a constrained Bayesian optimization method, integrating spatial distance ranging to achieve position optimization under multi-target distance constraints. To further improve the positioning performance, the optimized position status would be applied to establish error ellipses, contributing to the cooperative algorithm with spatial-temporal fusion. The main contributions of this paper are summarized as follows:

●
We propose a particle filter algorithm based on spatial-temporal constraints. On account of the IMU estimated center and confidence scales, error ellipses with different confidence probabilities are established, and hierarchical resampling based on particle geometric position is implemented. Through the particle division and resampling mechanism of different weight levels, the sample degeneracy and impoverishment problem is to some extent resolved.

●
To achieve multi-target cooperative tracking, we propose an optimization method for filtering state estimation based on spatial distance constraints. Bayesian recursive filtering estimation in time series could benefit from the spatial measurements. Based on the optimized posterior state estimation, the error ellipse estimation center in time series is closer to the true position, thereby eliminating the cumulative error with the use of proposed cooperative tracking algorithm.

Table 1 summarizes the notations used later in this paper. The remainder of this paper is organized as follows: Section 2 presents the symbolic descriptions, related definitions, and model descriptions of the problems described. Section 3 focuses on the multi-target cooperative constrained particle filter algorithm, which describes the implementation of layered resampling and cooperative constrained optimization using error ellipse estimation. Section 4 derives the posterior Cramér Rao Lower Bound (PCRLB) of the cooperative tracking and details the complexity analysis. Numerical simulation and practical experiments are carried out in Section 5. Conclusions are drawn in Section 6.


Table 1. Notations.

Symbol	Description
X	Position state
Estimate state
Κ	Joint position state
ml, Cl	Position mean and covariance
Posterior position mean and covariance
Conditional position mean and covariance
IMU estimate center
W	Particle weight
P	Coordinate
V	Velocity
K	Time scale
ts	Sampling interval
Na	Number of target nodes
Z	Measurement
A	Acceleration
μ	Process noise
D	True distance
Distance measurement
θ	True angle
Angle measurement
ϵ1,k	Step noise of intra-node
ϵ2,k	Angle noise of intra-node
ϵ3,k	Distance noise of inter-node
Noise variance of step
Noise variance of angle
Noise variance of distance
ϕ	Particle initialization noise
N	Number of particles
Dirac function
Expectation operator
α	Confidence probability of error ellipse
s	Confidence scale of the error ellipse
φ	Tilt angle of the error ellipse
λ	Feature vector
I	Identity matrix
2. Problem formulation
2.1. Dynamic model
Consider the cooperative network contains Na target nodes. Each target is equipped with a distance measurement sensor and an inertial measurement sensor. It is represented by 𝓝
. The measurement process and state transition process are performed in discrete time tk, k = 0, 1, 2, …, K. 
 defined as the state information of node n at time k, which includes coordinate vector 
 and velocity vector 
. Then, the augmented state Xk could be expressed as:(1)
For multi-target cooperative tracking problem, we firstly present the dynamic model under the cooperative condition. As shown in Fig. 1, it is assumed that the motion law of the mobile node conforms to the dynamic random walk process (Ahn et al., 2019). Thus, we use the first-order Markov model for dynamic modeling, and the state Xk−1,n of the target node n at time k − 1 would contribute to the state Xk,n at time k, denoted as:(2)
where 
 
, 
 
 are state transition matrices. ts denotes the sampling interval, and 
 is Gaussian process noise with mean 0 and variance σ2, i.e., 
. The acceleration at time tk−1 is notated as 
, and the components in both directions are randomly generated from  with probabilities modeled as a random Markov jump (Li et al., 2012). In actual physical measurements, step length and angle measurement could be obtained by integrating the acceleration and angular velocity. The step length measurement of the target node could be simplified as:(3)
 where dk,n represents the true distance of the target node n moving from time k to time k + 1, namely(4)
and ϵ1,k is Gaussian step length noise with mean of 0 and variance of 
. Then, the vector 
 reflects the step measurement information. The angle measurement is denoted as:(5)
 where θk,n is the true horizontal angle, namely(6)
 
and ϵ2,k is Gaussian angle noise with mean of 0 and variance of 
. Then, the vector 
 reflects the angle measurement information. The external measurement between different nodes at time k is denoted as:(7)
where ϵ3,k is Gaussian distance noise with mean of 0 and variance of 
. In short, 
 reflects the internal inertial measurement of the intra-node, and 
 reflects the distance measurement of the inter-node.

Fig. 1
Download : Download high-res image (306KB)
Download : Download full-size image
Fig. 1. Schematic diagram of multi-target cooperative tracking in the center of the city: a red one-way curve represents the inertial measurement of the intra-node, and a red two-way arrow denotes the range measurement of the inter-node. (For interpretation of the references to colour in this figure legend, the reader is referred to the Web version of this article.)

2.2. Bayesian model of cooperative tracking
The position and measurements of the target node are represented as a set of random variables. According to the state evolution process of Markov model, the joint probability density function of the measurement and the augmented state from time t1 to time tK is defined as:(8)
 
 
where X: = X1:K, Z: = Z1:K. Assuming that the dynamics of different nodes are independent of each other, the state parameters of the dynamic model could be decomposed into:(9)
 where Xk−1,nj: = Xk−1,n − Xk−1,j. The measurements between different nodes are independent of each other, and they are also affected by the position states and various parameters. Thus, the probability density function of the measurement model could be denoted as:(10)
 
 
 where Xk,nj: = Xk,n − Xk,j. As shown in Fig. 2, we use the red connection to indicate the relationship of intra-node measurements, and the green connection denotes the dependence of the inter-node measurements. In scenarios with spatial cooperation, the Fisher Information Matrix (FIM) (Win et al., 2018) has an off-diagonal block that corresponds to the spatial cooperation measurements, and the graph has measurement nodes that connect different agents. In scenarios with spatial-temporal cooperation, the FIM has off-diagonal blocks corresponding to temporal measurements, and the graph has measurement nodes that connect agents at consecutive time instants.

Fig. 2
Download : Download high-res image (441KB)
Download : Download full-size image
Fig. 2. Bayesian graph model of multi-target cooperative: the spatial-temporal cooperative is shown by two nodes.

Assume that the state transition process follows the first-order Markov model, that is, 
. The prior probability density function 
 of the dynamic model could be calculated from the prior probability distribution 
 at the previous moment, namely(11)
 
 
among which 
 is a known quantity, and 
 is determined by the above dynamic model. After obtaining the independent measurement Zk at time t, the posterior probability density function can be updated to:(12)
 
 
 
 
 
 
where 
 is a likelihood function defined by the measurement model and 
 is a normalized constant. In summary, with obtaining the prior estimate 
 at the current time and the conditional probability 
, the posterior probability 
 at the current time could be derived from Bayesian recursion theory.

3. Cooperative constrained PF algorithm
In this section, we firstly proposed the error-ellipse-based resampling algorithm for filtering estimation of target nodes. On this basis, the multi-target cooperative particle filter algorithm based on distance measurement is described to realize the spatial-temporal fusion for cooperative tracking.

3.1. Error-ellipse-based resampling
In this subsection, we first briefly reviewed the flow of particle filtering, then described the error elliptic constraint method, and finally introduced the particle weight redistribution based on the error resampling algorithm through the screening and replication of particles, so as to reduce the particle dilution problem.

3.1.1. Review of PF
PF provides a method for recursively generating the posterior probability density function, that is, using a set of particles to represent the posterior probability distribution of the state, which also meets the idea of Monte Carlo sampling (Duan et al., 2020). The standard process of PF contains initialization, prediction, and update. The sampled particles are generated at the initial stage. Then, the prediction and updating process would be executed cyclically at time 
, and finally put forward the state estimation results of the target node.

Initialization: Generally, PF completes the estimation of state Xk by updating a set of random measurements 
 which consists of N particles 
 and the corresponding weight 
 at time tk. When the number of particles is sufficient, the state estimation approximates the posterior probability density 
 of the unknown distribution X1:k. In the initialization phase, it is necessary to generate a series of particles on account of prior knowledge, that is, 
. Considering the motion state of a single target in a 2-D coordinate system, the particles at the initial moment could be generated with random noise, i.e.,(13) 
  
 where 
 is the initial position of the target to be tracked, and 
 is Gaussian noise in the horizontal and vertical axes, that is, 
.

Prediction: Based on the Bayesian recursive estimation criterion, to estimate the posterior probability of the current state, the prior probability of the current moment needs to be calculated in advance, based on the posterior probability of the previous moment. Thus, Monte Carlo method is taken into consideration. A set of random weighted particles (samples) are collected from the state space of the known distribution to replace the posterior probability, i.e., 
.

Update: In this stage, the particles are resampled and the weighted average of all particles is chosen as the output of overall state estimation. The initial weight of the particle is assigned as 1/N, and it is updated by the following equation:(14)
 
where q(⋅) denotes the importance probability density, and it is generally represented as the transition prior probability density function, that is, 
 (Xiao and Pan, 2020). Furthermore, the weights of these particles are normalized, 
. Finally, the approximated posterior probability density function can be expressed as:(15)
where 
 and 
 denotes the weight and state information of particle i at time tk, and δ(⋅) is Dirac function. When N approaches infinity, the approximation will gradually converge to the true posterior density.

3.1.2. Error ellipse constraint
Based on the above considerations, we introduce the rules of error ellipse constraints to the implementation of resampling. When performing interval estimation on the scale s (that is, the value range of the estimation scale), if a small probability β is given in advance, an interval 
 can be found to satisfy:(16)
The interval 
 is the confidence interval of the scale s, where s1 and s2 are called confidence limits (or critical values). The probability β represents the significance level (or risk), and 1 − β denotes the confidence level (or confidence). We use the symbol α to express the confidence probability, i.e., α = 1 − β. In 2-D/3-D parameter estimation (such as 2-D/3-D target tracking), this confidence interval could be formalized as an error ellipse/ellipsoid.

In this paper, we consider the 2-D covariance matrix of N particles at time tk:(17) 
 where  and  are the variance in the x-axis and y-axis directions, respectively. The covariance could be obtained:(18)If x is positively related to y, then y and x are also positively correlated, i.e., . Therefore, the covariance matrix is always a symmetric matrix, whose values on the diagonal are variances, and those on the off-diagonal are covariances. Then, equation of the ellipse whose center is not at the origin point could be expressed as:(19)
 
 
where λ1 and λ2 are the maximum and minimum eigenvalues corresponding to the covariance matrix, respectively. 
 is the estimated center position, and s is the scale of error ellipses. When the error ellipse is tilted relative to the coordinate system, the tilt angle φ of the x-axis and y-axis could be obtained from the following equation:(20)
 
Furthermore, we obtain the error ellipse constraint represented by the rotated coordinate 
 and the angle φ as:(21) 
 
 
 

3.1.3. Resampling method
Fig. 3 depicts the resampling process for particle sets based on error ellipse constraints. Two different confidence levels (confidence probabilities) are established. During the resampling process, N potential particles are divided into three levels by geometric positions. The particles outside the outer ellipse are Nl negligible particles which would be discarded in later stages; the particles located in the middle of these two ellipses are regarded as the moderate particles, which would be reserved; Nh dominating particles inside the inner ellipse would be duplicated. During the duplication process, since the rounding operation may lead to the duplication times of particles to be less than 1, the first 
 dominating particles are duplicated 
 times, then the remaining Nh − Nt dominating particles are duplicated 
 times. After all particles have performed the duplication operation, the quantity of particles N still holds. The selected set of particles would also be used as initial input for the next iteration.

Fig. 3
Download : Download high-res image (258KB)
Download : Download full-size image
Fig. 3. An example of a typical resampled particle screening process: a) shows the initial distribution of the particles. b) two different confidence level ellipse (50% and 12.5% confidence probability respectively) based on the covariance matrix of the particle set. c) Screening results for particles of different levels. The red particles could be removed and the bold points are copied, to emphasize the high weight particles and reduce the low weight ones. (For interpretation of the references to colour in this figure legend, the reader is referred to the Web version of this article.)

During the resampling process, due to the discarding and duplication of some particles, the weights of the discarded are reassigned to those being duplicated. The weights are redistributed using the following equation:(22)
 where M is the sum of the weights of moderate particles, Nl and Nh are respectively the number of negligible particles and dominating particles. 
 represents the distance between the particle and the prediction center at time k. The state estimation result is updated by weighted average, namely(23) 
 The error ellipse resampling algorithm is described in Algorithm 1.


Algorithm 1. Error-Ellipse-Resampling Algorithm (EER)

Require: 
 status, weight information
Ensure: 
 status, weight, estimated value
 for i ← 1, N do
 
;
 if 
 then
 indexl(Nl) = i;
 Nl = Nl + 1;
 else if 
 then
 indexh(Nh) = i;
 Nh = Nh + 1;
 else
 
;
 
;
 n = n + 1;
 
;
 end if
 end for
 
;
 
;
 for j ← 1, Nh do
 while j ≤ Nt do
 
;
 for do 
 
;
 n = n + 1;
 
;
 end for
 end while
 
;
 for do 
 
;
 n = n + 1;
 
;
 end for
 end for
3.2. Distance constrained optimization
In this section, we fuse spatial distance measurements between mobile nodes for cooperative estimation. According to the Bayesian recursive criterion, when the previous estimates are biased, the state estimates at the subsequent moments will be affected. In the spatial cooperation, Bayesian optimization under the distance constraint is used to optimize the position state of the target node. As shown in Fig. 4, we focus on the 2-D coordinate state information. The PF will output the initial mean value and covariance of position state. This information will be used as prior knowledge of Bayesian optimization estimation. Under the distance constraint of given node position, the posterior is calculated by convex combination approximation of the integral conditional mean and covariance to complete the optimization of spatial cooperative constraints.

Fig. 4
Download : Download high-res image (279KB)
Download : Download full-size image
Fig. 4. Schematic diagram of distance constraint optimization. The target node's location information is indicated by the mean ml and the covariance Cl. The confidence probability corresponding to the ellipse is set as 50%. The position and error ellipse before optimization are expressed as diamond points and solid ellipses. Correspondingly, the optimized position is expressed as a circular dot and a dotted ellipse. Using the error ellipse to constrain the position would get an estimation more closer to the true position.

3.2.1. Bayesian optimization under distance constraints
During dynamic estimation in the time domain, the particle filter algorithm will continuously yield the mean estimation of state variables. The state estimation value 
 of Na nodes at each moment could be used as prior knowledge for optimization. Ideally, the target node n could receive the measurements 
 from other Na − 1 neighbor nodes, and node n will select the value within the distance constraint range from these measurements for the next optimization, that is, satisfying the distance constraint 
, where 
.

Furthermore, we define the joint state of node n and node j at time k as 
. Since the estimated value in time series is calculated by the weighted average of particles, then the mean value 
 and covariance 
 of the joint state at time k will also be used as prior knowledge of the optimization process. So far, as long as the posterior probability density under the given distance constraint c is calculated, the posterior mean and covariance of the target state could be obtained.

In order to simplify the calculation, we firstly introduce a new state vector 
, where z is a Gaussian distribution with a mean of mz and a variance of Cz, i.e., 
, and κ indicates the joint state vector, namely 
. The state vector z is given by a reversible linear transformation and consists of two sub-vectors z1 = P1 − P2 and z2 = P1 + P2. Here, the simplified symbols P1 and P2 represent the position states of the two mobile nodes before optimization, respectively. We could verify that  
 . Further reasoning leads to mz = Tmκ and Cz = TCκTT. Then, we can obtain new constraints 
, where the distance constraint is only related to z1.

The calculation of posterior 
 and 
 requires two steps. Firstly, perform an affine transformation to map the infinite integration area to a finite area, so as to reduce the integration dimension. Therefore, the transformation process will simplify the calculation of conditional mean and covariance. Secondly, the approximate calculation of integrals performs deterministic sampling method.

3.2.2. Affine transformation
As to the analysis above, we need to calculate the posterior mean 
 and covariance 
. Moreover, we conclude that 
 and 
. Thus, we could turn the problem into solving mz|c and Cz|c with transforming by affine transformation:(24) 
 we could obtain the mean value 
 and covariance 
 of the conditional probability density function 
. The intermediate variables in the above equation are expressed as 
 and 
, respectively. Let 
, then the conditional mean 
 is denoted as:(25)
 
Since z1 is given the norm ‖z1‖ provides no additional information, then the pdf p(z2|z1, ‖z1‖) is identical to p(z2|z1). The same goes that given z1 a bound on the norm ‖z1‖ ≤ Z yields no additional information. Hence p(z2|z1, c) = p(z2|z1) for all valid z1, i.e., 
. The conditional mean 
 is denoted as:(26) 
  
 
 
 and the conditional covariance matrix is denoted as:(27)
where the covariance matrix Bz|c is denoted as  
 . The covariance of the posterior probability 
 could be denoted as:(28)
 
Therefore, the covariance of 
 and 
 could be obtained according to the affine transformation:(29) 
 
 
 (30) 
  
 
 
 Therefore, we only need to calculate the integral (25) and (28) corresponding to 
, and we can find the solutions of the posterior mean 
. Thus, covariance 
 through affine transformation without directly solving the posterior probability .

3.2.3. Integral approximation
In order to avoid calculating complex numerical integration, we use a convex combination to approximate the conditional mean and covariance:(31) 
 where 
 and w(i) denotes sampling points and corresponding weights, and n is the dimension of the state variable (Candy, 2016). When the probability mass α of the sampling point 
 is within the constraint range, the approximated value holds. Otherwise, resample the points to ensure that the approximated average value falls within the convex boundary, thereby reducing the dispersion. Therefore, parameter α determines the effectiveness of sampling points. Select 2n + 1 points by the following equation:(32)
 
 
 
 where Λ indicates the dimension of position variable, sα is the confidence scale that satisfies 
 and 
. This is equivalent to the confidence scale ηα of the confidence ellipse, which is directly affected by the confidence level.

The deterministic sampling method will select 2Λ + 1 sampling points, and the sampling points that violate the constraint condition c will be orthogonally projected onto the constraint boundary. Then, we use the following equation for screening:(33)
 
 where i = 0, …, 2Λ. The weights of sampling points will be regenerated based on the following criterion:(34)
 
 
 The estimated values of the posterior mean 
 and covariance 
 could be obtained by weighting the resampled points 
. The effectiveness of resampling under distance constraint is displayed in Fig. 5. The description of spatial cooperative constrained optimization algorithm is shown in Algorithm 2.


Algorithm 2. Spatial Cooperative Constrained Optimization Algorithm (SCCO)

Require: 
 Joint state mean and covariance, distance measurement
Ensure: 
 Posterior state mean and covariance
 if 
 then
 1.Calculate the converted covariance Cz through Cl
 2.Calculate the conditional covariance 
 and 
 in equation (27).
 3.Calculate the intermediate variable A and 
 of the affine transformation
 for i ← 0, 4 do
 h(i) ← sample(Λ = 2) ▹ Equation (32)
 if h(i) > Zk,nj then
 
;
 else
 
;
 end if
 if i = 0 then
 w(i) = 1–2/sα;
 else
 w(i) = 1/Λsα;
 end if
 end for
 for i ← 0, 4 do
 
;
 
;
 end for
 end if
Fig. 5
Download : Download high-res image (186KB)
Download : Download full-size image
Fig. 5. A diagram of error ellipse resampling under distance constraints: solid ellipse represents the error ellipse before the constraint optimization, and circle points represent the sampling points before sampling. If these sampling points are outside the distance constraint (black dotted circle), then they will be mapped to the boundary of the constraint circle. The resampled points are shown as red plus signs in the figure. The error ellipse area after optimization is smaller, and the center of the ellipse (red triangle) is closer to the constraint boundary than that before optimization (black cross). (For interpretation of the references to colour in this figure legend, the reader is referred to the Web version of this article.)

3.3. Cooperative constrained particle filtering
When particle filtering is performed for state estimation in time series, we firstly conduct a rough estimation of the target state based on the center point of the particle set. Then, we adopt two error ellipses with different confidence levels (s1, s2) to resample the particles. After the resampling stage, spatial cooperative constrained optimization is used to drive the estimated value closer to the true position, that is, the optimized position estimate is used to update the original center point. Furthermore, the filter estimation at the next moment will benefit from the spatial information at the previous moment, so as to achieve cooperative tracking of spatial-temporal fusion. The overall description of our proposed cooperative constrained PF is illustrated in Algorithm 3.


Algorithm 3. Multi-target cooperative particle filter algorithm (CEER-PF)

Require: 
 Initial position
Ensure: 
 State estimate
 for k ← 0, K − 1 do
 if k = 0 then
 
;
 else
 for do 
 
 State transition
 
 Computational likelihood
 end for
 
 
 Mean and covariance of particles at the current moment
 
 Spatial status information
 
 
 Update estimate center
 end if
 end for
4. Theoretical performance analysis
In this section, we carry out the theoretical derivation to prove the validity of the proposed algorithm. Firstly, posterior Carmér-Rao Lower Bound (PCRLB) of multi-target cooperative tracking accuracy is derived. Next, the complexity analysis of both proposed and comparative methods are conducted.

4.1. Posterior Crameŕ Rao Lower Bound
The posterior Crameŕ Rao Lower Bound (PCRLB) (Win et al., 2018) is defined as the inverse of the Fisher information matrix (FIM), which provides the theoretical lower bound of the unbiased estimated variance, i.e.,(35)
Considering the information in time series, the joint probability density function is:(36) 
 where the simplified symbols 
 and 
 represent the inter-node distance measurement 
 and the step measurement 
, respectively. 
, 
 and 
 could be obtained from Equation (3), (4), (5), (6), (7). According to the joint probability density function, we define the Fisher information matrix as:(37)
 
When the target node travels at a constant speed, the dynamic model (2) can be expressed as:(38)where 
 is the block diagonal state transition matrix. u is an independent process noise vector, and the covariance matrix 
 is given. Thus, the vector 
 reflects the augmented state information of all mobile nodes. Then, the recursive calculation of FIM is expressed as (Win et al., 2018):(39)
where the matrix H and Jz(k) are described as follows:(40)
(41)
(42)
(43)
where 
 represents the second-order derivative of vectors a and b, namely 
. When the state transition model (2) is linear Gaussian, the FIM recursive calculation form described by Equation (39) could be simplified as:(44) 
 Since the distance measurement are generated by the mobile node independently, we could obtain the representation of the matrix 
 under the assumption of distributed Gaussian noise, namely(45)
 
where the sub-matrix 
 
. The parameters 
, 
, and 
 are respectively represented as:(46)
 
 
(47)
 
 
(48)
 
 
In above equations, dnj is the inter-node true distance, and 
 is the variance of ranging noise. ψnj is an indicator function, which is set as 0 when n is equal to j, and 1 in all other cases. The FIM at the initial moment could be obtained from the ranging information, namely 
. In the next section, we will take advantages of this derived PCRLB to compare with the statistical results of numerical simulations.

4.2. Complexity analysis
In our proposed cooperative tracking schema, the system overhead mainly consists of two parts, namely arithmetic computation in the local node and communication overhead between neighbors.

In the respect of arithmetic computation in the local node, our proposed algorithm needs to complete the screening and replication of N individual particles to realize the resampling optimization. Considering the extreme case, based on the proposed EER-PF resampling algorithm, if only particle screening operation is performed and no operations such as replication are performed, the complexity of the resampling algorithm is O(N). In the worst case, it is necessary to copy c times for each particle, and the complexity of the resampling algorithm is O(N∗c), where c is constant. Since the number of particles remains unchanged after resampling, the number of high-weight particles Nh will not exceed N/3, and the maximum number of replications will be no greater than 2. Thus, the complexity of the resampling algorithm remains as O(N). Then, we can know the overall complexity of the particle filter algorithm is O(N∗Λ2), where N and Λ denote the quantity of the particles and dimension of the position variable respectively.

For cooperative algorithms, additional spatial distance constraints are calculated, which is related to the number of target nodes Na in the whole network. UKF and our proposed algorithm are both determined by sigma point sampling. Therefore, the complexity of cooperative algorithms is directly related to the state dimension Λ, which means that the complexity of proposed CEER-PF is O(Na∗N∗Λ2), while that of cooperative Unscented Kalman Filter (CUKF) is O(Na∗Λ3). A detailed comparison of the algorithm complexity is shown in Table 2.


Table 2. A detailed comparison of the algorithm complexity.

Algorithms	Complexity
SYR-PF	O(N∗Λ2)
STR-PF	O(N∗Λ2)
EER-PF	O(N∗Λ2)
CUKF	O(Na∗Λ3)
CEER-PF	O(Na∗N∗Λ2)
In terms of broadcast communication between neighbors, all communication overhead is introduced by a distance ranging and paired status interaction. We currently adopt the principle of maximum matches number first, that is, the nodes that are not optimized will be paired first. To avoid multiple optimizations for a single node, if the current node is paired, we will mark its status as optimized. When it is paired again, only the optimization of the other node will be performed.

Above all, theoretical analysis shows that the current strategy indeed works in improving the performance of the algorithm, with a reasonable computation and communication overhead. Further verification will be demonstrated in subsequent simulation experiments.

5. Experiments and discussion
In this section, we carried out numerical simulations and physical experiments to validate the effectiveness of our proposed algorithm. Firstly, numerical simulations are conducted for both single and multi-target tracking with the use of our proposed spatial-temporal constrained particle filtering method. Then, a typical physical scenario was set up to prove its effectiveness and wide application value.

5.1. Experimental setup
We carried out a random walk numerical simulation experiment based on MATLAB. The experimental computer runs Windows 10 Professional Edition system, with 4-core i5 CPU and 16 GB memory. The experimental scene is set as 50 m∗50 m, and the target node travels 100 steps, starting from the initial position (0, 0). The trajectories of target node movements are recorded. The basic parameter settings are displayed in Table 3. Numerical simulations confirm the efficiency of the scheme put forth.


Table 3. Experimental parameter settings.

Parameter	Numerical value
Sampling interval ts	1(s)
Acceleration a	0(m/s)
Process noise variance σ2	0.1(m2)
Initial noise variance 
0.1(m2)
Step noise variance 
0.5(m2)
Angle noise variance 
10°
Distance measurement noise variance 
0.5(m2)
Confidence probability (α1, α2)	(0.125, 0.5)
Number of particles N	4000
5.2. Single target tracking
Typical comparison algorithms are chosen as the non-resampling PF algorithm (NR-PF), unscented Kalman filter algorithm (UKF) (Lee and McBride, 2019), systematic resampling PF (SYR-PF) (Ala-Luhtala et al., 2016), and stratified resampling PF (STR-PF) (Li et al., 2015). All algorithms are performed and predict the position reached by each travel of the target node. Euclidean distances between the predicted position and the real position are counted.

In order to verify that the particle filter algorithm based on error ellipse resampling (EER-PF) can effectively alleviate the problem of sample degeneracy and impoverishment, we performed a simulation of state estimation on a single-target random walking model. Fig. 6 shows the weight distribution of STR-PF, SYR-PF, and EER-PF. The particle weights are displayed in descending order, and the confidence interval of the EER-PF is (0.125, 0.5).

Fig. 6
Download : Download high-res image (237KB)
Download : Download full-size image
Fig. 6. Particle weight distribution of different algorithms.

It can be drawn from Fig. 6 that SYR-PF and STR-PF appear sample degeneracy and impoverishment at the beginning of the iteration. The number of particles occupying a larger weight and that of particles with a weight of 0, decreases as the iteration progresses, which verifies that SYR-PF and STR-PF only slow down sample degeneracy and impoverishment, but not completely. The EER-PF proposed in this paper has a relatively balanced weight distribution and effectively improves particle degradation and depletion problems.

During the above experiment, tracking errors were also counted. The error is expressed as the Euclidean distance between the predicted position and the true position, which is defined as follows:(49)
 We can draw the following conclusions from Fig. 7-(a). The positioning error of the target node shows a gradually increasing trend as the target moves over time, which to some extent verifies the cumulative error and drift problem of the sole IMU. Among them, the particle filter algorithm based on error ellipse resampling (EER-PF) has a smaller error growth rate than the others and is closer to the PCRLB, which also proves that EER-PF can suppress the cumulative error to a certain extent. Compared with SYR-PF and STR-PF, UKF has higher positioning accuracy, but it is slightly inferior to EER-PF.

Fig. 7
Download : Download high-res image (670KB)
Download : Download full-size image
Fig. 7. Statistical results of typical single target tracking. (a) A typical error distribution without cooperative measurements. (b) Statistical distribution of RMSE.

To further verify the effectiveness and stability of the EER-PF algorithm in single target tracking, the root mean square error and experimental variance of the positioning algorithms are counted. The root mean square error (RMSE) is defined as:(50)
 
From Fig. 7-(b), we could see that the resampled algorithm curve is obviously lower than that of non-resampled, which is closer to the true value. This is probably caused by the fact that the posterior distribution can be obtained using Monte Carlo sampling. Besides, the error distributions of SYR-PF and STR-PF are very similar, while the performance of STR-PF is slightly better than that of SYR-PF due to the diversity of particles screened by stratification. Anyway, EER-PF holds the best performance.

Fig. 8 shows cumulative distribution function curve of the root mean square error, and various resampling algorithms are repeated 100 random walk experiments. There is a 97% probability that the positioning accuracy of error ellipse resampling particle filter (EER-PF) proposed in this paper is less than 2 m, and there is a 50% probability that it is less than 1 m.

Fig. 8
Download : Download high-res image (171KB)
Download : Download full-size image
Fig. 8. Cumulative distribution function (CDF) curves of RMSE with non-cooperative algorithms.

In order to show how confidence probabilities impact on the positioning accuracy in proposed algorithm, 6 sets of confidence intervals are selected for simulation of single target random walking. The positioning accuracy of EER-PF under different confidence probabilities is represented by the root mean square error as shown in Table 4, from which the following conclusions could be drawn:

1)
If the overall confidence probabilities are smaller, that is, the number of negligible particles outside the outer ellipse is larger, the positioning accuracy of EER-PF is better. This is because the weights of negligible particles are redistributed to dominant ones, which realizes the optimization of particle screening.

2)
If the span of the confidence interval is larger, that is, the number of moderate particles between the two ellipses is larger, the algorithm can provide higher positioning accuracy. Generally, it can be seen that setting the confidence interval to (0.125, 0.5) is a more appropriate choice.


Table 4. The influence of confidence interval on algorithm accuracy.

Confidence interval	Tracking accuracy
(0.6,0.8)	2.30
(0.4,0.6)	1.70
(0.4,0.8)	1.86
(0.25,0.5)	1.16
(0.125,0.5)	1.14
(0.125,0.5)	1.05
5.3. Multiple targets tracking
Cooperative tracking can effectively integrate the information of a single target node to achieve higher-precision tracking. In this paper, we proposed a constrained particle filter method for cooperative tracking to reduce the impacts of cumulative errors caused by inertial measurements.

In order to verify the effectiveness and advancement of the error-ellipse-resampling-based particle filter for cooperative tracking(CEER-PF), we use CEER-PF and Unscented Kalman Filter for cooperative tracking(CUKF) to repeat random walk experiments 100 times and compare with the PCRLB under the same measurement noise. The mean value of the root mean square error for cooperative tracking is defined as:(51)
 
 
The statistics of the experimental results are shown in Fig. 9-(a). The following conclusions can be obtained from the figure:

1)
Generally, the errors of both cooperative algorithms are relatively stable, and no obvious error accumulation is observed. This to some extent verifies the effectiveness of the algorithm proposed in this paper on restraining the influence of accumulated errors.

2)
CEER-PF has a higher positioning accuracy than CUKF, and it is closer to the cooperative PCRLB curve, that is, closer to the optimal value of the theoretical situation. Among them, the positioning accuracy of the CUKF algorithm can reach 0.39 m, while CEER-PF could reach to 0.24 m.

Fig. 9
Download : Download high-res image (242KB)
Download : Download full-size image
Fig. 9. Statistical results of typical multiple target tracking. (a) Error distribution with cooperative measurements. (b) Cumulative distribution function (CDF) curves of CRMSE with cooperative algorithms.

Fig. 9-(b) shows the cumulative distribution function of different cooperative tracking algorithms. The positioning errors of CUKF and CEER-PF are both below 1 m. Among them, the probability that CUKF and CEER-PF algorithms are better than 0.5 m are respectively 76% and 98%, respectively. This confirms that the CEER-PF algorithm proposed in this paper can achieve higher precision for multiple target tracking.

Furthermore, we discuss how measurement noise and the number of particles impact on the performance of proposed algorithm. We selected 3 sets of parameters for comparative experiments. Correspondingly, the measurement noise is step noise and angle noise, and the variance parameter (0.2, 10), (0.5, 10), (0.5, 20) are selected. CEER-PF is used to estimate the position of the target, and RMSE is counted to represent the positioning accuracy. The statistical results are shown in Fig. 10, from which following conclusions could be drawn:

1)
The blue curve in the figure is lower than the green one, which means that when the variance of the angle noise is unchanged, the smaller the variance of step length noise, the more accurate the positioning performance of CEER-PF.

2)
The green curve is lower than the red one, indicating that when the variance of step length noise is unchanged, the smaller the variance of angle noise, the more accurate the positioning performance of CEER-PF.

3)
As the number of particles increases from 500 to 6000, the execution time of the algorithm shows a linear growth trend. However, when the number of particles increases to 4000, the performance reaches its optimum. Thus, the choice of 4000 is more suitable in practice use, which could achieve as high accuracy as possible with acceptable time overhead.

4)
Generally, one location estimate usually takes 0.1 ~0.2 s, which indicates that if the speed of moving target is 5 m/s (the normal walking speed of a pedestrian), the target moves only 0.5 ~1.0 m, which is quite reasonable for pedestrian tracking applications. If 80 km/h (a fast-moving car), the target moves ~2 m during this period, which may still meet the requirements of most applications.

Fig. 10
Download : Download high-res image (409KB)
Download : Download full-size image
Fig. 10. Performance analysis of CEER-PF.

Then, how target nodes’ number impacts on the positioning performance for multi-target cooperative tracking is taken into consideration. The following conclusions could be drawn from the experimental results shown in Fig. 11:

1)
When target nodes' number increases, the positioning error of both algorithms didn't change dramatically. It indicates that both of them are suitable for large-scale deployment applications, while CEER-PF is significantly better than CUKF.

2)
The execution time of both algorithms increases with the number of target nodes, while that of CEER-PF is slightly higher than that of CUKF. However, it is completely acceptable for large-scale real-time applications.

Fig. 11
Download : Download high-res image (200KB)
Download : Download full-size image
Fig. 11. The number of Target nodes' influence on the localization performance of various algorithms.

Table 5 counts the positioning accuracy of different algorithms, summarized as follows:

1)
The accuracy of EER-PF in single target positioning can reach 1.05 m, which have a 63% improvement in accuracy compared with STR-PF. The variance is smaller than the others as well, that is, the algorithm consistency is better. Due to the implementation of particle replication, the time consumption of EER-PF is slightly larger, but it can also meet the real-time requirements.

2)
Compared with CUKF, CEER-PF needs more time for particle calculation, but it can also to a great extent improve the positioning accuracy on the basis of meeting the real-time requirements of the whole system. Compared with EER-PF without cooperation, its accuracy performance has been improved by nearly 77%. Compared with CUKF tracking, it has progressed by about 38%.


Table 5. Positioning accuracy of various algorithms (N = 4000).

Algorithms	Maximum variance (m2)	Minimum variance (m2)	Average error (m)	Execution time (s)
NR-PF	35.41	4.70	4.15	0.10
STR-PF	21.89	1.19	2.87	0.12
SYR-PF	30.13	3.11	3.67	0.15
EER-PF	5.63	0.17	1.05	0.22
CUKF	3.41	0.22	0.39	0.18
CEER-PF	0.29	0.03	0.24	0.26
5.4. Practical use case
In order to better verify the effectiveness and application value of our proposed method, a multi-target tracking experiment for cooperative robots is carried out. The wheeled navigation robot adopted in 2D tracking applications, as shown in Fig. 12-(a), has a modular structure, mainly including the main board (provides a variety of interfaces, easy to expand), the core board (processor cortex-m4 STM32F405RG + 802.15.4 standard RF chip Atmel At86rf231), sensor board (integrated with a variety of sensors, including IMU and TOA module). The core board is connected with other equipment through the mainboard so that the system can be disassembled and expanded.

Fig. 12
Download : Download high-res image (399KB)
Download : Download full-size image
Fig. 12. Experimental Platform Settings. (a) The wheeled navigation robot adopted in this paper. (b) A minimized sensor board specially designed for targets localization.

A minimized sensor board is specially designed, as shown in Fig. 12-(b). It is aiming to collect spatial and temporal information during the moving process, which covers accelerated velocity, angular velocity, and the distances between targets. Among these all, distance information is especially special when compared with other platforms. Each sensor board has a 6-axises sensor (MPU6050, which integrates a triaxial accelerometer and a triaxial gyroscope), a barometer sensor (MS5611), and a UWB-TOA ranging module (DWM1000). The MEMS sensors are connected to a microcontroller (STM32F103) for the sake of sampling efficiency at a rate of 10Hz.

To verify the effectiveness, practical experiments are conducted to compare the proposed method with above-mentioned state-of-the-art methods. A total of 10 navigation robots are programmed to travel randomly by applying the collision-avoidance algorithm (Thrun, 2002), and each robot maintains a distance-ranging frequency of once a second with its neighboring nodes. A high precision optical motion tracking system (Mars 2H) (https://www.nokov.com/en/, 2020) is deployed so as to provide the ground truth measurements. Considering the size of the tracking target and the deployment requirements of optical devices, an open filed covered 10 m∗10 m is chosen as a testing scenario.

As shown in Fig. 13, EER-PF and CEER-PF, as well as state-of-the-art algorithms are tested to show the superiorities of our proposed method. The results are similar to those in the numerical simulation, namely 1) the accuracy of cooperative algorithms is better than those of non-cooperative ones. 2) CEER-PF performs better than the state-of-the-art CUKF (Chen et al., 2019b). 3) Although the experimental results of simulation and actual verification are very similar, a slightly larger error is introduced by physical tests, possibly caused by unpredictable environmental noise and hardware control parameters.

Fig. 13
Download : Download high-res image (202KB)
Download : Download full-size image
Fig. 13. Experiment results of demonstrated practical use case.

6. Conclusion
In this paper, we proposed a layered resampling algorithm based on error-ellipse constraints. According to the error distribution characteristics of particles, error ellipses with different confidence probabilities are established to achieve layered screening. Compared with other resampling algorithms, the error-ellipse-resampling algorithm proposed in this paper could effectively alleviate sample degeneracy and impoverishment, thereby improving the positioning accuracy.

In order to further solve the accumulative errors problem faced by sole IMU, a multi-target cooperative constrained particle filter algorithm is proposed. Combined with the instantaneous, high-precision, and non-accumulative characteristics of TOA-based distance measurement, the estimated results in time series are used as prior knowledge of spatial cooperative optimization. Based on the constrained conditions of inter-node distance measurements, the optimized posterior position estimation is obtained to achieve spatial-temporal fusion in cooperative tracking. Experimental results verify that CEER-PF could greatly improve the positioning performance, and effectively eliminate the accumulative errors. Compared with the non-cooperative method, its positioning performance has been improved by nearly 77%. Compared with state-of-the-art CUKF, it has progressed by about 38%.

Furthermore, in this paper, the pair-wise optimization for two nodes is adopted. To avoid multiple optimizations for a single node, if the current node is paired, we will mark its status as optimized. When it is paired again, only the optimization of another node will be performed. This leaves us some room for future studies. Joint optimization for all target nodes and consensus communication protocol may further improve the performance.
