The huge and ever-increasing data traffic promotes the upgradation of IP bearer network to possess higher transmission capability. As a long-term task, network upgradation needs to be implemented in multiple stages. At each stage, one or more network partitions are planned to meet various requirements in different areas or periods to realize the smooth change from the current network to the targeted one. However, how to select proper network partitions is an open question. Existing approaches are usually infeasibly applied to large-scale networks or neglect the characteristics of IP bearer network. In this paper, we present a hierarchical community discovery method to find network partitions for nodes to be upgraded. We transform the issue of hierarchy identification on the whole network into node role classification, which is addressed by training a classifier utilizing network centrality, label, and attribute information. Then, a novel community detection algorithm through semi-local expansion is proposed, with the geographical location also taken into consideration. Experiments are conducted on three real-world datasets. The results show the effectiveness of our method in node role classification task that at least 90% Micro-F1 score can be got with only 30% labeled nodes on the given networks. The attained community is adjustable with the size proportional to the parameter  and has a high modularity score. Moreover, our communities strictly comply with the affiliation in IP bearer network and preserve the integrity of the tree/ring structures.

Previous
Keywords
IP bearer network

Network upgradation

Hierarchical community detection

Ring structure

1. Introduction
IP bearer network is an end-to-end infrastructure to connect access network and core network. With the explosive growth in data traffic, the trend that IP bearer network upgrades to support larger bandwidth, higher reliability, and lower latency becomes severe and will exist for a long time (Fiorani et al., 2015). However, in practice, the upgradation will not be directly carried out on the whole network but some network partitions (also called communities in this paper) due to the budget or construction time. Besides, communities with different user and equipment densities have different requirements, e.g., metropolitan areas (Zhang et al., 2016), sparse rural areas (Carey et al., 2016). For operators, they will choose key hotspots for investment in different periods, in order to build user experience-oriented and high-quality networks in the end. Planning network in communities decomposes the long-term task into multiple stages, which realizes the smooth upgradation from the current network to the targeted one.

Discovering the hierarchical community for IP bearer network is novel and challenging. IP bearer network possesses a natural hierarchy that nodes with the same role (level and function) situate on one layer, and all layers comply with the affiliation (Simmons, 2014). As shown in Fig. 1, the upgradation at each stage is generally implemented between adjacent role layers by device addition/removal, link capacity expansion, and network structure change on the tree/ring structure. To this end, the characteristics of the community in this context should be threefold.


Download : Download high-res image (459KB)
Download : Download full-size image
Fig. 1. The multi-stage upgradation of IP bearer network. At each stage, one/more communities (yellow parts) with routers in adjacent roles are considered. Green, blue, and red represent the highest, middle, and lowest roles, respectively.

•
densely connecting in topology;

•
having hierarchical structure inside;

•
preserving the integrity of the tree/ring structures.

The traditional method of manual division in the project may not be feasible especially when the scale of the network becomes large, e.g., millions. In the communication network, researchers usually merge the nearest nodes as a group based on geographical location (Zhang et al., 2017, Sun et al., 2019) or the length of the shortest path (Wang et al., 2016), which are too hasty for the above scenario. Although community detection algorithms can detect the network partition with higher link density inside than outside in topology (Liu et al., 2016), most of them are applied to the social network, not taking the role layer and the tree/ring structures of IP bearer network into account.

In this paper, we divide the problem of discovering hierarchical communities into two parts: how to identify the hierarchy and how to detect the communities.

For the former issue, the hierarchy can be attained by gathering nodes with the same role. However, the role of a node is unknown in the initial, because the same node can belong to different roles in different networks. Therefore, the task of hierarchy identification is transformed into node role classification, with the key point of finding out the mapping relationship between node and role. Numerous machine learning methods can handle this problem. Regarding to the input data, the technique of Network Representation Learning (NRL) can compress high-dimensional network information into a low-dimensional matrix, with the reflection of the importance and relationship of nodes (Cui et al., 2019, Goyal and Ferrara, 2018, Zhang et al., 2018a). Recently, more researchers combine network structure and auxiliary information such as text content (Yang et al., 2015, Tu et al., 2017) and edge attribute (Zhang et al., 2020) to get a deeper representation. To the best of our knowledge, none of the works has extended to the context of IP bearer network, where some specific features (e.g., port, device name, or traffic flow) can be utilized to get a more comprehensive representation.

For the later issue, we only need to get a community that contains the devices to be upgraded, instead of calculating all communities of the whole network (Fortunato and Hric, 2016, Javed et al., 2018). A feasible policy is to detect a community starting from seed nodes through local expansion. The Local Community Detection (LCD) algorithm is very suitable for this scenario and can be applied to large-scale networks with low time complexity (Ni et al., 2019, Luo et al., 2019). However, existing LCD methods treat all nodes as the same thus only the flat community can be found. The affiliation in IP bearer network and the integrity of the tree/ring structures are also neglected during the process of community expansion.

To address the above challenges, we propose a hierarchical community discovery method. The main contributions of our work are concluded as follows.

•
We firstly put forward the issue of community discovery for multi-stage IP bearer network upgradation. The mathematical model consists of the node role classification part and community detection part.

•
We incorporate network centrality, label, and attribute information through the NRL technique, for training a classifier to predict the node role. Particularly, a modified multi-hot encoding is presented to get more compact vectors of attribute information.

•
We propose a semi-local hierarchical community detection algorithm to get the proper community for nodes to be upgraded. The affiliation and the tree/ring structure are considered during the expansion across role layers, with geographical location involved to adjust the overlapped parts of the community for practical needs.

•
We conduct the experiments on three real-world datasets. The simulation results verify our method outperforms other benchmarks in terms of Micro-F1 score in node role prediction and the special features preserving of community. Besides, the scale of the hierarchical community can be flexibly adjusted by the parameter .

The rest of this paper is organized as follows: Section 2 overviews related work. Section 3 describes our proposed hierarchical community discovery method for multi-stage IP bearer network upgradation. Section 4 gives the settings of the experiment and the discussion of simulation results. Finally, we conclude our work in Section 5.

2. Related work
2.1. IP bearer network hierarchy
Different from other networks, IP bearer network has a special hierarchical structure, as illustrated in Fig. 2. The differences among role layers are the number of customers served, the required capacity, and the geographical extent (Simmons, 2014). Data traffic is transmitted through multi-role aggregation. Several optical access rings collect mobile traffic from radio equipment (e.g., macro-base stations and small cells) and fixed traffic from home and enterprise. There is a hub-and-spoke traffic pattern in the aggregation levels: metro routers collect traffic from access nodes and forward it to two metro-core hub nodes in the backbone network (Schiano et al., 2015). Metropolitan area network is usually interconnected in a ring structure, while backbone network changes to a meshed structure in order to deliver traffic among provinces and nations with a higher requirement in capacity and resilience (Wey and Zhang, 2019, Lombardi, 2018).


Download : Download high-res image (539KB)
Download : Download full-size image
Fig. 2. The hierarchical structure of IP bearer network. AR, Access Router; BR, Broadband Router; CR, Core Router; POP, Point of presence; PE, Provider Edge; P, Provider; IGW, Internet Gateway.


Table 1. The comparison of community detection algorithms.

Class	Application scenarios	Generating methods	Optimization objective	References
Hierarchical	Single layer network	Top-down aggregation	Modularity	Newman and Girvan, 2004, Ahn et al., 2010
Bottom-up aggregation	Modularity	Blondel et al., 2008, Lin et al., 2015, Zhang et al., 2015, Fu et al., 2017
Density	Huang et al. (2011)
Local	Single layer network	Seed set expansion	Connection density	Whang et al., 2013, Luo et al., 2018, Ni et al., 2019, Choumane et al., 2020
Clusters in the	Hollocou et al. (2018)
embedding space	
Spectral method	Iterations	Mahoney et al., 2012, Li et al., 2015
Multilayer network	Seed set expansion	Connection density	Interdonato et al., 2017, Jeub et al., 2017
Ring-structured	Single layer network	Edge weight computing	Clusters in the	Shakeri et al. (2017)
embedding space	
Controlling rules	Strength and size	Sun and Ma (2017)
2.2. Network upgradation in partitions
In the literature, the communication network is divided into several partitions to implement multi-stage upgradation. Wang et al. (2016) optimized the K-means algorithm based on the length of the shortest path to get network partitions, in each of which an SDN controller is placed to minimize the latency with switches. Zhang et al. (2017) partitioned cellular network by using the base station as the center to form a circular area with different sizes, so as to realize the energy balance in the clustering routing protocol. Wong et al. (2017) considered the metro and access segments based on the interconnection of optical rings and provided a scheme to enhance the survivability and power savings of transport network. In ad hoc network, the idea of partitioning network into clusters for upgradation has been widely used (Zhang et al., 2018b, Zhang et al., 2018c). The aggregation area with different users, fiber, and termination has also been discussed, thus different network segments can be considered respectively (Sehier et al., 2019).

Our model is fundamentally different from previous works, we aim to achieve communities which focus more on topology with a hierarchy inside and the tree/ring structure preserved. The attained community is more suitable for the task of IP bearer network upgradation than other state-of-art methods.

2.3. Community detection algorithms
Hierarchical community detection. Many real-life networks have community exhibiting explicit hierarchical structures (Du et al., 2018, Long et al., 2019). Communities are nested within each other as many times as there are hierarchical levels. The whole process can be top-down by deleting edges (Newman and Girvan, 2004, Ahn et al., 2010) or be bottom-up by merging nodes (Huang et al., 2011, Lin et al., 2015, Fu et al., 2017). In terms of the method of merging nodes, each community iteratively merges adjacent communities to generate bigger communities at higher level. Note that, the hierarchy of the dendrogram in social network means a merging process (shown in Fig. 3), which is different from the one in IP bearer network meaning the level or importance of devices.

Local community detection. The majority of community detection algorithms address the problem from a global perspective, however, when the information of the whole network is inaccessible (or expensive), identifying a community needs to start from one or several seed nodes through local expansion (Luo et al., 2018). The quality of a local community is usually based on the ratio of internal connectivity to external connectivity (Chen et al., 2009), and the scale of the local community can also be adjustable (Lancichinetti et al., 2009, Luo et al., 2019). Several works have discussed that the quality of a local community is influenced by the choice of initial centric node (Moradi et al., 2014, Bai et al., 2017). Besides, the approaches proposed by Interdonato et al. (2017) and Jeub et al. (2017) have extended the application scenarios to multilayer networks, and each layer has heterogeneous node relationships. Based on multi-node expansion, local community detection algorithm can easily detect overlapping communities (Ni et al., 2019, Choumane et al., 2020). Note that, the candidate nodes in the expanding process are selected based on the compactness in the above approaches, while in IP bearer network there is an affiliation between nodes that the higher-role node controls the community belonging of the lower-role node. Therefore, it is necessary to design a specific expanding scheme to meet this demand.


Download : Download high-res image (154KB)
Download : Download full-size image
Fig. 3. The generating process of the hierarchical community in social network.

Ring-structured community detection. In recent years, few researchers have considered ring structure in community detection. Shakeri et al. (2017) stated a modulus to compute ring density and then apply the value as edge weight to improve the classic community detection algorithm. Sun and Ma (2017) found a driver node can control a non-driver node if the link between them belongs to a ring structure of the network. Note that, different from social network, IP bearer network consists of many ring and mesh structures to dispatch service streams. Thus, it is necessary to devise an algorithm that preserves the integrity of the ring structure of the community for network upgradation (see Table 1).

3. Hierarchical community discovery method
This section presents the hierarchical community discovery method for nodes to be upgraded in multi-stage IP bearer network upgradation. The method is divided into two parts: node role classification and community detection.

3.1. Problem statement
For a IP bearer network with given devices and links, the physical topology is denoted as an undirected graph , where  is the set of all nodes,  is the set of edges among these nodes with edge weight representing the link capacity, and 
 denotes the roles of nodes. Each role corresponds to the function and level of nodes in the network, and we let 
 be the set of nodes in the 
 role of the whole network. Because of the affiliation existing in IP bearer network, 
 are controlled by 
, 
 are controlled by 
, and so on. Therefore, nodes with the same role locate on one role layer, and different role layers constitute the hierarchy of the network as 
. Note that, 
 is unknown in the initial, and we need to predict it through a classifier trained by a percentage of labeled nodes 
︀
. Now the tasks at hand are (1) how to predict the role of the rest nodes and (2) For the node to be upgraded 
, how to detect a hierarchical community for it which preserves the affiliation and the integrity of the tree/ring structures?

The overall procedure of hierarchical community discovery method is illustrated in Fig. 4.

Node role classification part. Firstly, we extract the centrality features and attribute features of the network. Then, there are two steps in our Attribute-associated Enhanced Max-Margin DeepWalk (AEMMDW) algorithm. In step1, based on the idea of centrality-enhanced matrix factorization, we randomly initialize the compressed matrix  and . These two matrices and the SVM model will be jointly optimized through semi-supervised learning, after multiple iterations. In step2, we concatenate  with the attribute features, which are inserted into the better SVM model for training to predict the role of the rest nodes. Therefore, we can build the hierarchy of the whole network.

Community detection part. Assume node to be upgraded 
 is on the 
 role layer. Firstly, we detect all communities below the 
 from the 
 to 
 based on the scheme of seed node expansion. Particularly, during this process, the geographical location is used to adjust the overlapped parts of communities. Then, 
 is set as the seed node, and we expand 
 on the 
 to attain the final hierarchical community for it.

3.2. Node role classification
In this subsection, we propose a novel algorithm of Attribute-associated Enhanced Max-Margin DeepWalk (A-EMMDW), which incorporates multiple features of the network and trains a classifier by a percentage of labeled nodes to predict the role of the rest nodes. Before discussing A-EMMDW, we introduce the theoretical foundation of extracting centrality information and attribute information.

3.2.1. Prerequisite
(1) Centrality features

Centrality implies the structural importance of a node in the network. It considers both local information (e.g., degree centrality) and globe information (e.g., betweenness centrality, closeness centrality, eigenvector centrality, PageRank), which gives clear discrimination in the classification task (Malliaros and Skianis, 2015, Karsakov et al., 2017). Here we briefly describe the centrality measures used in our later experimental evaluation, where  is the number of edges and  is the number of nodes.


Download : Download high-res image (205KB)
Download : Download full-size image
Fig. 5. An example of the modified multi-hot encoding to transform attribute information of device port into vectors. The information in the chart is several messages received from devices at different moments. The strings in blue are the port type, while the numbers in red are the port id.

•
Degree centrality , one of the simplest node importance criteria, equals the sum of the weights of the edges connected to node .

•
Average weight is defined as  divided by the number of edges connected to node .

•
Betweenness centrality is the proportion of shortest paths passing through node , reflecting the intermediary capabilities of nodes. (1)
 
where 
 is the number of the shortest paths between nodes  and , among which 
 denotes the paths that node  belongs. Because the shortest paths need to be calculated during the process, the computational complexity of betweenness is 
 in the weighted network (Brandes, 2001). Therefore, this centrality measure is more suitable for medium scale networks.

•
Closeness centrality measures how close node  to all other nodes in the network. (2)
 
where 
 is the number of the shortest paths between nodes  and . Similar as the betweenness centrality, the computational complexity of the shortest path (
) is a consideration in practical application (Coppersmith and Winograd, 1987).

•
Eigenvector centrality computes the centrality for a node based on the centrality of its neighbors. (3)where  is the adjacency matrix of the network  with eigenvalue . If  is the largest eigenvalue of , x will converge to a special solution through several iterations, and the eigenvector centrality of node  is the th element in the vector x (Ruhnau, 2000).

•
PageRank was designed by Brin and Page (1998) to rank website pages for Google search initially. The core idea is based on the structure of the incoming links. For an unweighted network, PageRank is defined as (4)
 
 
in which  denotes the neighbors of node , and  is a damping factor (usually takes 0.85).

Although the list of the above centrality criteria is limited and we only show those utilized in this paper, any other metrics can also be introduced to weight nodes in the node role prediction task.

(2) Attribute features

Multi-hot encoding is applied to transform nonnumeric attribute features into quantifiable values. The length of the encoding depends on how many different contents of the element are in the list. Then, multi-hot encoding sets the corresponding unit as 1 and fills other parts with 0. However, this conventional method usually suffers from the sparsity issue when there are too many different contents (Li et al., 2019). Hence, in this paper, we make improvements as follows.

•
The length of the encoding is based on the type of element rather than the content.

•
Extract the effective values from elements, and only take the maximum value for each node.

Seeing from Fig. 5, the length of the modified multi-hot encoding is two, because there are only two types of ports. Port id denotes the slot number on the mainboard, which indirectly reveals the transmission capability of the device. Conventional multi-hot encoding is based on element content. For the modified multi-hot encoding, the first and the second columns represent the port types of “GigabitEthernet” and “Pos”, respectively. Note that, other feasible attributes can also be transformed using this method. Compared with the conventional multi-hot method, the results generated by the modified one are more compressed and possess more information to reflect the level and importance of nodes.

3.2.2. Attribute-associated enhanced max-margin deepwalk algorithm
In this part, the algorithm of Attribute-associated Enhanced Max-Margin DeepWalk (A-EMMDW) is proposed to learn the crucial features of the network. Each node is mapped into a low-dimensional vector which contains the network structure information and attribute information, and the vector can be well adapted to the classification task through semi-supervised learning.


Download : Download high-res image (281KB)
Download : Download full-size image
Fig. 6. Demonstration of three node sets during local community detection on (a) flat network; (b) hierarchical network.

Step 1.
Semi-supervised learning with centrality-enhanced matrix factorization:

DeepWalk (Perozzi et al., 2014) is a classic algorithm which generates short random walks as word sentences and inputs them to the Word2Vec model (Mikolov et al., 2013) to learn the network representation. Yang et al. (2015) defined a matrix 
 with element 
 representing the probability that node  randomly walks to , and  can be approximately calculated as 
 with  denotes the adjacency matrix of the network. Yang has proved that DeepWalk is equivalent to factorize the matrix  into the multiplication of two matrices 
 and 
: (5)in which the low dimension .  is the compressed representation matrix that we want to learn, which can be optimized by minimizing the loss function : (6) 
  
 
 
 
where 
 denotes Frobenius norm, and the factor  controls the weight of regularization part. Moreover, if another given feature matrix  would be incorporated into , Eqs. (5), (6) can be rewritten as (7)(8) 
  
 
 
 
 in which 
, 
 and 
. For enhancing the capability of  to learn the implicit structure features, we select six node centralities in Section 3.2.1 to generate the matrix 
 and incorporate it to the matrix  through Eqs. (7), (8).

The matrix  needs to be input into a classifier for training, so as to predict the role of nodes. In this work, we choose the Support Vector Machine (SVM) model, which is widely used in node classification task due to the stability and computational efficiency (Mata et al., 2018, Gu et al., 2020), therefore SVM can be quickly applied to different IP bearer networks. Besides, the semi-supervised learning model in Tu et al. (2016) presented the idea of biased gradient and max-margin, which lets a matrix perform better than supervised learning when applied to the SVM model. Thus, by combining the matrix factorization with semi-supervised learning, the optimization strategy to learn the matrix  is conducted in the following two parts.

(1) Input the matrix  and corresponding labeled data to train the SVM model (The matrices  and  will be initialized on the first iteration). Suppose 
 is the row vector of  and 
 is the corresponding label, as regards the training set 
, the optimization function of SVM is (9) 
 
 
 
 where (10)
 
 
 and 
 in which 
 is the weight matrix of SVM with  denoting the number of node role types. 
 is the slack variable of tolerates errors in each training sample, and  is a hyperparameter to adjust the ratio of 
.

(2) Use the parameters returned by SVM to adjust the matrix . Eqs. (9), (10) show that a sample 
 should be adjusted when the true label 
 unequal to the predicted label . The adjustment can be calculated as: (11)
where (12)
 
 
  
 is the intercept of each hyperplane in the SVM, and factor  controls the strength of the adjustment. Then, we use the adjusted matrix  to update matrices  and  successively through the gradient descent method to meet the target in Eq. (8): (13)
 
(14)
 
(15)
 
(16)
 
 in which  is the step size of gradient descent.

By iteratively conducting the above two procedures, we can get the final optimized matrix  with the lowest loss. The learnt matrix  incorporates the centrality and label information and conforms to the SVM model well.

Step 2.
Attribute features concatenation:

We can receive messages from each device which contain several current states of IP bearer network, such as port, transmission bandwidth and device model. Thus, the attribute matrix 
 can be extracted by using the modified multi-hot encoding presented in Section 3.2.1, in which the dimension  depends on the number of types of available attribute information. Since  has already been condensed, we directly concatenated  to the above learnt matrix  to form the ultimate matrix 
. At this time, the matrix 
 has incorporated the centrality information, label information, and attribute information. Finally, we input 
 into the SVM classifier to predict the role of the rest nodes.

3.3. Community detection
Through the above A-EMMDW algorithm, we can attain the hierarchy of the initial flat IP bearer network as the role layers 
. In this subsection, we formulate the community expansion rules and devise a Semi-Local Hierarchical Community Detection (SLHCD) algorithm to detect hierarchical communities over IP bearer network. In the end, the time complexity of the algorithm is also analyzed.

3.3.1. Semi-local hierarchical community detection algorithm
The task at hand is to detect a community of a node to be upgraded over a hierarchical network, which preserves the affiliation and the integrity of the tree/ring structures. The whole process is implemented through seed node expansion. In particular, our algorithm is semi-local, which only relates to the nodes located on partial role layers. Based on this property, SLHCD algorithm avoids redundant calculation of communities of all nodes compared with global methods, and can preserve the network characteristics of IP bearer network compared with local methods.

Inspired by Chen et al., 2009, Fagnan et al., 2014 and Interdonato et al. (2017), we consider three node sets during the local community detection, as shown in Fig. 6. The community expands from the seed node . The Shell Set  are nodes which are the neighbors of the community but do not belong to the community. Community  contains two parts: the Core Set (neighbors are all in ) and the Boundary Set  (neighbors in  and ). In this paper, given a seed node , we find the community 
 by maximizing the local community function : (17)
 
(18)
 
(19)
 
 where 
 is the internal degree of nodes in 
, equaling to twice the sum of edges between node  and nodes in 
; 
 is the sum of edges between node  and nodes in . Therefore, 
 shows the density of links among nodes within the community, and 
 is proportional to the density of links outside the community. Besides, we set the parameter  controls the relative influence of 
 and 
 on the community. When  is small, the newly added node has a greater influence on 
, making the community tends to expand to a larger scale, and vice versa.

The key point of expanding a community is how to select a node in  to add. The effective way of selecting the best candidate node 
 in general approaches is in a greedy manner: (20) 
 
  
 However, this simple expanding rule works on flat networks, which neglects the affiliation of IP bear network and may break the integrity of the long ring structure. Thus, we put forward two theorems to constraint the community expanding, the whole process of hierarchical community detection is explained as follows.

Theorem 1

For network aggregating from bottom multi-ring structure to top meshed structure, if the community detection procedure is bottom-up, the ring structure can be preserved in community.


Download : Download high-res image (424KB)
Download : Download full-size image
Fig. 7. The process of community expansion and adjustment. (a) The original topology with node role information. (b) The dendrogram shows the expanding process of communities aggregating over role layers. Nodes in the red box are the overlapped part, but they will be adjusted to the community on the right according to the geographical location. The yellow part is the final hierarchical community 
.

Proof

Let 
 denote the  role layer. Assume a group of nodes on the 
 locating on a ring (denoted as 
), they are usually connected by a pairwise nodes on the 
 to control the flow sending and receiving of the ring. As the whole procedure is bottom-up with each node role layer being added step by step, obviously, nodes on the 
 are not considered at the step  of community detection. Thus, for all ring groups 
, nodes in different 
 are disconnected, while nodes in the same 
 can be easily divided into a community due to dense connection. As a result, the ring structure can be preserved no matter how long the ring is.

Theorem 2

For network possessing an affiliation among different node role layers, if community finds candidate nodes on the same role layer to expand and extra adds connected communities on the lower-role layers, the affiliation can be preserved in community.

Proof

The affiliation in IP bear network is that nodes on the 
 are controlled by the nodes on the 
 (Wei et al., 2020). At the step  of community detection, all nodes below the 
 have been allocated to a community, and nodes on the 
 need to be expanded to generate new hierarchical communities. Assume 
 is a community below the 
 and controlled by a set of nodes 
 on the 
. If a node 
 expands to add 
 but do not add another node 
, the affiliation of 
 will be broken in this process. Therefore, 
 should select candidate nodes only on the 
 and extra add the communities that 
 and the candidate nodes connect(also control), which can preserve the affiliation of each node in community.

As illustrated in Fig. 7, assume 
 is the node to be upgraded that we want to detect a hierarchical community for. Based on Theorem 1, we detect all communities start from the 
 role layer. During this process, we randomly select a node 
 which are not allocated to a community as the seed node, and expand  according to Eq. (20). Next, we add nodes on the 
 into consideration. Different form the 
, we need to preserve the affiliation during community expansion. Thus, based on Theorem 2, we extend the Eq. (20) as: (21) 
 
  
 where (22)
 
 is currently the highest role we consider; 
 are the lower-role communities below the 
 that node  connects. The algorithm needs to traverse each node 
 to evaluate the new  score, which can be quickly computed by using the incremental update formula: (23)
 
 
 
where 
 and 
 are the sum of edges from node  to 
 and the rest of network, respectively; 
 is the new boundary set after merging 
 into 
. After detecting all communities on the 
 and 
, we directly set node 
 as the seed node on the 
. We expand the community for 
 as described above, and the final hierarchical community 
 for node 
 is attained at this step.

It should be emphasized that the algorithm based on seed node expansion will generate overlapped communities. In order to make each node ultimately allocated to only one community for upgradation, the overlapped part of communities need to be adjusted during the aggregation. As shown in Fig. 7, for instance, a group of densely connected nodes in the 
 role (denoted as 
) are controlled by a pairwise node in the 
 role for safety. Once these two nodes in the 
 role are not assigned to one community, 
 will become the overlapped part. In this work, we take the geographical location as a consideration to adjust the overlapped part to the nearest community as described below.

Geographical location adjustment. When a set of nodes belong to the same multiple communities they are regarded as an overlapped part , and  is one of the communities that  belongs. We compute the average locations of  and , then move all nodes in  to the community with the nearest distance. (24)
 
 
 
in which  denotes the coordinate .


Download : Download high-res image (586KB)
Download : Download full-size image

Download : Download high-res image (568KB)
Download : Download full-size image
3.3.2. The pseudocode of the algorithm
The general scheme of our proposed Semi-local hierarchical community detection (SLHCD) is reported in Algorithm 1. The inputs are the whole network , node 
, and the parameter . The output is the hierarchical community 
. In Step 1, a set of parameters 
, 
, 
,  and  are initialized. 
 is a list to save all communities; 
 is a dictionary with key being a node and value being a list of community index (in 
) that node belongs to;  is set to 1, indicating that the process starts from the lowest role layer 
;  denotes whether there is a overlapping community. In Step 2 (line 2  line 27), we get all communities on the 
 which will have an influence on the community expansion on the 
. During this process, a seed node is randomly selected at a time to expand until all nodes in 
 are allocated to a community (line 4  line 9), and geographical location is used to adjust the overlapped part of communities (line 11  line 25). The details of the community expanding are illustrated in Function 1. At last, in Step 3 (line 28), we attain the final hierarchical community 
.

Function 1 reports the community expanding rules for a given seed node  across role layers. In Step 1 (line 1  line 3), the community 
 is initialed as the node  and the lower-role communities it connects, which is specifically computed by Function 2. Besides, the boundary set , the shell set , and the local community functions are also initialized. In Step 2 (line 4  line 18), the algorithm expands 
 to get the ultimate result. It traverses node  on the same role layer of  to find the best node 
 (line 5). However, the new 
 may not increase the value of the objective function, therefore, we make a check in line 7. If the condition is met, 
 will be successfully updated, otherwise, the algorithm stops expansion and returns the result (line 16). Note that in line 10, if 
 has expanded to a component, we will terminate the calculation early.

3.3.3. Time complexity
For the node to be upgraded 
, assume there are total 
 nodes in 
 of the network, and 
 nodes on the 
 role of the community 
. The average degree of nodes within a role layer is denoted as .

Firstly, we need to find all communities below the 
. The worst case is that each node on its layer forms an independent community. In this case, each node is chosen as a seed node and the algorithm computes  nodes to select the best neighbor 
 to add, where the communities that 
 connects are saved in a dictionary with the searching time complexity . Thus, the total time complexity of this process is 
.

Secondly, community expands on the 
. Initially, there is only one node 
 on the 
 and the algorithm traverses  nodes to select the best candidate 
 to add. Next, the community contains two nodes on the 
, and the algorithm traverses 2 nodes, and so on. Since the ultimate community contains 
 nodes, no more than 
 nodes would be recomputed. Therefore, the time complexity of this process is 
 
. Thus, the total time complexity of our algorithm is 
 
.

4. Experimental results and analysis
4.1. Dataset
Considering the particularity of attribute information and the topological structure of IP bearer network, we must conduct experiments on real-world datasets instead of random networks or artificial networks. Due to the self-similar phenomenon in the communication network topology (Carmi et al., 2007), three network segments with true node roles in Fig. 2 are utilized to reflect the characteristics of the whole network.1 (1) Net1: a metropolitan area network with nodes in the AR, BR and CR roles. Net1 only has the topology without any attribute information. (2) Net2: a metropolitan area network with nodes in the AR, BR and CR roles. The available attribute information is the message about the port type and port id received by the device. (3) Net3: a backbone network with nodes in the POP, PE, P and IGW roles. Apart from the port message, Net3 also has information on the business circuit board slots of each device, which reveals the transmission capability.

Table 2, Table 3, Table 4 summarize the main characteristics of the above three networks. We let 
 and 
 denote the average degree of nodes considering both inter and intra edges and only intra edges, respectively. For better showing the special multi-ring structure of IP bearer network, we compute the average cycle coefficient (denote as 
) (Janjić and Pržulj, 2014) on each role layer. The cycle coefficient of order  is defined as the fraction of all node pairs in the network that belong to some cycles of length . Obviously, cycle coefficient with  3 is the same as the standard clustering coefficient of the network.


Table 2. Main characteristics of Net1.

Role	Nodes	Inter-layer edges	Intra-layer edges	
 ( 3)	
 ( 4)	
 ( 5)
CR	34	209	44	8.735	2.588	0.051	0.193	0.282
BR	98	187	47	2.867	0.959	0.038	0.101	0.184
AR	286	134	286	1.804	2.000	0.108	0.176	0.264

Table 3. Main characteristics of Net2.

Role	Nodes	Inter-layer edges	Intra-layer edges	
 ( 3)	
 ( 4)	
 ( 5)
CR	14	298	49	28.286	7	0.098	0.307	0.641
BR	60	609	102	13.550	3.4	0.107	0.336	0.587
AR	553	659	245	2.078	0.919	0.141	0.902	0.994

Table 4. Main characteristics of Net3.

Role	Nodes	Inter-layer edges	Intra-layer edges	
 ( 3)	
 ( 4)	
 ( 5)
IGW	6	43	3	8.167	1	0.092	0.651	0.998
P	11	219	22	12.955	4	0.036	0.148	0.335
PE	190	292	101	2.600	1.063	0.084	0.590	0.977
POP	40	68	20	2.700	1	0.708	0.916	0.950
4.2. Baseline methods and experimental setup
The experiment focus on how our proposed algorithm performs on different IP bearer networks. Since the hierarchical community discovery method firstly needs to predict the node role to identify the hierarchy and then detect the hierarchical community, the baseline methods and experimental setup are divided into two parts.

4.2.1. Node role classification
Following benchmarks are implemented to evaluate the performance of features extracted by the network representation learning works in the classification task.

•
DeepWalk (Perozzi et al., 2014). A typical algorithm that performs random walks over networks and employs the Skip-Gram model (Mikolov et al., 2013) to learn network embedding. We set parameters in DeepWalk as window size   10, walks per node   80, and representation dimension   100.

•
LINE (Tang et al., 2015). This approach learns the network embedding in two separate phases:  dimensions through neighbors of nodes, and the next  dimensions by sampling nodes at a 2-hop distance from the source nodes. The representation dimension   100.

•
MMDW (Tu et al., 2016). MMDW uses the semi-supervised learning approach to incorporate label information in DeepWalk. In this paper, we set representation dimension   100,  and .

•
A-MMDW This algorithm concatenates the attribute matrix generated by modified multi-hot encoding with the matrix learnt by MMDW, as a comparison.

Settings. The compressed matrix generated by each above model is input to a one-vs-rest linear SVM classifier. Seeing from Table 2, Table 3, Table 4, the problem of category imbalance is serious in IP bearer network. Therefore, the training and test sets are split by stratified sampling with the training ratio from 20% to 70%. The best in-out and return hyperparameters are learned using 5-fold cross-validation on the training data. We repeat the trial 10 times and report the average scores of the results.

Evaluation metric. Micro-F1 score is chosen to evaluate the performance because it is affected less by the performance on rare labels and is suitable for unbalanced data distribution (Manning et al., 2008).

4.2.2. Community detection
Given that no availability of benchmarks for semi-local community detection, for well-rounded evaluating, we compare our results with two global community detection algorithms and three local community detection algorithms.

(1)
Global methods: Louvain (Blondel et al., 2008) and HAM (Fu et al., 2017) (use 
 as the similarity measures in the article). These two algorithms are based on node aggregation.

(2)
Local methods: LCD (Chen et al., 2009), SSE (Whang et al., 2013), and CoreExpand (Choumane et al., 2020). These three algorithms are based on seed node expansion.

Settings. Our method and above benchmarks are all based on the true node roles as the hierarchy. In order to compare with the global methods, the local methods select one node as a seed at a time to discover all communities of the network, and SLHCD aggregates nodes over all layers from the lowest role to the highest role. Considering that all benchmarks can only detect flat communities, we will build the corresponding multi-role network before running them. Additionally, since the accurate geographical locations are unavailable in the datasets, we draw the network topology and place it on a grid to make a hypothesis. The experimental results are reported by the average scores based on 10 test cases.

Evaluation metric. The modularity  (Newman and Girvan, 2004), one of the crucial indicators of the community quality, is utilized under the circumstance without the ground-truth community to compare (Yang et al., 2017). (25)
 
 
in which  denotes the total number of edges in the network,  is the sum of edges within community , and  is the sum of edges connected to the internal nodes of community . A higher modularity score indicates relatively better community performance.

Besides, we also define a new metric to evaluate the similarity of communities detected by different algorithms in later experiments. (26)
 
 
where 
 and 
 are two community results of the algorithm A and algorithm B; 
 denotes the node set of the community that node  belongs to in 
, and so does 
.

4.3. Results
4.3.1. Node role classification
In this part, since Net1 does not have the attribute information, we only conduct the experiments on Net2 and Net3. The Micro-F1 scores of different algorithms for classification results are shown in Table 5, Table 6. Particularly, scores on Net3 with 20% labeled data are not measured because of the failure of stratified sampling with too few training nodes in the IGW role.


Table 5. Micro-F1 scores (%) on Net2.

%Labeled Nodes	20%	30%	40%	50%	60%	70%
DeepWalk	86.42%	88.42%	88.94%	88.43%	89.71%	90.63%
LINE	85.67%	87.31%	87.67%	88.21%	88.29%	89.64%
MMDW	89.37%	90.14%	90.81%	90.47%	91.45%	92.54%
A-MMDW	91.51%	91.59%	91.71%	92.82%	93.33%	93.68%
A-EMMDW	94.04%	95.12%	95.67%	96.37%	96.21%	96.89%

Table 6. Micro-F1 scores (%) on Net3.

%Labeled Nodes	20%	30%	40%	50%	60%	70%
DeepWalk	–	67.61%	70.01%	73.15%	77.07%	76.89%
LINE	–	66.21%	68.69%	73.26%	76.61%	76.68%
MMDW	–	79.78%	81.81%	82.62%	84.72%	85.21%
A-MMDW	–	82.78%	85.98%	86.82%	91.38%	94.33%
A-EMMDW	–	90.05%	91.45%	93.12%	94.95%	96.75%

Table 7. Mean and standard deviation of community size on Net1.

Louvain	HAM	LCD	SSE	CoreExpand	SLHCD ( 0.1)	SLHCD ( 1)	SLHCD ( 10)
1.83±1.80	1.85±2.03	1.78±1.33	1.65±0.97	1.85±2.03	1.78±1.33	1.78±1.33	1.77±1.31
3.02±5.46	2.84±8.67	2.01±1.41	2.54±3.15	3.31±11.37	2.84±4.60	2.76±4.27	2.74±3.59
29.86±23.70	18.17±16.22	2.09±1.13	27.87±20.69	29.86±25.51	26.13±30.56	23.22±25.17	19.00±20.39

Table 8. Mean and standard deviation of community size on Net2.

Louvain	HAM	LCD	SSE	CoreExpand	SLHCD ( 0.1)	SLHCD ( 1)	SLHCD ( 10)
1.79±0.43	1.79±0.43	1.79±0.43	1.78±0.41	1.79±0.43	1.79±0.43	1.79±0.43	1.79±0.43
6.32±9.23	5.95±8.53	2.79±3.08	6.32±9.95	6.74±25.58	6.32±9.55	6.01±10.53	5.57±9.12
41.80±29.88	25.08±41.10	2.60±2.94	44.79±16.09	156.75±235.92	125.4±80.52	78.38±54.29	69.67±47.23

Table 9. Mean and standard deviation of community size on Net3.

Louvain	HAM	LCD	SSE	CoreExpand	SLHCD ( 0.1)	SLHCD ( 1)	SLHCD ( 10)
2.00±0.00	2.00±0.93	2.00±0.00	2.00±0.00	2.00±0.00	2.00±0.00	2.00±0.00	2.00±0.00
2.53±1.51	2.50±1.41	2.28±0.78	2.23±0.64	2.53±1.51	2.47±1.36	2.47±1.36	2.43±1.36
2.84±2.75	2.78±2.27	2.25±0.89	10.48±7.79	3.11±6.26	120.50±13.50	34.43±31.76	26.78±20.41
8.82±15.77	8.52±15.66	2.35±0.95	11.76±7.32	22.45±38.20	61.75±60.95	61.75±38.29	61.75±32.69

Download : Download high-res image (317KB)
Download : Download full-size image
Fig. 8. The distribution of community size with different hierarchy.

From the results, it is evident that A-EMMDW outperforms other benchmarks by incorporating the centrality, label and attribute information. DeepWalk and LINE both only consider the local relationship of the network, obtaining the lowest Micro-F1 scores on two datasets. MMDW introduces the label information to let the classifier fit the dataset effectively, by which getting higher scores in the prediction task. Compared with MMDW, we can notice that A-MMDW and A-EMMDW respectively obtain nearly 2% and 5% improvements on Net2, and A-EMMDW even increase 10% on Net3 with more attribute information available. This phenomenon has confirmed that node role has a strong correlation with attribute information in IP bearer network. Besides, enhanced by incorporating the centrality of local and global structures of the network, A-EMMDW learns more crucial features of node compare to A-MMDW and obtains better performance. It is worth noting that at 30% training ratio our model has already got satisfactory Micro-F1 scores up to 90%, which indicates that A-EMMDW can learn enough features of IP bearer network even if only a small amount of labeled data is given.

4.3.2. Community detection
For simplifying the expression in the later analysis, we denote the node role layers as follows. (1) in Net1&Net2: 
-AR, 
-BR, and 
-CR. (2) in Net3: 
-POP, 
-PE, 
-P, and 
-IGW.

(1) Size of community

Table 7, Table 8, Table 9 compare SLHCD with other approaches in terms of size on three datasets. Network is partitioned into many small connected components when only contains 
, and all algorithms obtain nearly the same results in this case. When the number of role layers increases, the sizes of communities gotten by all methods become bigger. It can be explained that the newly added higher-role nodes form the joints, making the network connection denser. SLHCD has an obvious growth trend than other benchmarks because the community of it must contain all roles from bottom to top, while other methods do not have this limitation. In general, LCD always yields the smallest communities on three datasets. Although based on LCD, SLHCD overcomes this shortcoming through hierarchical aggregation.

Furthermore, note that in SLHCD, as the parameter  varies from 0.1 to 10, the size of the community becomes smaller. When  is small, the newly added node has a greater influence on the internal connection density, making the local community tends to expand to a larger scale, and vice versa. This performance implies that we can control the scale of the community by adjusting .

We analyze the distribution of community size in the process of bottom-up community aggregation. The size of community presents a power law distribution on the 
 and 
 (reported in Fig. 8) that most communities have small scale. As nodes on the 
 or 
 role layer add, the lower-role communities are connected and then merged into larger-scale communities. Nevertheless, the more role layers of the community hierarchy, the greater the difference of community size is affected by the network structure.

(2) Community overlapped parts

We also investigate the proportion of overlapped nodes aggregated over role layers without the geographical location adjustment. Table 10 reports the influence on the overlapped parts among communities with the change of the parameter , for three networks. Communities in the lowest role layer almost form the independent groups. As the number of role layers in the network increases, the overlapped nodes increase due to the emergence of more and more ring structures. Net2 and Net3 are denser networks with higher cycle coefficient scores, therefore they have more nodes overlapped compared with Net1, reaching 90% when aggregate over all layers. However, the extent of the overlapped parts does not show a systematic variation with , which is much dependent on the specific network topology.


Table 10. Proportion of overlapped nodes of communities detected by SLHCD.

Network	Net1		Net2		Net3
 0.1	 1	 10		 0.1	 1	 10		 0.1	 1	 10
1.40%	1.05%	1.40%		0	0	0		0	0	0
19.53%	17.45%	17.19%		8.65%	48.12%	64.11%		0.87%	0.87%	0.87%
68.42%	59.57%	61.48%		75.92%	98.25%	92.50%		43.15%	95.85%	93.78%
–	–	–		–	–	–		97.57%	96.36%	86.84%
(3) Modularity

Modularity can reflect the connection density of the community in topology. Fig. 9, Fig. 10 depicted the modularity scores on different role layers of three datasets. In general, when Net1 and Net2 only contain 
 and Net3 contains 
, the modularity scores for all algorithm are highly close to 1. The communities are clear at this time, for the network has been split into many small connected components and each of them forms a community respectively. As nodes in higher roles add, the emergence of multi-ring structure makes the boundary of the community ambiguous and the network becomes more difficult to partition, so the score of the modularity decreases.


Download : Download high-res image (342KB)
Download : Download full-size image
Fig. 9. The modularity scores of SLHCD compared with global benchmarks.


Download : Download high-res image (390KB)
Download : Download full-size image
Fig. 10. The modularity scores of SLHCD compared with local benchmarks.

Compared with global benchmarks (Fig. 9). Louvain and HAM are two algorithms based on modularity maximization. Louvain always obtains the maximum modularity scores on three datasets. Although modularity is not a metric considered in SLHCD, SLHCD still can achieve satisfactory modularity performance similar to HAM by adjusting the parameter .

Compared with local benchmarks (Fig. 10). SLHCD and all local benchmarks are based on the local expansion. However, by choosing the proper value of , SLHCD can always attain the highest scores of modularity among all algorithms. Besides, our model shows the robustness on three datasets. Seeing in Fig. 10(b), the score of CoreExpand drops sharply on Net2, which can be explained that CoreExpand expands a community to cover most nodes due to the multi-ring and meshed structures of the network.

(4) Affiliation and the tree/ring structures

In this part, we analyze how the communities detected by SLHCD ( 1) preserve the special features of IP bearer network. It is worth noting that the positions of nodes in figures are the hypothetic geographical coordinates used to adjust the overlapped parts of communities. In Fig. 11(a), we can observe that Net1 has many long-distance rings, but SLHCD keeps the complete rings from being cut. In addition, the complete tree structure is also preserved by allocating to the community that the root node belongs to. Fig. 11(b) shows that Net2 is a grid-like network with numerous ring and meshed structures. Nodes in the AR role locating on rings are usually controlled by a pair of junction nodes in the BR or CR role. Through the affiliation rules defined in Section 3.3.1, nodes topologically adjacent in the AR role are allocated in one community when they have the same superior nodes, thus, the integrity of the multi-ring structures are preserved.


Download : Download high-res image (890KB)
Download : Download full-size image
Fig. 11. Hierarchical communities detected by SLHCD with  1 on Net1 and Net2. The largest, medium, and the smallest node sizes represent the CR, BR, and AR roles, respectively.

Fig. 12 depicts the results of communities aggregated over all role layers step by step of SLHCD ( 1) on Net3. At first, only the lowest-role nodes are taken into consideration. Next, when nodes on the 
 role add, each connected component independently forms a community. At step 3, the newly added nodes on the 
 role layer act as the junctions for the lower-role communities, then the fragmented communities in step 2 constitute a larger community. Finally, the highest-role nodes gather the nearest communities that they directly connect. By implementing this strategy, for the node to be upgraded , SLHCD automatically terminates the expansion process according to the role of  instead of always being implemented on the whole network.


Download : Download high-res image (696KB)
Download : Download full-size image
Fig. 12. The process of expanding communities from the lowest to the highest role layer of SLHCD with  1 on Net3. Nodes in gray represent they are not assigned to a community at this step, and nodes in the same color represent they belong to the same community. The largest, second-largest, third-largest, and the smallest node sizes represent the IGW, P, PE, and POP roles, respectively.


Download : Download high-res image (853KB)
Download : Download full-size image
Fig. 13. Communities detected by different benchmarks on Net3.

In parallel, we also compare our algorithm with other baseline methods. From Table 11, we can find that the communities detected by SLHCD are largely different from other traditional algorithms on three datasets. The highest similarity ratio reaches 50%, while the lowest one is less than 10%. The visualization of the results of each benchmark on Net3 is shown in Fig. 13. Taking the two parts in the red circle as an example, compared with the results of SLHCD in Fig. 12 (Step 4), Louvain performs best in preserving the ring structure as complete as possible, while HAM almost splits the nodes on the rings into two parts. The communities detected by the local approaches based on seed node expansion are too fragmentary (LCD, SSE) or too large-scale (CoreExpand). This performance reflects the particularity of IP bearer network that multi-ring and meshed structures make the community difficult to expand: either do the results terminate in a small set or expand to contain a large part of the whole network. However, it cannot be neglected that all baseline methods suffer the drawback of cutting rings and do not strictly comply with the affiliation in IP bearer network, as shown by the red arrows in the figures, which can be explained as conventional network partition methods neglect the hierarchical structures of role layers in the detection. Experimental results have verified that it is infeasible to only consider the density of the connection without considering the internal rules in a specific application scenario.


Table 11. The similarity of communities detected by SLHCD with different benchmarks.

Net1	Net2	Net3
Louvain	41.52%	55.34%	38.32%
HAM	48.58%	35.01%	36.84%
LCD	17.33%	9.92%	6.27%
SSE	39.45%	31.74%	24.83%
CoreExpand	51.94%	35.73%	45.42%
4.4. Discussion
4.4.1. Running time analysis
We discuss the time performance of our hierarchical community discovery method. Table 12 shows the running times of node role classification part (A-EMMDW algorithm) and community detection part (SLHCD algorithm) on three datasets. As can be seen, the whole method spends a lot of time on A-EMMDW for training and predicting. Once the hierarchical network is built, the time cost of community detection becomes very low. In addition, our method runs slowly on Net2 compared with Net1 and Net3. It can be explained that Net2 is a dense network with large 
 (shown in Table 2, Table 4), which leads to SLHCD to spend more time comparing the local function score among neighbors on each role layer.


Table 12. Mean and standard deviation of running times (in seconds)

A-EMMDW	SLHCD
Net1	–	0.104±0.002
Net2	59.583±1.612	0.404±0.006
Net3	24.560±1.010	0.102±0.002
4.4.2. Hierarchy granularity
The process of node role prediction depends on the prior knowledge of expert labeling. An initial flat IP bear network can be transformed to different hierarchical networks according to different levels of granularity. Also, the same device can be labeled to different role when locates in different network segments. Our work just provide a framework to find the mapping relationship between node and role.

4.4.3. Modularity analysis
Modularity is not involved in our algorithm (only as an evaluation), despite the fact that modularity is a famous indicator to discover the best communities in most existing methods. There are two reasons:

•
Modularity has limitation in finding communities smaller than a certain scale, which will systematically merge small communities to form larger ones (Fortunato and Barthélemy, 2007).

•
Modularity is a global metric. We need to compute the community belonging of all devices before evaluation, which becomes rapidly intractable as network increases (e.g., millions) when we only detect communities for a few devices to be upgraded.

5. Conclusion
This paper investigates the hierarchical community discovery problem for selecting proper network partitions in the multi-stage upgradation of IP bearer network. The issue of identifying the hierarchy of the whole network is transformed into node role classification, which is addressed by a support vector machine classifier utilizing network centrality, attribute, and label information. Then, we present a community detection algorithm to attain a hierarchical community for nodes to be upgraded through semi-local expanding, with the overlapped parts of communities adjusted by the geographical location.

Simulation results show our method outperform other benchmarks on Micro-F1 scores in the node role classification task, and on preserving the characteristics of IP bearer network in the community detection task. The scale of the community is adjustable which is proportional to the parameter . Although modularity is not involved in our method, the attained results can still get high modularity scores. Most importantly, the communities gotten by our method strictly comply with the affiliation and preserve the integrity of the tree/ring structures of IP bearer network.

The future researches of our work are as follows. First, we aim to explore other limitations in the process of community expansion, such as the threshold of community size and business distribution. Second, after partitioning the nodes to be upgraded into different communities, we intend to discuss the upgradation order of each community in the planning. Finally, it will be important and meaningful to build a standard evaluation system for the communities in IP bearer network.