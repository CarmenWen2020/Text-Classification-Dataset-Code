Artificial Intelligence (AI) based models are increasingly deployed in the Internet of Things (IoT), paving the evolution of the IoT into the AI of things (AIoT). Currently, the predominant approach for AI model training is cloud-centric and involves the sharing of data with external parties. To preserve privacy while enabling collaborative model training across distributed IoT devices, the machine learning paradigm called Federated Learning (FL) has been proposed. The future FL network is envisioned to involve up to millions of distributed IoT devices involved in collaborative learning. However, communication failures and dropouts by nodes can lead to inefficient FL. Inspired by the UAV-assisted communications in 5G heterogeneous networks (HetNet), we propose the UAV-assisted FL in this article. The FL model owner may employ UAVs to provide the intermediate model aggregation in the sky and mobile relay of the updated model parameters from data owners to the model owner. This therefore increases the reach of FL to data owners that face uncertain network conditions and improves the communication efficiency. To incentivize the UAV service providers, we adopt the multi-dimensional contract incentive design as a case study. The incentive compatibility of the contract ensures that the UAVs only choose an incentive package corresponding to its type, for example, traveling cost. The simulation results show that the UAV-assisted FL achieves significant improvement in communication efficiency and validates the incentive compatibility of our contract design.
Introduction
The recent advances of the Internet of Things (IoT), Artificial Intelligence (AI), and communication technologies are gradually paving the evolution of the IoT into the Artificial Intelligence of Things (AIoT). In particular, the enhanced perception capabilities of IoT devices enable a wealth of data to be collected. Coupled with the advent of 5G communications, a seamlessly connected network of AI-empowered IoT devices is enabled to bring intelligence to both consumers and industrial end users.

Currently, the predominant approach for AI model training is cloud-centric, that is, the IoT devices transmit the training data to a distant cloud server for processing. However, this is no longer sustainable due to the following reasons. First, privacy laws, for example, the General Data Protection Regulation (GDPR) [1], are increasingly stringent. In addition, the increasingly privacy-sensitive data owners can opt out of data sharing with third-parties. Second, the transfer of massive quantities of data to the distant cloud burdens the networks and incurs unacceptable latency especially for time-sensitive tasks. This potentially impedes the further development of the AIoT.

In the face of these challenges, Federated Learning (FL) has first been proposed in [2]. In each iteration of FL, a model owner transmits a set of model parameters to each data owner, for example, IoT devices. Then, the model parameters are updated with the locally stored training data. Only the updated model parameters, rather than the raw data, need to be transmitted back to the model owner for global aggregation. The FL training process thus enables privacy preserving collaborative machine learning.

However, the communication inefficiency remains a key bottleneck in FL. The FL network can involve thousands of distributed IoT devices. The communication cost thus often dominates the computation cost. In addition, node failures and device dropouts due to communication failures can lead to inefficient FL, for example, in terms of lower model accuracy or slower convergence. As such, it is of paramount importance to improve the communication efficiency of FL. Few solutions exist to improve the communication efficiency in FL, for example, worker selection protocols and compression techniques [3]. However, they do not well-address the issue. For example, data owners with severely limited network access are still unable to participate in the FL process.

Inspired by recent advancements in the Unmanned Aerial Vehicle (UAV) assisted communications as part of the 5G heterogeneous networks (HetNets) [4], we propose UAV-assisted communication for FL in this article. To improve the communication efficiency, the FL model owners can employ the third-party UAV service providers, for example, Drones-as-a-Service (DaaS), to provide network coverage and relay support from the sky, thereby increasing the reach to more devices and reducing the device dropout rate during training. However, there exist various UAV types in the market, for example, different in terms of mobility and communication capabilities. The types are hidden from the model owner amid information asymmetry, that is, the DaaS providers may misreport their UAV types to achieve greater rewards for their services. As such, to appropriately incentivize the DaaS providers, we leverage the multi-dimensional contract theoretic incentive mechanism design. The incentive compatibility of the contract ensures that each DaaS provider only selects the contract corresponding to its actual type, thus ensuring profit maximization amid information asymmetry. The contributions of this article is as follows:

We provide a tutorial of the fundamentals of FL. Then, we review the communication related issues and existing solutions proposed to improve the communication efficiency.

We provide an overview of the issues and applications related to UAV-assisted communication in 5G HetNet. Then, we propose the UAV-assisted communication efficient FL.

We develop the multi-dimensional contract-matching incentive mechanism design to reward the DaaS providers amid information asymmetry.

Figure 1. - The FL working process. The model training is conducted locally. Then, only the model parameters are subsequently exchanged for aggregation.
Figure 1.
The FL working process. The model training is conducted locally. Then, only the model parameters are subsequently exchanged for aggregation.

Show All

Fundamentals of Federated Learning
Federated Learning
The two main entities in the FL system are the data owners and model owners (Fig. 1). The data owners, hereinafter workers, each own a private dataset aggregated through IoT sensing, for example, temperature readings or images. Note that these private data may not be willingly shared with the model owner or among other workers. On one hand, the other workers may be competitors, for example, in the case of industrial applications. On the other hand, the model owner may be a third-party developer of AI applications with no affiliations to the data owners.

In the FL process, the model owner first transmits a set of model parameters to each worker. This set of parameters may be randomized, or may comprise parameters from a previous training round. The FL process consists of a number of iterations, each of which consists of three main steps as shown in Fig. 1:

Local Model Training: The worker trains the received model using the local sensing data, for example, through the Stochastic Gradient Descent to minimize a local loss function.

Wireless Transmission: The worker transmits the updated local parameters to the model owner.

Global Parameter Update: The local parameter updates from all workers are aggregated and averaged in the case of the conventional Federated Averaging algorithm [2].

After Step 3, the model parameters are transmitted back to the worker for the next iteration of training. The process continues until a desired test accuracy is achieved.

In fact, Step 3 of each iteration is usually conducted in a synchronous manner, that is, the global parameter update is conducted only after all workers have completed the local model training. In contrast, an asynchronous aggregation implies that the global parameter is updated whenever the model owner receives a set of local parameter updates from a worker. Though the asynchronous scheme enables workers to join while a training round is in progress, there have been convergence issues. As such, most studies of FL presently adopt the synchronous scheme.

Applications of Federated Learning
The main advantages of FL are as follows:

FL enables privacy preserving collaborative machine learning.

FL leverages the computation capabilities of end IoT devices for local model training, thus reducing the computation workload of the cloud.

Model parameters are usually smaller in size than raw data, thus alleviating the burden on backbone communication networks.

This has enabled several practical applications of FL.

Mobile Keyboard Prediction
The next-word-prediction model of Gboard (gboard.app.goo.gl/get), developed by Google, has been successfully trained using FL. This ensures that sensitive data, for example, user text messages, do not need to be shared with a third-party server.

Healthcare
Nvidia Clara FL (https://blogs.nvid-ia.com/blog/2019/12/01/clara-federated-learning/) has been exploring the use of FL to enable collaborative learning across multiple hospitals. This guarantees that the sensitive data of patients remain kept in the local servers of hospitals.

Finance
WeBank FedAI (https://www.fedai.org/) has explored the use of FL to enable collaboration across financial institutions while adhering to user privacy protection regulations in the finance industry.

Recommender System
To serve the interests of users while meeting privacy laws, several studies have also explored the use of FL to build recommender systems. The comprehensive interest profile of a user group can be derived across platforms for e-commerce, such as Taobao, to entertainment applications such as YouTube.

Internet of Flying Things
UAVs are increasingly utilized in smart city applications (https://spectrum-ieee-org.ezproxy.auckland.ac.nz/tech-talk/sensors/remote-sensing/uavs-prove-usefuIdelivering-remote-pow-er-charging-services) [5], for example, to enable data collection or for package delivery. Recent studies have proposed the use of FL for the coordination of independently owned UAV swarms or for FL model training using UAV sensing data [6].

The FL network for the above applications can potentially involve up to millions of distributed IoT devices, each with heterogeneous network conditions and communication capabilities. As such, it is of paramount importance to improve the communication efficiency in FL.

Communication Efficiency in Federated Learning
Communication Issues in FL
In distributed learning schemes such as FL, the communication cost often dominates the computation cost. In addition, the downlink speed of IoT devices exceeds that of the uplink speed. However, the model parameter updates have to be transmitted to the model owner for aggregation after local training. The delay in wireless transmission of complex, high-dimensional model updates during the FL training process can lead to the straggler effect. The synchronous FL global aggregation only occurs after every worker's parameter update has been transmitted to the model owner. This implies that each iteration of model training only takes place as quickly as the slowest worker.

Besides the inefficiency in transmission of local model updates, there exists a significant number of worker dropouts while training is taking place due to network and communication failures. Moreover, the dropout frequencies are time-correlated, that is, dropouts are more likely to occur in the daytime, and be geographically correlated, for example, workers from a poorly connected region may have more limited bandwidth and thus collectively have higher dropout rates. The worker dropouts can lead to reduced model accuracy given a decline in the number of available training samples. The FL model may also under-represent the data distribution from regions with limited connectivity.

Review of Potential Solutions
In the following, we review the potential solutions toward improving communication efficiency in FL.

Edge Computing
The edge computing paradigm utilizes the enhanced computation capabilities of end devices and edge servers to bring computation closer to where data is located, that is, at the network edge. Solutions from edge computing have been incorporated to solve the communication issues in FL. The study in [2] proposes that each worker can implement multiple rounds of training passes over the local dataset before communication for aggregation. This implies that more local updates are computed before each round of global communication, which reduces the number of communication rounds required, at the expense of increased computation expense on end devices. Alternatively, the hierarchical FL [7] can be adopted, in which the workers do not communicate directly with the model owner, that is, a distant cloud server. Instead, the local parameters are first communicated to edge servers for intermediate aggregation. Then, communication with the model owner is further established for global aggregation. Besides reducing the instances of communication with the distant servers of the model owner, this relay reduces the dropout rate of devices.

Worker Selection Protocols
With the expectation of worker dropouts, several studies propose the selection of an excess of the required number of workers to participate in training. Moreover, resource-aware worker selection algorithms are proposed, for example, to select only workers with reliable network connections or sufficient energy capacity to complete the FL training. However, the study in [8] finds that the selection algorithms that leave workers out, for example, as a result of being geographically situated in an area with limited bandwidth, can lead to “unfair” models that generalize poorly, that is, the models have low accuracy when applied on test samples from workers that are left out during training. As such, a fairness-aware FL is proposed to assign higher weights to the parameter updates from underrepresented workers.

Model Compression
To reduce communication cost, the study in [3] proposes the structured and sketched updates that encode the model updates from workers in a compressed form for more efficient communication with the server, which subsequently decodes the update. In addition, the quantization and subsampling approaches are also proposed. In particular, the quantization approach reduces the number of bits per parameter communicated whereas the subsampling approach involves the selective communication of only a random subset of the model parameters. This reduces the size of model parameters required to be uploaded to the model owner.

Multi-Access Bandwidth Allocation
The study in [9] proposes the multi-access Broadband Analog Aggregation (BAA) with over-the-air computation to reduce the communication latency in FL through exploiting the signal superposition property of a multi-access channel. The communication latency of the BAA transmission is independent of the number of devices in the FL network, and thus it enhances the scalability of the FL working process.

However, these existing solutions do not solve the issue of communication inefficiency in FL sufficiently. The edge computing inspired solutions, for example, hierarchical FL, still require an edge server, for example, base station, to be in close proximity to the workers for intermediate aggregation. Such a communication infrastructure can be infeasible to establish, especially when the FL training is not recurrent. Moreover, the coverage of the infrastructure may be reduced due to shadowing effects. Even with model compression, workers with severely limited connectivity are still unable to participate in the FL training.

Naturally, these workers will be omitted by worker selection algorithms due to their high probability of dropout. The omission of such training samples during the FL training can cause a deterioration in model performance, that is, the model's ability to generalize is affected. Though the fairness-aware selection protocols may assign higher weights to incorporate the parameter updates from these underrepresented workers, the communication inefficiency and high dropout rates of workers with limited connectivity is still unsolved. Therefore, we propose the UAV-assisted FL as a solution in the following section.

UAV-Assisted Communication in Federated Learning
Overview of UAV-Assisted Communication
In recent years, the studies regarding the subject of UAV-assisted communication are increasingly popular.

UAVs have two key advantages that increase their appeal for utilization in wireless communications. First, UAVs are cheaper and more flexible to deploy [10] as compared to terrestrial communication infrastructure or other high-altitude platforms, for example, balloons [4]. UAVs are more cost effective for ad-hoc, non-recurrent events such as FL training. Second, UAVs are highly mobile and can thus maneuver to establish line-of-sight (LOS) communication links with ground devices, for example, mobile sensors and vehicles. As such, the UAV-assisted wireless communications are used in several scenarios.

Network Coverage and Relay Support from the Sky
To enable ubiquitous network coverage, UAVs are envisioned to be part of 5G HetNets, for example, to facilitate enhanced Mobile Broadband (eMBB) [11] or Ultra reliable low-latency communication (URLLC) for time-sensitive tasks. In addition, UAV-enabled mobile relaying can significantly reduce link distances between ground IoT devices and the distant cloud servers [4].

Caching and Computation Offloading in the Sky
UAVs can serve as flying edge computing platforms to provide caching and computation offloading support for ground IoT devices with limited computing capabilities. Dynamic caching can be provided to mobile devices at a lower transmission latency [11].

Sensing from the Sky
In the “data ferrying model,” the UAV travels to the data source, receives the data, and subsequently travels closer to the destination for data transmission. UAVs can be deployed to conduct sensing itself, for example, through their equipped sensors. However, due to the limited resources of UAVs and their heterogeneity, the group of studies propose to address different resource allocation issues in UAV communications. Some approaches that are related to FL are as follows.

Trajectory Optimization
In general, UAVs expend the most energy resource on traveling, that is, flying. As such, trajectory optimization is of paramount importance to maximize route coverage given onboard energy constraints. For example, the study in [12] proposes the dynamic programming (DP) and convex optimization solution.

Efficient Deployment
Different UAVs have different capabilities and characteristics, requiring the matching of the most suitable UAV to perform varying tasks [6], [12]. Moreover, machine learning techniques have been used for the predictive deployment of UAVs.

Spectrum Management
To perform commu-nication functions efficiently, UAVs are required to manage the spectrum efficiency well, that is, to maximize throughput. However, this comes at the cost of greater energy expense required to maintain shorter link distances with ground nodes.

Incentive Mechanism
It has been envisioned that the DaaS providers will be increasingly employed by network operators, for example, to provide network coverage support during large-scale events. To incentivize participation, an incentive scheme has to be designed [13].

Inspired by the above studies, we propose the UAV-assisted FL.

UAV-Assisted Communication Efficient Federated Learning
We consider a system model (Fig. 2) in which a model owner initiates an FL task with a group of workers, for example, independent owners of IoT devices. However, the workers may either face unreliable network conditions and thus have higher dropout rates, or the workers may have insufficient transmit power to complete the wireless transmission of model updates effectively, thus delaying the FL training process. As such, the third-party DaaS providers, hereinafter UAVs, are employed by the model owner to provide network coverage and relay support from the sky.

Figure 2. - The system model.
Figure 2.
The system model.

Show All

The area in which the workers are situated is divided into subregions (Fig. 2b). Each of the subregions consists of a number of nodes in which a subset of workers are situated. A UAV is deployed to serve each subregion. Each iteration of the UAV-assisted FL consists of the following steps (Fig. 2a):

Local Computation
At the beginning of each training round, the model owner transmits a set of parameters to the workers, that is, data owners. Then, each worker conducts model training using its local data.

Edge Aggregation in the Sky
The UAV visits selected workers to collect the updated local model parameters for intermediate aggregation.

Mobile Relay
The aggregated parameters are transmitted from the UAV to the model owner for global aggregation across all subregions. To enable efficient wireless transmission to the model owner, the UAV travels to a transmission point which has favorable channel conditions for communication with the model owner (Fig. 2a).

The benefits of the proposed UAV-assisted FL are as follows. First, the flexible deployment of UAVs implies that model owners are able to obtain the training inputs of workers that are geographically distant from terrestrial communication infrastructure. Second, UAVs have higher transmit power than individual IoT devices. This increases the speed of model updating. Third, UAVs are able to conduct mobile relaying, that is, the link distance of reception and transmission of the model parameters is reduced. As such, UAVs enable a more reliable connection, thus reducing the worker dropout rates during the training. Moreover, the privacy of the workers is preserved since the UAVs and model owner only receive the model updates, rather than the raw data of the workers.

Given the involvement of third-party DaaS providers, an incentive scheme has to be designed to compensate the UAVs for task completion. However, there exist different UAV types with different traveling, computation, and communication capabilities. These heterogeneous types are often the private information of the DaaS providers that are unknown to the model owner. In addition, the DaaS providers may have an incentive to misreport their types to seek higher rewards. As such, we leverage the self-revealing mechanism of the contract theoretic incentive mechanism design.

The Multi-Dimensional Contract-Matching Design
UAV and Model Owner Utilities
UAV types related to the FL task completion are as follows.

Traveling Cost
UAVs are required to travel to the subregion during the task, and visit the worker nodes for reception of parameter updates and then travel to a transmission point for wireless relay to the model owner. The energy required for this process varies according to the propulsion power expended for traveling. The propulsion power [12] is determined by the required power to balance the parasitic drag caused by skin friction, and drag force of air redirection. These factors are variable according to the reference area, wing aspect ratio, and weight of the UAV.

Computation Cost
The UAVs are required to perform the intermediate aggregation of local model parameters. The energy required depends on the UAV computation capacity and cycles per bit for computing.

Communication Cost
The varying communication cost incurred by the UAV depends on the bandwidth allocation and transmission power.

Note that each UAV type is characterized by the minimum energy required to cover a proportion of nodes, in terms of the propulsion power, computation energy, and transmission power required by the UAV to complete the task within the stipulated time constraint. The UAV types are often the private knowledge unknown to the model owner.

On the other hand, the profit of the model owner is the revenue gains from FL model accuracy minus incentive expense. FL model accuracy is assumed to be a concave function [14] of the aggregate training data collected, that is, to reflect that the profit increases at a diminishing rate when more worker nodes are covered. As such, to maximize profit, a model owner should select UAVs with the lowest marginal cost of node coverage to cover the most number of nodes.

Multi-Dimensional Contract Design
We utilize the contract theory to design node coverage-reward contract pairs that correspond to different UAV types in the market (Fig. 2b). A contract is feasible if it fulfills two conditions:

Individual rationality (IR): Each UAV type achieves non-negative utility if it chooses the contract item designed for its type.

Incentive compatibility (IC): Each UAV type achieves maximum utility if it chooses the contract item designed for its type.

In particular, the IR constraint guarantees participation of the UAVs, whereas the IC constraint ensures self-revelation, that is, the UAVs have no incentive to misreport their types amid information asymmetry.

In conventional contract theory studies, it is usually assumed that the worker type is one-di-mensional. In the case of UAVs, there are multiple dimensions of variations in types to be considered. To solve this challenge, we first sort the UAV types according to an auxiliary, one-dimensional variable to collectively reflect the marginal cost of node coverage. Then, we derive the necessary conditions for the contract feasibility as follows:

For the optimal contract, the node coverage is higher if and only if the corresponding rewards are higher.

The UAV with the lower marginal cost of node coverage will cover a greater proportion of the worker nodes.

For the first condition, the UAVs should only cover a greater proportion of nodes if and only if it can receive a higher reward. The second condition is the monotonic condition of the contract, which is in line with the IC constraints of the contract. In particular, a UAV with lower marginal cost of node coverage will not choose the contract bundle designed for high cost UAVs even though the bundle involves a lower proportion of nodes to be covered, given that it is able to derive higher rewards if it chooses the contract designed for its type.

However, the IC and IR constraints involved are still numerous and non-convex in nature. As such, procedures [6] to relax the constraints have to be implemented to derive the set of sufficient conditions. With that, we are able to solve for the optimal contract pairs.

UAV-Subregion Assignment
With the optimal contract bundles derived, the model owner has the knowledge of the hidden UAV types. For each subregion, the UAV declares the proportion of the nodes it is able to cover based on the contract bundle it selected. Besides contract rewards for covering the proportion of nodes, the UAVs are also granted an additional fixed reward for traveling to the node, which is separate from the contractual reward since it does not vary with node coverage. Note that there may be more than one UAV which prefers to serve a subregion which is situated closer to the UAVs' bases. Likewise, there may be more than one subregion which prefers a UAV that can cover a greater proportion of nodes.

As such, the Gale-Shapley (GS) matching algorithm is applied to assign the UAV to each subregion based on preferences. Before matching, we first derive the list of preferences for each subregion (decided by the model owner) and the UAV. The matching procedure is as follows.

Initialization
The model owner announces the contract bundles to the UAVs. Then, the UAVs pick the contract bundles that best reflect their types. A preference list is constructed for both the UAVs and subregions, in which the UAVs rank the subregions and vice versa. Then, a list of unmatched subregions is initialized.

Iterative Matching
In each iteration, a subregion that is still currently unmatched proposes to its most preferred UAV.

If the UAV has not already been assigned to a subregion, the proposal is accepted. If the UAV has already been assigned to a subregion, the prevailing subregion and the new proposal is compared. There exist two separate scenarios for consideration:

If the prevailing subregion is preferred, the new proposal is rejected. Then, the UAV is removed from the preference list of the proposing subregion.

If the proposing subregion is preferred, the prevailing subregion is rejected and added into the pool of unmatched subregion. Furthermore, the UAV is removed from the preference list of the newly rejected subregion.

Note that the removal of rejected UAVs from the preference lists of subregions ensures that no subregion proposes to the same UAV twice. The GS algorithm has been proven to achieve stability and optimality in matching outcomes [12].

Performance Evaluation
Following the empirical findings in [14], we use the logarithmic function to model the relationship between number of workers participating in FL training, probability of device dropouts, and model owner profit derived from the model accuracy. In particular, we consider a range between 500 and 1000 workers each assumed to own the same data quantities, and a dropout rate of 0 percent to 50 percent. Figure 3 shows that as the number of workers increases and dropout rates fall, the model owner profit increases. The reason is that there is an increase in training samples available, which contributes to an improvement in model accuracy. As such, the UAV-assisted FL can increase the model owner profit since it is able to reach out to more workers without a reliable network connection. In addition, the network and relay support that the UAV provides can reduce the device dropout probability.

Figure 3. - Relationship between model owner profit, number of workers, and dropout rate.
Figure 3.
Relationship between model owner profit, number of workers, and dropout rate.

Show All

Besides, the UAV assisted FL aids in communication latency reduction. As an illustration, we consider five UAV types with the descending order of transmission power, bandwidth, and channel gain, that is, type 1 UAV has the most favorable conditions for transmission to the model owner. An IoT device with a fixed set of values of transmission power, bandwidth, and channel gain is also considered for comparison. The simulations are then conducted with reference from commonly used parameters. In Fig. 4, the communication time required by the UAVs and IoT device to transmit a 100MB model update to the model owner is plotted. Even without considering dropout probability, it is clear that the UAV transmission is much faster than that of the IoT device.

To illustrate the optimality of our contract design, we consider the case of six UAVs and six subregions. The UAVs are arranged based on the marginal cost of node coverage in ascending order, with type 1 UAV, hereinafter “type 1,” incurring the lowest marginal cost per proportion of nodes covered. Moreover, the UAV bases and subregions are situated at different coordinates.

In Fig. 5, each UAV type is assumed to take on the contract items designed for each of the six types, that is, marginal cost of node coverage. Then, the utility of the UAV is computed. We observe that type 6 achieves non-negative utility when it chooses the contract item designed for its type, that is, type 6 contract. In contrast, if type 6 chooses contract items designed for other types, it achieves negative utility. This validates that our contract satisfies the IC constraints. Moreover, the satisfaction of the IR constraint is also validated, given that all UAVs achieve non-negative utilities when they choose the contract designed for their types.

After each UAV type is known to the model owner, the UAV has to be matched to the subregion. For ease of exposition, we assume that each subregion has the same number of worker nodes and data quantity. In Fig. 6, we show the coordinates of the UAVs and subregions. The subregions are denoted n whereas the UAVs are denoted j. The UAVs naturally prefer the subregions that are closer to their bases due to greater gains from the fixed rewards portion. For example, type 1 prefers subregion 6 to subregion 1. Similarly, type 2 prefers subregion 6 to subregion 1. Given this conflict in preferences, we adopt the GS algorithm discussed earlier for the UAV-subre-gion assignment.

Figure 4. - Wireless transmission latency for UAV-as-sisted FL vs. non UAV-assisted.
Figure 4.
Wireless transmission latency for UAV-as-sisted FL vs. non UAV-assisted.

Show All

Figure 5. - Utility for each UAV type vs. contract items.
Figure 5.
Utility for each UAV type vs. contract items.

Show All

The match between the UAV and subregions is derived and represented by the dotted lines in Fig. 6, for example, subregion 6 is matched to type 1. Though type 2 also prefers subregion 6, it is unable to be matched to the subregion given that type 1 is higher up on the list of preferences of subregion 6. As such, type 2 is matched to the second closest subregion 1. Similarly, type 6 is matched to one of its least favored preferences, that is, subregion 4, given that the other subregions have been matched to the more favored UAVs.

Figure 6. - UAV-subregion assignment.
Figure 6.
UAV-subregion assignment.

Show All

The illustration in this section validates the convergence and stability of the proposed matching algorithm. Together with the IC constraints of the contract, we can ensure that the UAVs are efficiently matched to the subregion based on the truthful reporting of their types.

Conclusion
In this article, we discuss the issues of communication efficiency in FL and present potential solutions. The UAV-assisted communication efficient FL is then proposed. To reward the DaaS providers, we propose the multi-dimensional contract matching incentive scheme. The simulation results validate the communication efficiency of the UAV-assisted FL, and the incentive compatibility of our contract incentive design.

For future work, we aim to incorporate the mobility of workers into the system model where workers may move from one subregion to the next, thus leading to dynamic variations of data quantity, communication, and computation workloads in the subregion. Moreover, we aim to study the wireless charging techniques with energy harvesting [15] for UAVs, as well as scheduling for the efficient FL in the sky.