Ubiquitous intelligence has been widely recognized as a critical vision of the future sixth generation (6G) networks, which implies intelligence over the whole network from the core to the edge, including end devices. Nevertheless, fulfilling this vision, particularly the intelligence at the edge, is extremely challenging due to the limited resources of edge devices as well as the ubiquitous coverage envisioned by 6G. To empower edge intelligence, in this article, we propose a framework called air-ground integrated federated learning (AGIFL), which organically integrates air-ground integrated networks and federated learning (FL). In AGIFL, leveraging the flexible on-demand 3D deployment of aerial nodes such as unmanned aerial vehicles (UAVs), all the nodes can collaboratively train an effective learning model by FL. We also conduct a case study to evaluate the effect of two different deployment schemes of UAVs on learning and network performance. Last but not least, we highlight several technical challenges and future research directions in AGIFL.

Introduction
Although fifth generation (5G) networks are being deployed and were commercially available in 2020, it is predicted that 5G networks may still not be able to meet future rapidly growing traffic demands. Accordingly, beyond 5G (B5G) networks, or sixth generation (6G), have already received great attention from both academia and industry around the world. It is envisioned that an essential difference between 6G networks and previous generation networks lies in the revolution of ubiquitous intelligence realization, to enable colorful artificial intelligence (AI) services from the network core to the network edge, including end devices [1]. Nevertheless, realizing such ubiquitous intelligence of 6G is extremely challenging.

Recently, edge intelligence (EI), where intelligence is pushed to the network edge by running AI algorithms on edge devices, has emerged as a promising key enabler for 6G to fulfill the vision of ubiquitous intelligence [2]. EI also caters to the trend of most big data originating from the center cloud moving to the network edge, with the proliferation of massive Internet of Things (IoT) devices combined with various mobile applications. However, EI is still in its infancy, as it is indeed hard to implement distributed learning based on limited datasets across a huge number of heterogenous resource-constrained devices, especially in the context of ubiquitous coverage by integrating air networks, space networks, and underwater networks into 6G besides the conventional terrestrial networks.

In this work, motivated by the recent advance of an emerging distributed machine learning (ML) methodology, federated learning (FL) [3], we propose a novel framework of air-ground integrated federated learning (AGIFL) to boost the urgently needed EI in 6G. FL is a distributed learning architecture that enables multiple resource-constrained end devices to collaboratively train an effective learning model in a federated manner. Our proposed AGIFL is a marriage of FL and air-ground integrated networks (AGINs), where AGINs flexibly deploying unmanned aerial vehicles (UAVs), balloons, and airships with flying base stations (BSs) are a critical part of 6G to support near-in-stant and seamless super-connectivity.

There are only a few studies that investigate how to utilize FL to boost the intelligence of UAV networks in the existing literature. Zeng et al. [4] propose a novel framework to enable FL within a swarm of UAVs, which is the first work considering how to implement FL for the UAV swarm. Shiri et al. [5] study the online path control problem of massive UAVs by FL and mean field game (MFG) theory, where each UAV periodically exchanges the Hamilton-Jacobi-Bellman (HJB) neural network (NN) and Fokker-Planck-Kolmog-orov (FPK) NN model parameters in MFG with other UAVs in a federated manner. Lim et al. [6] propose an FL-based sensing and collaborative learning scheme for UAVs, where UAVs collect data and participate in collaborative model training for Internet of Vehicles (IoV) applications. Brik et al. [7] discuss several potential applications of federated deep learning (FDL) in UAV-enabled wireless networks, and highlight the key challenges, open issues, and promising future research topics therein. Nevertheless, they mainly consider how to empower aerial intelligence, where the FL model training is restricted to the aerial part. In contrast, we focus on how to bring EI into the whole AGIN, by proposing a comprehensive AGIFL framework where the FL model training exists widely in AGINs, and the aerial-to-aerial FL in [4]â€“[5][6][7] can actually be viewed as a special case of the proposed AGIFL.

FL and its Potential for 6G Networks
In this section, we first provide an overview of FL through an example of FDL, and then discuss its potential for future 6G networks.

Overview of FL
FL is an emerging distributed architecture that enables multiple end devices to collaboratively train a learning model in a federated way. The main advantage of FL is that it can utilize limited on-device processing power and private local training data to distributively perform model training, without allowing the data to leave its owner. FL was originally introduced by Google [3], which aimed to train a clustering or classification model with training data such as images, videos, or texts distributed over a large number of end devices, while reducing network overhead and alleviating privacy concerns. Although the initial FL refers to the FDL framework, it can actually be used to train an FL model for many other advanced ML algorithms, such as federated deep reinforcement learning.

Next, we introduce the basic idea of FL through briefly describing the celebrated FedAvg scheme [3]. As illustrated in Fig. 1, there are generally two main entities in FL: the parameter server and multiple training participants who are data owners. With the help of the parameter server, FedAvg enables these participants to collaboratively train a shared learning model while keeping all the local training data at each participant. First, the parameter server distributes the global model to all participants (an initial global model is generated by the parameter server at the very beginning). Second, based on the latest received global model, each participant employs its own training data to update a local model. Third, each participant uploads the updated local model parameters (i.e., model weights) only to the parameter server. Last, the parameter server will aggregate all received model weights by the weighted average method to update the global model. If the converge condition is satisfied, the FL training terminates; otherwise, the above iteration continues. Note that the traditional ML approaches employ the entire training dataset consisting of the data at each user/participant to train a global learning model in a centralized manner.

Figure 1. - An illustration of FedAvg [3].
Figure 1.
An illustration of FedAvg [3].

Show All

Potential of FL for 6G Networks
Federated learning has the potential to realize the ubiquitous intelligence envisioned by 6G networks while preserving user privacy. Specifically, it can empower EI even if the number of participants is massive and the collected data of different users is heterogeneous, which are supposed to be very common in 6G networks. Recent experimental results demonstrate that FL can converge to the optimum point even when the number of participants is much larger than the average number of training samples in the dataset of each participant [8]. Both experimental and theoretical studies [8], [9] validate that FL supports model training among multiple users with non-independent identically distributed (non-i.i.d.) training datasets, whose convergence can be guaranteed in such a non-i.i.d. case. Moreover, since the information shared by each participant is about the learning model parameters rather than the original local data, the privacy of participants could be well protected. Nevertheless, the model update may also leak partial information of participants, and the security of FL could be further improved by exploiting more advanced security and encryption measures including differential privacy and secure aggregation.

Air-Ground Integrated Federated Learning: Motivation, Overview, Vision, and Novelty
In this section, we propose the framework of AGIFL, which features FL as a key enabler to empower AGINs' intelligence. In the following, we first explain its motivation, then provide an overview of the AGIFL framework, and last present the vision.

Table 1. A comparison of classical FL, general wireless FL, and AGIFL.
Table 1.- A comparison of classical FL, general wireless FL, and AGIFL.
Motivation
Recalling the potential of FL for 6G networks as discussed above, the AGIFL framework is motivated by the following factors. On one hand, as a critical part of the core potential architecture of future 6G networks, AGINs are also expected to have ubiquitous intelligence. More critically, it is envisioned that the required intelligence could be obtained locally at such edge networks for fast response and better data privacy protection (i.e., EI). On the other hand, as mentioned before, FL can enable multiple users with limited computation power and heterogeneous training datasets to collaboratively train an accurate learning model without allowing the data to leave each user. Also, the FL architecture is highly flexible in the sense that it can take many forms as desired. Therefore, FL could perfectly solve the ubiquitous EI urgently needed by AGINs.

Overview
In general, the AGIFL framework includes different forms of FL between air and terrestrial networks, where the parameter server could be an aerial node like a UAV or terrestrial BS according to different scenarios. First, exploiting the wide coverage and maneuverability of UAVs, when some terrestrial nodes such as mobile users need to collaboratively obtain a global learning model, a UAV can be deployed on demand and act as the parameter server for these users. Second, a swarm of UAVs with collected local data as flying users may also exploit ML to execute complex tasks, where a terrestrial BS can be the parameter server to enable the FL among them. There are also other forms of FL in the proposed AGIFL framework, which are introduced in detail later.

Vision
We envision that the AGIFL framework can efficiently address the challenge of EI generation in AGINs. Specifically, based on the AGIFL framework, the edge users in AGINs (e.g., mobile users, IoT devices, and UAVs) can support various on-device intelligent applications, independent of centralized data processing. Thus, the anticipated giant volume of data generated by billions of IoT devices at the network edge could be processed efficiently in a distributed way. In addition, we believe that the privacy and security of the data distributed at different users can be protected in the AGIFL framework, which relieves the increasing concern about privacy issues.

Novelty
As shown in Table 1, our proposed AGIFL differs from classical FL and general wireless FL, because it expands both the network dimension and application scenario, and considers more key design factors. First, AGIFL could boost the intelligence of AGINs in three dimensions, while both classical FL [3] and general wireless FL [10], [11] suit the terrestrial networks in two dimensions only. Second, compared to them, AGIFL should consider the joint training configuration and wireless setting under the flexible but complex air-ground network deployment. For example, the dynamically configurable location of aerial nodes could affect the energy consumption of both aerial and terrestrial training nodes, resulting in the achieved learning performance, since there may be a strict energy budget of these nodes, especially flying aerial nodes. To summarize, AGIFL is a new learning framework for realizing ubiquitous intelligence within AGINs, which brings a lot of research opportunities.

Different Forms of AGIFL
We now introduce all the forms of AGIFL one by one. The criterion for dividing the forms is set up by who the parameter server and training participants are, which is actually due to different intelligence needs. Note that we omit ground-to-ground (G2G) FL in this work, since it is identical to traditional FL.

A2A Federated Learning
First, we introduce air-to-air (A2A) FL, where the training process happens within the aerial networks only. One typical example is the FL framework proposed in [4], which enables FL within a swarm of wirelessly connected UAVs. We generalize that framework as A2A FL in AGIFL, whose application scenario is shown in Fig. 2a. In A2A FL, one aerial node such as a leading UAV or unmanned airship plays the role of the parameter server, while several aerial nodes act as the training participants. Example applications of A2A FL include various ML tasks' execution in the sky, for example, coordinated trajectory planning, cooperative target recognition, surveillance, monitoring for both military and civil use with the help of a swarm of UAVs and unmanned airships, and so on.

Figure 2. - Different forms of federated learning in AGIFL: a) A2A federated learning; b) G2A federated learning; c) A2G federated learning; d) Mixed federated learning.
Figure 2.
Different forms of federated learning in AGIFL: a) A2A federated learning; b) G2A federated learning; c) A2G federated learning; d) Mixed federated learning.

Show All

G2A Federated Learning
Second, unlike A2A FL solely within aerial networks, we envision that the aerial platform could play a critical role in boosting ubiquitous edge intelligence for terrestrial networks, which is called ground-to-air (G2A) FL in this work. To be specific, a UAV can be employed as the parameter server to meet the need of collaborative learning model training of multiple terrestrial nodes distributed over a large area, as shown in Fig. 2b. One fascinating point of G2A FL is that, combined with wide coverage, the higher flexibility of aerial nodes' movement can be effectively utilized to enable the collaborative training of terrestrial networks on demand, without any ground infrastructure support. The G2A FL is very suitable for the artificial intelligence and IoT (AIoT), where UAVs can be deployed on demand to support the learning model training of a massive number of IoT nodes. It is worth noting that this kind of FL has seldom been discussed in existing works.

A2G Federated Learning
Third, different from the G2A FL, the EI of aerial networks can also be boosted with the help of static or mobile terrestrial nodes, that is, air-to-ground (A2G) FL. Specifically, as shown in Fig. 2c, multiple aerial nodes with corresponding collected data train an ML model in a federated way when a terrestrial node such as ground BS is employed as the parameter server. For example, for the traffic prediction over a target region in an intelligent transport system (ITS), several UAVs covering different sub-regions can be employed to first collect traffic flow from roadside units (RSUs) or capture real-time traffic data over highways, and then return to the corresponding UAV bases for collaborative model training under the guidance of a terrestrial model owner as the parameter server [6]. Compared to A2A FL, A2G FL might enable more powerful intelligence for aerial networks, since UAVs with limited energy budget need not be the parameter server besides the training participants, and the A2G communication link may be better than the A2A link. We believe that in future 6G networks, EI could be obtained in such a mixed federated way.

Mixed Federated Learning
Last, we also anticipate that the AGIFL can work in a highly flexible manner in AGINs, known as mixed FL; that is, both aerial and terrestrial nodes could be the training participants and parameter server as required. As Fig. 2d shows, a number of terrestrial devices and UAVs, both with private collected raw data, aim to train an FL model, where a UAV covering those nodes acts as the aggregated parameter server. It is worth noting that a terrestrial node such as a ground BS can also be the parameter server, and a UAV can be the model parameter forwarding node, by exploiting its wide coverage as well as flexible deployment.

Technical Challenges
The features of AGINs including 3D mobility, frequent inevitable air-ground interactions, and relatively constrained resources such as communication, computation, and energy, together with unique learning requirements, result in difficulties in learning-oriented network design and optimization. Note that the aforementioned features distinguish the proposed AGIFL from both classical FL and general wireless FL, since those features can affect the training performance of FL in terms of training latency and energy consumption, or even training accuracy considering the limited energy budget of aerial/terrestrial nodes. In the following, we pose three main technical challenges in detail in AGIFL.

On-Demand Network Deployment for AGIFL
The aerial layer in AGINs is dynamically configurable by nature, that is, aerial nodes such as UAVs and unmanned airships are generally deployed on demand. Thus, it is inevitable to optimize the deployment of the aerial nodes to cater to the FL model training, for example, how to determine the optimal location of the aerial node as the parameter server in the G2A and mixed FL. However, it is challenging to optimally deploy the aerial nodes in AGIFL in the following aspects.

Learning-Oriented Deployment
Different from maximizing the quality of service/experience (QoS/QoE) in traditional AGINs, maximizing the learning performance such as training accuracy and minimizing training latency is the main optimization objective in AGIFL, which obviously alters the optimal deployment decision of the aerial nodes to achieve that goal. It is also different from the deployment of traditional terrestrial edge computing servers [12].

Long-Term Plan of Deployment
Since the model training in FL always lasts for multiple training rounds, the deployment decision of the aerial nodes should account for the long-term training profit rather than the short-term profit within one single round, which is hard to optimize due to the complexity of multi-stage training.

On-Demand Movement Trajectory
In some dynamic scenarios, for example, when the training participants in G2A FL are smart vehicles, the location of the aerial node as the parameter server should not be static; thus, its movement trajectory should be determined, which is extremely challenging. Specifically, following the energy consumption model in [13], the consumed energy of each mobile participant in each training round is affected by the location of the parameter server UAV, because the transmission rate of the UAV-ground wireless channel is also affected by the distance between the UAV and each participant. Similarly, the latency of G2A FL per round might be different due to that varying transmission rate, which needs further investigation.

Learning-Oriented Resource Allocation and Training Configuration
In AGIFL, the current AGIN is built up for boosting the learning performance of the model training. This calls for the learning-oriented joint resource allocation and training configuration, which differs from both the design of AGINs [14] and FL optimization for general wireless networks [10], [11]. Specifically, the optimization of the current AGINs is learning-oriented, while that of general AGINs is QoS/QoE-oriented. In addition, although there have been several recent studies about how to optimize the performance of FL in wireless networks [10], [11], they do not consider the on-demand deployment of aerial nodes and apply FL within terrestrial networks only.

There are two main difficulties in solving the above problem. First, the problem involves multiple variables to be jointly optimized: the location of the aerial node, the allocation of different resources in terms of communication and computation, and the decision of training parameters such as number of training rounds, number of chosen participants per round, number of the local updates, and mini-batch size. It makes the above problem a natural mixed-integral problem (MIP) and is hard to solve in general. Second, as it needs multiple air-ground interactions over the inherent unreliable wireless channel, designing robust training strategies to guarantee the overall learning performance against the unreliable data transmission in AGIFL is hard. Specifically, the unreliable data transmission may lead to the loss of some updated local or global model parameter in any training round, which obviously slows down the training process. Even worse, the loss of the model update is uncertain due to the uncertain wireless channel loss, thereby increasing the difficulty of designing robust training strategies.

Management of Control and Data in AGIFL
Note that there are many critical decisions to be made in AGIFL, for example, about the aforementioned on-demand network deployment, resource allocation and training configuration, and training strategies. Thus, an interesting but challenging question is who is in charge of those decisions in AGIFL? Furthermore, to make correct decisions, it needs to collect enough data about the network environment information, so how is the data collected and processed? Some fixed BSs with powerful communication and computation abilities could be a good candidate, which may incur additional overhead including extra communications between aerial/terrestrial nodes and those BSs. In addition, to enable cooperation among multiple UAVs in AGIFL, it is inevitable to share some information such as their locations, remaining battery power, movement trajectories, and other parameters whose update frequency should be intelligently controlled to maintain a tradeoff between FL performance and incurred extra overhead. Another issue about data in AGIFL is how both aerial and terrestrial nodes can obtain enough labeled training datasets for federated training, especially for the UAVs. We believe that initially, those nodes could individually obtain preliminary data and label the data based on local or partial observation of some well-known phenomena. Also, they could obtain more labeled data with the help of terrestrial users. In general, the process of obtaining enough appropriate training datasets is also worth further study.

Case Study: G2A Federated Learning
We conduct a case study to evaluate the performance of the proposed AGIFL framework by numerical simulations. To be specific, we focus on G2A FL where a UAV is employed as the parameter server for the FL of multiple terrestrial nodes. We mainly evaluate the effect of different UAVs' hovering location deployment schemes on the learning performance and UAVs' energy consumption.

Settings
We consider a UAV-assisted network where a rotary-wing UAV with the ability to hover over a set U of U=100 terrestrial users, each with a local training dataset. Those users are randomly distributed in a 100Ã—100 m2 area. Employing the UAV as the parameter server, these users collaboratively train a learning model for inference, where the model training requires interactions between the UAV and users within multiple rounds. In each round, the UAV aggregates a global model and distributes it to the users, and each user then updates its local model by its own dataset and sends it to the UAV. Following [3], we choose only a random fraction Î¸=0.1 of users for model update at the beginning of each round. The learning rate is fixed at 0.002, and the number of local epochs is set as 5 with mini-batch size 10. In this simulation, for the training task, we consider the image classification using CNN on the classical MNIST dataset [3]. The whole training dataset is partitioned in those user equipments (UEs), each of which receives the same examples (i.e., i.i.d. setting). As for the FL algorithm, we use the celebrated FedAvg algorithm [3]. In the future, we would also like to investigate the effects of non-i.i.d. dataset setting and other FL algorithms such as FedProx in the proposed AGIFL framework.

For the UAV, we suppose its transmission power and propulsion power to be equal to 10 mW and 100 W, respectively [15]. The overall energy consumption of the UAV mainly consists of the hovering energy consumption (the product of propulsion power and hovering time), and the energy consumption for aggregated model broadcast (the product of transmission power and broadcast time). For the users, we assume the computation capacity of user uâˆˆU and number of CPU cycles to execute 1 bit of the sample data are chosen randomly from the interval [1.8 GHz, 2.0 GHz] and fixed at 10, respectively. As for the communication between user uâˆˆU and the UAV, the uplink data rate is given by
ru=Bulog2(1+Î±0puÏƒ2(H2+R2u),
View SourceRight-click on figure for MathML and additional features.where Bu is the spectrum bandwidth allocated to user u, pu is the data transmission power of user u, Î±0 is the channel power gain at the reference distance 1 m, H is the fixed flying height of the UAV, Ru is the horizontal distance between the UAV and user u, and Ïƒ2 is the noise power. Similar to [15], we set the values of the above parameters as follows: Bu=1/(Î¸U)B (B=1 MHz),pu=100 mW, Î±0=âˆ’50 dB, Ïƒ2=âˆ’90 dBn, and H=100 m. Similarly, the downlink data rate can be easily calculated, except that Bu and pu should be 1 MHz and 10 mW for the UAV, respectively.

Assume the coordinate of the uth user is known as [xu, yu], for uâˆˆU, and we need to determine the coordinate of the UAV [X, Y, H], where the flying height H is fixed at 100 m as previously mentioned. We consider two different deployment schemes of the UAV's hovering location as follows:

Min_SumDist finds a pair (Xâˆ—,Yâˆ—) such that the sum of the distances between the UAV and each user is minimized, that is,
du:=(Xâˆ’xu)2+(Yâˆ’yu)2+H2âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆ’âˆš.
View SourceRight-click on figure for MathML and additional features.

Random randomly chooses the hovering location of the UAV within the current area.

Note that in the former scheme, the optimization problem is convex, which thus can be solved easily by existing convex optimization techniques. In the simulation, all results are averaged over 20 repeated simulation instances.

Result Analysis
Figures 3â€“5 present the performance comparison of the two deployment schemes in terms of the UAV's energy consumption, testing accuracy, and overall training latency, respectively, with the variation of the number of training rounds and UAV's energy budget. First, according to Fig. 3, the UAV's overall energy consumption under the Min_SumDist scheme is always less than that under the Random scheme, whose gap increases with the number of training rounds. This implies that the hovering location of the UAV should be carefully optimized, because the UAV usually has a strict energy budget in practice. Second, as shown in Fig. 4, when the UAV's energy budget is increased, the maximum testing accuracy is also higher, because the training can be run for more rounds with the increased energy budget. When the UAV's energy budget is more than 340 J, the testing accuracies achieved by both schemes become very close, since when there is enough energy, it approaches the maximum accuracy by the current dataset and training parameters. Furthermore, we find that the Min_SumDist scheme achieves higher accuracy than the Random scheme because the former consumes less energy than the latter with the same number of training rounds. Third, similar to Fig. 3, Fig. 5 shows that the overall training latency of both deployment schemes almost increases linearly with the number of training rounds due to the identical training and communication strategies at each round, while Min_SumDist always achieves smaller latency than Random. To summarize, the deployment of the UAV as well as its inborn energy constraint has a great impact on the performance of the AGIFL.

Figure 3. - Energy consumption vs. training rounds.
Figure 3.
Energy consumption vs. training rounds.

Show All

Figure 4. - Testing accuracy vs. UAV's energy budget.
Figure 4.
Testing accuracy vs. UAV's energy budget.

Show All

Figure 5. - Training latency vs. training rounds.
Figure 5.
Training latency vs. training rounds.

Show All

Future Research Directions
Despite its great potential, the study on AGIFL is still in its infancy, and many key research issues need to be addressed. In this section, we discuss several potential research directions for future study.

Joint Optimization of UAVs' Locations, Resource Allocation, and Training Parameters in AGIFL
Motivated by the challenges stated earlier, a critical but challenging research question is how to jointly optimize UAVs' locations, resource allocation, and training parameters to boost the learning performance. There are numerous studies about how to jointly optimize UAVs' locations/movement trajectories and resource allocation in existing works, whose solutions, however, cannot be applied to that problem, since it involves various additional training variables and is a brand new problem. Furthermore, the problem form as well as its related constraints is different in different forms of AGIFL, so there may not be a general solution framework.

Blockchain-Based Secure Model Parameters Exchange for AGIFL
Although FL enables multiple devices to collaboratively train a shared learning model without exchanging their private local data, there is still a potential risk of information leakage, as the model parameter exchange may also be used to derive some private information by malicious participants. Blockchain is a recently emerging distributed ledger technology where a network of participants reach agreements on shared data, independent of a central trusted authority. Intuitively, it is worth studying how to exploit blockchain in AGIFL for the data security.

Intelligent Collaboration Among Multiple Aerial Nodes for AGIFL
Multiple aerial nodes including UAVs and unmanned airships are usually needed for model training in AGIFL. For example, some aerial nodes may act as model update forwarders for some terrestrial participants in mixed FL. Thanks to the aggregation of model update by weighted averaging in FL, an aerial node as the model update forwarder could aggregate the received local updates in advance and then send the partial aggregated model update to the parameter server. Therefore, it is interesting to investigate how many aerial nodes are needed to cover a number of terrestrial participants and how to intelligently collaborate among them.

Decentralized AGIFL Without a Central Parameter Server
Current AGIFL employs the most widely used FL strategy, which relies on a central node as the aggregated parameter server. Robustness as well as scalability is thus a big issue; for example, the proposed AGIFL cannot work if the wireless links to the central parameter server fail, or the central parameter node such as a UAV is attacked or out of power. It is more attractive to develop a fully decentralized AGIFL framework without a central parameter server to adapt to the dynamic environment of AGINs; for example, each terrestrial node or UAV only exchanges local model parameters with its neighboring node or UAV for model aggregation. Decentralized AGIFL is more flexible and robust, but may introduce much overhead because of a large amount of model parameter exchange among the training participants.

Conclusion
In this article, we have proposed the AGIFL framework to empower the edge intelligence to realize the required ubiquitous intelligence for future 6G networks. Specifically, AGIFL utilizes FL to enable all nodes in AGINs to collaboratively train a learning model with the help of flexible controllable deployment of aerial nodes. We introduce the basic concept of FL and its potential, describe the overall framework as well as its different forms, discuss several main technical challenges, conduct a case study of AGIFL, and highlight some promising future research topics.