Abstract
Virtual walking in virtual environments (VEs) requires locomotion interfaces, especially when the available physical environment is smaller than the virtual space due to virtual reality facilities limitations; many navigation approaches have been proposed according to different input conditions, target selection and speed selection. With current technologies, the virtual locomotion speed for most VR systems relies primarily on rate-control devices (e.g., joystick). The user has to manage manual adaptation of the speed, based on the size of the VE and personal preferences. However, this method cannot provide optimal speeds for locomotion as the user tends to change the speed involuntarily due to non-desired issues including collisions or simulator sickness; in this case, the user may have to adjust the speed frequently and unsmoothly, worsening the situation. Therefore, we designed a motion protector that can be embedded into the locomotion system to provide optimal speed profiles. The optimization process aims at minimizing the total jerk when the user translates from an initial position to a target, which is a common rule of the human motion model. In addition to minimization, we put constraints on speed, acceleration and jerk so that they do not exceed specific thresholds. The speed protector is formulated mathematically and solved analytically in order to provide a smooth navigation experience with a minimum jerk of trajectory. The assessment of the speed protector was conducted in a user study measuring user experience with a simulator sickness questionnaire, event-related skin conductance responses (ER-SCR), and a NASA-TLX questionnaire, showing that the designed speed protector can provide more natural and comfortable user experience with appropriate acceleration and jerk as it avoids abrupt speed profiles.

Previous
Next 
Keywords
Virtual reality

Navigation

Virtual walking

Minimum jerk

User experience

1. Introduction
Locomotion is a fundamental task for a large number of domains using virtual reality (VR) applications. Before carrying out this primary task, users have to adapt their viewpoint in order to explore unknown virtual environments (VEs), e.g., search as well as maneuver objects (Kulik, 2009). Although many navigation interfaces were designed according to the needs in different VR applications, few works have addressed how motion states like speed and acceleration should be controlled and adjusted in order to ensure a consistent, pleasant and engaging experience. Therefore, studying the effects of speed profiles during locomotion on user experience is crucial for the community developing feasible and comfortable VR applications.

In physical environments, human locomotion is generally regarded as a “no-brainer” task: once individuals formulate the target, body muscles work collaboratively to perform the movements (LaViola Jr et al., 2017). However, locomotion in VEs generally gives rise to cybersickness because such movement relies on visual motion cues from computer-synthesized graphics while self-motion cues from vestibular and proprioceptive systems are neglected (Wienrich et al., 2018). Cybersickness poses a severe threat to the usability of VR applications (Stanney et al., 1998). Although there are still some debates on the underlying mechanism and symptoms associated with VR sickness, the widely accepted explanation is the sensory conflict theory (Oman, 1990). If inconsistent signals are detected, the central nervous system (CNS) - the brain - will be unable to balance and regulate chemoreceptors, baroreceptors, respiratory and smooth muscles. As the diagram in Fig. 1 shows, a single functionally integrated network receives and compares concurrent signals from many interoceptive, exteroceptive and proprioceptive modalities based on vestibular organs, vision and postural muscles. The theory has been refined into many versions but among them, the feed-forward mechanism in motion perception that for instance explains the driver’s immunity to motion sickness (Rolnick and Lubow, 1991) drew our attention. A driver in a car is less likely to suffer from motion sickness because the sensory information from vestibular organs, vision and postural muscles are more consistent with the physical movement. However, a passenger tends to get motion sick especially when he/she reads in a vehicle, because the static visual information is inconsistent with the vestibular information of movement. The feed-forward theory explains this observation in a different way: the driver can control and predict motion while the passenger cannot, leading to reduced sickness symptoms for the driver. Bos et al. (2008) further pointed out that cybersickness arises because the expected sensory feedback (i.e., anticipation) in the brain is inconsistent with the real sensed signal (i.e., perception); as the driver has all the information, he suffers form less motion sickness, likewise the passenger can benefit from sitting on the front seat to receive visual information to match more the perception of movement.

Fig. 1
Download : Download high-res image (174KB)
Download : Download full-size image
Fig. 1. Diagram of functionally integrated, interacting autonomic, visceral, and balance control loops to explain the sensory conflict theory (adapted from Oman (1998)).

Referring to the development of locomotion interfaces in a VR application, cognitive workload is another important factor to involve as the choice of locomotion technique can influence cognition in a virtual environment (Zanbaka et al., 2005). Reimer and Mehler (2011) reported a positive trend between an increasing speed and a rising cognitive workload. Strategies to control speed during virtual locomotion are of great significance regarding cognitive workload. Marsh et al. (2012) claimed that an unnatural locomotion is likely to worsen user’s task performance and result in high cognitive workload because it requires additional working memory to establish and support a mental model; the authors further proposed to develop a body-based locomotion technique which requires less cognitive resources since such locomotion is based on natural skills which have already been proceduralized, e.g., real walking in the physical environment. Based on these observations, in this work we will introduce the minimum-jerk model which has been used to obtain coordinated and natural human-like motion (Sidobre and Desormeaux, 2019), to improve navigation in a VE.

A natural locomotion technique should consider providing the best experience to its users. In product design, user experience is defined as “a person’s perceptions and responses that result from the use of anticipated use of a product, system or service” ISO 9241-210. It does not concentrate merely on the user’s responses during interaction (e.g., subjective measurements and action preferences) with a product but rather on the reactions (e.g., physiological reactions) that appear during the interaction. Since these responses and reactions are influenced by diverse factors such as user’s expectations, beliefs, preferences, perceptions, feelings and emotions, and attainments, designers are prompted to decide the importance of difference factors based on the type of product and planned application (Rebelo et al., 2012). As for virtual reality, many past works (Shaw, Rietschel, Hendershot, Pruziner, Miller, Hatfield, Gentili, 2018, Sheik-Nainar, Kaber, Hsiang, Pankok Jr, Zahabi, 2015, Stanney, Mourant, Kennedy, 1998, Takatalo, Kawai, Kaistinen, Nyman, Häkkinen, 2011) have investigated cybersickness and cognitive workload during dual-task or multi-task virtual locomotion in 3D VEs. Therefore, despite the different explanations of user experience provided in different domains (Rebelo et al., 2012),ISO 9241-210, we will refer user experience to both VR sickness and cognitive workload because they are explicitly associated with virtual locomotion.

Somrak et al. (2019) investigated user experience and simulator sickness with different head-mounted display devices (HMDs); results revealed that there exists a significant correlation between VR sickness discomfort levels and user experience. Currently, many locomotion interfaces have been developed with the intention of enhancing user comfort but cybersickness is still an inherent problem to be overcome in the VR field (Davis et al., 2014). Natural locomotion interfaces are favored as they intend to minimize the mismatch between proprioceptive information related to actions and sensory feedback arising from the VR system (Marsh et al., 2012). Considering the sensory conflict theory, the problem becomes: can we design a locomotion technique that can reduce VR sickness? In order to answer this question, we investigated how humans walk in the physical world and then tried to apply the rules to virtual locomotion.

The main purpose of this article is to investigate whether an optimized speed profile of the locomotion with proper acceleration and jerk can improve user experience. The idea is to design what we call a speed protector that prevents users from negative experience due to irregular speeds. The long term objective is to further extend this protector in a feedback navigation interface that can adjust the motion conditions according to the user’s physiological response. For instance, if the locomotion system detects that a user gets VR sick or experiences high cognitive workload, it can restrict irregular locomotion and optimize the speed accordingly, and not simply stop abruptly which is likely to induce posture imbalance due to inertia (Merienne, 2016). Our objective is a wide one. However, at this stage our research focuses on designing the speed protector and validating its performance with a user study.

1.1. Control of walking
Humans can perform locomotion in physical environments through multisensory feedbacks from visual, proprioceptive and vestibular systems, while in VR the only way to keep identical and consistent sensory feedbacks during virtual walking is to enable users to walk for real and map it to virtual environments. However, due to the limits of VR devices, VR displays and small available workspace of large immersive displays, users have to be constrained into a limited physical space, which means that it is impossible to directly map real walking to virtual walking, leading to unnatural sensory feedback. This issue has drawn much attention with many metaphors and apparatuses developed, e.g., the CyberWalk omnidirectional treadmill system that enables users to walk endlessly in any direction without leaving the confines of the limited physical space (Souman et al., 2008), or redirected walking techniques allowing real walking within constrained physical spaces by subtly manipulating users’ viewpoint (Razzaque, 2005).

It has been shown in neuroscience that humans carry out locomotion tasks in a stereotyped manner at both geometric and kinematic levels (Hicheur et al., 2007). Given the background, the stereotype indicates that, among infinite possible trajectories to connect position A to position B (both are oriented points), all pedestrians would follow similar paths while walking from A to B. It is necessary to introduce virtual locomotion conditions that can preserve such steering from physical walking, which will generate natural trajectories that conform to real ones as much as possible. Many previous studies indicate that the trajectories of hands and whole-body movements share prevalent strategies. For example, Papaxanthis et al. (2003) found that kinematic analogies are shared between vertical whole-body and arm locomotions in the sagittal plane, which implies that the central nervous system (CNS) uses common control mechanisms to perform arm and whole-body movements. Also, Harris and Wolpert (1998) presented a unifying theory showing that humans follow highly stereotyped trajectories where the motion profiles of both eyes as well as hands are smooth and symmetric during saccadic eye movements and goal-directed hand movements; the trajectory is generated from the CNS in a way to minimize a cost which is integrated along the movements, e.g., jerk (Flash, Hogan, 1985, Hogan, 1984) or torque (Uno et al., 1989), and also to minimize the variance of the final position of the eyes and hands.

Many applications in VEs provide the users with engaging oculomotor activities, potentially causing severe symptoms of cybersickness (Ebenholtz, 1992). When irregular virtual locomotion frequently stimulates the users’ visual system, they have to continuously respond to the stimuli by adapting their gaze, leading to symptoms like asthenopia. It was reported that cybersickness is lowered during gaze fixation, and users concentrating on a stationary cross in front of an optokinetic stimulus do not develop optokinetic nystagmus and suffer from less sickness severity (Webb and Griffin, 2003). Ebenholtz (1992) suggested that the combination of a specific kind of visual stimulus and undamaged vestibular system establishes a set of antecedent prerequisites to induce cybersickness. Riccio and Stoffregen (1991) also stated that uncontrolled eye movements interfere with spatial information gathering in a VE and can induce postural instability, which precedes cybersickness (Stoffregen and Smart, 1998). Accordingly, we propose here to develop a strategy that relies on the minimization of jerk to address cybersickness effects.

1.2. Contributions
We believe that the control of physical walking according to the body mechanism will make the difference to virtual locomotion especially in improving comfort in a VR experience. In addition, it enables us to answer some challenging questions, such as how to reduce cybersickness and cognitive workload efficiently and achieve a more comfortable experience, to study user behaviors during complex locomotion in immersive environments, and further to motivate the application of VR into various fields.

The contributions of this article include the following aspects:

•
Design of a speed protector based on a minimal-jerk model. We explain our choice for the minimal-jerk model rather than other models. We also present the algorithm that can be directly implemented as a speed protector during virtual locomotion. This will be presented in Section 3.

•
User test arranged in an orthogonal table which allows exhaustive parameter studies. As we consider several factors during the experiment, the orthogonal experiment design is a powerful tool to reduce the total number of experiments, making our experiment results more reliable with less effort. The results show that the magnitude of acceleration and jerk influence user experience. This will be addressed in Section 4.

2. Related work
Igarashi et al. (1998) implemented a path drawing technique for navigation in immersive 3D environments. This approach requires users to draw the trajectory as a predefined path with a free stroke, and in the meantime the path is projected onto the walkable surface to generate the final moving path. Then the viewpoint is moved automatically along the tangential direction of the path with an appropriate speed. A user study showed that path drawing is a preferred and more intuitive navigation method compared to other navigation approaches such as flying and driving. In this case, as users do not have to focus on maneuvers and path finding, they are more likely to perform other tasks easily during locomotion (Renner et al., 2010), for example, perceive and recognize densely-occluded models (Elmqvist and Tsigas, 2007).

Argelaguet and Andujar (2010) started considering speed adaptation on a predefined path and claimed that the path gives a sequence of viewpoints from part of the scene that will be shown to the user, while the speed is another paramount parameter which further determines when and how long the user can experience immersive environments; accordingly, the authors suggested to combine both components: the camera path and the corresponding speed profile. In addition, Argelaguet (2014) proposed an approach to adapt speed based on updating the current acceleration of the viewpoint to make sure that the optimal perceived speed is reached without abrupt speed changes, and with this rule, speed can be adjusted in accordance with the spatial relationship between the user, the environment as well as the optical flow. One significant contribution of these works is a decrease of jerkiness of the locomotion profile which establishes smoother camera motions, making motion profiles closer to real locomotion trajectories (Cirio et al., 2013).

Some works on goal-directed locomotion models exist based on the minimization of a cost function in order to generate optimized motion profiles along a trajectory. In the context of hand trajectory generation (Richardson and Flash, 2002), Pham et al. (2007) simulated and compared numerically the results for human walking trajectories with four different physical parameters, including velocity, acceleration, jerk and snap, by setting initial and final conditions for velocity and acceleration, as well as the global trajectory duration; qualitative and quantitative analyses suggest that the minimum jerk and the minimum snap models can provide predictions significantly to match actual trajectories at the geometric and kinematic levels. Mombaur et al. (2008) found that trajectories are not always nonholonomic, and it is possible to join holonomic and nonholonomic constraints to formulate an optimal control problem with a cost function to minimize. The main defect of these methods is that they have to generate the motion profile before locomotion and require the whole profile duration in advance, while such requirement is computationally demanding which excludes their application in dynamic environments where solvers have to find the optimal motion profile in real time.

3. Design of the speed protector
Finding through the aforementioned works that many studies are developing locomotion techniques by adding extra trajectories to follow or adapting speed to keep smooth locomotion, we proposed a new speed adaptation method considering that the rule of human walking and hand movement is usually a minimization problem. It represents a novel idea to treat locomotion in 3D VEs with a similar principle as human movements in physical environments. In this section, we explain how to design the speed protector and how to embed it into a locomotion system. We considered two types of protectors, a nonlinear one and a linear one.

3.1. Nonlinear speed protector
The nonlinear speed protector is derived from the minimum-jerk model where the speed profile is found as a high-order polynomial function. The problem is to find the speed  defined on  which minimizes the cost functional(1)
 

Subject to
 

The purpose is to find the solution of  such that it makes  minimal, which implies that the change  of  should be zero in any small variations of . Translating this into mathematical interpretation, we firstly define a family of functions of the following form,(3) where  is a family of functions including the potential solution, and  is an arbitrary function with 
 continuity to perturb  by small changes of magnitude . For  to meet the boundary conditions given in Equation2a and Equation 2b, the following conditions are prescribed to  
 

 to be minimal requires that(5)
 
 

Note(6)
 

Recall that 
 
 using integration by parts(7)

Recall that   using integration by parts again(8)

Since 
 
 it requires that(9)
which must be the case for an arbitrary function  meaning that, 
.

It is obvious that in order to ensure both null 4th derivative and satisfied constraints, the profile of  must be a third order polynomial function, which is also the reason why we defined the speed protector as nonlinear, i.e.,(10)

It is then required to determine the four parameters 
 
... 
. The first two parameters can be determined from the initial conditions. For  
 The last two parameters can be determined from the terminal conditions 
 

This can be solved for 
 and 
 expressed in matrix form(13) 
  
 
 

Once the 
 parameters are known and substituted into Eq. (10), the entire motion profile from the starting time 0 to the terminal time  can be determined.

3.2. Why minimizing jerk and not other temporal derivatives?
The third derivative of position with respect to time is called jerk. The fourth, fifth, and sixth derivative are called snap, crackle, and pop, respectively. The problem is to ensure that the minimum-jerk model can provide the best description of human motion profiles: why not for example other temporal derivatives?

To answer this question, Richardson and Flash (2002) considered how position  changes as a function of the derivative order  in the following expression:(14)
 
 

They found that as  increases, the solution to the functional  approaches to a step function.

Fig. 2 shows minimum jerk, snap, and crackle trajectories. Note how the first derivative (speed) of each trajectory becomes narrower and taller when jerk, snap and crackle appear in the minimized functional. Therefore, if snap is minimized, we get a movement with a higher peak speed than a trajectory that minimizes jerk. This implies that as  increases in Eq. (14), the solution yields a trajectory with a larger peak relative to average speed.

Fig. 2
Download : Download high-res image (513KB)
Download : Download full-size image
Fig. 2. Motion speed for each trajectory; the ratio of peak speed to average speed increases as  increases: motion with minimum jerk (), minimum snap (), minimum crackle () and minimum pop ().

If we call  the ratio of peak speed to average speed, then a minimum-acceleration trajectory, i.e.,  in Eq. (14), has a ratio of . For a minimum-jerk trajectory,  and ; for a minimum-snap trajectory,  and . Psychophysical experiments revealed that navigation movements have a ratio  that is about 1.75, and thus most resemble minimum-jerk trajectories (Flash and Hogan, 1985).

3.3. Linear speed protector
The linear speed protector is based on the motion sickness dose value (MSDV). The MSDV has been widely used as a measurement for motion sickness (Eriksson and Svensson, 2015) and VR sickness (Plouzeau, Chardonnet, Merienne, 2018, So, 1999): the larger the value, the higher the level of VR sickness. The MSDV is defined by(15)
 
 
where  is the acceleration,  is the total locomotion time. By integrating the square of acceleration during the whole locomotion time, the MSDV provides an absolute value to characterize the level of motion sickness or VR sickness.

Instead of using the MSDV as a measurement method, we can also obtain a speed profile that automatically meets the definition of the MSDV: we can get the analytical solution of Eq. (15) if we employ the variational method as done in the minimum-jerk model, which leads to the following final solution(16)
This suggests that the speed profile should be a linear function of  parameterized by 
 and 
 i.e.,(17)
In order to determine the unknown parameters 
 and 
 we only need two conditions from the following three options,
  where 
 is the maximal allowed acceleration. In either cases, the final locomotion speed profile will be only piecewise linear and just 
 continuous.

3.4. Locomotion constraints
Putting constraints on motion parameters is mandatory. Indeed, a high magnitude of acceleration and jerk generally leads to a lose of balance and worse experience within a short period of time; further users have to abandon the allotted task to do postural adjustment (Crossland and Rich, 1998). Therefore, it is necessary to set constraints on the levels of acceleration and jerk. Although such constraint values may vary among different studies and works, they normally fall within similar ranges. For example, for acceleration the threshold for discomfort lies around 
 ranging up to 
 (Kilinç and Baybura (2012)); the jerk threshold for discomfort lies around 
 ranging up to 
 (Förstberg (2000); Kilinç and Baybura (2012)). The ISO 2631-1 defines acceleration thresholds that are widely used regarding user comfort, as given in Table 1. Most of these studies on the magnitude are carried out for the railway and the automotive industries, but we consider that locomotion in general should have the same impact on users whatever the environment. In this work the motion constraints for our speed protector will be chosen from the above-mentioned settings.


Table 1. Acceleration limits and corresponding comfort levels.

Comfort levels	Acceleration limits (
)
Not uncomfortable	
A little uncomfortable	
Fairly uncomfortable	
Uncomfortable	
Very uncomfortable	
3.5. Algorithm implementation
Considering the whole problem given in Eq. (1), we firstly introduce the bisection method so that the constrained optimization problem can be solved in an iterative manner. In mathematics, the bisection method is the simplest method to find a root of any continuous functions (e.g., ) on an interval 
 with opposite signs on the boundary, hence 
. The procedure goes as follows: find the midpoint of 
 i.e., 
 
. If 
 and 
 have opposite signs, the interval 
 has the optimal solution and will be substituted for the next iteration. Likewise, if 
 and 
 have opposite signs, the interval 
 will be retained for the next iteration. Such process is repeated until the length  of the most recent interval 
 is less than the desired accuracy . Once the optimal time 
 is found, it computes the corresponding optimal state variables including speed 
 acceleration 
 and jerk 
. It is worth noting that the classical bisection method tends to compare the signs (e.g., +, -) of the solution on the boundary of a given interval. Here we rather use boolean values (e.g., true, false), which follows the same philosophy for optimization.

Fig. 3 presents an overview of the algorithm developed for the proposed speed protector. Algorithm 1 integrates both the nonlinear and the linear speed protectors, and is the main part of our implementation which shows a frame-based motion protector to be embedded in current devices for controlling virtual walking. Algorithms 2, 3 and 4 are complementary functions required for the calculation and serve for the nonlinear speed protector. The physical meaning of parameters including   
  
  
  are explained inside the algorithm tables. Here parameters with the subscript  mean values from the last frame. With all these parameters available, the system will firstly read the user’s inputs from the VR controller, and depending on the values, the optimization problem and the corresponding boundary conditions defined in Equations 1, 2a and 2b are formulated simultaneously by setting
 According to Equations 19a and 19b, speed and acceleration will be calculated based on information from the last frame, and the final speed is expected to reach the command speed from the user’s input with a smooth concatenation, as expressed in Equations 19c and 19d. Then, a smooth speed profile is computed accordingly. Subsequently, the optimal time 
 required to change the current speed to the target speed (the target is provided by the input from the user’s controller) is calculated via the bisection method. Then, the parameters in 10 are obtained to compute the theoretical speed and acceleration at the current frame, based on the last frame. Finally, the system compares the calculated theoretical speed with the target speed in order to avoid a sharp increase or decrease between two frames. As presented in line 15 to line 18 of 1, the system firstly checks if the user increases or decreases speed by comparing the input speed  and the last frame speed 
: if increasing, the real speed is the smaller one between the optimized one 
 and the input speed ; otherwise if decreasing, the real speed is the larger one between the optimized one 
 and the input speed . Therefore, when the speed protector is applied, the real locomotion speed is not always the same as the optimized profile from the protector.

Fig. 3
Download : Download high-res image (93KB)
Download : Download full-size image
Fig. 3. Schematic diagram showing the relationships between the implemented algorithms; the inputs 
 and 
 are from the last frame, and the outputs  and  are to be used for the current frame.

Algorithm 1
Download : Download high-res image (146KB)
Download : Download full-size image
Algorithm 1. Implementation of the speed protector in a real application considering user inputs.

Algorithm 2
Download : Download high-res image (146KB)
Download : Download full-size image
Algorithm 2. Bisection method to find a minimum jerk profile.

Algorithm 3
Download : Download high-res image (185KB)
Download : Download full-size image
Algorithm 3. Get the evolution of the state within a total time 
.

Algorithm 4
Download : Download high-res image (132KB)
Download : Download full-size image
Algorithm 4. Check if the results meet the required limits.

Algorithm 2 along with the supplementary Algorithm 3 and Algorithm 4 describes the pseudo-code of the bisection method used to compute the motion profile with minimum jerk and constraints. The motion profiles can be easily solved with Eqs. (10), (11a) and (13) if the constraints in Subsection 3.4 are excluded. However, these constraints should be considered to improve user comfort during locomotion. When the total time  is set to a small value, the peak value of speed, acceleration and jerk will exceed the constraints and miss comfort conditions; when  increases monotonously to a relatively large value, the peak values will become smaller correspondingly so that all the conditions will be fulfilled. In return, too much time will be taken to reach the desired states. A compromise must be found between the value of the total time and the required constraints, which is the reason why the bisection method is used here. As the peak value changes monotonously according to the total time  we can set a large initial search interval (e.g., ) to ensure the optimal time can be found with the bisection method.

Algorithm 3 can get the evolution of different motion states within a given terminal time  so that the algorithm is used in each iteration. In order to have a solution fulfilling the boundary conditions, the algorithm firstly tries to compute the polynomials parameterized with 
 
 
 and 
 in Equations 11a and 13. Then, an equally spaced time vector  is generated in ;   and  are calculated for each element in vector  (time step). In such element-wise calculation, the results are also in vector form which represents the corresponding motion states at each time step.

Algorithm 4 is a module to check whether the constraint conditions satisfy the given range. It returns a boolean value, either true meaning that the solution meets all the requirements. On the contrary, if one of the motion states (e.g., speed, acceleration and jerk) cannot be met, the module returns false implying that the current motion profiles are not acceptable.

The implementation of these algorithms was done in Eigen (Guennebaud et al., 2010) which is a C++ template library for linear algebra, and the code was wrapped to be used in Unity3D.

The implementation of the linear version is much simpler as no optimization is required. Line 22 to line 29 in Algorithm 1 presents the running process of the linear speed protector. The system has just to know 
 and the speed is changed accordingly depending on the variation of acceleration.

4. User validation study
We designed an experiment to validate whether user experience including cybersickness and cognitive workload could be improved with the proposed speed protector. The hypotheses were

[H1] When speed protectors (especially the nonlinear one) are activated, users are less prone to cybersickness and suffer from less cognitive workload.

[H2] Acceleration and jerk in the nonlinear speed protector are the factors that affect most cybersickness and cognitive workload.

Cybersickness was evaluated by the simulator sickness questionnaire (SSQ) (Kennedy et al., 1993) and event-related skin conductance responses (ER-SCR), while cognitive workload was measured through the NASA-TLX (Hart, 2006). The ER-SCR during immersion is the physiological information that contains the height of skin conductance signal peaks and the recovery time of an excitation; when VR users get frequent visual stimulation related to illusions of self-motion, the electrodermal activity (EDA) signal shows more peaks, that can be used to measure user experience (Tamura et al., 2018). The NASA-TLX is a subjective tool to measure the cognitive workload arising from various computer-human interface systems.

4.1. Platform design
In order to be comparable, user experiments were carried out in both a CAVE system designed by Antycip Simulation1 and an HTC Vive head-mounted display (HMD). The CAVE, controlled by six PCs via MPI, is composed of five walls equipped with Mirage 4k25 projectors for stereoscopic vision with a  pixel resolution at a maximal 120Hz performance, one ART tracking system2 to track users and interaction devices. An in-house software development interface called iiVR written in C++ was developed to connect the whole VR equipments such as the display system, navigation/interaction devices (e.g., a Flystick device) and infrared cameras. The HTC Vive has a refresh rate of 90Hz and a display resolution of  pixels.

4.2. Participants
Fifteen subjects (11 males and 4 females:  years, ) from the university were invited to voluntarily participate to the experiment. There was a brief introduction to give supplementary information about the whole test procedure and probable effects prior to each experiment. Individual differences such as illness, gender and experience in videos games and VR application can affect the susceptibility to cybersickness (Davis et al., 2014). In order to measure their health conditions and have a better insight of their experience in the usage of computer applications, especially VR games, we designed a pre-exposure questionnaire for all participants to fill before the experiment. According to this questionnaire, no subject reported extreme disorders or unusual visual, hearing as well as balancing capabilities, indicating that they could perform the experiment. A consent form was also signed by participants.

4.3. Orthogonal experimental design
The orthogonal experimental design is an efficient and fast way to study phenomena that can be affected by many potential factors. Conventional methods normally study the effect of these factors separately by extracting one factor as the variable and fixing the remaining factors. Although such separation allows to check the significance of the factors, they converge only to a local significance which means that the significance might fail to reproduce when a combination of these factors are operated (Su, 2013).

Considering many factors that would affect user experience, we investigated eight factors including the longitudinal speed modality, acceleration, jerk, the rotational speed modality, rotational acceleration, and rotational jerk. The speed modality referred to three different types: no speed protector (NP), nonlinear speed protector (non-LP), and linear speed protector (LP), through which we could verify the efficiency of the speed protector.

The VR platform and the scenario type were involved to reduce the effect of experiment repetition which can affect subjects’ reporting (Clément et al., 2007). Two platforms and three scenarios were introduced to extend the generality of the speed protector and more importantly to reduce learning effects during the experiment. Again, it is important to keep in mind that the objective of the experiment is to validate the effect of the speed protector and its related parameters, not that of the platform and the scenario type.

The remaining parameters related to locomotion dynamics were also examined to see the significance in terms of user satisfaction. With all these factors, we designed a 
 table, as shown in Table 2: for example, in order to conduct the 3rd experimental group, the user had to test with the HMD in a wide environment scenario, with both longitudinal and rotational speed protectors, a maximal acceleration of 
 a maximal jerk of 
 a maximal rotational acceleration of 
 and a maximal rotational jerk of 
. These parameters were determined through a trial and error procedure with magnitudes adapted from the literature (Förstberg, 2000, Kemeny, George, Mérienne, Colombet, 2017, Kilinç, Baybura, 2012).


Table 2. Orthogonal experimental design with multi-factors and mixed levels (NP: no speed protector, LP: linear speed protector, non-LP: nonlinear speed protector).

Experiment Group	Platform	Scenario	Speed modality	Acceleration, 
Jerk, 
Rotational Speed modality	Rotational Acceleration, 
Rotational Jerk, 
1	HMD	Low	NP	-	-	NP	-	-
2	HMD	Low	non-LP	1.6	2.0	non-LP	30.0	30.0
3	HMD	Low	LP	2.4	-	LP	45.0	-
4	HMD	Medium	NP	-	-	non-LP	45.0	30.0
5	HMD	Medium	non-LP	1.6	1.0	LP	15.0	-
6	HMD	Medium	LP	2.4	-	NP	-	-
7	HMD	High	NP	-	-	LP	30.0	-
8	HMD	High	non-LP	2.4	1.0	NP	-	-
9	HMD	High	LP	0.8	-	non-LP	15.0	45.0
10	CAVE	Low	NP	-	-	non-LP	30.0	45.0
11	CAVE	Low	non-LP	0.8	2.0	LP	45.0	-
12	CAVE	Low	LP	1.6	-	NP	-	-
13	CAVE	Medium	NP	-	-	NP	-	-
14	CAVE	Medium	non-LP	2.4	3.0	non-LP	15.0	15.0
15	CAVE	Medium	LP	0.8	-	LP	30.0	-
16	CAVE	High	NP	-	-	LP	15.0	-
17	CAVE	High	non-LP	0.8	3.0	NP	-	-
18	CAVE	High	LP	1.6	-	non-LP	45.0	15.0
4.3.1. Protocol
Three environments, consisting of a forest and a predefined route that users had to navigate through, were designed by controlling the density of trees and flowers in the forest from sparse to dense (low, medium, high), to reduce the accumulated familiarity of each environment. Two platforms (CAVE, HMD), three environments and other parameters were arranged in the orthogonal table as presented above. Participants had to pass a group of eighteen experiments in a random order and with one (minimum) to five (maximum) days between two sessions to avoid cumulative effects of cybersickness after each immersion in the VE.

The experimental procedure was designed as follows:

1.
A pre-exposure questionnaire was filled by each participant to check for any health issues. Since participants needed to know how to navigate using the Flystick or the HTC Vive, each of them was given a training period for about 2 minutes before being immersed in the VEs.

2.
Before being introduced in the CAVE/HMD and exposed to visual stimuli, each participant was requested to fill a pre-exposure SSQ to detect any prior sickness symptoms. The E4 Empatica wristband3 was used to get the EDA through two electrodes placed on the wrist at a  sample rate with a precision of .

3.
The participant started to navigate in the VE following a predefined checkpoint, during which he/she had to repeatedly accelerate, decelerate or make a turn in order to avoid obstacles on the path (note that frequent accelerations and decelerations aimed at provoking VR sickness more easily, and in this way, we were able to see the effects of the motion protector on user experience), as shown in Fig. 4. The EDA was recorded for the whole locomotion session in the VE.

Fig. 4
Download : Download high-res image (526KB)
Download : Download full-size image
Fig. 4. (a) Experiment inside a CAVE and (b) overview of the 3D virtual environment with the path to follow highlighted in yellow. (For interpretation of the references to colour in this figure legend, the reader is referred to the web version of this article.)

4.
When the participant reached the destination in the VE, he/she was removed from the CAVE/HMD system and was requested again to fill an SSQ and the NASA-TLX table according to the experience and impressions on the whole simulation without knowing the modality of the experiment. The final VR sickness score was evaluated by calculating the difference between the pre- and post-exposure scores in the VE and cognitive workload was analyzed through the NASA-TLX table.

5.
Previous steps were repeated for each experiment and participant.

Each session lasted around 5.5 minutes on average, depending on the participants. If a participant got too sick during the experiment, he/she was asked to stop the experiment. Otherwise, he/she was asked to complete the remaining part of the path. Participants were free to stop the simulation at any time if they did not feel well. They were told by the experimenter to stop once the task was completed.

5. Results
Three participants did not finish all groups of the experiment due to their availability. Therefore, slightly different sample sizes were obtained for the different evaluation approaches, simulator sickness questionnaire (249), EDA signal (248), NASA-TLX (249). Under the same evaluation approach, the data sample size was not uniformly and evenly scattered over the different factor levels. As the sample size was no more balanced among the different settings, we decided to use a mixed-effects model (also called “multilevel models” or “hierarchical models) which is an extension of the ANOVA approach but has more flexibility to handle unbalanced repeated measures (Galecki and Burzykowski, 2013). Mixed-effects models contain two kinds of variables, fixed effects that can be explained by the response variable and random effects that cannot be explained by the response variable. In order to avoid the effect of individual differences (recorded by the pre-exposure questionnaire) on the results as they could lead to potential variation, we set it as a random effect factor. The variables listed in Table 2 were set as fixed effect factors.

5.1. Significant factors
The significance level was set to 0.05. The number of ER-SCR of one EDA signal was computed via the neurokit2 (Makowski et al., 2020), and further statistical tests were performed in R (R Core Team, 2020) and related packages including the lme4, afex, lmerTest and effectsize. Normality of distribution and equality of variance were verified for all data.

5.1.1. Optimal speed modality
One mixed-effects model was conducted on the influence of five independent variables (platform, scenario, speed and rotational speed modality) on response variables including the total SSQ score, Nausea, Oculomotor, Disorientation (Table 3). Except the platform which contains only two levels (CAVE, HMD), all the other factors included three levels. The effect of the platform was found to be statistically significant concerning the total SSQ (
  
), Nausea (
  
), Oculomotor (
  
) and Disorientation (
  
), while the effect of the speed modality was reported to be statistically significant regarding the total SSQ (
  
), Nausea (
  
) and Oculomotor (
  
). The interaction between the platform and the speed modality was also highly significant for Disorientation (
  
) and marginally significant for the total SSQ (
  
) and Nausea (
  
). As reported by the Oculomotor score, the effect of the rotational speed modality (
  
) was also statistically significant. No further significance () was observed for the other main and interaction factors from the simulator sickness questionnaire.


Table 3. Effect of parameters on the simulator sickness questionnaire scores (**:  *:).

Sum Sq	NumDF	DenDF	F	p-value	
Sum Sq	NumDF	DenDF	F	p-value	
Total SSQ	Nausea
Platform	2032.02	1	235.84	25.60	0.00**	.10	1384.22	1	236.24	16.05	0.00**	0.06
Scenario	24.40	2	235.84	0.15	0.86	<.01	96.50	2	236.23	0.56	0.57	<.01
Speed Modality	692.55	2	235.41	4.36	0.01*	.04	755.25	2	235.71	4.38	0.01*	0.04
Rotational Speed Modality	256.26	2	235.38	1.61	0.20	.01	0.33	2	235.65	0.002	0.99	<.01
Platform*Scenario	16.54	2	235.87	0.10	0.90	<.01	8.42	2	236.28	0.05	0.95	<.01
Platform*Speed Modality	458.54	2	235.40	2.88	0.06	.02	444.41	2	236.68	2.57	0.08	0.02
Platform*Rot_Speed Modality	159.91	2	235.38	1.00	0.37	<.01	284.31	2	236.66	1.65	0.19	0.01
Oculomotor	Disorientation
Platform	803.66	1	236.23	10.92	0.00*	.04	3803.10	1	235.74	20.70	0.00**	0.08
Scenario	119.13	2	236.21	0.81	0.45	<.01	477.20	2	235.74	1.30	0.27	0.01
Speed Modality	475.03	2	235.63	3.23	0.04*	.03	589.00	2	235.24	1.60	0.20	0.01
Rotational Speed Modality	507.08	2	235.57	3.45	0.03*	.03	389.50	2	235.20	1.06	0.34	<.01
Platform*Scenario	104.56	2	236.27	0.71	0.49	<.01	608.20	2	235.77	1.65	0.19	0.01
Platform*Speed Modality	33.45	2	235.60	0.23	0.79	<.01	1730.90	2	235.23	4.71	0.00**	0.04
Platform*Rot_Speed Modality	16.54	2	235.58	0.11	0.89	<.01	887.30	2	235.21	2.41	0.09	0.02
Another mixed-effects model was conducted on the influence of five independent variables (platform, scenario, speed modality and rotational speed modality) on the number of ER-SCR (Table 4). The platform (
  
) and the speed modality (
  
) showed significant differences, while the scenario (
  
) and the interaction between the platform and the rotational speed modality (
  
) were marginally significant. There was no significance for the rotational speed modality (
  
) and other interaction terms.


Table 4. Effect of parameters on the number of ER-SCR (**:  *:).

Sum Sq	NumDF	DenDF	F	p-value	
Platform	185,610	1	233.63	44.65	0.00**	0.16
Scenario	22,136	2	234.43	2.66	0.07	0.02
Speed Modality	27,254	2	233.42	3.27	0.03*	0.03
Rotational Speed Modality	4458	2	233.24	0.54	0.58	<.01
Platform*Scenario	264	2	233.67	0.03	0.96	<.01
Platform*Speed Modality	4008	2	233.04	0.48	0.61	<.01
Platform*Rot_Speed Modality	22,939	2	233.21	2.76	0.06	0.02
The effect of the platform, the scenario, the speed modality and the rotational speed modality on the NASA-TLX score is given in Table 5. For simplicity, we only present the summarized p-values and effect size from the mixed-effects models. We can observe that none of the NASA-TLX sub-scales was significantly affected by the speed modality except the interaction between the platform and the speed modality (). Performance ( 
) and Effort ( 
) were however significantly influenced by the platform.


Table 5. Statistical summary of -values and effect size for the NASA-TLX sub-scale scores (MD: Mental Demand, PD: Physical demand, TD: Temporal demand, Pe: Performance, Ef: Effort, Fr: Frustration, **:  *:).

MD	PD	TD	Pe	Ef	Fr
p	
p	
p	
p	
p	
p	
Platform	0.30	<.01	0.49	<.01	0.96	<.01	0.00**	0.03	0.04*	0.02	0.87	<.01
Scenario	0.00**	0.07	0.11	0.02	0.17	0.02	0.95	<.01	0.00*	0.04	0.04	0.03
Speed Modality	0.31	<.01	0.91	<.01	0.21	0.01	0.31	<.01	0.31	<.01	0.17	0.01
Rotational Speed Modality	0.81	<.01	0.56	<.01	0.52	<.01	0.99	<.01	0.56	<.01	0.73	<.01
Platform*Scenario	0.79	<.01	0.47	<.01	0.00**	0.04	0.91	<.01	0.66	<.01	0.92	<.01
Platform*Speed Modality	0.87	<.01	0.02*	0.03	0.12	0.02	0.42	<.01	0.27	0.01	0.44	<.01
Platform*Rot_Speed Modality	0.93	<.01	0.59	<.01	0.34	<.01	0.58	<.01	0.85	<.01	0.93	<.01
Tukey HSD tests were further performed to review the differences among the speed modalities, given in Table 6. The corresponding sample size, mean, standard deviation and median of each situation were reported in Table 7. According to the total SSQ score, a significant difference was found between NP () and non-LP (), with  and 
 and also between NP and LP (), with  and 
. Both the Nausea and the Oculomotor scores reported significant differences between NP and non-LP, . The evaluation based on the number of ER-SCR indicated supplementary differences which were not detected by the simulator sickness questionnaire: significant reduction from NP () to LP (), with  and 
 and from LP to non-LP () were observed, with  and 
. We did not perform post-hoc tests on the NASA-TLX criteria as no statistical differences were reported.


Table 6. Post-hoc analysis for the speed modalities considering different measurements; Lower and Upper represent the boundaries of the 95% confidence interval (CI), (**:  *:).

Speed Modality	Speed Modality	Lower	Upper	p-value	
Total SSQ	NP	non-LP	1.26	6.81	0.005**	.03
NP.	LP	0.10	5.51	0.04*	.02
non-LP	LP	-4.00	1.54	0.38	<.01
Nausea	NP	non-LP	1.39	7.18	0.004**	0.03
NP	LP	-0.17	5.47	0.07	0.01
non-LP	LP	-4.53	1.25	0.26	<.01
Oculomotor	NP	non-LP	0.77	6.11	0.01*	0.03
NP	LP	-1.05	4.16	0.24	<.01
non-LP	LP	-4.55	0.78	0.16	<.01
Disorientation	NP	non-LP	-1.79	6.65	0.25	<.01
NP	LP	-0.43	7.81	0.08	0.01
non-LP	LP	-2.95	5.47	0.55	<.01
ER-SCR	NP	non-LP	-18.58	21.60	0.88	<.01
NP	LP	-41.39	-1.90	0.03*	0.02
non-LP	LP	-43.32	-2.98	0.02*	.02

Table 7. Descriptive statistics including the sample size (n), mean, standard deviation (SD) and median for the performance of each speed modality.

NP	non-LP	LP
n	Mean	SD	Median	n	Mean	SD	Median	n	Mean	SD	Median
SSQ	85	15.49	15.87	11.22	87	11.27	13.59	7.48	77	12.94	14.37	7.48
Nausea	85	12.46	15.44	9.54	87	8.05	12.29	0	77	9.76	12.34	9.54
Oculomotor	85	11.33	12.69	7.58	87	7.88	10.32	7.58	77	10.11	11.99	7.58
Disorientation	85	18.67	21.54	13.92	87	15.73	21.35	13.92	77	15.36	19.8	13.92
ER-SCR	85	306.25	110.36	331	86	305.44	90.47	323	77	331.74	86.88	354
As the analysis of the interaction effects in the 
 table between the two-three level factors was not allowed because of a rank deficiency (Frey, Su, 2013), we concentrated on the interaction between the platform and other related factors (Fig. 5). To reduce the total SSQ, the Nausea and the Oculomotor scores and the number of ER-SCR, combining the CAVE and the non-LP speed modality as well as the non-LP and the rotational non-LP speed modalities present competitive advantages to alleviate side effects during virtual locomotion.

Fig. 5
Download : Download high-res image (1MB)
Download : Download full-size image
Fig. 5. Interaction effects between factors; speed modality (1: NP, 2: non-LP, 3: LP), angular speed modality (1: NP, 2: non-LP, 3: LP), platform (1: HMD, 2: CAVE), scenario(1: low, 2: medium, 3: high).

Now, recalling hypothesis H1, we observed that the cognitive workload measured by the NASA-TLX table was not significantly affected by the speed protector (either non-LP or LP), which contrasts with our hypothesis. However, from NP to LP, and to non-LP, the total SSQ score, Nausea, Oculomotor and Disorientation showed obviously cybersickness levels reductions. Therefore, we can deduce that with a speed protector and especially the nonlinear one, users are less prone to cybersickness, validating part of H1.

5.1.2. Optimal acceleration and jerk
As the rotational speed modality was not reported to affect much on user’s experience except on the Oculomotor score, we focused on the analysis of the optimal acceleration and jerk along the longitudinal direction with the different speed modalities. We conducted again a mixed-effects model to determine the influence of different acceleration and jerk magnitudes in the nonlinear speed protector case. For the sake of simplification, we present only the p-values and effect size in Table 8. The effect of acceleration and jerk was not significant in terms of the SSQ score, Nausea, Oculomotor, . However, Disorientation, the number of ER-SCR, Mental Demand, Effort and Frustration were significantly affected by the acceleration,  while only the number of ER-SCR and Mental Demand were influenced by the jerk, .


Table 8. Statistical summary for the effect of acceleration and jerk on the total SSQ score, ER-SCR and NASA-TLX criteria in the nonlinear speed protector case (N: Nausea, O: Oculomotor, D: Disorientation, **:  *:).

SSQ	N	O	D	ER-SCR	MD	PD	TD	Pe	Ef	Fr
p	
p	
p	
p	
p	
p	
p	
p	
p	
p	
p	
Mixed- effects	Acceleration	0.14	0.05	0.18	0.05	0.39	0.02	0.06	0.07	0.00*	0.15	0.00**	0.14	0.51	0.02	0.97	<.01	0.11	0.06	0.00**	0.19	0.01*	0.12
Jerk	0.95	<.01	0.89	<.01	0.70	<.01	0.38	0.03	0.00*	0.16	0.00**	0.14	0.25	0.04	0.44	0.02	0.43	0.02	0.14	0.05	0.08	0.07
Post-hoc	Acceleration	0.8–1.6	0.80	<.01	0.44	<.01	0.38	0.01	0.33	0.01	0.00*	0.15	0.00**	0.12	0.30	0.02	0.98	<.01	0.04	<.06	0.00**	0.18	0.04*	0.06
0.8–2.4	0.11	0.03	0.27	0.02	0.63	<.01	0.02*	0.07	0.06	0.05	0.01*	0.09	0.33	0.01	0.82	<.01	0.16	<.03	0.02*	0.08	0.00**	0.11
1.6–2.4	0.07	0.02	0.06	0.04	0.18	0.02	0.18	0.02	0.10	0.04	0.55	<.01	0.90	<.01	0.85	<.01	0.49	<.01	0.11	0.04	0.46	<.01
Post-hoc	Jerk	1–2	0.76	<.01	0.91	<.01	0.69	<.01	0.21	0.02	0.00**	0.13	0.00*	0.11	0.15	0.03	0.24	0.02	0.25	0.02	0.05	0.05	0.08	0.04
1–3	0.82	<.01	0.72	<.01	0.40	<.01	0.26	0.02	0.93	<.01	0.00*	0.10	0.93	<.01	0.32	0.01	0.99	<.01	0.22	0.02	0.66	<.01
2–3	0.93	<.01	0.66	<.01	0.72	<.01	0.84	<.01	0.00**	0.12	0.76	<.01	0.13	0.03	0.79	<.01	0.25	0.02	0.42	<.01	0.03*	0.06
Tukey HSD post-hoc tests were performed to find the optimal magnitude of acceleration and jerk in the non-LP case (Table 8). No significant difference in the different accelerations and jerks were observed for the total SSQ, Nausea, Oculomotor, Physical Demand, Temporal Demand and Performance, . The descriptive statistics for the remaining significant factors are shown in Table 9. An acceleration of 
 led to a smaller number of ER-SCR () than with an acceleration of 
 (),  
. Mental Demand, Effort and Frustration showed larger values () when the acceleration was 
 compared to those with the other accelerations. These results validate hypothesis [H2] that acceleration affects user experience.


Table 9. Descriptive statistics including the sample size (n), mean, standard deviation (SD) and median for the performance of different acceleration and jerk magnitudes.

n	Mean	SD	Median	n	Mean	SD	Median	n	Mean	SD	Median
Acceleration
0.8	1.6	2.4
Disorientation	25	11.69	17.37	13.92	26	13.38	21.01	0	36	19.33	20.32	13.92
ER-SCR	24	348.29	81.07	365.5	26	295.27	93.53	342	36	347.06	79.68	368
MD	25	8.24	4.01	8	26	6.88	4.48	5.5	36	7.33	3.32	7
Ef	25	9.16	4.53	10	26	6.00	3.39	5.5	36	7.86	3.97	8
Fr	25	9.44	4.73	7	26	7.27	3.13	7	36	7.61	3.03	7
Jerk
1	2	3
Disorientation	29	15.36	17.19	13.92	26	13.92	19.69	13.92	32	16.53	22.48	13.92
ER-SCR	29	329.24	84.93	349	26	297.12	91.72	333.5	31	363.13	75.27	376
MD	29	8.14	4.05	7	26	6.96	4.09	5	32	7.25	3.58	7
Ef	29	7.90	4.00	8	26	6.85	4.31	5.5	32	8.16	4.10	8
Fr	29	7.79	3.46	7	26	7.38	3.70	6.5	32	8.78	3.87	7.5
Likewise, the optimal jerk magnitude can be deduced. First, the simulator sickness questionnaire failed to distinguish between the three jerk magnitudes as no significant difference was observed among the jerk magnitudes as shown in Table 8, . However, we noticed that the number of ER-SCR was smaller () when the jerk equaled 
 (), than when it equaled 
 () with 
 and 
 () with 
. As jerk varied, Mental Demand dropped significantly () from 
 () to 
 () with 
 as well as from 
 to 
 () with 
. Frustration declined significantly ( 
) from 
 () to 
 (). These results complete the validation of hypothesis [H2] as jerk also affects user experience.

The interactions between acceleration and jerk are represented in Fig. 6, which allows us to derive the best settings of acceleration and jerk. Based on the available combinations and among all evaluations except Disorientation and Temporal Demand, an acceleration of 
 and a jerk of 
 represent the optimal settings to improve user experience.

Fig. 6
Download : Download high-res image (754KB)
Download : Download full-size image
Fig. 6. Interaction effects between acceleration and jerk in the non-LP case.

Finally, we collected some general feedback from participants: they could tell intuitively the difference between the different speed modalities, in particular, they felt it was jerkier and less smooth without any speed protector while they felt better comfort with a speed protector. However when the speed protector was activated in the system, they reported that they could achieve a natural virtual locomotion only under specific settings of acceleration and jerk.

5.2. Power spectral density (PSD) analysis
The frequency content of the speed and acceleration was calculated and inspected, through which the different speed modalities showed their difference, providing one reasonable explanation to previous results. Here we used the power spectral density (PSD) evaluated with the Welch method to find the spectrum of a piece of speed and acceleration profile during virtual locomotion (Fig. 7). As shown, the speed protectors can generate smoother speed by avoiding jumps or abrupt changes resulting from involuntary controller’s inputs, which justifies the meaning of “speed protector”. With a speed protector activated, speed still followed the controller’s inputs but changed smoothly under the acceleration and jerk limits. For instance, without any speed protector, acceleration could reach 
 in an abrupt change, which could induce discomfort, whereas with the speed protector it stayed in a lower range thanks to locomotion constraints.

Fig. 7
Download : Download high-res image (499KB)
Download : Download full-size image
Fig. 7. PSD of speed and acceleration from the nonlinear speed protector, the linear speed protector, the controller’s input and the real locomotion profile in the VE.

The difference among different speed modalities shown in the frequency domain indicated that the PSD profiles (both speed and acceleration) from controller’s input had high magnitude compared to those from the protector. The real speed and acceleration in the VE did not match exactly the ones computed from the speed protector; therefore, the PSD profile of the real speed and acceleration lay between the controller’s input and the one optimized from the protector.

6. Discussion
Much research has been done over the last decades to better understand the rule of human walking and the profile of human-robot interaction in physical environments (Pham, Hicheur, Arechavaleta, Laumond, Berthoz, 2007, Sidobre, Desormeaux, 2019). Cirio et al. (2013) further analyzed the profile of a virtual walking in VEs. However, very little work has been done to apply these studies to virtual locomotion design. Finding that a minimum-jerk trajectory has been used to simulate saccadic eye movements or goal-directed arm movements (Harris and Wolpert, 1998), we applied the corresponding model to virtual locomotion with the hypothesis that the minimum-jerk model could also alleviate side effects such as cybersickness and cognitive workload. We conducted a simulation to explain why the minimum-jerk model was more appropriate than the minimum-snap, minimum-crackle and minimum-pop models during locomotion, and the results implied that only the minimum-jerk model best fitted for human controlled movements in which the ratio of peak speed to average was close to 1.75 (Flash and Hogan, 1985).

To be sure that a speed protector could provide better user experience, we conducted a user test in a 
 orthogonal table by arranging factors including the VR platform, the scenario density, acceleration, jerk, rotational acceleration and rotational jerk. The effect of the platform and the scenario density were analyzed through mixed-effects models: the score obtained from the simulator sickness questionnaire and ER-SCR, the Performance and the Effort scores from the NASA-TLX were strongly affected by the platform type, while Mental Demand, Effort and Frustration were influenced by the scenario density. When exposed to provocative vestibular stimulus repeatedly, users are less prone to sickness symptoms due to a learning effect (Clément et al., 2007). Therefore, the platform and the scenario density acted as artificial noise to reduce the accumulated familiarity of each experiment. Since many articles already discussed the effect of the VR platform and the scenario type (Cordeil, Dwyer, Klein, Laha, Marriott, Thomas, 2016, Parsons, Cosand, Courtney, Iyer, Rizzo, 2009, Riley, Kaber, 1999) and that our aim was to investigate the effect of a speed protector on cybersickness and cognitive workload, we will not go further on how the platform type and the scenario density affected user experience.

From the three different measurements (SSQ, ER-SCR and NASA-TLX), results showed that the speed protector especially the nonlinear one could effectively improve user experience. The SSQ is a common method to measure simulator sickness in VR applications, and past work showed strong internal correlation among the scores of SSQ, Nausea, Oculomotor and Disorientation (Milleville-Pennel, Charron, 2015, Wang, Chardonnet, Merienne, 2019). We also found a consistent behavior of these scores to point out the merits of the minimum-jerk speed protector. We considered the EDA as an efficient approach to indicate the severity of VR sickness, together with the SSQ. Most work uses the absolute or relative variation of the EDA value (Dennison, Wisti, D’Zmura, 2016, Plouzeau, Chardonnet, Merienne, 2018), while we extracted other features like the skin conductance responses of the EDA signal through trough-to-peak analyses according to recent studies (Magaki, Vallance, 2019, Paschalidis, Choudhury, Hess, 2019). Based on three different measurements, we found that the proposed speed protector could reduce cybersickness when the user navigated with such protector, but we did not find much significant effect of the rotational speed protector. Note that in our study we focused on both translational movements and rotational movements as the speed protector was embedded into the system to correct controller’s inputs from the user. From past research (Nooij et al., 2017), it is known that rotational movements tend to cause also VR sickness, but we did not find much alleviation when the rotational speed protector was applied. Since the user had to navigate through a relatively long path in the 3D VE, such inconsistency with the literature could be due to the fact that here, the locomotion relied mainly on translational movements, while rotational movements were less performed. In the future, we will study the effect of a rotational speed protector by designing an appropriate experiment involving more rotational movements. Interestingly, we did not find any significant effect of the speed modality on the cognitive workload based on the NASA-TLX table, indicating that the different speed modalities had statistically equivalent workload in terms of cognition.

Knowing that the speed protector replaced irregular and jerky speed profiles with a minimum-jerk profile, we had to look for optimal settings of acceleration and jerk constraints to define the shape of the optimized profile. Indeed, even though a minimum-jerk profile was defined, inappropriate acceleration and jerk, e.g., very small limits, may lead to strong delays between the user’s expectation and the system response, resulting in unnatural perception of movement (Bos et al., 2008). Therefore, a trade-off was found and the solution was to find the optimal acceleration and jerk settings. Although the different magnitudes of acceleration and jerk did not always show statistical differences, post-hoc analyses and interaction plots suggest that optimal acceleration and jerk should be 
 and 
 respectively. Note that the optimal acceleration (
) is slightly larger than the one suggested in ISO 2631-1. This might be due to the inherent differences between the physical and the virtual environments and it may be therefore worth of further investigation with different magnitudes of acceleration. In the results, we found that only the Mental Demand, Effort and Frustration were significantly affected by the magnitudes of acceleration and jerk which was partly consistent with the work of Akyeampong et al. (2014), showing that the Mental Demand and Frustration are the top two important criteria; Milleville-Pennel and Charron (2015) also strengthened the importance of Mental Demand in simulators.

In addition to the comparison of speed modalities, we also performed a power spectral density (PSD) analysis on the acceleration and speed profiles obtained from the different speed modalities. Frequency analysis has been widely used in the automotive field to assess vehicle ride responses and human comfort, especially considering the amount of motion stimuli encountering for discomfort, e.g., (Eriksson, Svensson, 2015, Gao, Chen, 2011). By inspection of the PSD profile of speed, we saw that raw inputs from the controller contained more high magnitude components than for other control speeds, while regarding acceleration, the linear speed protector yielded more high magnitude components than with other speed modalities. When the nonlinear speed protector was used, the real speed followed the minimum-jerk speed profile which contained more low magnitude components. Findings through the PSD analysis suggested the following: when a user navigated without any speed protector, his/her inputs to the controller were directly transformed into the magnitude of speed used for locomotion. However, this could lead to irregular speed profiles when the user frequently changed speed to be comfortable; consequently, speed and acceleration contained more high magnitude components. Conversely, when the minimum-jerk model was activated in the system, speed could be optimized so that speed and acceleration did not exceed comfort limits and changed smoothly.

The present work has however the following limitations. First, we tested three different values for the acceleration and jerk whose magnitude were recommended from past literature and adapted here through a trial and error procedure, thus the efficiency of the speed protector was limited to these parameters. Second, we did not find any significant difference in cognitive workload when different magnitudes of the acceleration and jerk were applied, but the mental workload tended to decrease when the acceleration and jerk were set to 
 and 
 respectively. In fact, due to the inherent subjective property of the NASA-TLX evaluation, we failed to detect a significant difference. Third, the data from the simulator sickness questionnaire were highly dispersed as the standard deviation was relatively large, posing a threat to the reliability of the work. Other measurement methods of cybersickness levels could be used to improve measurement reliability, such as postural sway (Chardonnet et al., 2017), especially since we based our speed protector on walking control. Fourth, instead of reporting full interaction effects in the mixed-effect model, we only considered the interaction between the VR platform and the other factors (i.e., scenario, speed modality and rotational speed modality). However, we presented other related interaction effects in Subsection 5.1, in which the centrality regarding the mean still helped us compare users’ feedback on different speed modalities and parameter settings. Put differently, the interaction plots emphasized the merits of the minimum-jerk model and helped determining the optimal magnitude of acceleration and jerk.

We also found from some participants that, depending on the situation, they preferred to have different accelerations. In future work, we will design a close-loop feedback on acceleration and jerk during immersion: sickness symptoms could be predicted in real-time before the users feel uncomfortable and the magnitude of acceleration and jerk could be automatically adjusted accordingly to provide better experience.

7. Conclusion
This work investigated the interest of a locomotion protector based on the minimum-jerk model to optimize the user’s inputs provided from a controller in a VR application. Despite the limitations described above, the current results indicated that the speed protector designed based on human motion and comfort conditions can significantly improve user experience by reducing VR sickness while keeping the same cognitive workload level. Significance could be assessed by the SSQ, ER-SCR and the NASA-TLX while speed profiles could be compared and analyzed through a PSD analysis. Future research will extend the speed protector to automatically adapt to users.