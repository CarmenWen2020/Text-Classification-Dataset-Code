Background--By leveraging cloud services, organizations can deploy their software systems over a pool of resources. However, organizations heavily depend on their business-critical systems, which have been developed over long periods. These legacy applications are usually deployed on-premise. In recent years, research in cloud migration has been carried out. However, there is no secondary study to consolidate this research. Objective--This paper aims to identify, taxonomically classify, and systematically compare existing research on cloud migration. Method--We conducted a systematic literature review (SLR) of 23 selected studies, published from 2010 to 2013. We classified and compared the selected studies based on a characterization framework that we also introduce in this paper. Results--The research synthesis results in a knowledge base of current solutions for legacy-to-cloud migration. This review also identifies research gaps and directions for future research. Conclusion--This review reveals that cloud migration research is still in early stages of maturity, but is advancing. It identifies the needs for a migration framework to help improving the maturity level and consequently trust into cloud migration. This review shows a lack of tool support to automate migration tasks. This study also identifies needs for architectural adaptation and self-adaptive cloud-enabled systems.
SECTION 1Introduction
Cloud computing has recently been the focus of attention in computing both as academic research and in industrial initiatives [1]. Major IT companies and startups see cloud computing as an opportunistic business strategy to remain competitive and to meet business objectives [1], [2], [3]. Larger enterprises are trying to exploit the benefits of this platform [4] by taking business continuity strategies into account [1]. For the former category, the attraction comes from the costing flexibility favoring pay-per-use models rather than upfront purchase of an overprovisioned infrastructure. Scalability, reliability, and interoperability of cloud environments are also appealing [5], [4]. Many organizations still rely on so-called legacy systems—software developed over the lifetime of an organization using traditional development methods [6]. Despite maintainability issues, on-premise legacy systems are still crucial as they support core business processes that cannot simply be replaced.

Some software-intensive applications cannot easily utilize cloud-based environments such as safety-critical software [3]. Some other applications such as embedded systems cannot necessarily benefit from this type of environment. Some software applications are specifically developed to operate in the cloud (cloud-native [3] or cloud optimized [7]). Some other systems are cloud enabled [3] (cloud compatible, cloud ready or cloud aligned [7]) and must be adapted for the cloud. Our work is concerned with the migration effort of moving legacy on-premise software to target cloud environments.

Motivated by the promised benefits of cloud environments, there has been significant research on cloud-enabled software and facilitating the migration of legacy on-premise software to the cloud [3]. These approaches particularly focus on existing methods, techniques, processes, and frameworks directly enabling migration or indirectly contributing toward justifying the decision of migrating to the cloud. The assumption for each of the approaches is that in its initial state, the software application is hosted on-premise in a noncloud environment, for example, on a local server, before the migration is applied to it. Therefore, migration between cloud providers, deployment models, and virtual resources known as live migration is outside the scope of this work.

To date, there has not been a systematic literature review (SLR) of research on cloud migration, making it difficult to assess the maturity in general and identifying trends, research gaps, and future dimensions of cloud migration in particular. Moreover, considering the growing demand for migration toward cloud, we need to investigate a research agenda for cloud migration. A SLR identifies, classifies, and synthesizes a comparative overview of state-of-the-research and enables knowledge transfer in the research community [8], [9].

We conducted a SLR with the primary objective to identify, taxonomically classify, and systematically compare the existing research focused on planning, executing, and validating migration of legacy systems toward cloud-based software. More specifically, we aim to answers the following questions by conducting a methodological review of existing research:

What are the main practical motivations behind legacy migrations to the cloud?

What are the existing tasks, methods, and techniques to enable migration of legacy on-premise software to the cloud? In addition, what is the available tool support?

What are the existing research themes? And what should form future research dimensions in legacy-to-cloud migration?

We followed guidelines in [8], [10]. Our objective is to systematically identify and taxonomically classify available evidence on cloud migration and provide a holistic comparison to analyze potential and limitations of existing research. This provides a systematic overview of current research, focusing on proposed methods, techniques, and solutions in legacy-to-cloud migration. To this end, 23 studies are selected, classified, and compared using a characterization framework. The characterization framework comprises of 12 analysis dimensions in terms of quantitative data items. These dimensions are derived and refined following a qualitative assessment of included studies and a validation of the review protocol [11], some well-known references [12], [1], [3], [5], and our experience with previous SLRs [13], [14].

The research synthesis resulted in a knowledge base [11] of current research approaches, methods, techniques, best practices, and experiences used in legacy-to-cloud migration. This review reveals that cloud migration research is still in a formative stage, but based on evidence gathered, the maturity level is improving. This review identified the need for a standardized migration framework. The lack of attention to crosscutting concerns and migration execution is also observed. This study also showed a lack of tool support to automate and facilitate cloud migration tasks. The collected data in [11]—as an online literature base— provides a detailed insight and objective interpretation of the results. In particular, the results of this SLR are beneficial for

Researchers in software engineering and cloud computing, who need an identification of relevant studies. A systematic presentation of research provides a body of knowledge to develop theory and solutions, analyze research implications, and establish future dimensions.

Practitioners interested in understanding the available methods and techniques with tool support as well as their constraints and maturity level in supporting legacy on-premise software migration to cloud-based environments.

The remainder of this paper is structured as follows: Section 2 describes background and related research to position contributions of this work. Section 3 explains our research methodology, research questions, and scope. Section 4 provides a reference model for state-of-the-research and a characterization scheme for cloud migration. Section 5 presents the results of the systematic review. Section 6 discusses the main findings, implications, and trends followed by an analysis of its limitations in Section 7. Finally, Section 8 concludes the paper.

SECTION 2Background and Related Work
In this section, we explore the similarities and differences of SOA and cloud migration to justify why we position our contribution in the SOA migration context (Section 2.1). We then define and position software migration in the context of software maintenance and evolution (Section 2.2). Based on a systematic search (Section 2.4), we link to existing secondary studies for migrating legacy software to SOA (Section 2.3).

2.1 SOA versus Cloud Migration: Similarities and Differences
While service-oriented architecture (SOA) is yet to mature, cloud computing as a new computing paradigm emerges. In this section, we provide a generalization of terminologies for the two paradigms to objectively compare them. A comparison in three different themes is summarized in Table 1.

TABLE 1 A Comparison of SOA and Cloud Migration

Drivers. Cost reduction and business agility are common drivers [15], [16]. Cost saving is a long-term driver for SOA as cost savings occur only when reuse of services reaches levels where the cost of creating the service is balanced. However, cost savings are immediate when a cloud environment is leveraged. Rationalization is also a common need of SOA and cloud computing. Business functionality in the case of SOA and infrastructure in the case of cloud are different targets.

Provisioning. Services often are created to meet tactical requirements and gain momentum in organizations as reuse grows. Service governance is essential to provide sustenance to enterprise services [15]. However, it is easier to procure and consume cloud services because their governance challenges are mostly limited to version compatibility [17] and data [18].

Design principles. To regulate how to create, organize, and reuse software components, organizations often apply SOA and cloud computing as an architectural style [19], [2]. These enable business opportunities or technical benefits.

Crosscutting concerns. Security is often overlooked when deploying SOA services and overstated when using the cloud [16]. In cloud migration, active participation of technical staff is only required as opposed to SOA migration, which require involvement of business stakeholders as well.

2.2 Software Migration and Modernization
According to the ISO/IEC standard for software maintenance and evolution [20], adaptive maintenance is defined as “modification of a software product performed after delivery to keep a software product usable in a changed or changing environment.” We consider software migration as a special case of adaptive maintenance that deals with modification for a new environment. Software migration (or legacy modernization or software modernization) is a process of moving or adapting an existing system from one operating environment to another [20]. For example, moving from traditional client-server to SOA would usually be considered a migration because it involves making sure that new features are exploited, old settings do not require changes, and ensures that applications continue to work in a new environment. Migration can be small scale, for example, migrating a single system, or large scale, involving many systems, new applications or a redesigned system [21]. When functional equivalence has been reached between the initial and the transformed system, the migrated systems can be aligned more closely to current and future business needs through adding new functionality [6], [22].

2.3 Secondary Studies on Legacy to SOA Migration
In recent years, secondary studies have focused on migration to SOA before cloud computing emerged. We did not find any secondary study on cloud migration (see Section 4). On the other hand, according to the discussion in Section 1, SOA and cloud migration are related. Thus, we decided to review existing secondary studies on SOA migration to position this SLR. We summarize these studies in Table 2 as secondary studies based on SLR [6], survey [23], research agenda [15] for future directions, survey in industry [21], [24], as well as reference framework [25], [22] addressing migration to SOA.

TABLE 2 A Summary of Secondary Studies on SOA/Cloud Migration

Systematic review on SOA migration. Khadka et al. [6] systematically reviewed 121 primary studies on legacy-to-SOA evolution using a software reengineering reference framework. They provide a historic overview, focusing on methods, and techniques used in a legacy-to-SOA evolution. They conducted a SLR to collect evolution approaches reported from 2000 to 2011. The resulting review constitutes the current research approaches, methods, and techniques used and an identification of research directions for future research.

Research agenda for SOA migration. The Software Engineering Institute (SEI) has developed a SOA Research Agenda [15] within which the migration of legacy applications to SOA is also reviewed. The core is a taxonomy that classifies topics into the business, engineering, and operations aspects of service-oriented systems, along with crosscutting aspects. Based on this taxonomy, the agenda outlines research areas, each identified with its rationale, overview of current research, and delineation of research challenges and gaps. It also provides details on specific research challenges related to the maintenance and evolution of service-oriented systems.

Survey on SOA/Cloud migration. Razavian and Lago [21] pinpoint a potential gap between the theory and practice of legacy-to-SOA migration. They conducted a systematic survey in industry. They synthesized the results based on their own reference migration framework [25], [22], contrasted with existing academic research. They discussed the differences and identified future research directions. In contrast to the previous industry-based survey, Almonaies et al. [23] survey approaches that deal with moving legacy software to SOA. They compare approaches and highlight strengths and weaknesses, thus providing a model for assisting decision support for migration projects. Pahl et al. [24] observed three different case studies in industry to identify the common migration processes and patterns based on expert interviews. Their work determines common principles that rule cloud migration processes, but also differences between the cloud deployment models. They proposed a process framework for different roles comprising SaaS/PaaS/IaaS (software/platform/infrastructure as a service) providers. This framework also lacks an explicit inclusion of postmigration activities and crosscutting concerns.

Concluding remark. In terms of the research methodology, the work of Khadka et al. [6] is the closest work to ours; however, we focus on migration to the cloud. In terms of a conceptual framework for characterization of migration approaches, the work of Razavian and Lago [22] is the closest work to ours. Nonetheless, according to the discussion Section 4, we believe that our work is the first attempt to consolidate cloud migration studies.

2.4 The Needs for a Secondary Study on Cloud Migration
The need for a SLR entails to identify, classify, and compare existing evidence on the migration of legacy software systems to cloud environments through a characterization framework. It exclusively focuses on classification and comparison of cloud migration approaches. To demonstrate that a similar review has not been already reported, we searched the Compendex, IEEE Xplore, ACM, and Google Scholar digital libraries (on 1/4/2013) with the following search string:


Show All

None of the retrieved secondary studies was related to any of our research questions detailed in Section 3. Considering the importance of cloud migration and the relative maturity of this field (see Section 6.1), a consolidation of existing evidence on legacy-to-cloud migration is timely.

SECTION 3Research Methodology
In contrast to a nonstructured review process, a systematic literature review [8] reduces bias and follows a precise and rigorous sequence of methodological steps to research literature. SLRs rely on well-defined and evaluated review protocols to extract, analyze, and document results as illustrated in Fig. 1. We adopted the guidelines in [8] with a three-step review process that includes planning, conducting, and documenting. The review is complemented by an external evaluation of the outcome of each step. We also provide an explicit characterization framework of the reviewed studies. This is the foundation for a comparative analysis of studies based on our analysis dimensions (see Section 4). These analysis dimensions are also subject to external evaluation.


Fig. 1. Overview of our research methodology.
Show All

We now summarize the planning and conducting phases of the methodology that we followed for performing this SLR, see Fig. 1. The results are documented in terms of a data summary in Section 5 and in terms of findings and research implications in Section 6. Data are collected and synthesized by adopting a framework, which is proposed in Section 4.

3.1 Planning the Review
Planning starts with an identification of the needs for a systematic review and results in a review protocol as follows:

Step 1—Identify the needs for SLR. The need is identified and the contribution of this SLR justified in Section 2. In addition, we specify the research questions in Table 3 that help in defining and evaluating the review protocol to conduct the SLR. We also formulated the general goal and scope of the study through population, intervention, comparison, outcome, and context (PICOC) criteria [9] in Table 4.

TABLE 3 Research Questions and Their Motivation

TABLE 4 Picoc Criteria to Define Scope and Goals of the SLR

Step 2—Specifying the research questions. The research questions are based on our motivation, i.e., answers provide us an evidence-based overview of migration approaches. We define four research questions that represent the foundation for deriving the search strategy for literature extraction, see Table 3. The motivation outlines the primary objective of investigation for each question. In addition, a comparative analysis allows us to analyze the collective impact of research, represented in terms of comparison attributes (Section 4).

Step 3—Define and evaluate review protocol. Based on the objectives, we specify the research questions and the review scope to formulate search strings for literature extraction. We also developed a protocol for a systematic review by following [8] and our experience with SLRs [13], [14]. As suggested by Brereton et al. [8] and Jamshidi et al. [13], we externally evaluated the protocol before its execution. We asked an external expert for feedback, who had experience in conducting SLRs in an area overlapping with cloud computing. His feedback is reflected in a refined protocol. We also performed a pilot study of the systematic review with five (approximately 25 percent) of the included studies. The objective for conducting a pilot study was to first reduce the bias between the researchers and iteratively improve the characterization scheme for data collection. We expanded the review scope, improved search strategies, and refined the inclusion/exclusion criteria during the pilot studies (see Section 2 for details).

3.2 Conducting the Review
Conducting is the second phase starting with study selection and results in extracted data and synthesized information:

Step 1—Select primary studies. The search terms used were developed using [8] and guided by research questions (Table 3). This resulted in a composition of 675 distinct search strings applied to six databases, see Fig. 2. We extracted 1,351 peer-reviewed literature from 2005 to 2013 (inclusive). The year 2005 was chosen as a preliminary search found no earlier results related to the research questions. Since we used our primary search criteria on title and abstract, this resulted in a high number of irrelevant studies, which were further refined with a secondary search.

Study selection and qualitative assessment. The selection phase comprises of three steps, see Fig. 3, initial search in databases, inclusion/exclusion, and final selection based on quality assessment:

Initial selection. This process includes screening of titles and abstracts of potential primary studies— performed by the researchers against inclusion/exclusion criteria in Table 5. For almost 20 percent (4) of studies, no decision could be made. In such cases, exclusion or proceeding to final selection involved examining the full text.

Final selection. This is based on a validation scan of the studies, means of migration, and tool support and details of the evaluation approach. After performing this step, 23 studies were selected. During the secondary search process, references and citations for the 23 studies were reviewed. Guidelines [10] recommend that snowballing from reference lists of the identified articles should be used in addition to searches in databases to identify additional relevant articles through the reference lists of the articles found using search strings. This technique led to the inclusion of more four relevant studies. As a result, 27 studies were included for qualitative assessment.

Qualitative assessment of included studies. For the 27 included studies, we primarily focused on the technical rigor of content presented. We based our qualitative assessment on factors like general assessment (G) and specific assessment (S), summarized in Table 6. Additional details about the quality checklist are provided in [11]. Quality scores provided us with a numerical quantification to rank the selected studies. Since all of the identified studies have been published in very recent years, we did not rank them based on number of citations.

Based on the quality assessment checklist in Table 6, we defined a quality ranking formula. G represents five factors as general assessment criteria from Table 6, providing a maximum score of one (25 percent weight). S represents five factors as specific items provide a maximum score of three. S is weighted three times more than G (75 percent weight) as specific contributions of a study are more important than general factors for assessment. Based on consensus among the researchers and suggestions from external reviewers, the criteria for qualitative assessment maximum score was G+S=4, where a 3-4 score represented quality papers, a score less than 3 and greater than or equal to 1.5 is acceptable and a score less than 1.5 results in exclusion:
QualityScore=[∑5i=1Gi5+(∑5i=1Si5×3)].
View SourceRight-click on figure for MathML and additional features.

Based on the qualitative assessment of 27 studies, we selected 23 studies, listed with bibliography, quality score, and citation count in Table 14. Note that quality ranking is an internal metric only that helps us to choose most related studies and does not reflect any comparison or objective interpretation of selected studies.

Fig. 2. - A summary of search strings and search results.
Fig. 2. A summary of search strings and search results.
Show All


Fig. 3. Primary study selection process.
Show All

TABLE 5 Inclusion and Exclusion Criteria

TABLE 6 Quality Assessment Checklist

Steps 2 and 3—Data extraction and synthesis. To record the extracted data from the selected studies, we followed [8] and designed a structured format based on characterization dimensions as explained in Section 4. A structured comparative analysis enables an investigation of the collective impact of research by analyzing the potential and limitation of existing research and possible reflections on future trends. Additional details can be found in [11].

SECTION 4A Framework for Classification and Comparison of Cloud Migration Research
In this section, we first introduce a cloud migration reference model for a process-centric classification of cloud migration that can help to demonstrate current research at a conceptual level and identify trends and research directions. The details of this model are discussed in Section 4.1. We then present a framework in Section 4.2. to characterize individual cloud migration approaches that helps us to taxonomically classify and compare the primary studies.

4.1 Cloud-RMM: A Cloud Migration Reference Model
As discussed in Section 2.1, SOA and cloud migration are not entirely distinct, but complementary areas (cf. Table 1). By investigating the established reference models and frameworks [25], [6], [26] for SOA migration as well as the commonalities in the primary studies, we derive a reference model as a conceptual framework to represent different process areas in cloud migration studies. The aim of this reference model is to identify areas that existing work is concentrated on and areas not covered. By identifying these areas, we can identify trends and directions of research on cloud migration.

4.1.1 Existing SOA Migration Frameworks
SOA-MF. Razavian and Lago [25] proposed a comprehensive SOA Migration Framework, called SOA-MF, which follows the horseshoe model for software reengineering [27]. The framework involves three processes: 1) reverse engineering, 2) transformation, and 3) forward engineering. The basis for SOA-MF is to first recover lost abstractions and then to elicit legacy fragments that are ready for migration to SOA. Second, it remodels the legacy abstractions to service-based abstractions, and finally, renovating the target system based on transformed abstractions and new requirements. The same authors in another study [22] identified migration categories based on a mapping of evidence to SOA-MF.

SOA Evaluation framework. Khadka [6] developed a migration framework for legacy-to-SOA evolution. They identify common methods in four different reengineering frameworks using method engineering [19]. This framework consists of six phases in two generic stages. In the first, migration is planned; in the second, it is performed. However, they do not consider migration validation, an important step after performing and implementing migration. In addition, they do not consider crosscutting activities such as governance.

SMART. The SEI [26] has developed a SOA migration framework that helps organizations to analyze legacy systems and migrate them to a service-based system. SMART consists of five processes. This framework has shortcomings [25]. They only concentrate on early stages and do not cover forward engineering activities. Transformation is only performed at conceptual level rather than on software.

4.1.2 Cloud-RMM Reference Model
We now introduce a conceptual model called Cloud- Reference Migration Model (Cloud-RMM), which represents a reference model to classify research in terms of distinct processes and crosscutting concerns. To develop a reference model for legacy-to-cloud, we first need to adopt a method to formally represent the conceptual model. Based on previous experience [19], we adopt situational method engineering [28] to consolidate existing frameworks in cloud migration (e.g., CloudMIG [S20], CMotion [S8], CloudGenius [S4], CloudStep [S5], cloud adoption toolkit [S21], Cloudward Bound [S22]). Note that the notation [Sn] (n is a number) represents a reference to studies included in the SLR, listed in Table 14. We identify the key processes related to cloud migration. In method engineering, one can follow a bottom-up approach by identifying low-level activities and techniques and then categorize them to form generalized tasks and processes. Alternatively, a top-down approach forms a framework consisting of processes, tasks, activities, and techniques. We extracted a list of common migration tasks by exploring the defined migration tasks in the primary studies. Then, we identified categories of closely related tasks in terms of input or output artifacts as well as the involved activities to form key processes for migration. A detailed description of the process we followed to identify these method chunks can be found in [19]. Fig. 4 represents the Cloud-RMM migration framework, which consists of four processes and 20 migration tasks. Any activities within the scope of porting a software system (or a part of the system) from on-premise hosts such as local data centers to selected cloud platforms preserving the core functionalities are regarded as migration tasks.


Fig. 4. The Cloud-RMM migration framework.
Show All

process1Process I. Migration planning. In the first process, preliminary migration tasks such as feasibility study [S8] [S10] [S11] [S12] [S21], migration requirement analysis [S8] [S13] [S14] [S17], as well as some decision making regarding which provider to choose [S1] [S2] [S5] [S10] [S11] [S14] [S23], which subsystems to be migrated [S1] [S10] [S11] [S13] [S22], and which cloud services to use [S4] [S6] [S9] [S10] [S11] [S23], and migration strategy development [S8] [S5] [S7] [S10] [S19] are conducted. The output artifact is a migration plan.

process2Process II. Migration execution. In the second process, the actual migration tasks such as data extraction [S6] [S8] [S15] and architecture recovery [S2] [S6] [S8] [S15] [S17] [S19] and adaptation [S8] [S23] as well as code modification and wrapping [S13] [S16] [S19] and legacy-to-cloud transformation [S2] [S15] [S16] at both conceptual and concrete levels are executed.

process3Process III. Migration evaluation. In the third process, the migrated system is ready for use and validation. Tasks such as testing [S2] [S6] [S13] [S15] [S16] [S17], validation [S3] [S15] [S20] and deployment [S1] [S8] [S13] [S16] of migrated application are performed.

process4Process IV. Crosscutting concerns. Some crosscutting tasks such as governance [S8], security analysis [S8] [S17] [S22], training [S6] [S7] [S16], effort estimation [S18], organizational change [21], and multitenancy and elasticity analysis [S8] act as umbrella activities in the framework.

According to Fig. 4, test, architecture recovery, and decision of cloud providers are the most common migration tasks and crosscutting tasks as well as architecture adaptation are the least popular tasks among the primary studies. In terms of automated support, for processes I and III, there is satisfactory evidence, but for process II and crosscutting concerns, the evidence amount is unsatisfactory.

Implications of Cloud-RMM. This reference model helps to conceptualize a process-centric view for state-of-the-research and literature classification into processes and associated tasks. Cloud-RMM can distinguish solutions for migration.

4.2 A Characterization Framework for Cloud Migration 1
In this section, we present a framework consisting of 12 data items to characterize approaches that enable legacy migration toward cloud-based environments—see Table 7. This framework constitutes a foundation for evaluating and comparing migration approaches. It can also be used as a means to taxonomically classify research on migration. For each of the data items, the framework considers a set of well-defined classification options. We derive these options by combining classification options from seminal sources [12], [1], [3], [5], [29] with those found in the set of papers that we selected, for example, the set of options for the “contribution type” was identified based on the taxonomy proposed by Wieringa et al. [12].

TABLE 7 Data Items in the Characterization Framework for Migration of Legacy Software toward Cloud

In Table 7, we focus on the description of the analysis dimensions and their associated options. For each dimension listed, we either provide a definition for the item or define its options separately. Note that the 12 analysis dimensions are categorized in four different categories. These categories comprise of migration characterization, migration support, constraints on migration, and maturity level. For a detailed description of the framework, refer to [11].

SECTION 5Results
This section presents the results of SLR according to the protocol presented in Section 3. We give an overview of the selected studies in S ection 1.1. We then present a taxonomical classification and comparison of the studies in Section 6.1 by answering the primary research questions (cf. Table 3).

5.1 Overview of the Primary Studies
To examine the state of research on cloud migration, the following complementary questions are considered:

When did research on cloud migration become active in computing community?

What are the fora in which work on cloud migration has been published? In which communities do they focus?

What are the active research communities and groups in cloud migration research?

How cloud migration research is reported and what is the maturity level of the research in this field?

5.1.1 Temporal Overview of Studies
The number of studies by year of publication is shown in Fig. 5. The earliest research results are published in 2010 and significantly increased in 2011. Note that for 2013, the review only covers papers until May. For this reason, there is a decrease in the number of papers in 2013, which would in normal circumstances have been followed by more studies as the previous years. We also annotate the means of migration (third data item in Table 7) as well as maturity level (second data items in Table 7) of the published paper in each year in Fig. 5. The work in cloud migration started with experiences with small case studies [S7] in 2010. This is complemented by a variety of contributions enabling migration (e.g., model transformation [S2]) and facilitating decision making (e.g., migration decision support [S3]). For the last two years with good evidence of cloud migration approaches, the trend continues with quite mature best practice and surveys [S8].


Fig. 5. Temporal distribution of the included studies.
Show All

5.1.2 Publication Fora
The selected papers are listed in Table 14. As indicated in Table 8, the majority of these studies have been published in two service and cloud computing conferences and two workshops, namely SERVICES, CLOUD, SECLOUD, and MESOCA.

TABLE 8 Study Distribution per Publication Channel

Among the 23 included studies, four of them are published in the following software engineering journals JSEP (impact factor: 0.844), SPE (impact factor: 0.519), IJAS, and Computing (impact factor: 0.701). As indicated in Table 8, most of the papers are published in service-oriented, cloud computing and software engineering communities.

5.1.3 Active Research Communities
Another distribution considers active research communities. We looked at author affiliations (after the study selection and synthesis to eliminate affiliation bias). Active communities that proposed at least two included studies are listed along with their research focus in Table 9. A considerable number of studies are associated with migration decision support are published by researchers in the University of Kiel in Germany and the University of New South Wales in Australia and I0042M Research in the US. While researchers at the University of St Andrews in the United Kingdom, IT University of Copenhagen in Denmark, and Mälardalen University in Sweden focus on experience and lessons learned.

TABLE 9 Active Communities and Their Research Focus

5.1.4 Research Methods for Cloud Migration
Since the included studies are peer reviewed, data about research methods (comprising contribution type and evaluation method) adopted have been extracted. A detailed analysis of research methods is outside the scope here.

Contribution type. Based on the analysis of Fig. 6, we can conclude that the largest set of contributions in the legacy-to-cloud migration relates to solution proposals (65 percent). Experience report and evaluation research are, respectively, associated with 22 and 13 percent of the studies. This indicates a lack of validation research, philosophical and opinion papers.


Fig. 6. Distribution of studies according to contribution type.
Show All

Evaluation method. Fig. 7 suggests that controlled experiments and case studies are the most common evaluation method adopted. Controlled experiments support quantitative analysis and scientific investigation of particular migration approaches, but ignore contextual factors and real situations. Case studies are good for real-world cases and effects. Additionally, 16 percent of the studies used toy examples to evaluate their contributions. As Fig. 7 indicates there is a clear lack of mathematical proofs, survey, and experience reports and evaluation approaches in the selected studies.

Fig. 7. - Distribution of studies according to evaluation method.
Fig. 7. Distribution of studies according to evaluation method.
Show All

5.2 A Taxonomical Classification and Comparison of Cloud Migration Methods and Techniques
The results of study syntheses are now summarized to answer the primary research questions. The characterization framework, introduced in Section 4, is used as a holistic framework for taxonomical classification and comparison.

5.3 Primary Drivers for Cloud Migration
We answer RQ1 to identify primary motivations for cloud adoption. Based on data synthesis, we identified three primary factors that drive migration to the cloud, see Fig. 8:

Operational cost saving (48 percent of the studies).

Application scalability (26 percent of the studies).

Efficient utilization of resources (21 percent of the studies).

Interestingly, cost saving is only indicated by 16 percent of participants in a United Kingdom-based industry survey as a key driver for cloud adoption [30]. This slightly grew in a 2012 version of the same survey, confirming that benefits are real, but are still secondary benefits from an industrial perspective. However, in the recent version in 2013, in a departure from previous research, cost saving for the first time becomes the primary reason for cloud adoption. A significant percentage (initially 53 percent and in the newer version 46 percent) refer to flexibility as the reason that the cloud brings to the organization. In another survey performed by the same forum, but for industries based in the US, 28 percent of the participants voted for cost saving as opposed to 31 percent for flexibility [31]. Application scalability is reported as a third important driver for cloud adoption.


Fig. 8. Number of studies with respect to driver of migration.
Show All

The findings clearly highlight that cost saving, scalability, and efficient utilization of resources as well as flexibility are key drivers to migrate application to the cloud.

5.4 Migration Types
We answer RQ2 by illustrating different migration types. The other part of this question regarding involved migration tasks is already answered through the Cloud-RMM framework in Section 4.1.2). To distinguish between different types of migration, we borrowed the classification proposed in [3], see Fig. 9, considering different application layers and different degrees of adaptation required to enable migration.

Fig. 9. - An overview of migration types.
Fig. 9. An overview of migration types.
Show All

type1Type I (replace) application tiers with cloud offerings is the least invasive migration type. Data and/or business tiers have to be migrated to the cloud stack. We could not identify any evidence of this type of migration in the selected studies (cf. Fig. 9), partly because this type of migration is regarded as a cloud enhancing treatment around on-premise legacy application, rather than a pure cloud enabling [32]. This type of migration requires a series of reconfigurations to adjust incompatibilities to use functionalities of the ported layer.

type2Type II (partially migrate) migrates some of the software system’s components to the cloud [S10] [S12] [S14] [S15] [S16] [S18] [S21] [S22]. As an example, migrating only the auditing functionality of a healthcare system to the cloud can be categorized as a type II of migration.

type3Type III (migrate the whole application stack) is the easiest way of migration, where the whole application is monolithically encapsulated in one or more virtual machines running on the cloud [S4] [S5] [S6] [S7] [S17]. This type of migration needs no adaptation assuming the application stack can be ported “as is” into a virtual machine.

type4Type IV (cloudify) is the most complete migration, where an application is converted to a full-fledged cloud-enabled system by composing cloud services [S1] [S2] [S3] [S8] [S9] [S11] [S13] [S19] [S20] [S23]. Types IV and II are similar, but the scope of migration in type II is limited to selected functions. As the most invasive type of migration, these two types need adaptation at the composition level such as business processes, composite services, and their supporting infrastructure.

Migration type and crosscutting concerns. The four different migration types also influence crosscutting concerns differently [S8]. In terms of elasticity (cf. Cloud-RMM in Fig. 4), adding more instances of applications will only influence if the application is engineered for load balancing between the resources. This capability rarely holds for type III while the other types of migration can benefit from this scalability. For a more detailed association of adaptations and crosscutting concerns to each type refer to [3].

In summary, the findings reveals that while migration type III (cf. Table 7) was believed to be addressed by the majority of studies [3], this assumption is not valid anymore. This is partly because migration practices have improved during the last couple of years (cf. Section 6.1). According to summarized data in Fig. 9, migration types II and IV are the major migration types among the studies.

5.4.1 Methods, Techniques and Tool Support for Cloud Migration
We answer RQ3 by exploring approaches that support cloud migration. Tables 10, 11, and 12 present the classification of studies according to our framework. The tables are separated according to a high-level classification of studies based on means of migration. Two data items (contribution type in Fig. 6 and intent of migration in Fig. 8) out of 12 are omitted from the tables due to space limitations. Since the items related to the migration support theme are not related to experience reports, we do not consider them in Table 11. Decision support in migration processes covers tasks to facilitate decision making, such as the study of migration feasibility, deciding which subsystem to be migrated or which cloud provider to choose (see Table 10). Migration execution comprises tasks that enable the actual migration of a legacy system. These include guidelines, processes, and model transformation and address tasks such as architecture recovery and transformation as well as evaluation of migrated systems (see Table 11). A summary of experience reports on cloud migration can be found in Table 12.

TABLE 10 Characterization of Legacy Software Migration (Summary of Decision Support Methods) (NM = Not Mentioned, --= Not Applicable)

TABLE 11 Characterization of Legacy Software Migration toward Cloud (Summary of Migration Technique)

TABLE 12 Characterization of Legacy Software Migration toward Cloud (Summary of Evaluation Research and Experience Reports)

Cloud migration approaches range from decision making to enabling legacy software migration with approaches reporting best practice, experience, and lessons learned in between. Decision making for cloud adoption [S1] [S3] [S4] [S5] [S10] [S11] [S12] [S14] [S16] [S18] [S20] [S21] [S22] [S23] is inherently complex and influenced by multiple factors such as cost and benefits through migration [33]. In contrast, some approaches enable the actual migration of legacy software in terms of procedures [S13] [S15] [S19] and model transformation [S2]. Other work [S6] [S7] [S9] [S17] report on experience and lessons learned or best practice [S8]—providing empirical evidence for migration research. According to Fig. 10, most studies (61 percent of studies) are approaches that investigate migration decision support.


Fig. 10. Classification of studies according to the means of migration.
Show All

Migration decision support. By synthesizing Table 10, the following observations can be made. Decision of providers, feasibility study, decision of cloud services, and decision of subsystems to be migrated are the relevant migration tasks in migration decision support. Migration type IV (i.e., cloudify) represent a minority type in this migration class. A fair percentage of the studies in this class (i.e., 50 percent) have some degree of automation. Fifty seven percent of the studies used controlled experiments to support their claims about migration and only 21 percent of studies used only small-scale toy example.

Migration techniques. According to Table 11, only four studies are categorized as enabling cloud migration. Within this class, architecture extraction, test, code modification, and transformation are the most common migration tasks. As opposed to the previous category, type IV migration is not a minority. All primary studies are generic (i.e., style and platform agnostic and applicable to all cloud types) according to the constraint on migration. Half of the studies in this category provide tool support and claim that they support the full migration lifecycle. In terms of the maturity of the approaches, all except one of the studies either provide case studies or performed control experiments to support claims.

Experience and lessons learned. According to Table 12, five studies report experiences and lessons learned as well as best practices. In this class of migration, architecture extraction is a popular migration task. As expected, this constraints their approach to specific cloud-based environments. In terms of maturity level, three types of evaluation methods including case study, experiment, and survey are employed.

Automated support usually reduces migration efforts and, therefore, is often an aim. Tool support can also provide an appropriate basis for studies to back up claims through controlled experiments. According to Table 13, nine studies (i.e., 39 percent) provide a degree of automation. Five studies [S1] [S3] [S20] [S22] [S23] provide full automation for cloud migration approaches they are presenting. For example, [S20] is a fully automated approach for conformance checking in cloud migration with the assistance of constraint validators. In another set of four studies [S2] [S4] [S15] [S21], there were both manual and automated aspects. The provided automated support in general facilitates either measuring a metric for decision support or transforming an architectural model for migration. The techniques in 10 studies [S5] [S10] [S11] [S12] [S13] [S14] [S16] [S17] [S18] [S19] were fully manual. For instance, [S18] presented a methodology for estimating the size of cloud migration projects based on function points, in which the data for model estimation had to be manually provided. The remaining four studies [S6] [S7] [S8] [S9] were not directly involved with specific solutions, but with other aspects of research such as evaluation and experience.

TABLE 13 Distribution of Studies According to Automation Degree
Table 13- 
Distribution of Studies According to Automation Degree
TABLE 14 List of Selected Primary Studies
Table 14- 
List of Selected Primary Studies
SECTION 6Research Implications and Future Dimensions
We have presented a systematic review to analyze the collective coverage and impact of research that enables or enhances cloud migration. We classified and compared existing work in Section 5 to answer the first three research questions (RQ1-3). We now address RQ4. We first discuss the maturity level of research in Section 6.1, after which we summarize research progress and principle findings to highlight trends and possible future research. Finally, we look at the key benefits of this study for researchers and practitioners in cloud migration in Section 6.3.

6.1 Maturity of Cloud Migration Research
We show an overview of evidence gathered from the analysis of cloud migration in three different facets in Fig. 11. The research facet has options connected to the contribution type, the contribution facet refers to options associated with means of migration, and the evaluation facet relates to evaluation method options. We used a bubble plot to represent the frequencies of studies on interconnections of facets. This is an x-y-z scatterplot with bubbles in category intersections. The size of a bubble is proportional to the number of studies that are in the pair of categories corresponding to the bubble coordinates. For instance, the intersection between solution proposal and migration decision support can be interpreted as follows: There are 12 articles out of 23 where the contribution type is a specific solution technique; its means of migration is meant to support decision making in a migration process. We use this map to discuss the maturity of cloud migration based on our systematic review.

Fig. 11. - Research contribution to the legacy to cloud migration maturity and evaluation.
Fig. 11. Research contribution to the legacy to cloud migration maturity and evaluation.
Show All

Fig. 11 shows there are contributions to cloud migration research primarily proposing migration decision support. To date, a controlled experiment is the most adopted evaluation method, but there are also 11 studies that utilize case studies or small examples for evaluation. Some methods are rarely used, for example, experience report, mathematical proof, and survey. Fig. 11 also indicates that the field is in a formative stage—experience report and evaluation research that determine cloud migration applicability in an industrial context are lacking. However, we retrieved a number of whitepapers and technical reports that are adopted in industry, but since they lack scientific rigor, we excluded them from this review. Only few tools have been proposed, largely at validation stage and not in large-scale use yet. There is a lack of validation research and philosophical papers, which implies that the field is not moving toward a broader cloud computing community’s interest.

6.2 Research Trend and Future Directions
After synthesizing data collected through this SLR, we observed a number of research trends and found a number of research challenges that are not addressed properly and represent the potential future directions.

The growing maturity level. Although we observed that the maturity of cloud migration is in a formative stage, however, we can note a clear growth in maturity. As another sign of improvement, all types of migration (as discussed in S ection 5.2.2) are reported in the literature. We can conclude that conducting validation research across all types of contributions is an area that still needs attention. In addition, more research results on cloud migration evaluation with real-world case studies and experience reports are needed. More case studies will result in more confidence of researchers and practitioners regarding the benefits of cloud migration and the validity of research. One dimension that is a future direction for cloud migration studies is the importance of open accessible results specifically for migration decision support research. This helps to replicate experiments and leads to making general conclusions about the migration practices.

The needs for a comprehensive migration framework. We provided a reference model in Section 4.1. However, the research community needs to propose a cloud migration framework such as the ones that we reviewed in Section 3 for SOA migration with concrete evidence of solutions in terms of methods and techniques supporting the process areas. A migration framework defines a systematic process to perform the migration, while evidence defines concrete tasks, methods, and techniques. Such a concrete framework would constitute an important contribution toward a systematic migration.

Solutions to address crosscutting concerns. According to Fig. 4, the primary focus of the studies is on migration planning (16 studies), while crosscutting concerns (seven studies for six tasks) have received relatively limited attention. There is also relatively little work on migration execution (eight studies) and migration evaluation (nine studies) in comparison with migration planning. By analyzing data in Fig. 4, seven studies [S2] [S6] [S8] [S13] [S17] [S19] [23] cover migration planning and execution and six studies [S2] [S6] [S8] [S13] [S15] [S17] cover migration execution and evaluation. Only two studies ([S6] [S8]) cover all processes comprehensively. This indicates a lack of comprehensive evidence for tasks and methods to support the migration framework above. Therefore, research regarding crosscutting concerns covering all processes can be considered as a future dimension for cloud migration.

Automated support in migration process. An observation we made relates to the automation degree in migration processes. Although a full-automated solution is not feasible, users can customize and guide the migration process supported by a toolset. According to Table 13, nine studies [S1] [S2] [S3] [S4] [S15] [S20] [S21] [S22] [S23] have a degree of automation. However, only three of them [S2] [S15] [S23] are related to the migration execution (cf. Fig. 4). This confirms a lack of tools for migration execution and is a task for the future.

The needs for architectural adaptation support. In the context of cloud migration, different layers of software cannot be considered isolated from each other. More concretely adapting business processes, for example, to move parts to the cloud, may affect underlying services and supporting infrastructure as well as the data layer [3]. This interlayer adaptation is an open issue [3], inferred based on the lack of studies (only [S8] [S23]) focusing on architectural adaptations in this review. Thus, there is a need for systematic architectural support for adaptation purposes during cloud migration. As an example, the logical separation between the cloud service providers and the applications, the agreed contract between them is one of the distinguishing aspect of cloud applications that need to be supported by architecture description—see [34] as an initial attempt toward cloud application architectures. We believe that the notion of migration path as a sequence of transitional architectures and tools supporting the architect to select the best path based on constraints and goals is promising direction. A similar notion of an evolution path and corresponding tool support has been proposed in [35]—see [14] for a comprehensive classification and comparison.

The needs for self-adaptive cloud-enabled systems. Multitenancy refers to a design principle of cloud architecture, where a single instance of the application running on a computing facility on the cloud serves multiple tenants that reside in different organizations. Since cloud applications are designed to support multitenancy, they face more different contexts in comparison with on-premise applications. As a result, cloud resource consumption for cost-saving purposes has to be adapted to varying contextual conditions. Furthermore, due to the dynamics of the environments, self-managed dynamic adaptations must be performed according to changes in the environment to meet nonfunctional requirements, such as replacing a cloud service that is being used by another one in case of a degradation of quality parameters or when new services arise in the environment [34]. However, only one study [S23] considers runtime adaptation for dynamic resource scaling during migration.

6.3 Benefits for Researchers and Practitioners
The characterization framework (Section 4) provides a holistic view of different migration aspects to be considered in the context of the migration process. The classification and comparison of studies through this framework, which contains 12 comparison attributes, provides a reasonable amount of information. For instance, for the 23 papers and 12 comparison attributes, it creates a collection with 23∗12=276 data points. As a result, the user can query and analyze the knowledge base to choose a migration strategy based on his requirements, for example, <Subject: Legacy to Cloud Migration > [Object: using Model Transformation] (Type of Environment: IaaS, Architectural Style: Style-agnostic, Target Platform: platform agnostic). This is beneficial for researchers who require a quick identification of relevant studies and detailed insight into state of the art that supports cloud migration, but also for practitioners interested in understanding existing methods for migration decision support or legacy migration.

When choosing a method for migration, a variety of aspects comes into play [23]. Examples are enterprise-level aspects including the type of company that owns the software or users of the system [24]. Moreover, technical support comprising cloud vendors, independent consultants or system integrators as well as the IT artifacts involved in the migration. This might be the case if two or more migration strategies are combined to achieve the required goal depending on advantages and disadvantages of each method in specific contexts. Evidence of this is demonstrated in [24]. However, it is not always straightforward to reuse legacy components and expose them as, for example, SaaS services. This might impose a higher risk for business critical systems and a higher cost for enterprise systems than replacing them entirely with a cloud-native application [23].

In summary, there is no single solution to the problem of migration a legacy system to the cloud. The choice of method for migration depends on the goals, the available budget and resources, and the time needed to complete the project [23].

SECTION 7Threats to Validity
This SLR provides a classification and comparison of cloud migration approaches. Although the results of systematic reviews are reliable in general [36], this type of review work has potential limitations [8]. We discuss threats to the validity of this work in different steps in our SLR (cf. Fig. 1).

Threats to the identification of primary studies. In our search strategies, the key idea was to retrieve as much as possible of the available literature to avoid any bias. Another challenge in addressing these threats was to determine the scope of our study, since cloud migration relates to different communities including software engineering, information systems, and networks. These communities use different terminologies for the same concepts. To cover all and avoid bias, we searched for common terms and combined them in our search string. While this approach decreases bias, it significantly increases search work. To identify relevant studies and ensure the process of selection was unbiased, a review protocol was developed.

Threats to selection and data extraction consistency. In SLRs, each study is subjected to a quality assessment [8]:

Result bias—A tendency to produce results that deviate systematically from the “true” results. Unbiased results are internally valid.

Internal validity—The extent to which the design and conduct of the study are likely to prevent systematic error.

External validity—The extent to which the effects observed are applicable outside of the study context.

We used two kinds of quality assessment (Section 3.2). The first kind intended to assess the quality of the papers with respect to their ability and suitability to answer our research questions, with respect to the impact on the drawn conclusions (see general items in Table 6). The second type served as an instrument to answer one of our main research questions (see specific items in Table 6). In a systematic review, the main purpose of quality assessment is to assess the impact of the quality of the primary studies on the conclusions drawn, for example, if the quality of primary studies is low, the conclusions based on these studies are unlikely to be strong and reliable.

Threats to data synthesis and results. Another challenge of reviews is the reliability threat. This is mitigated as far as possible by involving multiple researchers, having a unified characterization scheme, and several steps where scheme and process were piloted and externally evaluated. Although we were determined to use the guidelines provided in [8] to perform our systematic review, we had deviations from their procedures as we described in detail in Section 3.

We can conclude that the validity of the study is high, given the use of a systematic procedure and the involvement of different researchers and external evaluations. The openness of our review by exposing our data in [11] allows researchers to judge the result’s trustworthiness objectively.

SECTION 8Conclusions
The objective of this study was to consolidate existing research on legacy software migration to the cloud regarding the claimed benefits and the provided evidence of migration. The main contribution of this study is a characterization framework for cloud migration and a comparison of systematically selected studies through the framework to point out existing research gaps. We identified unexplored areas by synthesizing collected data, reflecting on areas of future research. The results of classification and comparison are presented as structure tables and visual diagrams—as a means to transfer knowledge among cloud computing researchers and practitioners about a collective impact of existing research.

We have extracted the core migration processes with specific tasks to define cloud migration reference model—Cloud-RMM:

Planning: feasibility study, requirements analysis, decisions of providers and services, migration strategies.

Execution: code modification, architecture extraction, data extraction, and transformation.

Evaluation: deployment, testing, validation.

Crosscutting concerns: governance, security, training, effort estimation, organizational change, multitenancy.

S ection 5.2.3 has in detail identified methods and techniques used. This allows comparing and differentiating cloud from SOA migration, which becomes evident in terms of the need to consider a layered cloud stack or the importance of specific targeted platforms or the different configuration of the migration process stages, where particularly the migration execution requires techniques different from SOA that establishes cloud migration as a concern in its own right.

The field is still in a formative stage, but stabilizing. We identified a need for a concrete migration framework to enable systematic migration to the cloud. Our study indicates that crosscutting concerns are not adequately addressed. We also observed a lack of tool support for enhancing cloud migration. An interesting observation also indicates a lack of evidence for architectural adaptation support and self-adaptive cloud systems. We believe that to mature the field further, cloud computing and software engineering researchers need to propose a common research agenda.