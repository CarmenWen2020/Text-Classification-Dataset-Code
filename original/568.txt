Abstract
Consensus-based bundle algorithm (CBBA) is a decentralized task allocation algorithm that can produce feasible and conflict-free task assignment solution for multi-UAV system in the search and rescue scenarios. Further considering the new emerging tasks, this paper studies how to realize task reasssignment in the time-sensitive and dynamic environment. Effective task replanning algorithm aims to maximize the score value of task replanning solution when ensuring the timely allocation of the new task. Thus, an extension of CBBA called CBBA with local replanning (CBBA-LR) is proposed to produce reliable task replanning solution with quick response to the new task. Firstly, the capable matrix is adopted in CBBA-LR to denote the capable relationship between UAVs and tasks. Only capable UAVs for the new task are included in the task replanning. Then, the performing time list is introduced to the bid lists. For each UAV, CBBA-LR selects the assigned tasks whose performing times overlap the time window of the new task as the potential reset tasks. The setting of potential reset tasks effectively reduces the number of tasks included in the replanning process. After that, each UAV selects the nearest task to the new task from the potential reset task set as the reset task. Hence, CBBA-LR resets the most likely insert position of the new task from each UAV’s path. Finally, CBBA runs based on the reset task schedules to get the task replanning solution. Numerical simulations demonstrate the solution quality and convergence time of CBBA-LR from four perspectives: different time windows of the new task, different locations of the new task, continuous appearance of new tasks and different scales of search and rescue scenarios. The simulation results verify the feasibility and superiority of CBBA-LR compared with other replanning strategies.

Introduction
With the advantages of low cost, zero casuality and high flexibility, unmanned aerial vehicles (UAVs) have gradually replaced aerial vehicles to perform dull, dirty, dangerous and deep tasks [1]. However, due to the limited operating radius and payload, the operation of single UAV cannot guarantee the execution of multiple tasks in complex environment [2]. Therefore, it’s an inevitable trend to study the cooperative operation of multiple UAVs. Relevant researches of multi-UAV cooperation have focused on the trajectory control [3, 4], formation tracking [5] and task assignment [6]. To perform the search and rescue (S&R) mission in the time-sensitive and dynamic environment, we study the cooperative multi-UAV task assignment algorithm in this paper.

Survivors in the time-sensitive and dynamic S&R scenarios, like fires, floods situations, need to be rescued as soon as possible. UAVs with zero casualty, strong maneuverability and high flexibility can perform dangerous and deep tasks in the S&R scenarios. Effective task assignment algorithms can make the task schedules for the multi-UAV system that meet the operational requirements [7]. From the perspective of control structure, there are two kinds of task assignment algorithms for the multi-UAV system: centralized and decentralized algorithms. For centralized methods, each UAV sends local situation awareness (SA) to the central control station, and the central control station will produce task assignment solution and issue the task schedules to each UAV. Obviously, the centralized methods depend on the continuous communications between UAVs and the central control station to get the latest SA, which cannot meet the real-time requirement in the time-sensitive and dynamic S&R scenarios. Then, the centralized methods face the single-failure risk [8]. If the central control station is damaged, the whole task assignment structure in the multi-UAV system will be destroyed. Besides, the centralized cooperative multi-UAV task assignment problem is a NP-hard combinatorial optimization problem. In large-scale S&R scenarios, the centralized task assignment algorithms like analytical methods, has exponential computation burden [9], which does not meet the quick response requirement in the time-sensitive and dynamic S&R scenarios. With the rapid development of autonomous UAVs, the decentralized task assignment algorithm has gradually become a research hotspot. Instead of relying on the central control station to give task assignment solution, each UAV in the decentralized structure produces task assignment solution based on its local SA, and then obtains the global solution for the multi-UAV system through communication and negotiation. Thus, decentralized task assignment structure has great robustness and fault tolerance, which is suitable for solving the cooperative multi-UAV task assignment problem in the time-sensitive and dynamic S&R scenarios.

Considering the information interaction and negotiation of multiple UAVs, the decentralized algorithms have been widely applied to solve the muti-UAV multi-task allocation problem. The contract net method [10] and the market-based mechanism [11] both use the broadcast communication scheme to get global SA, which is not conducive to produce feasible task assignment in time-vary environment. Decentralized Markov decision process [12] and distributed model predictive control [13] approaches need to predict the next task assignment decision for the multi-UAV system. Apparently, the convergence time of decentralized Markov decision process and distributed model predictive control approaches is too long to produce real-time task assignment in dynamic environment. The decentralized algorithm, consensus-based bundle algorithm (CBBA) [14], can produce feasible and conflict-free task assignment solution by greedy task selection of each UAV and consensus negotiation of all UAVs. CBBA combines the distributed structure of market-based mechanism and SA convergence of consensus strategy, which is suitable for the decentralized task assignment in the time-sensitive and dynamic environment.

The topic of this paper is the extension of CBBA for multi-UAV system in the time-sensitive and dynamic environment. In order to develop the applications of CBBA, many scholars have improved CBBA from different perspectives.

(1)
From the perspective of communication, researchers separately study the asynchronous CBBA [15, 16], communication-efficient CBBA [17], and CBBA with minimal communication [18].

(2)
Replacing the greedy task selection in bundle construction phase with Hungarian method and ACO, the consensus-based Hungarian algorithm and CBBA with ACO are, respectively, presented in [19, 20].

(3)
Considering the critical tasks in surveillance systems, CBBA is modified to solve the decentralized task allocation with critical tasks [21].

(4)
Different grouped CBBAs are raised. [22] presented a two-layer CBBA for large-scale operations of multi-UAV system. [23] put forward the consensus-based group algorithm for complex requirement, e.g., tasks require more than one UAV.

(5)
The implementation of decentralized task assignment with temporal and ordering constraints is studied in [24], and the CBBA with task coupling constraints is raised in [25].

In the time-sensitive and dynamic S&R scenarios, there will be new discovered survivors. It is essential to effectively assign the corresponding new emerging task, whose assignment should be within certain time window (TW). If the new task is simply inserted into the original task schedules, the subsequence tasks after the insert point cannot be guaranteed to meet their time-sensitive requirements. To address this issue, this paper focuses on the task replanning scheme of CBBA to realize the real-time decentralized task reassignment in the time-sensitive and dynamic S&R scenarios. There are some existing solutions to handle the new task [26]: no reset, full reset, single reset, heuristic full reset, and partial replanning (PR) strategies.

(1)
No reset strategy keeps the original task assignment solution and directly adds the new task after the original task schedules. Obviously, no reset strategy has fast response speed when handling the new task, while the solution quality cannot be guaranteed.

(2)
In contrast to no reset strategy, full reset strategy completely resets the whole original task assignment solution and then carries out CBBA. Although full reset strategy can get great task reassignment solution, it has long response time to the new task.

(3)
For no reset strategy, the UAV full of its capacity cannot participate in the replanning process. To address this issue, single reset strategy is presented to only reset a single task if the capacity of certain UAV is full.

(4)
Heuristic full reset strategy uses heuristic decision rule to decide whether to perform full reset or no reset by estimating the gain score of full reset.

(5)
To trade-off the solution quality with convergence speed, PR strategy is proposed. Each UAV in PR strategy resets a portion of its original assigned tasks before applying CBBA. PR with fixed reset strategy resets the same number of tasks for each UAV, and PR with team reset strategy resets the tasks with the lowest score from the team bid lists. However, PR strategy resets tasks only based on the analyses of original task assignment solution.

Further considering the relationship between the new task and original task schedules, this paper proposes the CBBA with local replanning (CBBA-LR) to solve the partial reassignment problem in the time-sensitive and dynamic S&R scenarios. The capable matrix is firstly introduced to select the participated UAVs in the replanning process. That is, only capable UAVs to the new task are included in the replanning process. Then, CBBA-LR only considers resetting tasks whose TWs overlap with the TW of the new task. This procedure effectively avoids the computational overhead of resetting all assigned tasks. Thus, CBBA-LR is conductive to realizing real-time replanning in the dynamic environment. Besides, each UAV will determine the best insert position of the new task according to the distance between the new task and its original task schedule. Each UAV resets the nearest task to the new task from its assigned tasks. After the reset process is completed, CBBA is applied to get conflict-free task replanning solution based on the reset task schedules.

In the rest of this paper, the decentralized task assignment model and the task replanning model are firstly given in Sect. 2. Then, the basis of CBBA is shown in Sect. 3. After that, Sect. 4 elaborates the proposed CBBA-LR to handle the new emerging task in the time-sensitive and dynamic S&R scenarios. Numerical simulations are conducted in Sect. 5 to illustrate the feasibility and superiority of the proposed CBBA-LR. Finally, conclusions are presented in Sect. 6.

Problem statements
This paper focuses on the decentralized cooperative multi-UAV task assignment in the S&R scenarios, especially the replanning strategy when the new task appears in the time-sensitive and dynamic environment.

Time-sensitive tasks
Suppose that there are N_T𝑁𝑇 stationary ground survivors in the S&R scenario, the task set can be denoted as

\begin{aligned} {\mathbf{T}} = \left\{ {T_1,T_2,\cdots ,T_{{N_T}}} \right\} \end{aligned}

𝐓={𝑇1,𝑇2,⋯,𝑇𝑁𝑇}

(1)

where T_j𝑇𝑗 is Search (S) or rescue (R) task.

S,R tasks are time-sensitive in the S&R scenario. That is, S,R tasks should be performed within certain TWs. The TW represents the survival time of task. Suppose that the TW of task T_j𝑇𝑗 is \left[ {t^{\mathrm{start}}_j,t^{\mathrm{end}}_j} \right] [𝑡start𝑗,𝑡end𝑗], the performing time t_j𝑡𝑗 of task T_j𝑇𝑗 should satisfy the following equations.

\begin{aligned} t_j\ge & {} t^{\mathrm{start}}_j \end{aligned}

𝑡𝑗≥𝑡start𝑗

(2)

\begin{aligned} t_j + t_\Delta\le & {} t^{\mathrm{end}}_j \end{aligned}

𝑡𝑗+𝑡Δ≤𝑡end𝑗

(3)

where t_\Delta 𝑡Δ is the duration time of task T_j𝑇𝑗.

Heterogeneous UAVs
In the S&R scenario, S,R tasks are both existed. Thus, we assume that there are two kinds of UAVs in the multi-UAV system: UAV with search capability, and UAV with rescue capability. Suppose that the multi-UAV system has N_U𝑁𝑈 UAVs, the UAV set is

\begin{aligned} {\mathbf{U}}= & {} \left\{ {U_1,U_2,\cdots ,U_{N_U}} \right\} \nonumber \\= & {} \left\{ {U_1^S,U_2^S,\cdots ,U_{{N_S}}^S,U_{{N_S}+1}^R,\cdots ,U_{{N_S+N_R}}^R} \right\} \end{aligned}

𝐔=={𝑈1,𝑈2,⋯,𝑈𝑁𝑈}{𝑈𝑆1,𝑈𝑆2,⋯,𝑈𝑆𝑁𝑆,𝑈𝑅𝑁𝑆+1,⋯,𝑈𝑅𝑁𝑆+𝑁𝑅}

(4)

where N_S𝑁𝑆 is the number of UAVs with search capability, N_R𝑁𝑅 is the number of UAVs with rescue capability. U^{S/R}_i𝑈𝑆/𝑅𝑖 represents UAV U_i𝑈𝑖 with search or rescue ability.

Then, we assume that heterogeneous UAVs have different kinematic parameters, including cruise speed and normalized fuel consumption.

\begin{aligned} {\mathbf{v}}= & {} \left[ {{v_1},{v_2}, \cdots ,{v_{{N_U}}}} \right] m/s \end{aligned}

𝐯=[𝑣1,𝑣2,⋯,𝑣𝑁𝑈]𝑚/𝑠

(5)

\begin{aligned} {\mathbf{f}}= & {} \left[ {{f_1},{f_2}, \cdots ,{f_{{N_U}}}} \right] /km \end{aligned}

𝐟=[𝑓1,𝑓2,⋯,𝑓𝑁𝑈]/𝑘𝑚

(6)

Besides, given the limited payload of UAVs in the practical S&R application, we assume that UAVs have limited task execution capacities. That is, UAV U_i𝑈𝑖 can carry out a maximun of L^i_t𝐿𝑖𝑡 capable tasks.

Accordingly, heterogeneous UAVs have different capabilities, different kinematic parameters (cruise speed and normalized fuel consumption) and different capacities.

Task assignment model
This paper studies the decentralized task assignment with heterogenous UAVs and time-sensitive tasks in the S&R scenarios. The objective of CBBA is to obtain feasible and conflict-free task assignment solution when maximizing the score function.

\begin{aligned} \max \sum \limits _{i = 1}^{{N_U}} {\left( {\sum \limits _{j = 1}^{{N_T}} {{c_{ij}}\left( {{{\mathbf{x}}_i},{{\mathbf{p}}_i}} \right) {x_{ij}}} } \right) } \end{aligned}

max∑𝑖=1𝑁𝑈(∑𝑗=1𝑁𝑇𝑐𝑖𝑗(𝐱𝑖,𝐩𝑖)𝑥𝑖𝑗)

(7)

subject to

\begin{aligned} {\sum \limits _{j = 1}^{{N_T}} {{x_{ij}}}}\le & {} {L^i_t} \end{aligned}

∑𝑗=1𝑁𝑇𝑥𝑖𝑗≤𝐿𝑖𝑡

(8)

\begin{aligned} {\sum \limits _{i = 1}^{{N_U}} {x_{ij}}}\le & {} 1 \end{aligned}

∑𝑖=1𝑁𝑈𝑥𝑖𝑗≤1

(9)

\begin{aligned} {\sum \limits _{i = 1}^{{N_U}} {\sum \limits _{j = 1}^{{N_T}} {{x_{ij}}} }}\le & {} {N_{\min }} \triangleq \left\{ {{N_T},{N_U}{L^i_t}} \right\} \end{aligned}

∑𝑖=1𝑁𝑈∑𝑗=1𝑁𝑇𝑥𝑖𝑗≤𝑁min≜{𝑁𝑇,𝑁𝑈𝐿𝑖𝑡}

(10)

\forall i = 1,2 \cdots ,N_U, \forall j = 1,2 \cdots ,N_T∀𝑖=1,2⋯,𝑁𝑈,∀𝑗=1,2⋯,𝑁𝑇.

{{\mathbf{x}}_i} = {\left\{ {\mathrm{{0,1}}} \right\} ^{{N_T}}}𝐱𝑖={0,1}𝑁𝑇 is the decision vector, whose j^{th}𝑗𝑡ℎ element is x_{ij} \in {\left\{ {\mathrm{{0,1}}} \right\} }𝑥𝑖𝑗∈{0,1}. x_{ij}=1𝑥𝑖𝑗=1 represents that task T_j𝑇𝑗 is assigned to UAV U_i𝑈𝑖. {{\mathbf{p}}_i} \in {\left( {{\mathbf{T}} \cup \left\{ \emptyset \right\} } \right) ^{{L^i_t}}}𝐩𝑖∈(𝐓∪{∅})𝐿𝑖𝑡 denotes the ordered task sequence of UAV U_i𝑈𝑖, whose k^{th}𝑘𝑡ℎ element is j if UAV U_i𝑈𝑖 conducts task T_j𝑇𝑗 at k^{th}𝑘𝑡ℎ waypoint along its path, and becomes \emptyset ∅ (empty task) if UAV U_i𝑈𝑖 conducts less than k tasks. The score function {c_{ij}}\left( {{{\mathbf{x}}_i},{{\mathbf{p}}_i}} \right) \ge 0𝑐𝑖𝑗(𝐱𝑖,𝐩𝑖)≥0 is assumed to be a certain nonnegative function of decision vector {{\mathbf{x}}_i}𝐱𝑖 or its path {{\mathbf{p}}_i}𝐩𝑖.

Task replanning model
When a new task T^*𝑇∗ appears in the time-sensitive and dynamic S&R environment, the task replanning model is

\begin{aligned} \max \sum \limits _{i = 1}^{{N_U}} {\left( {\sum \limits _{j = 1}^{{N_T+1}} {{c_{ij}}\left( {{{\mathbf{x}}_i},{{\mathbf{p}}_i}} \right) {x_{ij}}} } \right) } \end{aligned}

max∑𝑖=1𝑁𝑈(∑𝑗=1𝑁𝑇+1𝑐𝑖𝑗(𝐱𝑖,𝐩𝑖)𝑥𝑖𝑗)

(11)

subject to

\begin{aligned} {\sum \limits _{j = 1}^{{N_T}+1} {{x_{ij}}}}\le & {} {L^i_t} \end{aligned}

∑𝑗=1𝑁𝑇+1𝑥𝑖𝑗≤𝐿𝑖𝑡

(12)

\begin{aligned} {\sum \limits _{i = 1}^{{N_U}} {x_{ij}}}\le & {} 1 \end{aligned}

∑𝑖=1𝑁𝑈𝑥𝑖𝑗≤1

(13)

\begin{aligned} {\sum \limits _{i = 1}^{{N_U}} {\sum \limits _{j = 1}^{{N_T}+1} {{x_{ij}}} }}\le & {} {N'_{\min }} \triangleq \left\{ {{N_T}+1,{N_U}{L^i_t}} \right\} \end{aligned}

∑𝑖=1𝑁𝑈∑𝑗=1𝑁𝑇+1𝑥𝑖𝑗≤𝑁′min≜{𝑁𝑇+1,𝑁𝑈𝐿𝑖𝑡}

(14)

Comparing (11-14) with (7-10), we can see that the task set of (11-14) is {\mathbf{T}} = \left\{ {T_1,T_2,\cdots ,T_{{N_T}},T^*} \right\} 𝐓={𝑇1,𝑇2,⋯,𝑇𝑁𝑇,𝑇∗}, and the number of tasks is N_T+1𝑁𝑇+1.

In the time-sensitive and dynamic S&R scenarios, the reliable scheduling of heterogeneous UAVs with limited capacities is critical to all survivors. When new survivor is discovered, the corresponding task need to be assigned effectively. Thus, the core of task replanning algorithm is the feasible and conflict-free assignment of T^*𝑇∗ when maximizing the score function.

Baseline CBBA
CBBA can obtain feasible and conflict-free task assignment solution through the iterations of two phases: bundle construction and conflict resolution phases. Firstly, in the bundle construction phase, each UAV uses greedy task selection to establish its task schedule based on local SA. The bundle construction phase embodies the decentralized task allocation structure of the multi-UAV system. Then, in the conflict resolution phase, each UAV will get the global SA through mutual communication. Based on the global SA, each UAV applies consensus strategy to solve the conflict task schedules. The schematic diagram of CBBA is shown in Fig. 1.

Fig. 1
figure 1
Flow diagram of CBBA

Full size image

Phase 1: Bundle construction
In the bundle construction phase, each UAV utilizes greedy task selection to build four bid lists based on its local SA. The bid lists of UAV U_i𝑈𝑖 are given below.

(1)
bundle list {{\mathbf{b}}_i} \in {\left( {J \cup \left\{ \emptyset \right\} } \right) ^{{L^i_t}}}𝐛𝑖∈(𝐽∪{∅})𝐿𝑖𝑡: assigned tasks ordered based on which ones were added first in the process of greedy task selection.

(2)
path list {{\mathbf{p}}_i} \in {\left( {J \cup \left\{ \emptyset \right\} } \right) ^{{L^i_t}}}𝐩𝑖∈(𝐽∪{∅})𝐿𝑖𝑡: task sequence sorted by their execution order.

(3)
winning bid list {{\mathbf{y}}_i} \in {\left( {{R_ + }} \right) ^{{N_T}}}𝐲𝑖∈(𝑅+)𝑁𝑇: {y_{ij}} \in {{\mathbf{y}}_i}𝑦𝑖𝑗∈𝐲𝑖 represents the highest bid for task T_j𝑇𝑗 according to UAV U_i𝑈𝑖’s local SA.

(4)
winning bid list {{\mathbf{z}}_i} \in {\left( {I \cup \left\{ \emptyset \right\} } \right) ^{{N_t}}}𝐳𝑖∈(𝐼∪{∅})𝑁𝑡: {z_{ij}} \in {{\mathbf{z}}_i}𝑧𝑖𝑗∈𝐳𝑖 represents the corresponding UAV that has the highest bid for task T_j𝑇𝑗 according to UAV U_i𝑈𝑖’s local SA.

Accordingly, the bundle construction phase of UAV U_i𝑈𝑖 is implemented by Algorithm 1.

figure a
It is proved that CBBA converges to the conflict-free task assignment solution under the assumption that the score function {c_{ij}}\left( {{{\mathbf{b}}_i}} \right) 𝑐𝑖𝑗(𝐛𝑖) is a diminishing marginal gain (DMG) function [14]. That is, in UAV U_i𝑈𝑖’ bundle list, the score value of task T_j𝑇𝑗 does not increase as other tasks are added before it.

\begin{aligned} {c_{ij}}\left( {{{\mathbf{b}}_i}} \right) \ge {c_{ij}}\left( {{{\mathbf{b}}_i}{ \oplus _{end}} {\mathbf{b}}} \right) \end{aligned}

𝑐𝑖𝑗(𝐛𝑖)≥𝑐𝑖𝑗(𝐛𝑖⊕𝑒𝑛𝑑𝐛)

(15)

where {\mathbf{b}}𝐛 is a random task list.

The DMG assumption of {c_{ij}}\left( {{{\mathbf{b}}_i}} \right) 𝑐𝑖𝑗(𝐛𝑖) ensures that the Algorithm 1 greedily adds tasks according to the score value, where the tasks with higher score values are added first.

In line 4 of Algorithm 1, S_i^{{\mathbf{p}}_i}𝑆𝐩𝑖𝑖 is defined as the total score value for UAV U_i𝑈𝑖 executing the tasks along its path {{\mathbf{p}}_i}𝐩𝑖. The total score function is initialized as S_i^\emptyset = 0𝑆∅𝑖=0.

II\left( \cdot \right) 𝐼𝐼(⋅) in line 5 is the indicator function that is unity if the argument is true and zero otherwise.

Accordingly, the DMG assumption is shown as

\begin{aligned} \begin{array}{l} \mathop {\max }\limits _{n \le \left| {{{\mathbf{p}}_i}} \right| } S_i^{{{\mathbf{p}}_i}{ \oplus _n}\left\{ j \right\} } - S_i^{{{\mathbf{p}}_i}}\\ \ge \mathop {\max }\limits _{n \le \left| {{{\mathbf{p}}_i}} \right| \mathrm{{ + 1}}} \mathop {\max }\limits _{m \le \left| {{{\mathbf{p}}_i}} \right| } S_i^{\left( {{{\mathbf{p}}_i}{ \oplus _m}\left\{ k \right\} } \right) { \oplus _n}\left\{ j \right\} } - \mathop {\max }\limits _{m \le \left| {{{\mathbf{p}}_i}} \right| } S_i^{{{\mathbf{p}}_i}{ \oplus _m}\left\{ k \right\} } \end{array} \end{aligned}

max𝑛≤∣∣𝐩𝑖∣∣𝑆𝐩𝑖⊕𝑛{𝑗}𝑖−𝑆𝐩𝑖𝑖≥max𝑛≤∣∣𝐩𝑖∣∣+1max𝑚≤∣∣𝐩𝑖∣∣𝑆(𝐩𝑖⊕𝑚{𝑘})⊕𝑛{𝑗}𝑖−max𝑚≤∣∣𝐩𝑖∣∣𝑆𝐩𝑖⊕𝑚{𝑘}𝑖

(16)

If (15-16) are satisfied, the following equation is met.

\begin{aligned} y_{i,{\mathbf{b}}_{in}} \ge y_{i,{\mathbf{b}}_{im}}, \qquad if \quad n \le m \end{aligned}

𝑦𝑖,𝐛𝑖𝑛≥𝑦𝑖,𝐛𝑖𝑚,𝑖𝑓𝑛≤𝑚

(17)

where {\mathbf{b}}_{ik} is the k^{th} entry of {\mathbf{b}}.

Thus, with the assumption of DMG score function, Algorithm 1 will produce effective and conflict-free task assignment for UAV U_i based on its local SA.

Due to the lack of communication and understanding of global SA, different UAVs may add the same tasks to their bid lists. To solve the conflict task schedules of different UAVs, the conflict resolution phase is applied after.

Conflict resolution phase
After obtaining the local bid lists, each UAV will apply the consensus strategy to produce global conflict-free task assignment solution. Based on communication with UAV U_k, there are three possible actions that UAV U_i can take on task T_j.

\begin{aligned} \left\{ \begin{array}{l} \mathrm{Update}:{y_{ij}} = {y_{kj}},{z_{ij}} = {z_{kj}}\\ \mathrm{Reset}:{y_{ij}} = 0,{z_{ij}} = \emptyset \\ \mathrm{Leave}:{y_{ij}} = {y_{ij}},{z_{ij}} = {z_{ij}} \end{array} \right. \end{aligned}

(18)

The action rules are shown in Table 1.

Table 1 U_i’s action rules based on communication with U_k
Full size table

Through the conflict resolution phase, the winning bid lists and winning agent lists of all UAVs will be consensus. Thus, based on communications and negotiations, UAVs can release the violated tasks from their local task assignment, and further obtain global SA.

Complexity analysis
CBBA can solve the multi-UAV multi-task assignment problem through the iterations of bundle construction and conflict resolution phases. According to Fig. 1, the complexity of CBBA reflects on the required communication amount to realize the feasible and conflict-free task assignment solution.

According to [14], the communication topology of the multi-UAV system is considered as an undirected graph. The shortest path between two UAVs U_i,U_k\left( i,k=1,2,\cdots ,N_U \right) is d_{ik} < \propto . Then, the network diameter of the communication topology is derived.

\begin{aligned} D\mathrm{{ = }}\mathop {\max }\limits _{i,k = 1,2, \cdots ,{N_U}} {d_{ik}} \end{aligned}

(19)

Obviously, each UAV needs to communicate a maximum of D times to produce conflict-free solution.

The worse situation is that only one task is assigned in one iteration of communication and negotiation. Then, according to the task assignment model in Sect 2.3, the multi-UAV system needs a maximum of {N_{\min }} \triangleq \left\{ {{N_T},{N_U}{L^i_t}} \right\} iterations to get global task assignment result. Therefore, the maximum communication amount of CBBA to produce feasible and conflict-free task assignment solution is

\begin{aligned} Y\mathrm{{ = }}{N_{\min }}D \end{aligned}

(20)

The proposed algorithm
CBBA can produce feasible and conflict-free task assignment solution with heterogeneous UAVs and time-sensitive tasks. However, when the new task appears in dynamic environment, there is no proper replanning scheme to realize effective task reassignment when satisfying the DMG assumption of CBBA.

Algorithm implementation
To solve the decentralized task reassignment with time-sensitive tasks, we first raise a time-discounted score function to guarantee that {c_{ij}}\left( {{{\mathbf{x}}_i},{{\mathbf{p}}_i}} \right) is a DMG function [25]. The time-discounted score function of UAV U_i performing task T_j is

\begin{aligned} {c_{ij}}\left( {{t_{ij}},{{\mathbf{p}}_i}} \right) = {R_{j0}}\mathrm{{ + }}{e^{ - {\lambda _j}\left( {{t_{ij}} - t_j^\mathrm{start}} \right) }} {R_j} u\left( {{t_{ij}}} \right) - {f_i} {D_{ij}} \end{aligned}

(21)

where t_{ij} is the performing time of task T_j in UAV U_i’s path {{\mathbf{p}}_i}, \lambda _j is the time-discount factor of task T_j’s score, R_{j0} is the fixed reward of task T_j, R_j is the initial reward associated with task T_j, u\left( {{t_{ij}}}\right) \in {\left\{ {\mathrm{{0,1}}} \right\} } is the binary variable that shows if t_{ij} satisfies the TW constraint, and D_{ij} is the distance from UAV U_i’s initial location to task T_j’s location.

\begin{aligned} u\left( {{t_{ij}}} \right) = \left\{ {\begin{array}{*{20}{l}} {1\qquad \mathrm{if} \quad (t_{ij} \ge t^\mathrm{start}_j ) \& (t_j + t_\Delta \le t^\mathrm{end}_j) }\\ {0 \qquad \mathrm{otherwise} } \end{array}} \right. \end{aligned}

(22)

We can see from (21) that

\begin{aligned} {c_{ij}}\left( {{{\mathbf{b}}_i}{ \oplus _{end}} {\mathbf{b}}} \right)= & {} {R_{j0}}\mathrm{{ + }}{e^{ - {\lambda _j}\left( {{t'_{ij}} - t_j^\mathrm{start}} \right) }} {R_j} u\left( {{t'_{ij}}} \right) - {f_i} {D'_{ij}}\nonumber \\\ge & {} {R_{j0}}\mathrm{{ + }}{e^{ - {\lambda _j}\left( {{t'_{ij}} - t_j^\mathrm{start}} \right) }} {R_j} u\left( {{t'_{ij}}} \right) - {f_i} {D_{ij}}\nonumber \\\ge & {} {R_{j0}}\mathrm{{ + }}{e^{ - {\lambda _j}\left( {{t_{ij}} - t_j^\mathrm{start}} \right) }} {R_j} u\left( {{t_{ij}}} \right) - {f_i} {D_{ij}}\nonumber \\= & {} {c_{ij}}\left( {{{\mathbf{b}}_i}} \right) \end{aligned}

(23)

where {t'_{ij}},{t_{ij}} separately represent the performing times of task T_j in bundle lists {c_{ij}}\left( {{{\mathbf{b}}_i}{ \oplus _{end}} {\mathbf{b}}} \right) and {c_{ij}}\left( {{{\mathbf{b}}_i}} \right) , {D'_{ij}},{D_{ij}} separately represent the corresponding path costs of task T_j.

Apparently, {t'_{ij}} \ge {t_{ij}}, and {D'_{ij}} \ge {D_{ij}}. That is, the proposed time-discounted score function in (21) satisfies the DMG assumption.

The summation term inside the parenthesis of (11) represents the local score of UAV U_i, defined as the score sum of its assigned tasks in path {{\mathbf{p}}_i}. According to (21), the following equation is satisfied.

\begin{aligned} {\sum \limits _{j = 1}^{{N_T}} {{c_{ij}}\left( {{{\mathbf{x}}_i},{{\mathbf{p}}_i}} \right) {x_{ij}}} } = {\sum \limits _{j \in {\mathbf{p}}} {{c_{ij}}\left( {t_{ij},{{\mathbf{p}}_i}} \right) } } \end{aligned}

(24)

Then, this paper proposes the CBBA with local replanning (CBBA-LR) to solve the cooperative multi-UAV task reassignment problem in the time-sensitive and dynamic environment. Algorithm 2 illustrates the CBBA-LR strategy for UAV U_i.

figure b
We can see from Algorithm 2 that:

(1)
In line 4, the capable matrix CM = {\left\{ {\mathrm{{0,1}}} \right\} ^{{N_U}\times {N_T}}} is adopted. CM \left( U_i,T_j \right) =1 means that UAV U_i is capable to perform task T_j. We can see from line 3 that only UAVs capable to perform the new task T^* are considered in the local replanning process. Hence, the computational complexity of CBBA-LR is relatively reduced.

(2)
The performing time list {{\mathbf{t}}_i} \in {\left( {{R_ + }} \right) ^{{N_T}+1}} is introduced to assist in selecting the potential reset tasks. In lines 6-9, for all assigned tasks of UAV U_i, only tasks whose performing times overlap with the TW of new task T^* are considered into the potential reset task set {{\mathbf{J}}_{i,reset}}. The two overlap situations are shown below.

\begin{aligned}&t_{ij}+ d\left( T_j,T^* \right) /v_i > t^\mathrm{start}_{T^*} \end{aligned}

(25)

\begin{aligned}&t_{ij} < t^\mathrm{end}_{T^*} + d\left( T_j,T^* \right) /v_i \end{aligned}

(26)

In the time-sensitive S&R mission, the appearance of the new task T^* may not affect some assigned tasks in UAV U_i’s task schedule. Thus, for UAV U_i, CBBA-LR only considers to release its assigned tasks that will be affected by the new task T^*. Obviously, CBBA-LR utilizes the TW relationship between T^* and the original task schedule to effectively avoid the computational overhead of resetting all assigned tasks of UAV U_i. Simultaneously, the distance values between T^* and tasks in potential reset task set {{\mathbf{J}}_{i,\mathrm{reset}}} are calculated in line 8.

(3)
In lines 11-15, the task nearest to the new task T^* in {{\mathbf{J}}_{i,\mathrm{reset}}} is released from UAV U_i’s bid lists. For UAV U_i, T^* is most likely to be added before or after its nearest task. That is, the best insert position of T^* is before or after its nearest task. Hence, the nearest task j_{i,reset} is released from UAV U_i’s bid lists. Apparently, CBBA-LR uses the distance function to find the most likely resetting position of the original task schedule before applying CBBA.

(4)
As task j_{i,reset} is released from UAV U_i’s bid lists, conflict resolution phase is performed to get consensus information about the reset tasks for all UAVs in line 17. In UAV U_i’s reset bundle list {{\mathbf{B}}_i}, the assigned tasks after j_{i,reset} are also released from its bid lists to guarantee the assumption of DMG score function. Thus, CBBA-LR can produce feasible and conflict-free task replanning solution.

Performance analyses
The complexity of task replanning methods reflects on the required communication amount to realize the feasible and conflict-free task reassignment solution when the new task T^* appears.

For no reset strategy, the multi-UAV system directly adds T^* to the original task schedules. For single reset strategy, the multi-UAV system will reset a single task if the capacity of certain UAV is full. Thus, the required communication amounts of no reset strategy and single reset strategy are

\begin{aligned} Y_\mathrm{no} = Y_\mathrm{single} = D \end{aligned}

(27)

For full reset strategy, the multi-UAV system completely resets the whole original task schedules, and then applies CBBA to produce the task reassignment solution. According to the task replanning model in Sect 2.4, the multi-UAV system needs a maximum of {N'_{\min }} \triangleq \left\{ {{N_T}+1,{N_U}{L^i_t}} \right\} iterations to get global task reassignment result. Obviously, the required communication amounts of full reset strategy is

\begin{aligned} Y_\mathrm{full} = {N'_{\min }}D \end{aligned}

(28)

For heuristic full reset strategy, the multi-UAV system utilizes heuristic decision rule to decide whether to apply no reset or full reset strategy. Apparently, the required communication amounts of full reset strategy is

\begin{aligned} Y_\mathrm{heuristic} = \left\{ {\begin{array}{*{20}{l}} {Y_{no} = D \qquad \qquad \quad \mathrm{if} \quad \mathrm{no} \quad \mathrm{reset} \quad \mathrm{is} \quad \mathrm{chosen}}\\ {Y_{full} = {N'_{\min }}D \qquad \mathrm{if} \quad \mathrm{full} \quad \mathrm{reset} \quad \mathrm{is} \quad \mathrm{chosen}} \end{array}} \right. \end{aligned}

(29)

For PR strategy and CBBA-LR, the multi-UAV system will release a portion of assigned tasks in the original task schedules. The worse situation is that all assigned tasks are reset based on the task replanning methods. Thus, the maximum communication amounts of PR strategy and CBBA-LR to produce feasible and conflict-free task reassignment solution when a new task T^* appears are

\begin{aligned} Y_{PR}\le & {} {N'_{\min }}D \end{aligned}

(30)

\begin{aligned} Y_{CBBA-LR}\le & {} {N'_{\min }}D \end{aligned}

(31)

Besides, compared with the existing replanning methods, the characteristics of CBBA-LR are summarized as follows.

(1)
Compared with no reset and full reset strategies, CBBA-LR trade-offs the solution quality with convergence speed. On the one hand, different from no reset strategy, CBBA-LR can obtain feasible task assignment with larger score through local replanning strategy. On the other hand, CBBA-LR aims to produce the same task replanning solution as the full reset strategy when avoiding the fixed computation complexity of full reset strategy.

(2)
For single reset strategy, UAV U_i releases single task with the lowest score from its bundle list {{\mathbf{B}}_i} if |{{\mathbf{B}}_i} |= L^i_t to ensure its participation in the task replanning process. However, single reset strategy is too simple to obtain the same task replanning solution as full reset strategy. CBBA-LR comprehensively considers the relationship between the new task T^* and original task schedule to choose the reset task set. Thus, CBBA-LR with the selection of reset tasks is more reliable than single reset strategy.

(3)
Heuristic full reset strategy decides to perform no reset or full reset based on heuristic decision rule. Obviously, heuristic full reset strategy needs to determine the value of the threshold index. CBBA-LR does not need to introduce any auxiliary variable, which has stronger flexibility than heuristic full reset strategy.

(4)
PR with fixed/team reset strategies select the reset tasks based on the analyses about the original schedule. The number of reset tasks is needed before performing the task replanning. Apparently, PR strategies have the same replanning process for different circumstances. The proposed CBBA-LR adaptively selects the reset tasks by considering the relationship between the new task and original task schedule. Obviously, CBBA-LR can produce reliable task reassignment solutions in different situations.

Simulations
Numerical simulations are conducted to demonstrate the feasibility and superiority of CBBA-LR comparing with other existing replanning methods. Notably, 100 Monte Carlo simulations are adopted to discuss the superior performance of CBBA-LR under different settings: different TWs of the new task, different locations of the new task, continuous appearance of new tasks, and different scales of task assignment model. The simulation scenarios and corresponding parameters are generated with reference to [9, 21,22,23, 25, 26].

Feasibility of CBBA-LR
Original task assignment
In the S&R scenario, suppose that N_U=4 UAVs from the same base are assigned to execute N_T=14 tasks in a 1km \times 1km 2D mission area. The simulation parameters are shown below.

Table 2 Parameters of UAVs
Full size table

Table 3 Parameters of tasks
Full size table

According to Tables 2 and 3, the task assignment solution of CBBA is shown in Fig. 2.

Fig. 2
figure 2
Original CBBA solution

Full size image

Figure 2a shows the task schedules of UAVs. In Fig. 2a, the segments with different colors represent the task schedules of different UAVs, and the triangle and circle marks separately represent S and R tasks. Figure 2b shows the time schedules of UAVs. In Fig. 2b, the segments with different colors represent the time schedules of different UAVs.

According to Fig. 2, the task schedules of UAVs are given below. {{\mathbf{p}}_i},{{\mathbf{t}}_i},{{\mathbf{c}}_i}, respectively, represent the path, performing time and score of UAV U_i’s task schedule.

\begin{aligned}&\left[ {\begin{array}{*{20}{c}} {{{\mathbf{p}}_{\mathrm{{1}}}}}\\ {{{\mathbf{t}}_1}}\\ {{{\mathbf{c}}_1}} \end{array}} \right] \mathrm{{ = }}\left[ {\begin{array}{*{20}{c}} {{T_5}}&{}{{T_1}}&{}{{T_7}}&{}{{T_4}}\\ {4.2134s}&{}{12.7705s}&{}{21.9678s}&{}{33.2426s}\\ {66.3585}&{}{30.1354}&{}{13.2594}&{}{5.4717} \end{array}} \right] \end{aligned}

(32)

\begin{aligned}&\left[ {\begin{array}{*{20}{c}} {{{\mathbf{p}}_{\mathrm{{2}}}}}\\ {{{\mathbf{t}}_2}}\\ {{{\mathbf{c}}_2}} \end{array}} \right] \mathrm{{ = }}\left[ {\begin{array}{*{20}{c}} {{T_{\mathrm{{3}}}}}&{}{{T_{\mathrm{{6}}}}}&{}{{T_{\mathrm{{2}}}}}\\ {6.7372s}&{}{15.9963s}&{}{25.7054s}\\ {51.5712}&{}{22.9557}&{}{9.1129} \end{array}} \right] \end{aligned}

(33)

\begin{aligned}&\left[ {\begin{array}{*{20}{c}} {{{\mathbf{p}}_{\mathrm{{3}}}}}\\ {{{\mathbf{t}}_{\mathrm{{3}}}}}\\ {{{\mathbf{c}}_{\mathrm{{3}}}}} \end{array}} \right] \mathrm{{ = }}\left[ {\begin{array}{*{20}{c}} {{T_{10}}}&{}{{T_8}}&{}{{T_{12}}}&{}{{T_{14}}}\\ {4.1204s}&{}{23.0991s}&{}{45.4511s}&{}{71.5391s}\\ {68.3705}&{}{17.0318}&{}{7.4460}&{}{3.3134} \end{array}} \right] \end{aligned}

(34)

\begin{aligned}&\left[ {\begin{array}{*{20}{c}} {{{\mathbf{p}}_{\mathrm{{4}}}}}\\ {{{\mathbf{t}}_{\mathrm{{4}}}}}\\ {{{\mathbf{c}}_{\mathrm{{4}}}}} \end{array}} \right] \mathrm{{ = }}\left[ {\begin{array}{*{20}{c}} {{T_{\mathrm{{13}}}}}&{}{{T_{\mathrm{{9}}}}}&{}{{T_{\mathrm{{11}}}}}\\ {6.1142s}&{}{23.6562s}&{}{43.9643s}\\ {56.9980}&{}{15.9485}&{}{7.0708} \end{array}} \right] \end{aligned}

(35)

Appearance of the new task
Suppose that a new search task T^* appears in the time-sensitive and dynamic S&R scenario, T^* is shown in Fig. 3.

The black star mark in Fig. 3 represents the location of T^*. The TW of the time-sensitive new task T^* is [20, 70]s.

Solutions to the new task
Accordingly, the task reassignment results of CBBA-LR and other replanning strategies are shown in Figs. 4, 5, 6, 7, 8, 9. The black triangle and circle marks in Figs. 4, 5, 6, 7, 8, 9 separately represent the reset S,R tasks during the replanning process.

Fig. 4
figure 4
No reset strategy

Full size image

Fig. 5
figure 5
Full reset strategy

Full size image

Fig. 6
figure 6
Single reset strategy if L_t=4

Full size image

Fig. 7
figure 7
PR with fixed reset

Full size image

Fig. 8
figure 8
PR with team reset

Full size image

We can see from Figs. 4, 5, 6, 7, 8, 9 that:

(1)
Figure 4 gives the solution of no reset strategy. Obviously, no reset strategy keeps the original task assignment solution in Fig. 2 and directly adds T^* to U_2 after its original task sequence.

(2)
The solution of full reset strategy is presented in Fig. 5. Apparently, full reset strategy completely resets the whole task assignment solution in Fig. 2 and utilizes CBBA to assign N_T=14 tasks and the new task T^*. We can see from Figs. 4 and 5 that the total scores of no reset and full reset strategies are, respectively, 380.7479 and 382.0065. Thus, the full reset strategy can get feasible solution with higher score.

(3)
Figure 6 shows the solution of single reset strategy. Assume that the capacity of UAV is L_t=4, we can see from (32) that the assigned tasks of U_1 is at its capacity. Thus, task T_4 with the lowest bid is reset from U_1’s bid lists. Then, the new task T^* is assigned to U_1, and the reset task T_4 is assigned to U_2. However, we can see from Figs. 5 and 6, the total score of single reset strategy is 381.3196, while the total score of full reset strategy is 382.0065. Hence, single reset strategy cannot produce the same task replanning solution as full reset strategy.

(4)
Heuristic full reset strategy decides whether to perform full reset or no reset based on the heuristic decision rule. Thus, the task replanning solution of heuristic full reset strategy is either the same as the no reset strategy in Fig. 4 or the full reset strategy in Fig. 5. Obviously, the heuristic decision rule is the core of heuristic full reset strategy. In the absence of prior information, it’s hard to find the optimal heuristic decision rule.

(5)
Figure 7 exhibits the solution of PR with fixed reset strategy. Suppose that the number of fixed reset task is 1. Search UAVs U_1,U_2 capable to perform the new search task T^* will both reset one task with the lowest score from their bid lists. According to (32-33), T_4,T_2 are separately released from U_1,U_2’s bid lists. Comparing Fig. 7 with Fig. 5, we can see that PR with fixed reset strategy can get the same replanning solution as the full reset strategy.

(6)
The solution of PR with team reset strategy is given in Fig. 8. Suppose that the number of team reset task is 2. We can derive from (32-33) that two tasks with lowest score (T_2,T_4) in the team bid lists are released. Comparing Fig. 8 with Fig. 5, we can see that PR with team reset strategy can obtain the same replanning solution as the full reset strategy.

(7)
Figure 9 gives the solution of CBBA-LR. Firstly, only U_1,U_2 capable to perform the new search task T^* are included in the replanning process. Then, according to (32-33), tasks whose performing time overlaps with the TW of T^* ([20, 70]s) are T_2,T_4,T_7. Thus, based on lines 6-9 of Algorithm 2, the potential reset task sets of U_1,U_2 are, respectively, \{T_4,T_7\},\{T_2\}. After that, we can directly see from Fig. 9 that for U_1,U_2, the nearest tasks to T^* in the potential reset task sets are separately T_7,T_2. According to lines 11-15 of Algorithm 2, T_7,T_2 are separately released from U_1,U_2’s bid lists. For U_1, as T_4 is assigned after T_7, the release of T_7 will affect the execution of task T_4. Thus, task T_4 is also released according to line 17 of Algorithm 2. Comparing Fig. 9 with Fig. 5, we can derive that CBBA-LR can get the same task replanning solution as the full reset strategy.

Accordingly, in the N_U=4,N_T=14 S&R scenario, only PR with fixed/team reset strategies and the proposed CBBA-LR can produce the same task replanning solution as the full reset strategy. To further verify the superiority of CBBA-LR, four more simulations are conducted.

Different TW of T^*
Suppose that the new search task T^* has different TWs, the score increment and convergence time of CBBA-LR and other replanning methods in the N_U=4,N_T=14 S&R scenario are separately shown in Tables 4 and 5. The score increment and convergence time in Tables 4 and 5 separately reflect the solution quality and convergence performance of the replanning algorithms.

Table 4 Score increment under different TWs
Full size table

Table 5 Convergence time under different TWs
Full size table

Compared with the original task schedules in Fig. 2, the score increments of replanning algorithms are given in Table 4. Table 4 reveals that:

(1)
For TWs [5, 25]s, [10, 25]s and [15, 25]s, the score increments of no reset and single reset strategies are both 0. That is, no reset and single reset strategies cannot add T^* to the original task schedules. E.g., for no reset strategy, we can see from (32-33) that the last assigned tasks of capable UAVs U_1,U_2 are separately T_4,T_2, and the performing times of tasks T_4,T_2 are 33.2426s and 25.7054s, respectively. No reset strategy cannot assign T^* to the original task schedules within the TWs [5, 25]s, [10, 25]s and [15, 25]s.

(2)
For TWs [5, 50]s, [10, 50]s and [15, 50]s, the score increments of no reset and single reset strategies are both 5.7042. Under these circumstances, the task replanning solutions of no reset and single reset strategies are the same as Fig. 4. According to Fig. 4 and original task schedule in Fig. 2a, the score increments of no reset and single reset strategies are both 380.7479-3755.0438 = 5.7042.

(3)
For different TWs, the score increments of full reset, heuristic full reset, PR with fixed/team reset strategies and the proposed CBBA-LR are both 6.9627, and their replanning solutions are the same as Fig. 9. According to Fig. 9 and original task schedule in Fig. 2a, their score increments are all as 382.0065-3755.0438 = 6.9627.

Accordingly, under different TWs of T^*, full reset, heuristic full reset, PR with fixed/team reset strategies and the proposed CBBA-LR can produce conflict-free task reassignment solution with larger score than no reset and single reset strategies.

Further, Table 5 shows the convergence performance of the replanning algorithms. We can derive from Table 5 that:

(1)
No reset and single reset strategies converge faster than other methods as their replanning process are simple. Besides, we can see from (27) that the required communication amounts of no reset and single reset strategies are both Y_{no} = Y_{single} = D. Different from no reset strategy, single reset strategy has one more procedure. The UAV full of capacity needs to reset one single task from the original task schedule to guarantee its participation in the replanning process. Hence, the convergence time of single reset strategy is a little longer than that of no reset strategy.

(2)
Full reset and heuristic full reset strategies have longer convergence time than other methods. Then, Table 4 shows that heuristic full reset strategy has the same score increment as full reset strategy. That is, heuristic full reset strategy chooses to apply full reset strategy under this situation. We can derive from (28-29) that the required communication amounts of full reset and heuristic full reset strategies are both Y_{heuristic} = Y_{full} = {N'_{\min }}D. Then, compared with full reset strategy, heuristic full reset strategy has a little longer convergence time because of the computation of heuristic decision.

(3)
PR with fixed/team reset strategies and the proposed CBBA-LR have medium convergence rate. We can derive from (30-31) that as PR with fixed/team reset strategies and CBBA-LR utilize different reset procedures to realize the task reassignment, their communication amounts are within [D,{N'_{\min }}D]. Similarly, PR with fixed/team reset strategies and CBBA-LR has less convergence time than full reset and heuristic full reset strategies, and have larger convergence time than no reset and single reset strategies.

Accordingly, PR with fixed/team reset strategies and the proposed CBBA-LR can produce the same task replanning results as the full reset strategy, while their convergence time is less. Therefore, PR with fixed/team reset strategies and the proposed CBBA-LR can produce relatively effective task replanning solution in the N_U=4,N_T=14 S&R scenario under different TWs of the new task.

Different locations of T^*
To further discuss the performance of CBBA-LR, different positions of the new search task T^* are considered under N_U=4,N_T=14 scale. We randomly set the position of T^* and conduct 100 Monte Carlo simulations. The score increment and convergence time of CBBA-LR and other methods are shown in Fig. 10.

Fig. 10
figure 10
Performance with different locations of T^*

Full size image

In Fig. 10, ’No’,’Full,’Single’,’Heuristic’,’Fixed’,’Team’ separately represent no reset, full reset, single reset, heuristic full reset, PR with fixed reset and PR with team reset strategies. The box-plot figures of score increment and convergence time in Fig. 10a and b, respectively, reflect the solution quality and convergence performance of different replanning methods. The red line in Fig. 10 represents the medium value of performance index in 100 Monte Carlo simulations.

Figure 10 reveals that:

(1)
For no reset and single reset strategies, Fig. 10a reflects that their medium score increments are less than that of other methods, and Fig. 10b reveals that they converge faster than other methods as their replanning strategies are simple.

(2)
For heuristic full reset strategy, Fig. 10a shows that it has the same medium score increment as no reset strategy. That is, heuristic full reset strategy chooses to apply no reset strategy under this situation. We can derive from (29) that the required communication amount of heuristic full reset strategies is Y_{heuristic} = Y_{no} = D. Then, Fig. 10b reveals that due to the computation of heuristic decision, its convergence time is longer than no reset strategy.

(3)
PR with fixed/team reset strategies have relatively high score increment and low convergence time. However, we can see from Fig. 10a that the medium score increments of PR with fixed/team reset strategies are lower than that of full reset strategy.

(4)
For the proposed CBBA-LR, Fig. 10a shows that it has the same medium score increment as full reset strategy, and Fig. 10b reflects that its convergence time is much lower than that of full reset strategy.

Thus, only the proposed CBBA-LR can produce the same task replanning solution as full reset strategy with much less computation complexity. Firstly, only CBBA-LR can produce the task replanning solution with the same medium score increment as full reset strategy. Apparently, the feasibility of CBBA-LR to assign the time-sensitive new task is proven. Then, CBBA-LR has relatively low convergence time during the task replanning. Obviously, CBBA-LR can realize real-time task replanning in the dynamic S&R scenario.

Continuous appearance of T^*
To verify the performance of CBBA-LR in actual S&R scenario, 100 Monte Carlo simulations are conducted for the appearance of multiple new tasks. Suppose that 5 new tasks T^*_1,T^*_2,T^*_3,T^*_4,T^*_5 successively appear in the S&R scenario, the score increment and convergence time of CBBA-LR and other methods are shown in Fig. 11.

Fig. 11
figure 11
Performance with multiple new tasks

Full size image

Figure 11 perfectly illustrates the superiority of CBBA-LR compared with other methods. Firstly, Fig. 11a shows that CBBA-LR and full reset strategy have the largest score increments during the continuous replanning of the new tasks. Hence, only CBBA-LR can always produce the same task replanning solution as the full reset strategy. Then, in Fig. 11b, the convergence time of CBBA-LR is much less than that of full reset strategy. Accordingly, CBBA-LR can quickly get the best task replanning solution when new tasks continuously appears in the S&R scenario.

Therefore, CBBA-LR can produce feasible and conflict-free task replanning solution with great solution quality and relative low convergence time, which is practical to give real-time task replanning in actual S&R scenario.

Different scales of S&R scenarios
The feasibility and superiority of CBBA-LR have been proved by the above simulations (N_U=4,N_T=14 scenario). Then, different S&R scales are adopted to test the scalability of CBBA-LR [21,22,23, 25, 26].

Suppose that the original tasks and the new task T^* are generated randomly in the 1km \times 1km 2D mission area, and their TWs are randomly selected in [0, 100]s. The score increment and convergence time of 100 Monte Carlo simulations are separately shown in Tables 6 and 7. In Table 6, the biggest score increments among different methods are highlighted in bold.

Table 6 Score increment under different S&R scenarios
Full size table

Table 7 Convergence time under different S&R scenarios
Full size table

Firstly, we can see from Table 6 that in different S&R scales, only CBBA-LR and full reset strategy can always produce task replanning solution with the largest score increments. Then, Table 7 reveals that in different S&R scenarios, the convergence time of CBBA-LR is much less than that of full reset strategy.

Accordingly, Tables 6 and 7 further verify the superiority and robustness of the proposed CBBA-LR for task replanning in the time-sensitive and dynamic S&R scenarios.

Conclusions
Decentralized task assignment algorithm is an essential technology to achieve real-time coordination of multiple UAVs in the time-sensitive and dynamic search and rescue (S&R) scenarios. On the one hand, the search and rescue tasks of survivors in the time-sensitive S&R scenario have to be performed within certain time window. On the other hand, the new survivors discovered in the dynamic environment have to be assigned effectively. The decentralized task allocation algorithm, consensus-based bundle algorithm (CBBA), can obtain feasible and conflict-free solution under the assumption of diminishing marginal gain (DMG) score function. However, CBBA cannot guarantee the DMG assumption when handling the new task appears in the time-sensitive and dynamic environment. To address this issue, this paper raises the CBBA with local replanning (CBBA-LR) to produce feasible task replanning solution with quick response. Firstly, CBBA-LR introduces the capable matrix to choose the UAVs involved in the reset process. Then, each UAV selects the reset tasks according to the time window and distance relationship between the new task and the original task schedules. Finally, CBBA is applied to produce task replanning solution based on the reset task schedules. The simulations and analyses comprehensively prove the feasibility, superiority and scalability of the proposed CBBA-LR compared with other replanning strategies.

In the practical large-scale S&R scenario, survivors are normally gathered at different locations. Thus, in future study, we will focus on how to assign multiple UAV swarms to perform S&R mission on these gathering locations. Besides, CBBA-LR will be modified to realize feasible and conflict-free reassignment of the new emerging tasks across these UAV swarms.