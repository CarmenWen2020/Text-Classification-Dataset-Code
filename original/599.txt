Abstract
In this paper, a new distributed multi-agent framework based on the three layers’ fog computing architecture is developed for real-time microgrid economic dispatch and monitoring. To this end, the changes of load at any time will be tracked by the proposed technique, considering unit sudden exits and entries. Moreover, to make the system more realistic, different renewable energies, including photovoltaics (PVs), wind turbines (WTs), fuel cells (FCs), and microturbines (MT) are considered in the proposed technique. To overcome the complexity of the problem, by using advantages of fog computing, a new fast consensus-based optimization algorithm is used, which is modified based on the fuzzy adaptive leader technique. Finally, the proposed technique is simulated and tested on microgrids with 6 and 14 buses, respectively. Simulation results demonstrate and validate the effectiveness of the proposed technique, as well as the capability to track the changes of load with the interactions in real-time and the fast convergence rate.

Previous
Next 
Keywords
Microgrid

Energy management

Fog computing

Consensus

Distributed optimization

Nomenclature
The output power of dispatchable generator

The output power of non-dispatchable generator

Utility output power

mth consumer demand power

, 
ith dispatchable unit minimum and maximum output powers

, 
jth non-dispatchable unit minimum and maximum output powers

, 
Grid maximum and minimum output powers

T
Index of time

The cost of incremental

Cost of th generator

,  and 
Generators parameters

, 
Coefficients cost of grid

Coefficient cost of leader

Agents numbers

N(i)
ith agent set of neighbors

D
Demanding load set

V
The node of graph

V
The dispatchable generator set

V
The non-dispatchable generator set

V
The node of grid

E
The edge of the graph

L
The matrix of Laplacian

The factor of convergence

Small constant value

K
Index of iteration

, 
Minimum and maximum active power of the dispatchable generator

, 
Minimum and maximum active power of non-dispatchable generator

, 
The grid maximum and minimum active power generation

ith dispatchable unit incremental cost

Incremental cost of grid

, 
Minimum and maximum incremental cost of the dispatchable generators

, 
Minimum and maximum incremental cost of the grid

P
The mismatch of power

1. Introduction
MICROGRID (MG) is a small electricity network, which is the integration of the load the distributed energy resources (DERs) [8], [24], [30]. MG can operate in both grid-connected and islanded modes [4], [22]. Recently, MG has attracted lots of attention due to significant advantages, e.g., higher reliability, resiliency, power quality, as well as lower transmission and operation costs. However, the optimal energy management, control, and protection of the MG are still challenging [7], [9], [13], [23]. Conventionally, the optimal dispatch of MGs is employed in centralized control. In these techniques, all operational and technical unit data are sent to the unit of centralized control [17], [20], [26]. Then, the optimization technique is used with centralized techniques. These techniques are dealing with some new challenges, e.g., a huge computational burden in systems with the large-scale, communication traffic, units’ information privacy, the difficulty of the grid real-time monitoring [12], [14]. These techniques are also challenging with the sudden changes in the unit system such as entries and exits or using plug and play equipment in the grid. Therefore, the researchers address all of these issues for distributed techniques [5], [15]. In distributed optimization techniques, neighbors are communicated by agents. Indeed, they share their data to find the desired solution after several iterations. However, these techniques have some concerns, e.g., device heterogeneity, information privacy, and system security against various attacks. By presenting distributed flowcharts that are resilient, there are many pieces of research to answer these problems such as [3], [11], [28]. In these techniques, each agent can be independently capable of predicting faults, attacks, harms, and neighbor misbehaviors. Also, if some actions of unexpected malicious happened, it may confront intensive hurts. Additionally, it is hard to regulate policies for independent agents, crime detection, and punishment [21]. One way of protecting the system is by using resilient techniques as well as using a strong, smart, and secure technique for agents to transfer data, instead of directly sharing data.

The energy management of MG in the distributed structure has been widely investigated so far. For instance, [1] proposes a platform with fog computing. [27] introduces a fog and cloud platform for smart buildings. It is worth noting that to the best of the authors’ knowledge, up to now, a feasible fog-based platform does not exist to employ distributed optimization techniques virtually for MGs. To this end, in this paper, a three-layer framework based on fog computing is suggested to prevent the direct communication of agents and to take benefit of distributed optimization techniques, simultaneously. Also, for MGs, a modified distributed consensus-based technique is proposed to find solutions of optimal dispatch problems in the presence of non-dispatchable and dispatchable power resources with the abrupt changes in attendance status or a load of agents. Hence, the main contributions of this paper can be summarized as:

•
We developed a three-layer framework based on fog computing for MG economic dispatch. The model is developed to prevent the direct communication of agents and to take benefit of distributed optimization techniques, simultaneously.

•
We developed a modified distributed consensus-based technique to achieve the optimal dispatch solutions in the presence of non-dispatchable and dispatchable power resources with the abrupt changes in attendance status or a load of agents.

The rest of the paper has been organized as follows: Section 2 describes the economic dispatch problem (EDP) including objective function and constraints. Then, in Section 3, the proposed technique to find the solution to the problem is obtained. After that, the new optimization technique is introduced in Section 4. Finally, the proposed technique is simulated and presented in Section 5, followed by a remarkable conclusion in Section 6.

2. The formulation of the proposed optimization framework
In this section, microgrid limitations and objective function for EDP in the presence of FCs, MTs, WTs, PVs, and Distributed Generators (DGs) are presented.

2.1. Objective function
In each time, minimizing the total operational cost as well as covering the consumer load demands are the main idea for the economic dispatch in real-time. At the first step, MG locally supplies its load demand. The MG, to supply the load demand, buys its energy from the upstream network (utility), in some situations that the local generation is too expensive, or the local generation is not enough for its needed energy. Moreover, if the local generation power of the microgrid overweights the local load, the extra generated power will be stored to the storages or sold to the utility [2]. As a result, for each time interval, the objective function is described as: (1) 
 
 

In time interval t, the objective of this paper is to optimize the dispatchable unit output power generation costs such as DGs, FCs, and MTs as well as transferring money with the grid for selling or buying 
 kW in microgrids. The quadratic functions assume as cost functions for all dispatchable units. 
 ($/kWh), 
 ($/kWh2) , and 
 ($) are the utility cost coefficients in time interval t and  ($/kWh),  ($/kWh2), and  ($) are dispatchable unit cost coefficients in the microgrid as well. It is worth noting that due to the energy variations in the power market throughout the whole day, the grid cost coefficients are assumed differently for different time intervals.

2.2. Constraints
The main goal of a power system is to fulfill the demands of consumers. Thus, upstream grid, dispatchable power generators, and non-dispatchable generators like PVs and WTs should completely supply the total load demand in each time as shown below: (2) 
 The above equation is called the power balance equation. The constraints of the above equation are written below: (3) 
 

3. Consensus-based optimization
The proposed technique finds the optimal solution in several iterations by transferring data among connected agents based on the distributed optimization technique. To introduce this technique, it is required to discuss the Graph theory in order to represent the system performance model as a graph. After a theory brief explanation, in the third section of this paper, the first-ordered consensus-based method will be presented.

3.1. Graph theory
Graph G is shown by edges (E) and a set of nodes (V). In a microgrid, to model the system, the graph is used. Nodes in this analysis are considered as the edges and agents to define the virtual neighbors [10]. ith agent neighbors are defined below as the agents which exchange information with ith agent: (4)A square matrix called Laplacian matrix is obtained for the matrix G as: (5)
 
  
 
 
 
 the number of the neighbors of the ith agent is shown by degree function of . The Laplacian matrix calculates matrix 
, which shows the system topology: (6)
 
 

3.2. Algorithm of discrete first-order consensus
To solve a discrete-time interval problem by transferring their data, the algorithm of the first-order consensus discrete form is considered. As discussed before, a few agents will exchange their variables of consensus (
 is the ith agent consensus variable) with their neighbors in this technique. According to the derived data in each iteration from its neighbors, as follows, based on the variable of consensus, each agent updates its status. The objective is to converge all consensus variables to the consensus value after several iterations [29]: (7)
 

3.3. The proposed technique
It is important to note that the demand at any moment should be supplied, the total generation cost should be minimized efficiently. Thus, generators should track the load demand. Thus, each grid and dispatchable generator incremental cost are selected as the consensus variables. This will be updated as shown below: (8)
 Dispatchable generators and grid incremental costs can be calculated as [25]: (9)
 
 
 
 Based on (3), (9), after each iteration, the 
 should be calculated as: (10) 
 They should be set to the nearest limitation when a consensus variable exceeds the limitations. The output power is obtained as: (11)
 
 
 
 
 with the consensus rule, after several iterations, the consensus incremental cost can be calculated. However, as can be derived based on the power balance equation, it may not be the desired solution in (2). As a result, among the agents, a leader is selected for adding the update rule and penalty factor to its desired consensus solution [19]. Therefore, (9) can be updated as rewritten: (12)
 
 Non-dispatchable generators such as WTs and PVs are costly energy sources due to their investment costs. However, these sources do not have the cost of operational. It is important to note that all forecasted generations should be consumed, and the remaining load demand is covered by other units. As follows, a penalty factor calculates the power mismatch as shown in (13), (13) 
 The leader should be selected based on the agents, by using the presented technique in the next section. Therefore, the convergence factor  should efficiently be selected by the selected leader by using a fuzzy rule to have a high-convergence speed [18] as: (14)
 
where  is a small constant value of time. It is chosen based on the try and error technique.

4. Optimal dispatch with cloud–fog-device framework
As discussed before between agents, the proposed technique needs transferring the data. Also, a leader should select a unit to conveniently converge the process. Hence, the following cloud–fog-device method suggests the neighbor virtualization method [16]. In this paper, each agent transfers its data with its neighbors than the real agents in its neighborhood. Therefore, for an MG, a virtual topology is determined by a virtualization unit. Then, the unit receives the required data from all agents in each iteration. This transfers the data of each agent to its neighbors. Thus, the agents get information without knowing the sender of the data.

A technique is needed to implement the proposed technique which has the following benefits: (1) the system real-time monitoring to detect the load demand estimation status and the agents, (2) the unit privacy protections against their neighbors (3) without direct communication, provide a real-time environment to transfer the information among the agents (4) determine the system topology as well as selecting the convergence factor analysis and the leader.

To sum up, a three-layer cloud–fog-device framework is suggested in this paper which includes the following three layers:

Device layer: In this layer, physical components of MGs work (e.g. sensors, metering devices, renewable sources, energy storage systems, and plug and play equipment). These physical components work based on the transferring information with their virtual neighbors and the transferred information from the upper layer (fog). The obtaining output power mentioned in (11) and the updating status that is mentioned in (10), (12) are performed based on the transferred factors from the fog layer (the convergence factor for the virtual neighbor and the leader information). After updating, agents transfer the required data (e.g. consensus variables).


Table 1. Parameters of generation units of case 1.

MT	DG	FC	Utility
Pmax (kW)	50	180	45	40
Pmin (kW)	5	15	0	−40
 ($/kWh)	0.15	0.02	0.17	–
 ($/kWh2)	1.8	0.6	1.54	–
Fog layer: With the potential of local servers and decentralized computational processes, this subsection includes network equipment. This layer can be extended the cloud computing near the devices to short-time data storage and convenient the real-time analysis. For the proposed technique in MG, this layer determines the neighbor virtual topology. In each iteration, the attendance situation of the agents, and the real-time status of each agent will be checked. The information of agents (consensus variables, 
 and 
) are gathered in the layer. Then, in each interval, a random leader is selected. Based on (14), its convergence factor is obtained. Also, in this layer, the load demand real-time monitoring is executed. Finally, from (13) the power mismatch is analyzed.

Cloud layer: This layer contains a big storage space with computation capability. Cloud receives summaries of information from the previous (fog) layer to store data in storage for a long period. Regulating policies apply the punishment for units with malicious. Also, this layer performs the communications between the fog layers or between utility and fog layers. Fig. 1 shows a simple view of the proposed technique.

5. Simulation results
To demonstrate the effectiveness and merit of the proposed technique, 6-bus and 14-bus microgrids are selected and tested as follows.

5.1. Case 1: 6-bus test microgrid
In this sub-section, a microgrid with 6-bus and 4 agents is evaluated the performance of the proposed technique for two different scenarios. As shown in Fig. 2, this system includes non-dispatchable sources (WT and PV) and dispatchable sources (DG, MT, and FC). The generation unit parameters, as well as the utility cost coefficients for 24-h intervals, have been provided in Table 1, Table 2. It is worth noting that to observe the effect of market price, the utility cost coefficients are selected in various time-intervals. Besides, the number of time intervals considered is 24 h. However, this does not mean that in each interval the period is 1 h. This time interval in some cases can be one minute to help the system to track the load demand in real-time. The changes in load demand through 24-h time intervals are shown in Fig. 3. Moreover, Fig. 4, Fig. 5 demonstrate the forecasted output powers of the PV and WT during this time. In this paper, the cost of startup/shut down is ignored and  is selected 0.004 for all cases. Furthermore, the fog layer selects the leader randomly in each interval.

The effectiveness and capability of the system to track the distributed load are evaluated by defining two scenarios as Scenario 1: The MT, DG, FC, and utility are considered the MG agents. The system virtual topology that is selected by the fog layer is shown in Fig. 2(a), and Scenario 2: It is considered that the system isolates the FC because of a sudden failure in the fifth interval. The fog layer is changed the system virtual topology and waited for the FC recovery. After 6 intervals, by using the first scenario topology, the unit rejoins to the system.


Download : Download high-res image (227KB)
Download : Download full-size image
Fig. 3. The demand of the load for various time intervals in case 1.


Table 2. The utility cost coefficients for 24-h time intervals of case 1.

t	
 ($/kWh)	
 ($/kWh2)	t	
 ($/kWh)	
 ($/kWh2)
1	0.0385	0.23	13	0.2324	1.5
2	0.026	0.19	14	0.5795	4
3	0.0248	0.14	15	0.2389	2
4	0.017	0.12	16	0.2533	1.95
5	0.0168	0.12	17	0.0677	0.6
6	0.028	0.2	18	0.0799	0.41
7	0.0357	0.23	19	0.0623	0.35
8	0.055	0.28	20	0.0662	0.43
9	0.2229	1.5	21	0.1219	1.17
10	0.6369	4	22	0.0653	0.54
11	0.7568	4	23	0.0464	0.3
12	0.616	4	24	0.0433	0.26
Fig. 7 shows that the incremental costs in intervals 11 and 12 to show the extra subtle of the changes. After averaging values of 31 iterations in each interval, the incremental costs are converged to the optimal value. This results in a very quick performance which is desirable. Fig. 8 shows all the generation unit output powers and a comparison among the output power generations and the load demand summation in each iteration. In Fig. 8, in each interval, the accurate convergence of these two values can be seen, that is a proof for the desired capability and accuracy of the proposed technique to follow the load changes through the time. To compare the proposed technique with centralized techniques, the problem was solved with a fast-centralized technique (interior point technique) [6] with the same PC. The results prove that the proposed technique is much faster than the conventional centralized technique (62.5 times faster with the same result). It should be noted that the running time will be shared between the agents. Thus, the proposed technique is faster than this (the effect of the response time of the fog layer has not been analyzed).


Download : Download high-res image (514KB)
Download : Download full-size image
Fig. 6. Dispatchable generator incremental costs in each time interval/iteration for case 1.

5.2. Case 2: 14-bus test microgrid
In this sub-section, a microgrid with 14-bus, including 5 agents is evaluated to show the effectiveness and merit of the proposed technique. As shown in Fig. 9, this system includes non-dispatchable sources (WT and PV) and dispatchable sources (DG, MT, and FC). The generation unit parameters, as well as the utility cost coefficients for 24-h time intervals, have been provided in Table 3, Table 4. Also, Fig. 10 shows the load demand of case 2 for 24-h intervals.

Fig. 11 shows the incremental costs of the agents in each iteration as consensus variables. Similar to the previous case, each interval is divided into 200 iterations. The results illustrate that although agent 3 has been isolated and recovered back to the system, the perfect tracking of the load has been achieved. That means the proposed technique has an accurate performance against the agent sudden entries or exits.


Download : Download high-res image (420KB)
Download : Download full-size image
Fig. 9. The topology of the 14-bus test system of case 2. (a) the first scenario (b) second scenario.


Table 4. The utility cost coefficients for 24-h time intervals of case 2.

t	
 ($/MWh2)	
 ($/MWh)	t	
 ($/MWh2)	
 ($/MWh)
1	0.0385	0.23	13	0.2324	1.5
2	0.026	0.19	14	0.5795	4
3	0.0248	0.14	15	0.2389	2
4	0.017	0.12	16	0.2533	1.95
5	0.0168	0.12	17	0.0677	0.6
6	0.028	0.2	18	0.0799	0.41
7	0.0357	0.23	19	0.0623	0.35
8	0.055	0.28	20	0.0662	0.43
9	0.2229	1.5	21	0.1219	1.17
10	0.6369	4	22	0.0653	0.54
11	0.7568	4	23	0.0464	0.3
12	0.616	4	24	0.0433	0.26
Fig. 13 shows all the generation unit output powers for case 2. According to the simulation result, the load demand has been satisfied in each iteration that can validate the high capability and accuracy of the proposed technique in tracking the load changes at any time.


Download : Download high-res image (233KB)
Download : Download full-size image
Fig. 12. Dispatchable generator incremental costs in intervals 22 and 23 for case 2.

To compare the proposed technique with centralized techniques, the problem was solved with a fast-centralized technique (interior point technique) [6] with the same PC. The results prove that the proposed technique is much faster than the conventional centralized technique (95.5 times faster with the same result). It should be noted that the running time will be shared between the agents. Thus, the proposed technique is faster than this (the effect of the response time of the fog layer has not been analyzed). Moreover, the error for total cost function in comparison with the centralized method is 0.0000149, which is very small. It is worth noting that the total cost is $115 090.8 and the CPU time for each agent is 0.15 (s).


Download : Download high-res image (473KB)
Download : Download full-size image
Fig. 13. Generation unit output powers for case 2.

5.3. Discussion
In this paper, a new distributed technique based on the three-layers cloud–fog computing has been proposed for the optimal economic dispatch and monitoring of the load changes within the MG. By analyzing the results, the following features can be concluded.

(1) Higher speed: The proposed technique has a very high convergence speed in both normal and un-normal conditions. The model is also designed to prevent the direct communication of agents and to take benefit of distributed optimization techniques, simultaneously. Using the modified distributed consensus-based technique can potentially contribute to achieving the optimal dispatch solutions in the presence of non-dispatchable and dispatchable power resources with the abrupt changes in attendance status or a load of agents

(2) Higher accuracy: The proposed technique has higher accuracy than the conventional centralized technique that was proposed in [6]. As proven, the proposed technique can accurately dispatch the units in a very short time for all dispatchable and non-dispatchable units. The error of the total cost function of the proposed technique is very close to the conventional centralized techniques with a much faster response. Also, as shown in the results, the accuracy of tracking of the load changes of the proposed technique is much higher than the conventional technique at any time interval.

(3) Real-time monitoring: A very fast response (around 96 times faster) that can be achieved with the proposed three-layer cloud–fog device framework in comparison to the conventional centralized technique provides a real-time monitoring of the microgrid. This is achieved due to using the high-capability of the cloud–fog in the proposed technique to calculate the economic dispatch with the modified distributed consensus-based technique.

6. Conclusion
In this paper, a fuzzy adaptive technique, as well as the cloud–fog-device framework with a new distributed consensus-based approach has been developed to find the economic power dispatch considering changes of load demand and agent sudden entries or exits, when non-dispatchable and dispatchable renewable sources were used. To assess the proposed framework of high performance and also provide a realistic model, different renewable energy sources were implemented on a test microgrid system. Then, the proposed technique has been tested on the modified 6 and 14 bus microgrids. The simulation results show the high accuracy of the model in the load tracking of the microgrid at any time. Moreover, results demonstrate the real-time applications of the proposed method in the load tracking of the microgrid at any time. Furthermore, accurate performance and high satisfaction of the proposed framework against abrupt load demand change,​ when high-economic considerations are provided. The proposed technique helps to implement the microgrid in a fully distributed system by the data transfer security among all agents. The high computational efficiency of the proposed method could enable real-time microgrid operation, which is helpful under extreme conditions, e.g., cyber/physical attacks, contingency, and natural disasters when the fast monitoring of the grid is vital to save the grid form a severe blackout.