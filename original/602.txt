Abstract
Line-of-sight (LOS) is a critical requirement for mmWave wireless communications. In this work, we explore the use of access point (AP) infrastructure mobility to optimize indoor mmWave WiFi network performance based on the discovery of LOS connectivity to stations (STAs). We consider a ceiling-mounted mobile (CMM) AP as the infrastructure mobility framework. Within this framework, we propose two heuristic algorithms (basic and weighted) derived from Hamming distance computation and a machine learning (ML) solution fully exploiting available network state information to address the LOS discovery problem. Based on the ML solution, we then propose a systematic solution WiMove, which can decide if and where the AP should move to for optimizing network performance. Using both ns-3 based simulation and experimental prototype implementation, we show that the throughput and fairness performance of WiMove is up to 119% and 15% better compared with single static AP and brute force search.


Keywords
Infrastructure mobility
mmWave WiFi
Heuristic algorithms
Machine learning (ML)


1. Introduction
WiFi is a ubiquitous and impactful wireless technology. According to the Cisco Visual Networking Index report [5], WiFi is predicted to generate 51% of total internet traffic in 2022. Due to the significant increase of internet traffic generated by WiFi, there is a pressing need to improve the WiFi network performance. mmWave is emerging as a key technology for next-generation WiFi networks among the latest WiFi related technologies. The mmWave WiFi standard (e.g., IEEE 802.11ad) operates in the 60 GHz unlicensed spectrum. It can deliver multi-gigabit (~7 Gbps) performance primarily by virtue of using a large bandwidth (greater than 2 GHz). While the potential performance is quite promising, mmWave WiFi is vulnerable to non-line-of-sight (NLOS) conditions compared to WiFi operating in 2.4 GHz or 5 GHz spectrum. The performance of mmWave communications drops significantly when the wireless link has an obstacle such as a wall or cabinet in its way. Given the fickle nature of mmWave communications, it is expected to be predominantly used in a dual-band (or tri-band) configuration that works along with legacy WiFi.

In this context, it is likely that mmWave WiFi can deliver considerably better performance, but that the performance cannot be guaranteed and will be dependent on the existence of LOS conditions. LOS conditions are a function of the physical environment, but communication technologies hitherto have had no ability to improve the physical conditions when necessary. Historically, the design of algorithms and protocols for WiFi networks has been based on the assumption that the stations (STAs) are mobile, and the AP is static. STA mobility, furthermore, is driven by user needs and behavior, which can potentially lead to NLOS connectivity. With the recent and significant advancements in robotics and embedded systems, infrastructure mobility can be meaningfully and practically devised to optimize WiFi network performance. Specifically, a WiFi AP with the freedom of mobility can discover an optimal location for itself and move to that location to offer the best possible performance for the overall WiFi network. Given that mmWave WiFi has a critical requirement on LOS connectivity, infrastructure mobility becomes an especially attractive degree of freedom for mmWave WiFi, where the creation of LOS connectivity can have a profound impact on the overall network performance.

Related works have mainly explored a floor-based mobile AP that navigates its way around obstacles for WiFi networks operating in 2.4 GHz or 5 GHz spectrum due to the robotic framework simplicity [8], [13], [12]. In this work, we explore a more effective framework for mmWave WiFi - a ceiling-mounted mobile (CMM) AP that moves on an actuator platform, where the CMM AP can potentially achieve higher LOS probability to STAs compared with floor-based AP mobility. Within this framework, we focus on the LOS discovery problem. Explicitly, we define the LOS discovery problem as how to figure out the LOS connectivity between all available AP locations and target STAs. An idealized solution to this problem is to calculate the optimal location based on a geometric problem formulation, assuming that the locations of the STAs and the locations, shapes, and even materials of the obstacles in the physical space are known. Then, it is trivial to identify the LOS connectivity between target STAs with all possible locations of AP on the actuator platform. However, discovering the physical attributes of STAs and the physical attributes of obstacles (especially the material of obstacles) is either non-trivial or expensive.

In this context, we present two classes of approaches to solve the LOS discovery problem: algorithms based on heuristics and a machine learning (ML) based solution. While heuristic algorithms are more efficient in terms of the computational complexity, the ML solution provides a better performance. Given it is likely that multiple active WiFi devices exist in a WiFi network and there is rich network state information (e.g., LOS connectivity between the AP and STAs) available, we utilize the network state information as the input to the proposed ML model. The ML model trains itself to predict the desired LOS connectivity information. When network dynamics happen (e.g., when a new STA joins the network), the algorithm can identify whether the target STA (e.g., the new STA) is likely to have LOS connectivity to all possible AP positions. We evaluate the LOS connectivity prediction accuracy of the ML algorithm in different network scenarios, and it achieves prediction accuracy by up to 91%. Then, we incorporate the LOS prediction algorithm in a systematic solution, WiMove, which is designed to maximize the number of LOS connectivity between AP and STAs given the LOS prediction results. WiMove can decide whether repositioning the AP is required and, if so, where to move to. Using both ns-3 based simulation and experimental prototype implementation, we show that the throughput and fairness performance of WiMove is up to 119% and 15% better compared with other approaches.

The following is a summary of our key contributions:

•
We present algorithms based on heuristics and ML solution for a CMM AP to determine the LOS connectivity between all available AP locations on the actuator platform and target STAs. The proposed approaches use a novel methodology to recalculate the LOS connectivity when network condition changes by purely relying on network state information. The proposed heuristic algorithms, including a basic version and a weighted version, are based on the computation of Hamming distances, which reflect the behavioral similarity between STAs. For the proposed ML solution, we construct a neural network architecture in order to fully exploit the available information.

•
We then incorporate the ML LOS prediction algorithm into a systematic solution, WiMove. In order to optimize network throughput and fairness, WiMove is able to identify the optimal AP location with a maximized number of LOS connectivity between AP and STAs. Then, we present the evaluation results for WiMove using both simulations and experimental prototypes. We show that the throughput and Jain's fairness index of WiMove performs up to 119% and 15% better compared with other approaches.

A preliminary conference version of this paper appears in [14]. Our initial conference paper provides only a simple version of the heuristic algorithm. In this manuscript, we include significantly more contents about heuristic algorithms for an in-depth discussion, such as proposing a novel weighted heuristic algorithm, elaborating on the concepts and details of heuristic algorithms, providing an analysis toward their computational complexity, and assessing heuristic algorithms through simulations. We believe that heuristic algorithms have the significant advantage of practicality in terms of computation complexity and hence focus on the advanced heuristic algorithm.

The remainder of this paper is organized as follows. In Sec. 2, we provide a brief background overview on several key concepts that are related to the paper. The LOS discovery problem is formulated in Sec. 3. We elaborate on the proposed heuristic algorithms (basic and weighted) in Sec. 4 and the proposed ML solution in Sec. 5. The simulation results of the proposed approaches toward the LOS discovery problem are presented in Sec. 6. In Sec. 7, we introduce the proposed systematic solution WiMove. The related works are discussed in Sec. 8. Finally, Sec. 9 concludes this paper.2

2. Background overview
In this section, we provide a brief background overview about several key concepts that are related to this paper, including mmWave WiFi, LOS in mmWave networks, and LOS and infrastructure mobility.

2.1. mmWave WiFi
The essential advantage of the mmWave WiFi as compared to legacy WiFi operating in 2.4 GHz or 5 GHz is the availability of a large amount of unlicensed spectrum. Taking advantage of the large spectrum available, the bandwidth supported by mmWave WiFi standard 802.11ad is 12.5x larger than the bandwidth supported by the latest non-mmWave WiFi standard 802.11ax. However, achieving the multi-gigabit performance in mmWave WiFi networks is not a trivial problem, since the mmWave signal propagation characteristics significantly differ from those of the legacy spectrum. The major difference is that mmWave communication has extremely high signal attenuation [31] generally caused by: 1) high propagation loss: there is an additional signal attenuation of 22 dB at 60 GHz compared to that of 5 GHz based on the free space path loss model and the properties of the propagation media can also significantly increase the signal attenuation (e.g., oxygen absorption or rain attenuation); 2) high penetration loss: the attenuation impact is amplified when there is shadow fading or NLOS between the transmitter and receiver pair; and 3) sparse multipath diversity: multipath components propagating through objects tend to have low signal power due to longer propagation paths and additional reflection loss. Due to these features of mmWave communication, NLOS can have a severe impact on mmWave WiFi performance. Note that a consequent advantage of mmWave communication compared with the legacy frequency is that the high signal attenuation naturally lowers the probability of interference.

2.2. LOS in mmWave networks
Based on the harsh mmWave signal propagation characteristics, it is likely that robust receiver signal quality is hard to achieve. While beamforming can be utilized to combat the severe propagation loss in mmWave communication, the additional loss caused by NLOS can lead to severe performance degradation. Related work shows that SNR of NLOS path is on average 16 dB lower than LOS path [1]. Note that for 802.11ad [10], a 2 dB additional loss could cause a 1 Gbps performance drop when the modulation and coding schemes drop from 23 to 22. Thus, providing high and robust receiver signal quality is an essential problem for mmWave WiFi. In this context, in order to achieve multi-gigabit performance, LOS connectivity is highly critical in mmWave networks. In a simple experiment to observe the impact of NLOS in mmWave WiFi, we build an mmWave link using a TP-Link Talon AD7200 AP and an Acer Travelmate P648 laptop. We observe that obstacles such as a wall, a metal cabinet, and a cardboard box can degrade the performance of an ideal link with LOS connectivity from 1 Gbps to 0 Gbps, 0 Gbps, and 0.52 Gbps, respectively. Even though LOS connectivity provides critical benefits for mmWave communication, achieving LOS connectivity is not trivial. Consider typical indoor scenarios consisting of randomly located obstacles with various dimensions and materials that could potentially block the mmWave link. Also, both mmWave STAs and the obstacles can be dynamic, which prevents the possibility of predetermining the ideal AP location with optimized LOS connectivity to STAs.

2.3. LOS and infrastructure mobility
To optimize LOS connectivity in an mmWave network adaptively, we consider infrastructure mobility as a promising candidate solution, as infrastructure mobility allows for changing the location of the AP adaptively. Fig. 1 shows a scenario with a CMM AP and randomly distributed obstacles, where the obstacle density and dimension follows distribution based on real-world measurements. The gray cuboids, white cuboids, and black solid circle represent the CMM AP with its platform, obstacles, and the STA, respectively. Based on the performance analysis of various platform shapes [15], the 1D linear actuator platform is considered in this work. In Fig. 1, the CMM AP initially located at the center of a linear actuator platform cannot provide LOS connection to the STA. Given the degree of freedom of AP mobility, the AP can move to a location on the side of the platform where LOS connectivity can be provided. On a more generalized note, using simulation-based statistical analysis, we identify that a CMM AP operating on a 3 m long linear actuator provides a 70% increase in LOS probability coverage compared with a static ceiling-mounted AP. With a larger movement range provided by the actuator platform, higher LOS connectivity probability can be achieved, but the cost also becomes more expensive. It should be noted that this work investigates the application of infrastructure mobility in the context of mmWave WiFi due to the critical impact of LOS connectivity for mmWave communication. This approach is also generally applicable to other types of wireless networks (e.g., wireless sensor networks, legacy WiFi, and robotic wireless networks), since wireless link performance generally benefits from LOS connectivity.

Fig. 1
Download : Download high-res image (173KB)
Download : Download full-size image
Fig. 1. Infrastructure mobility providing LOS.

3. The LOS discovery problem
The network scenario considered in this work is a single room with a single CMM AP serving multiple single-hop STAs, where the CMM AP platform is mounted on the center of the ceiling. For simplicity, we use LOS connectivity as network state information. For both the AP and STAs, it is assumed that both 5 GHz and 60 GHz WiFi radios are available. The STAs communicate with the AP, which records the time stamp of each received message, the LOS connectivity information and their intention to connect to the AP through the 5 GHz band. The AP can move to P discrete available positions on the platform.3 There are M STAs in this network scenario at a specific time instance t. Suppose the LOS connectivity among the M existing STAs and LOS connectivity between the AP and each of the M existing STAs are known to the AP. At a subsequent time instance (e.g., ), there is an  STA intending to connect to the AP through mmWave and sending a short broadcast mmWave “LOS testing” message to the M existing STAs. The STAs receiving the broadcast message report their LOS connectivity to the  STA as “LOS” to the AP over the 5 GHz band. Upon receiving the first LOS report, the AP waits for subsequent LOS reports for a time duration , which is equal to the time difference between the first and last LOS reports resulting from the previous joining STA (if not applicable, select a reasonable predetermined time duration) plus a predetermined constant time duration (to ensure the complete collection of LOS reports). Then, the AP declares “LOS report collection completed” (i.e., all STAs receiving the broadcast message should have reported), and labels the LOS connectivity between the STAs not reporting and the  STA as “NLOS”. If any LOS report arrives later than , then the corresponding LOS connectivity information will be updated after the current process finishes. This is a source of LOS connectivity information inaccuracies, which have been taken into account in the evaluation in Secs. 6 and 7. Suppose the resulting overhead is negligible. Then at time , we can assume that the STA-STA LOS connectivity matrix between  STAs and AP-STA LOS connectivity matrix between AP and M existing STAs are known to and stored in the AP (the data collection methods are described in Sec. 7). The LOS connectivity of the new STA with all available AP locations is unknown.

LOS connectivity is defined as a binary variable with 1 representing LOS and 0 representing NLOS. We define  representing the LOS connectivity between device i and device j. For example, for AP at location p (with ) on the actuator platform,  represents LOS connectivity status between the AP at location p and STA m (with  at ). Specifically, we consider the LOS connectivity matrices with two pieces of information: 1) : it represents the LOS connectivity status between all STAs at time instance : and 2) : it represents the LOS connectivity status between all available AP locations with all STAs at a time instance : where  represents the LOS connectivity between AP at location i and STA j. Within this scope, as network dynamics happens (e.g., a new  STA joins the network), the objective is to identify AP-STA LOS connectivity vector  between AP and  STA at time instance :(1)

Given the AP-STA LOS connectivity vector , the AP can then optimize the LOS connectivity to the targeted STA. With this network problem definition, we restrict the scope of this work to the following: (i) We only consider a single WiFi network where a CMM AP serving multiple single-hop STAs in a single room; (ii) This work aims to optimize mmWave WiFi network performance. For STA to have an NLOS connection with the AP, we assume 5 GHz is utilized to provide WiFi connectivity.

4. Heuristic algorithms
In this section, we present the proposed heuristic algorithms, including a basic version and a weighted version, which leverage the available LOS connectivity information  and  to solve the LOS discovery problem.

4.1. Motivation
To address the LOS discovery problem, an intuitive way is to adopt a deterministic solution which requires the AP to directly communicate with the target  STA in each of P discrete available positions to obtain necessary information. However, the deterministic solution is infeasible since the aggregate latency, which results from the AP moving to each of P discrete available positions and (at least) P communications between the AP and the target  STA, poses a prohibitively high overhead to the processing time.

Therefore, we intend to solve the LOS discovery problem using heuristic methods from a probabilistic perspective. At a single time instance, the obstacle map (location and dimension of obstacles) is fixed but unknown. The set of network state information (e.g., LOS connectivity information of  and ) can reveal the information about unknown obstacle map to some extent. Assuming that  and  are given, we intend to identify the LOS connectivity between the target  STA with the all available AP locations at time instance . Similar to AP-STA LOS connectivity vector , we define the STA-STA LOS connectivity vector of  STA to all STAs as  at time instance :(2) Specifically, the connectivity vector  can be collected from the connectivity matrix . Intuitively, if the  STA has an LOS connectivity vector  similar to that of another  STA (), the location of these two STAs is likely to be closed to each other. Given the location similarity between these two STAs, the AP-STA LOS connectivity matrix  is also likely to be similar to each other.

In order to measure the behavioral discrepancy between the  STA and the  STA, we compute the Hamming distance between 
 and 
, expressed as(3)
 Note that a smaller Hamming distance  implies that the 
 STA behaves more similarly to the 
 STA.

4.2. Basic heuristic algorithm
In this subsection, we present the first heuristic algorithm, called basic heuristic algorithm. The basic heuristic algorithm selects the existing STAs with the minimum Hamming distance (obtained through (3)) as proxies, which are expected to behave most similarly to the 
 STA in terms of the LOS connectivity to the AP (in a statistical sense), and generates the prediction for 
 by computing the average LOS connectivity to the AP of the proxies.

For the basic heuristic algorithm, the input data are the LOS connectivity matrices 
 and 
 at time instance 
, while the output is the predicted binary vector 
.

Specifically, the basic heuristic algorithm consists of three main steps:

1) Hamming distance computation: We start by computing the Hamming distance in (3) for , i.e., measure the behavioral discrepancy between the 
 STA and the 
 STA for .

2) Proxy selection: Following the previous step, we obtain M Hamming distance measurements. Next, we identify the set of the existing STAs which correspond to the minimum of the M Hamming distance measurements, V. Note that the existing STAs in the set V are referred to as the proxies, which are expected to have the most similar behavior to the 
 STA.

3) Prediction generation: We derive the average LOS connectivity of the proxies in V to the AP by computing(4)
 
 
 where  is the cardinality of the set V.

Finally, 
 is fed into the comparator (with the threshold of 0.5), which outputs the prediction 
 whose 
 entry can be expressed as(5)
  where 
 is the 
 entry of 
.

While the basic heuristic algorithm is simple, it employs only the LOS connectivity information between the AP and a subset of existing STAs (proxies) during prediction generation, and therefore its prediction does not fully take advantage of the available data. In order to better utilize the LOS connectivity information offered by all existing STAs, we are motivated to propose the weighted heuristic algorithm introduced in the next subsection.

4.3. Weighted heuristic algorithm
In this subsection, we present the second heuristic algorithm, called weighted heuristic algorithm. The weighted heuristic algorithm is extended from the basic heuristic algorithm presented in the previous subsection, accommodating the full LOS connectivity information between the AP and all existing STAs, i.e., the whole 
 matrix, where each column is assigned a weight based on the Hamming distance measured in (3), and predicting 
 with the weighted sum of all columns in 
.

Taking advantage of only a subset of columns in 
, the basic heuristic algorithm does not fully exploit the information in 
 during prediction generation. While the basic heuristic algorithm is applicable to the scenarios where there are only a small number of STAs whose pattern can be captured by several proxies, it is not suitable for a large-scale network where plenty of STAs demonstrate a complicated pattern (see Sec. 6 for simulation results).

Therefore, we are motivated to propose the weighted heuristic algorithm where the information of 
 is fully exploited while the importance of each column is reflected by its assigned weight based on the Hamming distance measured in (3).

For the weighted heuristic algorithm, the input data are the LOS connectivity matrices 
 and 
 at time instance 
, and the predetermined value 
 (which is to be elaborated later), while the output is the predicted binary vector 
.

Particularly, the weighted heuristic algorithm consists of three main steps:

1) Hamming distance computation: Same as the starting step in the basic heuristic algorithm, we compute the Hamming distance  for  using (3).

Note that the Hamming distance  reflects the importance of the information provided by the 
 existing STA to the LOS connectivity prediction for the 
 STA in an inverse manner. Namely, a larger Hamming distance  implies that the information offered by the 
 existing STA is less valued toward the prediction generation for the 
 STA. This interpretation is a key essence of the next step, which assigns the weights to the columns of 
 based on the Hamming distances obtained in this step.

2) Weight assignment: During the previous step, we obtain the measured Hamming distances, which are used to determine the weights for the columns in 
.

In order to predict the LOS connectivity between the AP and the 
 STA, the columns in 
 are to be employed. Given that the Hamming distance implies the importance of the provided information in an inverse manner for an existing STA, the weight of a specific column in 
 is chosen as the reciprocal of the corresponding Hamming distance. Note that when the Hamming distance is equal to zero, it is replaced with a predetermined value 
, which is a positive real number, to avoid division by zero.

Consequently, for the 
 existing STA, the initial weight of the 
 column in 
, 
, is obtained as(6)
 
 
  which will be used to compute the weighted sum in the next step.

3) Prediction generation: Following the previous step, we obtain the weights for the columns in 
. Note that the prediction 
 is derived from the weighted sum of all columns in 
. Based on the weights obtained in the previous step, the weighted sum can be derived as(7)
 

For the convenience of further processing, we would like to scale the entries in 
 such that the scaled entries are within the interval . Given that 
 is a matrix with only binary entries, the entries in 
 will be scaled to lie within the interval  if we normalize 
 such that the normalized 
 is a convex combination of all columns in 
. Note that for a convex combination, the coefficients should be non-negative and the sum of coefficients should be equal to 1.

This can be achieved by dividing the weighted sum by the sum of weights and obtaining the normalized weighted sum, which can be expressed as(8)
 
 
 
 
 
 where 
 and 
, which proves that 
 is a convex combination of all columns in 
. Thus, the entries in 
 are within the interval .

From (8), it can be observed that the information contained in 
 is fully exploited. For the 
 existing STA, the portion of contribution of its corresponding column 
 toward the prediction is reflected by the value of 
.

Finally, same as in the basic heuristic algorithm, 
 is passed through the binary comparator (with the threshold of 0.5), which generates the LOS connectivity prediction 
, whose ith entry can be expressed as(9)
 

4.4. Computational complexity
For the two heuristic algorithms (basic and weighted) proposed for the LOS discovery problem, we present their computational complexities in terms of the number of multiplication/division operations involved. Note that the big-O complexity of a multiplication operation is the same as that of a division operation.

The Hamming distance computation, which is shared by both heuristic algorithms, can be done with only XOR and addition operations (since the LOS connectivity is represented by either 0 or 1), and does not require any multiplication/division operation.

Consider the subsequent steps in the basic heuristic algorithm. After obtaining the set of proxies V (which involves only comparisons), the columns corresponding to V in 
 are summed up (which involves only addition operations). Then, the sum is divided by the cardinality of the set V, i.e., , which involves a single division operation. (Note that the final comparator involves only comparisons.) Therefore, the total computational complexity of the basic heuristic algorithm is .

Next, consider the subsequent steps in the weighted heuristic algorithm. The weight computation involves (at most) M division operations (due to the M Hamming distances), while the weighted sum can be done with only addition operations (since the LOS connectivity is represented by either 0 or 1). Then, the weighted sum is divided by the sum of weights (where the sum can be done with only addition operations), which involves a single division operation. (Note that the final comparator involves only comparisons.) Therefore, the total computational complexity of the weighted heuristic algorithm is .

Based on the above, the two heuristic algorithms (basic and weighted) proposed for the LOS discovery problem are efficient in terms of their low computational complexities.

5. ML framework
In this section, we present the ML solution, which employs a neural network architecture to fully exploit available information, to the LOS discovery problem.

5.1. Motivation
Despite their efficiency in terms of the computational complexity, the proposed heuristic algorithms (both basic and weighted) can provide only a limited accuracy toward the LOS discovery problem (see the simulation results displayed in Sec. 6).

In order to further improve LOS prediction accuracy, we identify two limitations in the proposed heuristic algorithms that can be addressed. 1) Given there is a rich set of network state information other than LOS, it is not trivial for the heuristic algorithms to jointly consider multiple types of input data (e.g., LOS connectivity, RSS, and location of STAs); 2) When data samples are limited, the data set may not provide enough information for the algorithm to achieve reasonable prediction accuracy.

Therefore, to further improve the prediction accuracy, we consider an ML approach to address the aforementioned limitations. The proposed ML approach can take into account multiple network state information as input, and the time complexity will be constant for an offline trained model. The problem to predict the LOS connectivity of the 
 STA with the AP is represented and solved in a supervised fashion. Thus, keeping the fact in mind that the underlying relationship between input and output is actually a skewed representation of the fixed obstacle map, we utilize parametric function approximation approaches to learn this latent structure. While we are aware that it might not be possible to learn the full obstacle map, we aim to extract as much possible information in an attempt to maximize the prediction accuracy. In our ML LOS connectivity prediction framework, we use artificial neural networks (ANNs) as a recipe for parametric function approximation.

5.2. Input features and the output
We consider two representative input features: 1) the LOS connectivity information, which can be collected using the LOS estimation technique [30], which explores space and antenna diversity to identify LOS connectivity; 2) localization information of STAs, that can be obtained with reasonable accuracy based on [34], which utilizes RSSI-based location-clustering techniques. The input data are present in the format of 1) LOS connectivity matrix between STAs, 
, and LOS connectivity matrix between AP and STAs, 
, and 2) the localization matrix of STAs in the form of three-dimensional cartesian coordinates. The input data are generated in accordance with practical estimation techniques for both LOS and localization prediction and hence account for the uncertainty involved. The labels (ground truth) for training are present in the format of 
 i.e., the LOS connectivity matrix of 
 STA with the P possible locations of the AP.

Given the network has  STAs, the 
 matrix has total ⁎ features and the 
 matrix has ⁎ features. The localization matrix for  STAs consists of  features. The input feature vector X is obtained by concatenating these three feature vectors into a single vector of size 
. The network outputs 
, a P sized probability vector representing the probability of LOS connectivity of 
 STA with P locations.

5.3. Network
We use a multi-layer perceptron network [9] with the number of hidden layers and neurons configured to work across different network scenarios. The flattened input feature vector of size 
 is fed into a fully connected network as shown in Fig. 2 with 3 hidden layers. The 
 hidden layer has a total of 
 neurons. The 
 neuron in the 
 layer is connected to the 
 neuron in the 
 layer with a weight of 
. 
 represents the bias of the 
 neuron in the 
 layer. The activation of the 
 neuron in the 
 layer, i.e. 
, is calculated through the forward propagation rule as(10)
 
 where σ applies non-linearity to the model with the ReLU activation function,(11)

Fig. 2
Download : Download high-res image (361KB)
Download : Download full-size image
Fig. 2. Neural network architecture.

Finally, we use the softmax layer [16] before the output layer to transform the output logits to the probability vectors. The model is trained through the backpropagation rule, using weighted cross-entropy loss defined as(12)
 
⁎
 Here, 
 represents the softmax probability of output logits, and w is calculated as the ratio of NLOS to LOS connectivity using training data, i.e., the ratio of the number of 0's to the number of 1's among the 
 entries of 
. As the ratio of NLOS to LOS connectivity in the data samples may be imbalanced, the weighted cross-entropy loss with weight w balances the loss function to avoid any local minima. Using the available training data bank, 
, of N samples, the loss function is minimized using stochastic gradient descent (SGD) with momentum optimizer [22]. In SGD, a batch of B training samples is randomly selected out of N training samples, and the weights and biases are updated through the backpropagation rule. A fraction of the gradient in the previous iteration is retained with the “coefficient of momentum”. At each learning iteration, the learning rate is decreased over time to optimize performance and to increase the convergence rate [11] of the algorithm. While training, we also augment the training set by a random permutation over the sequence order of the STAs in the input features. This not only increases the training set size but also improves the convergence of gradient descent by avoiding any STA-order based local minima. The random permutations prevent the ML architecture from extracting features based on the STA ordering.

Based on the proposed ML framework, we identify the following two potential trade-offs: 1) as the number of data sample increases, the prediction accuracy also increases, and 2) as potential locations of STAs decreases, the prediction accuracy also increases due to fewer input possibilities.

6. LOS prediction evaluation
In this section, we evaluate the performance of both heuristic algorithms and ML solution toward the LOS discovery problem through simulations. We utilize the customized ns-3 simulator [15] to generate network scenarios to collect the required data samples. By tuning network scenarios, we are able to generate a large number of data samples and measure corresponding network performance.

6.1. Simulation platform
To incorporate the features of indoor configurations and 802.11ad, we make the following modifications to the default ns-3 simulator.

Simulation of Indoor Scenarios: Due to the lack of an indoor scenario model in ns-3, we used the following indoor model. A room is simulated as a specific three-dimensional space with a given obstacle distribution model. To simplify the simulations, we assume that the obstacles are modeled as cuboids. To simulate practical scenarios, we consider that the placement of the STA follows the following distribution: an obstacle is uniformly selected as the base location for the STA, and the STA is uniformly distributed on top or sides of the selected obstacles.

To accurately simulate indoor obstacles, the implemented obstacle model has the following features:

•
The center of the obstacle follows a Poisson point process. It defines the probability for obstacles to be uniformly placed in an indoor scenario.

•
The x, y, and z dimension of obstacles follow a truncated normal distribution to constrain the maximum and minimum of obstacle dimension.

•
The material of the obstacle is uniformly chosen from [2] to represent materials with various penetration losses.

We show the default parameters used in the simulation in Table 1. The parameters are derived by using a real-life physical space (a lab environment) as a guiding example. To build a cuboid-based obstacle model, the x, y, and z dimensions are collected based on the largest dimension of a measured obstacle. We then collect the number of obstacles in the lab space as n. To calculate the x, y, and z dimension distribution parameters, we use the distribution fitter in MATLAB to calculate the best fit normal distribution with mean 
, 
, and 
, and standard deviation 
, 
, and 
. The maximum and minimum of x, y, and z dimensions of obstacles are utilized as the range limitation in the truncated normal distribution.


Table 1. Default parameters.

Settings
Size of room (m)	(9, 4, 3)
(μx,μy,μz) (m)	(1.08, 0.28, 0.61)
(σx,σy,σz) (m)	(0.46, 0.08, 0.21)
Platform location	Center of the ceiling
Platform orientation	Parallel to shorter edge
Platform length (m)	3
P	30
npl	2
σm	2.24
T	10,000
Simulation of 802.11ad: We use the 802.11ad model based on [4]. The simulator provides all techniques that are essential for 802.11ad, such as beamforming training and steering, hence providing an accurate simulation environment for 802.11ad. The mmWave channel is another essential component of simulating the performance of 802.11ad. To incorporate shadow fading based on information of mmWave WiFi devices and obstacles, we consider the impact of shadow fading and multipath separately. Based on experimental evaluation [23], we consider the log-distance based path loss model as follows:(13)
⁎
⁎
 
 where 
 is the path loss at a reference distance 
, 
 is the path loss exponent, d is the distance between two communication devices, 
 represents shadow fading where the penetration loss is calculated based on the obstacles' location, dimension and material between mmWave WiFi devices, and 
 represents the normally distributed multipath fading with 
 as the standard deviation. Particularly, 
 is 0 when the communication link is in LOS connectivity. We collected the average of 5 sets of experimental estimations of the log-distance based path loss model to collect 
 and 
 based on [23], which are presented in Table 1.

Data Samples Generation: To generate data samples using the above ns-3 model, we initialize the network scenario by generating a random network scenario like Fig. 1. Then, we deploy M STAs following the STA distributions mentioned above. At each time step, network dynamics (e.g., STAs join or leave the network) happen based on the Poisson distribution with an expected rate of one unit per time step. We then collect network state information (i.e., STA-STA LOS connectivity matrix, AP-STA LOS connectivity matrix, and STA location matrix) for each time instance t. Specifically, we incorporate the error model of LOS estimation and localization based on the prediction cumulative distribution function (CDF) presented in [30] and in [34], respectively. The default parameters of the number of STAs M, the number of data samples T, and the number of available AP locations P are described in Table 1.

6.2. System settings
We set the value of 
 as 0.8 for the weighted heuristic algorithm. We use Tensorflow to implement and run the ML models. We use three hidden layers in the model with 1024, 512, and 256 neurons, respectively. A default batch size of 256 is considered except for the cases where the total training sample size is smaller than 256. The learning rate is initialized as 0.15 and decreased with a factor of 0.9 every 5000 steps. We split the available data into two sets: 1) the training set comprises of 70% of the data and is used to learn the network weights, and 2) the remaining 30% set is used for testing. Additionally, we also randomly permute the labels of test sets to validate that the ML model is learning meaningful latent structure in terms of the relationship between inputs features and output labels.

For the LOS connectivity prediction of all AP locations, the performance metrics are found very similar with insignificant variance. Hence, in subsequent analysis, we only present the average performance over all the AP locations. We use three different metrics to evaluate the performance of the proposed approaches, namely overall accuracy, precision, and recall for LOS connectivity. Precision for LOS connectivity is defined as the fraction of actual LOS connections out of total predicted LOS connections. Recall informs how accurately the model can predict LOS connections out of actual LOS connections. It is to be noted that this is a binary classification problem (predicting the presence of LOS connection) and hence, a random classifier will have an accuracy of 50%. As LOS connectivity and NLOS connectivity are not equally distributed, an evaluation based only on accuracy will represent biased results. Hence, we provide precision and recall along with accuracy.

6.3. Impact of number of STAs
We evaluate the LOS prediction performance of the proposed approaches with different numbers of STAs, where , under a fixed obstacle map. From the simulation results shown in Fig. 3, it can be observed that the ML solution significantly outperforms the heuristic algorithms in terms of the LOS prediction accuracy, at the expense of larger computational resource consumption. Between the two heuristic algorithms, the weighted version outperforms the basic version in terms of the LOS prediction accuracy. As the number of STAs increases, the performance of the ML solution remains stably high, while the performance of the heuristic algorithms improves slightly. It is noteworthy that the weighted heuristic algorithm outperforms the basic heuristic algorithm more significantly with more STAs, implying that the weighted heuristic algorithm exploits the available information better than the basic heuristic algorithm within a larger network.

Fig. 3
Download : Download high-res image (373KB)
Download : Download full-size image
Fig. 3. LOS prediction accuracy with different numbers of STAs.

6.4. Impact of obstacle maps
Next, we investigate the LOS prediction performance of the proposed approaches over two different obstacle maps with a fixed number of STAs, where . The simulation results are shown in Fig. 4, in which it can be found that the LOS prediction accuracy of the proposed approaches remains stable over different obstacle maps, exhibiting the robustness of the proposed approaches. Note that Fig. 4 demonstrates a similar trend to Fig. 3b, where the ML solution still significantly outperforms the heuristic algorithms in terms of the LOS prediction accuracy.

Fig. 4
Download : Download high-res image (375KB)
Download : Download full-size image
Fig. 4. LOS prediction accuracy with different obstacle maps.

6.5. Comparison between ML solution and heuristic algorithms
From Fig. 3, Fig. 4, we identify that ML performs significantly better than the heuristic algorithms. These results validate that ML can take advantage of multiple input features and gain more insightful information from jointly considering LOS and location input features. Specifically, LOS connectivity matrices provide network-level relative information of each STA and location matrices provide the physical information of each STA. Even with prediction error, the ML model is able to jointly learn the location of each STA and identify the corresponding LOS connectivity with all available AP locations. Ideally, increasing the number of input features can further improve ML prediction accuracy. In the case of the heuristic algorithms, the introduction of estimation error in data in accordance with error models reduces the performance since it only tries to identify the AP-STA LOS connectivity vector based on fixed matching metrics. In the following section, we will mainly evaluate ML performance due to its high prediction accuracy.

6.6. Dynamic environments
The ML framework presented above requires the environment to be static (e.g., fixed obstacle map). That is, the trained ML model works when there is no change in the obstacle map. We first classify dynamic scenarios and evaluate ML in different dynamic scenario settings. Specifically, we classify network dynamics into two types: 1) STA dynamics: an active STA changes its location (i.e., an STA which is a mobile client), or a static STA joins the network or leaves the network, and 2) obstacle dynamics: an obstacle in target scenario moves to another location. These dynamics can be identified based on network state information available. STA dynamics can be identified by the change of STA location and LOS connectivity to other static connected STAs. Obstacle dynamics can be identified by the change of STA-STA LOS connectivity matrix, i.e., the effect of obstacle movement on LOS connectivity is reflected on the change in the entries of STA-STA LOS connectivity matrix. STA dynamics do not skew ML model prediction accuracy as the underlying obstacle map is unaffected. However, obstacle dynamics change the obstacle map, which can lead to decreased performance of the ML model. Thus, we will target obstacle dynamics in the rest of this section. Considering the case in which the ML model is retrained after an obstacle movement is detected, the performance is now limited by the frequency of obstacle movements. Consequently, the proposed ML solution is more suitable for scenarios with slow-varying obstacle dynamics (a more general ML solution suitable for scenarios with fast-varying obstacle dynamics is to be studied in future works).

On average, if there is only one obstacle movement event within k time steps, then the achievable performance of the ML model after training from data of k time steps is of interest. The methodology to study the continuous obstacle dynamics scenarios is to train using the data set collected at each k time steps. Specifically, we change the number of data samples collected k from 100 through 10000.

Fig. 5 shows the prediction accuracy when the number of samples increases from 100 to 10000. Clearly, we can observe that there is a tendency that the prediction accuracy increases as the number of data sample increases. Specifically, the prediction accuracy increases from 84% to 90% as the number of data samples increases from 100 to 10000, respectively. Similarly, the recall rate also increases with the number of time steps. However, increasing the time steps does not have a significant impact on the precision metric. The precision varies in the range of 93% to 95%. We also observe that the prediction accuracy for a data set from as low as 100 time steps is reasonably accurate.

Fig. 5
Download : Download high-res image (179KB)
Download : Download full-size image
Fig. 5. LOS prediction accuracy of ML in dynamic scenarios.

7. WiMove: a systematic solution
In this section, a systematic solution of WiMove is first discussed. In this solution, we intend to optimize the mmWave WiFi network performance in the perspective of throughput and fairness. We assume STAs with NLOS with AP can be served using the 5 GHz band (the joint 5 GHz and 60 GHz network optimization is to be considered in future works). With the assumption of equal transmission probability of each WiFi device, network fairness is maximized when the number of LOS connectivity links between AP and STAs is maximized. Therefore, the objective function for AP to identify the optimal location is to maximize the number of LOS connectivity links between AP and STAs. Given this objective function, we will then evaluate WiMove using both simulations and experiments.

7.1. Trivial solutions
Before we introduce the solution of WiMove for the CMM AP in mmWave WiFi, we will first briefly discuss two trivial approaches to provide mmWave service to STAs and the corresponding trade-offs:

•
Single static AP: The static AP is mounted at the center of the ceiling to maximize the overall LOS probability with randomly deployed STAs. This approach has the simplest strategy and minimum cost, but the non-adaptive solution can only achieve limited performance.

•
Brute-force: Another trivial but adaptive approach is a brute-force solution which enables the AP periodically traversing the entire platform in order to collect network status information. At each available AP location, the AP utilizes LOS estimation or localization techniques to collect network status information. Based on the collected global knowledge, the location with the maximum number of LOS STAs can be identified and then the AP moves to the ideal location. This approach is straightforward, but it introduces a significant amount of time complexity. Thus, the large convergence time to achieve the ideal location leads to a degradation of network performance.

7.2. WiMove overview
Given the ML solution presented in Sec. 5, we intend to employ it in a practical system to evaluate the overall system performance. To perform such an ML algorithm, we assume that there is a cloud server which connects to AP with Ethernet. The cloud server can collect network status information from the AP, train the ML model, and inform the AP about AP-STA LOS connectivity vector with a target STA (e.g., through the technique in [20]). In this context, to achieve the objective of maximizing the number of LOS connectivity between AP and STAs, the overall systematic solution of WiMove is presented as follows:

•
Initialization brute-force: The AP uses the brute-force discovery to collect the location information of the  STAs and obtains the LOS connectivity information among the  STAs from the STAs (which employ short broadcast mmWave “LOS testing” messages) through the 5 GHz band. Upon receiving the information, the AP samples it into data samples. The AP then informs the cloud server with the data samples at the current time instance, which are then fed into the ML model for training. If network dynamics happen, the algorithm goes into the phase of Network dynamics.

•
Network dynamics: As discussed in Sec. 6.6, there are two types of network dynamics: STA dynamics and obstacle dynamics. The system deals with each dynamic scenario in the following manner: 1) STA dynamics: the AP collects the network state information in the current time step and sends the information to the cloud server, and then the AP collects LOS prediction results from the cloud server, identifies the closest optimal location, and goes into the AP Movement phase; 2) obstacle dynamics: re-initialization of the ML algorithm is required, and it goes into the Initialization brute-force phase to retrain the ML model.

•
AP movement: After identifying the target location (among the P discrete available positions) through the ML solution, AP moves to the identified target location and goes into the Reach Target phase. Note that, the AP will collect ground truth network status information with the target STA during movement.4 If the current location satisfies the objective function due to false negative prediction, the AP will stop at the current location.

•
Reach Target: If the AP reaches the target location with a correct prediction, WiMove goes into idle mode. If the prediction is wrong, WiMove goes into the AP movement phase with a newly identified nearest optimal location.

Accordingly, at a specific time instance 
, the WiMove protocol undergoes the above four steps and proceeds toward next time instance 
.
7.3. Evaluation methodology
Consider a room with the CMM AP platform mounted at the default location on the ceiling with parameters following the configurations in Table 1. There are M STAs in the scenario at a specific time instance. We consider instant STA dynamics in the evaluation. STAs join or leave the network based on a Poisson distribution with an expected rate of one unit per minute. The overall evaluation time is 5 minutes. Similar to LOS prediction evaluation, we incorporate LOS estimation and localization error in the network status collection phase.

We evaluate three different approaches for providing 802.11ad service in the network: 1) static AP, 2) brute-force, and 3) WiMove. For WiMove and brute-force, the goal is to identify the nearest location on the platform that maximizes the number of STA LOS connections. The metrics to be studied are 1) number of LOS STAs, 2) aggregate throughput performance, and 3) Jain's fairness index. Specifically, Jain's fairness index ranges from  (single STA has aggregate network throughput) to 1 (each STA has equal throughput).

The three metrics are measured simultaneously once per second for each approach during evaluation, with larger measured metric values signifying better performance. For each metric, we define the CDF at a metric value q as the ratio of the number of measured metric values being less than or equal to q to the total number of measured metric values. At any metric value q, a lower CDF, which implies a higher probability of achieving metric values being greater than q, is desirable. Note that the CDF at the maximal possible metric value is 1.

Simulation configurations: We evaluate the performance of the aforementioned three approaches through ns-3 simulations. The WiMove approach decides whether to adapt the AP location at every time instance when the network dynamics happen. We consider the number of STAs to be 10 at the first time step. The ML prediction accuracy achieves 91% given 7000 time steps of input data samples.

Experimental configurations: In order to evaluate the performance of WiMove, brute-force, and single static AP experimentally, we mounted a 1 m long Progressive Linear Actuator PA-18 [27] on the optimal location of the ceiling in a lab environment utilizing cable zips. This unit is controlled by a central controller through Arduino UNO [3] and Mega Moto Plus [19]. The AP mounted on the actuator is Tp-link Talon ad7200 [26]. The experimental platform is shown in Fig. 6. We use three Acer Travelmate P648 laptops [28] as STAs. To collect training data for ML, the LOS and distance matrices of all possible locations are hard-coded. For WiMove, the controller controls the location of the AP in the discrete dynamic scenario based on the ML feedback. The ML prediction accuracy achieves 90% with 100 time steps of input data samples.

Fig. 6
Download : Download high-res image (66KB)
Download : Download full-size image
Fig. 6. Experimental platform.

7.4. Simulation evaluation
Initially, 10 STAs are active. Based on the Poisson distribution of STA events, the STA number changes at each minute as {-1, -2, +1/-1, +1}, where +1 means a new STA joins the network, -1 means an active STA drops off, and +1/-1 means a new STA joins the network and an active STA drops off simultaneously.

Figs. 7a, 8a, and 9a show the graphs of number of LOS STAs, normalized throughput, and Jain's fairness index, respectively, versus CDF for the three approaches in the simulation. It can be observed that for any metric value in each metric, the corresponding CDF achieved by WiMove is less than or equal to that achieved by single static AP and brute-force, demonstrating the superiority of WiMove. Particularly, brute-force suffers from the large convergence time, while single static AP lacks flexibility as the network changes. Overall, the throughput performance of WiMove is 110% and 30% better compared with single static AP and brute-force, respectively, and Jain's fairness index 14% and 7% better compared with single static AP and brute-force, respectively.

Fig. 7
Download : Download high-res image (179KB)
Download : Download full-size image
Fig. 7. Number of LOS STAs.

Fig. 8
Download : Download high-res image (188KB)
Download : Download full-size image
Fig. 8. Throughput.

Fig. 9
Download : Download high-res image (181KB)
Download : Download full-size image
Fig. 9. Jain's fairness index.

7.5. Experimental evaluation
For the environment setup for experimental evaluation, initially, there are 2 STAs in the network and the STA numbers change at each minute as {+1, -2, +1/-1, +1}.

Figs. 7b, 8b, and 9b show the graphs of number of LOS STAs, normalized throughput, and Jain's fairness index, respectively, versus CDF for the three approaches in the experiment. Similar to the simulation results, the experiment results also demonstrate that WiMove outperforms single static AP and brute-force in terms of CDF. From Fig. 7b, the limitation of single static AP is clearly reflected on its low number of LOS STAs throughout the experiment. Moreover, it can be observed that WiMove is more capable of maintaining high throughput and high fairness than brute-force and single static AP from Figs. 8b and 9b. For instance, WiMove maintains normalized throughput which is greater than 0.7 for 95% of the total time and Jain's fairness index which is greater than 0.9 for 95% of the total time, brute-force maintains such high throughput and high fairness for 60% and 75% of the total time, respectively, and single static AP maintains such high throughput and high fairness for only 20% and 60% of the total time, respectively. Overall, the throughput performance of WiMove is 119% and 29% better compared with single static AP and brute-force, respectively, and Jain's fairness index 15% and 8% better compared with single static AP and brute-force, respectively. In sum, we observe that WiMove dynamically adapts to network conditions and achieves significantly better performance than single static AP and brute-force.

8. Related work
As LOS connectivity becomes a critical bottleneck for mmWave communication, there are many research works that can be employed to compensate for the challenging issue. We categorize related works that have addressed the challenges related to LOS connectivity into three types: 1) multi-band, 2) improving channel quality, and 3) establishing indirect LOS connectivity.

For multi-band approaches, the methodology is that mmWave is only utilized for good (e.g., LOS) connections, and the legacy 2.4 GHz and 5 GHz frequency bands are utilized when the mmWave connections experience poor propagation (e.g., NLOS) conditions. [24] utilizes localization of tracking angle change to steer the beam to a new location for mobile STAs, re-directing ongoing user traffic to the robust interface (e.g., from 60 GHz to 5 GHz). [21] presents a dual connectivity protocol that enables mobile user equipment devices to maintain physical layer connections to 4G and 5G cells simultaneously. These studies work on smooth handover and switching between two frequency bands with the use of session transfer techniques.

To provide good signal reception between AP and STAs, some possible approaches are: 1) infrastructure mobility, 2) multiple APs, and 3) relays. For conventional WiFi, some works have studied mobility-based wireless systems to boost WiFi network performance [8], [13], [12], [29], [6]. In [7], robotic APs make adjustments to their positions to converge to an optimal position. These works study and evaluate the effectiveness of ground-based mobile AP by adopting statistical methods for gain analysis. Another approach is to deploy more than one AP to increase the probability of LOS between AP and STAs. For the multi-AP based approach [18], [17], [25], [25] presents an infrastructure side predictive AP switching solution which can identify a proper AP for a specific STA to connect. These studies formulate the placement of multiple APs into an optimization problem and solve it with various optimization techniques. The third approach is to utilize relays to improve signal quality at the receiver end. [32], [33] present an optimal and efficient algorithm for choosing the relay-assisted path with maximum throughput. These works transform the path selection problem into a graph one and propose graph-based solution.

The third type of methods is to utilize the indirect LOS connectivity between AP and STA, which typically has a higher requirement in terms of propagation environment and usually needs active environment change (which causes additional costs), such as the installment of a mirror which can reflect signals [1]. For example, [35] presents a solution where 60 GHz signals can bounce off data center ceilings, thus establishing indirect LOS between any two racks. These methods often suffer from a lack of robustness against environment changes.

Distinct from the above works, the main novelty of this paper includes the use of the CMM AP and LOS connectivity matrices, which have not been explored in previous literature of this field. Focusing on AP mobility, we propose novel heuristic algorithms and ML solution for the LOS discovery problem in mmWave WiFi networks.

9. Conclusions
In this work, we propose two heuristic algorithms (basic and weighted) and an ML solution for the LOS discovery problem, and present WiMove that uses the proposed ML solution to predict LOS status between an AP and STAs. Upon network dynamics happen, WiMove predicts the location that maximizes the number of STA LOS connections. Using a simulation and prototype evaluation, we show that WiMove can perform up to 119% and 15% better than a static AP and brute force search. The following are the essential future directions to be considered: 1) AP mobility cost analysis, 2) joint optimization of mmWave and conventional WiFi, 3) ML solution for scenarios with fast-varying obstacle dynamics, and 4) instead of predicting the LOS connectivity, consider a multi-classifier ML model to predict the modulation coding scheme (MCS) between AP and STAs, which can be utilized to optimize the network performance in a more fine-grained fashion.

