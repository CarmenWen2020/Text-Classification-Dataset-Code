Abstract
There has been rapid development in the number of Internet of Things (IoT) connected nodes and devices in our daily life in recent times. With this increase in the number of devices, fog computing has become a well-established paradigm to optimize various key Quality of Service (QoS) requirements such as latency, bandwidth limitation, response time, scalability, privacy and security. In this paper, we present a systematic literature review of fog computing. This review article aims to classify recently published studies and investigate the current status in the area of fog computing. In this work, we have discussed the important characteristics of fog computing frameworks and identified various issues related to its architectural design, QoS metrics, implementation details, applications and communication modes. We have proposed taxonomy for fog computing frameworks based on the existing literature and compared the different research work based on taxonomy. Finally, various open research challenges and promising future directions are highlighted for further research in the area of fog computing.

Previous
Next 
Keywords
Fog computing

Frameworks

Edge computing

Applications

Internet of things (IoT)

1. Introduction
In the last decade, cloud computing paradigm has emerged as an effective platform to fulfill the growing demand of end users to process their requests using cloud data centers [107]. In recent times, the demand for the Internet of Things (IoT) based connected devices and applications (such as smartphones, gadgets, Google glass etc.) has escalated at a tremendous rate [132]. Due to this, the servers of cloud computing connect to all these devices due to a huge rush and various issues has been emerged to optimize key Quality of Service (QoS) parameters such as bandwidth, privacy, latency, storage, response time, security and computing [36], [170]. Thankful to the introduction of fog computing paradigm, which braces the IoT concept, in that nearly all of the nodes and devices communicate and interact with each other. The above mentioned issues can be addressed by proposing the fog computing paradigm in academia and industry to a large extent [190].

Research on fog computing is going on and various tutorials & review papers have been published in the last few years. Literature [49], [117], [177] has reported various independent frameworks and architectures for fog computing. These frameworks and architectures are proposed by targeting different IoT applications. However, the existing review and survey papers have not introduced the taxonomy of fog computing frameworks especially. So, there is a need to design a taxonomy of fog computing frameworks to understand the current status of research and identify various research gaps existing in the literature. This article presents a systematic literature review of existing works by considering the frameworks and architectures related to fog computing. This paper will help researchers continue their research in the area of fog computing following the analyses in this review.

1.1. Our contributions
We have proposed a Systematic Literature Review (SLR) on fog computing following the guidelines as suggested by Kitchenham [91]. The main objective of our review is to discuss the important characteristics of fog computing frameworks and identify various issues related to its architectural design, QoS metrics, implementation details, applications and communication modes. Further, a taxonomy for fog computing frameworks is proposed based on the existing literature and compared with different research work based on taxonomy. In addition, we have presented an outline of further improvement and opportunities available to develop and implement the efficient frameworks or architectures for the fog computing. The main contributions of this review article are:

•
Conduct the systematic literature review on fog computing.

•
Discuss the current status of fog computing research.

•
Propose a comprehensive taxonomy to classify the fog computing research into various categories.

•
Compare the existing studies based on different parameters related to identified categories.

•
Highlight the key research challenges and promising future directions in the area of fog computing.

Fig. 1 describes the complete organization of the review paper. The rest of the article is organized as follows: Section 2 discuss the background information of fog computing, which contains three subsections such as context, motivation and related surveys. The review methodology used for this systematic review is discussed in Section 3. In Section 4, the current status of fog computing is discussed in two different subsections: i) analysis of primary studies (based on development, metrics, platform and frameworks) and ii) result outcomes (taxonomy of fog computing frameworks & trends analysis and observations). In section 5, the discussion of results is presented. Further, Section 6 highlights the key research challenges and promising future directions in the area of fog computing. Finally, Section 7 concludes the paper.

Fig. 1
Download : Download high-res image (261KB)
Download : Download full-size image
Fig. 1. The Organization of Survey.

2. Background
This section discusses the background of fog computing, motivation and related surveys.

2.1. Context
With the increase in the number of IoT devices, mobile Internet, and various objects connected through a network, a large amount of data is generated [38]. According to one estimate, approximately 60-70 billion devices will be connected to the Internet by 2022 and would transfer a large amount of data [152]. So, it seems too difficult to handle by traditional computing models such as cloud and distributed computing [60]. In some applications, systems require quick response and mobility support such as emergency response in smart healthcare, traffic light systems and smart grids [172]. In order to overcome issues such as high bandwidth, ultra-high latency, privacy sensitive applications, and geographic dispersion, there is a need of computing paradigm that assists the cloud computing and processes the requests of connected IoT devices with minimum latency and response time [11].

Cisco devised the concept of Fog computing in 2012 to solve the problems of IoT applications in the traditional cloud computing model [30]. Currently, it is encouraged from the OpenFog Consortium that has lately been presented in the various white papers. They described fog computing as “A horizontal system level architecture that allocates storage, computing, networking functions, and controls the nearest connected devices” [129]. It works as a link between IoT nodes/devices and the cloud by empowering storage, data management, networking, and computing on the network nodes [59], [108], [109]. In other way, fog computing reduces the burden of traditional cloud computing data centers [96], [120] and work on the basis of decentralized computing concept to improve the computational speed. Nowadays, fog computing is performing a significant role in the area of agriculture, healthcare, construction, industry, smart cities, smart home, energy-grid, transportation, environment monitoring and climate change monitoring [22], [79], [131], [156]. Fig. 2 illustrates fog computing architecture including IoT Layer, Fog computing and cloud computing layer.

Fig. 2
Download : Download high-res image (241KB)
Download : Download full-size image
Fig. 2. Fog Computing Architecture.

In one of the existing surveys [190], we found a very innovative diagram to discuss various features of fog computing, but as the research has determinedly grown in the area of fog computing. So, there is a need for an updated diagram to present the recent developments in fog computing and integrate the existing features. Fig. 3 describes the various advantages for the application and industrial use, distributing core functions, supporting technologies, devices and research challenges of fog computing. Fig. 3 augments the existing features and presents a fresh and updated key characteristics of fog computing.

Fig. 3
Download : Download high-res image (268KB)
Download : Download full-size image
Fig. 3. Fog benefits for various applications, Industries use, core functions, supporting technologies, devices and research challenges of fog computing.

2.2. Motivation
The evolution of fog computing provides numerous options for networking, storage, and processing data in a fog environment [74]. For example, in industries, some applications need to process the data very fast. So, fog computing builds a low latency network interface between IoT devices to reduce the response time & make communication and processing faster [161]. The fog computing framework is also called an autonomic management framework because it works independently at different IoT nodes by enabling networking, storage, computing, and data management on network nodes within the nearby region [48]. Moreover, a constant Internet connection is not required for a fog computing paradigm to offer effective service. Those services can act autonomously with weak or no Internet connection and transfer significant update to the cloud network whenever connectivity is convenient [104]. Fog computing framework supports end-users to monitor, analyze, process, measure, distribute and control computation, provide storage, communication, and decision-making near the IoT nodes [52]. Several enterprises are using fog computing paradigm in the field of manufacturing, transportation, smart grid, smart cities, agriculture and healthcare [57], [58], [155], [169].

As per the current scenario, there are various challenges related to the design, development, and deployment of fog computing frameworks [7], [48], [60], [74], [104], [108], [109]. The main challenges are based on the design phase: a) to design Service Level Agreement (SLA) management methods for the support of multi-vendor environment for fog computing systems, b) to introduce a scheme that considers multiple objectives such as latency, energy and bandwidth (waiting time, bandwidth, and availability for adequate task offloading techniques), c) to design scalable algorithms for the fog computing framework and also verify the scalability of the algorithms. The challenges related to the development of fog frameworks are: a) develop mobility-aware scheduling and task offloading technique to solve the problem of moving fog nodes, b) develop Software-Defined Networking (SDN)-based monitoring software for resource allocation and management and c) develop stateless and fast protocols for high speed end-users. Furthermore, the challenges based on the deployment of fog frameworks are: a) implement authentication protocols that could communicate with the heterogeneous IoT and fog nodes, b) implement privacy-aware and security-aware load balancing and offloading technique and c) deploy heterogeneous hardware and communication technologies in fog computing frameworks.

2.3. Related surveys
In this section, we have discussed previous related surveys on the frameworks or architectures based on fog computing. As per our best knowledge, no systematic review is existing on the taxonomy of fog computing frameworks in the literature. However, various authors autonomously suggested many frameworks and architectures of fog computing-based on the area of IoT applications [169]. In a general context, frameworks are the set of different rules and tools that are utilized to create and produce something [44]. A framework is a pre-built composition or structure and is precisely composed to extend the specialized or general-purpose functionality [102]. A framework builds a standard and specific idea to give assistance for creating and extending valuable services. Table 1 shows the main concerns of the survey paper related to the fog computing and Table 2 presents the comparison of our systematic review with the existing survey papers based on various key parameters.


Table 1. Review Papers of Fog Computing and their description.

Work	Description
Thien and Colomo-Palacios [170]	Emphasis placed on recent challenges in terms of problems related to structures, services and security. Withal, introduce a taxonomy to identify key challenges, properties and propose promising orientations for future research.
Hu et al. [79]	The main purpose of the survey document was to outline and summarize the architecture of the fog computing model, key technologies, applications, challenges and open-ended questions.
Liu et al. [102]	The principal emphasis of this paper was on the architecture of fog computing frameworks that cover the network and computing aspects. Additionally, both fault tolerance and privacy are taken into account of the framework with optimization methods and potential solutions.
Babu et al. [19]	The main emphasis was on this paper to provide an overview of fog computing, discuss QoS metrics, and future directions for research.
Naha et al. [123]	The main goal of the survey was to assist industry and the research community in integrating and meeting the essential requirements of fog computing. Additionally, discuss subsisting research gaps in resource allocation, fault tolerance, scheduling, Fog-predicated micro services and simulation tools.
Mahmud et al. [107]	The authors focus on the challenges of Fog computing in terms of structural, service, and security-related issues. Using the identified properties and key challenges, a taxonomy of fog computing was also proposed.
Mukherjee et al. [120]	This review aims to contribute fundamentals and network applications of fog computing that avail us to learn anterior research contributions and future research direction to solve various challenges in fog computing.
Mouradian et al. [117]	The article presents a comprehensive review of fog computing that covers the algorithms and architectures of fog frameworks. The research directions and challenges of fog computing were also discussed.
Neware [126]	The main focus of this paper was to provide a tutorial on fog computing and compare it with other computing paradigms, such as MEC, edge computing, and cloudlets. Also proposed a taxonomy of research topics, provided challenges and future directions for research in fog computing.
Fernando et al. [49]	The paper addressed key issues and considered potential solutions to subsisting fog computing problems. Furthermore, conclude with a summary of the weaknesses, and propose an opportunistic architecture.
Ahmed et al. [4]	The paper proposed a study of a representative set of thirty fog applications and the requirements that a general purpose fog platform should fortify.
Hosseinioun et al. [73]	Providing a review of the task scheduling methods in fog computing, purposing a technical taxonomy for the task scheduling methods.
Javadzadeh and Rahmani [84]	The main focus of this paper to present a comprehensive study based on a systematic literature review of works done in the area of fog computing applications in smart cities.
Mahmud et al. [110]	The authors review the current procedures for managing applications in Fog computing and study them in terms of maintenance, architecture and positioning.
Habibi et al. [69]	The main purpose of this paper was to provide a taxonomy of the architectural, algorithm and technological aspects of fog. Also, compare the architectural model of edge, fog computing, mobile edge computing and cloud computing.
Margariti et al. [113]	The author present the survey of simulation tools and modeling methods to examine the system cost in terms of configuration, network, and its applications. The authors also provide an overview of computing simulation tools, pointing their different characteristics, limitations, the efficiency of each simulator.

Table 2. Comparison of Our Review with Other Survey & Review papers for Fog Computing.

Criteria	[170]	[79]	[102]	[19]	[123]	[107]	[120]	[117]	[126]	[190]	[49]	[4]	[73]	[84]	[110]	[69]	[113]	[33]	[114]	OS
Reviewed Year	2016	2017	2017	2018	2018	2018	2018	2018	2019	2019	2019	2019	2020	2020	2020	2020	2020	2020	2020	2021
Taxonomy	Development Process	✔																			✔
Latency & Reliability			✔				✔		✔			✔						✔		✔
Resource Management					✔	✔		✔					✔			✔				✔
Scalability					✔			✔										✔		✔
Security & Privacy	✔		✔							✔		✔				✔				✔
Quality of Service (QoS)				✔	✔			✔												✔
Provisioning						✔				✔										✔
Cost & Energy consumption					✔		✔		✔									✔		✔
Hardware & Software						✔				✔			✔			✔	✔		✔	✔
Communication Method		✔					✔						✔							✔
Applications	✔	✔					✔		✔			✔		✔	✔	✔				✔
Framework Types											✔									✔
Mode of Operations								✔		✔										✔
Comparison	Based on Optimal Parameters										✔									✔	✔
Based on Open Issues		✔		✔														✔	✔	✔
Essential evaluation factors						✔						✔		✔						✔
Systematic Assessment																	✔		✔	✔
SLR pattern		✔												✔						✔
Future Research Directions for Fog Framework										✔										✔
OS: Our Survey (This Paper), SLR: Systematic Literature Review.

Habibi et al. [69] has developed a taxonomy on the subject area of security, software, application, system, networking, and resource management in fog computing that covers algorithms and architecture. A comprehensive study has been done on the architectural perspectives which describes the logical and physical components of the fog computing environment. The authors have compared and evaluated the proposed architectures based on several criteria. This review only covers the architectural view of the fog computing survey. Margariti et al. [113] has presented the survey of simulation tools and modeling methods to examine the system cost in terms of configuration, network, and its applications. The authors have also provided an overview of computing simulation tools, pointing to their different characteristics, limitations, the efficiency of each simulator.

Brogi et al. [33] has proposed a review on the present methodologies to find solution to the service placement problem in fog computing. Also, they have presented a comprehensive summary of the existing algorithms and open-source prototypes. The authors incorporated the literature based on infrastructure characteristics that focus on the optimized metrics. Markus and Kertesz [114] have focused mainly on the classification of software quality. They have analyzed the source code and its features in many simulators.

Yousefpour et al. [190] has provided a survey and proposed a taxonomy for the fog computing. They have discussed the previous papers based on the frameworks and architectures of fog computing. Further, Hou et al. [75] have focused on framework related to vehicular fog computing, apart from conventional fog devices, path computing, enlistee edge computing, and fog nodes as IoT hubs. They have presented an overview on the resource model, generic architecture, and resource allocation framework for the fog computing model.

Fernando et al. [49] have conveyed the central elements of fog computing frameworks and architectures that have provided the opportunity for further research. They have investigated and compared currently available industry related frameworks. Furthermore, they have discussed the parameters such as low latency, dynamicity, scalability, context-aware offloading, and heterogeneity that support the framework of fog computing. Mouradian et al. [117] have provided a broad survey on the fog computing and examined the state-of-art research issues. In this research study, the authors have covered various algorithms and frameworks of fog computing that build efficient fog systems. Mahmud et al. [110] have studied the current management of application in fog computing from the viewpoints of application placement, maintenance and architecture. Furthermore, a taxonomy based on application management has been proposed and future research directions have been identified in the area of application management in fog computing.

Javadzadeh and Rahmani [84] have presented the fog computing-related frameworks for some specific applications of fog and also discussed its several services. The authors have discussed a taxonomy based on the applications of fog computing that split towards and near-real-time applications. Besides, the authors have compared different fog computing frameworks based on various parameters such as application response time, execution delay and resource utilization. The author's also categorized the different frameworks based on the various fog computing applications such as Smart Education, Smart Cities, Municipal Services, Smart Energy and Smart Healthcare [130].

Anawar et al. [12] have explained the fog computing framework as an extremely virtualized computing platform that renders hierarchical computing abilities, including server nodes' support. In this article, the authors have also addressed Quality of Service (QoS) as an essential issue and have categorized it into various parameters such as delay, reliability, capacity, and connectivity [95]. Also, they have concluded that the fog computing framework could support computing for the latency-sensitive applications, large-scale development, and advancement of the IoT platform.

Sarkar et al. [146] and Chiang and Zhang [36] have observed fog computing architectural design and explained the fog computing frameworks that are the perfect platforms for IoT applications such as smart grid, smart cities, and smart home. Gazis et al. [53] have proposed a novel method for industrial viewpoint to implement flexibility of a particular functional demand using the basic concepts of fog computing framework. According to the available surveys, the key shortcomings are as follows:

•
The existing review or survey articles have not provided any taxonomy and systematic assessment specifically for the fog computing frameworks.

•
The existing surveys have not included the essential evaluation factors for the fog computing frameworks.

•
The existing review articles have performed the surveys without or partially used systematic literature review method. In this survey, we have followed the systematic review methodology with authentic article selection criteria.

3. Review methodology
This paper presents a systematic review on fog computing framework as per the guidelines of Kitchenham et al. [32], [89], [92]. The review process of this article includes: i) defining the review process, ii) defining the review rules, iii) designing the taxonomy, iv) performing the review, v) comparing the various existing research techniques, vi) discussing the result outcomes and vii) highlighting various future research directions.

3.1. Planning the review
The rules of review are designed by framing the research questions. Then, we further searched these designed questions in the various databases. The review technique is used to recognize and collect sufficient evidences for the target study. The review process have a prominent part in consideration and non-consideration of articles. Here, a single researcher's decision for this task may inculcate the bias. Therefore, all the authors of this article divide the task to conduct this systematic literature review. Every author has prepared his points on the review process and this report has been given to the peer authors. This process has repeated for a certain span of time. At last, the review rules have been finalized after detailed discussion of every iteration. An extensive search has been performed on various electronic databases. The review process is shown in Fig. 4. The search string used in the review process are described in Table 3.

Fig. 4
Download : Download high-res image (146KB)
Download : Download full-size image
Fig. 4. The Selection criteria and process flowchart of research studies.


Table 3. Research questions, Motivation, Category and Mapping Sections.

Sr. No.	Research question	Motivation	Category	Mapping Section
RQ1	What is the present status of fog computing?	It helps to understand the fog computing. The research question studies the various fog computing areas.	Analysis of Primary Studies and Result Outcomes	IV-A and IV-B
RQ2	Which tools are available to implement or simulate the fog computing techniques or mechanisms?	The role of this question is to explore the various tools used in simulation or real-time implementation of fog computing.	Tools	IV-A-3 (Table 7)
RQ3	What are the key sub areas in the fog computing?	The type of studies carried out using fog computing can be identified with the help of this question.	Taxonomy	IV-B-2 (Fig. 7)
RQ4	What is the present status of fog computing frameworks?	The researchers are designed various framework for fog computing for different applications. This questions investigates the current status of fog computing frameworks.	Frameworks	IV-A-4
RQ5	What are the various performance evaluation parameters in fog computing framework?	The researchers used various performance parameters to evaluate the performance of fog computing frameworks such as latency, cost, energy, etc.	Metrics	IV-A-2
RQ6	Which hardware is used in the fog computing framework?	The hardware used in fog computing framework is identified and mention in the survey.	Tools	IV-A-3 (Table 7)
RQ7	Which software is used in the fog computing framework?	The software used in fog computing framework is identified and mention in the study.	Tools	IV-A-3 (Table 7)
RQ8	Which storage is used in the fog computing framework?	The storage used in fog computing framework is identified and described in the study.	Tools	IV-A-3 (Table 7)
RQ9	Which communication technique or mode is used in the fog computing framework?	The communication channel used in fog computing framework is identified and described in the study.	Tools	IV-A-3 (Table 7)
RQ10	What is main driver of the fog computing research?	The main driver of the study is explored to identify that the work is belong to industry, academia or research and development.	Tools	IV-A-3 (Table 7)
RQ11	What is the target application of fog computing framework?	The fog computing may be designed for specific application. Therefore, this question helps to identify the target application.	Applications	IV-A-4 (Table 8)
RQ12	What are the insights on the development of fog computing?	It helps to analyses the existing research in the area of fog computing to identify the research gaps for future readers.	Discussion of Results	IV-A-1, V
RQ13	What is the future of fog computing?	There is a need to find out the research trends and open challenges within the fog computing research.	Current Trends and Future Directions	VI
3.2. Research questions
The aim of this study is to perform a systematic review on fog computing. This study will help the researchers to understand the current status in the area of fog computing and identify the promising future research directions. The research questions are required to plan the review process. Table 3 shows the research questions, motivation and correlations with other sections and subsections to show how our systematic review is targeting these Research Questions (RQ).

3.3. Sources of information
There is a need to search extensively on electronic sources for conducting a systematic literature review [32], [89], [92]. We have chosen the following set of databases to improve the chances of finding most related research papers:

•
Wiley Interscience (www3.interscience.wiley.com)

•
Springer (www.springerlink.com)

•
ACM Digital Library (www.acm.org/dl)

•
IEEE eXplore (ieeexplore.ieee.org)

•
ScienceDirect (www.sciencedirect.com)

•
Semantic Scholar (www.semanticscholar.org)

Additional Sources: We have considered the following additional sources in this systematic review to find other important studies:

•
Explored the various articles mentioned in the bibliography of primary studies.

•
Technical Reports

•
Edited Books and Text Books

3.4. Search criteria
Table 4 shows the defined search strategy from different e-resources. In this study, most popular scientific digital resources are used to obtain research papers. The articles have been fetched from various digital libraries such as ScienceDirect, IEEE Xplore, Springer, Taylor and Francis (T&F), ACM, Sage, Wiley, InderScience, and Google Scholar [83], [175], [185]. The “Search string creation” and “Search keywords selection” have played an essential role in finding appropriate research papers from the literature [84]. The records of keywords used to describe the search string were fog computing, framework, application, and architecture. The final string was generated using the boolean operators AND and OR to combine the keywords [15], [21]. The subsequent string is defined as below:

("Fog Computing" OR "Fog Computing (FC)")
("Edge Computing" or "Edge Computing (EC)")
AND ("Framework" OR "Platform" OR
"Application" OR "Architecture")


Table 4. Search strings for e-resources.

Sr. No.	E-resource	Search String	Dates	Source Type	Subjects	#
1	ieeexplore.ieee.org	Abstract: Fog Computing or Edge Computing	2016 - Mid 2021	Conferences, Journals, Magazines and Transactions	Fog Computing, Cloud Computing, Edge Computing	141
2	www.springerlink.com	Abstract: Fog Computing, Edge Computing	2016 - Mid 2021	Conferences, Journals and Magazines	Fog Computing, Cloud Computing, Edge Computing	82
3	www.sciencedirect.com	Abstract: Fog Computing, Edge Computing	2016 - Mid 2021	All sources	Fog Computing, Cloud Computing, Edge Computing	93
4	www.onlinelibrary.wiley.com/	Abstract: Fog Computing	2016 - Mid 2021	Conferences, Journals, Magazines and Transactions	Fog Computing, Cloud Computing, Edge Computing	69
5	www.acm.org/dl	Abstract: Article Title: Fog, Full Text/Abstract: fog or edge	2016 - Mid 2021	Conferences, Journals, Magazines and Transactions	All subjects	26
6	www.taylorandfrancis.com/	Abstract: Fog Computing	2016 - Mid 2021	Conferences and Journals	Fog Computing, Cloud Computing, Edge Computing	11
7	www.inderscience.com/	Abstract: Fog Computing	2016 - Mid 2021	Journals	All subjects	18
8	www.semanticscholar.org	Abstract: Fog Computing	2016 - Mid 2021	arXiv Preprints	Fog Computing, Cloud Computing, Edge Computing	16
9	Other Publishers	Article Title: Fog, Full Text/Abstract: fog or edge	2016 - Mid 2021	All sources	Fog Computing, Cloud Computing, Edge Computing	67
#: total number of research articles

3.5. Inclusion and exclusion criteria
The fog computing and fog-based framework is a new subject area of research, and very few articles have covered the relevant issues on this topic before 2015. Therefore, very few papers were published on the subject before 2015. Fig. 4 shows the selection process of research studies from the online digital libraries databases. The above mentioned keywords and strings were used to find relevant literature from the selected databases. In the initial phase, 520+ papers were selected in the first round of paper selection criteria, including non-peer reviewed and non-ISI papers from different journals and conferences. To identify quality papers, research filtering process has been performed to ignore short articles, non-peer reviewed papers, book chapters, and low-quality papers that were not able to give any technical information and scientific discussion. Finally, 154 peer reviewed papers were selected from high-impact journals and conferences for this systematic review. The corresponding explanation of each paper based on the proposed taxonomy is presented in Section 4.

The exclusion of studies has been done based on the following principles to select the final quality papers:

•
The journal and conference not indexed.

•
The papers introduce any survey and review study.

•
The papers which are not drafted in the English language.

•
The papers which do not follow peer-reviewed process.

3.6. Quality assessment
Fog computing is vast research area and has many research articles published in various journals and conference proceedings. To select the most related research articles after utilizing the exclusion and inclusion criteria, we have performed quality assessment on the remaining articles. We used “Centre for Reviews and Dissemination (CRD) guidelines” [91] to conduct quality assessment based on important criteria such as external validity, internal validity and assessed them for bias. We have designed quality assessment forms as given in Appendix A to consider high quality research articles for this systematic literature review. We have used two different types of questions: screening and detailed. Screening questions help to identify the research articles related to fog computing at a high level. Further, detailed questions select the most relevant research articles related to the main context of fog computing.

3.7. Data extraction
Appendix B laid out the strategy for data extraction from all the 154 research articles considered in this SLR. We have designed this data extraction form when the data collection procedure was initiated to address the questions aimed. We have clearly defined the criteria for inclusion or exclusion in Appendix A, which has helped us to find out the most relevant research articles on fog computing from various journals and conferences as listed in Appendix C. We have also contacted various authors to identify the required details about research articles. We followed the following process for data extraction in this SLR:

•
All the 154 papers were reviewed by one of the authors to extract required data.

•
Consistency of data extraction was checked by another author using random samples.

•
Various meetings were used to resolve any kind of disagreement that occurred during the process of cross-checking.

3.8. Acronyms
The list of acronyms used in the systematic literature review are given in Appendix D

4. Current status of fog computing
4.1. Analysis of primary studies
4.1.1. Development
The “development” part of the review paper compares the research papers based on the architecture, design environment, techniques, algorithms used/developed, implementation mechanisms, control, and monitoring measures. Further, the works which introduce the new concepts for the various frameworks of fog computing are also considered under this category. In general, fog computing architecture and framework contains multiple layers, and each layer is divided into various groups depending on the relevant functions. These functionalities of frameworks are grouped into the particular layer such as a physical layer, the fog devices servers & gateway layer, monitoring layer, storage layer, security layer, Pre and Post-processing layer, Control & Resource management layer and applications layer. In this subsection, we are discussing the key studies introducing the concept based on the fog computing framework development.

Dsouza et al. [46] proposed a framework based on policy-driven security management with relevant schemes and policy-specific criteria for fog computing. In this paper, the authors have identified the key challenges in policy management that support secure collaboration, data reuse and sharing heterogeneous fog environment. In addition, the authors have illustrated the practicality and feasibility approach of use-case scenarios that needs to be implemented within the fog computing design environment. As part of future work, there is a need to find a more sophisticated approach to detect and resolve policy conflicts. Besides, the framework can be extended to support more complex use cases for the measurement of efficiency and effectiveness.

Sankara Rao et al. [145] described the fog computing framework and reviewed its distinct applications, security, and services-privacy issues in fog computing. In fog and cloud computing environment, virtualization is a significant technology that allows Virtual Machines (VM) to share physical resources. To prevent system failure, the abstract sensible pre-copy live migration method was used for VM migration. With this approach, the time period of every iteration is calculated to check whether or not to carry on the copy stage throughout of system. This reduces the migration time and the time period to ensure repair and resource accessibility of fog computing environment for users. Wang et al. [180] proposed a secure-authentication technique for dynamic key-generation ability to improve the security of the whole network without any constraint on communication protocols, properties and device classes.

Gu et al. [64] suggested a framework based on the secure and safe data query for fog computing environment. In this article, the authors have worked on the fog network that has to obtain queried data from fog nodes according to the user request. The user got the queried data from the fog computing network and cloud service to verify the final results based on the users' sample data. As per the fog network's security concern, the proposed framework also protects a single node attack, collusion attack, and man-in-middle attack. Further, a Node random-selection algorithm and the symmetric-encryption technique are proposed related to the Advanced Encryption Standard (AES) and asymmetric-encryption technique related to the Rivest-Shamir-Adleman (RSA) respectively. The experimental results shows that the user obtained the queried data accurately, fast, and reliably.

Gill et al. [54] presented a framework based on security and context requirements that had to choose the suitable fog computing environment for the placement of multi-media documents, images, video, and audio files. In this work, the evaluation of file type classification, an explicit security requirement, context parameters, and final allocation decisions is done using the deep neural network [168]. The context was one of the main parameters for choosing a suitable fog-layer for the placement of multi-media files. This framework is tested using Python and Juypter notebook for approximately 1 million instances of multi-media files. The average of ten tested experiments have been conducted and achieved 84% accuracy to select a suitable fog layer to place different kinds of multi-media files without bothering the fog environment's security. As a part of future work, authors suggested that the deadline parameters and the processing of data files like audio, documents, and video in the fog computing platform besides context parameters.

Yigitoglu et al. [189] proposed a framework called “Foggy” that assist the progress of automated application deployment and active resource provisioning of fog computing architecture. In this paper, the author worked on analyzing, defining IoT application requirements, and manages resources to reduced developer efforts. Furthermore, the author proposed task scheduling techniques to improve the mode of resources and minimize latency. This could be done by recognizing IoT application resource requirements, costs, mobility, and capabilities. [98]. In the future direction, the machine-learning component can be used to learn the behavior of different applications and suggest some essential configurable changes.

Rakshith et al. [140] proposed a framework for IoT application based on resource provisioning in the fog computing environment. In this research article, resource provisioning method is proposed to provision resources and control the designated services in fog architecture. Furthermore, the author developed and evaluated two algorithms, such as the first fit, branch & bound-based algorithms. The framework also analyzes the described parameters such as deployment and provisioning time to obtain the results. The scaling of the proposed system can be done in the future to include three or more nodes and estimating the efficiency of the provisioning algorithms. Further, other performance parameters such as power consumption and network bandwidth, can be considered for evaluation in the future.

Yousefpour et al. [191] developed a framework named the FogPlan for the QoS-aware Dynamic Fog Service Provisioning (QDFSP) to achieve low-latency and QoS requirements. In this paper, the authors worked on practical framework FogPlan that could serve the purpose of Fog-Service provider and their customers for the improvement of QoS and cost savings. Authors worked on the two efficient greedy algorithms named as Min-Viol & Min-Cost to address the problem of QDFSP. The experimental results have investigated using the traces of real-world traffic and DTMC based traffic generator based simulated environment. In future, proposed framework can include the learning techniques for the prediction of traffic, developed a protocol the service discovery, and incorporated the issues related to migration and services in fog environment.

Akrivopoulos et al. [5] presented a framework for IoT deployment to process the experimented sensor data at the edge of the network nodes. The network nodes have used on real-world problems to monitor a fleet of an educative system at the country level. The network nodes' effectiveness is calculated by adopting the convenient prototype that indicates low power edge nodes, namely the Raspberry-Pi, that could comfortably adjust the framework load dynamically. Furthermore, the framework offer the information of the present requirement of IoT deployments and also support up to the five-time higher amount of traffic by optimum interaction between all the elements.

Roy et al. [143] proposed a data transfer framework known as the “bio-inspired transcriptional regulatory-network” based on bioMCS to promote energy efficient jobs for data gathering. The framework is implemented over the fog computing platform, the fog nodes were utilized to choose Wi-Fi direct group and aggregate data from them. The framework is evaluated through comprehensive simulation based on the experiments that showed better network efficiency and energy.

Xu et al. [186] proposed a framework related to vehicular fog computing with low latency and massive connectivity with integrated matching theory. In this paper, the main objective is to reduce the base-stations over-load and processing time during peak time. Furthermore, pricing-based-stable matching and two-dimensional matching algorithms are proposed to handle the job allotment problem between User Equipment (UEs) and vehicular fog nodes. The experimental results of the suggested algorithms are tested on a realistic road topology. The simulation results shows that proposed work gives an optimal efficiency with lower complexity. This study could be extended with more complicated scenarios based on the player quota and one to many identical problems in future work. Du et al. [47], Sodhro et al. [157] worked on vehicular Fog Computing network Architecture based on the Artificial Intelligence (AI) and Autonomous Driving. Mughal et al. [118] also proposed a fog based architecture to optimize bandwidth, latency, and improve the scalability as correlated with cloud based architecture. The iFogSim simulator [67] is used to validate the proposed architecture which is an extended version of CloudSim toolkit [34]. The results are showing an evidence of the effectiveness and reliability of fog-based application for Autonomous Vehicular Networks (AVNs).

Pinto et al. [134] focused on the mathematical design to investigate distribution based Unmanned Aerial Vehicles (UAVs) topologies and the fog/cloud computing network for large-scale research procedures. The case studies included the fog/cloud computing collaboration to tackle the latency and throughput of various aircraft regions with low communication. The advantage of this work was lower latency when tackling with real-time data rendered by the aircraft. Furthermore, the numerical and simulation outputs proved that the framework could be applied for fog/cloud computing evaluation. The experimental outputs are compared with the state-of-the-arts techniques to show the novelty of proposed work. Future scope of this work would be an investigation of the influence of different parameters such as the quantity of head coordinators, nature of data processing, and battery time.

Adhikari et al. [2] designed a framework of Delay-dependent Priority-aware Off-loading (DPTO) technique for processing and scheduling the different jobs, which are generated by various IoT nodes [144]. In this article, the authors have worked to decrease waiting time of high priority jobs based on their deadline. Also, it has reduced the starvation problem for the low priority jobs with the help of a multilevel feedback queueing model. Moreover, this framework is able to decrease the off-loading time to meet the deadline for various tasks based on DPTO. The experimental results show that the performance of proposed work is compared them with the existing baseline algorithm in terms of multiple parameters. In future, this work can be extended by reducing the wait time of high priority jobs and evaluating the off-loading technique's performance. The testing of various resources of fog environment could be required when the amount of fog and IoT nodes/devices are increased. Furthermore, with better usage of the fog computing devices, there is a need to deploy on containers and serverless framework [17].

Vanneste et al. [176] proposed a Distributed Uniform Streaming Framework (DUST) that created an application layer's components and communicated using the abstract middleware interface. In this paper, the authors have worked on the applications that could not run on small fog devices by splitting the application into little components. These smaller components are sending the data and event messages to each other to build a unique single application. The experimental results shows that resource consumption is optimized using DUST coordinators varied the execution position of different application components. Finally, the real-world applications can use the Distributed Uniform Streaming Core to permit software reusability and establish platform transparency. Future research can include the study of global search techniques with Contract Net Protocol and need to work on device failure of fog & edge nodes to continue the application execution [122].

Wang et al. [179] suggested a framework named as MiFo that worked on the hierarchical dual-layer edge-network integration for edge and the fog computing. In this paper, the authors worked on the lower layer called the Mist layer that has to manage homogeneous network resources in a centralized way. Also, it has improved the performance of transmission between the base stations through the physical layer. The upper layer called a Fog layer that organizes resource scheduling and heterogeneous network path access. Furthermore, the authors proposed multi-stream concurrent (MSC) transmission protocol to improve the data transmission rate and energy efficiency. In future, a strategy can be introduced to develop sophisticated schemes for edge-fog network to gain higher diversity and multiplexing with high energy capability.

Tuli et al. [171] suggested a framework called FogBus to provided the facilitates to IoT-Fog-Edge-Cloud integration. This framework has encouraged the user to execute multiple applications at a time, assisted the developers to develop new IoT applications. These applications can help the service provider to control the respective resources. FogBus is implemented blockchain-based encryption and authentication methods to provide security to sensitive data operations. The integration of finger-pulse oximeters is done with a smartphone-related gateway that could be further connected with Raspberry Pi-based as a Fog node. The experimental results shows that FogBus is relatively more responsive and lightweight. Moreover, different settings of FogBus can be used the fog environment as per the requirement. The framework has a large scope of improvement and further developments in terms of load balancing scheme, data integrity, data privacy, data authenticity, resource management policies, application placement techniques, security features, and improvement of embedded Blockchain features [63]. Recently, an extended version of FogBus [171] named FogBus2 [42] has developed. It is a lightweight framework for distributed containers. FogBus2 enables the integration of Edge and Cloud with the IoT-based systems. Further, quantum computing can be used to provide security through quantum cryptography [61] [55].

Islam et al. [82] presented a fog monitoring framework based blockchain for the identification of individual activities for healthcare services [173]. In this paper, the author worked on the development of clustered-based invariant features such as Speed Up Robust Features (SURF) against several frames of the video that described the different human activities. Furthermore, the classification of different activities has made using Support Vector Machine (SVM) related to Error Correcting Output Codes (ECOC) framework. Also, the exploratory results shows that the proposed framework obtains high accuracy in recognized human-activity as compared to state-of-the-arts.

Wu et al. [184] designed a fog network to calculate the total concentration on developing a FC-enabled cognitive portable Ground-Penetrating Radars (GPRs). Computation chores are accomplished at the local level or at time of offload for fog computing. The experimental results show that the network provides perception for the IoT, which is supported by the fog environment. Alam [8] developed a network of the combination of fog computing nodes and IoT devices. The blockchain provides a distributed, hyper, and trustworthy ledger to keep the record of the transactions. Blockchain technology is an innovative technique which has an advantage to the upcoming generation computing. It has been identified that fog, blockchain convergence, and IoT technological innovations can be used to express an efficient communication network.

Alraddady et al. [10] suggested a framework to reduce response time and latency. In this work, the problem of packet interruption and bandwidth during the Hajj season is discussed in this work, where a million people are grouped together in a small area. Furthermore, the data queries are processed at the fog nodes which consumes less time as compared to the cloud computing model. In future, iFogsim simulator can be used to examine the performance of this framework in terms of resource utilization, network congestion rate, energy consumption, and memory usage by IoT & Fog devices.

Malic et al. [111] focused on evaluation factors which plays an essential role in the fog computing environment to increase utilization of smart nodes and devices to transmit data. A network is developed for consideration of the quality of decisions and independent data analysis. The main advantage of this work is to provide benefits to business procedures. Experimental results shows that proposed work is effective in satisfying industry's requirements. A significant form of data is analyzed with the help of fog computing adoption.

Maheswaran et al. [106] proposed a framework based on fog computing to implement autonomous driving. In this paper, the authors have worked on data streams and the camera's view from the vehicle sensors to create edge twin networks on the fog machine using distributed digital twins. The location of human and autonomous piloted vehicles are updated continuously on edge twin. The authors also implemented a machine learning forecaster which is suitable for predicting vehicles' future location. The box algorithm is responsible for creating a road segment hazard map that could change the lane and accelerate autonomous vehicles. The framework is tested using simulations based on real world traffic footprint vehicle positioning dataset. The future scope of this framework can include the remaining design challenges and goals to develop complete-featured edge twins on autonomous driving.

Suryadevara et al. [165] suggested a framework based on lighting and audio stimulation program for the patients which are suffering from Dementia disorder. The fog computing framework is used to stimulate and activate a related recall to recognizing familiar peoples and everyday used objects. The lighting effects and smart speakers are placed in the home to facilitate the patient. The machine learning classifier model is trained using different images of known person on the fog node to recognize the object and person. The proposed framework can only work within the trained group of personal data and provide the most suitable lighting and music stimuli. This work can be expanded to observe the unknown person and train automatically to activate suitable stimuli.

Deokar et al. [43] proposed architecture based on the automated health monitoring system that secured the health system from Denial of Service (DoS) attack working under the fog computing environment. The authors also working on the authentication and secure data transfer using the concept of end-to-end encryption for Fog-IoT nodes. Sharma and Anusha [150] proposed a large-scale data streaming in fog computing and its applications presented the method for large scale data streaming architecture and its many application in the fog computing environment. The authors have worked on processing a large amount of data at local nodes on the different types of hardware resources as per their availability.

4.1.2. Metrics
The “Metrics” part compares the research work based on the various performance metrics such as latency, reliability, resource management, scalability, security, mobility, QoS, cost/energy consumption and provisioning of fog computing frameworks [16]. Table 5 shows a comparison of above-mentioned evaluation factors form the key research articles.


Table 5. Comparison of existing evaluation factors in the fog computing frameworks.

Study	Latency	Reliability	Resource Management	Scalability	Security & Privacy	Mobility / QoS	Cost / Energy Consumption	Provisioning
Suryadevara et al. [165]	✔	✔	✘	✔	✘	✘	Low	✘
Sarkar et al. [147]	✔	✔	✘	✔	✔	✔	Low	✘
Jiang et al. [88]	✔	✔	✔	✘	✔	✘	Average	✘
Haj Qasem et al. [70]	✔	✔	✘	✔	✘	✘	High	✘
Gill et al. [54]	✔	✔	✘	✔	✔	✘	Average	✘
Jha et al. [87]	✔	✔	✔	✔	✘	✘	Low	✔
Hießl et al. [71]	✘	✘	✔	✔	✘	✘	Average	✘
Pravin et al. [136]	✔	✔	✘	✔	✘	✔	Average	✘
Rathee et al. [141]	✔	✔	✘	✔	✔	✔	Low	✘
Maatoug et al. [105]	✔	✘	✔	✔	✘	✔	Average	✘
Maheswaran et al. [106]	✔	✔	✘	✔	✘	✔	Average	✘
Yousefpour et al. [191]	✔	✔	✘	✔	✘	✔	High	✔
Adhikari et al. [2]	✔	✔	✔	✔	✘	✘	Low	✘
Vanneste et al. [176]	✘	✘	✔	✔	✘	✘	Low	✘
Alraddady et al. [10]	✔	✘	✔	✔	✔	✘	Average	✘
Gu et al. [64]	✔	✔	✔	✔	✔	✘	Low	✘
Hu et al. [77]	✔	✔	✘	✔	✘	✔	Low	✘
Javaid et al. [85]	✔	✔	✔	✔	✘	✘	High	✘
Dsouza et al. [46]	✘	✔	✘	✔	✔	✘	Low	✘
Ahmad et al. [3]	✔	✔	✘	✔	✔	✘	Average	✘
Tuli et al. [171]	✔	✔	✘	✔	✔	✘	Low	✘
Aujla et al. [18]	✔	✔	✘	✘	✔	✔	Low	✘
Habibi et al. [68]	✔	✔	✘	✔	✘	✔	Average	✘
Yigitoglu et al. [189]	✔	✘	✔	✔	✘	✘	Low	✘
Krishnan et al. [94]	✔	✔	✔	✔	✔	✔	Low	✔
Xu et al. [186]	✔	✔	✔	✔	✘	✘	Low	✘
Wang et al. [179]	✘	✔	✘	✔	✘	✘	Average	✘
Li et al. [99]	✔	✔	✔	✔	✔	✔	Average	✔
Zhao and Chao [193]	✔	✔	✔	✔	✔	✔	Low	✘
Guardo et al. [65]	✔	✔	✘	✔	✘	✔	High	✘
Bagula et al. [20]	✔	✔	✔	✔	✘	✔	High	✘
Rakshith et al. [140]	✔	✔	✔	✔	✘	✔	Average	✔
Islam et al. [82]	✔	✔	✘	✔	✘	✘	High	✘
Sood and Mahajan [160]	✔	✘	✘	✔	✘	✔	Low	✘
Barik et al. [27]	✔	✔	✘	✔	✘	✘	Low	✔
Pinto et al. [134]	✔	✔	✘	✔	✘	✔	Low	✘
Malic et al. [111]	✔	✘	✘	✔	✔	✔	Low	✘
Wu et al. [184]	✘	✘	✘	✔	✘	✔	Average	✘
Al-Khafajiy et al. [6]	✘	✘	✔	✘	✘	✔	Average	✘
Wei et al. [182]	✔	✔	✘	✘	✔	✔	High	✘
Bonadio et al. [29]	✔	✔	✘	✔	✘	✘	Average	✘
Cheng et al. [35]	✔	✔	✔	✔	✘	✘	Low	✘
Borthakur et al. [31]	✔	✔	✔	✔	✘	✘	Low	✘
Baneriee et al. [23]	✔	✘	✘	✘	✘	✘	Average	✘
Sehgal et al. [148]	✘	✘	✘	✔	✔	✔	Average	✘
Fricker et al. [51]	✘	✔	✔	✔	✘	✘	Average	✘
Musa and Vidyasankar [121]	✔	✔	✔	✔	✘	✔	High	✘
V.K [163]	✔	✘	✘	✘	✔	✔	Average	✘
Sun et al. [164]	✔	✘	✘	✘	✔	✘	Low	✘
Minh et al. [115]	✔	✔	✘	✔	✘	✔	High	✘
Zhang et al. [192]	✘	✔	✔	✔	✘	✘	Average	✔
Neagu [125]	✔	✔	✘	✔	✔	✔	Low	✘
Jeong et al. [86]	✔	✔	✔	✔	✔	✔	High	✘
Wu et al. [183]	✔	✔	✘	✔	✘	✔	Low	✘
Chiti et al. [37]	✔	✔	✔	✔	✘	✔	Low	✘
Barik and Lenka [26]	✔	✔	✔	✔	✘	✘	Low	✘
Eds and Hutchison [116]	✔	✔	✘	✔	✘	✔	Low	✘
Liu et al. [102]	✔	✔	✘	✘	✔	✔	Low	✘
Wang et al. [181]	✔	✔	✘	✘	✔	✔	Low	✘
Sood [159]	✔	✔	✔	✔	✘	✘	Low	✔
Abbasi et al. [1]	✘	✘	✘	✔	✘	✘	Average	✔
Davami et al. [39]	✔	✔	✔	✘	✘	✘	Average	✘
Lan et al. [97]	✔	✔	✔	✘	✘	✔	Low	✘
Sehgal et al. [148] proposed a security network with pervasive and wearable computing that depended on the complexity, security, and need of the several layers of fog framework. IoT layer collects the information related to the physical surroundings and interacts with the physical world. Depending upon the complexity and real-time needs, more sophisticated measures are taken by the cloud and fog layers. With the support of the above-mentioned methods, authors have identified various distinct challenges to provide security to the citizens. The future scope of this work can include the implementation and analysis of actual testbed and actual-world issues to test its performance, feasibility and practicality. Furthermore, privacy and ethical issues can be tackled in the future.

Osanaiye et al. [130] reviewed the fog computing issues related to security, privacy, services, and resources of the framework and its applications. Virtualization allowed VMs to share physical host resources. A conceptual smart “pre-copy live migration” method was used for VM migration to protect system failures. With the help of this method, downtime is estimated after every iteration to determine the various stages of system failure. Ultimately, it reduces the migration time and downtime for availability and resources to the end-users. This method can be tested on real-world testbed in the future to focus on its validation and refinement.

Yang et al. [188] addressed the prototype for visual fog computing to achieve the objective of scalability by enabling efficiency, reusability, and configurability. Reusability stands for scaling out visual computing by surrounding all smart devices in the fog. Efficiency is about scaling up a visual computing prototype with dynamic workload distribution. Configurability is for scaling down the cost-saving of situating video problem-solving workloads. Jeong et al. [86] proposed a crystal distributed computing network for the fog computing. This framework is working on basis of efficiency, reusability and Configurability of fog computing. It enables the development of a sustainable fog application with the help of crystal instance as building-block. Any application that comprised one or many crystal instances offers distributed computing and processing while accepting benefits of self-healing, mobility support, location transparency, and auto-scaling.

V.K [163] proposed a fog computing, that gave information about issues faced by cloud computing. Fog computing is a method that expands cloud computing and its essential services to the network edge. Moreover, it also expands cloud computing by providing security in the cloud server. Fog provides less data traffic, latency, and low cost. Although, there are many benefits of fog computing and security concerns that should be taken into the record. The authors have provided the security to the data which is transferred to the cloud. User decryption is performed by using the encryption key to view the genuine data. A modified ELGAMAL framework is used to generate a Cipher key that provides better security.

Sun et al. [164] worked on the Search Encryption (SE) and the Attribute-based Encryption (ABE) technology are combined to apply the keyword search function. When the trapdoor match and keyword index are successful, then only related search results are provided by the cloud server. By division of the user secret key distributed task, the critical leakage issue is solved. In addition, authors are securely encrypted and decrypted the operations to fog nodes. Therefore, it is equally reliable in resource-constrained mobile systems and local resources. The authors have proved the proposed work with the help of “Decisional Bilinear Diffie-Hellman (DBDH)” assumption and “q-parallel bilinear Diffie-Hellman exponent (q-DBDHE)” assumption. In the future scope, the efficiency of this system can be improved in terms of other performance parameters.

Zhang et al. [192] suggested a three-layer hierarchical game model to resolve tasks in the fog computing frameworks. Moreover, a Stackelberg game between Authorized Data Service Subscribers (ADSS) and Data Service Operators (DSOs) has been introduced. DSOs mean leaders, and it provides virtualized services to ADSSs. ADSSs are the followers of DSOs. In contract theory, a moral hazard framework is used between Fog Nodes (FNs) and DSOs to motivate Fog nodes. A student model matching game is used for resource allotment based on physical resources. The main aim is to get stable and optimum benefits for each FN, ADSS and DSO in the distributed way.

Liu et al. [102] discussed characters and differences of fog computing from other alike computing paradigms. In this work, a framework of FC is proposed in both network and computing approaches. Then, an architecture of latency reduction and resource allotment is designed. During the implementation, privacy and fault tolerance are used in the prototype with several solutions or optimization ways. Finally, the model is evaluated under a given Genetic Algorithm mixed with a Dirichlet Distribution Sampling Approach and application scenario.

Sood [159] presented a framework to detect deadlock for resources such as storage, network, and computing in fog environment. A new way of free-space fog is introduced to eliminate the deadlock by arranging convenient free resources from complete allotment tasks. A collection of new rules are used to expand the usage of fog computing resources and cut back the response period of the request. Virtual private cloud and public cloud are used to manage deadlock with effectiveness. Resource Pool Manager (RPM) is applied to estimate resource utilization by Cloudsim toolkit. The experimental data shows the efficiency of the proposed framework.

In this research study, Nguyen et al. [127] suggested a market-based resource allotment network. In this framework, fog resources are acting as divisible goods, and services are acting as a buyer in the market. The authors have proposed the ideas of non-wasteful and frugality for equilibrium choice. Moreover, the proposed work have given to occupy the main correctness properties, involving proportionality, sharing-incentive, envy freeness. The main contribution of this work to generate a privacy-preserving distributed allotment for computing a Market Equilibrium (ME) while permitting market participants to obscure the private data. Finally, to verify theoretical analyses, extensive performance evaluation has been conducted. Shroff and Bandyopadhyay [151] proposed a novel matching mechanism called as Stable-Fog Resource Allocation (SFRA) in one-sided market based fog computing environment. In this framework, the resources allocation has been done based on choices in the non-cooperative and cooperative fog computing environment. Mukherjee et al. [119] introduced an E2R-F2N as a retail system where the customers can choose and buy the goods & stocks using the smart trolley. QualNet 7 simulation tool is used to demonstrate the result of the proposed system. The experimental results show that proposed fog computing-based framework decreases power and delay by nearly 23%-61% and 23%-62% respectively as compared to cloud-based system.

Jiang et al. [88] developed a secure-computing resource allocation framework for open-fog computing, where the server handles allocation of resources and computing requests. The behavior of fog devices and fog server are maintained by cloud audit center. In this work, the authors have optimized resource allocation mechanism by considering sub-tasks priority with the availability of computing service devices. Furthermore, the security component is offered during resource allocation. To investigate it, the performance of this framework is examined and analyzed through experiments on various tasks, data amounts, and the different number of services. Experimental results have noted that some tasks requires high computational cost which can be easily identified.

De Fátima Pereira Marquesone et al. [40] designed a framework which offers a prototype to optimize bandwidth consumption. The proposed filtering, aggregation, compression, extraction (FACE) model has an ability to intercept the essential data and processes between end devices and the fog server. With the help of video surveillance, the framework is validated. Due to the high bandwidth requirement, a particular area of the application is selected to transfer video data. The experimental results show that it is feasible to get 97% bandwidth gain to enhance the QoS by providing good response time.

Wang et al. [181] proposed a privacy preserving framework for Collaborative Intrusion Detection Networks (CIDNs) based on the fog nodes. In this research work, the authors have discussed the background of CIDNs environments and reviewed the storage, networking, and computing service of fog computing compared with the cloud server. Furthermore, the authors have applied Rabin fingerprint technique and evaluated the results in the simulated environment. The experimental results have observed that the suggested method significantly decrease the workload of the central cloud server. In the future, authors can implement this framework in the real testbed environment and further performance can be analyzed in terms of efficiency, privacy, and accuracy. Hossain et al. [72] have also developed an e-government Privacy Preserving Fog and Mobile computing framework called as PPMF to trace COVID-19 suspected and infected cases nationwide.

Fricker et al. [51] proposed an analytical framework to study an offloading method for data centers in the network of fog servers under high loads. This method comprises of forwarding with specific probability request. In future, this work can be extended to examine the offload of blocked requests at the big-data center. The essential benefit of this finding is that it can improve blocking at small data-centers without disturbing the big data-center.

Baneriee et al. [23] discussed the workload distribution in the fog computing server. It is used to reduce the computational latency of an offloading task. Distributed and centralized approaches are used for solving the workload distribution issue. The distributed method has solved the issue of fault-tolerant and scalability. The centralized method has relatively easier for the implementation of the economic framework for several services. The two primary essential entities of the model were computational resources and controller, which controls the available framework resources of the smart devices for effective workload distribution. Finally, this framework has evaluated by collecting several heterogeneous nodes such as Raspberry-Pi and DragonBoard.

Abbasi et al. [1] worked on the model based on green energy and improved performance related to energy consumption and delay for Fog-IoT systems. The authors have proposed a method which uses the Genetic Algorithm (GA) to manage a huge number of user requests, security and QoS. Davami et al. [39] proposed the architecture based on software for multiple workflow scheduling in cloud-fog computing environment. In addition, the authors have worked on the parameters like reliability, interoperability, recoverability and availability to improve overall system's performance.

Qayyum et al. [139] proposed a framework based on the QoS that managed the peak computation load and resource sharing of fog devices. The authors have work on the Earliest Deadline First and Ant Colony Optimization (ACO) algorithms to improve the performance. Lan et al. [97] proposed the framework and migration model for fog services called “Octofog” based on efficient resource migration emphasizing artificial intelligence for the smart cities. The authors have also worked on the migration cost and optimization problem related to energy consumption and time delay. The deep reinforcement learning algorithm has used to find the solution to the optimization problem and minimize latency & energy.

Table 6 shows the key metrics for fog computing along with their definition. The detailed description of metrics for fog computing can be found in [16].


Table 6. Key Metrics for Fog Computing.

Metric	Description
Latency	It is defined as the round trip time which takes a packet to get from the user to the server or processing unit and reply back. It's a time delay between data being requested and it being received. Latency is measured in millisecond (ms) [59].
Reliability	It is defined as the capability to function properly in particular circumstances, even with exceptional issues [101].
Scalability	It refers to the ability to scale-up or scale-down the resources such as computing, storage, memory, networking as required to meet varying demand [17].
Security & Privacy	It is defined as the extent to which orchestration may prevent services and data from being used for malevolent purposes [17].
Quality of service (QoS)	It is the measure of the overall performance of fog service in terms of computing, memory, storage and networking [101].
Energy Consumption	It is defined as the amount of energy consumed by a fog resource to complete the workload successfully [59].
Provisioning	It is defined as the number of resources in a specific environment (e.g., fog devices, etc.) provisioned throughout the runtime before actual resource scheduling [101].
4.1.3. Platforms
The “Platform” part compares the research works based on the hardware, software, programming languages, which is used for the fog computing framework support or development. Further, other factors such as API or virtualization support, storage technology involved and communication technology (Network Functions Virtualization (NFV), SDN and 5G) is considered for the comparison of various studies. Furthermore, it has been identified that the availability of source code is very important for further extension. Table 7 compares the selected research studies based on different factors such as hardware, software, storage technology, communication technology, and source code. Further, we discuss the summary of key research studies.


Table 7. Summary of reviewed studies in terms of Platform-based attributes.

Study	Hardware	Software	Storage	Communication Technologies	Source Code
Suryadevara et al. [165]	Sensor nodes,PIR motion sensor and Raspberry Pi camera sensor	OpenHAB, MySQL database	Storage Expansion Technology	Wireless Sensor Network (WSN)	Open Source
Sarkar et al. [147]	Raspberry Pi, nodeMCU, Xbee, GasSensors, Philips Hue Lights	Arduino IDE (based on C++), openHAB, OpenFaaS	Storage Expansion Technology	NodeMCU, Xbee	Open Source
Haj Qasem et al. [70]	IoT Sensors	iFogSim	Others	Radio-frequency Identification (RFID),	Not Mention
Gill et al. [54]	Not Discuss	Jupyter Notebook, Python Framework, TensorFlow	Storage Expansion Technology	Other	Open Source
Jha et al. [87]	IoT / Fog Devices	CloudSim	Not Mention	5G, other	Open Source
Hießl et al. [71]	IoT / Fog Devices	Vienna Platform for Elastic Stream Processing (VISP)	Pre-cache Technology	NodeMCU, Xbee	Open Source
Rathee et al. [141]	Fog and IoT nodes	Not Mention	Pre-cache Technology	Other	Not Mention
Maatoug et al. [105]	IoT Sensors	Not Mention	Pre-cache Technology	WSN	Not Mention
Maheswaran et al. [106]	IoT Sensors	JAMScript	Pre-cache Technology	5G, other	Open Source
Adhikari et al. [2]	Fog and IoT nodes	Not Mention	Pre-cache Technology	Wifi, LTE, Bluetooth	Not Mention
Gu et al. [64]	IoT Devices	Java	Storage Expansion Technology	Other	Open Source
Hu et al. [77]	Fog gateway, Body sensors	Not Mention	Pre-cache Technology	Bluetooth, Wi-Fi, ZigBee or 6LoWPAN	Not Mention
Tuli et al. [171]	Raspberry Pi, IoT Devices	Not Mention	Storage Expansion Technology	Wi-Fi	Open Source
Aujla et al. [18]	IoT Devices	Not Mention	Storage Expansion Technology	SDN	Open Source
Habibi et al. [68]	IoT Devices	Not Mention	Pre-cache Technology	SDN, 5G	Open Source
Yigitoglu et al. [189]	Raspberry Pi, IoT Devices	Not Mention	Pre-cache Technology	Other	Open Source
Krishnan et al. [94]	IoT / Fog Devices	Not Mention	Others	SDN	Open Source
Li et al. [99]	Fog and IoT devices	MININET, OPNET	Pre-cache Technology	Other	Not Mention
Bagula et al. [20]	Raspberry Pi, Alix Board IoT Devices	Not Mention	Storage Expansion Technology	5G, other	Not Mention
Islam et al. [82]	IoT Sensors	Not Mention	Storage Expansion Technology	NFV	Not Mention
Pinto et al. [134]	IoT Devices, Drones	MATLAB	Storage Expansion Technology	GPRS networks	Not Mention
Wu et al. [184]	IoT and Fog Devices	Not Mention	Others	Wi-Fi	Not Mention
Bonadio et al. [29]	IoT and Fog Devices	OMNeT++	Not Mention	P2P	Not Mention
Cheng et al. [35]	IoT /Edge and Fog Devices	Not Mention	Pre-cache Technology	NFV, WSN	Open Source
Borthakur et al. [31]	Intel Edison and Rasp- berry Pi	Python Programming language	Storage Expansion Technology	NFV	Not Mention
Baneriee et al. [23]	DragonBoard, RaspberryPi and	Oracle VM VirtualBox	Others	NFV	Not Mention
Minh et al. [115]	IoT and Fog Devices	iFogSim	Pre-cache Technology	Other	Not Mention
Jeong et al. [86]	Mobile Device, Fog nodes	MapReduce, Apache Spark, Docker containers	Pre-cache Technology	Wi-Fi	Open Source
Wang et al. [181]	IoT and Fog Devices	iCanCloud	Others	P2P	Not Mention
Sood [159]	IoT and Fog Devices	Cloudsim	Others	Other	Not Mention
Arif et al. [13]	IoT Sensors	Not Mention	Storage Expansion Technology	SDN	Not Mention
Phan et al. [133]	IoT, Fog devices	Not Mention	others	SDN	Not Mention
Fiandrino et al. [50] developed a network for data acquisition in Mobile Crowd Sensing (MCS). The cloudlets in the fog computing eased task achievement and user recruitment. The authors have presented a fresh user recruitment policy known as energy, sociability, and distance, based upon the distance between tasks and users. CrowdSenSim simulator is used for performance evaluation for a large number of participants in an urban environment. The experimental results show that the average amount of recruitment users can be improved by more or less 20%. In addition, users can be utilized energy for delivering data. This work can be extended in the following ways: i) simulator capabilities, storage requirements of cloudlets, and explained model of computing could be strengthened and ii) framework could be developed to determine a realistic scenario of the efficiency of the model in fog computing.

In this research, Habibi et al. [68] explored distinct parameters those have advantages & disadvantages on two primary research articles from Khan et al. [90] and Huang et al. [81], having investigated intensely these frameworks. The invention of two frameworks, such as Mobile Edge Computing (MEC) and FC have presented sound knowledge to examine widely these frameworks and future 5G based SDN [132]. In future, a hybrid and integrated fog computing system can be developed, which can be more desirable alternatives to telecommunication organizations for low cost and the robust system in long-term utilization.

In this work, Roy et al. [142] proposed Traffic violation monitoring and fog based intelligent Decision Support System (DSS) for driver safety. This framework have prevented drivers using hand-held devices during driving with the assistance of fog networks. The young generation uses mobile phones when driving, that is the main reason for road accidents. The main objective of this study is advising people not to violent the traffic rule, and spread awareness about the traffic rules. They have also provided the rule destruction monitoring system for better traffic management. In future, this work can be easily adapted in the present situation and become a de-facto-decision support system for the expected hassle-free driving.

Minh et al. [115] worked on the Adaptive Traffic Signal Control (ATSC) framework to utilize by a fog based method for solving the traffic light optimization issue. FogFly has capability to provide real-time traffic state with low latency, location-awareness, and affordability to the changes in traffic issues. Traffic light cycles can be optimized effectively with the help of upgrading of traffic data timely. In the same way, computational results can be carried using IFogSim toolkit. The results show that the proposed fog computing framework can optimize efficiency, latency, and operation cost as compared to conventional cloud computing methods.

Okay and Ozdemir [128] presented a synoptic survey of routing in fog-enabled IoT environment. The authors have categorized and investigated IoT aids based on the requirements of routing and integration with SDN technology. The authors have proposed a hierarchical SDN-based fog computing network to resolve the routing concerns. SDN controllers can enable global management, local management, and workload sharing of the frameworks. Experimental data is identified that hierarchical SDN based fog computing framework is effective in minimizing the data transmission overhead and routing delay. Priyadarshini et al. [137] proposed Fog-SDN fog computing framework which offers a novel source based Distributed Denial-of-service (DDoS) moderation scheme for fog and cloud computing situations to neutralize attacks.

Aujla et al. [18] developed a framework named “SDN Assisted Framework for Edge Cloud (SAFE)” based on Edge & Cloud Interplay in safe and secured e-healthcare real-time services. In this article, the author have worked on these main objectives: i) SDN-assisted virtual flow control scheme is designed, ii) an off-loading scheme is developed to assist Edge-Cloud interplay, and iii) secure Lattice based crypto-system is introduced. SAFE is validated by performing experiments based on the various performance parameters. In future, virtual flow control scheme and virtual controller placement in multi-region can be considered in SAFE. Son et al. [158] proposed “CloudSimSDN-NFV”, a framework based on the simulation to assess network function virtualization functionality in edge-fog-cloud computing with SDN. The framework is developed upon CloudSimSDN, which is an extension of CloudSim toolkit and experimental results show that the framework is performing efficiently.

Krishnan et al. [94] proposed a multi-layer security framework named as “Distributed Threat Analytics and Response System (DTARS)”. In this work, authors have worked on SDN infrastructure and fog computing architecture for the 5G network and IoT applications. The authors have also worked on the estimable defense application on a malware testbed for real-life botnets and DDoS [41]. The analysis and experimental results show that the recommended framework is suitable for identifying attacks with 95% accuracy under 50,000 packets. The DTARS has achieved the performance of the traffic forwarding rate without acquiring additional latency.

Hießl et al. [71] provided the detail about the data stream processing in fog computing framework. The authors have presented an appreciable scenario for the production/manufacture area and Stream Processing Engine (SPE). They have also discussed the distributed processing stream in fog computing frameworks like Vienna Platform for Elastic Stream Processing (VISP). Furthermore, the researchers have used VISP to figure out novel techniques related to fault-tolerance, which uses data ownership and monitor & assess other functionaries those are required in fog-based data-stream processing.

Li et al. [99] proposed virtualization-enabled Fog framework based on the surging growth with the rising IoT spectrum and inclusive virtualization environment. In this work, the authors have worked on sensor level nodes to overcome the barriers of resource constraints while investigating the object and service virtualization. Furthermore, Network Function Virtualization (NFV) is analyzed to improve the adjustability of network service provisioning. The proposed virtual framework is implemented on the smart living cases for validation. The analysis has preformed to illustrate the low operating cost, low latency, and high scalability. In future, there are many open-issues and research challenges related to resource procurement and resource utilization which can be addressed in the future.

Al-Khafajiy et al. [6] described a fog computing network to upgrade QoS for the IoT applications. This system supports the co-operation between various fog devices in the specific area to authorize data processing in the common shared manner. Therefore, QoS and a large amount of service requests can be satisfied. The suggested network has the capability to get a workable framework paradigm and spotlight several advantages of fog computing. As a part of future work, experimental result analysis can be done using simulation and real testbed environment for performance comparison.

Jha et al. [87] proposed a simulator called IoTSim-Edge which offers the researchers to examine their framework and infrastructure in a configurable manner. IoTSim-Edge incorporates the new features of IoT and edge devices which is an extension of CloudSim toolkit. This simulator offers various features such as heterogeneity, variety of IoT communication protocols, application composition, battery features, device movement, and mobility. To validate the proposed simulator framework, the authors have tested three cases on the smart building, healthcare system, and capacity planning for roadside units. In future, the authors can develop IoT-Edge emulator which can be integrated with IoTSim-Edge and support to test the functionalities in a real fog and cloud environment. Qayyum et al. [138] proposed FogNetSim++ for Modeling & Simulation of distributed fog computing region. The authors have developed the key features of fog simulator, its module, design & architecture, and also illustrated the basic experimental applications for performance comparison.

Tuli et al. [174] suggested a fog computing and IoT environment based on a thermal profile making model called iThermoFog to maintain the temperature of Cloud Data Centers (CDC) using the Gaussian Mixture Model (GMM). Further, an integration of ThermoSim [62] and iFogSim [67] simulators are used to verify the proposed model. The experimental results show that iThermoFog reduces the mean-square temperature by 13.50% and concurrently improves consumption of energy, scheduling time, bandwidth usage and execution time.

Maatoug et al. [105] suggested a framework based on the smart building to optimize energy management techniques. In this article, the authors have integrated objects' structure to route, compute, and communicate simultaneously with applications running on installed IoT nodes in the building. Furthermore, user location data is used to dynamically control the energy-consuming of various devices depending on the user's movement. To evaluate the effectiveness proposed framework, the authors have tested this approach in the application scenario of the two-building office and home. The advantage of this fog computing framework is to improve energy-saving and decrease latency. The future scope of this work can include the development of different modules such as adding security, intrusion detection systems, resilient techniques to protect the building, and required data models to provide support for the various types of buildings.

Javaid et al. [85] proposed and implemented a framework “Customer to Fog to Cloud (C2F2C)” based on the allocation of resources such as electricity and requested facilities related to Micro Grids (MG) in the smart residential buildings. In this paper, the authors have proposed Equally Spread Current Execution (ESCE), Shortest Job First (SJF) and Round Robin (RR) algorithms to optimize the performance of parameters such as Response Time (RT), Request per-hour (RPH), Processing Time (PT) and the cost of Virtual Machine, Microgrid & data transfer. Furthermore, two scenarios are implemented on the simulation to check the performance of proposed techniques. The simulation results show that the proposed technique gives better results. In future, the work can be utilized for other solutions such as the implementation of SDNs and blockchain.

Sarkar et al. [147] suggested a framework for the smart building based on the serverless computing prototype to control the IoT nodes. It has also consisted the hierarchical design related to the fog and cloud computing layers. In this work, data generated by different IoT sensors is collected by edge/ fog nodes which is processed in the inter-mediated nodes and send some data to the cloud for investigation as per user requirements. The performance evaluation is validated based on the Application Program Interface (API) mechanism at edge and fog gateway. In future, secure and robust system can be designed to include predictive learning techniques to generate IoT sensor data to find valuable information.

Kochovski and Stankovski [93] designed a Brokerage and DECENTER fog computing platform as per the demands of adaptable use of Artificial intelligence techniques in development and construction schemes. The authors have performed the evaluation of all fog application at the real construction site. Results have showed fog computing provides high security, response rate and privacy in case of processing sensitive data. Barenji et al. [25] proposed the fog computing based Blockchain-enabled platform for customers, manufacturing and design section to improve triple communication. In addition, the authors have used machine learning techniques for classifying and clustering customer views to enhance security and data integrity via Blockchain technology. The authors have also worked on the case study of manufacturing and design bicycles as per the customer request.

Phan et al. [133] have presented the SDN-based dynamic offloading service for the fog computing platform to select and assist the optimal offloading node for bandwidth guarantee. The proposed approach also provides better results than the traditional method in terms of response time and throughput by choosing the suitable offloading node.

4.1.4. Frameworks
In this section, we have discussed the various types of frameworks, which are categorized as Event-driven, Simulators, Semi-simulators, Entity based, and Network-driven for the fog computing. The communication and operation mode of the fog computing frameworks classified as Fog to Cloud, Edge to Fog, Standalone, IoT-Fog, and Shared fog. Moreover, the research studies have also categorized based on the main focus of the papers as Academic, Industry, and Research and Development. Fog computing frameworks also supports different types of fog computing applications such as e-healthcare, Agriculture, Transportation, Energy-Grid, Smart Cities, Construction Process and content delivery & caching, environment monitoring and climate change monitoring [22], [79], [131], [156]. Table 8 compares the selected studies of fog computing frameworks in terms of the main driver, communication mode, type and applications. Further, the main objectives of the research articles are discussed along with their corresponding explanation.


Table 8. Comparison of fog computing frameworks in terms of the main driver, communication mode, type and applications.

Study	Main Driver	Operation / Communication mode	Type	Target Application
Suryadevara et al. [165]	Research & Development	Edge to Fog (Standalone)	Event-driven	Healthcare
Sarkar et al. [147]	Industry	Edge-Fog-Cloud	Event-driven, network-driven	Other
Jiang et al. [88]	Research & Development	Fog to Cloud	Semi-simulated	Support to Multiple Applications
Haj Qasem et al. [70]	Research & Development	Edge to Fog, Shared Fog	Network-driven	Smart City
Gill et al. [54]	Industry	Standalone	Event-driven	Multimedia
Jha et al. [87]	Research & Development	Edge to Edge	Simulator	Healthcare, Smart Building, Capacity Planning for Road Side Units
Pravin et al. [136]	Research & Development	Fog to Cloud	Event-driven	Healthcare
Rathee et al. [141]	Research & Development	Shared Fog, Fog to Edge	Other	Support to Multiple Applications
Maatoug et al. [105]	Industry	Shared Fog, Fog to Cloud	Event-driven	Energy
Maheswaran et al. [106]	Research & Development	Shared Fog	Simulator	Transportation
Yousefpour et al. [191]	Research & Development	IoT-Fog-Cloud	Simulator	Support to Multiple Applications
Adhikari et al. [2]	Research & Development	Shared Fog	Event-driven	Support to Multiple Applications
Alraddady et al. [10]	Academia	Fog to Cloud	Event-driven	Other
Gu et al. [64]	Research & Development	Fog to Cloud, Shared Fog	Network-driven	Other
Hu et al. [77]	Research & Development	Fog to Cloud	Event-driven	Healthcare
Javaid et al. [85]	Industry	Fog to Cloud	Event-driven	Smart City
Dsouza et al. [46]	Research & Development	Standalone	Other	Other
Ahmad et al. [3]	Research & Development	Fog to Cloud, Edge to Fog	Other	Healthcare
Tuli et al. [171]	Research & Development	Shared Fog	Simulator	Healthcare
Aujla et al. [18]	Research & Development	Edge to Fog	Semi-simulated	Healthcare
Habibi et al. [68]	Industry	Fog to Cloud	Semi-simulated	Transportation
Yigitoglu et al. [189]	Industry	Fog to Cloud	Event-driven	Other
Krishnan et al. [94]	Research & Development	Shared Fog	Semi-simulated	Other
Xu et al. [186]	Industry	Shared Fog	Event-driven	Transportation
Wang et al. [179]	Research & Development	Edge to Fog	Network-driven	Other
Li et al. [99]	Research & Development	Standalone	Network-driven	Multiple applications
Zhao and Chao [193]	Industry	Shared Fog	Other	Smart City
Biswas [28]	Research & Development	Edge to Fog	Other	Healthcare
Guardo et al. [65]	Research & Development	Fog to Cloud	Event-driven	Agriculture
Bagula et al. [20]	Research & Development	Shared Fog	Event-driven	Healthcare
Rakshith et al. [140]	Research & Development	Standalone	Other	Support to Multiple Applications
Islam et al. [82]	Research & Development	Standalone	Event-driven	Healthcare
Sood and Mahajan [160]	Research & Development	Standalone	Event-driven	Healthcare
Barik et al. [27]	Industry	Standalone	Event-driven	Healthcare
Pinto et al. [134]	Industry	Fog to Cloud	Event-driven	Transportation
Malic et al. [111]	Industry	Standalone	Other	Other
Wu et al. [184]	Industry	Standalone	Event-driven	Other
Al-Khafajiy et al. [6]	Academia	IoT-Fog (Standalone)	Semi-simulated	Support to Multiple Applications
Wei et al. [182]	Industry	Fog to Cloud	Event-driven	Transportation
Bonadio et al. [29]	Industry	Standalone	Event-driven	Transportation
Cheng et al. [35]	Industry	Edge-Fog-Cloud	Semi-simulated	Support to Multiple Applications
Borthakur et al. [31]	Industry	Edge to Fog	Event-driven	Healthcare
Baneriee et al. [23]	Industry	Standalone	Other	Other
Sehgal et al. [148]	Research & Development	IoT-Fog-Cloud	Event-driven	Human Security
Fricker et al. [51]	Research & Development	Shared Fog	Event-driven	Other
Musa and Vidyasankar [121]	Industry	Fog to Cloud	Event-driven	Supply Chain Management
V.K [163]	Research & Development	Fog to Cloud	Other	Other
Sun et al. [164]	Research & Development	Fog to Cloud	Event-driven	Healthcare
Minh et al. [115]	Industry	Fog to Cloud	Event-driven	Transportation
Zhang et al. [192]	Academia	Standalone	Event-driven	Other
Neagu [125]	Industry	Standalone	Event-driven	Transportation
Jeong et al. [86]	Industry	IoT-Fog-Cloud	Other	Other
Wu et al. [183]	Industry	IoT-Fog-Cloud	Event-driven	Manufacturing
Chiti et al. [37]	Research & Development	Edge to Fog	Event-driven	Support to Multiple Applications
Barik and Lenka [26]	Industry	Fog to Cloud	Other	Other
Eds and Hutchison [116]	Industry	IoT-Fog-Cloud	Event-driven	Transportation
Liu et al. [102]	Industry	IoT-Fog (Standalone)	Event-driven	Transportation
Sood [159]	Research & Development	Standalone	Other	Other
Nair and Tanwar [124]	Research & Development	Standalone	Event-driven	Healthcare
Malik et al. [112]	Research & Development	IoT-Fog	Event-driven	Agriculture
Deokar et al. [43]	Research & Development	IoT-Fog	Other	Healthcare
Guillemin and Thompson [66] analyzed a framework of two data-centers with a low capability of servers. The request send by user is transferred to the second server once it is blocked by first data-center. The authors also have introduced a trunk reservation policy application (i.e., if there are ample number of freely available servers at other data center, then a redirected request was accepted). The random walk analysis is done in the quarter place after rescaling the system using the assumption of both data centers and high request arrival rates. They have determined three unknown functions: two infinite generating functions and one polynomial. The authors have ensured to compute the blocking probabilities and two other unknown functions at both data centers. Numerical experimentation is used to calculate the gain achieved by the trunk reservation policy.

Musa and Vidyasankar [121] suggested a solution to track and monitor the products of a retailer which are received from the manufacturer. This work improves the efficiency and reduces cutback wastage in the production supply-chain. The authors have worked on the data, storage requirement, and computing power of fog nodes at every stage of production supply-chain. It is crucial, for the perishable production of supply-chains like pharmaceuticals and fruits which has an enormous value connected to assets. Cloud-based RFID is useless if it is not used in a precise manner and relaxed environment.

Wu et al. [183] proposed fog computing network for monitoring and process in the manufacturing industry. Wireless sensor algorithms, workflow, cloud computing framework, and communication protocols are used to conduct experiments. More than fifty wireless sensors such as accelerometers and current transducers are installed on various computer numerical control (CNC) machines and pumps to gather real time condition data. Current transducers and accelerometers are used for monitoring the energy consumption and vibrations of these machines. A microprocessor with ZigBee wireless module and analog-to-analog converter is installed in every sensor node for transmitting radio signals to cloud on the predix platform. In future, specific improvements in the areas of software portability, predictive analytics, infrastructure flexibility, scalability, and cybersecurity could be required [169].

Guardo et al. [65] proposed an IoT framework on Precision Agriculture based on fog computing which focuses on agricultural farm management procedures. This paper has presented the techniques to decrease transmitted data to the cloud environment, to enhance computation, load-balancing, fewer resources consumption, and reducing the waiting period. The proposed framework has worked on two Fog layers named as Fog Collector Node (FCN) and Fog Aggregator Node (FAN) having task-related computational capacities. Fog Aggregator Node is liable for aggregations and data filtering and Fog Collector Node (FCN) responsible for alert, actuation management tasks, and clustering analysis. The simulated results show that the two-tier Fog Computing method decreases the amount of transmitted data to the Cloud. In future, data can be collected using the prototype model and implemented data analysis & data mining techniques for enhancing the quality of the crop and keep away from plant disease.

Lobo et al. [103] suggested a localized system network for VANets with support of fog & cloud computing paradigm. This network is knows as SoLVE (System, Localization, and VANets) to get the benefits of both location awareness and fog computing of the Smart Traffic Lights (STL) and Roadside Units (RSUs). Further, an accurate estimation of vehicle position is provided within fog framework. Efficiency and reliability are determined with the help of simulations. The precise vehicle location can be provided with the support of a combination of data from vehicles and data-fusion methods. Eds and Hutchison [116] have also proposed a data and sensing collecting model called “Data Gathering based on Fog Computing (DAFOC)” for Vehicular Ad-hoc Network (VANETs). A two level threshold method is used to control unwanted data transmission for event-based data collecting. This framework has suppressed the unwanted transmissions of the message while minimizing the transmission cost. In future, the DAFOC model can be expanded by measuring its impact on several VANET applications. Arif et al. [13] proposed the VANET with SDN based communications privacy preserving framework. In this work, authors have presented computation and communication performance along with analysis of security. The simulation results are calculated based on the probability density function, communication load, moving distance, response time and communication delay.

Wei et al. [182] and Alamer and Basudan [9] focused on the disadvantages of the existing cloud-based network. With the help of fog computing, the authors have built a privacy preserving system for vehicular crowd-sensing framework. Non-deniability, availability, enhanced anonymity, privacy, and mutual authentication are achieved with the help of this protocol. The authors have observed through the experimental results that the protocol can get maximum security. Furthermore, the efficiency of the proposed framework is compared in terms of communication and computation cost. Neagu [125] also suggested a prototype which can use a collective number of end user clients to proceed with a significant amount of computation and communication. It uses certain features related to control, maintenance, and management. Management tools and other transportation applications are developed, such as road models, renting taxis, parking management, traffic lights control, prediction of demand in bus stations [24]. Also, Integrating smart transportation facilities can enhance cities' operational effectiveness and sustainability by optimizing time, availability, and cost.

Bonadio et al. [29] proposed a joined system framework using novel Fog communications and Computing prototype. It is used to get context-awareness for vehicular frameworks [162]. Mainly, applications and framework layers are involved in the co-designed method. Effective routing paradigms are used to get a particular level of reliable information from the individual vehicle. As a result, the authors have found traditional epidemic flooding based network chord and coding paradigms. Furthermore, the OMNeT++ framework is used to test the system's flexibility, high fidelity, and modularity. Production investigation is done in terms of latency and scalability.

Cheng et al. [35] proposed the fog flow network which provide a standard-based programming framework for the IoT services in smart cities. Fog flow networks has enabled effortless programming for elastic IoT services. It has also supported standard attachments for data transfers depending upon circumstances across various services. The authors have analyzed the performance of context management by using Next Generation Service Interfaces (NGSI). Furthermore, fog flow provides defect toleration in strict circumstances, such as natural disasters. In future, developing frameworks can assist in mobility aware optimization for edge networking. Moreover, a semantic mediation gateway can be developed that convert context information on the fly to the NGSI interface. Haj Qasem et al. [70] have also proposed a novel fog computing framework for the design of smart city to overcome the limitation of previous network architectures. iFogSim toolkit is used to conduct performance evaluation and experimental results show that delay of user applications significantly is reduced and fast-response is provided to the real-time application.

Chiti et al. [37] proposed an effective method for offload computational jobs to perform between the end-user nodes and the fog devices. The authors have proposed a method related to the deferred acceptance allotment for effective allocation in a distributed mode. The effectiveness of the proposed method is calculated based on mean waiting time, worst & total completion time, and mean total-completion time per job. Finally, a feasible analysis of the recommended allocation method is presented based on the evaluation of Jains index. In the future, the performance of this method can be compared with the cloud Spatial Data Infrastructure architecture and more creative processing at the fog layer.

Rathee et al. [141] designed a framework based on the fog & IoT devices' trusted computing to avoid the malicious attack in fog environment. In this paper, the authors have worked on the secured hand-off and routed mechanism to bypass the attack on each IoT and fog node. That mechanism is used by investigating the Trust Value (TV) and Trust Factor (TF) of each node based upon their communication mode. To maintain the record of all devices, a trust manager is installed between the IoT and fog layers which looked up table entries and identified the malicious nodes. To validate the proposed approach, the authors has compared the various parameters such as the number of malicious fog nodes v/s trusted nodes, hand-off IoT devices, network resources. In future, the performance of liable services can be measured by running in IoT and fog devices with node TV towards the different dynamic and random nature of fog environment.

Bagula et al. [20] proposed a Cyber-Healthcare support framework in the low income and rural areas. In this paper, the authors have designed a Cyber-physical Health System (CPHS) to provide medical service at any time and anywhere in the globe. CPHS is implemented on the fog-based infrastructure applying lightweight and low-cost devices to check the patient's condition. Furthermore, a proposed system supports the multilayer architecture and works on the patient's condition using machine-learning techniques. The experiment results show that the efficiency of machine-learning techniques which are used to identify the patient's condition. Further, the performance of two popular lightweight embedded hardware (Alix and Raspberry Pi) devices is compared in terms of processing overheads and storage.

Borthakur et al. [31] proposed a low-resource usage machine learning technique that remains near to the wearables for smart telehealth applications. The machine learning and signal processing methods are used in cloud for traditional telecare frameworks. With the help of Intel Edison & Raspberry-Pi, authors have developed framework which was tested on speech data from the tele-monitoring of patient with Parkinson disease. The authors have observed from experimental data, which is adequate for low-resource machine learning. Further, this method can be used for other IoT applications related to wearable smart health devices.

Sood and Mahajan [160] proposed a healthcare framework based on the Chikungunya virus and diseases. In this paper, the authors have developed a fog-assisted structure to prevent and predict Chikungunya with help on the wearable sensor, Temporal Network Analysis (TNA), and decision tree. The diagnostic alerts are send to user mobile device from the fog-assisted layer depending on the person's health diagnostic and symptoms. A J48 decision tree is applied to analyze patients of various categories according to diseases. Furthermore, TNA design is created to represent Various outbreak metrics of the Chikungunya virus. The experimental results show that J48 classifier has more accuracy & low response time as compared to existing techniques.

Pravin et al. [136] suggested a fog computing framework that helped a person to detect the dengue at an earlier stage and provide support to the medical team for the treatment of dengue diseases. In this paper, the authors have classified people according to symptoms of diseases and send alerts to the doctor and patient through mobile devices. Furthermore, the authors have made a comparison based on data response time concerning different classification algorithms such as Artificial Neural Networks, Support Vector Machine and K-Nearest Neighbour. The main aim of this work is to provide a support-system to the doctor and examine the impact of the dengue disease using data analyses.

Ahmad et al. [3] proposed a framework related to health applications adopting the idea of fog computing. In this work, authors have focused on the middle-layer of end-users and the cloud for processing & sharing health information based on collected data from different resources. Furthermore, the authors have introduced the Cloud-access Security Broker (CASB) component for flexible control of security and data privacy. In future work, input data resource can be social media to develop the knowledge repository to scale up the system usability and shareability.

Barik and Lenka [26] developed a fog computing based Spatial Data Infrastructure “mrfog” prototype for mineral resources management in India. The mining analysis is also done from big spatial data. With the help of Raspberry Pi, authors have developed a framework. They have validated a case study of resources management in mineral by performing overlay and exploratory analysis. The experimental outcome is showing that the fog server held an excellent measure for the spatial data analysis. Open source Geographic Information System (GIS) such as QIS and QGIS plugin are used for mitigating the transmission of the fog node to the cloud. Barik et al. [27] have also suggested a Fog computing based Spatial Data Infrastructure framework named as “GeoFog4Health” for tapping logical analysis from the Geo-health big-data. In this article, the case study is included on Geo-health big-data of malaria vector borne diseases in state of Maharashtra. The experimental results show that fog devices cut back the storage requirement, transmission power and leading to improved efficiency. In future, this work can apply mist computing for geo-spatial data analysis.

Hu et al. [77] suggested a framework for healthcare monitoring using fog assisted computing nodes that worked as a smart gateway and improved network latency, mobility, and scalability. In this paper, the authors have researched on the key technologies such as security techniques of HL7 RIM-based data-exchange, IPv6-based network model, intelligent warning system based on subband energy, health risk assessment based on the fusion of Markov & gray model. The experimental results has described that the suggested intelligent warning model gives the quick distinction of unusual signals. In future, the framework can be improved using Convolutional Neural Network (CNN) for intelligent alarm and need to minimize the communication delay for the large scale data collection.

Hu et al. [78] proposed a framework based on Internet Protocol Version 6 (Ipv6) network for fog assisted e-healthcare monitoring system. This network comprises of fog layer, body sensing layer and cloud layer. Physiological data are generated by the body sensing layer. The fog-nodes gathered and analyzed time-sensitive data. The suggested network uses techniques such the Ipv6 based classification framework of chronic ailments related to cascaded deep-learning, cloud-fog scheduling of resources & allotment related to time threshold. The preliminary results show that the recommended framework of chronic ailments has more accuracy in finding the severity of the potential ailment.

Zhao and Chao [193] proposed a framework for green and secure IoT-enabled intelligent buildings. In this paper, the authors have implemented the fog environment in a smart building to make an autonomous system by installing smart agent nodes. IoT devices data is separated into several categories according to preferences, application domain, purpose and its values. Furthermore, the authors have also proposed an algorithm to reduce the time delay. The experimental results have demonstrated the recommended framework's capability and efficiency in terms of QoS. In future, open issues and challenges related to lightweight data routing algorithms into a Smart Building Networks (SBNs) can be addressed. Lin et al. [100] proposed a fog computing based on “Hybrid Deep Learning Framework” (FC-HDLF) for the improvement of the smart manufacturing process to detect feasible faulty products. Polkowski et al. [135] proposed the business model of fog computing that plays a significant part of the ERP-system & other components in the business organizations.

In this article, Haj Qasem et al. [70] worked on smart cities' applications to reduce the latency of transmission, processing data, and distributes various processing tasks over the fog and edge devices. The proposed approach comprises five major layers: real time processing, connection, linking, processing, and data server. The case study is implemented on the public parking monitoring system. The performance evaluation is conducted using iFogSim simulator and experimental results show that it reduces the time in comparison with the cloud computing environment. The weakness of this framework is related to the consumption of large amount of energy when more devices are installed. In future, the authors can focus on the implementation and design of other IoT applications to verify the suggested model's applicability and capability. Arif et al. [13] presented the framework that inscribed the issues of the VANETs in Vehicle to Vehicle and Vehicle to Infrastructure communication. The authors have illustrated with an example using the use cases and provided the security analysis along with computation performance. The simulation results measures in terms of moving distance, response time, running delay and load of storage communication.

Hsu et al. [76] proposed the innovative platform technology to be implemented in the cloud-fog computing agriculture platform. The integration of cloud-fog computing is done to cover a large area for data collection, integrate limited network resources with farmland, pest control image and agricultural farm monitoring. Taneja et al. [166] suggested fog computing infrastructure for IoT applications under circumstances of limited Internet connectivity. The authors have implemented the microservices-predicated procedure to support applications in a hybrid fog-cloud computing environment and provide a solution that addressing connectivity and animal welfare in a keenly intellective dairy farming scenario. Taneja et al. [167] developed an end-to-end IoT application that supports exceptional data analytics and machine-learning methods to watch the cattle and recognize lame cattle at the initial stage.

Verginadis et al. [178] proposed a framework that was capable of handling edge, fog and multi-cloud resources and extending data intensive applications applying the function-as-a-service (FaaS) paradigm. The framework enhances the overall system functionality to manage intensive data application in term of resource and response time. Malik et al. [112] designed a framework on the farming green ecosystem to facilitate end-user to include sensors, fog locations and UAVs. In addition, the framework has evaluated based on performance in terms of transmission delay, system resources used and packet delivery ratio.

Nair and Tanwar [124] worked on the latency parameter by dividing the framework collection in the field of healthcare application related to fog computing. The authors have performed the experimentation using simulation software to reduce latency in healthcare application. Arikumar and Natarajan [14] proposed the “Fog-IoT collaborative framework (FIoT)” for the offloading strategy to minimize human effort communication costs and effective resource allocation. The authors have also worked on the analytical model to evaluate the performance parameters of the proposed model. The experimental results of FIoT system shows that the QoS of IoT application has improved.

4.2. Result outcomes
This section discusses the proposed taxonomy of frameworks and trend analysis in fog computing.

4.2.1. Taxonomy of fog computing
In this section, a comprehensive taxonomy of fog computing frameworks is proposed on the basis of the existing studies using a systematic review. The taxonomy of fog computing frameworks is shown in Fig. 6, that includes framework development process, performance metrics, platform, main driver, communication mode, and target application. Each taxonomy parameter is further categorized for the detailed study of fog computing frameworks. Since research articles are focused on some approaches to find efficient solutions of technical problems based on fog computing framework. The selected research papers are compared on the basis of the proposed taxonomy to address and discuss the frameworks of fog computing. The proposed taxonomy also categorized research papers based on parameters like applications, development process, types, and performance metrics, etc. The selected papers are also compared based on several aspects such as advantages, main context, weaknesses, and final outputs.

Fig. 6
Download : Download high-res image (264KB)
Download : Download full-size image
Fig. 6. Taxonomy of Fog Computing Frameworks.

4.2.2. Trend analysis and observations
In this subsection, trends of the fog computing frameworks are discussed as shown in Fig. 7, which is year-wise distribution based on the available publisher from the final selected research articles. Appendix C lists the journals and conferences publishing most fog computing related research, including the number of papers which report fog computing framework as prime study from each source. The trends show that the number of papers has been increasing in recent years. Fig. 8 shows the important factors related to Fog Computing in terms of latency, resource management, security & Privacy, Quality of services, provisioning, cost & energy consumption, and applications. Fig. 9 shows the year-wise publications of fog computing from the year 2016 to 2020. Fig. 10 shows Platform-based attributes related to Fog Computing in terms of software, hardware, storage, source-code, and communication technologies. Fig. 11 shows the distribution of papers based on main driver, communication mode, type, and applications. Fig. 12 shows type of study of fog computing in terms of introductory, review & survey, conceptual model, simulation and real testbed. Fig. 13 shows the Studies related to QoS Parameters like response time, reliability, availability, privacy, security, cost, throughput, and energy consumption.

Fig. 7
Download : Download high-res image (112KB)
Download : Download full-size image
Fig. 7. Distribution of research papers by publishers.

Fig. 8
Download : Download high-res image (119KB)
Download : Download full-size image
Fig. 8. Important Factors related to Fog Computing.

Fig. 9
Download : Download high-res image (62KB)
Download : Download full-size image
Fig. 9. Year-wise Publications of Fog Computing.

Fig. 10
Download : Download high-res image (99KB)
Download : Download full-size image
Fig. 10. Platform-based attributes related to Fog Computing.

Fig. 11
Download : Download high-res image (101KB)
Download : Download full-size image
Fig. 11. Distribution of papers based on main driver, communication mode, type and applications.

Fig. 12
Download : Download high-res image (42KB)
Download : Download full-size image
Fig. 12. Type of Study of Fog Computing.

Fig. 13
Download : Download high-res image (71KB)
Download : Download full-size image
Fig. 13. Studies related to QoS Parameters.

It has been observed that the trends for publishing a research paper on fog computing frameworks has increased year by year from 2016 onward. As per the important factors related to fog computing frameworks more research has been done on resource management, latency & reliability, and applications of fog computing. The research interest on the cost and energy consumption has also increased as per the current scenario of the fog computing. Furthermore, in the case of platform-based attributes related to the fog computing frameworks, most of the research work has been done on the software and hardware part. Moreover, as the current scenario suggests most of the research is going on the fog computing-based simulators. We have identified that QoS parameters such as response time, reliability and cost consumption have got the most attention. Security factors also play a significant role when the fog computing frameworks are implemented in an external environment or connected to the cloud.

5. Discussion of results
In this study, a comprehensive systematic review of fog computing is presented to understand its current status and highlight future directions and open challenges. We have collected 523 articles for the survey and shortlisted 154 articles after the iterative selection process. We have surveyed the fog computing frameworks, performance metrics, main driver of the study as mentioned in the research questions in Table 3. In total 11 questions have been designed to discover the updates in fog computing evolution. This systematic review is distinct from existing surveys on the basis of certain parameters as mentioned in Table 2. The taxonomy is designed with reference to articles from Jan. 2016 to Feb. 2021. In this survey, we followed the guidelines of systematic review given by Kitchenham et al. [32], [89], [92]. The authors identified the 17 surveys related to fog computing evolution, which were published after 2015. The focus of our study is wide as compared to existing studies in this domain. Furthermore, this study not only identifies the tools and methods for fog computing, but also analyses the future directions and impact of fog computing for future technologies. The studies are represented in chronological order similar to other studies for the identification of state-of-the-art research in an effective manner.

6. Current trends and future directions
Fig. 14 shows the hype cycle for fog computing that defines the innovation trigger, the peak of inflated expectations, trough of disillusionment, slope of enlightenment, plateau of productivity with the concern of various technologies. We have also classified several ongoing research fields for three different maturity levels as 5 years, 5-10 years, and more than 10 years related to the present research. As per Fig. 14, edge computing and artificial intelligence are at a peak and plenty of research has been done on these areas. Various research areas like quantum computing, 6G communication technology, serverless computing, dew computing, energy management, and green fog computing are at the innovation trigger stage under the domain of fog computing. Some of the given areas may take more than 10 years to mature and others are expected to at the top within 5-10 years. Extensive research work has been done on cost management, QoS, simulation, hardware & software technologies, scalability, security & privacy, resource management, and load balancing that could be an effective research field for the next 5-10 years. In this section, we are highlighting current open challenges & future research directions in the area of fog computing and categorizing them into various categories.

Fig. 14
Download : Download high-res image (427KB)
Download : Download full-size image
Fig. 14. Hype cycle for fog computing.

6.1. Infrastructure and architecture
Fog computing technology will change in a way that requires to grasp market acceptance to support all smart devices. There are many open-challenges present for seeding-level computing sample [117] [123].

•
Deployment Issue: The OpenFog is illustrated as an n-tier environment for end-users. However, the fog layer may produce latency issues in the emerging fog computing frameworks. Therefore, future researchers can work on the deployment part of the fog computing framework in the following ways:

•
Standard architecture: Although the fog platform includes performance, flexibility, manageability, security, and data management, further research is required to examine and achieve more insights into each layer with accurate data for the fog computing frameworks in Industry 4.0 [169].

•
Interoperability and Federation of Fog Computing Systems: The interoperability is one key reason in fog computing to minimize the latency. That's why fog devices or servers are processing requests instead of sending them to the cloud data centers.

•
QoS Management: The QoS Management considers various QoS metrics and need to develop an appropriate SLA management for the fog computing frameworks.

•
Scalability: There is a need to design mechanisms to scale up-resources from the cloud and support-scaling of resources in the fog computing frameworks.

•
Heterogeneity: The design of exhaustive and flexible semantic ontologies is needed to earn a clear cut image of heterogeneity in terms of storage and computing ability.

•
Mobility: There is a need to design mechanisms that considers the mobility of fog computing frameworks. Make secure the constancy of provided services against the activity of fog nodes and Internet of Things / end-user devices.

6.2. Platform and performance metrics
•
Resource management: The resources are non-static, heterogeneous in Fog computing frameworks. As resource scheduling and allocation are quite challenging in fog computing; future research is a need in this area [154].

•
Resource Monitoring: When many users operate a fog node in fog frameworks, monitoring is useful. Detailed research can be done in the direction of fog-resource monitoring that assist multi operator access [153].

•
Secure Fog Offloading: Offloading chores contain some security as well as privacy concerns. Therefore, designing an efficient and lightweight mechanism for fog computing framework is required.

•
Failure management: The probability of fog node and device failure in the fog computing framework is always there [56]. Moreover, the management and control of fog computing are not central and QoS parameters are not defined. Therefore, it is necessary to ensure SLA to manage failure rate [149].

•
Communication between different layers: There should be no interruption in connection with smart devices. Along with Fog computing connections, how issues related to IoT devices should be handled is an essential research issue in framework development [45].

•
Security and Privacy: These are two important research issues in fog computing frameworks to secure data at fog layer [80].

6.3. Application design
•
Application service management: Research related to application management for Fog-based solutions is quite necessary. The level of service, quality and availability is the most complex phenomenon in the framework of Fog computing [44].

•
Application modeling: The modeling of fog devices is not easy because the applications must collect user-data from distinct IoT devices [169]. Therefore, further research in generating generic applications is needed.

6.4. Green fog computing
To mitigate the energy-consumption of IoT devices, battery storage energy for IoT devices and smart sensors are promising research areas [101]. Moreover, these should be time saving and cost-effective for the improvement and further development of any framework based on fog computing [60].

6.5. Hardware and software technologies
Hardware and software play an essential role in the development of fog computing framework. Non-volatile storage technologies are not used for fog computing networks even though the presence of edge/fog computing [101]. Therefore, fog-to-cloud interconnection research is mandatory, and there is enormous scope to improve the hardware and software technologies for the fog computing environment [101].

6.6. Emerging trends and open challenges
The following are open challenges related to emerging trends in computing:

•
Serverless Edge Computing: The concept of Serverless Edge Computing can be utilized to improve the scalability and reduce the cost [17]. Further, the popular technologies such as Quantum Computing and Blockchain can be used along with Serverless Edge Computing to improve computational speed and security [55].

•
Quantum Computing: Our lives are already revolutionized by the quantum physics by giving us great products like transistor and laser. In a similar way, the quantum communication and quantum computing has the potential to empower the current systems such as finance, healthcare and security [55]. Recent researches predict the million-billion dollar quantum industry in next 5 to 10 years [61]. The real-world implementation challenges of quantum computing must be examined to make this technology reliable.

•
Artificial Intelligence: Research related to AI applications are leading to increase in demand for fog computing [194]. Artificial intelligent system can integrate with the fog computing framework to improve the overall performance of the AI systems.

•
Edge Intelligence: Edge computing is normally performed directly on the devices to which the sensors are connected that are physically close [187]. The Fog computing data is processed within the fog node so there is a vast scope of research in the integration of both Edge-Fog and plays an important role to reduce network delay and useful for many Edge computing applications.

7. Summary and conclusions
In this paper, a systematic literature review technique is performed on current research articles based on the frameworks of fog computing. An inclusive understanding of the fog frameworks and deliberation on open research challenges, which can be achieved with this review. The implementation of the SLR-based approach has been done by using an exploration query on the 523+ published research articles. Finally, 154 papers have been selected that highlighted fog computing frameworks. As per the current status of fog computing, the analysis of primary studies have been done based on the development, metrics, platform, and frameworks for fog computing. Furthermore, the detailed taxonomy has been proposed to analyze and compare the evaluation factors, trends analysis, and observations made based on selected studies. This paper has also discussed and summarized the previous reviewed studies in terms of development, performance metrics, fog platform-based attributes, communication mode, and applications. Finally, we have highlighted promising future directions and open challenges for further research in the area of fog computing.