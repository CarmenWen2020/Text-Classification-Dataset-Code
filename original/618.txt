Abstract
The Industrial Internet of Things (IIoT) enhances smart manufacturing process that escalates productivity through revolutionary techniques. The manufacturing process is sophisticated and complex because of various IoT domains (e.g. industries). A final product is an outcome of the efforts of several departments from different industries. However, this raises the cross-domain communication's privacy and security issues. Cross-domain data sharing for product manufacturing is a challenging research direction. This paper proposes a centralized cloud-based cross-domain data sharing platform using multiple security gateways. The security gateways use the blockchain to store the information into the centralized cloud. Once the application reported a malicious activity, the centralized cloud verifies the concern from the blockchain. Further, an action is taken against the party that performs malicious activity in the security gateways. The algorithms are designed for authentication and transaction of data. The proposed framework is able the secure data movement among different domains globally. The experiment result demonstrates that the proposed security and privacy framework helps to maintain trust among the industries that collaborate on manufacturing across the domains.

Previous
Next 
Keywords
Blockchain

Industrial Internet of Things (IIoT)

Cross-domain data sharing

Smart contract

Authentication

1. Introduction
The Industrial Internet of Things (IIoT) is emerging as a vital enabling technology in recent days due to the advent of Industry 4.0 [15] and blockchain-based data aggregation [18]. IIoT provides numerous services in manufacturing leveraging the Internet besides connecting only devices. The services are generally offered to preserve privacy within a cloud-based platform [25][12]. In IIoT, inter-connectivity facilitates among devices to collaborate, which significantly increases productivity and efficiency.

IIoT technologies provide a platform to connect devices with a factory domain to facilitate tasks of automating manufacturing. This service substantially increases productivity and minimizes the cost of management. Nevertheless, it is generally challenging to possess a full-fledged product production process within an individual domain since, nowadays, the production process is becoming very sophisticated. Hence, it is a trend to distribute the complete product manufacturing process over numerous domains having a close relationship. Therefore, devices distributed across domains need to share and exchange data for collaboration for the production process using an efficient communication mechanism.

The advancement of communication technology makes tasks easy to connect devices of various domains. Still, it is not a trivial job to establish a secure communication mechanism among the devices in various domains because of trust and other unsolved security issues. Typically, domains may not trust each other since a domain may not want to expose their sensitive data to others. For example, a factory manager may not permit its devices to be accessed by other devices in outside domains without proper authentication. This research falls within the industrial IoT domain scope that needs to enable trust for the cross-domain communication among entities leveraging recent techniques such as blockchain, machine learning, Ephemeral Elliptic Curve Diffie-Hellman (ECDHE) and Identity-based Signature (IBS), and cloud computing.

This paper proposed a framework with improved trust and accountability by addressing the challenges discussed above in a cross-domain data sharing system. Trust defines the reliability of the platform to receive the desired data. The framework applies a specific penalty to a data provider to gradually build trust in a legally registered data provider if the provider provides incorrect data and performs misconduct to resolve issues. Therefore, the platform gradually develops trustworthiness. The framework manages data requests and controls transactions independently.

A relaxed assumption is considered where a data source may not be a trusted node in the proposed system. Its activities are regulated using a penalty-applying approach for malicious activities. The target data nodes are also regulated to refrain them from doing malicious activities and harming the data source and or the system. Hence, during data sharing through transactions, both the source and target nodes must follow their corresponding areas' policy and rules. The security entryways of the system verify the authenticity and impose action accordingly. The transactions are stored in the blockchain to verify [13], [20], which mainly provides a solution for handling the challenge of anonymous malicious actions of the entities. In the blockchain, each transaction is recorded with the entry consists of the entity and the timestamp to conduct the auditing.

There is a centralized cloud in the system that acts as a bridge with the receiver of data and security gateway. Each security gateway is responsible for a particular area and connects all the data providers in that area to provide a platform for a relaxed trust environment among the data nodes. In relaxed trust, the data provider sends data to ensure whether the provided data is right or wrong. Therefore, to support reliable data sharing in this kind of platform, we propose a mechanism to produce the malicious misbehavior report and corresponding penalty process.

1.1. Contributions
The main contributions of this article are as follows.

1.
This research designed a blockchain-based framework for cross-domain secure data sharing, transactions, and malicious behavior reporting in industrial IoT.

2.
The framework incorporated the Ephemeral Elliptic Curve Diffie-Hellman (ECDHE) and Identity-based Signature (IBS) for authentication and key agreements.

3.
A penalty mechanism is proposed using smart-contracts to overcome false reporting and misbehaving situation from a data-provider using a centralized cloud.

4.
Multi-layer signatures are used to strengthened data integrity. A centralized security gateway is applied as a middleware for a security check of signatures.

1.2. Article organization
The organization of the article as follows: Section 2 discusses the related works. Section 3 presents the problem formulation, and Section 4 described the data-sharing system. Section 5 presents the performance evaluation. Finally, Section 6 defines the conclusion of the paper.

2. Related work
With IoT's advancement, the industrial IoT (IIoT) is getting more attention in the industry and academic domain. However, privacy threats and security vulnerabilities in industrial IoT are growing due to a lack of proper security technology. Due to the decentralized approach, collaborative and P2P-based industrial IoT is motivated to use blockchain technology for cross-domain communication and sharing information, ensuring security and vulnerabilities requirements.

Zhao et al. [30] discussed the mechanism to integrate blockchain and IIoT from the perspective of industrial requirements and proposed a blockchain-enabled IIoT framework to develop trust among the components in IIoT. The authors also developed a smart contract solution to store and process data of interaction among the IIoT model components.

Vlacheas et al. [28] proposed an intelligent Knowledge-as-a-Service (iKaaS) framework for sharing data across different clouds. The framework employs a centralized cloud that gathers data from several local cloud systems located in several countries. However, the framework does not focus on security and privacy matters concerning data exchange personal data across clouds.

Hidano et al. [7] developed a secure access gateway model that can infer the rules between two countries during personal data exchange. The mechanism takes care of privacy by controlling the application's access permissions using a flexible, controlled mechanism. The model needs a privacy certificate authority (CA) for each country. The authority acts as an administrative agency and is accountable for governing country regulations to manage personal data. For communication and interpretation of the regulation between two countries, the regulation is inferred between an application running in one country and the cloud that exists in another country using (i) privacy certificate issued by the CA where the application exists and (ii) the security policy configured by the privacy CA in the country where the local cloud exists. Unfortunately, the model lacks to support configuring access permissions for the applications that exist in the city, union, or area.

Hidano et al. [8] resolved the security problem mentioned before by proposing a hierarchical model consisting of multiple CAs. The model supports the iKaaS platform to support different regulations for personal data within the common region. Yet, the model does not support data exchange accountability and trust among the various participants. It is very important to ensure strict security and privacy policy to maintain in trans-border data sharing systems.

Authors [23] used IoT-sensing to share healthcare information [2], [10], among them tackling cross-boundary barrier using cloud computing. Moreover, the authors also proposed an urban healthcare big data framework to deal with healthcare service providers for sharing data over the cloud.

HÃ¶randner et al. [9] presented a framework for sharing data in the cloud by applying proxy re-encryption and retractable signatures to overcome barriers of privacy and security. Mainly the authors developed multi-factor authentication systems to solve the existing security vulnerabilities in the cloud platforms.

Authors in [4] presented the prospects and issues to implement blockchain technology [21] in cross-border business. The research mainly focuses on exploring the application of blockchain technology in cross-border supply chain business.

Blockchains use the concept of a distributed database that records constantly increasing blocks that are secured from altering and amendment using a sequence of transactions. These transactions are verified by the miners solving critical puzzles. The accountability of the platforms is ensured by the concept of smart contract [29]. The blockchain platform's accountability is ensured by a Smart contract [6]. Smart contract-oriented services in blockchain remove the burden of a trusted third party, where each transaction stores a list of miners who are permitted to approve the transaction. In general, the possessor of the data related to the transaction decides this.

Authors in [27] proposed a framework that combines IoT platforms and blockchain with the Hyperledger Fabric framework as the blockchain back-end for secure and decentralized IoT data sharing. Blockchain is utilized for storing access control policies and making access control decisions. The framework used identity-based encryption to provide for cryptography-enforced access control.

Authors in [16] proposed a cross-domain authentication process in an IoT environment using blockchain. The process is based on the PBFT algorithm. A smart contract implements the authentication process. An encrypted key sharing method is used to authenticate and share to ensure the security of authentication data.

Authors in [1] proposed a decentralized access control framework using Blockchain for the Internet of Things (IoT). Hierarchical based smart contracts are used to perform permission assignment and access control for cross-domain user/IoT devices. The mechanism used Proof-of-Authenticity/Integrity (PoAI) mechanism for authentication in order to search and retrieve user/IoT device platform hashes.

3. Problem formulation
This section presents the scenario of data-sharing among various domains working in collaboration in the IIoT environment.

3.1. Application scenarios
The production line of each factory is equipped with sensors, actuators, and other smart devices. The manufacturing of the product is being monitored at each stage through sensing devices. This data can be used further to make decisions to optimize manufacturing. The manufacturing units are shown in Fig. 1 are working on the same product. Therefore, extensive communication is required between these plants. Thus, a robust authentication and data sharing mechanism is required for the secure transmission of data.

3.2. Security threats
Single manufacturing units are more interconnected and open. This is a cost-efficient and highly productive scenario. However, when we consider multiple domains, the security and privacy issues raised that need to resolve seriously.

IIoT devices are prone to cyber-attacks because they are connected to the Internet. The attackers are using the eavesdropping attack to collect the sensing data to communicate over the internet [17]. In an impersonation attack, an attacker tries to impersonate as a legitimate user to cheat IIoT devices to collect the sensor's data [22][11]. Although, the man-in-middle attack forging different messages to the receiver collected from the sender. Therefore, these attacks lead to data leakage. There many other threats to the availability, integrity, privacy, and security of IIoT services [5].

In literature, the third party CA is introduced to bridge the trust of domains. However, the CA has failed throughout the world due to operational errors and compromising nature [19]. Many of CA's reap the benefit by sharing loopholes with attackers.

4. Research methodology
In this section, we discuss the proposed framework, along with the role of each component.

The proposed framework is designed to promote the collaboration of cross-domain and cross-border data sharing. The proposed framework is shown in Fig. 2. On top of the proposed framework, we deployed the centralized cloud as a knowledge base to provide the data to various applications. The security gateways are applied to provide the security and privacy of a specific region. The proposed framework promotes the production process through the inter-countries manufacturing process. The proposed framework promotes the comparative study of different countries and multiple-scale analysis. As countries or state governing bodies might have different rules for sharing personal data, the security gateways applied in different regions handle this concern. The role of various components is as follows.

â¢
Cloud: Data request is accepted through central cloud servers and performs the action accordingly. The security gateways are connected with cloud servers across the globe. Any organization can report the misbehavior; the blockchain-inspired system deployed here verifies and punishes the false reporting or misbehaving entity.

â¢
Security Gateway: The cloud passes the request to the security gateways, and further security gateways pass the same request to data hubs. These gateways play a vital role to identify the misbehaving entities in the network. The cloud is further attached to the security gateways. The data exchange between the data hub and cloud performed through the security gateways. The governing rules decided by each domain are deployed in security gateways. This helps to control the personal data within and outside the countries. Data owners are usually unaware of the security concerns, so these gateways help provide privacy control.

A token-based mechanism is designed to access the data. Once the application request from the storage hub, a token is generated by the security gateway. The token has a certain expiry time, and the application can access the data any number of times till the token is not expired. The authentication mechanism and membership certificate have been verified as per the rules of organizations and countries while issuing the token to the application. The gateway is responsible for issuing the token after verification of security protocols to access the data.

â¢
Data Hub: Various organizations deploy smart devices equipped with IoT devices. The data collected through sensing devices moved to the cloud through data hubs. It also helps to identify the IoT device with malicious behavior.

â¢
Blockchain: The cloud servers deploy and maintain the blockchain. The blockchain is used to store every action as a transaction performed on data storage, update, and retrieval through security gateways. The verification of malicious activities can be performed by cross verify the blockchain transaction. The proposed technique works with a permissioned blockchain, where authorized miners verify each transaction.

Smart contracts help to record the transactions. Even the cloud needs to verify itself before recording the transactions on the cloud servers. The Blockchain network provides the verified account to record the transaction. Once the account is verified, permission is granted to store the transaction in the block. Smart contracts also help to audit the specific transaction. The transaction can be checked with hash-id. The proposed model will analyze the misbehavior and generate the report.

â¢
Application: The application works at the organization level to request the data from the cloud and reporting malicious behavior.

Fig. 2
Download : Download high-res image (225KB)
Download : Download full-size image
Fig. 2. Cross-domain authentication and data sharing framework.

4.1. Cross-domain authentication
Ephemeral Elliptic Curve Diffie-Hellman (ECDHE) is employed in this paper for the establishment of the key. Whereas Identity-based Signature (IBS) is used for the authentication mechanism. ECDHE shared the public key and keep the private key for security purposes. Private keys are very crucial for the session key and, this must not be shared on the Internet. Once the session is over, these keys are discarded. The exchange entities can further not able to use the same session to communicate and exchange the data. The main reason to adopt the ECDHE is that it is relatively fast. As compared to DHE, the ECDHE has a smaller message. Furthermore, ECDHE is known for its biodiversity. Once, the ECDHE has been deployed on the cloud servers, it works for all the versions. For example, fossilization has overcome whether someone uses IE 6 or 7.

1.
IIoT-tier: The entity tier contains the IIoT devices. These devices have the facility to act as a sensor or actuator. The authentication of these devices is performed through the UKG unit. The IIoT devices put a request for the private key to the UKG unit.

2.
Entity-tier: The entity-tier in the proposed system consists of UKG and IIoT devices. The private keys and requests are managed by the UKG specifically for the IIoT devices. Further, the devices received the private keys generated through the UKG unit. The authentication process is completed with the coordination of UA and UB tiers also.

3.
Unit of Blockchain (UB): A centralized record needs to maintain with the consortium blockchain. It is employed to store the domain-oriented data in an encapsulated way. The separate server is used for the consortium blockchain to reduce the workload of the UKG server.

4.
Unit of Authentication (UA): The authentication mechanism realized with the IBS scheme. Generally, this process has two sub-parts: Signature-Generation and verification. These processes are fine-grained and required more computation. The centralized cloud is an overall manager, and responsible for the monitoring and control. UA acts as a request representative for the generation of signature and verification processes. The workload of UKG is divided into the UB and UA.

5.
Blockchain-tier: The consortium blockchain is employed in this tier. The administrative information of various domains has been encapsulated in the blocks. This information is further used in the cross-domain authentication process and shared as per the requirement.

There may be numerous parameters and their corresponding values need to store for the domain-specific authentication process. So, the required information is stored in the blockchain.

6.
Storage unit: The domain's public key list for the entities, public key of domain, names of domain are stored separately on the centralized cloud unit. The JSON file is used to store all the information. The file is hashed to protect the information, and this hash is stored in the blockchain.

A man-in-the-middle attack can affect the ECDHE when the public key received cannot be validated for authenticated sources. To avoid the man-in-the-middle attack, the public key is sent via the message integration process. The authenticated private key signed the public key.

4.2. Data-sharing mechanism
4.2.1. Data access
Once the authentication is successful, the next step is to perform the access to data. Following steps are involved in data access:

1.
A request is put to the centralized cloud by the user to access the specific region data.

2.
The database module records the request. Further, the centralized cloud moves the request to the regional security gateway.

3.
The security gateways are employed to analyze the smart-contract to decide to entertain the request or reject it.

4.
A combination of data and signature is generated and sent to the security gateways.

5.
Once the signature is verified the security gateway further performs its signatures and forwards the new combination to the centralized cloud.

6.
The transaction details are stored in the blockchain as per Algorithm 1. Initially the status is set to false (line no. 1). The authentication status is verified from the security gateways. The user account is passed as a parameter (line no. 2). The authentication status is checked whether it is true or false. If the status is true then the metadata is stored and set the global status as true. Otherwise, discard the transaction due to unauthorization (line no. 3-8). If the status is true, then perform the authentication of the user account from the centralized cloud. If authentication status is true then send the block at blockchain and its metadata to centralized cloud storage. This function returns the Block Id after a successful record of the transaction (line no. 19). If the authentication is failed at any point it sends the null and halts the smart contract.

Algorithm 1
Download : Download high-res image (102KB)
Download : Download full-size image
Algorithm 1. Transaction using blockchain.

7.
After verification is completed, the centralized cloud communicates the requested information to the user.

4.2.2. Accountability mechanism
Once the transaction has been stored in the blockchain. The next vital step in cross-domain authentication is to analyze the transaction for malicious behavior. The domain-level policies are stored in the native smart contract, and the global policies are stored in the imported smart contract. The accountability mechanism consists of the following steps:

1.
The application is equipped with the features to report any misbehavior. The user-owned this application can report any issue. This request further uploads to the cloud. The smart contract in the cloud is verified for the misbehavior complaint.

2.
The blockchain transactions of reported users are verified and prepare an audit report.

3.
The native smart contract takes consideration of reported misbehavior to properly justifying the accountability. The imported smart contract deploys in the central cloud. This further verifies the smart contract against the issue raised by the user.

4.
Once the verification of native and imported smart contracts is performed in the central cloud, the blockchain transactions are verified as per the proposed model.

5.
The misbehavior reported by the user could be proven true or false. In case, if the issue raised is true then the domain or region has to bear liability in terms of punishment as per the smart contracts. The decided penalty has been recorded in the database as per Fig. 5.

Fig. 5
Download : Download high-res image (70KB)
Download : Download full-size image
Fig. 5. Accountability process using smart contracts.

6.
Furthermore, the security gateways of all the regions are also informed about the penalty of misbehaving domain/region.

7.
The security gateway further analyzes the received report. If the report belongs to itself, then it sends the report to the data hub performed malicious activity.

8.
As per Algorithm 2, once the application is registered on the proposed system, an application id is generated represents with . Further,  has to pass the test certification test to receive the certificate of membership CF, here  represents the time stamp. The application request region is denoted with , whereas  presents the region of data hub. The database module is the centralized cloud that received the event  for request data. If the request is similar above the threshold then give the response. In case, if request and response are below the threshold value then the penalty will be calculated and return. Otherwise, revoke the request by updating time-variant  by paying the decided amount.

5. Performance evaluation
The evaluation of the proposed system is performed by Java 1.8 code in Windows 7 PC with an i5 processor and 16GB RAM. The implementation of signatures is performed with ECDHE and Identity-based Signature (IBS) implements device identity.

5.1. Cost to generate the block-id in blockchain
During the period of transaction, an isolated block-id generation cost is taken for checking the performance. The transaction number of users increases by one in Fig. 6. As the number of users increases so does the graph. It depicts a linear relationship 0.20051 million amount of gas is taken by the transaction for 5 users, and 2.0063 million gas is taken by 50 users in the test. The amount of gas increases with the user 35. So there is an assumption that network stability impacts the transaction. The faster the network is less amount of gas is required for the transaction.

Fig. 6
Download : Download high-res image (162KB)
Download : Download full-size image
Fig. 6. Transaction cost of Block-id generation.

5.2. Cost of transaction without generation of block-id
In each transaction, the amount of gas is calculated for finishing the transaction of data. The amount of gas taken by the five users for transactions is 0.65 million. There is linearity in Fig. 7 until user 25, after that a different form is shown. Also, an important role is played by network stability in the gas fee. The network stability is reformed after user 16 for obtaining better performance. The graph is stable between 40 and 45 users. The stability reason is related to network stability. 8 million gas cost is used by the user 50 for finishing, which is in linear stage with other users.

Fig. 7
Download : Download high-res image (214KB)
Download : Download full-size image
Fig. 7. Transaction cost without Block-id generation.

5.3. Total cost of the transaction
As depicted in Fig. 8, three lines of the graph exist. In the blockchain, the total gas cost is depicted by the purple line. From the analysis, it can be seen that for users 5 in the beginning, without block-id generation, the transaction and total cost have very little difference. However, there exists a low block-id generation cost. 0.8505 million is the total transaction cost where 0.2005 million is block-id generation cost and transaction cost is 0.65 million of gas. According to the 20 users case, 3.9 million total amount of gas is required that is quite sound as compare to the generation cost of block-id. In conclusion, the cost of transactions elevates with the number of users. However, in the beginning, the block-id cost of generation is lower for users 5. For 50 users, when there is a transaction between a centralized cloud and a security gateway, the maximum gas amount can be 10 million gas as per the proposed system.

Fig. 8
Download : Download high-res image (209KB)
Download : Download full-size image
Fig. 8. Comparison of various transaction cost in Blockchain. (For interpretation of the colors in the figure(s), the reader is referred to the web version of this article.)

5.4. Signature evaluation
In our system, ECDHE is used for the generation of signatures. Every exchange needed distinct signatures for each transaction of data for signing and verification. On data request justification, signed data is shared by data hubs with signature. The signature is verified by the security gateway and it ensures that the data is sent from authenticated or trusted data providers. Later, data is again signed by security gateway pair with a centralized cloud. Then the signature is verified by a centralized cloud and the data is sent to the requester of data.

The signature function is analyzed with input size and time. By the program, 5 to 20 kb of data is taken. In Fig. 9a, the behavior of the signature id is depicted with the increase in the input size. The graph is parallel and linear to the x-axis, which refers to that with the elevating input size, a similar amount of time is needed by signature. The size of input has no effect on the time taken for signing the program with ECDHE. The behavior of a multilayer signature is depicted in Fig. 9b. The graph is similar to Fig. 9a that refers to signing twice or multiple times the signature takes time as a single sign.

Fig. 9
Download : Download high-res image (184KB)
Download : Download full-size image
Fig. 9. Comparison of time taken by signatures.

There is no effect of input size on a multilayer signature. It takes 29 ms for generating a signature in both of the cases. In conclusion, there is no effect of input size on signature generation, although the signatures are done at each layer.

5.5. Comparison with similar systems
The related systems are compared with our system based on different parameters as described in Table 1. A fair comparison of these techniques performed. Johnson et al. [14] proposed the Digital Signature Algorithm (DSA) based on elliptic curve analogue known as Elliptic Curve Digital Signature Algorithm (ECDSA). This technique is accepted for various standards such as ISO, ANSI, IEEE, and NIST in 1998, 1999, and 2000 respectively. The proposed technique used the latest robust techniques such as blockchain to enhance cross-domain communication. Shafagh et al. [24] used the cloud as a central unit for data management. The authors used the blockchain for data management and access controls. This technique is not suitable for cross-border data sharing. Our proposed technique has the potential to work with a multi-cloud environment which is much suitable for cross-domain and cross-border secure data sharing. Azaria et al. [3] used the blockchain to store the electronics medical records (EMRs). Data aggregation is used to fetch useful information from the EMRs. In comparison to this technique, our proposed model used the smart-contracts to ensure the authentic exchange of information. If any party responsible for the misbehavior, the penalty is imposed on that party. Shen et al. [26] have worked on secure authentication of devices for the cross-domains. The proposed authentication is robust enough for the authentication mechanism. The proposed model got a lot of inspiration from this paper. We further used the smart contracts and penalty mechanism which ensure the trustworthy participation of various users. The system carrying the feature marked with â, and if the feature is not available marked with â. The comparison shows that our proposed model has higher advantages over the existing system.


Table 1. Comparison of existing related system with proposed system.

Parameter	Johnson et al. [14]	Shafagh et al. [24]	Azaria et al. [3]	Shen et al. [26]	Our Work
Blockchain	â	â	â	â	â
Smart-contracts	â	â	â	â	â
Multi-Cloud Ecosystem	â	â	â	â	â
Privacy of Owner	â	â	â	â	â
Cross domain/ border Policies	â	â	â	â	â
Penalty Scheme	â	â	â	â	â
Data Accountability	â	â	â	â	â
Trusted Data Reciever/ Provider	â	â	â	â	â
Trusted Platform	â	â	â	â	â
6. Conclusion
In this research, a data-sharing platform is proposed for cross-domain data utilization. The centralized cloud is leveraged by a platform that is responsible for collecting requested data from providers of data working in different regions. On a global blockchain, the transaction is to be recorded by the data provider while providing the data. In case of any kind of misbehavior in applications, the transaction can be audited by a centralized cloud. Also, the misbehaving application or data provider can be penalized using smart contracts. For the misbehavior, the data receiver or sender, or any of the participating entities can be punished. The device authentication is strengthened with Ephemeral Elliptic Curve Diffie-Hellman (ECDHE) and Identity-based Signature (IBS). Hence, this research provides an accountable cross-domain platform for data sharing where the data provider is not fully trusted while requesting access to data. The searchability is yet to be investigated on encrypted data through the platform. Our future work will be a prototyping platform introduced for data receivers, data providers for large-scale data.