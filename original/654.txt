Abstract
The development of cloud-assisted electronic health system effectively addresses the drawbacks of traditional medical management system. However, some challenging problems such as security and privacy in data storage and sharing cannot be ignored. First, it is difficult to ensure the integrity of electronic health records (EHRs) during the data outsourcing process. Second, it is difficult to guarantee the privacy and traceability of EHRs during the data sharing process. In this paper, a blockchain-based eHealth system called BCES is proposed to ensure that the manipulation of EHRs can be audited. In BCES, each legitimate query manipulation of data consumers, together with each legitimate outsourcing manipulation of hospitals, will be written into the blockchain as a transaction for permanent storage, which ensures the traceability. At the same time, the attributes-based proxy re-encryption is adopted to achieve fine-grained access control of medical data, and any behavior that threatens the integrity of EHRs will be discovered by the auditor. Due to the traceable and tamper-resistant characteristic of blockchain, any entity that had an illegal manipulation of EHRs will be held accountable to the evidence of our constructed Proof-Chain. Finally, security analysis and performance evaluation demonstrate that this scheme is secure and efficient.

Previous
Keywords
Blockchain

Cloud computing

Electronic health records

Data outsourcing and sharing

1. Introduction
Applying Cloud Computing and Internet of Things technologies in medical and diagnostic services industry has already shown great advantages to improving the quality of services. Among the numerous existing schemes, the cloud-assisted electronic health system (eHealth System) has the most prominent manifestation [13], [30]. Compared with the traditional paper-based systems, eHealth systems provide a more flexible, efficient and convenient platform for storing and processing electronic health records (EHRs) from different medical institutions [4]. There is no doubt that the implementation of the cloud-assisted electronic health system will greatly change the current medical applications. Specifically, eHealth System will allow medical institutions to outsource patients’ EHRs to cloud servers and establish flexible access control mechanism without incurring significant storage and maintenance costs [32].

Although the superiority of the cloud-assisted electronichealth system is obvious, as an emerging application, there will inevitably be some security and privacy issues [29]. The medical institutions, such as hospitals, usually maintain the primary stewardship of eHealth system [11]. Therefore, the pre-processing and the outsourcing process of EHRs are usually completed by hospitals once authorized by patients. Patients can only access their EHRs during the interaction with hospitals. Most of the other time, patients have no control over their EHRs. Therefore, in order to improve the quality of medical services, allowing users to monitor their own data at any time is an important issue that needs to be resolved in current stage of researches.

Meanwhile, cloud service providers are unwilling to invest too much money and equipment to protect the privacy of patients’ EHRs out of their Service Level Agreements (SLA). They are simply committed to protecting data privacy as much as possible [1]. A single point of failure of the cloud server is also common in reality, and once the failure occurs, the integrity of EHRs is bound to be endangered [5]. Therefore, excessive trust cannot be placed on cloud service providers, the design of new strategies to break down cloud service providers’ right to control EHRs also becomes the focus of this paper.

A few existing schemes assume that cloud servers will not collude with authorized hospitals to tamper with patients’ EHRs. However, this assumption does not conform to the real situation in a sense. As commercial organizations, cloud service providers tend to compromise with interests. Therefore, it is difficult to deal with such trouble without introducing a fully trusted third-party regulator.

Another concern in cloud-assisted electronic health systems is how to provide a controlled, cross-domain and flexible data sharing of EHRs. The dissemination of EHRs has been considered to be a breakthrough for the discovery of new techniques and new therapies for curing diseases [14]. However, on one hand, the current cloud service providers have not achieved a satisfactory data sharing mechanism; on the other hand, data sharing at the current stage is highly likely to cause the risk of privacy leakage [20]. To address this problem, attribute-based cryptosystem is embedded in cloud data sharing schemes [15], [22], [26], which can realize one-to-many cloud data sharing [2], [12], and any individual who satisfies the attribute condition can access the source data. However, in the cloud-assisted electronic health system, patients, as data owners, usually do not want visitors who meet the attribute conditions to arbitrarily access their valuable EHRs, and they expect each visit must be authorized. Therefore, it is challenging to implement fine-grained access control and ensure that data transactions are legal and traceable.

Blockchain is a decentralized distributed database that creates a completely trusted environment between unfamiliar individuals without third-party trust endorsements [7]. Furthermore, blockchain combined with cryptography technology can ensure transaction traceability, irreparable modification, non-repudiation, support data security sharing and large-scale collaborative computing, as well as privacy protection for users’ identity and data [34]. In order to further develop the potential of the blockchain, many emerging technologies have also been applied to blockchain systems, such as edge computing [8]. A blockchain system combining multiple technologies will achieve greater scalability, security and efficiency. Due to the characteristic of the hash function, once the data is written into the blockchain through the consensus mechanism, no one can modify or forge the data. Therefore, the blockchain technology has been seen as a powerful tool to address the above problems in cloud-assisted electronic health systems through its attractive features [19]. However, many current studies on blockchain-based medical systems simply focus on the storage of data and the blockchain is only regarded as a distributed database, which have not give play to the potential value. Furthermore, incomplete secure data sharing and a large amount of data redundancy make many schemes unable to be applied in practice. Since current verification schemes usually involve complex calculations, patients with low computing power are always struggling to pay high computational costs to check the accuracy of their data.

Based on the foregoing overview on progresses recorded and challenges in current researches, a blockchain-based eHealth system called BCES is proposed, in order to achieve integrity of EHRs and support the data sharing of confidential EHRs. BCES inherits the advantages of traditional electronic medical systems and overcomes the defects mentioned above. Different from existing blockchain schemes, our scheme abandons the idea of using blockchain to store medical data indexes, thereby ensuring data integrity to a certain extent. The innovation of our solution is that the key information of each outsourcing and query operation is regarded as a transaction, and the transaction bill will eventually be written into the blockchain for permanent storage. Any entity with illegal manipulation will be held responsible based on the evidence in the blockchain.

Specifically, the contributions of this paper are as follows:

(1) Aiming at the drawbacks of existing medical systems, we designed a novel and efficient blockchain-based eHealth system-BCES. In this scheme, the characteristics of the blockchain are fully utilized to ensure that all kinds of users’ manipulation logs of EHRs are traceable and transparent. Moreover, the structure of the Proof-Chain retains a reasonable channel of accountability for vulnerable patient groups.

(2) Flexible access control strategies are designed for the secure sharing of EHRs. The introduction of attributes allows users to customize the authorization group, and the introduction of proxy nodes allows patients to successfully complete data authorization without requiring large computing power.

(3) Benefits from the security characteristics of the blockchain, our scheme can resist a variety of attacks, such as substitution attack, migration attack, collusion attack and replay attack, etc. And meanwhile, a performance evaluation is conducted to show the feasibility and efficiency of our scheme.

The rest of this paper is organized as follows: Section 2 reviews related work. Preliminaries are described in Section 3. In Section 4, we make the problem statement and clarify the design goals. The specific construction of our scheme is proposed in Section 5. Simulation results and discussions are presented in Section 6. Section 7 concludes the whole paper.

2. Related work
Due to the explosive growth of medical data, the traditional isolated medical data management schemes have shown obvious flaws. In order to overcome the shortcomings and improve the quality of medical services, some interactive medical systems have been implemented [16], [25]. Most of these solutions focus on how to realize the interaction between medical institutions, but pay little attention to the security and privacy threats of EHRs. As the value of medical data continues to grow, the security and privacy issues towards outsourced EHRs are gradually attracting researcher’s concerns [9]. Esposito [24] introduced in detail the drawbacks of using only cloud storage technology to establish a data sharing system in the medical field. They proposed the use of blockchain in medical data sharing to solve data security issues. However, in fact, the article does not propose a specific and practical scheme to these challenges. Xia et al. designed a system for effective management and protection of medical records based on blockchain. They ensure data storage security by verifying identities and encryption keys [27]. However, this system did not consider the risk of data leakage during the data sharing process, which made the system unsustainable for applications in reality. Cao S, and Neri. et al. [3] present a secure cloud-assisted eHealth system to prevent outsourced EHRs from modification by using Ethereum. However, it uses a common symmetric encryption algorithm without considering the difficulties of medical data sharing encountered in computation complexity. Zheng X. et al. [33] proposed a medical data sharing scheme that combines blockchain, cloud computing, and machine learning. This scheme can easily realize the sharing of medical data between various institutions. However, it cannot verify the integrity of cloud medical data, and data consumers are unable to know whether they have received the correct medical data. Similarly, Ferdous et al. [6] proposed DRAMS, a blockchain-based distributed monitoring infrastructure for distributed access control systems. DRAMS provides a data security solution, but it does not really solve the problem of effective data sharing. The problem of data security can be solved with blockchain, but how to achieve effective access control in the process of data exchange is also a concern worth studying. In this regard, Li et al. put forward a novel patient-centric framework in a semi-trusted server and designed a set of mechanisms for data access control to stored EHRs. They use ABE (Attribute-Base Encryption) technology to encrypt the EHR file of each patient [18]. However, ABE has many disadvantages. Once the user modifies his access strategy, the system will need additional computational overhead to perform attribute revocation and re-encrypt the data, which is a disaster for the computationally disadvantaged patient group [10], [17]. Xia Q. et al. [28] suggested a blockchain-based electronic medical record sharing scheme. This scheme makes full use of the tamper-resistant characteristics of the blockchain to solve the problem of access control of medical data. However, the patient as the data owner cannot monitor the EHRs in real time, which is not in the patient’s actual benefits. Particularly, Yang G. et al. [31] also proposed an architecture that implements blockchain technology to the current EHR system, which is compatible with the existing systems. However, health providers alone take the main responsibility for maintaining the blockchain, including creating, verifying and appending new blocks, which will inevitably threaten the efficiency of the entire system.

By analyzing the existing research schemes, it can be found that the combination of blockchain and medical systems has facilitated the enhancement of service quality. However, what cannot be ignored is that medical systems based on blockchain and cloud storage are still flawed in terms of fine-grained access control and privacy protection of data sharing. In particular, how to let patients grasp the details of the data sharing process in real time is an urgent problem to be solved. And unsatisfactory efficiency or security have become obstacles to the implementation of these schemes. These issues are exactly the concerns of this paper. In our proposed BCES scheme, a Proof-Chain is used to store users’ manipulation logs, and the attribute-based proxy re-encryption component are embedded in BCES to realize secure data sharing which is computationally friendly to patients. It is believed that our scheme will make up for the gaps of above-mentioned researches.

3. Preliminaries
3.1. Bilinear maps
Let 
 be an additive cycle group and 
 be a multiplicative group with the same order , and  is the generator of 
. A bilinear map 
 has the following properties:

(1) Bilinearity: 
 for all 
 and 
.

(2) Nondegeneracy: there exists 
, .

(3) Computability: there exists an efficiently computable algorithm for computing.

Bilinear mapping is an important cryptographic tool. It is used by the cryptographic algorithms such as KeyGen, Sign, and Verify mentioned in the following content.

3.2. Attribute-based proxy re-encryption
Attribute-based proxy re-encryption (ABPRE) combines the characteristics of both attribute-based encryption (ABE) and proxy re-encryption (PRE) [21], which can effectively ensure data security and implement fine-grained access control and encrypted data sharing in the cloud computing environment. An ABPRE scheme is a 6-tuple, which includes the following algorithms:

: This algorithm inputs a parameter  and system attribute set , then generates the public parameters  and the master secret key .

: This algorithm inputs  and a set of attributes 
, then generates a secret key 
 associated with 
.

: This algorithm inputs , a message  and a access structure , then generates a ciphertext .

: This algorithm inputs 
 and a new access 
, and generates a re-encryption key 
.

: This algorithm inputs a re-encryption key 
, a ciphertext , and then checks whether the attributes set  in 
 satisfies the access structure  specified for ; if , it generates a re-encrypted ciphertext 
, otherwise, it returns false.

: This algorithm inputs a secret key 
, a re-encrypted ciphertext 
, the algorithm first checks whether the attribute set 
 satisfies the access structure 
, that is, if 
, it returns false, otherwise, returns .

3.3. Blockchain
Blockchain is a chained data structure consisting of several data blocks connected by hash function. It implements functions such as data verification, sharing, calculation, and storage through a consensus mechanism. The blockchain provides a distributed trust ledger for each participant, and each node or user maintains and stores the exactly same ledger, which ensures that all users and nodes in the corresponding blockchain are completely consistent. In different application scenarios, blockchain can store and process different data.

A typical blockchain structure is shown in Fig. 1.

3.4. Attribute Based Signature (ABS)
The blockchain network needs good anonymity. ABS scheme can divide the identity features perfectly, so it can be well applied to distributed networks.

The ABS scheme proposed by Sun Y.et al. [23] consists of four algorithms:

: This algorithm inputs a parameter  and generates a system public key , a master secret key .

 This algorithm inputs  and a set of attributes 
, then generates a secret key 
, a verification key 
 associated with 
.

: This algorithm inputs , a secret key 
, a message , the access structure , and then returns a signature .

Verify(
, ): This algorithm inputs 
, a signature , the access structure  and attribute set 
, and then the signature is valid if 
.

4. Problem statement
4.1. Analysis of existing cloud-assisted eHealth systems
The typical system model is shown in Fig. 2. Generally, there are five different entities in the model: hospitals, patients, cloud service provider (CSP), research institutions and key server.

As a trusted authority, key server is responsible for distributing key pairs for participating users. CSP stores data from different hospitals and provides an EHRs sharing platform. The research institution sends query requests to the cloud according to its own needs and obtains the query result. Doctors interact with patients and generate EHRs.

Under this system model, there is a hypothesis that patients as data owners lack sufficient computation, communication, and storage resources to process their medical data, and the hospital acts as an authorized organization with enough advanced equipment to store and process patients’ EHRs. Therefore, patients do not participate in any manipulation of their own medical data during a complete diagnosing, all they need to do is to authorize the hospital to upload EHRs to the cloud. While the patient’s EHRs are outsourced to the cloud, the patient also loses control over his or her own EHRs, and the manipulation of the medical data is transparent to the patient.

Though the typical scheme takes advantage of cryptography to defend against external attacks, for some internal attacks such as doctor’s tampering with EHRs, there are obvious security flaws.

4.2. Blockchain-Based eHealth System (BCES)
Designed specifically for user rights, BCES is further optimized on the basis of traditional cloud-assisted electronic health systems, using blockchain to record operational information from data generation to cloud storage.

Our system model consists of seven entities: (1) patients; (2) hospitals; (3) key server; (4) research institutions; (5) cloud service provider (CSP); (6) auditors; (7) Blockchain (as shown in Fig. 3). Their respective functions can be described as follows:

(1) Patients: As the actual owners of EHRs, they are responsible for providing the original medical data and managing their own EHRs remotely.

(2) Hospitals: Hospitals are delegated by patients to pre-process the EHRs and upload them to the cloud.

(3) Key Server: Key Servers’ duty is to generate and distribute key pairs to other entities.

(4) Research Institutions: Research institutions are typical data consumers who send query requests to the cloud server and provide their own access structures when needed.

(5) Cloud Service Provider: The CSP, as a multi-party intermediary, is responsible for storing and transmitting the EHRs.

(6) Auditor: The auditor is responsible for auditing data security and manipulation security.

(7) Blockchain: The blockchain is the core of this system model, and the manipulations for each phase of EHRs will be recorded in the blocks. In view of the tamper-resistant and traceable characteristic of the blockchain, the data stored in the blockchain will be kept as evidence. Once the illegal manipulation is checked in the subsequent verification process, the entity’s responsibility can be investigated according to the evidence stored in the blockchain.

4.3. Security model
The key server and auditor in BCES are fully trusted, while the cloud service provider and hospital are considered as semi-trusted. They are only trustworthy for a period of time, but in some situations involving their own interests, they may execute some illegal manipulations.

Meanwhile, we assume that our encryption algorithm for EHRs is sufficiently secure. Neither an internal adversary nor an external adversary can crack the ciphertext without obtaining the decryption key, such as modifying the encrypted EHRs. However, the adversaries can make some illegal manipulations on the ciphertext, such as only deleting the ciphertext, issuing query requests without restriction, and substituting the ciphertext with forged one.

4.4. Design goals
Under the aforementioned system and the security model, our aim is to design a blockchain-based eHealth system for accountability, data owners (patients) are able to detect whether any entity has illegally manipulated their EHRs during each step and to achieve accountability and rights protection. Particularly, the following three properties must be held.

(1) Ensure the security of the data outsourcing process executed by hospitals. Whether the hospital is trusted or not in the diagnosing period can be judged in our security model. However, the hospital may forge EHRs later to cover their faults made in the diagnosing period due to its semi-trusted characteristic.

(2) Ensure the security of data storage in the cloud. Most patients’ EHRs in the cloud are usually in a state of long-term unused. CSP, for its own benefit, may migrate EHRs that are used at a low frequency to a server with poor service quality or long service response. This undoubtedly seriously jeopardizes the integrity of EHRs.

(3) Ensure the security of the data sharing process to prevent data abuse or theft. EHRs may be used by multiple other unauthorized research institutions under only one valid authorization from data owner. EHRs may also be used by research institutions without authorization.

5. The proposed scheme-BCES
In this section, we introduce the construction and workflow of BCES in detail. Roughly, our scheme can be divided into three parts which include system setting up, data outsourcing and data sharing. To simplify the description, the meaning of some special characters are shown as Table 1.


Table 1. Common notation description.

Notations	Descriptions
Number of participating users in the system
Set of different types of users
Blockchain account address
Generator of cyclic group 
Number of ciphertext blocks
Original outsourcing transaction
Formal outsourcing transaction
Original query transaction
Formal query transaction
5.1. System setup
The system setup is performed by the key server which is a fully trusted authority. The key server first needs to initialize the KeyGen algorithm, then lets different types of users join the system, and finally releases private key to users. We give a detailed description of the following two parts:

: As shown in Algorithm 1, the key server initializes the setup scheme, generates the public parameters  and the master secret key  (line 1). And then the key server initializes the KeyGen scheme, generates a private key 
 and a verification key 
 for each legitimate participating user and sends it to the user through a secure channel (lines 2–6). It is worth noting that before each generation of the private key, it is necessary to verify whether the user’s attribute set meets the requirements.



Download : Download high-res image (160KB)
Download : Download full-size image
: Since this system uses the consortiumblockchain, a strict admission mechanism must be implemented for each application participant. When the user whose id is  first joins the system ( is globally identified), the key server performs a verification operation to determine the validity of the  information; if the verification result is -1, the application will be discarded (line 1), otherwise the user will be added to user sets according to its key attribute information and meanwhile a blockchain account address  is created for the user (lines 2–17). The specific steps can be found in Algorithm 2. Suppose there is an applicant trying to join the system, the algorithm first detects whether the applicant’s attribute set contains the attribute ‘patient’ (line 2). If so, the system will create a blockchain account address for the applicant and add the address information to patient set 
 (lines 3–5). The subsequent code has similar functionality as lines 2–5 aiming at different entities.



Download : Download high-res image (212KB)
Download : Download full-size image
5.2. Data outsourcing
In practice, patients usually do not have massive data storage and management capabilities. Therefore, patients tend to authorize hospitals to complete outsourcing of EHRs.

 After a complete treatment period, patient  generates authorization information as: 
where 
 denotes the generation time of authorization information,  denotes the access structure embedded in the ciphertext, 
 denotes the blockchain account address of a specific patient and  is the unique identifier of the EHR.

 Next, patient  computes 
 and forms the trusted authorization information as (
 denotes the private key of the user who has the ‘patient’ attribute and whose identity is): 

Immediately, patient  transmits the authorization information 
 to the hospital through a secure channel, and at the same time submits it to the blockchain data pool.

 After receiving the authorization information 
 from patient , hospital  extracts the access structure 
 from it and executes Algorithm 3. Due to the consideration for the security of patients’ EHRs, EHRs will be divided into several segments based on logical information during the encryption process. As shown in Algorithm 3, the generated ciphertext is a number of ciphertext blocks containing complete logical information as: 


Download : Download high-res image (96KB)
Download : Download full-size image
Fig. 4. The original outsourcing transaction.

 At the same time, the hospital  generates the original outsourcing transaction bill as shown in Fig. 4.


Download : Download high-res image (140KB)
Download : Download full-size image
The transaction bill consists of three parts. The first part is the blockchain account information of both clients to this transaction. The second part is charge information, which indicates the cost of this transaction. The third part is data information, which contains the key information 
 submitted by hospital  of this manipulation. It is worth noting that the bill is not the transaction bill which will be eventually written into the block because it lacks the necessary critical information.

The generation process of 
 is shown below:​ 
 where 
 denotes the generation time of outsourcing information, and the calculation process of 
 is shown in Fig. 5.

Subsequently, hospital  will submit the original outsourcing transaction to the blockchain data pool and 
 will be submitted to the cloud server.

 After receiving the EHRs submitted by hospital ,  first verifies whether the EHRs are from legitimate users, the specific verification process is shown in Algorithm 4.  first verifies whether the attribute information 
 conforms to the access structure 
 (line 1), and if it does,  will generate the signature information and checks whether the correct result is obtained (lines 4–8).

If verification passes,  allocates storage space for each ciphertext block as: 
Immediately,  makes the receiving feedback as: 
 Then 
 will be submitted to the blockchain data pool.


Download : Download high-res image (185KB)
Download : Download full-size image
 A formal outsourcing transaction bill will be generated in the blockchain network based on the original outsourcing transaction bill by bookkeeping nodes. The specific generation process of formal outsourcing transaction bill is shown in Algorithm 5. The algorithm first detects the initiator and receiver of the transaction (lines 2–3) and then determines the transaction type. If the initiator is hospital  and the receiver is , the transaction will be determined to be an outsourcing transaction. The bookkeeping node integrates the relevant information from the data pool into a formal outsourcing transaction bill (lines 4–7). A formal outsourcing transaction 
 will be broadcast to the blockchain network and waiting to be written into the block.

 The formal outsourcing transaction 
 will be written into the block via the PBFT consensus mechanism (see Fig. 6).

5.3. Data sharing
Medical data is often economically valuable, and any access to medical data must be approved by the data owner. Therefore, in this scheme, a complete data transaction request is as follows:

 Research institution  initiates data query requests based on their own needs, and initiates a query transaction bill from its client as shown in Fig. 7.

The composition of this transaction bill is basically the same as shown in Fig. 4, the only difference lies in the part of the data information. It is worth noting that the bill is not the transaction bill which will be eventually written into the block because it lacks the necessary critical information.

The 
 generation process in the transaction bill is as follows: 

 This query transaction bill will be submitted to the data pool and then delivered to the client of the specified patient .

 If patient  agrees with this query request, he/she will extract the applicant’s attribute information 
 from the transaction request of the research institution . Re-encryption key is subsequently generated as: 

The patient will then submit 
 to the cloud server through a secure channel, and at the same time generate evidence information for this query request, the specific process is as follows: 

Then 
 will be submitted to the blockchain data pool.

 After receiving the re-encryption information from patient ,  first checks whether the attributes 
 of the patient  meet the access structure embedded in the original ciphertext. If 
 the ciphertext will be re-encrypted as: 
 otherwise, this query request will be put on hold. And then 
 will be sent to research institution .


Download : Download high-res image (96KB)
Download : Download full-size image
Fig. 7. The original query transaction.

In order to finalize this manipulation, the data transfer certificate needs to be generated as: 

Subsequently, 
 will be submitted to theblockchain data pool.

 A formal query transaction bill (in Fig. 8) will be generated in the blockchain network based on the original query transaction bill by bookkeeping nodes. The specific generation process of formal query transaction bill is shown in Algorithm 6. The algorithm first detects the initiator and receiver of the transaction (lines 2–3), and then determines the transaction type. If the initiator is research institution  and the receiver is patient , the transaction will be determined to be a query transaction. And then the bookkeeping node integrates the relevant information from the data pool into a formal query transaction bill (lines 4–7). A formal query transaction 
 will be broadcast to the blockchain network and waiting to be written into the block.

 The formal outsourcing transaction 
 will be written into the block via the PBFT consensus mechanism.


Download : Download high-res image (274KB)
Download : Download full-size image
After a series of outsourcing and query manipulations, we will get the blockchain as shown in Fig. 9 and define it as a Proof-Chain.

6. Security analysis
We will analyze the security of BCES in terms of the following aspects.

6.1. Substitution attack
Our scheme can effectively resist substitution attack. In our security model, we assume that hospital doctors are semi-trusted. In other words, doctors will only remain absolutely honest during the period of interaction with the patient, but if the diagnosing period is completed, the doctor may substitute some EHRs in the cloud to compensate for the faults made in the diagnosing period.

Here we assume that a semi-trusted doctor tries to substitute EHRs blocks containing the diagnostic error with other ciphertext data blocks. If the ciphertext blocks being substituted are 
, due to the weak collision of hash function, it is very difficult for this doctor to find three ciphertexts to make the following equations true: 

And then auditor  calculates 
 according to the calculation process shown in Fig. 5. Obviously, due to the weak collision of hash function, we make the inference that 
. Any change in this transaction will inevitably change the Merkle root. Therefore, this situation is never allowed due to the blockchain-based tamper-resist mechanism.

6.2. Migration attack
Our scheme can effectively resist migration attack. In our security model,  is also semi-trusted. On most occasions,  will be honest, but sometimes, for its own benefit,  may migrate EHRs that are used at a low frequency to a cloud server with poor service quality or long service response.

We assume that the cloud server has migrated some ciphertext blocks 
 to old and worn-out servers. Once auditor  regularly audits, he will find that the actual server address of 
 does not match the corresponding transaction content in the blockchain, that is, 

Obviously, this situation is never allowed due to theblockchain-based tamper-resist mechanism.

6.3. Collusion attack
Our scheme can effectively resist migration attack. There are two types of collusion in this scheme. One is the collusion between hospitals and cloud service provider, and the other one is the collusion between research institutions and cloud service provider. Regarding the first situation, the hash value and location information of EHRs are stored in the blockchain. If malicious behaviors such as deletion, modification, and migration occur, auditor  can detect and hold the corresponding responsibility in time due to the blockchain-based tamper-resist mechanism. Regarding the second situation, because EHRs are encrypted with a specific access policy, data requestors with any attributes that do not meet requirements cannot directly access EHRs. Suppose that research institution  tries to directly obtain EHRs by bypassing the data owner, but the attribute information contained in his private key does not satisfy the access policy embedded in the ciphertext, so he cannot decrypt the ciphertext. At the same time, if the cloud service provider tries to send the re-encrypted ciphertext to an unauthorized entity, this behavior will not happen, because the cloud service provider cannot obtain the plaintext during the re-encryption process,  is only responsible for the re-encryption work and re-encrypted EHRs can only be decrypted by authorized entities.

6.4. Replay attack
Our scheme can effectively resist replay attack. All transactions in the system include the timestamp added by the three entities to this operation, and are accompanied by a digital signature. Since all transactions on the blockchain are transparent, any user can extract the generation time of the transaction. If a malicious user attempts to use the transaction written on the blockchain to repeat the transaction request, then during the transaction verification phase, the relevant verification node can detect that the original transaction time does not match the current time, and will discard the transaction. This mechanism effectively prevents replay attacks.

6.5. Accountability
Our scheme will provide an approach for accountability. Due to the characteristic of the blockchain, the transaction bills stored in the blockchain are similar to the actual contracts. Once the transaction is successfully written into the blockchain, it means that the two or three entities have reached a consensus on this transaction. If any entity has an illegal operation in the subsequent steps, it will be held accountable.

7. Performance evaluation
In this section, we conduct the experiments on an Ubuntu 18.04 with an Intel(R) Core (TM) i5-3230M CPU @2.60 GHz 4G memory.

We first test the time cost of the cryptographic algorithms involved in BCES based on cpabe-0.10 library. In this scheme, we choose the prime-order bilinear groups with 128 bits. It is worth noting that this test parameter only serves as a test reference and might not meet the security requirements of the actual system.

7.1. Computation overhead
(1) Table 2 shows the time cost of several major operations in a 2.6-GHz CPU, 4-GB RAM environment.

We decompose the interaction between users into several key operations as shown in Table 2. A user’s interaction consists of the following sub-steps. Among them, 
 is the multiplication group mentioned in the PRELIMINARIES section, which is used in the operations of , , , etc.

According to Table 2, we get the relationship between the computation cost and the number of patients during the outsourcing period, as shown in Fig. 10a; and the relationship between the computation cost and the number of research institutions is shown in Fig. 10b.


Table 2. Time cost of operations.

Notations	Definition	Time (ms)
Multiplication in 
2.4
7.9
Hash a value into 
1.7
Exponent operation in 
1.2
Hash a value into 
2.0
As shown in Fig. 10a, we tested the computation overhead of hospitals and cloud service providers as the number of patients increased. It is not difficult to find that with the increase in the amount of medical data (the experiment assumes that one patient generates an equal unit amount of medical data), the computational overhead of hospitals and CSPs also show a linear increase. However, it is worth noting that even if the data size (number of patients) reaches 50, the calculation delay of the two is only about 1000 ms. For entities equipped with powerful-computation devices, this is a completely acceptable computation delay.


Download : Download high-res image (227KB)
Download : Download full-size image
Fig. 10. Computation cost during outsourcing period and during query period.

For the situation where multiple research institutions may access the same EHR, relevant experiments are conducted and the obtained data can be shown in Fig. 10b. From Fig. 10b, we can analyze that the computation cost of  and patient increase linearly with the increase in query requests (the experiment assumes that a research institution produces an equivalent unit amount of EHR access). When the access to specific EHRs reaches 50, the computing delay required by  is 1500 ms. For a cloud server with powerful computing performance, it is a relatively small overhead. At the same time, for a patient with a weak computing power, it takes only 300 ms to complete the calculation of the 50 access requests. Obviously, it is feasible for patients to handle concurrent access requests with a simple computation device such as a mobile phone or a personal computer.

In order to show the advantages of BCES in a more intuitive way, the computation power requirements of the entities involved in our scheme are compared with the schemes in [26] and [3], and the comparison results are shown in Table 3 (the greater the number of ※, the greater the computation power requirement). Since this scheme in [26] lacks a detailed performance evaluation, we can only achieve qualitatively approximate comparisons based on the scheme descriptions.

During the EHRs outsourcing storage period, in our scheme and [26], the patient client only needs to generate authorization information, and does not need to negotiate with the hospital for the treatment key, so the computation power is slightly less than the patient client in [3]. However, the consensus nodes in [26] require higher computation power because they need not only complete the verification of the authorization information signature, but also verify the EHRs themselves, which undoubtedly requires more computation power. And in BCES, consensus nodes only need to verify short information and participate in voting.


Table 3. Comparison in computation power requirement.

Client of patient	Client of hospital	Consensus node
BCES scheme	※	※	※
Scheme in [26]	※	※	※※※
Scheme in [3]	※※	※	※
Next we will further discuss the quantitative comparisons of the computation cost in the outsourcing process between our scheme and the scheme proposed in [3] under the same experiment conditions. The comparison results are shown in Fig. 11a and b, respectively.

From Fig. 11a and b, it can be clearly seen that during the data outsourcing process, the hospital’s computation cost in [3] is slightly less than BCES, but the patient’s computation cost is greater than our scheme. The reason for this result is that, in our system, during the interaction with the hospital, the patient does not need to negotiate the treatment key with the hospital. Therefore, a part of the calculation overhead can be reduced for the patient. Obviously, BCES achieves a more satisfactory result from the patient’s perspective.

7.2. Communication overhead
In this experiment, we tested the communication overhead of patient  and hospital  during the interaction and compared with the scheme proposed in [3].

During the outsourcing phase, for patient , the communication overhead consists of two parts: one is to delegate hospital , the other is to submit crucial information to the data pool. For hospital , the communication overhead also consists of two parts: one is to submit outsourcing transaction bill, the other is to upload EHRs.

In Fig. 12, we show the communication cost on patient  and hospital  of two compared schemes, respectively.

From Fig. 12, it can be seen that the patient’s communication overhead has nothing to do with the size of EHRs, and only needs to pay a small communication cost, where our solution achieves better performance than that in [3] from the patient’s perspective. Whether the hospital is in [3] or BCES, the communication overhead increases with the increase in the amount of data, but this is unavoidable because uploading EHRs requires more communication cost. There are tens of thousands of patients compared to the number of hospitals, therefore, reducing communication costs for patients is more valuable than reducing communication costs for hospitals.

7.3. Consensus overhead
The time overhead of the blockchain system is mainly consumed in the consensus process. In order to further test the time consumption of the entire system, we compared the consensus time cost in our scheme with the consensus algorithms used in [3] and [31], respectively. In the simulation experiments, we set the number of consensus nodes to 20 in the same environment, and run independently using the consensus algorithm in [3], that in [31] and PBFT algorithm in our scheme, and the result after multiple average can be shown in Fig. 13.

From Fig. 13, it can be clearly seen that as the number of transactions increases, the efficiency advantage of the consensus algorithm used in our scheme becomes more obvious. At the same time, the PBFT algorithm avoids the problem of excessive demand for POW computing power, and also solves the problem of weak centralization of POS, which is more suitable for the application scenarios mentioned in this solution.


Download : Download high-res image (170KB)
Download : Download full-size image
Fig. 13. Consensus cost of different schemes.

8. Conclusion
The current cloud-assisted electronic medical system combined with the blockchain has some unresolved issues, such as users’ inability to actually control their own medical data, hidden safety hazards in EHRs data sharing, and unreasonable protection of the integrity of EHRs. In order to make up for the gaps, a novel blockchain-based eHealth system-BCES was proposed. In this scheme, a Proof-Chain to store various users’ manipulations on EHRS was also established. Based on the characteristics of the blockchain, data manipulations can be traced back and cannot be tampered with. The logs stored in Proof-Chain are used as future evidence for rights protection. At the same time, the attribute-based cryptosystem is embedded in the proxy re-encryption mechanism to realize the high security of EHRs sharing, while ensuring that patients with low computing power can also successfully complete EHRs transactions. The security analysis has demonstrated that BCES can defend against different kinds of attacks by fine-grained access control and tamper-resist features. Meanwhile, performance evaluation has been conducted to prove that our scheme is efficient and feasible.

As future work, we hope to improve our design framework through the use of AI and deep learning technology, which will be used to combine different EHRs of the same type to enhance the accuracy of disease diagnosis and treatment without revealing real data information.