Abstract
By increasing mobile devices in technology and human life, using a runtime and mobile services has gotten more complex along with the composition of a large number of atomic services. Different services are provided by mobile cloud components to represent the non-functional properties as Quality of Service (QoS), which is applied by a set of standards. On the other hand, the growth of the energy-source heterogeneity in mobile clouds is an emerging challenge according to the energy saving problem in mobile nodes. In order to mobile cloud service composition as an NP-Hard problem, an efficient selection method should be taken by problem using optimal energy-aware methods that can extend the deployment and interoperability of mobile cloud components. Also, an energy-aware service composition mechanism is required to preserve high energy saving scenarios for mobile cloud components. In this paper, an energy-aware mechanism is applied to optimize mobile cloud service composition using a hybrid Shuffled Frog Leaping Algorithm and Genetic Algorithm (SFGA). Experimental results capture that the proposed mechanism improves the feasibility of the service composition with minimum energy consumption, response time, and cost for mobile cloud components against some current algorithms.

Previous
Next 
Keywords
Mobile cloud computing

Service composition

Energy consumption

Meta-heuristic algorithm

1. Introduction
Lately, mobile cloud computing has been achieving significant progression. The rapid development of cloud computing, mobile devices, and Internet of Things (IoT) domains [30], [37] have managed to considerable growth in the number of near-feasible web services that have different Quality of Service (QoS) metrics. The service composition method as an NP-hard problem consists of creating a new collection of atomic services for providing user requirements as Service Level Agreement (SLA) assurance [9].

The QoS metrics are classified into two groups: provider dependent and user-dependent features [10], [22]. The QoS metrics of user-dependent like price and popularity have identical values and are evaluated at the user side [6], [7]. On the other hand, provider dependent QoS metrics like energy consumption and throughput are assessed at the provider side. According to apply acceptable services from mobile cloud providers to user’s requirements, energy efficiency is a critical issue in mobile cloud service composition [23].

For energy-saving effort, refining energy-aware effectiveness has developed as an efficient despicable to cover mobile cloud providers, such as cellphones, and IoT devices using the power-harvesting technology [3]. Due to its complexity of realizing interoperability between different mobile nodes [31], the service composition methods are selected by global optimization in which aggregated-quality are maximized and global constraints are preserved. Due to the restriction of energy-saving resources in the mobile nodes, such as battery life and power-saving level, the mobile cloud providers should be recognized to present an optimal selection of atomic services, in which each mobile node can save battery life for other services. In spite of the restriction of power-saving and energy consumption problem in the mobile cloud providers, finding an optimized service composition mechanism with consuming low energy factors is a key challenge.

In this paper, we proposed a hybrid Shuffled Frog Leaping Algorithm (SFLA) [12] and Genetic Algorithm (GA) [14] (SFGA) to minimize the energy consumption of mobile cloud providers for composing required atomic services for achieving optimal QoS criteria. The main contributions of this research are as follows:

(1)
Proposing an energy-aware service composition mechanism to minimize the energy consumption of mobile cloud providers.

(2)
Presenting a hybrid SFGA algorithm for the proposed mobile cloud service composition mechanism.

(3)
Providing optimal solutions for the proposed service composition mechanism based on the maximum level of QoS factors.

(4)
Evaluating the proposed service composition mechanism using the SFGA algorithm in three scenarios.

The rest of this research is organized as follows: In Section 2, some relevant research studies are discussed. Section 3 presents the problem statement on the mobile cloud service composition. Section 4 shows the proposed method with details of the hybrid meta-heuristic algorithm. Section 5 represents the simulation results based on three scenarios to analyze and assess the feasibility of the proposed method. Finally, Section 5 illustrates the conclusion and future.

2. Related work
In this section, some of the substantial and recent approaches are introduced. The QoS-aware service selection method in [28] is presented, which uses a new combination of Tabu search and hybrid Genetic algorithms to optimize the service selection problem. Experimental results of the study were compared with the basic genetic algorithm (BGA) and iterative steepest descent method (ISD) approaches. They claimed which the gained results are shown that the proposed hybrid genetic algorithm betters the performance of the mentioned techniques. But, it is less stable behavior than HGA in large scale problem and it is not a proper approach in large scale problems.

In [15], integral meta-processes and a conflict detecting mechanism (CDM) are designed to facilitate for process designers. Conflicts are defined as events that cause accurate meta-process design and could violate the normal or expected results. The process design gap and the systematic designing guideline as two important issues are fixed by the proposed algorithm. In the process design gap issue, in order to use web-based services, the gap between traditional process design and process integration for enterprise migration is investigated. On the other hand for systematic designing guidelines, a systematic step-by-step Conflict Detecting Mechanism (CDM) is proposed to solve this problem. In the mentioned method, conflict detecting operations are divided into a three-phased process analysis: The validation, verification, and performance analysis phases. The validation and verification phases try to build confidence in which system is appropriate to achieve the considered aims. Also, the performance analysis phase is exploited to investigate feasible conflicts and also examine for process execution times, which could violate the aims.

A few researchers proposed a quality constraints decomposition (QCD) method, which uses a top-down method to decompose the global constraints into the local constraints [24]. To do this, the presented approach applies to the genetic algorithm (GA). In addition, a simple linear search is used to search the best web service for each task in the proposed algorithm. Contrary to current approaches, the QCD approach is not complex due to the use of a limited set of tasks, particularly in the case of dynamically distributed service composition. The proposed algorithm experiments on the QWS dataset and the obtained results illustrated that the QCD method improves the quality of services QoS i.e. computation time in regard to the number of web services.

In the work [2], for supporting the dynamic adaptation of service compositions, an approach based on a semantically rich variability model was introduced. The pointed method is forced to make a decision when a problem occurs in the context. The composition model is affected and changed by the activation and deactivation of features in the variability model, which breaks down the principle of service composition. The service composition process, especially at the runtime, is changed by adding or removing fragments of the Business Process Execution Language (WS-BPEL) code. Thus, they used Constraint Programming to verify the variability model and its possible configurations at design time. Experimental results demonstrated that the proposed method has several advantages at design time and at runtime.

A nonlinear optimization model with constraints for the services selection problem was proposed in the first step [35]. Afterward, a new discrete invasive weed optimization algorithm was proposed for the web services selection process. The suggested method runs in two phases. In the first phase, a collection of practical solutions is produced randomly and then they are encoded into decimal code. In the next phase, in order to spread solutions in the problem space Gaussian diffusion is employed to guide the population. Furthermore, when the standard deviation of Gaussian distribution is changed then the mutation probability and mutation step size of an individual is adjusted dynamically. Hence, the diversity of the population is guaranteed in the first phase and the approach is enabled to cover the search space, while the local search nearby excellent. On the other hand, global convergence of the individuals is considered in the second phase. Finally, the experiment results and analysis had proven the robustness and feasibility of the proposed algorithm.

In the study [19], for computing end-to-end QoS values of vertically composed services, a prediction model was proposed, which is based on the Software as a Service (SaaS), Infrastructure as a Service (IaaS) and Data as a Service (DaaS). The QoS values are used to predict the service selection and recommendation process. Historical QoS values and cloud service and user information are used by the proposed model for predicting unknown end-to-end QoS values of composite services. The experimental results revealed that the proposed model bettered prediction accuracy. Also, the impact of different parameters on the prediction results was studied. The real cloud services QoS dataset was used in the experiments.

In order to select fittest candidates’ services with regard to QoS aspects, many-objective evolutionary algorithms are explored to address the selection of web services based on a real-world benchmark by considering nine QoS properties [29]. Experimental outcomes were illustrated that the newly presented algorithm had a proper trade-off among the QoS properties. Also, the results of the experiment showed that the computational cost of the proposed algorithm is reasonable.

The authors in [32], presented a systematic review of formal modeling and analysis of service composition approaches based on the evaluation of functional and nonfunctional specifications. A technical comparison and discussion were applied to evaluate existing challenges on the service composition approaches.

A multi-attribute transition model to prove the correctness of a service composition method in a multi-cloud computing environment based on event-based QoS factors was presented in [33]. Some functional properties were analyzed to illustrate the correctness of the proposed method.

Finally, Sun, et al. [36] presented an IoT service composition approach based on the timed-concentrated mechanism in a large scale task environment. To evaluate the proposed approach, the authors compared some metaheuristic algorithms to check and analyze the performance of the proposed service composition approach in the IoT environment.

3. Proposed hybrid algorithm
This section presents a service composition mechanism based on a hybrid meta-heuristic algorithm. First, the service composition model is presented in Section 3.1. Second, we illustrate the proposed algorithm by using SFGA for mapping into the mobile service composition mechanism in Section 3.2. Finally, the fitness function for the proposed algorithm is described in Section 3.3.

3.1. Service composition model
This section presents the service composition approach based on a hybrid algorithm. The complex tasks of users based on the algorithm [4], [16] are converted into m abstract tasks () [17]. For each , there is an abstract mobile service provider  that has the same functionality and different QoS values.  is a service provider that contains existing mobile services including  to represent the user.

The QoS values are shown with q()  (), where  illustrates the appraisal value of the  feature of mobile web service . Individual services need to be collected into a composite service cs to meet the increasingly complex demand and provide an aggregation function [5].

Fig. 1 presents the service composition process to select optimal candidate services with the highest QoS values in the following steps [27]. In the first step, the service discovery is applied according to different QoS factors for m abstract tasks. In step 2, service selection between  is specified to find a composition path based on QoS factors. Step 3 illustrates aggregating and evaluating the QoS values of each composite path according to the service composition workflow. Finally, Step 4 shows selecting maximum QoS values for the optimal composition solution between all the candidate composition paths [8].

3.2. Proposed hybrid service composition model
This study represents a hybrid service composition approach by using SFLA and GA optimization algorithms. The ordinary SFLA algorithm is designed to optimize the continuous problems. Therefore, it is not possible to apply for a service composition issue as a discrete problem [21]. To do this, the encoding of individuals is established to have proper and valid solutions in the applied SFLA. Also, the GA algorithms are embedded in SFLA to evolve the individuals. In the following, firstly, the use case scenario for the service composition will be presented and then the applied evolutionary algorithms will be described in detail.

3.2.1. Use case scenario and algorithms for the proposed service composition
The main functions of the service composition system are illustrated by the use case diagram in Fig. 2. In this scenario, the use case diagram has two actors, namely user and service provider. According to the diagram, the system contains two subsystems: service composition and process results. ‘QoS needs’, ‘Service request’, ‘Interpret information’, ‘Analyze service’, ‘Service discovery’, ‘Service Composer’, and ‘Service delivery’ are the use cases, which are shown in the use case diagram. First, the user requests services according to his QoS needs. Then, the entered information is interpreted. Afterward, the required services are discovered and analyzed. Finally, the services with high QoSs are composed and delivered to the user.

3.2.2. Evolutionary algorithms in the proposed method
The SFLA is a kind of memetic evolutionary algorithm that explores a globally optimal solution in a problem space [11]. The population in SFLA is constructed by frogs as memes, and each meme contains a number of memo types. The steps of the employed hybrid algorithm are displayed by the flowchart in Algorithm 1 in detail. First, the initial parameters are set. Then, a specified number of memes form the initial population. After that, the ranks of them are calculated according to their fitness values. In the next stage, the memes will be sorted in the descending order based on their ranks. Afterward, the memes are distributed into a number of memeplexes in a random way one by one. Fig. 3 illustrates the steps in the construction of the memeplexes. These memeplexes help to search the problem space in parallel in which the solutions in memeplexes are evolved by both local and global optimizations. Memes in each memeplex influence and evolves each other based on their ideas by using the GA operators i.e. two-point crossover and one point mutation. After the evolving process, memeplexes are shuffled to construct new populations for the next generation. These steps are repeated until a determined termination condition is achieved.



Download : Download high-res image (397KB)
Download : Download full-size image
A simple example of candidate services for the service composition problem is displayed in Table 1 and contains three aspects of QoS values: response time (k), Energy (k) and cost (k). For instance, values 30, 78 and 90 in the candidate service W for t are related to k, k, and k respectively.

For all the tasks in Table 1 from 0 to 10, the proper services among the candidates should be selected. Hence, in order to optimize the solutions, the two-point crossover and mutation operators are embedded in the SFLA in the proposed algorithm. In the crossover function, the best and worst solutions in memeplexes are crossbred to have local optimization otherwise the operator will be executed between the worst solution and global best to have global optimization. Fig. 4 shows the sample of the crossover function in the suggested algorithm. Also, Algorithm 2 describes the applied Two-point Crossover procedure.


Table 1. Example of quality matrix and properties.

Quality matrix	k	k	k
t	w	30	48	90
w	26	70	40
w	19	96	63
t	w	65	100	49
w	38	79	70
w	55	89	60
w	67	99	41
t	w	46	114	96
w	68	125	76
w	90	111	47
t	w	69	116	57
w	87	99	86
w	46	147	39
t	w	74	117	91
w	61	86	45
t	w	29	109	88
w	40	90	37
w	63	120	101
t	w	74	71	44
w	39	113	93
w	45	110	73
t	w	61	100	28
w	49	98	74
t	w	66	130	55
w	52	82	36
w	73	121	105
t	w	80	33	58
w	37	105	51
t	w	29	79	87
w	74	75	42
w	54	77	106

Table 2. QoS aggregation formulas for sequential composition model [20].

QoS property	Sequence	Circle	Branch	Fork
Response time (T)	[Math Processing Error]	[Math Processing Error]	[Math Processing Error]	
Energy (E)				
Cost (C)				
In the next phase of the GA in the proposed algorithm, a random solution is selected to mutate with a single point mutation operator. As shown in Fig. 5, a random memotype is chosen and then replaced with a new random one which is generated among the related candidate services. This process prevents the solutions from trapping into local minima. Moreover, the exploited one-point mutation operator is detailed in Algorithm 3.


Download : Download high-res image (292KB)
Download : Download full-size image
3.3. Fitness function
Three QoS factors including response time, energy, and cost are important factors for selecting the optimal service composition due to the battery life of mobile devices in a mobile cloud computing environment. The QoS parameters are specified in positive and negative factors. Increasing values for positive factors, such as availability and throughput are useful for users. However, decreasing values for negative factors, such as energy and response time is helpful for users. Increasing positive criteria and decreasing negative criteria are promoted by the fitness function [34].

According to the existing QoS parameters as the negative factors, the Response time, Energy and Cost have a negative influence. So, the fitness function is shown as follows: (1)where , , and w3 are positive weights and . To evaluate the fitness value, the main objective of the proposed algorithm is selecting a composited service with a minimized fitness value. According to Table 2, the existing QoS factors are calculated with sum and product operations [25] and are normalized between (0, 1).

4. Experimental results
In this section, the QWS that was created by Al-Masri [1] that contains 2507 real web services and we considered 3 features of QoS factors for this experiment. To analyze the results of the proposed algorithm, Culture Algorithm (CA), Genetic Algorithm (GA), Particle Swarm Optimization (PSO) and GAPSO algorithm are used in 3 different scenarios. To have a fair comparison, the mentioned algorithms are selected in the experiments because of their natures as evolutionary algorithms. Also, the applied methods are programmed and simulated by C# language in Visual Studio 2017 environment.

According to Table 3, the proposed scenarios are considered. The response time, energy and cost factors of the proposed algorithm with respect to other algorithms are compared using different values for the number of services.

4.1. Analyzing the first scenario
In this scenario, the proposed algorithm is compared with four other algorithms. Also, the number of services lets 10, 20, 30, 40 and 50 for each iteration.

In Fig. 6, the cost factor of the PSO algorithm is more than four other algorithms. In a comparison between existing algorithms, the SFGA method reduces the service composition cost reasonably. When the number of requests increases, the cost decreases significantly. The reason for reducing the cost of service and its composition is the optimal selection of services and better decisions of the proposed algorithm.


Table 3. Details of scenarios used in experiments.

Scenarios	Number of services	Goal
First scenario	10, 20, 30, 40, 50	Evaluating response time, energy and cost in existing algorithms
Second scenario	100, 200, 300, 400
Fig. 7 shows the total energy of mobile services in the process of the final service composition. According to Fig. 7, the total energy of a set of mobile service providers in the algorithm SFGA is lower than the other algorithms, which indicates that this algorithm provides the more appropriate distribution of requests with minimum energy consumption for mobile service providers.


Download : Download high-res image (98KB)
Download : Download full-size image
Fig. 12. Boxplot of the total energy consumption values by the methods from Fig. 11.

In addition, the total energy consumption values by the methods from Fig. 7 are plotted by boxplot tool is SPSS environment which is shown in Fig. 8. According to the boxplot, it is obvious that the SFGA approach betters the other algorithms in the case of energy consumption. Also, the mean values of the services for energy consumption are depicted in Table 4. The results illustrate that the proposed method is undoubtedly minimized the mentioned algorithms.


Download : Download high-res image (182KB)
Download : Download full-size image
Fig. 13. Evaluation of the response time for the service composition approach in the second scenario.

Finally, Fig. 9 depicts the response time factor for existing meta-heuristic algorithms based on the first scenario. According to this figure, the SFGA algorithm has outperformed results in this scenario when the number of services is increased with minimum results.


Table 4. The mean values of total energy results for the methods in Fig. 7.

PSO	GA	GAPSO	CA	SFGA
Mean	609.0000	506.3400	454.5000	359.7000	251.7400
Std. deviation	69.49967	55.46008	19.77346	40.16052	30.10716

Table 5. The mean values of total energy results for the methods in Fig. 11.

PSO	GA	GAPSO	CA	SFGA
Mean	1424.8333	1267.3333	951.1667	770.3333	570.8333
Std. deviation	580.09772	484.63292	361.28903	326.47001	290.98620
4.2. Evaluation of the second scenario
In the second scenario, we assume that the number of services is considered 100, 200, 300, and 400 on the QWS. In Fig. 10, the cost factor of the SFGA method is lower than the other algorithms. When the number of requests increases, the cost decreases significantly. The reason for reducing the cost of service and its composition is the optimal selection of services and better decisions of the proposed algorithm.

Fig. 11 shows the total energy consumption of mobile services in the process of the final service composition. According to Fig. 11, the total energy of a set of mobile service providers in the algorithm SFGA is lower than the other algorithms, which indicates that this algorithm provides the more appropriate distribution of requests with minimum energy consumption for mobile service providers.

Furthermore, the results of energy consumption by the algorithms from Fig. 11 are represented by the boxplot in Fig. 12. Also, Table 5 shows the PSO, GA, GAPSO, CA and SFGA average values of energy consumption from services in Fig. 11. The plotted boxes and the mean values reveal that the proposed algorithm significantly outperforms the other methods in terms of energy saving.

Finally, Fig. 13 depicts the response time factor for existing meta-heuristic algorithms based on the first scenario. According to this figure, the SFGA algorithm has outperformed results in this scenario when the number of services is increased with minimum results.

5. Conclusion
Service combination is one of the five steps introduced in the service -oriented architecture model. Other steps include service identification, service description, service objectification, service composition, and service implementation. In the present research, we only focused on service composition and its methods. Many efforts have been undertaken in order to combine web services in the mobile cloud computing environment that any of the methods outlined has its own advantages and disadvantages. In the proposed method, quality measurement factors have been divided into three negative factors (response time, energy and cost). Using the SFGA algorithm resulted in faster service selection and thus better service composition that can be specifically effective in response time and service cost.

In this paper, the proposed hybrid service composition method in mobile cloud computing was compared by four methods, namely PSO, GA, and PSOGA and CA algorithms then it was investigated by three QoS criteria. The results show that the SFGA algorithm, compared to others, decreases the service composition cost, energy consumption and the response time to requests, as three important factors in improving the quality of service. Furthermore, more QoS criteria for the service composition problem will be considered in our future work. Also, some new meta-heuristic algorithms, such as WOA-BAT Algorithm [20], Donkey and Smuggler Optimisation Algorithm [1], Fitness Dependent Optimiser [26], and Modified Grey Wolf Optimiser [13]. can be applied to evaluate the energy-aware service composition approach in future work.

