Abstract
A Cognitive Radio Sensor Network (CRSN) is a distributed network of sensor nodes, which senses event signals and collaboratively communicates over dynamically available spectrum bands in a multi-hop mode. All nodes participating in CRSN have to be cognitive of the network environment and autonomous in decision making for resolving issues related to throughput maximization, delay, and energy minimization. Clustering in CRSN is proven to tackle such issues and enlarges the networkâ€™s lifetime. However, the existing clustering algorithms designed for WSNs do not consider the CR functionalities and challenges, and CR based networks work on the assumption of unlimited energy. This paper proposes an energy and spectrum aware unequal cluster based routing (ESUCR) protocol intending to resolve the issues of clustering and routing in CRSN. In ESUCR, cluster formation is mainly performed considering the residual energy of the secondary users (SUs) and relative spectrum awareness such that the common data channels for clusters are selected based on the appearance probability of PUs. ESUCR performs energy-efficient channel sensing by deciding the channel state with the statistic previous channel states. The premature death of cluster heads (CHs) is minimized by selecting and rotating the CHs based on intra-cluster channel stability, energy, distance, and neighbor connectivity. During event detection, ESUCR performs energy-efficient data routing towards the sink node by employing hop by hop forwarding through the CHs and primary/secondary gateways. The performance of the proposed ESUCR protocol is proved through extensive simulations and compared to those of the state-of-the-art protocols under a dynamic spectrum-aware data transmission environment.


Keywords
Cognitive radio sensor networks
Clustering
Energy efficiency
Spectrum sensing
Event driven

1. Introduction
1.1. Cognitive radio sensor networks (CRSNs)
Wireless sensor network (WSN) technologies are playing an important role by closely coupling the physical infrastructure with information and communication technologies through the use of network embedded devices. WSNs are the key technology for the Internet of Things (IoT) with its rapid development in sensor technologies which allows intelligent monitoring and management of the environment. For enabling communication, the nodes deployed ion WSNs utilizes industrial, scientific, and medical (ISM) band. However, the same ISM band is utilized by different sensor networks deployed in the same geographical area which leads to the problem of spectrum scarcity and causes interference among the co-existent sensor networks. Such spectrum over-utilization problem in the ISM band could be solved by allowing cognitive radio (CR) assistance to traditional WSNs, forming cognitive radio sensor networks (CRSNs) which allows efficient utilization of the radio spectrum and helps minimize interference and jamming through dynamic spectrum access (DSA). In cognitive radio sensor networks (CRSN), secondary users (SUs) or sensor nodes are allowed to dynamically vary its transmitting and receiving parameters, by estimating the adjacent radio conditions either independently or in collaboration with other sensor nodes and opportunistically utilize the licensed channels. However, on the detection of any primary user (PU) activity, the SUs must quit the transmission and vacate the occupied channel. In any CR based network, there are two major spectrum sharing schemes, underlay and overlay [24]. Underlay CR networks minimize the interference and noise to PUs by allowing the SUs to share the licensed spectrum through the use of spread spectrum techniques, like CDMA and UWB [8] whereas overlay CR networks allow the SUs with opportunistic access of vacant spectrum. This paper focuses on the overlay spectrum sharing scheme for implementing CRSN.

1.2. Clustered CRSNs: characteristics and challenges
In CRSN, all SUs work in a peer-to-peer fashion [7] forming a decentralized network. As the number of SUs increases, the complexity of managing large-scale CRSNs increases which leads to underperformance. For large-scale CRSNs, clustering seems to be an effective way to improve the performance of the network via improved network scalability, minimizing the cost of network coordination and maximizing network lifetime [34]. In a distributed environment, upper-layer protocols such as routing protocol [18], [47] may not work well without clustering techniques. However, it is important to overcome the design challenges for implementing clustering in CRSNs. In typical WSNs, the topology information is exchanged among the nodes (i.e., SUs) through message broadcast on the predefined common control channel (CCC) and as a result, overcomes connectivity issues. Conversely, the SUs in CRSN are available with diverse channels that force the SUs with no global CCC for sharing information among them. It is important to consider the network connectivity for the proper implementation of clustering in CRSNs.

In the past years, clustering has been a traditional approach for effective management of the topology of many WSNs where the entire network is grouped into different clusters in which certain sensor nodes are selected as cluster heads (CHs) and rest of the nodes act as cluster members (CMs) of their respective cluster. The CH forwards the aggregated data collected from its CMs to the next-hop node along the routing path where the data eventually reaches the destination or sink node. The major problem in any WSN is the energy efficiency of the deployed nodes. Hence, most of the clustering approaches focus on considering the residual energy [19], [36] of the nodes before finalizing the decision on cluster formation. Also, CRSN based cluster formation mechanisms should ensure the clusters are formed with at least one channel common among CMs residing inside a cluster. To manage CR based operations such as channel sensing and routing, cluster structure provides an effective means to cooperate with such activities. A SU in a clustered CRSN can act as a CH, CM, relay, and gateway. The intra-cluster communication between the CH and the CMs is performed on a common channel shared between them known as operating channel, which is common to all the SUs within the cluster boundary. A CM inside a cluster may act as a relay SU to relay the message from the CH to the CM of the neighboring cluster which is outside the communication range of the CH. A SU located at the cluster boundary may act as a gateway node to provide two or more hops of inter-cluster connectivity.

1.3. Problem statements and objective
The performance of any clustered network is mainly affected by the cluster size. The cluster size denotes the number of sensor nodes inside the cluster. Large-sized clusters improve the scalability and allow the possibility to minimize the overhead in routing the messages since the flooding of route control information only involves the CHs and gateways and the sensing error concerning channel availability greatly reduces owing to improved accuracy in channel decision with a higher number of SUs inside the cluster. For small-sized clusters, the connectivity among the SUs is maximized owing to a higher number of common channels within the cluster since smaller cluster size increases the proximity among the nodes within the cluster boundary which allows the SUs to discover a similar set of channel availability. This permits the clusters to utilize and share different channels among them and hence minimizes the channel contention which minimizes the interference levels via addressing the challenges of dynamic channel behavior. Furthermore, it improves the efficiency of channel selection and routing which eventually minimizes the number of retransmissions and enhances the energy conservation in the CRSN. More importantly, the re-clustering overhead in smaller sized clusters is greatly reduced owing to improved cluster stability, which is achieved as a result of enhanced connectivity among the SUs. For cluster construction, it is important to consider the availability of channels in each SU to ensure common channels in the cluster which helps to minimize network complexity and improve connectivity. Though, a properly formed cluster may be disintegrated owing to PU occurrence on the channels associated with the cluster and interrupt the ongoing transmission. This forces the network to rebuild the cluster and may force frequent re-clustering which forces longer delay, higher overhead, and energy loss in the network. Therefore, it is highly necessary to prevent the cluster from the activity of PUs through proper maintenance and minimize the chances of re-clustering. Therefore, it is important to tackle the dynamicity in channel availability which causes frequent re-clustering, inefficient routing, and energy loss and results in unstable clusters formed in the network.

Based on the aforementioned limitations, the major objective of this research work is to develop an energy-efficient spectrum aware event-driven unequal cluster-based routing strategy with a focus on minimizing the energy consumption and maximizing the communication efficiency of CRSN. Thus, to achieve the above objective, it is important to implement energy-efficient spectrum sensing with improved accuracy over channel detection and perform optimal channel selection to minimize PU interference during data transmission. Also, it is necessary to minimize intra-cluster energy consumption through optimal selection and maintenance of CHs for each cluster and perform the best channel selection for improved intra-cluster and inter-cluster data communication. Furthermore, it is essential to maximize the inter-cluster connectivity through the selection of appropriate gateway SUs.

1.4. Contributions
To overcome the major issues associated with CRSN, this paper proposes an energy and spectrum aware unequal cluster based routing (ESUCR) protocol for CRSN with the following contributions:

1. A channel ranking technique to rank and select the optimal channel based on channel stability, which is calculated considering the weighted state transition probabilities, for performing intra-cluster and inter-cluster communication.

2. A spectrum sensing technique that improves the accuracy of energy-based sensing by resolving the ambiguous states.

3. A CH selection and rotation technique that intelligently selects and rotates the CH for balancing the energy within the cluster.

4. A gateway and relay selection technique for performing inter-cluster data forwarding.

2. Related work and research gap
The existing works have used clustering techniques to overcome bandwidth limitations, routing, and energy-related issues to ensure topology maintenance. The existing research on WSNs [10] focuses on energy minimization without consideration of channel-related issues, whereas research works on CR networks [39] neglect energy issues. Hence, CRSNs need to consider both energy and spectrum related issues. Currently, only certain works [28], [37] have considered the issue jointly but still need more efficiency for implementation in CRSNs. Joshi et al. [16] have given a detailed study on existing cluster-based strategies for CRSNs. Abolarinwa et al. [1] have used an intelligent learning technique that works on previous experience considering the rate of energy depletion and energy-efficiency achievable in a particular channel transmission. Xiaoyuan et al. [20] demonstrated an improved energy-efficient cluster-based multi-channel CRSN. The proposed technique focuses on varying packet sizes following the state of the channel and further performs channel assignment according to the residual energy of the sensor nodes. This approach extended the lifetime of CRSN as compared to the random channel pairing approach. Furthermore, the issues of dynamic spectrum access were investigated by modeling the behavior of PUs as a two-state Markov chain and importantly maximum-likelihood (ML) estimator was used to estimate the channel state transition probabilities. Ghalib et al. [33] proposed a spectrum-aware cluster-based routing (SCR) protocol which limits the number of SUs taking part in the route establishment process. For ensuring transmission with minimum interference, SCR protocol schedules the vacant channels to the SUs considering its energy and spectrum requirements. Though SCR is not designed for the event-driven environment, and hence unnecessary cluster formations lead to energy loss and increase the frequency of re-clustering. Fadel et al. [13] aimed to address the QoS requirements through honey bee mating optimization based routing and cooperative channel assignment algorithms. The proposed algorithms maximized the quality of channel links among the SUs which is further achieved by minimizing the packet loss probability. Tabassum et al. [38] proposed event-driven routing protocol (ERP) which performs clustering based on certain parameters such as energy, channel availability, state of neighbors and distance. The ERP protocol considers the interference probability of PUs for efficient cluster formation and makes use of CHs and gateways for data delivery to the sink. However, with an increase in the event occurrence rate, the rate of re-clustering increases, which is an issue for consideration. Huazi et al. [45] proposed a Distributed Spectrum-Aware Clustering (DSAC) scheme for efficient intra-cluster aggregation and inter-cluster relaying. The DSAC algorithm performs clustering based on groupwise constraint for minimizing the intra-cluster distance in a channel aware environment. Christian et al. [25] proposed an energy and CR aware routing (ECR) protocol that performs AODV based routing in which the node-channel pairing is performed considering the channel attributes and current energy status. However, the ECR still demands higher efficiency in terms of reducing the rerouting frequency and channel awareness. Abbas et al. [4] proposed EMCOS which is an energy-efficient mechanism for multimedia streaming. EMCOS aims to form stable clusters in terms of reduced channel switching among the nodes by considering the geographical positions, channel conditions and energy utilization. The channel selection technique followed in EMCOS is mainly dependent on the prediction results of each available channel. Mustafa et al. [26] proposed event-driven spectrum-aware clustering (ESAC) protocol which forms spectrum aware clusters not in the entire network but between the event and sink and is maintained until the end of a particular event. ESAC improves the connectivity among the clusters by maximizing the number of vacant channels between clusters. However, gateways SUs for inter-cluster communication are selected randomly which increases the frequency of rerouting owing to PU interference. Furthermore, the authors [27] aimed to overcome the event-to-sink forwarding issue in mobile CRSNs with a spectrum-aware clustering protocol. The proposed protocol was designed in two phases, where the first phase determines the eligible SUs and the second phase performs cluster formation among the SUs according to the channel conditions. Also, the clusters are dismantled at the end of each event. The authors [12], [44] utilized cooperative spectrum sensing to overcome the issues of signal attenuation which decreases the accuracy of channel sensing. Ram et al. [40] proposed Energy Aware Cluster based Routing Protocol (EACRP) which aimed at reducing the frequency of re-clustering by clustering the SUs in accordance with the channel conditions and energy status. EACRP primarily focused on channel assignment problem for performing intra-cluster and inter-cluster communication.

3. System model
We consider a distributed CRSN consisting of uniformly deployed SUs (i.e., sensor nodes) with certain initial energy and PUs. A predefined threshold over residual energy is set on each deployed SU, beyond which it is denied from operating in CRSN. Each SU switches among the available channels using its CR functionality to minimize PU interference. All deployed SUs perform CR based operations such as channel sensing, channel selection, channel sharing, and channel hand-off. The SUs use the CHs and gateway SUs to transmit their event data packets in a distributed multi-hop manner to the sink which is placed at the center of the area. The internal functionality of our proposed protocol falls into three main layers, namely network layer, data link layer, and physical layers and a cross-layer repository. The joint channel decision and routing decisions are undertaken at the network layer. Channel decision involves channel selection and channel switching which is, in turn, decided based on the underlying channel sensing module at the data link layer. The channel selection module decides the best available channel from multiple channels which is selected based on our proposed channel ranking and selection algorithm. Channel switching module is triggered to cease the ongoing transmission on detecting any PU activity and select the next best channel based on its availability and priority which is further decided at the channel selection module. The channel handoff [41] happens at the physical layer and any transmission must be stopped during such operation. Sensing and sharing of channels are performed at the data link layer. The channel sensing module observes the utilization levels of each channel based on which the channel quality and availability can be predicted for access in a shared wireless environment. Cross-layer repository allows the information to be shared among the different layers such as the information of the next channel for operation from the channel decision module to the channel handoff module. Each SU sensor node pair may experience a different amount of white space but opportunistically share the channels with the same amount of link capacity. PUsâ€™ traffic in each channel is generated by the PUsâ€™ activities module according to the PUs traffic model. The channels are heterogeneous and hence the channel sensing results are based on the SUsâ€™ experience on the PUsâ€™ behavior at its location. Using the neighborhood discovery protocol [11], each SU is aware of the residual energy, location and channel availability of its one-hop neighbors. Also, a SU is aware of its residual energy and the location of itself and all the deployed SUs in the CRSN. The sensor nodes exchange control information among them and the sink using a fixed common control channel. Each SU measures its distance with other SUs and sink node using the location information and furthermore chooses a SU as its neighbor only if it is in its transmission range and availability of one common channel between them for packet transmission.

3.1. Energy consumption model
In CRSN, a SU depletes energy mostly due to channel sensing, channel switching, data transmission, and reception. For SU
, the energy depleted for channel sensing is fixed and the same for all licensed channels and denoted as 
. Also, 
 denotes the energy consumed to configure the radio and switch to a new channel. For SU
, the energy utilization for data transmission 
 is based on the classic energy model [30], i.e., 
, where the data transmission time is denoted as 
, transmission power as 
 and circuit power as 
. According to [14], 
 is determined as 
 
, where 
 is a transmission-power-independent component that accounts for the power consumed by the circuit, and  is the power amplifier efficiency which is physically determined by the drain efficiency of the RF power amplifier and the modulation scheme [9], [46]. Thus, energy consumed for transmitting data at SU
 is according to Eq. (1). (1)
 
 
where 
 is defined as the equivalent circuit power consumption for data transmission. The energy consumption for data reception is related to the data that a SU receives [30]. If SU
 receives l bits data, energy consumed is 
, where the circuit power for data reception as 
.

3.2. Spectrum sensing
Spectrum sensing [17] is an important operation in any CRSN for efficient spectrum utilization. Numerous techniques have been proposed and implanted for improving the quality of spectrum sensing such as autocorrelation sensing, cyclostationarity-based sensing, energy sensing and other techniques (timeâ€“frequency analysis and wavelet transforms) [42]. Importantly, the majority of the sensing techniques is based on energy sensing [17] owing to its simplicity, energy efficiency and neglecting the need for past PU information. However, under the cases of lower SNR, the performance of energy sensing techniques drastically reduces. In the past, most of the existing signal detection techniques based on energy sensing focus on a single threshold. Recently, certain works have focused on improving the quality of energy-based detection through a double threshold [22]. The authors [2], proposed a cooperative spectrum sensing scheme based on two-stage detection which performs detection of channel occupancy based on a single threshold in the first phase, followed by application of double threshold in the second phase. Similarly, the performance of channel detection was improved through a two-step spectrum sensing method [23], which constitutes of double-threshold sensing in the first phase, followed by cyclostationarity spectrum sensing in the second phase. Though, both the schemes [2], [23], are highly complex in computation and incur long duration of spectrum sensing which drastically increases the energy consumption. A double threshold technique [6] was used to implement spectrum sensing where the results of the energy detection are split into a hard and soft decision. However, the implementation is complicated as the decision on signal detection is finally taken by the fusion center. The fusion rule technique is implemented in [15], where common k-out-of N rule (a decision made based on the number of positive responses not lower than k) is used. A multi-stage sensing process is implemented in [21], which allows decision making by the CR based on the collected samples and based the number of samples, the energy level is varied between two thresholds. However, CR is triggered to move to several stages for sample collection until a proper decision is reached. This increases the sensing time and thus incurs energy loss. Though, some of the above discussed sensing schemes calculated double threshold with consideration of noise uncertainty, the problem of noise uncertainty is not properly identified in the realistic wireless atmosphere. Furthermore, a major of the above schemes working on double-threshold techniques are computationally complex due to cooperative decision making and importantly, increases the duration of sensing which has a direct negative impact over energy efficiency. Also, the impact of sensing duration is not properly studied by the above schemes which raise questions over the realistic implementation of CR functionalities.

With respect to spectrum sensing, this research work proposes a two-stage sensing technique for minimizing the impact of noise uncertainty and further improving the accuracy of channel detection (idle or busy). The first stage defines thresholds, 
 and 
, where 
 denotes lower threshold and 
 denotes upper threshold, which is used to maintain the channel sensing robust to noise uncertainty. The second stage improves the detection accuracy by resolving the ambiguous states generated during spectrum sensing, which is further achieved by jointly considering the weighted state transition probabilities and the last generated state (i.e. the binary state recorded at the previous sensing instant) for a particular channel.

3.2.1. Conventional energy sensing technique
Generally, the wireless spectrum environment is built over the wideband frequency range, which constitutes of C sub-channels with the same bandwidth and each sub-channel is operated at a particular frequency, 
. The SUs are allowed to detect the occupancy of PU over a particular sub-channel using the traditional energy-sensing technique [5]. In this paper, the channel and sub-channel are used interchangeably and refers to a particular frequency.

The main function of the energy detector is to determine the presence or absence of primary signal in at 
 without any prior knowledge of PU signal parameters. The detection performance is determined by important signal parameters namely, the number of samples, estimated noise power and detection threshold.

3.2.2. Binary hypothesis testing problem
Based on the PU activity (idle/busy) with noise occurrence, it is possible to model the binary hypothesis testing problem for the signal detected at the SU as below:

Hypothesis 0 (
) : absence of PU (channel vacant) Hypothesis 1 (
) : presence of PU (channel occupied)

The PU transmitted signal, 
+ js
, where 
 denotes the real component and 
 denotes the imaginary component. Let y denote the signal received, where the th sample, y(g) is sampled as follows: (2) 
 where x(g)  hs
(g), the channel gain, h  h
+jh
 is constant within each spectrum sensing period (
), 
(g) denotes the signal licensed to PU and gth (g  {1, 2, â€¦, G} sample, where G is the total number of samples. The noise sample, w(g)  w
(g)+jw
(g), is assumed to be circularly symmetric complex Gaussian (CSCG) random variable with mean zero (E[w(g)]  0) and variance 2(var[w(g)  2]), where w(g)G(0, 2), the expectation and variance operations are denoted by E[.] and Var[.], respectively, and complex Gaussian distribution is denoted by G(.,.). The null hypothesis, 
 denotes the channel to be idle and the alternative hypothesis, 
 denotes the presence of PU over the channel.

The SU compares the observed energy levels with a prefixed threshold,  and finalizes its decision for a sub-channel to be in 
 or 
. The energy of the PU signal, 
 is represented according to Eq. (3). (3)
 
Here, 
 is approximated as a normal variable, with G being large and y(g) being independent. Therefore, 
 is normally distributed under 
 and 
 as follows: (4)
 
 
 where the noise variance and signal variance is represented as, 
, respectively.

Based on the noise power, the value of the threshold is defined to consider the false alarm probability (
), detection probability (
) and missing probability (
) which are derived in Eqs. (5), (6), (7), respectively. (5)
 
 
 
 
(6)
 
 
 
 
 
(7)
 where the Gaussian-Q function is denoted by Q(.) and SNR is denoted as  where 
. Also, 
, then as observed from Eqs. (4), (5), for the given  and G, 
 is a function of 
 and 
 is independent of 
.

As investigated in [43], the noise uncertainty can be represented according to Eq. (8). (8)
 
where the maximum noise uncertainty and real noise variance is denoted by V and 
 respectively.

Consequently, 
 and 
 are defined by noise uncertainty according to Eqs. (9), (10). (9)
 
 
(10)
 
 Generally, the output of an energy-sensing technique decides the state of a signal to be vacant (0) or PU occupied (1). However, the binary state may be forced to move into an ambiguous state due to inappropriate energy levels. According to Eq. (11), the occupancy state of a channel, 
 can be classified into the binary states, 0 and 1, and an ambiguous state, z. (11)
 From Eq. (11), it is observed that it is hard to derive an optimal decision on whether a signal is detected with PU activity or not with a single threshold. Previous research works focused on resolving the issue of the ambiguous state through implementing techniques such as exploiting cyclostationary behavior of the communication signals [23] and cooperative decision making [3]. The authors [22] implemented an adaptive double-threshold energy-sensing method based on Markov model (ADEMM), which resolves the ambiguous state by considering the time-varying channel behavior. The ADEMM technique uses the state transition probabilities of the channel to finalize the decision on the channelâ€™s binary state in case the measured energy levels fall in â€˜zâ€™. ADEMM uses the weight count of the past occurrences of channel state to calculate the corresponding state transition probabilities of a channel, based on which the final decision on whether a channel is idle or busy is taken by the SU in case of ambiguity.

4. ESUCR: Our proposed protocol
4.1. ESUCR: Energy efficient spectrum sensing
This research work focuses on estimating the channel state transition probabilities based on the number of continuous or uninterrupted idle/busy states observed during a time interval, 
. Here, the state is considered to be in transition when there is an interruption in the ongoing channel state, i.e., idle (0)  busy (1) or busy (0)  idle (1). The period between two such transitions is considered as the transition period. We focus on measuring the number of states (idle or busy) involved during the transition period. Here, at a particular sensing instant t, the probability of a channel being idle and the probability of a channel being busy are denoted as 
 and 
, respectively.

4.1.1. PU occupancy model
The continuous-time, alternating busy/idle Markov Renewal Process (MRP) [29], [32] is used to model the channel usage pattern of each PU, i.e. the binary state of the PU signal. Each state transition follows the Poisson arrival process since both the idle and busy periods of a channel are assumed to be independent and identically distributed and the length of idle and busy periods follows exponential distribution [29] with p.d.f. 
 for idle state and 
 for busy state. The PU channel model as illustrated in Fig. 1, describes the traffic pattern of channel k and the corresponding binary states.

Generally, the probabilities, 
 and 
 are computed based on the number of channel state measurements [31], [32], 
 + 
, calculated over 
. Let, the number of idle and busy state measurements over 
 is denoted as 
 and 
, respectively, the mean idle and busy rate of a channel is denoted as 
 and 
, respectively. For example, if 
, where (
, 
). Then, (
 per second, 
 per second). Now, 
.6% and 
.4%.


Download : Download high-res image (234KB)
Download : Download full-size image
Fig. 1. PU occupancy model.

4.1.2. Estimation of weighted state transition probabilities
In our approach, the probability weight of a channel increases or decreases based on the past channel behavior observed with uninterrupted idle/busy states. It is important to note that, our research does not focus on measuring the number of independently observed channel states or the number of channel state transitions over 
, rather we focus on measuring the number of continuously observed channel states (0 or 1) between two channel state transitions, i.e. during a transition period. To achieve this, the parameter 
 and 
 are modified to measure transition periods with weights. It means, each transition period, 
 is assigned a weight, 
, which is based on the number of idle/busy states measured during 
. Thus, for channel k, 
 and 
 is calculated according to Eqs. (12), (13). (12)
(13)
 where, 
 denotes the total number of transition periods, and the number of idle and busy states measured in 
 is denoted by 
 and 
, respectively. Here, 
 is calculated over the measurement period 
 and 
 and 
 is calculated considering each sensing period, 
 over 
 and sensing time, 
. For weight
, controlling factor . Thus, the mean idle rate considering the weighted ON states measurements, 
, and mean busy rate considering the weighted OFF states measurements, 
, are calculated according to Eqs. (14), (15). Furthermore, the channel state transition probabilities are calculated based on Eqs. (16), (17). (14)
 
(15)
 
(16)
 
 
(17)
 
 
 Here, the addition of Eqs. (16), (17) yields Eq. (18). (18)

4.1.3. Spectrum sensing
To ensure minimal interference to PUs, the accuracy of spectrum sensing should be improved. Thus, cooperative spectrum sensing [44] allows the SUs to collaborate in finalizing the decision on channel availability. The SUs are grouped in clusters to achieve cooperative spectrum sensing. The SUs are initially allowed with independent sensing and the clusters are formed based on the sensing results. The CH applies AND or OR rule to decide the occupancy state of PU. The number of SUs to participate in cooperative spectrum sensing is bounded according to [40]. To improve the accuracy of sensing and discover transmission opportunities, the sensing time in EACRP [40] scheme for independent sensing of each channel is more which results in increased energy loss. Hence, ESUCR focuses on minimizing the sensing time to improve energy conservation while improving the quality of spectrum sensing, i.e. enhancing the efficiency to resolve the ambiguous states. Thus, in cases of ambiguity in deciding the channel state for a particular sensing instant, the measured state at the last sensing instant, 
 and the probabilities, 
 and 
, which denote the past channel statistics are considered. Thus, the state, 
, at time 
 is represented according to Eq. (19). (19)
 
 

4.2. ESUCR: Channel measurement
ESUCR jointly considers the probability, 
 and the total number of transitions observed over a channel, for performing channel selection. The transition count, TC
 for channel k is considered to determine the behavior of a channel with respect to channel handoff. A channel observed with high 
 is less stable, and a channel is considered with more stability with lesser frequency of channel state transitions. Here, 
 denotes the total number of idle state to busy state transitions observed over the th channel. Thus, ESUCR performs channel selection based on channel stability, CS, which is calculated for channel k according to Eq. (20). (20)

The list of channels are ranked according to the CS metric and the channel with the maximum CS value is given the highest rank and considered as the optimal channel for data transmission subject to its availability at a particular transmission instance. Fig. 2 illustrates 10 channels with different traffic patterns which are considered to identify and rank the channels according to the CS metric which is calculated considering 30 sampling periods of past PU traffic on each channel.

Table 1 shows the efficiency of ESUCRâ€™s channel ranking technique, which uses weighted state transition probabilities over the traditional channel ranking technique, which uses unweighted state transition probabilities. A channelâ€™s state (idle/busy) is decided based on its availability status at the channel availability matrix (CAM), which is updated through periodic sensing according to Eq. (21). (21)
With K number of channels, where K  list_channel and , and channel vacancy matrix 
. Here, 
 denotes the channel stability matrix for the list of channels sensed at the SU, and 
 takes the binary value 1 if the th channel is sensed idle, otherwise 0. Higher ranked channels are subject to higher contention among SUs which could be resolved by operating them in CSMA-CA mode.


Table 1. Channel ranking based on CS.

Ch.
No	Channel ranking based on unweightedstate transition probabilities	Channel ranking based on weighted state transition probabilities
N
N
P
P
CU	Ch.
Rk	
TC
CS	Ch.
Rk
1	20	10	0.67	0.33	0.223	4	16.6	3.6	0.822	0.178	3	0.274	2
2	20	10	0.759	0.241	0.189	5	11.6	2.6	0.817	0.183	4	0.204	4
3	24	6	0.408	0.592	0.689	1	19.2	1.2	0.941	0.059	3	0.314	1
4	9	21	0.806	0.194	0.268	3	3.3	11.3	0.226	0.774	3	0.075	8
5	6	11	0.811	0.189	0.27	2	12.1	3.3	0.786	0.214	4	0.262	3
6	19	23.6	0.314	0.686	0.078	8	11.6	3.4	0.773	0.227	4	0.193	5
7	10	20	0.649	0.351	0.162	5	3.3	9.3	0.262	0.738	4	0.066	9
8	12	18	0.545	0.455	0.182	6	4.8	10.8	0.308	0.692	3	0.103	7
9	15	15	0.21	0.79	0.07	9	7.5	7.5	0.5	0.5	3	0.167	6
10	15	15	0.208	0.792	0.026	10	3.1	3.1	0.5	0.5	8	0.063	10
4.3. ESUCR: Spectrum aware clustering
ESUCR aims to balance the energy consumed during intra-cluster and inter-cluster communication. A higher number of clusters in the CRSN increase the inter-cluster energy consumption, and a higher number of SUs within a cluster increases the intra-cluster energy consumption. In ESUCR, the SUs exchange their information with the neighbors to compute the minimum distance between any two SUs and between any two clusters, which allows merging of two neighboring clusters. In a cluster, it is important to ensure the CHs are rotated since the SUs selected as CHs consume the maximum energy and it is necessary not to restrict any SU as CH for the entire rounds of cluster operation. Hence, at the start of each round in a cluster, ESUCR intelligently rotates the CH by assigning ranks to each SU within the cluster boundary and selecting the SU with the highest rank. Thus, for a cluster, CLR
, the rank of a SU a inside CLR
 is calculated according to Eq. (22). (22)
 

The residual energy of SU
 can be calculated according to Eq. (23). (23)
 
 
where, 
 denotes current residual energy of SU
 and 
 denotes the number of SUs inside CLR
.

From Eq. (24), the intra-cluster channel stability, ICCS, for channel k with respect to SU
 inside cluster CLR
, is calculated, only considering the channels which are vacant and common to the other SUs of CLR
. (24)
 
 
where, 
 denotes the channel stability of channel k computed at SU
. 
 denotes the neighbor count of SU
 with regard to CLR
.

From Eq. (25), the neighbor cluster strength, NCLS for SU
 inside cluster CLR
, is calculated considering the neighbor connectivity of SU
 with the members of the other clusters. Thus, NCLS denotes the ability of a SU inside a cluster to connect with the adjacent clusters. (25)
 
 
 
where, 
 denotes the total number of neighboring clusters and C
 denotes the cluster connectivity, i.e., number of neighbors in the neighboring cluster, CLR
. 
 denotes the distance between SU
 and sink.

The SU with the highest R
 is selected as the CH and the other SUs within CLR
 report to the SU selected as CH in CLR
. Furthermore, the CH transmits the aggregated data from the SU, which detected the event to the sink through the vacant channels shared with the gateway SU, which belongs to an upstream cluster. The network-wide intra-cluster and inter-cluster energy consumption in communication can be calculated according to [40].

To minimize the network-wide energy depletion, the optimal number of clusters, CLR
 can be analytically determined for an evenly distributed CRSN. For analyzing the simulation, the optimal number of clusters [45], CLR
 can be derived according to Eq. (26). (26)
 

4.4. ESUCR: Energy aware clustering
To efficiently avoid interference to nearby PUs, ESUCR implements cooperative spectrum sensing among the SUs. Each SU independently performs energy efficient spectrum sensing (Section 4) on all the channels in list_channel and maintains the list of available channels. Following the clustering process, each member SU of a cluster sends the avl_list_channel to their respective CH for finalizing the decision on channel availability. To minimize re-clustering frequency and energy depletion, CHs appropriately selects the channel for intra-cluster communication and gateway SUs to reach the neighboring clusters, and thus forms steady routing paths. The selection of intra-cluster communication channel is as follows,

1. Each SU performs independent sensing on list_channel according to Section 4.1.3.

2. The SUs in CRSN are grouped into clusters according to Algorithm 1. The required communication for grouping the SUs into clusters is performed using the common control channel.

3. Using the common control channel, each member SU of the cluster sends the independently sensed results to their respective CH for collaboratively finalizing the decision on the current state of the channels.

4. The CH selects the optimal channel, 
, according to Eq. (27), and uses the common control channel to declare it as the communication channel for carrying out intra-cluster data transmission, i.e., from CMs to CHs.

Each SU joins a disjoint cluster based on Algorithm 1. At the start of every round, the CHs of the respective clusters send control information which contains the size of the cluster and unoccupied channels common to the cluster. Furthermore, through the neighboring SUs, the distance between the clusters is also determined. Based on the number of commonly unoccupied channels and measured distance between the clusters, a merge invitation is sent by each CH to the optimal neighbor cluster. On acceptance of merge request, two clusters are merged into a single cluster and further trigger the selection of a new CH for the newly formed cluster. Also, CH rotation is performed to ensure energy balance among the SUs inside the cluster. Moreover, each SU performs periodic sensing on list_channel and on discovering the unavailability of common channels with other CMs, it isolates from the current cluster and further based on the value of 
, it decides to form a new cluster or remain isolated.



Download : Download high-res image (1003KB)
Download : Download full-size image
4.5. ESUCR: Channel selection
For each cluster, CLR
, the respective CH, CH
 ranks the channels contained in avl_list_channel based on the CS metric (Section 4.2), accessibility to maximum number of SUs in CLR
, and connectivity to maximum number of SUs residing in neighboring clusters. Thus, a channel k in avl_list_channel is ranked according to Eq. (27), where a higher value of 
 denotes higher rank. (27)
where 
 denotes the number of SUs that can use k in CLR
 for carrying intra-cluster communication and 
 denotes the number of SUs that can be reached in the neighboring cluster of CLR
 via k. Algorithm 2 presents the CS based channel ranking technique of ESUCR.



Download : Download high-res image (553KB)
Download : Download full-size image
4.6. ESUCR: Routing
Following cluster formation, CHs employ TDMA scheme to allow channel access for intra-cluster communication and CSMA scheme for inter-cluster communication. The routes are established by the CHs and data is transmitted in transmission rounds. In each TDMA frame, the channels are scheduled by the CH over the time slots. Since ESUCR works on event-driven applications, proactive routing is not performed and thus the routes are established and stored on-demand, i.e., only on the occurrence of an event. Following route establishment, the CHs and gateways are used to route the packets from the event area to the sink. In ESUCR, the CM list is not exchanged among the CHs since it works on the assumption that each SU knows its neighbors which are a one-hop distance away. The primary and secondary gateways for data forwarding are decided by the CHs using the one-hop neighbor information. To achieve this, neighbors of the CH receive beacon signals from the respective CH, for which it replies back with the one-hop neighbor information. Furthermore, the potential candidate primary and secondary gateway SUs are decided based on its location and used for inter-cluster data transmission. Thus, intra-cluster communication is enabled by the CHs and inter-communication among adjacent clusters is enabled by the gateway SUs. Two scenarios are possible concerning inter-cluster transmission. In the first scenario, primary gateway SU is selected from a list of candidate SUs, which are members of the destination CH and reachable to both the adjacent CHs. In the second scenario, if a CH cannot discover any candidate primary gateway SU to reach the neighboring cluster, then it can use a relay SU, which is a member of the current CH to relay the data to the secondary gateway SU, which is a member of the destination CH, and finally forward the packet to the neighboring CH. For each data packet, this process of inter-cluster communication continues until it reaches the sink. In Fig. 3, consider {R}, {P, S, Q} and {U, T} to be the CMs of respective CHs A, B and C in respective clusters CLR
, CLR
, and CLR
. Here, A can use either P or Q as the primary gateway SU to reach B. A cannot reach C since there is no possibility of direct transmission or availability of primary gateway SUs. Hence, A uses R as the relay SU to reach the secondary gateway SU, U and enables communication with C.

Once the candidate gateway SUs is decided, the optimal gateway SU for inter-cluster communication is selected based on Eq. (28). (28)
 
 
where, 
 denotes the weight of candidate gateway SU, P, and 
 denotes the number of commonly available channels between P and CH, A. 
 denotes the measured channel stability of the common available channel at P and 
 denotes the measured channel stability of the common available channel at A. 
 (based on Eq. (23)) denotes the residual energy of P and 
 denotes the distance between P and sink. Thus, SU with the highest weight is selected as the gateway SU. In case, no primary gateway is discovered, then a relay SU is selected from the list candidate relay SUs. The selection of relay SU is performed according to Eq. (29). (29)
 
 
 
 
 
 
On detecting an event, the event detectors perform data transmission to their respective CHs. Subsequently, CHs discover the list of potential gateway SUs that are within its communication range and a member to the adjacent cluster. In case candidate primary gateway SU set is empty, data forwarding is performed through relay SUs. Eventually, messages are delivered to the destination via this forwarding process. Algorithm 3 presents the routing procedure of ESUCR.


Download : Download high-res image (350KB)
Download : Download full-size image
Fig. 3. Illustration of forwarder selection.



Download : Download high-res image (322KB)
Download : Download full-size image
5. Performance comparison and simulation results
To verify the efficiency of the proposed ESUCR protocol for CRSNs, the performances of our algorithms are compared to EACRP [40], ERP [37], and ESAC [26] schemes. In our simulation environment, different CR layers are implemented such as physical, MAC and network layers. The physical layer performs sensing on the list of channels. The MAC layer ensures multiple channel access and tracks PU traffic and packet collisions. The network layer is responsible for the selection of optimal channel by our channel selection technique. EACRP is a cluster-based routing protocol aimed for an energy-efficient CRSN. The first phase of EACRP groups the SUs into different clusters based on certain parameters and selects an intra-cluster communication channel. The second phase routes the data packets to the sink using an optimal path. EACRP considers PU interference during intra-cluster and inter-cluster communication. ECR is a cognitive aware cluster-based event-driven routing protocol which considers energy and channel parameters during channel allocation among the sensor nodes. ESAC maximizes the number of accessible and stable channels during cluster construction and performs optimized routing between the clusters. ESAC is an event-driven protocol which discovers the common channels between clusters for data routing. ERP is a reactive event-driven cluster-based protocol which constructs clusters only after detection of an event and performs routing between the event detectors and the sink.

The ESUCRâ€™s performance is compared among EACRP, ERP, and ESAC in terms of average end-to-end packet delay, average SU energy consumption, the strength of the gateway SUs and delivery ratio of packets. Table 2 represents the parameters considered for simulation.


Table 2. Simulation parameters.

Parameter	Value
Simulation area	1000 1000
Simulation time	1000 s
Node deployment	Uniform random
Application type	Event-driven
Traffic type	CBR
Size of packet	0.001 KB
Transmission rate of packet	10â€“20 packets/s
Number of event occurrence	2â€“20
Location of sink	(500, 500)
Number of PUs	2â€“20
Transmission range of PUs	200 m
Number of channels	10
Channel occupancy probability of PUs	0.25
Channel selection strategy of PUs	Random selection
Number of SUs	20â€“200
Transmission range of SUs	100 m
SU initial energy	1000 J
Back off mechanism	CSMA/CA
Channel sensing time	0.005 s
Energy utilization for sensing a channel	0.131 mJ
Energy utilization for switching a channel	0.01 mJ
Energy utilization for data reception	âˆ’6 mJ/bit
Channel bandwidth	1.024 Mbps
Number of simulation runs	100
5.1. ESUCR: Energy consumption
The efficiency of ESUCR in terms of energy utilization is demonstrated against EACRP, ERP, and ESAC under a varying number of events, clusters, PUs, and SUs. Fig. 4 represents the average per node energy consumption for varying number of clusters. For conducting this simulation, SUs are varied in the range [140, 160] and PUs in the range [8, 12] for different simulation runs with uniform distribution of SUs and PUs. From the simulation results, it is observed that minimum energy consumption is achieved when the cluster count is in the range [1], [39]. When cluster count in the range [24], [47], the boundary of the cluster increase which in turn increases the energy utilization for intra-cluster communication. This is because of the increased distance between the CH and the SUs within the cluster. Also, the energy consumption increases when cluster count is in the range [4], [13] which is because of increased energy spent on performing inter-cluster communication. On the average, it is realized that the ESUCR always outperforms EACRP, ERP, and ESAC related to minimizing average energy consumption at different number of clusters by 10.8%, 18.6%, and 29.3% compared to EACRP, ERP, and ESAC respectively.

Fig. 5 represents the average per node energy consumption for varying number of PUs. For this simulation, SUs are varied in the range [140, 160] for different simulation runs. From the simulation results, it is observed that with low PU count, the number of clusters formed in the network is less which is due to low levels of PU interference, and with high PU count, SUs are grouped into higher number of clusters due to increased PU activity which further maximizes the energy depletion in CRSN.


Download : Download high-res image (182KB)
Download : Download full-size image
Fig. 4. Average energy consumption versus varying number of clusters.

ESUCR outperforms the other related schemes under a varying number of PUs and on the average achieves significantly lower average energy consumption of up to 14.9% as compared to EACRP and 31.3% and 45.1% as compared to ERP and ESAC, respectively.


Download : Download high-res image (204KB)
Download : Download full-size image
Fig. 5. Average energy consumption versus varying number of PUs.

Fig. 6 represents the average per node energy consumption for varying number of SUs. For this simulation, the number of PUs is varied in the range [8, 12] and the number of events in the range [1], [38] for different simulation runs. Here, ESAC consumes higher energy due to high routing load since the number of SUs participating in the routing process is more. ESUCR performs better in terms of minimizing energy consumption as compared to other event-driven protocols namely, EACRP and ERP which is mainly because of ESUCRâ€™s ability to optimally cluster the deployed SUs. On average, it is observed that ESUCR achieves significantly lower average energy consumption of up to 21.7% as compared to EACRP and 49.9% and 68.2% as compared to ERP and ESAC, respectively.

Fig. 7 represents average per node energy consumption for varying number of events. For this simulation, SUs are varied in the range [140, 160] and PUs in the range [8, 12] for different simulation runs. With an increased number of events, the amount of energy consumed for data transmission increases since more number of packets is forwarded to the sink. Owing to the optimal number of cluster generation and implementing an energy-efficient intra-cluster and inter-cluster communication, ESUCR consumes lesser energy as compared to EACRP, ERP, and ESAC. Moreover, ESUCR senses interference from PUs in different channels with minimum energy consumption which is due to its ability to perform energy-efficient spectrum sensing with reduced sensing time. Also, intelligent channel selection policy of ESUCR reduces the frequency of channel switching since a certain amount of energy is consumed in a single channel switch. Compared to EACRP, ESUCR attains lower average per node energy consumption of up to 20.5% and of up to 36.2% and 55.6% as compared to ERP and ESAC, respectively, at different number of events.


Download : Download high-res image (156KB)
Download : Download full-size image
Fig. 6. Average energy consumption versus varying number of SUs.

5.2. ESUCR: Gateway strength
Fig. 8 represents the strength of chosen gateways for varying number of PUs. For this simulation, SUs are varied in the range [140, 160] for different simulation runs. The strength of the gateway is measured using Eq. (28), where the gateway is a CH or a CM selected for forwarding the packets. It is observed that due to the random gateway selection policy of ESAC, the selected gateway SUs underperform in forwarding the packets to the sink. ERP protocol does not take into account the number of common channels which results in unstable gateways selected as forwarders. Though EACRP protocol considers the number of common channels, it does not consider the stability of the channels which in turn minimizes the lifetime of the links connecting the gateway SUs. ESUCR outperforms EACRP, ERP, and ESAC by considering the channel stability of all the common available channels and helps SUs to make right decisions on SU next-hop selection in routing. On varying the PU count, it is observed that on average, ESUCR ensures more gateway stability than EACRP of up to 7.1% and of up to 23.4% and 93.5% as compared to ERP and ESAC, respectively.

5.3. ESUCR: Average end-to-end delay
The efficiency of ESUCR in terms of minimizing the average end-to-end delay of packets is demonstrated under a varying number of clusters, PUs and SUs. Fig. 9 shows the comparison of ESUCR, EACRP, ERP, and ESAC with respect to average end-to-end delay under a varying number of PUs. For conducting this simulation, SUs are varied in the range [140, 160] for different simulation runs with uniform distribution of SUs and PUs in CRSN. End-to-end delay refers to the time taken for a packet to be transmitted across CRSN from source to sink. All the four schemes taken for comparison are cluster-based schemes and when compared to non-cluster based techniques [25], [35], incurs a bit higher delay. This is because in cluster-based routing protocols, a CM performs data forwarding to its respective CHs, following which the CH forwards the data packet to the selected gateway SU, which further forwards the packet to its neighboring cluster. From the simulation results, it is observed that the average end to end delay is less for all the schemes with lesser number of PUs in the CRSN. This because when PU activity level is low, i.e. the number of PUs in the range [0, 10], all schemes achieve significantly lower average end-to-end delay because no route is affected by PUsâ€™ activities and all schemes can transmit their packets without many disruptions. As the PU count increases, the interference due to PUs increases which in turn maximizes the delay of packets reaching the sink for EACRP, ERP, and ESAC. These schemes, despite being spectrum-aware, the selected routes may constitute channels with lower idle probability and hence there is a high possibility of PUs appearance on the selected channels in the next time slot and results in packet collision. Whenever a SUâ€™s packet interferes with a PUâ€™s packet, both PUâ€™s and SUâ€™s packets are lost which increases the SUâ€“PU interference ratio. ESUCR is not highly affected by SUâ€“PU interference since it selects stable routes which comprise of channels predicted with higher idle probability for the next time slot. Moreover, the sensing accuracy of ESUCR minimizes the chances of PU interference. SUâ€“PU interference ratio is defined as the ratio of the total number of SUsâ€™ packets interfered with PUsâ€™ activities to the total number of packets sent by a SU source node. Though ERP scheme exploits the availability of multiple channels, its unstable route selection technique increases the rerouting frequency which is mainly affected due to the inefficient selection of channels over the wireless links. EACRP ensures forming an optimal number of clusters and routes the event data to the sink. Also, it performs gateway selection considering the number of common channels available between the nodes. However, its channel selection policy requires more intelligence to alleviate the effects of PU interference and link failures which affect the established routes with more vulnerability of being broken. The route selection policy of ESAC is inefficient since it performs route selection without consideration of PU behavior during route formation. Thus, the SUs may choose non-stable routes that have channels with lower idle probability and hence drops a higher number of packets which triggers frequent retransmission and increases the delay of packets reaching the sink. According to the observed simulation results, it is realized that ESUCR achieves a lower average end to end delay of up to 9.2% than EACRP and of up to 18.4% and 26.5% as compared to ERP and ESAC, respectively, at varying number of PUs.

Fig. 10 shows the network performance achieved by ESUCR with EACRP, ERP, and ESAC under a varying number of SUs. Importantly, when the number of SUs increases in the network, the opposition for the spectrum holes becomes additionally compelling. As a result of this opposition, the average interference per SU increases in all schemes. Based on the analysis of the performance of the protocols on average, it is realized that the ESUCR always outperforms the other schemes related to minimizing average end to end delay at different number of SU nodes by 6.93%, 26.9%, and 41.2% compared to EACRP, ERP, and ESAC respectively. The main reason for that is that EACRP, ERP, and ESAC, do not assurance that the best channel is unexploited for transmission. Moreover, ESUCR is able to tune both sender and receiver to the right channel with high probability for effective and reliable data dissemination in multi-hop context.


Download : Download high-res image (151KB)
Download : Download full-size image
Fig. 9. Average end to end delay versus varying number of PUs.

Fig. 11 shows the simulation and analytical results for the average end-to-end packet delay achieved by ESUCR by comparing it with the other three related approaches under a varying number of clusters. As observed in Fig. 6, the good agreement between the simulation and analytical results, and the confidence interval is again wider at a large number of clusters. As the number of clusters increases, the number of hops increases which results in an increased end-to-end delay. Both ESUCR and EACRP determine the optimum number of clusters that maximizes the lifetime and ensures achieving the specified delay objective. Though, the efficiency of ESUCR to select optimal channels and gateways for route formation minimizes the packet delay as compared to EACRP, ERP, and ESAC. On the average, we can realize that the ESUCR always outperforms EACRP, ERP, and ESAC related to minimizing end-to-end delay at different number of clusters by 7.2%, 14.8%, and 20.1% compared to EACRP, ERP, and ESAC respectively.


Download : Download high-res image (161KB)
Download : Download full-size image
Fig. 10. Average end to end delay versus varying number of SUs.

5.4. ESUCR: Packet delivery ratio
This metric is defined to effectively measure the data dissemination process. It is the ratio of packets received by a particular CR node over total packets sent in the network. Fig. 12 shows the results of different simulation experiments to measure the packet delivery ratio at different numbers of events for the ESUCR, EACRP, ERP, and ESAC. Fig. 12 confirms that ESUCR can provide good network reach, suitable for increasing the forwarding reliability of event data in multi-hop CRSNs. As Fig. 12 illustrates we can realize that the ESUCR outperforms the considered schemes related to maximizing packet delivery ratio at different event count by 4.8%, 12.7%, and 18.5% compared to EACRP, ERP, and ESAC respectively. This is mainly because the ESUCR highlighted on selecting the channel in a method which guarantees that the channel is unexploited by PU through channel stability prediction. Significantly, the packet delivery ratio is mapped to SUâ€“PU interference ratio and spectrum utilization metrics. Low interference ratio means higher spectrum utilization which further allows a higher number of SUs to successfully transmit the data packets leading to higher delivery ratio. On the contrast, when the SUâ€“PU interference ratio is high, the missed and interrupted packets will increase which leads to lower spectrum utilization. Consequently, there will be a lower packet delivery ratio. The rate of successful packet transmission in ESUCR is mainly due to the accurate selection of optimal channels using channel stability metric. Also, the average throughput is more related to the total number of successful packet received in the CRSN (i.e., packet delivery ratio). When the packet delivery ratio is increased, the throughput is also increased and vice versa. Also note that, when the number of events increased, the delivery ratio is decreased in all strategies. The main reason for that is that, with the increase in the number of the CRs in the network the competition for the vacant channels becomes more compelling. As a result of this competition, the average throughput per SU decreases in all schemes.

6. Conclusion
This paper aims to minimize the energy consumption of SUs and interference to PUs, through ESUCR which is an interference aware energy-efficient clustered routing protocol for event-driven applications. ESUCR considers the energy efficiency of the SUs and allows the most stable available channels to be selected as common data channels for carrying out intra-cluster communication. The primary/secondary gateway SUs for inter-cluster data forwarding are optimally selected based on the stability of common channels, residual energy, and distance to sink node which makes the routing path formed by ESUCR from the event detectors to the sink to be more reliable. Furthermore, ESUCR achieves energy efficiency in spectrum sensing by making use of statistic previous channel states for decision making with regard to the channel state. Also, ESUCR performs optimal CH rotation in which the role of the CH is rotated among the associated CMs according to energy, channel, distance and neighbor parameters. ESUCR achieves minimized average energy consumption, end to end delay, higher average packet delivery ratio, and more gateway stability than EACRP, ERP and ESAC protocols, which has been evaluated through an extensive simulation study in NS-2. The future work will focus on testing and improving our algorithms to acquire more robust performance with adaptations to various PU spectrum occupancy models.