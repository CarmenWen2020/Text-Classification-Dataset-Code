Abstract
This paper proposes a penalty strategy with differentiated service rate based on the free riding phenomenon in P2P networks, and establishes an M/M/c+d queueing model. Based on this model, a sleep/wakeup mechanism is introduced for the peers at the service end, and a single asynchronous vacation strategy is adopted to reduce the energy consumption of the system. In addition, the energy consumption of peers in each state is quantified, and the relationship between the energy consumption and parameters of the system is analyzed. In order to avoid excessive requests for unnecessary services from requesting nodes and increasing energy consumption of the system, this paper analyzes the Nash equilibrium between the arrival rate and the net profit of a single node, and then studies the optimization of social profit. The stationary distribution of queueing model is obtained by the method of matrix geometric solution, the performance indicators of the system are constructed, and the system performance is analyzed by numerical experiments. Experimental results show that the model developed in this paper has a significant penalty effect on free riding behavior, and that the single asynchronous vacation strategy not only saves more than 10% of the total energy consumption compared with the single synchronous vacation strategy, but also makes the hybrid P2P networks more flexible and efficient.

Previous articleNext article
Keywords
Hybrid P2P network
Energy saving strategy
Nash equilibrium
Matrix geometric solution

1. Introduction
P2P networks, known as peer-to-peer networks or peer-to-peer computing, are widely used for sharing and exchanging information, sharing computing resources, sharing storage resources, etc. after years of intensive development and computing. In P2P networks, each peer plays two roles: server and client, which are responsible for providing resource services and sending out service requests respectively. This requires all peers to provide resources and services to other peers while obtaining resources free of charge. In recent years, there has been a kind of users with free riding behavior in P2P networks. These users only obtain resources from other peers, but never share their own resources. Their existence has affected the efficiency and stability of the P2P networks seriously [12]. Adar and Huberman [1] found that 66% of peers on Gnutella are free riders who never share resources, 47% of resources come from the top 1% of peers, and 98% of resources come from the top 25% of peers.

Many approaches have been proposed to cope with free riding behavior. For example, reputation strategies, which provide resource services based on peers' previous reputation [2], [24], [8], [21]. Reciprocal strategies, meaning that peers provide resources preferentially to those peers who have provided them before [4], [3], [7]. Penalty strategies, where penalties are imposed on the free rider to reduce free riding behavior [12], [29].

In this paper, we propose a penalty strategy to deal with free riding behavior in P2P networks, i.e., based on the historical reputation value of requesting nodes, we distinguish between peers with good reputation and those with poor reputation, i.e., with a tendency to free ride, and provide a lower service rate to peers with a tendency to free ride and a higher service rate to peers who share resources, thus increasing the waiting time cost of the free riders and motivating all users to share resources, thus improving the efficiency of the P2P networks. To verify the effectiveness of the proposed penalty strategy, comparative data on the waiting time will be given in subsection 4.1.

Due to the large number of peers participating in P2P networks and the huge amount of resource transfer tasks, the P2P networks consume a large amount of energy every day, and their total energy consumption is an important issue to be addressed, considering the economic and environmental impact of energy production and use. Brienza et al. [6] classified the currently proposed methods to reduce energy consumption in P2P networks into six main categories as shown in Table 1, which are sleep/wakeup: energy saving is achieved by allowing the peer to switch cyclically between normal and sleep modes [23]. Proxy-based: using a proxy to process requests on behalf of a peer, the peer can go into sleep mode while the proxy is working, therefore, this strategy reduces the energy consumption of the system [5]. Peer selection: when a requesting node sends a service request to the peer, selecting a neighboring peer can save the energy consumed by communication [17]. Resource allocation: reducing energy consumption by designing a proper network architecture and allocating the resources (CPU, bandwidth, etc.) of the P2P system [14]. Structure optimization: saving energy by controlling its topology during construction and maintenance or introducing new layers in the overlay [20], [9]. Message reduction: saving energy by reducing the number of messages required to operate and maintain the P2P overlay network [16].


Table 1. Energy saving strategy.

System	Strategy
Trunfio [23]	sleep/wakeup
Anastasi et al. [5]	proxy-based
Maamar et al. [17]	peer selection
Kontos et al. [14]	resource allocation
Özkasap et al. [20]	structure optimization
Han et al. [9]
Lee et al. [16]	message reduction
The energy saving strategy adopted in this paper is sleep/wakeup, but it is different from Trunfio's system, which [23] proposed a peer file sharing model with two logical layers, where the lower layer consists of peers that handle service requests, while the upper layer is a super node whose role is to retrieve and store the status information of the peers. In this paper, we further divide the peers in the lower layer into two categories, fixed nodes with high service rate and mobile nodes with low service rate, to handle requests from shared resource users and requests from free riding users, respectively, to cope with free riding behavior in P2P networks. For the state transition mode, this paper adopts a single asynchronous vacation strategy for fixed nodes. Asynchronous vacation is more flexible compared with synchronous vacation because each fixed node can sleep/vacate independently as long as the service is completed, and it is not necessary to wait for all fixed nodes to finish sleeping before service, so asynchronous vacation can both reduce energy consumption and serve customers more flexibly, and can adapt to a variety of situations. In order to prove the superiority of single asynchronous vacation, this paper will be verified by comparative analysis in subsection 4.3.

Regarding the applications of Nash equilibrium in the network, Jin et al. [11] established a continuous time queueing model with random changes of the number of servers based on the online mechanism of P2P nodes, and they constructed a revenue function, analyzed the Nash equilibrium strategy and social optimal strategy of the node online mechanism. Huo et al. [10] proposed a novel energy saving strategy with dual rate transmission in the study of cognitive radio networks. Based on the revenue-expenditure structure, they established a revenue function and studied Nash equilibrium behavior and social optimal behavior.

There have been many studies on the queueing systems of different types of servers and vacation. Madan et al. [18] studied the M/M/2 queueing model under single asynchronous Bernoulli vacation strategy with two vacation modes, and obtained the stationary equations of the model. Kumar and Madheswari [15] studied the asynchronous M/M/2 queueing model with multiple vacations, and obtained the steady distribution of queue length by using the method of matrix geometric solution, the busy period and waiting time of the system were analyzed. Wang et al. [25] studied M/(Ek, M)/2 repairable queueing systems with two different servers, and analyzed the effects of service rates and arrival rates on the average queue length by numerical examples. Yu et al. [28] used queueing model of repairable M/M/2 multiple working vacations with start-up period, negative customers, feedback and N-strategy to study the wireless communication networks with threshold activation process and interference signals, proposed strategies to reduce energy consumption. Ke et al. [13] studied M/M/c balking retrial queue with vacation for single and multiple vacations separately. This paper expands the number of two types of servers to two parameters, studies the M/M/c+d queueing model of servers with different service rates, and introduces a single asynchronous vacation to one of the servers. The stationary distribution of the system is obtained by using matrix geometric solution.

The main contributions of this paper are as follows:

(1)
This paper proposes a penalty strategy for free riding problem in P2P networks, i.e., to provide different service rates for free riders and users who share resources, so that the waiting time cost of free riders increases, with the aim of motivating all users to share resources and thus improving the efficiency of P2P systems.

(2)
Based on the penalty strategy for free riding problem, we model the hybrid P2P networks using the M/M/c+d queueing model, introduce a sleep/wakeup mechanism for peers at the service end, adopt a single asynchronous vacation strategy to reduce the energy consumption of the system, and quantify the energy consumption of peers in various states.

(3)
In order to avoid an excessive number of peers sending non-essential service requests to the system and increasing the energy consumption of the system, this paper studies the Nash equilibrium between the arrival rate and the net profit of the requesting node.

(4)
The method of matrix geometric solution is used to solve the stationary distribution of the queueing model, and numerical experiments are conducted to study the performance of the system.

The remainder of this paper is organized as follows: The hybrid P2P network and the established queueing model are described in Section 2. The stationary distribution of the model and related performance indicators are obtained in Section 3. Numerical experiments are carried out in Section 4. Conclusions are introduced in Section 5.

2. Hybrid P2P network and modeling
2.1. Penalty strategy for free riding
In order to cope with the free riding behavior in P2P networks, this paper proposes a penalty strategy, i.e., providing low service rate services to free riders and high service rate services to users who share resources to increase the waiting time cost of free riders and make them less satisfied. The specific implementation is as follows:

This paper proposes a hybrid P2P network system including different peer clusters, and each cluster contains a super node (SN) and several fixed nodes (FN) and mobile nodes (MN). The specific performance and roles of the three types of nodes are given in subsection 2.2.

After the requesting node arrives at the P2P system, the super node identifies free riders and shared resource users based on its stored historical reputation values of peers, and then, assigns free riders to mobile nodes to process requests and shared resource users to fixed nodes to process requests, because the service rate of fixed nodes is higher than that of mobile nodes and both types of service nodes have the same service resources.

To verify the effectiveness of the proposed penalty strategy, comparative data on the waiting time will be given in subsection 4.1.

2.2. Hybrid P2P network
The hybrid P2P network system considered in this paper is composed of different peer clusters, each cluster is equivalent to a peer, and the clusters are connected through a pure P2P mode as shown in Fig. 1. Each cluster contains a super node and several fixed nodes and mobile nodes with the same service resources. Each fixed node or mobile node is a peer, it can not only request services from other peers through its cluster as a requesting node, but provide services to other peers as a service node. The specific functions of three types of nodes in each cluster are as follows:

(1)
By analyzing the historical data and reputation of the requesting nodes, the super node divides requesting nodes into two categories, one is the nodes that are willing to serve as the service node to provide services to other users (type I requesting nodes), the other is the nodes that are unwilling to serve as the service nodes after receiving the service, and leave the system directly, i.e., the nodes with free riding tendency (type II requesting nodes). The super node assigns requesting nodes with free riding tendency to mobile nodes to receive services, and assigns requesting nodes with good reputation to fixed nodes to receive services. The super node must have enough memory to store the historical data of the requesting nodes and the information catalog of the fixed nodes and mobile nodes in the cluster, and it is responsible for maintaining the network structure in the entire cluster.

(2)
The fixed nodes provide services with high service rates for type I requesting nodes. They are located in area I, the number is c, and area I has a buffer that can accommodate unlimited service requests. The fixed nodes are mainly accessed through a fixed network. The advantages are that their equipment performance and network bandwidth are good, and stability is high, and they have higher service rates. The disadvantage is that they need irregular sleep to maintain higher service rates.

(3)
The mobile nodes provide services with low service rates for type II requesting nodes. They are located in area II, the number is d, and area II has no buffer. The mobile nodes need to be accessed through a wireless network. The advantages are that they have good mobility and flexibility and almost no need for sleep. The disadvantages are that the network stability is low and the bandwidth is limited, so their service rates are low. Fig. 2 shows the operation mechanism of each cluster in hybrid P2P system.

Fig. 2
Download : Download high-res image (102KB)
Download : Download full-size image
Fig. 2. Operating mechanism of every cluster in hybrid P2P network.

Fig. 1
Download : Download high-res image (189KB)
Download : Download full-size image
Fig. 1. The pure P2P mode between clusters.

In reality, we cannot make the super node in each cluster store the historical information of all users, because this requires a huge amount of memory, which greatly increases the system cost. Our strategy is that the super node in the cluster needs only store the historical information and reputation records of the users of adjacent cluster because each user sends requests to adjacent clusters firstly, and the information resources in the P2P system have greater repetitiveness. When the requests of the users are not satisfied in the adjacent cluster, the requests continue to be sent to another cluster through the adjacent cluster. Because the super node in the other cluster may not store the historical information of the users, this requires the super nodes between the two clusters to share the historical information and reputation of the users. Therefore, the super node does not need a lot of memory and can store information of all users in the P2P network.

2.3. Model description
In this paper, a cluster in the hybrid network is modeled as a queueing model with two types of servers and single asynchronous vacations. We point out that the corresponding relationship between the hybrid P2P network and the queueing model is as follows:

(1)
The fixed nodes are abstracted into the type I servers, assuming that their number is c and they are located in area I, area I contains a buffer with unlimited capacity. When the requesting node finds that there is no free server after arriving in area I, it queues up in the buffer for service. We introduce the single asynchronous vacation strategy to fixed nodes, i.e., when a fixed node completes the service, if there are requesting nodes in the buffer, it will continue to serve the requesting nodes at the head of the queue, if there is no requesting node in the buffer, it will enter a sleep of length V, and the length V of sleep follows an exponential distribution with parameter θ, and the fixed node does not serve the customer during sleep. When the fixed node finishes sleeping, if there are waiting requesting nodes in the buffer, it will serve the requesting nodes immediately. If there is no waiting requesting node in the buffer, it will enter a normal idle period. If a requesting node arrives system during the idle state, the fixed node will serve the requesting node immediately, otherwise it will continue the idle period. The service time 
 of the fixed nodes during the working state follows an exponential distribution with parameter 
. Assuming that the average energy consumption of each fixed node per unit of time during the sleep state is 
, the average energy consumption of each fixed node per unit of time during the idle state is 
, the average energy consumption of each fixed node per unit of time during the working state is 
, they need to meet 
. The state change process of the fixed node is shown in Fig. 3.

Fig. 3
Download : Download high-res image (43KB)
Download : Download full-size image
Fig. 3. State change process of fixed node.

(2)
The mobile nodes are abstracted into the type II servers, assuming that their number is d and they are located in area II, area II doesn't contain a buffer. When the requesting node finds that there is no idle mobile node after arriving in area II, it will leave the cluster directly, if there is an idle mobile node, it will receive the service immediately. The service time 
 of the mobile nodes follows an exponential distribution with parameter 
. The average energy consumption of each mobile node per unit of time during the working state is 
.

(3)
Type I requesting nodes are abstracted into type I customers, i.e., the customers with good reputation. They will be processed by the super node firstly after arriving in the cluster, and then enter the area I to receive the service with the higher service rate from the fixed nodes. Type II requesting nodes are abstracted into type II customers, i.e., the customers with free riding tendency. They will be processed by the super node firstly after arriving in the cluster, and then enter the area II to receive the service with the lower service rate from the mobile nodes. The arrival intervals of type I requesting nodes and type II requesting nodes follow exponential distributions with parameters 
 respectively.

Assuming that the service rule of the queueing system is first-come-first-served, the arrival intervals of requesting nodes, the service time of each fixed node and mobile node, and the sleep time of each fixed node are mutually independent.

There are several kinds of service rules in queueing systems: first-come-first-served (the most common), first-come-last-served (e.g., inventory, where it is common sense that people always pick up the last goods put in first when picking up goods), randomly-served (a randomly selected one among waiting customers is served), and priority-served (divided into preemptive priority and non-preemptive priority). Because this paper abstracts the request for a requesting node as a customer arrival, which is common service process, and there is no priority case involved, for fairness, so we adopt the service rule of first-come-first-served.

There are two types of arrival and service processes in queueing systems: single arrival, single service (i.e., arriving and serving independently), and batch arrival, batch service (i.e., arrival and service are interdependent). The arrival and service of the requesting node in this paper are single cases, i.e., independently and the vacation strategy in this paper is asynchronous vacation, i.e., each peer can start vacation independently and end vacation independently. So we assume, the arrival intervals of requesting nodes, the service time of each fixed node and mobile node, and the sleep time of each fixed node are mutually independent.

3. Model analysis
3.1. State transition rate matrix
Let 
 be the number of type I requesting nodes in the system at time t. Let 
 be the number of type II requesting nodes in the system at time t. Let  be the number of fixed nodes in the system during the work/idle period at time t. Then 
 is a three-dimensional Markov process, with state space

The system states are arranged in alphabetical order, and the system state transition rate matrix can be written as follows:
 
 where 
 represent the state transition rates between levels respectively, and 
 are all  dimensional block matrices. In order to express the matrices simply, the following symbols are defined: 
  where I is a  dimensional unit matrix, D is a  dimensional square matrix as follows:
 

Thus, each sub-block matrix of the matrix Q has the following form:
 
 
 
 

When ,
 

When ,
 
 
 

3.2. Steady state analysis of system
The structure of Q indicates that the Markov process 
 is a QBD (quasi-birth-and-death process). If the QBD is positive recurrent, its stationary distribution is assumed as follows:
 

The sufficient and necessary condition that the QBD is positive recurrent is that the matrix quadratic equation
 has a minimal non-negative solution R and the spectral radius , the 
 dimensional stochastic matrix
 
 has a left zero vector.

When the QBD is positive recurrent, the stationary distribution satisfies the following equations:
 
  where e is  dimensional column vector with all elements being equal to one, 
 is  dimensional unit matrix.

The method of matrix geometric solution is used in the proof process of the above conclusion. The specific proof process can be referred in the literature [22], [19].

Due to the large dimensionality of the coefficient matrix  in the matrix equation 
, it is difficult to give an explicit expression for the rate matrix R, so we give an iterative algorithm to solve the rate matrix R. In order to ensure the convergence of the algorithm, we give the accuracy η of the algorithm, and when the value of 
 is less than the accuracy η, the approximate solution R satisfying the accuracy is obtained. The main steps of the iterative algorithm are shown in Table 2.


Table 2. Iterative algorithm.



3.3. Performance indicators
We can construct the following expressions of performance indicators through the stationary distribution of the hybrid P2P network queueing model.

(1)
The average length of type I requesting nodes is given by:
 
 
 
 

(2)
The average length of type II requesting nodes is given by:
 
 
 
 
 Using the Little formula in queueing theory [26], [27], we have that

(3)
The average delay of type I and type II requesting nodes is given by:
 
 
 
 
 
 
 
 
 
 

(4)
The average energy consumption of fixed nodes per unit of time during sleep state is given by:
 
 
 

(5)
The average energy consumption of fixed nodes per unit of time during idle state is given by:
 
 
 

(6)
The average energy consumption of fixed nodes per unit of time during working state is given by:
 
 
 
 
 
 

(7)
The average energy consumption of mobile nodes per unit of time is given by:
 
 
 

(8)
The total energy consumption of system is given by:

4. Numerical experiments
In this section, on the basis of the stationary distribution and expression of performance indicators, with the help of MATLAB 2020a, the trend of performance indicators with the change of system parameters is studied, the waiting time of two types of requesting nodes is compared, and the energy consumption of the system under the asynchronous vacation strategy of fixed nodes is analyzed. Then Nash equilibrium strategy is proposed, the optimal arrival rate that meets Nash equilibrium is obtained, the optimization analysis of social profit is carried out. Before the numerical experiments, we explain the meanings of all parameters of the system firstly, as shown in Table 3.


Table 3. Meanings of all the parameters of the system.

Parameter	Meaning
c	The number of fixed nodes in the cluster
d	The number of mobile nodes in the cluster
λ1	Arrival rate of type I questing nodes
λ2	Arrival rate of type II questing nodes
ε	Arrival rate of type negative customers
μ1	Service rate of fixed nodes
μ2	Service rate of mobile nodes
θ	Sleep parameter of fixed nodes
y1	Energy consumption of fixed nodes per unit of time during sleep state
y2	Energy consumption of fixed nodes per unit of time during idle state
y3	Energy consumption of fixed nodes per unit of time during working state
y4	Energy consumption of mobile nodes per unit of time during working state
4.1. Penalty effect validation
In this paper, in order to cope with free riding behavior in P2P networks, a penalty strategy is adopted, i.e., requesting nodes with a tendency to free riding behavior are provided with a lower service rate, and requesting nodes sharing resources are provided with a higher service rate respectively, with the aim of making the waiting time of free riders increase, and thus the waiting time cost increases, encouraging users to share resources and improving the efficiency of the P2P network system.

We assume that the service rate of a fixed node (serving a requesting node for a shared resource) is 
, the service rate of a mobile node (serving a requesting node for a free rider) is 
, and . Table 4 reflects the comparison of the values of their average waiting time at the same level of arrival rate for both types of requesting nodes. From the table, we can see that the average waiting time of type II requesting nodes is significantly larger than that of type I requesting nodes at either arrival rate level, so the waiting time cost of type II requesting nodes is larger than that of type I requesting nodes, and the strategy of differential service rate adopted in this paper has a punitive effect on free riding behavior.


Table 4. Comparison of waiting time.

λ1=λ2	E(W1)	E(W2)
2	0.2503	0.4997
3	0.2519	0.4982
4	0.2559	0.4940
5	0.2628	0.4859
6	0.2724	0.4739
7	0.2839	0.4588
8	0.2967	0.4414
4.2. Energy consumption analysis
We take a cluster of hybrid P2P network as the research object to study the effects of system parameters on energy consumption. Assuming that the average energy consumption of each fixed node per unit of time during sleep state is 
, the average energy consumption of each fixed node per unit of time during idle state is 
, the average energy consumption of each fixed node per unit of time during working state is 
, and the average energy consumption of each mobile node per unit of time during working state is 
.

Fig. 4 shows the effects of sleep parameter θ, service rate 
 of the fixed nodes and arrival rate 
 of type I requesting nodes on the average energy consumption 
 of fixed nodes during sleep state when 
. The average energy consumption 
 reduces gradually with the increase of sleep parameter θ when 
 and 
 are fixed. The average energy consumption 
 increases gradually with the increase of service rate 
 when θ and 
 are fixed. The average energy consumption 
 increases gradually with the increase of arrival rate 
 when θ and 
 are fixed. This is because when the sleep parameter increases, the average sleep time of each fixed node decreases, and the number of fixed nodes in the sleep state decreases, so the average energy consumption of fixed nodes in the sleep state reduces. When the service rate 
 increases, the faster the service is completed and the faster the fixed nodes enter sleep state, so the average energy consumption of fixed nodes per unit of time during sleep state increases. When the arrival rate 
 increases, the number of fixed nodes in the working state increases, and the number of fixed nodes entering sleep state after work increases, so the average energy consumption of fixed nodes per unit of time during sleep state increases. From this we can conclude that in order to reduce the energy consumption of the fixed nodes in the sleep state, we can increase the sleep parameter, decrease the service rate of fixed nodes and the arrival rate of type I requesting nodes.

Fig. 4
Download : Download high-res image (62KB)
Download : Download full-size image
Fig. 4. The relationship between G1 and θ, μ1 and λ1.

Fig. 5 shows the effects of service rate 
 of the fixed nodes and arrival rate 
 of type I requesting nodes on the average energy consumption 
 and 
 of fixed nodes per unit of time during idle state and the working state when 
. Because the fixed nodes in the idle state do not work and the energy consumption is greater than the energy consumption in the sleep state, so we must reduce the energy consumption in the idle state. The average energy consumption 
 reduces and the average energy consumption 
 increases gradually with the increase of arrival rate 
 when 
 is fixed. The average energy consumption 
 increases and the average energy consumption 
 reduces gradually with the increase of service rate 
 when 
 is fixed. This is because when arrival rate 
 increases, the number of fixed nodes in the idle state decreases, and the number of fixed nodes in the working state increases, so the energy consumption 
 reduces and 
 increases. When service rate 
 increases, the number of fixed nodes in the working state decreases, and more fixed nodes become idle state, so the energy consumption 
 increases and 
 reduces. From this we can conclude that in order to reduce the energy consumption of the fixed nodes in the idle state, we can increase the arrival rate 
 and decrease the service rate 
 to increase the number of fixed nodes in the working state.

Fig. 5
Download : Download high-res image (69KB)
Download : Download full-size image
Fig. 5. The relationship between G2,G3 and λ1, μ1.

We set the condition of energy consumption that the average energy consumption of fixed nodes per unit of time during idle state must be less than or equal to the average energy consumption of fixed nodes per unit of time during working state, that is 
, then the parameters need to meet the condition, 
 or 
.

In the above discussions, we analyzed some influencing factors on the energy consumption under asynchronous vacation strategy. We hope to reduce the average energy consumption of fixed nodes per unit of time during idle state and increase the average energy consumption of fixed nodes per unit of time during working state relatively, and reduce the average energy consumption of fixed nodes per unit of time during sleep state as much as possible. Now, we still need to analyze the total energy consumption of the system and formulate strategies to reduce the total energy consumption of the system. Table 5 and Fig. 6 show the influencing factors on the total energy consumption G of the system. We can see that the total energy consumption G decreases gradually with the increase of service rates 
 and 
, the total energy consumption G increases gradually with the increase of sleep parameter θ, the total energy consumption G increases gradually with the increase of arrival rate 
 when other conditions are fixed. This is because the energy consumption of different nodes is different, 
, and the number of fixed nodes and mobile nodes in the working state decreases with the increase of service rates, so the total energy consumption reduces. When the sleep parameter of fixed nodes increases, the average sleep time decreases, and the number of fixed nodes in the working state increases, so the total energy consumption increases. When the arrival rates of requesting nodes increase, the number of fixed nodes and mobile nodes in the working state increases, so the total energy consumption G increases. Therefore, in order to reduce the total energy consumption of the system, we need to increase the service rates of fixed nodes and mobile nodes, decrease the sleep parameter of fixed nodes, and decrease the arrival rates of requesting nodes.


Table 5. The relationship between G and λ1, μ1, μ2 and θ.

G	λ1 = 5,θ = 1	λ1 = 5,θ = 6	λ1 = 9,θ = 6
μ2 = 2.0	μ1 = 2.2	51.0762	53.2771	60.4651
μ1 = 3.6	46.9905	49.7022	53.6661
μ1 = 5.0	45.2153	48.1397	50.7629
μ1 = 6.4	44.2220	47.2625	49.1501

μ2 = 1.0	μ1 = 2.2	59.1691	61.3701	68.5581
μ1 = 3.6	55.0834	57.7952	61.7591
μ1 = 5.0	51.0762	53.2771	60.4651
μ1 = 6.4	46.9905	49.7022	53.6661
Fig. 6
Download : Download high-res image (64KB)
Download : Download full-size image
Fig. 6. The relationship between G and λ1, μ1, μ2 and θ.

Therefore, in order to reduce the energy consumption during idle state, increase the energy consumption during working state and reduce the total energy consumption of the system, we need to decrease the sleep parameters of the fixed nodes under the condition of 
. In this way, the energy consumption of fixed nodes during idle state can be less than that during working state, and the total energy consumption of the system can be reduced.

4.3. Model validity verification
In this paper, a single asynchronous vacation strategy is adopted to reduce the energy consumption of hybrid P2P networks, and we argue that the single asynchronous vacation strategy can both reduce energy consumption and serve customers more flexibly and reduce the load on service nodes compared to the single synchronous vacation strategy. In this section, we derive the stationary distribution of the queueing model for the single synchronous vacation strategy, construct the energy consumption function, and verify the validity of the model by comparing the two types of strategies through numerical experiments.

We replace the single asynchronous vacation strategy in Section 2 with the synchronous vacation policy, leaving all other parameters unchanged, and construct the single synchronous vacation strategy queueing model.

Let 
 be the number of type I requesting nodes in the system at time t, 
 be the number of type II requesting nodes in the system at time t, 
 be the state of the system at time t as follows:
 

Then 
 is a three-dimensional Markov process, with state space 
 

The system states are arranged in alphabetical order, and the system state transition rate matrix can be written as follows:
 
 where, 
 are all  dimensional square matrices.

The procedure for solving the steady state of the system is similar to that in Section 2. The stationary distribution satisfies the following similar equation:
 
 

Therefore, in the queueing model of the single synchronous vacation strategy, the average energy consumption 
 of a fixed node per unit time during sleep state is given by:
 
 

The average energy consumption 
 of a fixed node per unit time during idle state is given by:
 

The average energy consumption 
 of a fixed node per unit time during working state is given by:
 
 

The average energy consumption 
 of a mobile node per unit time is given by:
 
 
 

The total energy consumption 
 of the system per unit time is given by:

When the system parameter values are 
, we compare the average energy consumption of the two types of vacation strategies under different sleep parameter levels. Fig. 7 reflects the trend of the average total energy consumption per unit time of the system with respect to the sleep parameters for both types of strategies, where G represents the total energy consumption of the system under the single asynchronous vacation strategy and 
 represents the total energy consumption of the system under the single synchronous vacation strategy. From the figure, we can see that as the sleep parameter increases, both G and 
 show a gradual increase, and the curve of G is always below the curve of 
. This indicates that the total energy consumption of the system under the single asynchronous vacation strategy is less than that under the single synchronous vacation strategy, and the asynchronous vacation strategy can save more than 10% of energy consumption at each parameter level.

Fig. 7
Download : Download high-res image (50KB)
Download : Download full-size image
Fig. 7. The relationship between G, G′ and θ.

Table 6 reflects the specific values of various energy consumption of the system under different sleep parameter levels under the two types of strategies. From the table, we can see that no matter what the parameter level, the average energy consumption 
 of the fixed node during sleep state under the single asynchronous vacation strategy is always greater than the average energy consumption 
 of the fixed node during sleep state under the single synchronous vacation strategy. The average energy consumption 
 of the fixed node during idle state under the single asynchronous vacation strategy is always greater than the average energy consumption 
 of the fixed node during idle state under the single synchronous vacation strategy. The average energy consumption 
 of the fixed node during working state under the single asynchronous vacation strategy is always less than the average energy consumption 
 of the fixed node during working state under the single synchronous vacation strategy. The average energy consumption of mobile nodes 
 and 
 under the two types of strategies are always equal.


Table 6. Comparison of specific values.

θ = 2	G = 50.12	G1 = 14.24	G2 = 6.90	G3 = 20.00	G4 = 8.97
G′ = 59.93	

θ = 6	G = 51.73	G1 = 6.21	G2 = 16.55	G3 = 20.00	G4 = 8.97
G′ = 63.54	

G = 52.20	G1 = 3.84	G2 = 19.20	G3 = 20.00	G4 = 8.97
G′ = 64.49	
This is because under the single asynchronous vacation strategy, each fixed node ends its working state and enters the sleep state independently if there is no waiting type I requesting node in the system after completing a service task, while under the single synchronous vacation strategy, all fixed nodes can enter the sleep state together only when all fixed nodes complete their service tasks and there is no waiting type I requesting node in the system. Therefore, the fixed nodes of the single asynchronous vacation strategy can enter the sleep state earlier. At the end of one sleep, each fixed node under the single asynchronous vacation strategy will enter the working state for service if there is a waiting type I requesting node in the system, and if there is no waiting type I requesting node, it will enter the idle state and wait for the requesting node to send the request. And all fixed nodes under the single synchronous vacation strategy will enter the working state after one sleep as long as there is a waiting type I requesting node in the system, and if there is no waiting type I requesting node, all fixed nodes will enter the idle state and wait for the requesting node to send the request.

Therefore, fixed nodes under single synchronous vacation strategy have lower probability of being in idle and sleep states and enter the working state earlier compared to fixed nodes under single asynchronous vacation strategy. Therefore, the average energy consumption of the fixed nodes in the sleep state and idle state under the single asynchronous vacation strategy is greater than the average energy consumption of the fixed nodes in the sleep state and idle state under the single synchronous vacation strategy, and the average energy consumption of the fixed nodes in the working state under the single asynchronous vacation strategy is less than the average energy consumption of the fixed nodes in the working state under the single synchronous vacation strategy.

Because the average energy consumption in the working state 
> the average energy consumption in the idle state 
> the average energy consumption in the sleep state 
, the total energy consumption of the system under the single asynchronous vacation strategy is smaller than the total energy consumption of the system under the single synchronous vacation strategy. Since mobile nodes do not have a vacation strategy, the average energy consumption of mobile nodes is not affected by the vacation strategy, and the average energy consumption of the two types of strategies is equal.

In summary, the single asynchronous vacation strategy can not only reduce the total energy consumption of the system compared with the single synchronous vacation strategy, but also enable the serving nodes to switch between states more flexibly, thus improving the service efficiency and reducing the node load. Therefore, the effect of the single asynchronous vacation strategy adopted in this paper is significant in reducing energy consumption.

4.4. Nash equilibrium strategy
In hybrid P2P networks, all resource services are free basically, and peers will receive corresponding returns after receiving a free service. In order to avoid excessive peers sending unnecessary service requests to the system and increasing unnecessary energy consumption of the system, we study the Nash equilibrium between the arrival rate of requesting nodes and the net profit of a single requesting node in this section. In real life, the requesting nodes do not know the number of requesting nodes in the system before making the request, so the requesting nodes can't maximize their own profits by unilaterally changing the strategy. Therefore, there is Nash equilibrium between the arrival rate of a single requesting node and the net profit of a single requesting node. Because the fixed nodes have a buffer and asynchronous vacation, the delay costs (the time cost caused by the stay time of the requesting node in the system) of different type I requesting nodes are different, which are affected by many factors, such as the sleep time of the fixed nodes, the arrival rate of the type I requesting nodes, and so on, so the net profits of type I requesting nodes are constantly changing. The mobile nodes have no buffer, so there is no waiting space, the average delay time of the type II requesting nodes is the average service time of the mobile nodes. It is only affected by the service rate of the mobile nodes. Under other conditions unchanged, when there are mobile nodes in the idle state, the type II requesting nodes accept the service. Their delay costs and net profits are both one certain value. When there is no mobile node in the idle state, the mobile nodes leave the system, the delay costs and net profits of the type II requesting nodes are both zero, so we study Nash equilibrium between the arrival rates and net profits of the type I requesting nodes. The following assumptions are put forward:

(1)
The requesting nodes do not know the information of the system before entering the system, including the number of fixed nodes in the sleep state, the number of requesting nodes in the buffer, and so on.

(2)
The requesting node obtains a reward of Z after a service, the bandwidth cost is 
, the delay cost per unit time is 
.

(3)
The net profits function of all type I requesting nodes are the same and are additive.

(4)
The service rule is first-come-first-served, and the requesting nodes entering the system can't leave halfway.

Based on the above assumptions, the net profit of a single requesting node can be obtained as follows:

In order to ensure that the system is in steady-state, we set the upper bound of the arrival rate as 
, and the lower bound as 
. Fig. 8 shows that the average delay of type I requesting nodes increases gradually with the increase of arrival rate 
 within constraint range 
. This is because when service rate is fixed, the average queue length of type I requesting nodes in the system increases with the increase of arrival rate, and the average delay increases. Therefore, the net profit of a single requesting node decreases with the increase of arrival rate, net profit is a monotonic decreasing function of arrival rate. However, because a single requesting node does not know the information inside the system, there are game behaviors among the nodes. In order to get the positive net profit, the arrival rate of a single request node will increase gradually until the Nash equilibrium is reached under the condition of 
. The optimal arrival rate is 
 at this time.

Fig. 8
Download : Download high-res image (56KB)
Download : Download full-size image
Fig. 8. The relationship between E(W1) and λ1.

The process of achieving Nash equilibrium is as follows:

(1)
If 
, that is, even if the arrival rate reaches the minimum value, the net profit of a single requesting node is still negative, so the optimal arrival rate at this point is 
.

(2)
If 
, that is, even if the arrival rate reaches the maximum value, the net profit of a single requesting node is still positive, so the optimal arrival rate at this time is 
.

(3)
If 
. That is, only part of the requesting nodes can obtain positive net profit, and other requesting nodes obtain negative net profit due to the long waiting time in the buffer. When the net profit is zero, the system reaches the Nash equilibrium; that is, 
. The optimal arrival rate at this time is 
.

Table 7 reflects the relationship between the net profit of a single requesting node and the arrival rate when 
. From the table, we can see that with the increase of arrival rate, the net profit of a single requesting node decreases gradually, and from positive to negative. When 
, 
 reaches zero, so the optimal arrival rate that reaches Nash equilibrium is 
.


Table 7. The relationship between U(λ1) and λ1.

λ1	U(λ1)
3.0	6.4
4.2	6.0
5.4	4.9
6.6	3.0
7.8	0.0
9.0	-4.1
10.2	-9.3
4.5. Social optimal strategy
In this section, we analyze the optimization of social profit. Since the net profits function of all type I requesting nodes are the same and are additive, the net social profit is as follows:

The optimal arrival rate that maximizes the net social profit is
⁎
 

The optimal arrival rate that maximizes social net profit is obtained by numerical examples. Fig. 9 shows the trend of social net profit 
 with the change of arrival rate 
 and service rate 
 when 
. When the service rate is fixed, the social net profit 
 increases firstly and then decreases with the increase of the arrival rate. When the arrival rate is fixed, the social net profit 
 increases gradually with the increase of service rate. This is because that with the increase of the arrival rate, the average delay 
 of type I requesting nodes increases gradually, so the delay cost increases and the net profit of a single requesting node decreases. However, since the arrival rate is increasing, the social net profit shows the trend of increasing firstly and then decreasing, and there is an optimal arrival rate, which makes the social net profit reach the maximum. When the service rate increases, the average delay 
 decreases gradually, so the delay cost decreases and the net social profit increases. As can be seen in Fig. 9, the net social profit reaches maximum when 
.

Fig. 9
Download : Download high-res image (65KB)
Download : Download full-size image
Fig. 9. The relationship between Us and λ1, μ1.

5. Conclusion
In order to deal with the free riding problem in P2P networks, a penalty strategy was proposed in this paper, and a corresponding queuing model was built to model, analyze and validate it. Based on this model, we introduced a sleep-wakeup mechanism and an asynchronous vacation strategy to reduce the energy consumption of the P2P network system. In addition, we quantified the energy consumption of peers in each state, and analyzed the relationship between energy consumption and parameters of the system, the key parameters that affect the energy consumption of the system were obtained. Furthermore, the performances of asynchronous vacation strategy proposed in this paper and synchronous vacation strategy in reducing energy consumption were compared, experimental results showed that the asynchronous vacation strategy not only saves more than 10% of the total energy consumption compared with the synchronous vacation strategy, but makes the hybrid P2P system more flexible and efficient. Finally, the Nash equilibrium between the arrival rate and the net profit of a single node was analyzed, and then the optimization of social profit was studied. In the future, we will consider more factors and study the energy saving strategy of hybrid P2P network from more aspects.

CRediT authorship contribution statement
During the writing and revision of the paper, every author had made important and irreplaceable contributions.

First Author performed method guidance and process supervision. Second Author performed model building, programming and numerical experiments, etc. Third Author and Fourth Author performed literature search, graphic beautification and error checking, etc.