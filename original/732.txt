Abstract
Given a connected graph G and S⊆V(G) with |S|≥2, a tree T in G is called an S-Steiner tree (or S-tree for short) if S⊆V(T). Two S-trees T1 and T2 are internally disjoint if E(T1)∩E(T2)=∅ and V(T1)∩V(T2)=S. The packing number of internally disjoint S-trees, denoted as κG(S), is the maximum size of a set of internally disjoint S-trees in G. For an integer k≥2, the generalized k-connectivity (abbr. κk-connectivity) of a graph G is defined as κk(G)=min{κG(S)|S⊆V(G) and |S|=k}. The n-dimensional augmented cube, denoted as AQn, is an important variant of the hypercube that possesses several desired topology properties such as diverse embedding schemes in applications of parallel computing. In this paper, we focus on the study of constructing internally disjoint S-trees with |S|=3 in AQn. As a result, we completely determine the κ3-connectivity of AQn as follows: κ3(AQ4)=5 and κ3(AQn)=2n−2 for n=3 or n≥5.


Keywords
Augmented cubes
Connectivity
Interconnection networks
Internally disjoint Steiner trees
Generalized connectivity

1. Introduction
It is well known that interconnection networks play a key role in parallel and distributed computing systems. An interconnection network conveniently modeled as an undirected connected graph , where  corresponds to the set of processors and  corresponds to the set of communication links between processors. In order to evaluate the reliability and fault tolerance of a network in communication, many related concepts and graph parameters have been put forward. The connectivity of a connected graph G, denoted by , is the minimum number of vertices whose deletion results in a disconnected graph. A graph G is k-connected if . Whitney [44] proposed another equivalent definition of connectivity as follows: a graph G is k-connected if and only if there exist k internally disjoint paths between any two vertices in G. As usual, one can use traditional connectivity to assess the strength of the connection between two nodes in a network.

Let G be a connected graph and  with . A tree T in G is called an S-Steiner tree (or S-tree for short) if . S-trees 
 in G are internally disjoint if 
 and 
 for pairwise . We refer to [14] for applications of Steiner trees in computer communication networks. In particular, the research about internally disjoint S-trees of graphs is important in effective information transportation in terms of parallel routing design for large-scale networks. Recently, more analyses revealed that the classic connectivity metrics are insufficient to determine how well-connected or well-designed a network is against the node or link failures [16]. For an integer , the generalized k-connectivity (abbr. 
-connectivity) of a graph G is defined as 
 and , where 
 denotes the maximum number of internally disjoint S-trees in G and is called the packing number of internally disjoint S-trees of G. For hardness results and approximation algorithms, we refer to [18], [20], [43] for specific Steiner trees and to [1], [11], [17] for internally disjoint Steiner tree packing problem. It is clear that the 
-connectivity is exactly the traditional connectivity. Hence, the 
-connectivity as one generalization of the traditional connectivity is of great significance and it can serve to measure the capability of connection for a set of nodes in a network.

The generalized k-connectivity was firstly introduced by Hager [15] in 1985. Henceforth, research related to this topic has been received much attention. However, for arbitrary k, so far only a few specific classes of graphs can determine their 
, e.g., complete graphs [4], complete bipartite graphs [29], and complete equipartition 3-partite graphs [30]. In fact, Li and Li [27] proved that given a subset S of vertices in a graph G with  and an integer ℓ (), deciding whether 
 is NP-complete. Later on, Chen et al. [6] proved that the same result holds even if . Also, Li et al. [28] gave sharp upper bound and lower bounds of 
 for general graph G (see Lemma 3.1, Lemma 3.2). In recent years, a great process has been made on the issue of 
-connectivity for  in some networks. For 
-connectivity, the results are such as Cartesian product graphs [23], recursive circulant graphs [22], Cayley graphs on symmetric groups generated by trees and cycles [32], star graphs and bubble-sort graphs [31], the line graph and the total graph of complete bipartite graphs [34], balanced hypercubes [41], alternating group graphs and -star graphs [47], bubble-sort star graphs [48], Cayley graphs generated by complete graphs and wheel graphs [49], -bubble-sort graphs [53], and some regular graphs including many famous networks [52]. For 
-connectivity, the results are such as hypercubes [35], exchanged hypercubes [50], dual cubes [51], -star networks [21], and hierarchical cubic networks [54]. For more works related to 
-connectivity, we refer the readers to [24], [25], [26], [38], [39] and a monograph [33] for details.

The n-dimensional augmented cube 
, proposed by Choudum and Sunitha [12], is an important variant of the hypercube 
, which is -regular, -connected (except for ) and vertex-symmetric on 
 vertices. Since 
 can be formed as an extension of 
 by adding some links, it possesses many of value properties (except for the cost of building network), e.g., the diameter of 
 is about a half of that of 
; there exist a lot of enriched schemes of embedding, including paths [36], cycles [3], [19], trees [8], [9], [37], [40] and their fault-tolerant embeddings [3], [10], [36], [45]; and it is helpful to the construction of data centers [5]. Remarkably, many of the above-mentioned references are closely associated with parallel and distributed computing, such as [5], [19], [36], [37], [46], and all this literature came from the relevant journals. For more works on studying topological properties of augmented cubes, please see recent papers [7], [8], [13], [19], [37], [45] and the references quoted therein. The current research of connectivity on 
 is gradually deepening, such as the extra edge-connectivity and the component edge-connectivity [46]. However, the generalized connectivity on 
 has not been investigated yet. In this paper, we focus on the study of 
-connectivity of 
 and prove that 
 and 
 for  or .

The remaining part of this paper is organized as follows. Some necessary definitions, notations and properties are given in Section 2. We determine the 
-connectivity of 
 for  and  in Sections 3 and 4, respectively. Finally, we conclude our paper in the last section.

2. Preliminaries
Let  be a simple undirected graph. For , the subgraph of G induced by S is denoted by . If , then we say x is adjacent to y. A neighbor of a vertex x is a vertex adjacent to x. We denote 
 the set of all neighbors of x in G. A graph is k-regular if it satisfies 
 for any , where 
 equals to the number of edges incident with v in G. In addition, the minimum degree of G, denoted by , is defined as 
. Let , an -path is a path which starts at x and ends at y. Two -paths P and Q are internally disjoint if . If X and Y are two disjoint subsets of , then a set of -paths is a family of internally disjoint paths starting at a vertex of X and ending at a vertex of Y such that all internal vertices of each path belong to neither X nor Y. In particular, if  and  is a set of k vertices, the set of -paths is called a k-fan from x to Y. In this paper, let  for  and 
 when .

Definition 1

(see [12]) The n-dimensional augmented cubes 
 are recursively constructed as follows:

(1)
 is a complete graph 
 with two ends denoted by 0 and 1.

(2)
For , 
 consists of two copies of 
, denoted by 
 and 
, and there are 
 edges between 
 and 
 as follows: let 
 and 
. Vertices 
 of 
 and 
 of 
 are adjacent if and only if either (i) or  described below fulfills:

(i)
 for . In this case, the edge  is called the hypercube edge and we denote 
 or 
.

 for . In this case, the edge  is called the complementary edge and we denote 
 or 
.

According to the definition of 
 and its recursive structure, the following facts are gotten directly.

Fact 2.1

 for .

Fact 2.2

 consists of two copies of 
 for  and , say 
 and 
. For any 
, there are two neighbors in 
, one neighbor is in 
 and the other neighbor is in 
.

For each  and , by Fact 2.2, 
 consists of two copies, say 
 for , of 
. Similarly, for  and , 
 consists of two copies, say 
 for , of 
. It is clear that Fact 2.3 holds.

Fact 2.3

For , there exists a perfect matching between 
 and each of the following subcubes: 
, 
, 
, 
. In particular, there exist two perfect matchings between 
 and 
.

Lemma 2.4

(see [12]) Let 
 be the n-dimensional augmented cubes. Then 
, 
, 
 and 
 for .

The following properties related to the connectivity of a graph are well-known.

Lemma 2.5

(see [2]) Let G be a k-connected graph and X, Y be two disjoint subsets of  of cardinality at least k. Then there exists a family of k pairwise disjoint -paths in G.

Lemma 2.6

(see [2]) Let G be a k-connected graph, x be a vertex of G and  be a subset of  of cardinality at least k. Then there exists a k-fan from x to Y in G.

From Lemma 2.5, Lemma 2.6, it is clear that the following lemma holds.

Lemma 2.7

Suppose that 
 and 
 are two vertex disjoint k-connected graphs with 
 and 
. Let G be the graph obtained from 
 by adding the edges 
 for . Then G is -connected.

3. The 
-connectivity of 
 for 
In [28], Li et al. showed the following bounds of 
-connectivity of a graph.

Lemma 3.1

(see [28]) Let G be a connected graph and  be the minimum degree of G. Then 
. Moreover, if there are two adjacent vertices of degree δ, then 
.

Lemma 3.2

(see [28]) Let G be a connected graph. For every two nonnegative integers k and r with , if , then 
.

Lemma 3.3

Let  be a subset of 
. Then there exist 4 internally disjoint S-trees in 
.

Proof

If S is contained in one copy of 
, without loss of generality, we assume 
. By symmetry, we may consider . Then, four internally disjoint S-trees of 
 are shown in Fig. 2(a). On the other hand, without loss of generality, we assume 
 and 
. Then, it suffices to consider three cases: (i)  are neighbors of z; (ii) either x or y is a neighbor of z; (iii) neither x nor y are neighbor of z. By symmetry, we assume that ,  and  for case (i); ,  and  for case (ii); and ,  and  for case (iii). Then, the desired S-trees are shown in Fig. 2(b), Fig. 2(c) and Fig. 2(d), respectively. □

Fig. 2
Download : Download high-res image (289KB)
Download : Download full-size image
Fig. 2. Illustration of the proof of Lemma 3.3. Four internally disjoint S-trees are represented by different types of lines (i.e., Ei for i = 1,2,3,4), where solid nodes are vertices of S.

Theorem 3.4

.

Proof

By Lemma 3.3, we have 
. Since 
 is 5-regular, it follows from Lemma 3.1 that 
. Thus, the result holds. □

Lemma 3.5

Let 
 be a subset of 
 for . If S is contained in one copy of 
, then there are  internally disjoint S-trees in 
.

Proof

Without loss of generality, assume 
. The proof is by induction on n. The base case  is affirmed in the proof of Lemma 3.3 by considering 
. Assume that the statement is true for 
 with . That is, there are  internally disjoint S-trees in 
 for . Let 
 be a set of internally disjoint S-trees in 
. From Fact 2.1 and Fact 2.2, 
 consists of 
 and 
. Moreover, by Fact 2.2, we let 
 and 
 be the two neighbors of 
 for  such that 
 and 
, respectively. As 
 and 
 are two disjoint connected subgraphs of 
, there exist two disjoint trees 
 and 
 such that 
 connects 
, 
 and 
 in 
 and 
 connects 
, 
 and 
 in 
, respectively. Let 
 and 
. Thus, 
 for all  are the desired internally disjoint S-trees in 
. □

Lemma 3.6

Let 
 be a subset of 
. If 
, 
 and 
, then 
.

Proof

We denote 
 as the desired internally disjoint S-trees for . To draw a clear distinction, an edge 
 is called a tree edge, and a non-tree edge otherwise. We first give the following observation. Since 
 is 7-regular, if there is a vertex  such that it is incident with two non-tree edges, then it is impossible to have 6 internally disjoint S-trees in 
. Let  and . It is clear that a and b are common neighbors of 
 and 
, and both a and b are not adjacent to 
 in 
 (see Fig. 3). There are two cases as follows.

Fig. 3
Download : Download high-res image (248KB)
Download : Download full-size image
Fig. 3. Illustrations of AQ4 in the proof of Lemma 3.6.

Case 1. 
 is a tree edge. Without loss of generality, assume 
. Then, there must exist a vertex u in 
 such that 
 or 
. Without loss of generality, assume 
. Note that 
 is incident with only 2 tree edges in 
. Otherwise, except for 
, we can pack at most 4 internally disjoint S-trees in 
, and thus 
.

Subcase 1.1. . Without loss of generality, assume . Then, it follows that 
 and 
 is a non-tree edge. If 
 is also a non-tree edge, then 
 is incident with at least two non-tree edges in 
. In this case, it is impossible to have 6 internally disjoint S-trees in 
. Hence, we have 
. If 
, then there are at least 3 neighbors of 
 that are contained in 
. In this case, we can pack at most 4 internally disjoint S-trees in 
 except for 
. Thus, 
. Next, without loss of generality, we assume 
 and consider the degree of b in 
 as follows.

If 
, there is a vertex v in 
 such that 
. Clearly, 
, and both v and b are neighbors of 
 in 
. Since 
 and a are neighbors of 
 in 
 and 
, this implies that we can pack at most 3 internally disjoint S-trees in 
 except for 
 and 
. Hence, 
.

If 
, there is a vertex w adjacent to b in 
, where 
, . Since both 
 and a are neighbors of 
 in 
, if 
, then it must be a leaf of 
. Otherwise, we can pack at most 3 internally disjoint S-trees in 
 except for 
 and 
. In this case, there is a vertex 
 in 
 such that 
, which is similar to the previous situation of 
. On the other hand, if 
, then w is either adjacent to 
 or adjacent to 
 in 
 (see Fig. 3, four gray vertices indicate the candidates of w). Thus, at least four neighbors of 
 or four neighbors of 
 are contained in both 
 and 
. This implies that we can pack at most 3 internally disjoint S-trees in 
 except for 
 and 
. Hence, 
.

If 
, there exist two vertices 
 such that 
 and 
. Clearly, if we consider all possible scenarios of 
 and 
 separately, each scenario is similar to the previous situation of 
. Thus, no matter how 
 and 
 are distributed, we can pack at most 3 internally disjoint S-trees in 
 except for 
 and 
. Hence, 
.

Subcase 1.2. . In this case, we have . If 
 or 
 is a non-tree edge or an edge of 
, then at most 4 neighbors of 
 can be used to construct other S-trees. Hence, 
. In the following, without loss of generality, we assume 
 and consider the degree of b in 
 as follows.

If 
, there is a vertex v in 
 such that 
. Clearly, 
, and both v and b are neighbors of 
 in 
. Since 
 and u are neighbors of 
 in 
, this implies that we can pack at most 3 internally disjoint S-trees in 
 except for 
 and 
. Hence, 
.

If 
, there is a vertex w adjacent to b in 
, where 
 and . If , a proof similar to the situation of 
 in Subcase 1.1 with changing u instead of a can show that 
. We now consider . In this case, we have 
, which implies that 
 is a non-tree edge. Hence, 
.

If 
, there exist two vertices 
 such that 
. Clearly, if we consider all possible scenarios of 
 and 
 separately, each scenario is similar to the previous situation of 
. Thus, no matter how 
 and 
 are distributed, we can pack at most 3 internally disjoint S-trees in 
 except for 
 and 
. Hence, 
.

Case 2. 
 is a non-tree edge. In this case, if 
 or 
 is incident with another non-tree edge, it is clear that 
. Without loss of generality, we assume 
. If 
, we can pack at most 4 internally disjoint S-trees in 
 except for 
. Hence, 
. For 
, there is a vertex 
 such that 
. If 
, then w is adjacent to 
 or 
 in 
. This implies that we can pack at most 4 internally disjoint S-trees in 
 except for 
. Hence, 
. Otherwise, we have 
 (i.e., 
). Similarly, if 
, we can pack at most 4 internally disjoint S-trees in 
 except for 
. Hence, 
. For 
, since 
, there is a path passing through  to reach 
 in 
, where . Since v is adjacent to 
 or 
 in 
, it implies that we can pack at most 4 internally disjoint S-trees in 
 except for 
. Hence, 
. □

Theorem 3.7

.

Proof

By Lemma 2.4, Lemma 3.6, we have 
 and 
. Also, by Lemma 3.2, if , then 
. Thus, the result holds. □

To make the results of this paper more comprehensive, we include the following theorem. However, its proof is very lengthy and complicated. For readability, we put the entire proof as an appendix in an additional file [42].

Theorem 3.8

.

4. The 
-connectivity of 
 for 
Let 
 be an arbitrary subset of 
. For notational convenience, we use the following representation to denote the neighbors of a vertex 
. Assume 
 for  and , and let u be a neighbor of 
. Since 
 is -regular, by Fact 2.3, we denote u as follows:(1)
 

Lemma 4.1

Let 
 be an n-dimensional augmented cube for  and 
 be an arbitrary subset of 
. If two elements of S are contained in one copy of 
 in 
 and the other element is contained in 
 for , then there are  internally disjoint S-trees in 
.

Proof

Without loss of generality, assume 
 and 
. We consider the following two cases.

Case 1. 
 are contained in one copy of 
. Without loss of generality, assume 
.

Subcase 1.1. 
 or 
.

Assume 
. As 
, there are  internally disjoint paths between 
 and 
 in 
, which are denoted by 
 for  and assume 
. From Fact 2.3, there exists a perfect matching between 
 and 
, and let 
 be the neighbor of 
 in 
. By Lemma 2.6, there exists a -fan from 
 to 
 in 
, and let 
 for  be such internally disjoint 
-paths. Then, we can obtain  internally disjoint S-trees as follows:

Let 
 and 
. By Eq. (1), it is clear that 
 and 
. As 
 and 
 are connected subgraphs of 
, there exist two trees 
 and 
 such that 
 connects vertices of U in 
 and 
 connects vertices of W in 
, respectively. Then, we can construct two S-trees as follows:

Let 
. By Eq. (1), we have 
 and 
. By Fact 2.3, there is prefect matching between 
 and 
. Thus H contains a tree, say 
, that connects 
, 
 and 
. Then, the following construction is an S-tree:

Subcase 1.2. 
 or 
.

Assume 
. As 
, there are  internally disjoint paths between 
 and 
 in 
, which are denoted by 
 for  and assume 
. By Eq. (1), we have 
. Let R be a path connecting 
 and 
 in 
. From Fact 2.3, there exists a perfect matching between 
 and 
, and there exists a perfect matching between 
 and 
. For , let 
 be the neighbor of 
. We claim that 
 for . Assume 
. Then, 
 and 
. Thus, 
 and 
 are adjacent in 
. If 
 for some , then the vertex 
 is adjacent with two vertices of 
, a contradiction to Fact 2.3. As 
, by Lemma 2.6, there exists a -fan from 
 to 
 in 
. Let 
 for  be such internally disjoint 
-paths. Then, we can obtain the following internally disjoint S-trees: 
 

By Eq. (1), we have 
, 
. Because 
 can be decomposed into two disjoint copies of 
, which are denoted by 
 and 
 (see Fig. 5). From Fact 2.2, without loss of generality, we assume that 
 and 
. Since 
 is connected, there is a tree, say 
, that connects 
, 
 and 
 in 
. Then, the following construction is an S-tree:

Fig. 5
Download : Download high-res image (332KB)
Download : Download full-size image
Fig. 5. The illustration of Subcase 1.2 in the proof of Lemma 4.1.

Again by Eq. (1), we have 
. Let 
. By Fact 2.3, there is a perfect matching between 
 and 
. Thus there is a tree, say 
, that connects 
, 
 and 
 in H. Then, the following construction is an S-tree:

Let 
 and 
. By Eq. (1), it is clear that 
 and 
, respectively. As 
 and 
 are connected subgraphs of 
, there exist two trees 
 and 
 such that 
 connects vertices of U in 
 and 
 connects vertices of W in 
, respectively. Then, we can construct two S-trees as follows:

Obviously, all S-trees described above are internally disjoint (see Fig. 5). As a consequence, we obtain  internally disjoint S-trees in this case. Also, the case of 
 can be proved by a similar way, and hence we omit here.

Case 2. 
 are contained in two copies of 
. Without loss of generality, assume 
 and 
.

By the symmetry of 
, without loss of generality, assume 
. As 
, there are  internally disjoint paths between 
 and 
 in 
, which are denoted by 
 for  and assume 
. By Eq. (1), we have 
. Then we discuss the following subcases according to whether 
 is contained in 
 for some .

Subcase 2.1. 
 for any .

From Fact 2.3, there exists a perfect matching between 
 and 
, and let 
 be the neighbor of 
 in 
. Since 
 for any , it implies that 
 for any . By Lemma 2.6, there exists a -fan from 
 to 
 in 
, and let 
 for  be such internally disjoint 
-paths. Then, we can obtain  internally disjoint S-trees as follows:

From Fact 2.3, we let 
 be the neighbor of 
. Also, by Eq. (1), we have 
. Thus there exists a tree, say 
, that connects 
, 
 and 
 in 
. Then, the following construction is an S-tree:

Let 
 and 
. By Eq. (1), it is clear that 
 and 
, respectively. As 
 and 
 are connected subgraphs of 
, there exist two trees 
 and 
 such that 
 connects vertices of U in 
 and 
 connects vertices of W in 
, respectively. Then, we can construct two S-trees as follows:

Subcase 2.2. 
 for some .

Without loss of generality, assume 
 and 
 for . From Fact 2.3, there exists a perfect matching between 
 and 
, and let 
 be the neighbor of 
 for . Since 
 for , we may choose a vertex 
 such that it is different from 
 for any . By Lemma 2.6, there exists a -fan from 
 to 
 in 
. Let 
 be the 
-path and let 
 for  be the internally disjoint 
-paths in the fan. From Fact 2.3, we let 
 be the neighbor of w. Also, by Eq. (1), we have 
. Thus there exists a tree, say 
, that connects 
, 
 and 
 in 
. Then, we can obtain the following internally disjoint S-trees: 
 

In addition, we can construct two S-trees 
 and 
 which are the same as Subcase 2.1. Obviously, all S-trees described in Case 2 are internally disjoint. As a consequence, we obtain  internally disjoint S-trees in this case. □

In the rest of this paper, we consider the situation that two vertices of S are contained in two different copies of 
 in 
 and the other element is contained in 
, where  and . Without loss of generality, let 
, 
 and 
.

Lemma 4.2

Let 
 be an n-dimensional augmented cube for  and 
 be an arbitrary subset of 
. If 
, 
 for  and 
, then there are  internally disjoint S-trees in 
.

Proof

Without loss of generality, assume 
, 
 and according to the symmetry of 
, let 
.

For notational convenience, we use 
, 
, 
, 
 and 
 to denote these subgraphs. Also, we denote the two copies of 
 in 
 by 
 and 
. Similarly, we have 
 and 
 in 
, and 
 and 
 in 
. From Fact 2.2 and Fact 2.3, assume that there exist perfect matchings between 
 and 
, 
 and 
 for . By Eq. (1), we assume 
, 
, 
, 
, 
 and 
. By Lemma 2.7, 
. Thus there exist  internally disjoint paths between 
 and 
 in 
. Let 
 for  be such paths, and assume 
. Without loss of generality, assume 
 for  and 
. From Fact 2.3, there exists a perfect matching between A and C, and let 
 be the neighbor of 
 in C for . By Lemma 2.6, there exists a -fan from 
 to 
 in C, and let 
 for  be such internally disjoint 
-paths. Then, we can obtain  internally disjoint S-trees as follows:

Recall that 
. From Fact 2.3, let 
 be the neighbor of 
. Without loss of generality, assume 
. Since 
 for , there is a vertex 
 such that 
 is connected. Let R be a path connecting 
 and 
 in 
 (see Fig. 6). Then, the following construction is an S-tree:

Fig. 6
Download : Download high-res image (322KB)
Download : Download full-size image
Fig. 6. The illustration of Subcase 1.1 in the proof of Lemma 4.2.

By Eq. (1), without loss of generality, assume 
. To complete the proof, we consider 
 or 
 in the following two cases.

Case 1. 
.

Recall 
, 
 and 
. Let 
. By Fact 2.3, there is a perfect matching between 
 and 
, and there exist two perfect matchings between 
 and 
. Thus there is a tree, say 
, that connects 
, 
, 
 and w in H. Then, the following construction is an S-tree:

We now consider either 
 or 
.

Subcase 1.1. 
.

Since 
, there is a tree, say 
, that connects 
, 
 and 
 in 
. Thus the following is an S-tree:

Let 
, where 
, and by Eq. (1), we have 
. By Fact 2.3, there is a perfect matching between 
 and D. Thus there is a tree, say 
, that connects vertices of U in 
. Then, the following is an S-tree:

Let 
, where 
, and by Eq. (1), we have 
. By Fact 2.3, there is a perfect matching between 
 and E. Thus there is a tree, say 
, that connects vertices of W in 
. Then, the following is an S-tree:

Obviously, all S-trees described above are internally disjoint (see Fig. 6).

Subcase 1.2. 
.

Let 
, where 
 and 
. By Fact 2.3, there is a perfect matching between 
 and 
. Thus there is a tree, say 
, that connects vertices of U in 
. Then, the following is an S-tree:

Let 
, where 
, 
. By Eq. (1), we have 
. Denote the two copies of 
 in E by 
 and 
 (see Fig. 7). Note that there exist perfect matchings between 
 and 
, and between 
 and 
, respectively. Since 
, 
 and 
, we assume that 
 and 
. Then, there is a tree, say 
 that connects vertices of W in 
. Thus the following is an S-tree:

Fig. 7
Download : Download high-res image (334KB)
Download : Download full-size image
Fig. 7. The illustration of Subcase 1.2 in the proof of Lemma 4.2.

Let 
 be the neighbor of 
 in D. By Eq. (1), we have 
. Thus there is a tree, say 
, that connects 
, 
 and 
 in D. Then, the following is an S-tree:

Obviously, all S-trees described above are internally disjoint (see Fig. 7).

Case 2. 
.

By Fact 2.3, there is a perfect matching between 
 and 
. Since 
 and 
, there is a tree, say 
, that connects 
, 
 and 
 in 
. Then, the following construction is an S-tree:

We now consider either 
 or 
.

Subcase 2.1. 
.

In this case, three S-trees 
, 
 and 
 can be constructed by a similar way as Subcase 1.1 except for changing
 where 
 and 
 is a tree that connects vertices of U in 
. Obviously, all S-trees described above are internally disjoint.

Subcase 2.2. 
.

Let 
, where 
 and 
. Recall that 
. As 
 and 
 for , there is a vertex 
 such that 
 is connected. By Fact 2.3, there is a perfect matching between 
 and 
, and there exist two perfect matchings between 
 and 
. Thus there is a tree, say 
, that connects all vertices of  in 
. Then, the following is an S-tree:

Let 
, where 
, 
, and by Eq. (1), we have 
. Since there exists a perfect matching between 
 and E, we choose a vertex 
 such that its neighbor, denoted as 
, in E is different from 
. Then, there is a tree, say 
, that connects all vertices of 
 in 
. Thus, the following is an S-tree:

In addition, an S-tree 
 can be constructed by the same way as Subcase 1.2. Obviously, all S-trees described above are internally disjoint. As a consequence, we obtain  internally disjoint S-trees. □

Lemma 4.3

Let 
 be an n-dimensional augmented cube for  and 
 be an arbitrary subset of 
. If 
, 
 for  and 
, then there are  internally disjoint S-trees in 
.

Proof

Without loss of generality, assume 
 and 
. For notational convenience, we use 
, 
, 
, 
 and 
 to denote these subgraphs. Also, we denote the two copies of 
 in 
 by 
 and 
. Similarly, we have 
 and 
 in 
, and 
 and 
 in 
. From Fact 2.2 and Fact 2.3, without loss of generality, assume there exist perfect matchings between 
 and 
, 
 and 
 for . By Eq. (1), we assume 
, 
, 
, 
, 
 and 
. By Lemma 2.7, 
. Thus there exist  internally disjoint paths between 
 and 
 in 
. Let 
 for  be such paths, and assume 
. Without loss of generality, assume 
 for , 
 and 
. From Fact 2.3, there exists a perfect matching between A and C, and let 
 be the neighbor of 
 in C for .

Case 1. 
 or 
.

Assume 
. We first construct two S-trees 
 and 
. By Eq. (1), we have 
. Thus there is a tree, say 
, that connects 
, 
 and 
 in E. Then, 
 can be constructed as follows:

Let 
, where 
, 
, and by Eq. (1), we have 
. As 
 and 
 for , there is a vertex 
 such that 
 is connected. By Fact 2.3, there is a perfect matching between 
 and D. Thus there is a tree, say 
, that connects vertices of U in 
. Then, 
 can be constructed as follows:

By Eq. (1), we have 
 and 
. We now consider whether 
 and 
 lie on the paths 
 for  as follows.

Subcase 1.1. 
 for any .

Let 
 be a vertex of 
. By Lemma 2.6, there exists a -fan from 
 to 
 in 
, and let 
 be the 
-path and 
 for  be the internally disjoint 
-paths in the fan. Then, we can obtain  internally disjoint S-trees as follows:

We now consider either 
 or 
.

Subcase 1.1.1. 
.

In this case, let 
 (see Fig. 8). By Fact 2.3, there is a perfect matching between 
 and 
. Let 
 be the neighbor of u in 
. Since 
, there is a tree, say 
, that connects 
, 
 and 
. Thus the following is an S-tree:

Fig. 8
Download : Download high-res image (357KB)
Download : Download full-size image
Fig. 8. The illustration of Subcase 1.1.1 in the proof of Lemma 4.3.

Recall that 
, 
, 
 and 
. By Fact 2.3, there is a perfect matching between 
 and 
. So we let R be a path connecting 
 and w in 
. Let 
, where 
 and 
 be the neighbors of w and 
 in 
, respectively (i.e., without loss of generality, we assume that there is a perfect matching between 
 and 
). Then, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Obviously, all S-trees described above are internally disjoint (see Fig. 8).

Subcase 1.1.2. 
.

In this case, let 
 and 
 be the neighbor of u. By Fact 2.3, there is a perfect matching between 
 and 
. Since 
, there is a tree, say 
, that connects 
, 
 and 
. Thus the following is an S-tree:

Let 
, where 
, 
, and 
 be the neighbor of 
. By Fact 2.3, there is a perfect matching between 
 and 
. Then, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Obviously, all S-trees described above are internally disjoint.

Subcase 1.2. 
 or 
 for some .

We consider 
 and without loss of generality, assume 
. Note that the case of 
 for some  can be proved by a similar way, and hence we omit here. By Lemma 2.6, there exists a -fan from 
 to 
 in C, and let 
 for  be such internally disjoint 
-paths. Then, we can obtain  internally disjoint S-trees as follows: 
 

We now consider either 
 or 
.

Subcase 1.2.1. 
.

As 
 is connected, there is a tree, say 
, that connects 
 and 
 in 
. Thus the following is an S-tree:

Let 
, where 
, 
, and 
. As 
 is connected, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Subcase 1.2.2. 
.

As 
 is connected, there is a tree, say 
, that connects 
 and 
 in 
. Thus the following is an S-tree:

Let 
, where 
, 
, and 
. As 
 is connected, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Obviously, all S-trees described above are internally disjoint. Also, the case of 
 can be proved by a similar way, and hence we omit here.

Case 2. 
 or 
.

Assume 
. Let 
 be a vertex different from 
. By Lemma 2.6, there exists a -fan from 
 to 
 in 
, and let 
 be the 
-path and 
 for  be the internally disjoint 
-paths in the fan. Then, we can obtain  internally disjoint S-trees as follows:

Let 
 be a subset of 
, where 
 is the neighbor of u. Let 
 such that 
 is connected. Then there is a tree, say 
, that connects vertices of U in 
. Thus the following is an S-tree:

Also, by Eq. (1), we have 
. Thus there is a tree, say 
, that connects 
, 
 and 
 in E. Then, the following is an S-tree:

We now consider the following four subcases.

Subcase 2.1. 
.

Since 
, there is a tree, say 
, that connects 
, 
 and 
 in 
. Thus the following is an S-tree:

Let 
, where 
, 
 and 
. As 
 is connected, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Subcase 2.2. 
 and 
.

Let 
, where 
 and 
. As 
 is connected, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Let 
, where 
 and 
. As 
 is connected, there is a tree, say 
, that connects vertices of 
 in 
. Thus the following is an S-tree:

Subcase 2.3. 
 and 
.

Let 
, where 
 and 
. As 
 is connected, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Let 
, where 
 and 
. As 
 is connected, there is a tree, say 
, that connects vertices of 
 in 
. Thus the following is an S-tree:

Subcase 2.4. 
.

Since 
, there is a tree, say 
, that connects 
, 
 and 
 in 
. Thus the following is an S-tree:

Let 
, where 
, 
 and 
. As 
 is connected, there is a tree, say 
, that connects vertices of W in 
. Thus the following is an S-tree:

Obviously, all S-trees described in each of the above cases are internally disjoint. As a consequence, we obtain  internally disjoint S-trees. Also, the case of 
 can be proved by a similar way, and hence we omit here. □

Theorem 4.4

Let 
 be an n-dimensional augmented cube. Then 
 for .

Proof

As 
 is -regular, by Lemma 3.1, 
. To complete the proof, we need to show that 
 for . Let 
 be an arbitrary subset of 
. By the symmetry of 
, the following cases are considered.

Case 1. S is contained in one copy of 
 in 
. Without loss of generality, assume 
. By Lemma 3.5, there exist  internally disjoint S-trees in 
 for  and the result follows.

Case 2. S is contained in two copies of 
 in 
. Without loss of generality, assume 
 and 
. From Lemma 4.1, Lemma 4.3, there exist  internally disjoint S-trees in 
 for  and the result follows. □

5. Conclusion
The generalized k-connectivity as a generalization of traditional connectivity is a fact of some significance for measuring the reliability and fault tolerance of networks. In this paper, through packing internally disjoint Steiner trees, we acquire the exact value of 
-connectivity of the n-dimensional augmented cube. At present, although the 
-connectivity of some networks has been ascertained, the generalized k-connectivity with  of most of the networks is still unknown. In the future, we would like to explore the generalized k-connectivity of 
 for , which would be interesting and challenging.

CRediT authorship contribution statement
Chao Wei: Conceptualization, Methodology, Validation, Writing-Original draft preparation. Rong-Xia Hao: Supervision, Validation, Writing-Reviewing and Editing. Jou-Ming Chang: Validation, Writing-Reviewing and Editing.