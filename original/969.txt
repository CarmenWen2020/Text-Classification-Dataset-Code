Recent advances in intelligent surveillance systems have enabled a new era of smart monitoring in a wide range of applications from health monitoring to homeland security. However, this boom in data gathering, analyzing and sharing brings in also significant privacy concerns. We propose a Compressive Sensing (CS) based data encryption that is capable of both obfuscating selected sensitive parts of documents and compressively sampling, hence encrypting both sensitive and non-sensitive parts of the document. The scheme uses a data hiding technique on CS-encrypted signal to preserve the one-time use obfuscation matrix. The proposed privacy-preserving approach offers a low-cost multi-tier encryption system that provides different levels of reconstruction quality for different classes of users, e.g., semi-authorized, full-authorized. As a case study, we develop a secure video surveillance system and analyze its performance.

SECTION I.Introduction
Many emergent smart surveillance applications (i.e., buildings, infrastructure, stores, ambient-assisted living, public areas) necessitate time-continuous data gathering and processing. Upcoming 5G and IoT technologies will enable continuous data collection and processing for persistent monitoring [1]. For example, an intelligent building system equipped with monitoring sensors such as CO2 meters, thermometers, cameras or other types of IoT devices will be instrumental in effectively automating tasks of heating, ventilation, and conditioning (HVAC) systems, or in improving the fault and hazard detection performance [2]. Another case in point is an intelligent network of cameras for continuous site surveillance or a health monitoring system [3], which gathers users’ bio-signals along with video/speech data to be processed remotely. These applications and their variants that collect data via sensors or edge devices bear the concern of the privacy of people and possibly of sites. In fact, the European General Data Protection Regulation (GDPR) legislation [4] has specifically addressed these privacy concerns in data collection and processing.

Currently, there exist a plethora of privacy-preserving technologies that vary in the data type and in the application scenario. Even the definition of privacy is up to change for different application areas and use cases, depending on whether it is signal processing, a database system, secure communication, etc., [5]. Under privacy concern, documents are considered to consist of private, i.e., sensitive parts, those parts that could potentially expose compromising information to unauthorized users, and of public, i.e., non-sensitive parts. Privacy-preserving data processing then aims to encrypt the private parts of a document without deteriorating its public parts. Recent comprehensive surveys provide useful guidelines in privacy-preserving data mining [6], [7], signal processing [8], [9], and privacy metrics [5].

In principle, a naive application of strong cryptography methods such as AES [10] or RSA [11] would provide a high degree of security, in addition to privacy. However first, these encryption methods are relatively costly; but more importantly, it is neither useful nor necessary to encrypt the whole signal in real-time multimedia applications such as in video [12], image, health [13] monitoring systems or other types of IoT applications. Only the selected parts of the multimedia document deemed to carry private information need to be protected; this then gives rise to a two-tier approach. More generally in a multi-tiered approach, different parts of the document can be privacy protected at differential levels, the most strongly protected parts accessible by the highest authorization level, and so forth. We can also state the three desiderata of privacy-protection algorithms: a) The technique should be able to secure the privacy of selected sensitive portions of the data; e.g., for face hiding, it should be stronger than any automatic face recognition algorithm; b) The method should not degrade the non-sensitive parts of the documents; c) It should be able to reverse the sensitive part encryption (for authorized users) in good quality. A concomitant desideratum is that the computation cost of the data encryption should be reasonably low.

Although Compressive Sensing (CS) [14] is an alternative data acquisition strategy to conventional Nyquist/Shannon based technique, it also provides encryption with a reasonable security level via its randomized sensing mechanism. In consequence, using CS setup alone or with another lightweight encryption shell applied on top of it has recently been a popular approach for multimedia applications [15].

In this work, we pursue the approach of compressive sensing to accomplish both compression and cryptographic security on the whole data, and data hiding technology [16], [17] to hide and then recover the masked-out private parts of the document. The novel method achieves privacy protection by obfuscating the sensitive parts of the document while the CS-encryption is applied to the whole document, i.e., the combined public and private parts. We assume that the document has been pre-processed and segmented into its sensitive and non-sensitive parts. We use terms de-identification and anonymization interchangeably, in the sense of rendering unintelligible the privacy bearing segments of a document. Although our method is applicable to any document type, images, video, audio, etc., with appropriate modifications, in the sequel we will consider images as an application case.

Our scheme provides a two-tiered privacy, in which the semi-authorized user, i.e., the entity with lower authorization level can decode and view only the non-sensitive parts of the image, while the fully-authorized user decodes and sees the entire image. The semi-authorized one with only key A (CS-Encryption matrix) is able to recover images whose sensitive parts remain obfuscated after decoding whereas the fully authorized person with keys A and B (the latter being watermark embedding matrix) is able to recover the whole image. In both cases, the image quality is stipulated to remain close to the original quality. The significant merits of our proposed method are first to enable a low-cost, two-level encryption and second to provide reversible anonymization for the selected authorized users. Although the experiments are run only on image data, our method is general enough to be applied to any data involving privacy concerns, such as to videos as detailed in Section VI, or to bio-signals. In this work, we select face de-identification problem [18], [19] as a case study, within the context of a privacy-preserving image/video monitoring system.

The privacy protection concern in image/video has been addressed in a plethora of papers in the last decades. In summary, the technical solutions can be discussed in three groups: a) automatic blurring of faces, context-dependent blurring, e.g., bystanders only; b) blacking out of faces with random patterns, and recently; c) anonymous face substitutions or iterative regeneration schemes. Our method is in line with the noise pattern overlay methods in the literature. However, we differ from these methods in two respects: i) while we are able to fully remove the obfuscating noise pattern, we provide multi-tier differential protection; ii) we use compressive sensing for data reduction and cryptographic security, and watermark the compressed signal with the data hiding pattern).

A privacy-preserving method to which our method has some resemblance was recently described in [20]. In the method of [20], the images are first processed through a parallel group of trained auto-encoders, each generating its own sufficiently diversified sparse code. They obfuscate the sparse code by adding random noise with statistics similar to sparse code statistics to coefficients to a group of coefficients outside the sparse code support set. The support set is predefined or shared via a secret channel to the trusted user. Only the trusted user possesses the key to recover the support set of the sparse code coefficients, and thus is able to decode the sensitive image (the face). Codes from multiple auto-encoders are used to successively refine the results, i.e., incrementally improve reconstructed image quality. In contrast, our method is not face specific, does not need to find sparse codes in the encoding part, does hence not require a separate secret channel to share the obfuscation key. In addition, data reduction via CS-compression is a byproduct of our scheme.

A preliminary version of this work was presented at [21]. This early version had briefly introduced the methodology and presented some test results on a token dataset (6 faces in a controlled laboratory environment). In this article, we provide a theoretical worst-case analysis on the watermark guarantee conditions (Lemma 1, Theorem 4). We have extended the paper by incorporating a discussion on the design of alternative obfuscating matrices [21] as well as on the alternative designs of the watermark embedding matrix (see Section IV-E). Simulation experiments are run on a realistic public dataset with a much bigger size (a subset of YouTube Faces Database [22]) containing 100 classes (videos of 100 identities). We have also briefly described two extensions of the proposed method: 1. Its adaptation to video signals, beyond the simple frame-by-frame privacy processing; 2. A three-tiered privacy protection in images. In the detailed performance evaluation, we illustrate the reconstruction accuracy of masked regions as a function of watermark embedding power and the choice of obfuscating masks, both being user-defined parameters. Recognition accuracies with original faces, with de-identified faces, and with faces reverse de-identified via recovered watermark are given. The result of a test against an adversary with a strong computational capability and with access to the full labeled training set is also reported.

The rest of the paper is organized as follows. The notation is provided in Section II. We give a brief overview of compressive sensing and its usage in encryption systems in Section III. We emphasize the compressive sensing properties that we have exploited in our proposed scheme. In Section IV, the proposed two-tier privacy-preserving system is presented in detail. Section V introduces a case study of the proposed method in video monitoring and gives the results of the extensive simulation studies. Finally, conclusions are drawn in Section VII.

SECTION II.Notations
In this work, the ℓp norm of a vector x∈RN is given as ∥x∥p=(∑Ni=1|xi|p)1/p for p≥1 . We also define the ℓ0 -norm of the vector x∈RN as ∥x∥0=limp→0∑Ni=1|xi|p=#{l:xl≠0} . The exactly (or strictly) k -sparse signal in some appropriate domain is the signal, x∈RN with ∥x∥0≤k . On the other hand, the approximately k -sparse signal (or compressible) is a signal x with ∥x−x˘∥2≤κ , where κ is a small constant and x˘ is obtained via zero-outing the elements of x except the ones with k -largest magnitude. For convenience, we show in Table I the list of frequently used symbols, the terminology used in paper and their synonymous definitions in the cryptography literature.

TABLE I From Left to Right: a) Symbols of the Frequently Used Variables in the Article. b) Denotations of These Symbols. c) The Corresponding Cryptographic Terminology, If Applicable. d) The Conditions the Variables Must Satisfy for the Encryption Scheme to Work Properly

SECTION III.Preliminaries and Prior Art
Our interest in compressive sensing is twofold: to compress the signal if it is already sampled or to sample analog signals directly at rates below the Nyquist-Shannon bound and to exploit the inherent cryptographic capability of compressive sensing.

A. Compressive Sensing
Compressive sensing (CS) theory has significantly impacted the field of signal processing since its inception in 2005 [14]. According to the CS theory, a signal can be sampled using far fewer measurements than the traditional Nyquist-Shannon acquisition rate, provided it is sparse or compressible in some proper domain. CS-based MRI imaging [23], radar monitoring systems [24], [25], and ECG measurements in a health monitoring system [13] are some of its success stories. It is also seen as a potential solution for hardware/software design in the applications requiring very high sampling frequencies such as wideband spectrum sensing [26] and ultra-wideband communication schemes [27]. In fact, CS is expected to play an important role in the next-generation communications systems such as 5G [28].

Let us consider the linear mapping of a discrete signal s∈RN as
y=As,(1)
View Sourcewhere A∈Rm×N is known as the measurement matrix with m<N . The minimum-energy solution for the underdetermined linear system of equations (1) is given by
mins∥s∥22 subject to As=y.(2)
View SourceThe solution of (2) is unique and has a closed form solution, s^=AT(AAT)−1y provided that rank (A)=m≤N which makes AAT invertible. The minimum achievable reconstruction error is ∥s−s^∥2=sT(I−AT(AAT)−1A)s , which shows that exact recovery is not possible since I≠AT(AAT)−1A when m<N . The CS theory addresses signals that are sparse in a proper domain, Φ∈RN×N , i.e., s=Φx with ∥x∥0≤k . Therefore, (1) can be re-formulated as follows,
y=As=AΦx=Hx,(3)
View Sourcewhere H=AΦ , and even if (3) has infinitely many solution we can look for the sparsest one,
minx∥x∥0 subject to Hx=y.(4)
View SourceEq. (4) is also known as sparse representation of y in H and it is unique, provided that the minimum number of linearly independent columns of H , as defined in [29], is greater than 2k . Thus for spark(H)≥2k , any two distinct k -sparse signals x′,x′′ can be uniquely recovered from their undersampled measurements y′ , y′′ if m≥2k . Put differently, one has the surprising result that, while it is not possible to recover s exactly using minimum norm decoder as in (2), exact recovery of the signal is possible in the sparsifying domain.

The nonconvex problem (4) with ℓ0 -quasi-norm can be relaxed to its closest convex form, ℓ1 as
minx∥x∥1 subject to x∈Υ(y),(5)
View Sourcewhere Υ(y)={x:Hx=y} , an optimization problem that is also known as Basis Pursuit [30]. The equivalence of ℓ0 –ℓ1 minimization problems is well investigated in the literature in terms of the properties of H . For instance, the Null Space Property (NSP) [31] not only satisfies the ℓ0 –ℓ1 equivalence but also comes very handy for the recovery performance analysis when x is not exactly k -sparse but only compressible. In the case we deal with approximately sparse signals or/and with a case where the measurements are contaminated by additive noise, the problem can be relaxed with Υ(y)={x:∥Hx−y∥2≤ϵ} , where ϵ is a small positive constant. Problem (5), with this new constraint, is known as Basis Pursuit Denoising (BPDN) [32]. The stability conditions of CS signal recovery techniques are also well understood: a stable solution, x^ , is expected to obey ∥x−x^∥2≤κ∥z∥ with a small constant, κ for additive noise z perturbation in the measurements, y=Hx+z .

When approximately sparse signals are measured under noise, a property stronger than NSP gives a stable recovery guarantee. This property is called Restricted Isometry Property (RIP), which is defined as follows:

Definition 1 (Restricted Isometry Property):
A matrix H∈Rm×N has RIP with order k , if there exist a smallest δk(H) that satisfies
(1−δk(H))∥x∥22≤∥Hx∥22≤(1+δk(H))∥x∥22(6)
View Sourcefor all k -sparse signal, x∈RN . The constant, δk(H) is called the Restricted Isometry Constant (RIC) of order k for matrix H .

The stability and ℓ0 –ℓ1 equivalence conditions w.r.t. RIC of a measurement matrix are thoroughly studied in the literature. The authors in [33] show that the ℓ0 –ℓ1 equivalence is achieved when δ2k(H)≤2–√−1 . Likewise, the stability of the ℓ1 minimization problem is investigated in Basis Pursuit Denoising [34] and Dantzig Selector [35]. In [34], it is shown that for Υ(y)={x:∥Hx−y∥2≤ϵ} and ∥z∥2≤ϵ , the solution of (5) satisfies
∥x−x^∥2≤C0ϵ,(7)
View Sourcewhere C0 depends on δ2k(H)<2–√−1 [33]. Notice that the recovery guarantee conditions of an arbitrary k -sparse signal enforce 2k -order RIC, δ2k(H) instead of δk(H) . The intuition behind this is simply that for noise-free measurements, the null space analysis indicates that spark(H)≥2k in order for H not to map any two arbitrary but distinct k− sparse signals x′ and x′′ to the same point, so that one always has Hx′≠Hx′′ . In this sense, RIP gives us a stronger guarantee that after mapping with a H , the distance between points x′,x′′ should be preserved at least as follows: (1−δ2k(H))∥x′−x′′∥22≤∥Hx′−Hx′′∥22 .

The good measurement matrices A that preserve the information in the sparse domain Φ , or alternatively AΦ=H are the ones that satisfy the RIP property. Certain random measurement matrices are known to satisfy this property, one popular such case being the matrix whose elements Ai,j are i.i.d. (independent identically distributed) and drawn from a Gaussian distribution, i.e.,
Ai,j∼N(0,1m)(8)
View Sourceand for m>k(log(N/k)) , and H inherits this property as well. We recall the following lemma that gives the stability condition of BPDN for measurements under additive white Gaussian noise (AWGN) contamination, since it will be handy in the sequel for the stability analysis of our encryption scheme.

Corollary 1 (Refined from Corrollary 1.1 of [35, p. 32]):
Let H∈Rm×N satisfy the RIP of order 2k with δ2k(H)<2–√−1 . Assume that measurements are corrupted by i.i.d. noise with elements zi drawn from N(0,1σ2) . Then, the error of the solution of (5) with Υ(y)={x:∥Hx−y∥2≤ϵ} is upper bounded by
∥x−x^∥2≤41+δ2k(H)−−−−−−−−−√1−(1+2–√)δ2k(H)(1+γ)m−−√σ(9)
View SourceRight-click on figure for MathML and additional features.with probability of at least 1−exp(−3m4γ2) where 0<γ<1 and ϵ=(1+γ)m−−√σ .

B. Compressive Sensing Based Encryption
Since in the CS setup, a signal is linearly sampled using random or pseudo-random measurement matrices, there exists an inherent capability to provide privacy and cryptographic protection [36], [37]. One advantage of CS-based encryption is that the linearity and the dimensionality reduction of the CS scheme result in low-cost operations. This could be a crucial advantage for data encryption carried out on the edge devices before data transmission to a cloud or a fusion center. In fact, it has been reported in several works [38], [39] that CS-based encryption has a much lower cost as compared to well-established encryption standards such as AES [10] or RSA [11].

The idea of formally using CS theory in the encryption system was first introduced in [40]. These authors have considered a sparse signal x as a plain-text input signal and encrypted it in cipher-text y . A Gaussian measurement matrix, as in (8), was used in the role of the CS-encryption matrix, i.e., y=Hx . They consider the Shannon perfect secrecy [41] definition as a metric of security. CS-based encryption can be viewed as a particular case of a multiplicative randomization technique, which is also a well-known privacy-preserving method. Using the definition of Shannon [41], CS-based encryption literature generally defines the perfect secrecy in the information-theoretical sense as follows:

Definition 2 (PerfectEncryptionSystem):
A perfect encryption system satisfies
Pr(x|y)=Pr(x)(10)
View SourceRight-click on figure for MathML and additional features.for any plain-text x and cipher-text y pair.

The authors of [40] conclude that even if the Shannon perfect secrecy is not satisfied with the CS-based encryption scheme since the CS-measurements preserve the energy of plain-text as H must satisfy the condition, they argue that CS-based encryption guarantees computational secrecy, i.e., an attacker with bounded time. In a later work, it is shown that the CS-based encryption with the Gaussian compression matrix used only once and re-drawn for each coding instance reveals only the energy of x [42]. Therefore, a Gaussian CS-encryption can be said to satisfy perfect secrecy if the cipher-text, y is normalized to some constant energy [36, Theorem 4]. Efforts on giving privacy guarantee conditions for both normalized and unnormalized energy cipher-texts for different measurement matrix schemes continue [43], [44] (using different security metrics). Similarly, instead of Shannon perfect secrecy, Wyner-sense perfect secrecy, or their extended version have also been used in security analysis for CS-based encryption schemes [45]. In the meantime, the robustness of the CS-based encryption against attacks is investigated in [46], [47]. In [46], the authors consider a brute force and structural attack where an adversary tries a grid search to estimate the CS-encryption matrix, A . This attack type can be considered as a known cipher-text attack under one-time usage (or one-time secret, OTS). They conclude that the computational complexity of such an attack makes this type of brute-force attack infeasible. The known plain-text type attack (KPA) under one time usage is addressed in [47], where the adversary captures the plaintext and ciphertext pair, (x,y) . Furthermore, the systems that use the same CS-encryption matrix many times are well known to be unsecure against this type of attacks [40], [42].

Due to interest in application scenarios of CS-based encryption, recently hybrid models that use both CS and conventional cipher systems have become popular. For instance, [48] applies a homomorphic cryptography function on top of the CS-encryption in a wireless sensor network system. In that sense, even in multi-usage of A , the system can be made resilient against KPA. In another vein, authors in [49] have proposed a multi-class encryption system where the CS-encryption matrix is partially corrupted differently for each user, i.e., A=A+ΔA , ΔA being the partial perturbation matrix. Their scheme suggests a framework to partially corrupt the CS-encryption matrix in order to obfuscate the sensitive region of the signal. However, it is not obvious how one transmits ΔA to the receiving party for reversible de-identification. One intuitive approach would be sending ΔA in a secure channel, which could be problematic, especially when the obfuscation pattern changes from usage to usage. Another solution is to use steganographic methods [16], [17], [50] to embed ΔA directly on CS measurements, that is, by encoding the obfuscation matrix directly on the cipher-text y . This is the path we follow and its details are introduced in the following section.

It is worth mentioning some recent work in the vein of compression (via sparsification) and encryption strategy. These methods extract a sparse code, x , of the private signal and then obfuscate it. In [51]–[52][53] a ternary representation of the signal is extracted from its sparse code. Then this code is ambiguated for the privacy-protected data-sharing applications, e.g., outsourced media search or person identification applications. In [54], the authors study the reconstruction capability of sparse ternary codes given the information loss during its encoding to a ternary code. A more recent work [20] ambiguates the sparse code directly by noise addition while enabling high-quality recovery with successive refinement user.

SECTION IV.Proposed Two-Tiered Encryption
The proposed method exploits techniques of compressive sampling, compressive encryption and data hiding [14], [16], [17], [36], [37], [55]–[56][57]. The advantage of the CS-based technique is, on one side, that exact recovery (in strictly sparse case) or stable recovery (in approximately sparse case) of the undersampled signal is possible, and on the other side, cryptographic security can be provided.

As shown in Fig. 1, one tier of the security consists of the generation of a random corruption mask (one-time usage) to obfuscate the sensitive parts of the image. This information is then embedded directly onto the CS-encrypted signal with a ternary watermark. This data hiding scheme provides reversibility and one-time usage of the random corruption mask, which is essential for secure de-identification. In the two-tiered protection scheme, the semi-authorized user will be able to recover only the non-sensitive part while a fully authorized user is allowed to recover the whole signal.


Fig. 1.
Proposed Reversible Privacy-Preserving Video Monitoring.

Show All

A. Problem Definition
In the following section, we first start by giving a formal definition of the two-tiered protection scheme in the spirit of Shannon secrecy. We will define the desiderata that the ideal triple consisting of two decoders (type A, B) and an encoder must satisfy. The problem becomes then formally the design of the three mappings that guarantee the recovery and secrecy properties. Following these definitions, we give our compressive sensing based solution to the problem with a discussion of the advantages of the proposed system.

The signals of interest, s∈RN is composed of a sensitive part and a non-sensitive part, denoted as an orthogonal sum
s=sn+ss,(11)
View SourceRight-click on figure for MathML and additional features.where ss is the sensitive part of the signal that can be obtained by zero-outing the coefficients of s which are not indexed by the corresponding index set Λp , and sn is the remaining non-sensitive part of the signal whose non-zero coefficients are indexed by Λcp . In what follows, we state the information-theoretic desiderata of the encoder and of the two decoders.

Definition 3:
Fully Secure and Stable Encoder-Decoders Triple: E∗(.) , D∗1(.) , D∗2(.)

We define the data coding operator (CS-Encryption) as E∗(.) that encrypts both the sensitive and non-sensitive parts,
E∗(s)=y,(12)
View SourceRight-click on figure for MathML and additional features.which is perfectly secure in that the coded signal, y does not reveal any information about s , i.e., Pr(s|y)=Pr(s) .

The first-tier decoder, D∗1(.) which stably recovers the non-sensitive part while not disclosing any information about the sensitive part is characterized as follows
∥∥(D∗1(E∗(s)+e))Λcp−sΛcp∥∥2≤κ∥e∥2(13)
View SourceRight-click on figure for MathML and additional features.and
Pr(sΛp|(D∗1(E∗(s)+e))Λp)≈Pr(sΛp),(14)
View SourceRight-click on figure for MathML and additional features.where e is a possible additive perturbation on y , i.e., y=E∗(s)+e .

Finally, the second-tier decoder that stably recovers both sensitive and non-sensitive parts is defined as
∥(D∗2(E∗(s)+e))−s∥2≤κ∥e∥2.(15)
View Source

The goal now is to find a practical coding operator, E(.) that jointly encrypts the sensitive and non-sensitive parts, which is as close as possible to the ideal operator E∗(.) .

B. Embedding Operator, E(.)
1) Obfuscation of the Sensitive Part Within CS-Encryption:
The proposed embedding operator obfuscates the sensitive part sΛp of the signal with the masking pattern ΔΛp , and then compressively samples the whole, consisting of the combination of the non-sensitive part sn and the masked sensitive part. The resulting intermediate code yd is given by:
yd=AΛcpsΛcp+AΛpΔΛpsΛp=Asn+AΛpΔΛpsΛp,(16)
View Sourcewhere sΛp and sΛcp are the extracted sensitive and non-sensitive parts of s , respectively. Here ΔΛp∈R|Λp|×|Λp| is the multiplicative obfuscation operator, i.e., a diagonal matrix consisting of random numbers and operates only on the (vectorized) sensitive part of the signal, ss . In other words, AΛp∈Rm×|Λp| and AΛcp∈Rm×(N−|Λp|) are the matrices consisting of the subsets of columns of A that are indexed by index sets Λp and Λcp , respectively. The encoding in yd can also be formulated as an additive mask:
yd=(A+M)s,(17)
View SourceRight-click on figure for MathML and additional features.where M∈Rm×N is the masking matrix with all zeros except the columns, MΛp∈Rm×|Λp| . The non-zero columns of the masking matrix form can be easily calculated from Eq. (16), i.e., MΛp=AΛpΔΛp−AΛp .

2) Data Hiding With Reversibility:
The obfuscation matrix ΔΛp and its location information (if necessary) are converted to a binary code to be secretly embedded on top of the compressively sensed (encrypted) signal yd . The conversion of this information to a binary code is necessary to achieve reversibility. Indeed, the exact recovery of the watermark sequence is possible [16], even in noisy case (In our scheme, noise corresponds to the masking in the sensitive part) provided the signal, s , is sparse. In a practical application, errors in a few bits on the recovered watermark is tolerable. We can define a procedure that spits out a watermark w′ corresponding to the binary representation of β(ΔΛp) ,
β(ΔΛp)→w′∈{−a,+a}T′,(18)
View Sourcewhere β(ΔΛp) is sufficient information to re-produce ΔΛp . An example of such an operator is given in Eqs. (35) – (36c). We also need an inverse operator of (18) in order to reproduce ΔΛp from watermark signal, i.e., w′ as w^→β−1ΔΛp^ . This operator is defined in Eqs. (25)– (28). Note that the length of the watermark, T′ , can change for each use case. To accommodate varying length watermarks one can fix a maximum watermark length, T , and extend the binary code w′ to a ternary one by stuffing with zeros the remaining T−T′ bits, i.e.,
β(ΔΛp)→w∈{−a,+a,0}T.(19)
View SourceData hiding limits [16], [17] determine the maximum steganographic capacity T one can expect to realize. Finally, a watermark embedding matrix (based on the second authorization key) B∈Rm×T,T<m is generated to linearly spread the watermark w directly onto the CS-encrypted signal, i.e., the cipher-text
yw=yd+Bw=(A+M)s+Bw.(20)
View SourceRight-click on figure for MathML and additional features.An embedding power constraint ∥Bw∥≤PE must be imposed in order to limit the degeneration of the recovered (non-sensitive) part of the image for semi-authorized users. The proposed embedding scheme, E(.) is given in Algorithm 1.

Algorithm 1 Proposed Embedding, E(.)
s , A , B ;

Determine the mask and the obfuscation matrix, ΔΛp

Generate the watermark: β(ΔΛp)→w∈{−a,+a,0}T

Joint CS-encryption and sensitive part obfuscation:yd=AΛcpsΛcp+AΛpΔΛpsΛp

Watermark Embedding: yw=yd+Bw

yw

C. Design of the Two-Tiered Decoders, D1(.) , D2(.)
Users (type A or B) receive the watermarked and encrypted signal, yw which can be re-cast as
yw=(A+M)s+Bw=Hx+Bw+n,(21)
View SourceRight-click on figure for MathML and additional features.where Hx=AΦx=As , and x∈RN is the sparse representation of s in Φ , and the masked part can be expressed as noise term, i.e., n=Ms=MΛpsΛp=(AΛpΔΛp−AΛp)sΛp . For the receiver of Type-A (the semi-authorized user A) only the key A is available. Since this user does not have the watermark encrypting key, B , (s)he will perceive the cyper-text as
yw=Hx+z,(22)
View Sourcewhere z behaves like an additive structural noise, i.e., z=Bw+n . In the light of the discussion in Section 1, the ℓ1 -minimization scheme in (5) can be used to recover x with Υ(y)={x:∥Hx−y∥2≤ϵ} . Afterwards, using the outcome of the ℓ1 minimization technique, x^ , one can obtain an estimate of the signal s with mask, s^ , straightforwardly via s^=Φx^ . The decoding algorithm for semi-authorized users, D1(.) is given in Algorithm 2.

Algorithm 2 Type a Decoding Algorithm, D1(.)
yw , A , \boldsymbol {\Phi } ;

Hyper-parameters: \epsilon

Estimate \hat {\mathbf {x}} : \tilde {\mathbf {x}}=\arg \min _{\mathbf {x}} \left \|{\mathbf {x} }\right \|_{1} ~{\mathrm {s.t.}}~ \left \|{\mathbf {y_{w}}-\mathbf {H} \mathbf {x}}\right \|_{2} \leq \epsilon

\hat {\mathbf {s}} = \boldsymbol {\Phi } \hat {\mathbf {x}} .

\hat {\mathbf {s}}

The receiver of Type-B, (the fully-authorized user B) will possess both CS-encryption key, \mathbf {A} , and watermark encryption key, \mathbf {B} . Type-B decoder must recover the whole signal \mathbf {s_{n}} + \mathbf {s_{s}} with as low a reconstruction error as possible. A three-stage recovery scheme is proposed, which is adapted from the recovery method proposed in [16]: First, a raw estimate of the sparse signal is obtained by disregarding the watermark part \mathbf {B}\mathbf {w} and using the \ell _{1} -minimization (5). Second, after having a preliminary estimation of \mathbf {x} , the watermark can be recovered from the over-determined system of linear equations by subtracting the estimated \mathbf {x} component from \mathbf {y_{w}} . In the final stage, the masking matrix, \mathbf {M} , can be produced via the recovered watermark, and an improved estimation is obtained using the \mathbf {A+M} as CS-encryption matrix and \ell _{1} -minimization. The details of the proposed scheme are as follows:

First, we produce a left annihilator matrix \mathbf {F} \in \mathbb {R}^{p \times m} of \mathbf {B} \in \mathbb {R}^{m \times T} so that \mathbf {F} \mathbf {B}=0 , where p=m-T . Left multiplying \mathbf {y_{w}} with \mathbf {F} we obtain, \begin{equation*} \tilde {\mathbf {y}} = \mathbf {F} \mathbf {y_{w}} = \mathbf {F} \left ({ \mathbf { H} \mathbf {x} +\mathbf {B} \mathbf {w} + \mathbf {n} }\right ) = \mathbf {F} \mathbf {H} \mathbf {x} + \mathbf {n'}, \tag{23}\end{equation*}
View Sourcewhere \mathbf {n'} = \mathbf {F} \mathbf {n} . Eq. (23) is also an underdetermined linear system of equations and can be solved via \ell _{1} -minimization as discussed in Section 1:\begin{equation*} \tilde {\mathbf {x}} = \arg \min \left \|{ \mathbf {x} }\right \|_{1} ~{\mathrm {s.t.}}~ \left \|{ \tilde {\mathbf {y}} - \mathbf {F}\mathbf {H}\mathbf {x} }\right \|_{2} \leq \epsilon . \tag{24}\end{equation*}
View SourceAfter inserting the pre-estimation of \mathbf {x} in \mathbf {H}\tilde {\mathbf {x}} and subtracting it from the \mathbf {y_{w}} , we get an over-determined system of linear equations: \mathbf {y_{w}} - \mathbf {H}\tilde {\mathbf {x}} = \mathbf {B} \mathbf {w} . Therefore, a raw estimation of the watermark can be obtained via \begin{equation*} \mathbf {w}'' = (\mathbf {B}^{T}\mathbf {B})^{-1} \mathbf {B}^{T} (\mathbf {y_{w}} - \mathbf {H} \tilde {\mathbf {x}}). \tag{25}\end{equation*}
View Source

The 0’s in the ternary watermark, \mathbf {w} can be extracted using simple thresholding if the length of active bits {T}' is unknown to user B:\begin{equation*} \tilde {\mathbf {w} } = \mathbf {w''} \odot \mathbf {1}_{\left |{ {w_{i}'' } }\right | >\eta }, \tag{26}\end{equation*}
View SourceRight-click on figure for MathML and additional features.where \eta is the threshold value \begin{align*}& 1, && \text {if $$\left |{ {w_{i}}'' }\right | >\eta $$,} \tag{27a}\\[-0.5em]{1_{\left |{ {w}_{i}'' }\right | >\eta , i} =}\smash {\left \{{\vphantom {\begin{matrix}.\\ .\\ .\\ .\\ \end{matrix}}}\right .}& \\[-0.5em]& 0 && \text {else}, \tag{27b}\end{align*}
View SourceRight-click on figure for MathML and additional features.and \odot denotes the element-wise multiplication operator between two vectors. In some practical applications such as person de-identification on video streams (details will be given in Section V), this step is simplified to \tilde {\mathbf {w} } = \mathbf {w''} \odot \mathbf {1}_{T' } , where \mathbf {1}_{T' } is T -length vector with the first {T}' elements 1’s and the rest is all zeros. The locations of the non-zero elements of \mathbf {1}_{T' } can be found using the information of {\Lambda _{p}} , inherent in the pre-estimated signal, \boldsymbol {\Phi } \tilde {\mathbf {x}} . Alternatively, a pre-allocated set from watermark, \mathbf {w} , can be dedicated to secretly carry information about {T}' . Hereafter, the finer estimation of \mathbf {w} can be easily found via\begin{equation*} \hat {w}_{i}=a \times sgn(\tilde {w}_{i}). \tag{28}\end{equation*}
View SourceRight-click on figure for MathML and additional features.Meanwhile the decoder can obtain the masking matrix, \mathbf {M} , i.e., \hat {\mathbf {M}} = \left ({ \mathbf {A_{\Lambda _{p}}} \hat {\boldsymbol{\Delta }_{\Lambda _{p}}} -\mathbf {A_{\Lambda _{p}}} }\right ) , where \hat {\mathbf {w}} \mathop{ \rightarrow }\limits^{\beta ^{-1}} \hat {\boldsymbol{\Delta }_{\Lambda _{p}}} . Finally, the sensitive and non-sensitive parts can be jointly recovered as:\begin{align*} \hat {\mathbf {x}} = \arg \min _{\mathbf {x}} \left \|{ \mathbf {x} }\right \|_{1} ~{\mathrm {s.t.}}~ \left \|{ (\mathbf {y}- \mathbf {B}\hat {\mathbf {w}})- (\mathbf {A} + \hat {\mathbf {M}}) \boldsymbol {\Phi } \mathbf {x} }\right \|_{2} \leq \epsilon . \\ {}\tag{29}\end{align*}
View SourceRight-click on figure for MathML and additional features.

D. Impact of Random Matrices on CS Encryption Performance
Generations of the CS-encryption matrix \mathbf {A} and of the watermark embedding matrix \mathbf {B} play an important role for the security and recovery robustness of the encryption scheme \mathcal {E}\left ({. }\right ), \mathcal {D}_{1} \left ({. }\right ), \mathcal {D}_{2} \left ({. }\right ) . The choice of random Gaussian matrices as in (8) for \mathbf {A} is convenient because they are known to be universally optimum in the sense that they satisfy both robustness and security conditions regardless of the sparsifying basis \boldsymbol{\Phi } . These matrices have been well investigated in the literature in terms of both recovery performance as in Corollary 1 and in terms of security metrics as discussed in Section III-B. In the sequel, we will consider \mathbf {A} as in (8) and \mathbf {B} consisting of orthonormal columns. For this scenario, we make a RIP based theoretical guarantee condition in watermark recovery for \mathcal {D}_{2} \left ({. }\right ) . The following lemma will be useful for the stability analysis of the decoder type-B:

Lemma 1:
Consider that the embedding, \mathcal {E}\left ({. }\right ) , given by Algorithm 1 produces an encrypted signal \mathbf {y_{w}} from \mathbf {s} with keys \mathbf {A} and \mathbf {B} , i.e., \mathcal {E} \left ({ \mathbf {s} }\right ) = \mathbf {y_{w}} =\mathbf {H}\mathbf {x} + \mathbf {B}\mathbf {w} + \mathbf {n} . Let \mathbf {s_{p}} \in \mathbb {R}^{ \left |{ \Lambda _{p} }\right | \times 1} denote the perturbation on the sensitive part of the signal such that \mathbf {s_{p}}=\mathbf {\Delta _{\Lambda _{p}}} \mathbf {s_{\Lambda _{p}}} -\mathbf {s_{\Lambda _{p}}} . Let also \mathbf {A} be an m \times N CS-encryption matrix with elements A_{i,j} drawn i.i.d. according to \mathcal {N}\left({0, \frac {1}{m}}\right) . Therefore the noise pattern \mathbf {n} in (21) is also a Gaussian random vector which has i.i.d. elements \begin{equation*} n_{i} \sim \mathcal {N}\left({0, \frac {\left \|{ \mathbf {s_{p}} }\right \|_{2}^{2}}{m}}\right).\tag{30}\end{equation*}
View SourceRight-click on figure for MathML and additional features.

Proof:
Let A_{i,\Lambda _{p}} be the the i^{th} row of \mathbf { A_{\Lambda _{p}}} . Then the elements of the vector, \mathbf { A_{\Lambda _{p}}} \mathbf {s_{p}} \in \mathbb {R}^{m \times 1} will be \mathbf {n}_{i}= \left \langle{ A_{i,\Lambda _{p}}, \mathbf {s_{p}} }\right \rangle independent Gaussian random variables with zero means, where \left \langle{ \mathbf {v_{1}}, \mathbf {v_{2}} }\right \rangle refers to inner product of vectors \mathbf {v_{1}}, \mathbf {v_{2}} . Therefore, it remains to prove that \mathbb {E}(n_{i}^{2}) = \frac {\left \|{ \mathbf {s_{p}} }\right \|_{2}^{2}}{m} , which can be straightforwardly obtained (using i.i.d. property) \begin{align*} \mathbb {E}\left ({ n_{i}^{2} }\right )=&\mathbb {E} \left ({ \left \langle{ A_{i,\Lambda _{p}}, \mathbf {s_{p}} }\right \rangle ^{2} }\right )= \mathbb {E} \left ({ \sum _{j \in \Lambda _{p} } A_{i,j}^{2} s_{p_{j}}^{2} }\right ) \\=&\sum _{j \in \Lambda _{p} } s_{p_{j}}^{2} \mathbb {E} \left ({ A_{i,j}^{2} }\right ) = \frac {1}{m} \sum _{j \in \Lambda _{p} } s_{p_{j}}^{2} = \frac {\left \|{ \mathbf {s_{p}} }\right \|_{2}^{2}}{m}.\tag{31}\end{align*}
View SourceRight-click on figure for MathML and additional features.

Having Lemma (1), and using Corollary 1 from the literature, we are ready to state the following theorem for watermark recovery probability of \mathcal {D}_{2} \left ({. }\right ) :

Theorem 4:
Consider the Gaussian CS-encryption matrix defined in Eq. (8). Let the watermark-encoding matrix \mathbf {B} have orthonormal columns. \delta _{2k}(\mathbf {H}) < \sqrt {2}-1 and \delta _{2k}(\mathbf {FH}) < \sqrt {2}-1 are given. Let also the annihilator matrix \mathbf {F} have orthogonal rows such that \left \|{ F_{i,:} }\right \|_{2} = \frac {m}{p} , where F_{i,:} denotes the i^{t}h row of \mathbf {F} . For a marked ciphertext, \mathbf {y_{w}} , for a particular setting of \epsilon = (1 + \gamma ) \sqrt {m} \sigma _{n} , Eq. (28) to be used in Algorithm 3 can recover w_{i} , the watermark bits, correctly \mathrm {Pr}(w_{i} = \hat {w_{i}} ) with probability at least \begin{align*}&\hspace {-.5pc} \left ({ 1- 2 \exp \left ({ \frac {-{a'}^{2} m}{8 \left \{{C^{2}(1+\gamma )^{2} }\right \} \left \|{ \mathbf {s_{p}} }\right \|^{2}} }\right ) }\right ) \\& \qquad \qquad \qquad \qquad \qquad \quad \times \left ({ 1- \exp \left ({ - \frac {3p}{4} \gamma ^{2} }\right ) }\right ),\tag{32}\end{align*}
View SourceRight-click on figure for MathML and additional features.where C =4 \frac {\sqrt {1 + \delta _{2k}(\mathbf {FH}) }}{1- (1 + \sqrt {2})\delta _{2k}(\mathbf {FH})} and {a}' = a - \eta , where a , \epsilon and \eta are hyper-parameters used in Algorithm 3.

Algorithm 3 Type B Decoding Algorithm, \mathcal {D}_{2} \left ({. }\right )
\mathbf {y_{w}} , \mathbf {A} , \mathbf {B} , \boldsymbol {\Phi } ;

Hyper-parameters: \epsilon , a , \eta

Apply \mathbf {F} to \mathbf {y_{w}} : \tilde {\mathbf {y}} = \mathbf {F}\mathbf {y_{w}}

Estimate \tilde {\mathbf {x}} : \tilde {\mathbf {x}}=\arg \min _{\mathbf {x}} \left \|{\mathbf {x} }\right \|_{1} ~{\mathrm {s.t.}}~ \left \|{\tilde {\mathbf {y}}-\mathbf {F}\mathbf {H}\mathbf {x}}\right \|_{2} \leq \epsilon

Estimate \mathbf {w}'' : \mathbf {w}''= (\mathbf {B}^{T}\mathbf {B})^{-1}\mathbf {B}^{T} (\mathbf {y_{w}}-\mathbf {H}\tilde {\mathbf {x}})

Thresholding \mathbf {w''} : \tilde {\mathbf {w} } = \mathbf {w''} \odot \mathbf {1}_{\left |{ {w_{i}'' } }\right | >\eta }

Forming \hat {\mathbf {w}} , where \hat {w}_{i}=a*sgn(\tilde {w}_{i})

Obtain \hat {\mathbf {M}} from \hat {\mathbf {w}} : i) \hat {\mathbf {w}} \mathop{ \rightarrow }\limits^{\beta ^{-1}} \hat {\boldsymbol{\Delta }_{\Lambda _{p}}} ii) \hat {\mathbf {M}} = \left ({ \mathbf {A_{\Lambda _{p}}} \hat {\boldsymbol{\Delta }_{\Lambda _{p}}} -\mathbf {A_{\Lambda _{p}}} }\right )

\hat {\mathbf {x}} = \arg \min _{\mathbf {x}} \left \|{ \mathbf {x} }\right \|_{1} ~{\mathrm {s.t.}}~ \left \|{ (\mathbf {y_{w}}- \mathbf {B}\hat {\mathbf {w}})- (\mathbf {A} +\hat {\mathbf {M}}) \boldsymbol{\Phi } \mathbf {x} }\right \|_{2} \leq \epsilon

\hat {\mathbf {s}} = \boldsymbol{\Phi } \hat {\mathbf {x}} .

Return: \hat {\mathbf {s}}

The proof of the theorem is given in Appendix VII. Theorem 4 establishes a bound on the watermark recovery probability as a function of the energy of perturbation on the sensitive part, RIC of the matrix \mathbf {FH} and watermark embedding strength a . This type of analysis based on RIP for the CS reconstruction algorithm as in Corollary 1 is known as theoretical guarantee conditions in worst-case scenario [58]. In general, for most of the practical applications, the algorithms perform much better than the performance bounds given by this kind of RIP based analysis. Nevertheless, it gives us an indication on how to design the related matrices for the encoder (such as \mathbf {A} , \mathbf {B} , \mathbf {H} ) and how to choose hyperparameters for the decoders. For example, choosing both \mathbf {F} and \mathbf {H} as Gaussian matrices may not be the right decision since the product of two random Gaussian matrices is a random matrix with coefficients drawn from a heavy-tailed distribution [59], which yields a \delta _{2k} \left ({ \mathbf {FH} }\right ) bigger than the Gaussian case.

E. Choice of the Encryption Matrix
Although random measurement matrices are optimal in the universal sense, they become computationally unwieldy for realistic signal and measurement dimensions, N and m , respectively. Recall that the iterative signal reconstruction algorithms require transposition and multiplication of the measurement matrix several times. To ease this computational burden, one can choose the rows of the measurement (CS-encryption) matrix randomly as a subset of an orthonormal and fast implementable transform base such as Fourier, DCT, or Hadamard. In other words, one can choose m rows randomly out of the N the rows of an orthonormal transform, \boldsymbol{\Theta } . These rows are indexed by \Omega \in \{1,2,3,\ldots ,N \} , i.e., with cardinality \left \vert{ \Omega }\right \vert =m . Thanks to these types of structural CS matrices, the computational cost of \mathbf {As} can be reduced significantly, i.e., down to O(N \log N) flops from O(m \times N ) flops for general random CS matrices. For a good choice of the measurement matrix, \mathbf {A} = \mathbf {\Theta _{\Omega }} in terms of a sparsifying basis \boldsymbol{\Phi } the rows of \mathbf {H} must be as flat (dense with nonzero elements) as possible. This can be satisfied when the rows of the measurement matrix \mathbf {A} are not sparse in the sparsifying basis \boldsymbol{\Phi } . This requirement can be quantified via the “mutual coherence” functional, i.e, \mu (\mathbf {H}) = \max _{i,j} \left |{ H_{i,j} }\right | . The performance limits of the \ell _{1} -decoding schemes such as (BPDN) case are given in terms of the functional \mu (\mathbf {H} ) . If one chooses randomly m rows of an orthonormal basis, \boldsymbol{\Theta } , indexed by \Omega \in \{1,2,3,\ldots ,N \} to build a measurement matrix \mathbf {A} , then a k -sparse signal can be exactly reconstructed as a solution of the \ell _{1} -decoding (BP) in (5), satisfying m \geq O( \mu ^{2} (\boldsymbol{\Theta }) \times k \times \log N), with an overwhelming probability [60].

We have chosen the Noiselet basis and the 2-D Wavelet basis to create a CS-encryption matrix and a sparsifying matrix, respectively. First, since these two transforms are known to be maximally incoherent with each other, and second because they have fast implementations. The indices of the chosen rows are randomly drawn and then permuted to increase the security level.

F. Design of the Annihilator Matrix F and Its Corresponding Watermark Embedding Matrix B
The watermark embedding matrix \mathbf {B} , which must be the right null space matrix of \mathbf {F} , can also be chosen from a fast transform. For example, one can constitute the columns of \mathbf {B} by choosing randomly a subset of the rows of DCT basis matrix, then, the rows of \mathbf {F} can be made up of the remaining rows of this DCT matrix.

Theorem 4 implies that the choice of matrices \mathbf {F} and \mathbf {H} influences the performance of the Algorithm 3. To investigate the impact of the choice of \mathbf {F} on \mathbf {F} \mathbf {H} , we compare the performance of the \ell _{1} minimization on the recovery of sparse signal \mathbf {x} from \mathbf {y}= \mathbf {FHx} , for three different settings: (i) First, with the random Gaussian measurement matrix \mathbf {FH} as in Lemma 1, Theorem 4. (ii) Second, for the case where \mathbf {F} is made up of a subset of the rows of DCT, \mathbf {A} is similarly made of a subset of Noiselet basis, sparsifying matrix \boldsymbol{\Phi } is chosen as Haar basis. Figure 2a shows the average mutual coherence values of \mathbf {FH} under different setups. Figure 2b shows the exact recovery probabilities at different measurement rates for the three different choices of \mathbf {F} . These results prove that even if the random measurement matrix is universally optimum in the sense that it guarantees the exact recovery for any sparsifying basis in the worst case scenario, in practice structured matrices obtained from orthonormal transforms can perform even better. We make use of the mutual coherence functional; the formula below is slightly different from that given in the previous subsection, though related to it: \mu \left ({ \mathbf {H} }\right ) = \max _{1\leq i \leq j \leq N} \left ({ \frac {\left |{ < \mathbf {h_{i}}, \mathbf {h_{j}}> }\right |}{ \left \|{ \mathbf {h_{i}} }\right \| \left \|{ \mathbf {h_{j}} }\right \|} }\right ) where \mathbf {h_{i}} is the i^{th} column of matrix \mathbf {H} .

Fig. 2. - Average mutual coherence of the matrix 
$\mathbf{FH} = \mathbf{FA}\boldsymbol{\Phi}$
 for different realizations of 
$\mathbf{A}$
 and calculated probability of exact recovery over 250 trials. An exactly sparse signal is synthetically produced for 
$N=256$
 and 
$k=30$
.
Fig. 2.
Average mutual coherence of the matrix \mathbf{FH} = \mathbf{FA}\boldsymbol{\Phi} for different realizations of \mathbf{A} and calculated probability of exact recovery over 250 trials. An exactly sparse signal is synthetically produced for N=256 and k=30 .

Show All

(iii) Alternatively, based on the arguments in [61], a randomization matrix can be applied to \mathbf {F} , i.e., \mathbf {F}' = \mathbf {F} \mathbf {R} , where \mathbf {R} is m \times m matrix of all zeros, except the diagonal terms that are drawn from the Bernoulli distribution. In [61], it is proven that the matrix \mathbf {F R H} with any orthonormal basis pair, \mathbf {F} , \mathbf {H} and randomization matrix \mathbf {R} with diagonal Bernoulli elements, approaches a Gaussian matrix. This is, in fact, illustrated in Figure 3 as quantile-quantile plots. Although, this does not result in any performance increase vis-à-vis mutual coherence and recovery performance as shown in Figure 2, this scheme will enhance the security level with only negligible additional computation in the recovery part. In Figure 3, the vertical axis denotes the level at which the empirical distribution falls below a Q level (e.g., 50%), while the horizontal axis indicates the quantiles for the standard Gaussian distribution. In all cases, the similarity between the distribution of the \mathbf {FH} sensing matrices and that of a Gaussian sensing matrix is obvious. Distribution of sensing matrices approaching that of a Gaussian is a desirable characteristic both for data hiding and CS-encryption purposes.

Fig. 3. - Q-Q plots of the elements of the measurement matrices in reduced dimension, 
$\mathbf{F} \mathbf{H}$
. Vertical: sample data quantiles; horizontal: standard normal quantiles. a) 
$\mathbf{F} \mathbf{H} = \textbf{Noiselet} \times\textbf{Wavelet}$
 b) 
$\mathbf{F} \mathbf{H} = \textbf{DCT} \times\textbf{Noiselet} \times\textbf{Wavelet}$
 c) 
$\mathbf{F} \mathbf{H} = \textbf{DCT} \times\textbf{Bernoulli} \times\textbf{Noiselet} \times\textbf{Wavelet}$
.
Fig. 3.
Q-Q plots of the elements of the measurement matrices in reduced dimension, \mathbf{F} \mathbf{H} . Vertical: sample data quantiles; horizontal: standard normal quantiles. a) \mathbf{F} \mathbf{H} = \textbf{Noiselet} \times\textbf{Wavelet} b) \mathbf{F} \mathbf{H} = \textbf{DCT} \times\textbf{Noiselet} \times\textbf{Wavelet} c) \mathbf{F} \mathbf{H} = \textbf{DCT} \times\textbf{Bernoulli} \times\textbf{Noiselet} \times\textbf{Wavelet} .

Show All

G. Design of the Obfuscation Matrix
The region of interest (e.g., a face) to be obfuscated is delineated by \Lambda _{p} . Obfuscation matrix is constituted with all zero entries except for the diagonal elements that are drawn from a Bernoulli distribution with probability p_{1} , i.e., \begin{equation*} \mathrm {Pr} \left ({ \left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right )_{i,i} = \pm 1 }\right ) = p_{1} \tag{33}\end{equation*}
View SourceRight-click on figure for MathML and additional features.The corresponding masking matrix \mathbf {M} will be \begin{align*}& 0, && \text {if $$ j \in \Lambda _{p}$$ and $$\left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right )_{i,i} =1$$ } \\ &\tag{34a}\\ {M_{i,j}=}\smash {\left \{{\vphantom {\begin{matrix}.\\ .\\ .\\ .\\ .\\ .\\ \end{matrix}}}\right .}& -2*A_{i,j}, && \text {if $$ j \in \Lambda _{p}$$ and $$\left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right )_{i,i} =-1$$ } \\ &\tag{34b}\\ & 0, && \text {$$j \notin \Lambda _{p}.$$ } \tag{34c}\end{align*}
View SourceRight-click on figure for MathML and additional features.Thus, the watermark generating procedure, will be \begin{equation*} \beta \left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right ) \rightarrow \left [{ \mathbf {w' } \mathbf {w'' } }\right ], \tag{35}\end{equation*}
View SourceRight-click on figure for MathML and additional features.where {T}'' bits \mathbf {w'} are allocated for the location information of the sensitive part, i.e., the starting and ending points of rectangular region of interest including faces in the image and \begin{align*}& a, && \text {if $$ i \leq \left |{ \Lambda _{p} }\right | $$ and $$\left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right )_{i,i} =1$$ } \tag{36a}\\ {w''_{i}=}\smash {\left \{{\vphantom {\begin{matrix}.\\ .\\ .\\ .\\ \end{matrix}}}\right .}& -a, && \text {if $$ i \leq \left |{ \Lambda _{p} }\right | $$ and $$\left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right )_{i,i} =-1$$ } \tag{36b}\\ & 0 && i > \left |{ \Lambda _{p} }\right | . \tag{36c}\end{align*}
View SourceRight-click on figure for MathML and additional features.Alternatively, having the intermediate estimation of image \tilde {\mathbf {s}} =\boldsymbol{\Phi } \tilde {\mathbf {x}} , the obfuscated region can be easily deduced and extracted, without the need of data hiding the location information in \mathbf {w'} .

H. More Secure Obfuscation With a Key for a Gaussian Vector
A semi-authorized user with only key-A may try to make a brute-force attack, by trying out all possible binary combinations of \left ({ \mathbf {\Delta _{\Lambda _{p}}}}\right )_{i,i} ’s to un-hide the obfuscated region. Even though the computational complexity of this attack is impractically high, i.e., 2^{\left |{\Lambda _{p} }\right |} , to make the privacy protection stronger one can make use a third key, g . This can be realized using a predefined vector \mathbf {g} \in \mathbb {R}^{N} , that is known only to fully-authorized user (type B), which is used to generate another obfuscation matrix as \begin{align*}& \left ({ g_{\Lambda _{p} } }\right )_{i} \text {with probability $$p_{1}$$,} \tag{37a}\\[-0.5em]{\left ({ \mathbf {\Delta _{\Lambda _{p}}} }\right )_{i,i}=}\smash {\left \{{\vphantom {\begin{matrix}.\\ .\\ .\\ .\\ \end{matrix}}}\right .}& \\[-0.5em]& - \left ({ g_{\Lambda _{p} } }\right )_{i} \text {with probability $$1-p_{1}$$,} \tag{37b}\end{align*}
View SourceRight-click on figure for MathML and additional features.where g_{j} \sim \mathcal {N} \left ({ \mu _{g},\sigma _{g}^{2} }\right ) .

SECTION V.A Case Study: Reversible Privacy-Preserving Video Monitoring
As a use case of the proposed two-tier image encryption algorithm, we investigate a video surveillance application where sensitive segments are to be concealed from semi-authorized users and revealed only to fully-authorized users. The sensitive parts of the image are the faces of people in the scene.

For face de-identification performance, we use two criteria: i) the Structural SIMilarity (SSIM) index [62] to measure the quality of the decoded and reconstructed image parts [63]; ii) face recognition accuracy via a machine learning algorithm as an indicator of privacy protection [64], [65]. For the semi-authorized user (with only key \mathbf {A} ), we aim to have both minimum classification accuracy in the concealed parts and also minimum degradation in the reconstructed non-sensitive parts. For the fully-authorized user, we want to achieve the highest classification accuracy and highest reconstruction accuracy when both \mathbf {A} and \mathbf {B} keys are used for decoding.

We also test an attack scenario where the malicious user (e.g., a semi-authorized one or an attacker who has stolen the CS-encryption key, \mathbf {A} ) has access to the labels of face images in the training set, so that (s)he can train a classifier to make inferences from de-identified images. The experimental results (Section V-C and Table VI) show that our one-time usage of random obfuscation matrix prevents an adversarial from making an inference (identify the faces) even if the labels of the training set are captured.

TABLE II List of the User Defined Parameters

TABLE III PSNR Values Over Sensitive and Non-Sensitive Regions of the Frames for Different Measurement Rates (MR) With a Binary Mask and a Binary Masked Gaussian for Masking, and for Embedding Strength \frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| } = 0.085 (Tables a and b); \frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| } = 0.15 (Tables c and d), Respectively

TABLE IV Structural Similarity Index (SSIM) Over Anonymized Regions for Different Measurement Rates (MR) Using Binary Mask and Binary Masked Gaussian for Masking for Embedding Strength \frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\|} = 0.085 in (a) and 0.15 in (b)

TABLE V Face Recognition Rates of User a and User B, the Semi-Authorized and Authorized Users, Respectively, for Different Measurement Rates (MR) Using a Binary Mask and a Binary Masked Gaussian for Masking, at \frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| } = 0.085 (Tables a and b), and at \frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| }=0.15 (Tables c and d), Respectively. The Recognition Accuracy on Original Frames is 77.37%
Table V- 
Face Recognition Rates of User a and User B, the Semi-Authorized and Authorized Users, Respectively, for Different Measurement Rates (MR) Using a Binary Mask and a Binary Masked Gaussian for Masking, at 
$\frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| } = 0.085$
 (Tables a and b), and at 
$\frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| }=0.15$
 (Tables c and d), Respectively. The Recognition Accuracy on Original Frames is 77.37%
TABLE VI Face Recognition Rates of the Semi-Authorized User When the Corrupted Images From User a are Added Into Search Space for Nearest-Neighbor. The Accuracies are Reported for Different Measurement Rates (MR) With \frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| } = 0.085 , and 0.15 Using a Binary Mask and a Binary Masked Gaussian for the Masking
Table VI- 
Face Recognition Rates of the Semi-Authorized User When the Corrupted Images From User a are Added Into Search Space for Nearest-Neighbor. The Accuracies are Reported for Different Measurement Rates (MR) With 
$\frac{ \left\|{ \mathrm{Bw} }\right\|}{ \left\|{ \mathrm{y_{d}} }\right\| } = 0.085$
, and 0.15 Using a Binary Mask and a Binary Masked Gaussian for the Masking
A. Experimental Setup
The experimental evaluation is conducted on the YouTube Faces Database [22] to demonstrate the viability of the proposed method in such applications as video surveillance, intelligent access control, and in general, analytics for intelligent buildings. Accordingly, we have randomly chosen 5000 frames from YouTube Faces Database corresponding to 100 identities (50 frames per identity). Recovery performances are reported using 3000 frames while non-overlapping 2000 frames are collected to build the training set for privacy preservation performance evaluations. The Matlab implementation of the experiments and additional demos can be downloaded from https://github.com/mehmetyamac/CS-Privacy-Protection. We use a randomly chosen subset of the rows of noiselet basis as the measurement matrix. The implementation of the real-valued “dragon” noiselet is borrowed from [66]. As the sparsifying matrix, we choose wavelet “Coiflet 2” and use WaveLab850 [67] wavelet toolbox.1 The columns of the encoding matrix \mathbf {B} were chosen from the random subset of the columns of m \times m DCT basis, and then were shuffled. Therefore, the rows of the annihilator matrix, \mathbf {F} has been picked from the remaining columns and shuffled (i.e., \mathbf {H} = \textbf {Noiselet} \times \textbf {Wavelet} and \mathbf {F} = \textbf {DCT} ). Moreover, Gradient Projection for Sparse Reconstruction (GPSR) [68] was used for \ell _{1} -minimization.

The various parameters taking place in the experiments are listed in Table II. For different watermark embedding power-to-signal ratio, \frac { \left \|{ \mathbf {Bw} }\right \|}{ \left \|{ \mathbf {y_{d}} }\right \| } , and compression (measurement) rates, the performance of the decoders is reported in Section V-B.

B. Recovery Performance of \mathcal{D}_{1}^{*} (. ) and \mathcal{D}_{2}^{*} (. )
Choice of the watermark amplitude, a or alternatively the watermark embedding power is the determining factor in the watermark recovery performance (recall Theorem 4). In other words, the embedding power-to-signal ratio, \frac { \left \|{ \mathbf {Bw} }\right \|}{ \left \|{ \mathbf {y_{d}} }\right \| } , forms the trade-off between the type A non-sensitive image recovery quality and type B sensitive image recovery quality. On the one hand, a should not be too small since the erroneous estimation of the watermark bits affects the recovery of w and \hat {\boldsymbol{\Delta }_{\Lambda _{p}}} , hence the quality of the reconstructed sensitive part. On the other hand, increasing a could impede the decompression performance compromising the overall,\mathbf {s_{s} + s_{ns}} signal recovery, because the embedded watermark \mathbf {Bw} acts as an additive noise in the decoder (Eq. (22)). This trade-off, recovery quality of sensitive regions (type B) and non-sensitive region for type A user, is observed in Figure 5. We have found empirically that good values of a are in the [0.085, 0.15] range, based on peak signal-to-noise ratios (PSNRs) and quality of recovered images.

Fig. 4. - Sample recovered frames for the semi-authorized (User A) and authorized (User B) (measurement rates 0.6, 0.7).
Fig. 4.
Sample recovered frames for the semi-authorized (User A) and authorized (User B) (measurement rates 0.6, 0.7).

Show All

Fig. 5. - Peak signal-to-noise ratios (PSNRs, dB) over recovered non-sensitive part (red curve), and sensitive part (blue curve) with the keys, respectively, of User A and User B. Measurement rate is fixed at 0.6.
Fig. 5.
Peak signal-to-noise ratios (PSNRs, dB) over recovered non-sensitive part (red curve), and sensitive part (blue curve) with the keys, respectively, of User A and User B. Measurement rate is fixed at 0.6.

Show All

In Table III, we show the recovery performance of type A and type B decoders for the concealed region, for the non-concealed region, and for the whole frame. Recovery qualities are reported for different compression rates (CS measurement rates: MR = m /N) and for two chosen values of \frac { \left \|{ \mathbf {Bw} }\right \|}{ \left \|{ \mathbf {y_{d}} }\right \| } , namely, 0.15 and 0.085. Based on the visual assessment of the sample frames in Figure 4 and on the reported PSNR values in Table III, we can say that User A’s reconstructed faces are unrecognizable, whereas their outside regions have adequate quality, albeit around 5 dB lower in PSNRs as compared to those of User B, especially at low MRs. For User B, the reconstruction quality of both the concealed regions and the whole frame are satisfactory; there is only small detail losses in the privacy-sensitive parts.

In Table IV, SSIM values for the concealed region of reconstructed images are reported. It can be seen that faces in recovered images with using only Key \mathbf {A} result in very low SSIM scores, making the unrecognizable, while their SSIM scores are very high for user type B, especially at MRs above 0.5.

C. Performance in Privacy Preservation
Privacy-preserving performance of the proposed method is evaluated by demonstrating its robustness against the state-of-art face recognition attacks. To this end, we employed a pre-trained Convolutional Neural Network (CNN) provided by the dlib library [69] to extract the facial features. Then, face recognition is performed as follows: We extract 128-dimensional embedded (CNN) face recognition features and build a database consisting of labeled faces for the query; then, perform a nearest-neighbor search and select the first nearest identity as the classification output. The experimental results are evaluated for two types of attacks.

1) Attack Type I: Known Plain-Text (Original Faces), Known Labels:
In this scenario, a malicious user with the stolen Key \mathbf {A} (or a malevolent type A user) may capture the training set with its labels to train a classifier to decipher the anonymized faces. The experiment designed to test the de-identification robustness against this type of attack is as follows: We construct a query database consisting of 2000 original clear frames (20 frames per identity). Then, we perform face recognition in the face regions that have been reconstructed with User A Key \mathbf {A} and with the two User B keys. The recognition accuracies are reported in Table V. The performance of User A is about 1%, which is like a random guessing score while accuracies for User B are very satisfactory, i.e., around 75% for high MRs. This is comparable to the recognition rate achieved when the same face recognition software is tested on the original images.

2) Attack Type II: Known Plain-Text (Original Faces), Known Anonymized and Their Labels:
The ability of the proposed method to withstand a more challenging case, the parrot attack [70], where the user with Key \mathbf {A} has captured both labeled clear images and their anonymized counterparts in the training set, is tested in the following experiment: The aforementioned query with NN-search is constructed in a way that each identity has 20 clean and 10 anonymized images with true labels. Face recognition algorithm is run over face regions in recovered images of type A. The results in Table VI reveal that the reconstructed faces for User A do not leak any useful information that can be exploited in a parrot attack since a different randomized corruption matrix was employed for each frame, i.e., the occurrence of the face with the same identity.

SECTION VI.Discussion
A. Privacy Protection in Video
We have so far tacitly assumed that privacy protection in video were to be realized in a frame-by-frame privacy processing mode. Thus, the sensitive part in each frame, e.g., face region was to be separately obfuscated and each such frame CS-encrypted via the \mathbf {B} , i.e., \mathbf {y_{w}} = (\mathbf {A} + \mathbf {M})\mathbf {s} + \mathbf {B}\mathbf {w} formulation. A simple extension to a multi-frame video case would be to vectorize groups of frames, and straightforwardly adapt the above methodology, where now \mathbf {s_{\Lambda _{p}}} and \mathbf { \Delta _{\Lambda _{p}}} denote the sensitive parts and masking patterns striding over the frames in the group. A more principled way to extend the scheme to multi-frame video must leverage a tensor based CS-encryption scheme [71]. The video is considered as a 3-D signal, \mathbf {\mathcal {S}} \in \mathbb {R}^{n_{1} \times n_{2}\times n_{3}} , which is a sequence of n_{3} consecutive n_{1} \times n_{2} images. Then, the CS-encryption matrices, \mathbf {A_{1}} \in \mathbb {R}^{m_{1} \times n_{1}}, \mathbf {A_{2}} \in \mathbb {R}^{m_{2} \times n_{2}}, \mathbf {A_{3}} \in \mathbb {R}^{m_{3} \times n_{3}} , can be applied over to \mathbf {\mathcal {S}} in order to obtain an encrypted and compressed tensor, i.e., \mathcal {Y} = \mathbf {\mathcal {S}} \times _{1} \mathbf {A_{1}} \times _{2} \mathbf {A_{2}} \times _{3} \mathbf {A_{3}} , where \mathbf {\mathcal {S}} \times _{i} \mathbf {A_{i}} is the i-mode product of tensor \mathbf {\mathcal {S}} and matrix \mathbf {A_{i}} . Let \mathbf {\mathcal {S}_{s}} be the sensitive part of the video that is obtained by zero-outing the coefficients of \mathbf {\mathcal {S}} and \mathbf {\mathcal {S}_{n}} is non-sensitive part of it. Similar to our matrix-vector notation, jointly CS-encrypted and anonymized tensor can be obtained via \mathbf {\mathcal {Y}_{d}} = \left ({ \mathbf {\mathcal {S}_{n}} + \mathbf {\mathcal {P}} \circ \mathbf {\mathcal {S}_{s}} }\right ) \times _{1} \mathbf {A_{1}} \times _{2} \mathbf {A_{2}} \times _{3} \mathbf {A_{3}} where \mathbf {\mathcal {P}} is the degradation tensor and ° is element-wise (Hadamard) product of two tensors. Then, the marked vector, \mathbf {y_{w}} can be easily obtained i.e., \mathbf {y_{w}} = {\text {vec}}~ ( \mathbf {\mathcal {Y}_{d}}) + \mathbf {B} \mathbf {w} . In the decoder part, a recovery algorithm with \mathcal {D}_{1} \left ({. }\right ) and \mathcal {D}_{2} \left ({. }\right ) similar to those in Algorithm 2 and Algorithm 3 can be used with replacing \ell _{1} based sparse vector recovery to a sparse tensor estimation method.

B. Multi-Tier Privacy Protection
It is possible to extend the proposed scheme to more than two-tiers by replicating the scheme outlined in Subsection IV-C and Figure 1. Recall that the obfuscation mask encoded as \mathbf {w} and embedded via an appropriate watermarking matrix \mathbf {B} resulted in the expression \mathbf {y_{w}} = (\mathbf {A} + \mathbf {M})\mathbf {s} + \mathbf {B}\mathbf {w} . Consider, for example, a three-tier scenario, where \mathbf {s_{s_{1}}} and \mathbf {s_{s_{2}}} are identified as sensitive parts, the higher indexed components having, for example, a higher privacy concern. The respective obfuscation matrices, \mathbf {M_{1}} and \mathbf {M_{2}} are encoded by their corresponding watermarks \mathbf {w_{1}} and \mathbf {w_{2}} . These watermark signals can be spread over \mathbf {y_{d}} , for example, as \mathbf {y_{w}} = (\mathbf {A} + \mathbf {M_{1}} +\mathbf {M_{2}} )\mathbf {s} + \mathbf {B_{1}}\mathbf {w_{1}} + \mathbf {B_{2}}\mathbf {w_{2}} or \mathbf {y_{w}} = (\mathbf {A} + \mathbf {M_{1}} +\mathbf {M_{2}} )\mathbf {s} + \left [{\mathbf {B_{1}} \mathbf {B_{2}} }\right ] \left [{ \mathbf {w_{1}}; \mathbf {w_{2}} }\right ] . If desired, the resulting signal \mathbf {y_{w}} can be finally subjected to another layer of light-weight encryption. The decoding of the three-tier scheme follows steps similar to Section IV-C and Algorithm 3.

In this work, we have considered privacy protection in images and video as an application case. However, the proposed signal acquisition, privacy-protection and encryption scheme can be applied to any multimedia data that can be differentiated into sensitive (private) and non-sensitive (public) parts. A case in point could be the monitoring data of a wireless sensor network [72]. In such a distributed sensing mechanism, one may want to hide data in the sensor readings that would lead to traffic analysis and flow tracing. Another example would be a CS-based telehealth system [13] where health personnel with different authorization would have differential access to parts of medical data and biosignals.

Furthermore, using CS-encryption together with other lightweight encryption techniques is a common practice in the literature. For instance, in [72], the authors used Pailier cryptosystem over \mathbf {y}= \mathbf {A} \mathbf {s} , to strengthen the security. Similar approaches can be applied over \mathbf {y_{w}} provided that invertibility of the applied encryption method.

SECTION VII.Conclusion
We have presented a two-tiered (potentially, multi-tiered) privacy-preserving scheme based on compressive sensing theory. The scheme accommodates two levels of users: A public user A (with only Key \mathbf {A} ), who can recover only the non-sensitive portions of the document, and private B, i.e., the fully-authorized user who (with keys A and B) who can recover the whole document. This prioritization is enabled via a data hiding technique such that the full user in possession of (Key \mathbf {B} ) can undo the obfuscation from within the CS-enciphered signal.

The watermark capacity of the system allows one-time usage of the obfuscation matrix, which in turn provides a higher level of security against any attacker, e.g., a curious semi-authorized user. In conclusion, the proposed approach satisfies all the criteria of privacy-protecting encoding, as itemized in the introduction section. Security can be corroborated by extra randomization as in Eq. (37a)–(37b). Extensive tests on a face anonymization use case revealed that the system is robust against cipher breaking attacks (i.e., face recognition) and that the image recovery quality is adequate for measurement rates m/N above 0.5. The experiments yielded guidelines for the selection of system parameters like compression rate and watermark embedding strength.

The proposed scheme with its experimentally proven merits of reversible anonymization provides a promising alternative of privacy-protecting encryption. An application scenario would be a video surveillance system where the collected real-time data must be transmitted and uploaded in a security monitoring center.