In reversible image secret sharing (RISS), the cover image can be recovered to some degree, and a share can be comprehensible rather than noise-like. Reversible cover images play an important role in law enforcement and medical diagnosis. The comprehensible share can not only reduce the suspicion of attackers but also improve the management efficiency of shares. In this paper, we first provide a formal definition of RISS. Then, we propose an RISS algorithm for a (k, n)-threshold based on the principle of the Chinese remainder theorem-based ISS (CRTISS). In the proposed RISS, the secret image is losslessly decoded by a modular operation, and the original cover image is recovered by a binarization operation, both of which are just simple operations. Theoretical analyses and experiments are provided to validate the proposed definition and algorithm.

SECTION I.Introduction
Image secret sharing (ISS) divides a secret image into multiple shares, also known as shadows or shadow images, which are then sent to participants. (k,n) -threshold ISS has a loss-tolerant property, i.e., the dealer can reconstruct the secret with at most n−k shares lost. Hence, ISS is applied to several applications, such as key management [1], digital watermarking [2], [3], identity authentication [4], [5], blockchain [6], access control [7], password transmission [8] and distributive storage for the cloud [9]–[10][11]. A digital image is a specific form of data, where each grayscale (binary) pixel is represented by 8 bits (1 bit); hence, ISS easily generates shares for secret sharing. The principles of conventional ISS technologies basically include visual secret sharing (VSS) [12], [13], also known as visual cryptographic scheme (VCS), the use of polynomials [14] and the Chinese remainder theorem (CRT) [15], [16].

In the (k,n) -threshold VCS [17], [18], the n shares are first printed onto transparent films and then sent to n participants. In VCS, the secret is reconstructed from k or more shares by stacking them and observing them using only the naked human eye without any cryptographic devices. If an attacker collects fewer than k shares, she cannot reconstruct the secret even with high computational power. However, the traditional VCS schemes have limitations of poor image quality, basic matrix design and pixel expansion, which have been further discussed and considered in follow-up studies [19]–[20][21][22].

To reconstruct a high-quality secret image, Shamir [14] introduced the first (k,n) -threshold polynomial-based secret sharing approach using a random (k−1) -degree polynomial to generate n shares, which were then sent to n participants. When k or more shares are collected, the secret can be reconstructed according to Lagrange interpolation. Following Shamir’s work, some studies [23]–[24][25] put forward several improved ISS schemes based on polynomials to obtain better properties. Polynomial-based ISS is advantageous because the reconstructed secret has both high quality and no pixel expansion. Unfortunately, ISS presents the drawback that either the recovered secret image is slightly distorted or that the recovery involves a high calculation of O(klog2 k) (when there is no distortion [15]).

Since the modular approach requires only O(k) operations [15] to reconstruct each secret pixel, Chinese remainder theorem-based ISS (CRTISS) achieves a lower calculation level and no distortion, which has been discussed in several other studies [26]–[27][28][29][30][31]. Chang et al. [31] proposed multi-image threshold ISS based on CRT and a polynomial. Their method may increase the computational complexity due to modular and Lagrange interpolation operations. Recently, Yan et al. [16] introduced (k,n) threshold CRTISS with lossless recovery, in which the explicit parameters were given according to the image characteristics.

However, in the above traditional ISS schemes, either the cover images cannot be reconstructed or the shares are noise-like. Such limitations make these schemes inapplicable to some situations.

On the one hand, due to legal considerations or the required high-precision nature, reversible cover images play an important role in law enforcement, medical diagnosis, experimental investigations into high-energy particle physics and remote sensing [32], [33], where a reversible (distortion-free or invertible) cover image in ISS means that the share can be reversed back to the original cover image to some degree after the secret image is decoded. More scenarios presenting need for reversible cover images are further discussed as follows.

Reversible cover images are useful for integrity authentication and media annotation. If we select a watermark image as the secret image and the cover images are artworks, we can utilize the watermark image to authenticate the artworks and to losslessly recover the artworks (cover images) because the details of the artworks are significant.

With the reversible cover image, both the secret image and cover images can be restored, which is useful for storage conversion and allows the cover images to function as erasable storage disks.

Losslessly reconstructing the cover image is important to share searching with image recognition since a searching method, such as a hash function, is generally sensitive to cover image content including even a slight distortion.

The reversible cover image will result in great convenience when the user may not be satisfied with the processed result in image processing. Taking image inpainting as an example, an object is first cropped out from the original cover image, and then the remaining area is inpainted to make it visually plausible. To make the operations reversible, we just need to reversibly encode the cropped object into the inpainted cover images to obtain the reversible cover image.

In addition, binary images are widely used in several applications, such as newspapers, captchas, passwords and program flowcharts. Thus, lossless reconstruction of binary cover images is also meaningful.

On the other hand, a noise-like share may raise the suspicion of attackers and reduce the management efficiency of shares. In contrast, a comprehensible share can not only reduce the suspicion of attackers but also improve the management efficiency of shares. More importantly, ISS with a comprehensible share can be applied to encrypted domain searching with image recognition, which is important in cloud computing and distributed storage. A comprehensible share is useful for homomorphic computing and searching for each secret image. In addition, a comprehensible share allows the user to search within the encrypted domain without uploading, downloading and decryption processing.

Reversible image secret sharing (RISS) can be applied to the above scenarios and exhibits features such as capability for some degree of recoverability of the cover image and a comprehensive rather than noise-like share. RISS links two or more images such that the cover image can be recovered to some degree after the secret image has been decoded, thus providing an additional method to address two or more images.

Chang et al. [34] presented ISS combining steganography and authentication based on CRT and a polynomial. In their scheme, the polynomial is used first to generate shares, and CRT is used to obtain authentication bits. Then, the shares and authentication bits are embedded into the cover images using steganography to output stego images. Thus, the scheme results in high visual quality of the stego images and a participant authentication ability. However, it has high computational complexity and pixel expansion and cannot losslessly recover the cover image.

Lin and Chan [35] in 2010 introduced a polynomial-based RISS scheme with high visual quality of shares and the recovered secret image following previous work [36]. Their method represents the secret image pixel values in the GF(P) finite field and embeds them into the first (k−1) -th coefficients of the constructed polynomial, in which their optical parameter is P=7 . The remainder of the cover image pixel values modulo 7 is embedded into the k -th coefficient of the polynomial. The shared values are added to the cover image pixel values minus the remainder to output n shares. Thus, the cover image pixel value is changed to within 7 to achieve high visual quality of the shares, as well as a reversible share. However, when P=7 , first, their method includes large pixel expansion when k is small, or less pixel expansion for the (k,n) threshold with a larger k value. Second, overflow may occur, and both the secret image pixel and the cover image pixel are lossy when the cover image pixel value is larger than 252. Third, their input cover images are the same, which may decrease the share management efficiency. Finally, slight information leakage may occur when continuous cover image pixel values are processed [37].

Ulutas et al. [38] provided an RISS approach for a grayscale level or dithered cover image based on the exploiting modification direction method. Their method transforms the secret image pixel values to base 17 and embeds them into the first (k−2) -th coefficients of the constructed polynomial. The last two coefficients of the polynomial are used to process the cover image pixels in base 9. Thus, high visual quality of the shares as well as a reversible share are achieved. However, their method is only applicable for (k,n) thresholds with k equal to or greater than 3, with pixel expansion occurring with respect to the secret image. Second, their input cover image is also the same single image. Finally, slight information leakage may occur when continuous cover image pixel values are processed [37].

In a word, traditional RISS approaches have the following limitations.

They are not applicable for a general (k,n) -threshold with any n≥k≥2 .

They input the same cover image, resulting in shares with similar content, which will decrease the share management efficiency.

Their shares have high pixel expansion, which will increase the necessary storage.

The original cover images and the secret image may not be losslessly reconstructed.

The cover recovery method requires more computation.

The motivations of this paper are to address the above issues and to propose one RISS approach with the above comprehensive features.

In this paper, we first provide a formal definition of RISS. In the definition, the conditions of RISS are presented, and the quality evaluation metrics of the recovered secret image and the reversed cover image are discussed. Then, we propose one RISS algorithm for a general (k,n) -threshold based on the principle of CRT and random elements in CRTISS. n different binary cover images are input in our method to output n different grayscale shares. The cover images’ pixels are fused in the process of encoding the secret image pixel based on CRT. In the recovery phase, the secret image is losslessly decoded by a modular operation, and the original cover image is losslessly recovered by only a binarization operation, both of which are simple operations. Theoretical analyses and experiments are provided to validate the proposed definition and algorithm.

The arrangement of the following sections is as follows. Section II introduces CRT. In Section III, we discuss the introduced RISS definition and our established RISS algorithm in detail. Section IV presents the security analysis and performance proof of our algorithm. Section V discusses the experimental results and comparisons, and Section VI presents the conclusion.

SECTION II.Preliminaries
In this section, we illustrate CRT for our work.

A set of linear congruence equations can be solved by CRT.

When a set of integers mi(i=1,2,⋯,k) is chosen to satisfy gcd(mi,mj)=1,i≠j , we have a unique solution y≡(a1M1M−11+a2M2M−12+⋯+akMkM−1k)(modM) , y∈[0,M−1] to Eq. (1).
y≡y≡y≡y≡a1(modm1)a2(modm2)⋯ak−1(modmk−1)ak(modmk)(1)
View Sourcewhere M=∏ki=1mi , Mi=$M$/$m_i $ and MiM−1i≡1(modmi) .

Proof:
Since gcd(mi,mj)=1,i≠j , gcd(mi,Mi)=1 , and we have M−1i subject to MiM−1i≡1(modmi) .

Considering a1M1M−11 , we have
aiMiM−1i≡aiMiM−1i≡ai(modmi)ai(modmj),i≠j(2)(3)
View Source

From Eqs. (2) and (3), y≡(a1M1M−11+a2M2M−12+⋯+akMkM−1k)(modM) , y∈[0,M−1] ) subject to Eq. (1).

Hence, on the one hand, y is one solution to Eq. (1).

On the other hand, if y1 and y2 are solutions to Eq. (1), we have y1−y2≡0(modmi) . Since gcd(mi,mj)=1,i≠j , M is exactly divided by y1−y2 . In addition, y is one solution to Eq. (1); therefore, the set of solutions to Eq. (1) is {zM+y|z∈Z} .

Thus, there is a unique solution y≡(a1M1M−11+a2M2M−12+⋯+akMkM−1k)(modM) , y∈[0,M−1] ) to Eq. (1).

SECTION III.Introduction of the RISS Definition and Algorithm
A. RISS Definition
Definition 1 (Reversible Image Secret Sharing):
When n cover images with a size of WC×HC , represented by C1,C2,⋯Cn , are input, ISS generates a secret image, denoted by S , with a size of WS×HS into n shares, which in turn are denoted by SC1,SC2,⋯SCn , with a size of WSC×HSC . We say that the ISS is an RISS for the (k,n) -threshold subject to the following:

security condition. The secret image cannot be reconstructed with fewer than k shares.

secret recovery condition. The secret image can be reconstructed with k or more shares.

comprehensible condition. SCi is similar to Ci for i=1,2,⋯n .

reversible condition. C′i is similar to Ci for i=1,2,⋯n .

where
C′i denotes the i -th recovered cover image from one or more shares for i=1,2,⋯n .

the similarity between the original image and the recovered image, i.e., image quality, can be evaluated by traditional metrics, such as the signal-to-noise ratio (PSNR) given in Eq. (5), weighted PSNR (WPSNR) [39], and contrast for VCS.

the embedding capacity, denoted by EC , can be used to evaluate the average embedding bit rate per share bit, as shown in Eq. (4).
EC=wS×(LS×WS×HS)+wc×(nC×LC×WC×HC)n×LSC×WSC×HSC(4)
View SourceRight-click on figure for MathML and additional features.where wx,nx,Lx,Wx , and Hx denote the weight factor, number, grayscale level, image weight, and image height of x , respectively. For a binary image, Lx=1 , whereas Lx=8 for a grayscale image. If a unique cover image is input, nC=1 , and hence, EC is decreased. wx is used to balance the weight between the secret image and cover image according to the application scenario.

If C′i=Ci for i=1,2,⋯n , we say that the RISS is fully RISS; otherwise, we say that the RISS is partially RISS.

The PSNR given in Eq. (5) between the primary image I and I′ is used to evaluate the image similarity, where the MSE given in Eq. (6) indicates the mean square error.
PSNR=MSE=10log10(2552MSE)dB1W×H∑i=1W∑j=1H[I′(i,j)−I(i,j)]2(5)(6)
View Source

The WPSNR given in Eq. (7) is used to evaluate the contrast sensitivity function (CSF) to weight the spatial frequency of the error image [39].
WPSNR=10log101∑i=1W∑j=1HF2(i,j)/WH−−−−−−−−−−−−−−−−−⎷(7)
View Sourcewhere F denotes the filtered result of the error image E=I′−I with coefficients FC , and

FC(ω,θ)=A(ω)B(ω,θ) ,

A(ω)=1.5e−a2ω22−e−2a2ω2,a=2,ω=2πf60 ,

f=u2+v2−−−−−−√,u=v=−20:20 ,

B(ω,θ)=1+eb(ω−ω0)cos42θ1+eb(ω−ω0),b=8,ω0=1.166,θ=tan−1vu .

We further explain and analyze Definition 1 as follows.

The security condition and secret recovery condition are derived from ISS for the (k,n) -threshold.

Ci , for i=1,2,⋯n , can be a natural image or an image generated by a secure technique.

In information hiding (IH), on the one hand, the stego image is naturally comprehensible (meaningful) so that reversible IH (RIH) does not need the comprehensible condition. However, ISS may generate a noise-like share. Thus, the comprehensible condition is considered in RISS; otherwise, the ISS belongs to multiple secret sharing. On the other hand, the stego image has high quality in IH so that RIH generally is fully RIH. However, ISS may output a comprehensible share with low quality; thus, partially RISS is considered in addition to fully RISS. In addition, we can better achieve RISS by means of ISS rather than IH.

To compute the image quality, some images are scaled to a proper size when the pixel expansion coefficient is not 1, and the binary image is converted to a grayscale image.

Traditional extended VCS, a.k.a . VCS with a comprehensible share [18], [40], belongs to partially RISS and has a low image quality according to Definition 1.

In Eq. (4), the numerator includes the total bits embedded in the output shares; the denominator indicates the total bits in all shares.

If larger pixel expansion occurs in some ISS, its EC is lower based on Eq. (4) due to the larger WSC×HSC .

wS=1 and wC=1 in this paper.

B. Our RISS Algorithm
The design idea of the proposed RISS algorithm is presented in Fig. 1. The detailed steps are presented in Algorithm 1, which takes an original secret image and n binary cover images, with a size of W×H , to output n shares SC1,SC2,⋯SCn , also with a size of W×H . The recovery steps are presented in Algorithm 2.


Fig. 1.
Design idea of the proposed reversible image secret sharing algorithm.

Show All

Algorithm 1 The Proposed (k,n) Threshold Reversible Image Secret Sharing
A secret image S with a size of W × H; threshold parameters (k,n) , where 2≤k≤n ; n binary cover images C1,C2,⋯Cn , with a size of W×H ; binarization processing threshold values THi0 and THi1 , corresponding to 0 and 1, respectively, for the i -th cover image, i=1,2,⋯n .

Shadow image SCi , which looks similar to Ci , and its corresponding private integer mi , i=1,2,⋯n .

Select a set of integers {128≤p<m1<m2⋯<mn≤256} that satisfy

gcd(mi,mj)=1,i≠j .

gcd(mi,p)=1 for i=1,2,⋯,n .

M>pN .

where M=∏ki=1mi , N=∏k−1i=1mn−i+1 and p is public among all the participants.
Calculate T=[⌊Mp−1⌋2] , which is public.

For each secret pixel position (w,h)∈{(w,h)|1≤w≤W,1≤h≤H} , repeat Steps 4-5.

Let x=S(w,h) .

If 0≤x<p , select a random integer A from [T+1,⌊Mp−1⌋] , and compute y=x+Ap ; otherwise, select a random integer A from [0,T ) and compute y=x-p+Ap .

Calculate ai≡y(modmi) , and set SCi(w,h)=ai for i=1,2,⋯,n .

If Q(SCi(w,h),THi0,THi1)=Ci(w,h) , i=1,2,⋯n , go to the next secret pixel position; otherwise, go to Step 4.

where
Q(SCi(w,h),THi0,THi1)={1ifSCi(w,h)≥THi1whenCi(w,h)=10ifSCi(w,h)<THi0whenCi(w,h)=0
View SourceRight-click on figure for MathML and additional features.

Output n grayscale shares SC1,SC2,⋯SCn .

Algorithm 2 The Recovery in the Proposed Reversible Image Secret Sharing for the (k,n) -Threshold.
Any t grayscale shares SCi1,SCi2,⋯SCit (t≥k) , their private modular integers mi1,mi2,⋯mit , p and T.

Reconstructed grayscale secret image S′ and recovered binary cover image C′ij for j=1,2,⋯,t , with a size of W × H.

Compute C′ij from SC′ij by the binarization processing operation with threshold (mij/2) for j=1,2,⋯,t .

For each secret pixel position (w,h)∈{(w,h)|1≤w≤W,1≤h≤H} , repeat Steps 3-4.

Set aij=SCij(w,h) for j=1,2,⋯,k . Solve Eq. (8) to obtain y by CRT.
y≡y≡y≡y≡ai1(modmi1)ai2(modmi2)⋯aik−1(modmik−1)aik(modmik)(8)
View Source

Calculate T∗=⌊yp⌋ .

If T∗≥T , set x≡y(modp) ; otherwise, let x=y(modp)+p .

Compute S′(w,h)=x .

Output reconstructed grayscale secret image S′ and recovered binary cover image C′ij for j=1,2,⋯,t , with a size of W × H

Regarding Algorithm 1, we make the following comments.

The binarization processing threshold values THi0 and THi1 are input by the dealer, i=1,2,⋯n , subject to NA≥8 , where NA denotes the number of available values of A satisfying Q(SCi(w,h),THi0,THi1)=Ci(w,h) for i=1,2,⋯n in Step 5 of Algorithm 1 and NA=T×∏i=1n(12×THi0mi+12×mi−THi1mi) , which will be further analyzed in Section IV and Section V-B.

Compared with fixed thresholds, THi0 and THi1 can introduce dynamics into Algorithm 1 and thus improve the feasibility and security of Algorithm 1.

The binarization processing threshold values THi0 and THi1 play important roles in the similarity between SCi and Ci under the secure condition for i=1,2,⋯n , where THi0≤(mi/2) , and THi1≥(mi/2) . In general, larger THi1 and smaller THi0 result in better image quality for SCi as well as a smaller range of A values, which will be further analyzed in Section V-B.

Step 1 intends to choose a set of integers to satisfy the CRT conditions. In general, p is as small as possible, in consideration of security, while mi is as large as possible to achieve a large range for the distribution of the pixel values in shares.

Step 4 aims to achieve the features of the (k,n) threshold and lossless recovery, which will be further analyzed in Section IV.

Since A is randomly selected in Step 4, when NA≥8 , we can search A to satisfy Q(SCi(w,h),THi0,THi1)=Ci(w,h) for i=1,2,⋯n in Step 5. In this manner, Ci can be losslessly recovered by binarization processing.

Regarding Algorithm 2, we note the following.

To recover cover image Cij for j=1,2,⋯,t , we can directly perform binarization on share SCij with threshold (mij/2) due to Step 5 in Algorithm 1.

Steps 3–4 can losslessly reconstruct S(w,h)=x by collecting any k or more shared pixels. Because T divides the interval [⌈Np⌉,⌊Mp−1⌋] into two parts corresponding to 0≤x<p or p≤x≤255 in Step 4 of Algorithm 1, x is losslessly reconstructed for arbitrary x∈[0,255] .

SECTION IV.Security Analysis and Performance Proof
Here, we present the security analysis and performance proof of the designed RISS by theoretically analyzing the security and other conditions in Definition 1.

In the following analyses, we consider that both the secret image and cover images are natural images and that they all are independent of each other; i.e., there is no correlation among them.

Without loss of generality, in the recovery phase, the collected t grayscale pixels are denoted by sci1,sci2,⋯scit , corresponding to SCi1(w,h),SCi2(w,h),⋯SCit(w,h) .

Lemma 1:
The secret image S cannot be reconstructed with k−1 or fewer shares.

Proof:
We assume that y is generated in Step 4 of Algorithm 1, where y∈[N,M−1] . When k−1 share pixels ai1=sci1,ai2=sci2,⋯aik−1=scik−1 are collected, according to CRT we can only obtain the solution y0 modulo N_{2} = \prod \nolimits _{j = 1}^{k - 1} {m_{i_{j} } } , where y_{0} \in [{0,N_{2}-1}] . The true y value range is different from the above y_{0} . In addition, N \ge N_{2} , N \le y < M and \gcd \left ({{N_{2},p} }\right) = 1 ; hence, in [N_{2},M-1] , y_{0}+b\prod \nolimits _{j = 1}^{k-1} {m_{i_{j}} } are also solutions to the collected k-1 equations in Eq. (8) for b = 1,2, \cdots,{m_{i_{k}} -1} . Therefore, we have {m_{i_{k}}} solutions in [{0,M-1}] rather than only one.

Lemma 2:
The secret image S can be losslessly reconstructed with k or more shares.

Proof:
Since x=S(w,h) in Step 4 of Algorithm 1, we will prove that any k or more share pixels enable the lossless reconstruction of x . To reconstruct x , we have to obtain y , since x \equiv y\left ({{\bmod \;p} }\right) or x \equiv y\left ({{\bmod \;p} }\right)+p . When we collect a_{i_{1}},a_{i_{2} }, \cdots a_{i_{k} } , based on CRT, we have a unique solution y modulo N_{1} = \prod \nolimits _{j = 1}^{k} {m_{i_{j} } } due to N_{1} \ge M . Finally, we have a unique y and hence x in Step 4 of Algorithm 2.

Lemma 3:
SC_{i} looks similar to C_{i} for i=1,2, \cdots n .

Proof:
The white (black) pixel of C_{i} corresponds to the grayscale value 255 (0) of C_{i} for i=1,2, \cdots n . According to Step 4 of Algorithm 1, we know 255-SC_{i} \left ({{w,h} }\right) \le TH_{i1} when C_{i} \left ({{w,h} }\right) is white; SC_{i} \left ({{w,h} }\right) -0 < TH_{i0} when C_{i} \left ({{w,h} }\right) is black. Therefore, SC_{i} looks similar to C_{i} for i=1,2, \cdots n .

Lemma 4:
C'_{i}=C_{i} for i=1,2, \cdots n .

Proof:
In Step 1 of Algorithm 2, the binarization threshold m_{i}/2 for i =1,2, \cdots,n is known. Since TH_{i0} \le (m_{i}/2) and TH_{i1} \ge (m_{i}/2) , based on Step 5 of Algorithm 1, we know that C'_{i}=C_{i} for i=1,2, \cdots n , where C'_{i} is obtained from SC'_{i} by the binarization processing operation with threshold m_{i}/2 .

Theorem 1:
The proposed scheme is a valid fully RISS approach.

Proof:
Based on the above Lemmas 1–4, according to Definition 1, the mentioned conditions are satisfied.

Proposition 1:
In the proposed Algorithm 1, {N_{A}} = T \times \prod \limits _{i = 1}^{n} {\left ({{\frac {1}{2} \times \frac {{T{H_{i0}}}}{m_{i}} + \frac {1}{2} \times \frac {{m_{i} - T{H_{i1}}}}{m_{i}}} }\right)} , and {N_{A}} \ge 8 for better performance.

Proof:
In general, A has T possible values in Step 4 of Algorithm 1. To satisfy Q\left ({{SC_{i} \left ({{w,h} }\right), TH_{i0}, TH_{i1} } }\right) = C_{i} \left ({{w,h} }\right) for i=1,2, \cdots n , N_{A} will decrease to T \times \prod \limits _{i = 1}^{n} {\left ({{\frac {1}{2} \times \frac {{T{H_{i0}}}}{m_{i}} + \frac {1}{2} \times \frac {{m_{i} - T{H_{i1}}}}{m_{i}}} }\right)} .

A larger N_{A} leads to enhanced security because the number of brute-force attacks is T^{N_{A}} . We require N_{A} \ge 2 for the lowest security since if N_{A} =1 , we have only one integer A repeatedly used in Step 4 of Algorithm 1, which is not secure.

{N_{A}} \ge 8 is suggested to achieve an acceptable time for searching available values of A in fully RISS, which is given in the experiments and further analyzed in section V-B.

Proposition 2:
The embedding capacity of the proposed Algorithm 1 is \frac {8 + n }{8n} .

Proof:
Since in this paper, w_{S}=1 , w_{C}=1 , n_{C}=n , L_{S}=8, L_{C}=1 , and we have no pixel expansion, the result is obtained.

SECTION V.Experimental Results and Discussions
In this section, experiments are presented to prove the effectiveness of our RISS. Then, some discussions regarding our parameters are given. Finally, comparisons with related methods will be demonstrated in terms of illustrations and features to indicate the advantages of our scheme.

A. Image Illustration
In the following experiments, we set TH_{i0} = (m_{i}/2 - TH) and TH_{i1} = (m_{i}/2 + TH) for the i -th cover image, i=1,2, \cdots n . The experimental binary cover images and grayscale secret images with a size of 256 \times 256 used in this paper are illustrated in Fig. 2, which are scaled to the proper size in some experiments.


Fig. 2.
Experimental images. (a) – (d) four input binary cover images C_{1},C_{2},C_{3} and C_{4} . (e) – (f) different input grayscale secret images.

Show All

Fig. 3 shows the results of the proposed (k,n) threshold RISS, where k = 3, n=4, m_{1}=251, m_{2}=253 , m_{3}=254, m_{4}=255, p=131,TH=64 and the input grayscale secret image is presented in Fig. 3 (a). Figs. 3 (b–e) illustrate the output of 4 comprehensible shares SC_{1},SC_{2},SC_{3} and SC_{4} , which appear similar to the cover images, as well as their PSNRs. Figs. 3 (f–p) show the secret images reconstructed with any 2 or more shares based on CRT, where S'_{i_{1}~i_{2} \cdots i_{t}} denotes the secret image S' reconstructed from SC_{i_{1}}, SC_{i_{2}}, \cdots,SC_{i_{t}} . From Figs. 3 (f–p), the secret image reconstructed with any 3 or more shares is recognized, while nothing of the secret image reconstructed with 2 or fewer shares is recognized. The secret image is losslessly reconstructed with any 3 or more shares, i.e., Fig. 3 (l) is the same as the original secret image in Fig. 3 (a) as PSNR=+\infty . The recovered binary cover images are demonstrated in Figs. 3 (q–t), which are all lossless and have the same size as the secret image.


Fig. 3.
Experimental results of the introduced (k,n) threshold RISS, where k = 3, n=4, m_{1}=251, m_{2}=253, m_{3}=254, m_{4}=255, p=131 and TH=64 . (a) The grayscale secret image; (b) – (e) four grayscale comprehensible shares SC_{1},SC_{2},SC_{3} and SC_{4} ; (f) – (p) reconstructed grayscale secret images; (q) – (t) recovered binary cover images.

Show All

Fig. 4 shows the results of the proposed (k,n) threshold RISS, where k = 2, n=3, m_{1}=251, m_{2}=253 , m_{3}=255, p=128,TH=24 and the input grayscale secret image is presented in Fig. 4 (a). Figs. 4 (b–d) illustrate the output of 3 comprehensible shares SC_{1},SC_{2} and SC_{3} , which look similar to the cover images, as well as their PSNRs. Fig. 4 (e) shows the secret image reconstructed with the first 2 shares based on CRT, where only the first t-th shadows are utilized to save pages. From Fig. 4 (e), the secret image reconstructed with any 2 or more shares is recognized, while nothing of the secret image reconstructed with any one share is recognized. The secret image is losslessly reconstructed with any 2 or more shares, i.e., Fig. 4 (e) is the same as the original secret image in Fig. 4 (a) as PSNR=+\infty . The recovered binary cover images are demonstrated in Figs. 4 (f–h), which are all lossless and have the same size as the secret image.

Fig. 4. - Experimental results of the introduced 
$(k,n)$
 threshold RISS, where 
$k = 2, n=3, m_{1}=251, m_{2}=253, m_{3}=255, p=128$
 and 
$TH=24$
. (a) The grayscale secret image; (b) – (d) three grayscale comprehensible shares 
$SC_{1},SC_{2}$
 and 
$SC_{3}$
; (e) grayscale secret image reconstructed with the first two shares; (f) – (h) recovered binary cover images.
Fig. 4.
Experimental results of the introduced (k,n) threshold RISS, where k = 2, n=3, m_{1}=251, m_{2}=253, m_{3}=255, p=128 and TH=24 . (a) The grayscale secret image; (b) – (d) three grayscale comprehensible shares SC_{1},SC_{2} and SC_{3} ; (e) grayscale secret image reconstructed with the first two shares; (f) – (h) recovered binary cover images.

Show All

According to the above illustrations, we can conclude the following:

The shares with no pixel expansion are comprehensible and have no cross-interference for the natural secret image.

With fewer than k shares, no secret information is leaked, which indicates the security of our RISS.

With any k or more shares, the secret image is losslessly reconstructed.

The original n different cover images are losslessly recovered by only the binarization processing operation.

An RISS algorithm for a general (k,n) -threshold is achieved, where n \ge k \ge 2 .

B. Available Parameters and Quality Analyses
1) Available Parameters:
In step 1 of Algorithm 1, a set of integers \left \{{ {128 \le p < m_{1} < m_{2} \cdots < m_{n} \le 256} }\right \} is selected to satisfy some conditions, where the conditions intend to achieve the (k,n) -threshold CRT-based ISS. \left \{{ {128 \le p < m_{1} < m_{2} \cdots < m_{n} \le 256} }\right \} is required due to the image pixel value range and pN< M .

We suggest that m_{i} should be as large as possible to ensure that the pixel values of shares can randomly lie within a large range to improve the security and that p should be as small as possible for security reasons, under the condition that p can divide the secret pixel values into two intervals to losslessly recover the secret. When the image pixel value range is [0, 255], we can set p=128 . In addition, a prime generally has significance in cryptography; thus, we can set p=131 , the smallest prime greater than 128.

Ultimately, we provide some available values of parameters {p,m_{1},m_{2} \cdots,m_{n} } for different values of n in Table I, some of which are used in our experiments. The user can search for other suitable parameters according to the specific applications in addition to the above available parameters.

TABLE I Available Parameters for {p,m_{1},m_{2} \cdots,m_{n} }

2) Image Quality Analyses:
In our experiments, we set TH_{i0} = (m_{i}/2 - TH) and TH_{i1} = (m_{i}/2 + TH) for the i -th cover image for i=1,2, \cdots n . Thus, TH plays an important role in the quality of both the secret image and the share. Herein, we intend to study the quality and some other curves as TH changes. The binary cover images and grayscale secret image with a size of 128 \times 128 in Fig. 2 and Fig. 3 (a) are employed in our experiments, where k =3, n=3 , m_{1}=251 , m_{2}=253, m_{3}=255, p=128 , TH \in [{8,120}] , and PSNR/WPSNR=100 indicates lossless recovery for better figure presentation.

Fig. 5 shows the average of the shares’ quality evaluation metric curves for TH , from which we can deduce the following:

When 0 \le TH \le 112 , the PSNR and WPSNR are both monotonically increasing functions of TH .

When TH \ge 112 , the PSNR and WPSNR are both monotonically dramatically decreasing functions of TH .

TH = 112 is an extreme point for the share quality.


Fig. 5.
PSNR and WPSNR curves of shadow images.

Show All

Fig. 6 depicts the mean of the quality evaluation metric curves of the recovered cover images and reconstructed secret image for TH , from which we can deduce the following:

When 0 \le TH \le 112 , the PSNR and WPSNR are both 100, i.e., both the recovered cover images and reconstructed secret image are lossless.

When TH \ge 112 , the PSNR and WPSNR are both monotonically dramatically decreasing functions of TH .

TH = 112 is an extreme point for the quality of the recovered cover images and the reconstructed secret image.


Fig. 6.
PSNR and WPSNR curves of recovered cover images and the reconstructed secret image.

Show All

Fig. 7 shows the number of available values of A satisfying Q\left ({{SC_{i} \left ({{w,h} }\right), TH_{i0}, TH_{i1} } }\right) = C_{i} \left ({{w,h} }\right) for i=1,2, \cdots n in Step 5 of Algorithm 1, i.e., the N_{A} –TH curve, from which we can deduce the following:

N_{A} is a monotonically decreasing function of TH .

When TH = 112 , N_{A}=11.85 \ge 8 ; when TH = 114 , N_{A}=7.58 < 8 .

Fig. 7. - 
$N_{A}$
 curve.
Fig. 7.
N_{A} curve.

Show All

Fig. 8 shows the sharing time–TH curve, from which we can deduce the following:

When 0 \le TH \le 112 , the sharing time is a monotonically increasing function of TH .

When TH \ge 112 , the sharing time is a monotonically dramatically increasing function of TH .

When TH = 112 , the sharing time is 7591 (s), which is an acceptable time for sharing.

Fig. 8. - Sharing time curve.
Fig. 8.
Sharing time curve.

Show All

We further analyze the above curves as follows.

TH = 112 ({N_{A}} = 8 ) is the extreme point. When TH \ge 112 ({N_{A}} < 8 ), we cannot find A subject to Q\left ({{SC_{i} \left ({{w,h} }\right), TH_{i0}, TH_{i1} } }\right) = C_{i} \left ({{w,h} }\right) for i=1,2, \cdots n , which leads to lossy recovered cover images and a lossy reconstructed secret image. When TH \ge 112 ({N_{A}} < 8 ), the sharing time dramatically increases, which leads to a low sharing efficiency.

Hence, in our algorithm, {N_{A}} \ge 8 is suggested to result in an acceptable time for searching available values of A in fully RISS. {N_{A}} may be slightly different in some other environments.

C. Comparisons With Relative Schemes
We will compare our RISS with the method of Ulutas et al. [38] by means of illustrations and features, in which the same secret image as in Fig. 9 (a) and a (3, 3) threshold are used. The method of Ulutas et al. [38] is selected for comparison because their ISS method is reversible for a binary cover image.


Fig. 9.
Experimental example by using the method of Ulutas et al. [38], where k = 3, n=3 . (a) The grayscale secret image; (b) grayscale secret image reconstructed with all three shares; (c) – (e) three grayscale comprehensible shares SC_{1},SC_{2} and SC_{3} ; (f) the same recovered binary cover image.

Show All

1) Illustration Comparison:
Ulutas et al. [38] proposed an RISS approach for a dithered binary cover image based on the exploiting modification direction method, which transforms the secret image pixel values to base 17 and embeds them into the first (k-2) -th coefficients of the constructed polynomial. We use the same parameters as those of Ulutas et al. to realize their results, as shown in Fig. 9, where k=3,n=3 and the grayscale secret image of size 256\times 256 is shown in Fig. 9 (a). Figs. 9 (c–e) are the 3 output shares of size 512\times 512 , which are comprehensible and have the same content. Fig. 9 (b) displays the grayscale secret image of size 256\times 256 reconstructed with all three shares using Lagrange interpolation. The recovered binary cover image is demonstrated in Fig. 9 (f), which is a lossless image of size 512\times 512 .

Fig. 10 shows the comparison example of our (k,n) threshold RISS, where k = 3, n=3, m_{1}=253, m_{2}=254, m_{3}=255, p=131,TH=114 and the input grayscale secret image is presented in Fig. 10 (a). Figs. 10 (b–d) illustrate the output of 3 comprehensible shares SC_{1},SC_{2} and SC_{3} of size 256\times 256 , which are similar to different cover images, as well as their PSNRs. Fig. 10 (e) shows the secret image of size 256\times 256 losslessly reconstructed with all 3 shares based on CRT. The three recovered binary cover images of size 256\times 256 are depicted in Figs. 10 (f–h), which are all lossless.


Fig. 10.
Experimental comparison example of our (k,n) threshold RISS, where k = 3, n=3, m_{1}=253, m_{2}=254, m_{3}=255, p=131 and TH=114 . (a) The grayscale secret image; (b) – (d) three grayscale comprehensible shares SC_{1},SC_{2} and SC_{3} ; (e) grayscale secret image reconstructed with the first two shares; (f) – (h) recovered binary cover images.

Show All

According to Figs. 9 and 10, comparisons between our method and that of Ulutas et al. [38] reveal the following.

Both methods can losslessly reconstruct the secret image with any k or more shares. Our method is suitable for k \ge 2 , while the method of Ulutas et al. [38] is only suitable for k \ge 3 . More importantly, our method needs only O(k) operations [15] to recover each secret pixel due to the modularity of CRT, while the method of Ulutas et al. [38] requires Lagrange interpolation. Thus, our method is more general, with a lower computational complexity for secret images.

The shares of both methods are comprehensible. Our method includes no pixel expansion, while that of Ulutas et al. [38] includes pixel expansion. More importantly, our method outputs n different shares, while that of Ulutas et al. [38] outputs only the same single share. Thus, our method has higher share management efficiency.

The original cover image is losslessly recovered in both methods. Our method losslessly recovers n different cover images, while that of Ulutas et al. [38] recovers only one cover image. More importantly, our method needs only the binarization processing operation to recover the cover image, while Lagrange interpolation is needed in the method of Ulutas et al. [38]. Thus, our method has lower computational complexity when recovering the cover image.

The EC of our method is \frac {8+3}{8 \times 3} = 0.46 , while that of Ulutas et al. [38] is \frac {8+4}{8 \times 3 \times 4} = 0.125 . Thus, our method has a higher embedding capacity.

Our method is only suitable for binary cover images, while the method of Ulutas et al. [38] is suitable for both grayscale and binary cover images. In addition, the method of Ulutas et al. [38] has a higher share PSNR than our method. Our method only outputs an acceptable share quality.

2) Feature Comparison:
Our RISS is applicable for a general (k,n) threshold with n different input cover images, while conventional RISS schemes are applicable to a specific (k,n) threshold with the same single input cover image; thus, we further compare our method with related schemes according to features rather than statistics.

Feature comparisons between our RISS and related methods are shown in Table II, from which our method is shown to have more features as follows.

Our method is applicable for a (k,n) -threshold with any n \ge k \ge 2 due to the use of (k,n) -threshold CRT-based ISS.

We input n different cover images, resulting in n different shares, which improves the share management efficiency.

Our shares have no pixel expansion, which can save storage space.

Both the original cover images and the secret image are losslessly reconstructed in our method.

Our secret recovery method includes modular arithmetic (O(k) operations [15]), as implemented with CRT, and the cover recovery method only includes binarization, achieving a lower operation time than that with Lagrange interpolation.

In particular, compared with traditional methods, the proposed RISS for the (k,n) -threshold exhibits the features of n cover images, no pixel expansion, low recovery operation and lossless recovery for both the secret image and cover image, with an acceptable share quality that outperforms conventional schemes.
TABLE II Feature Comparison With Related Schemes
Table II- 
Feature Comparison With Related Schemes
D. Discussion
Both polynomial-based ISS and CRT-based ISS are studied. They are compared as follows.

The reconstruction operation is Lagrange interpolation (O(k\log ^{2}~k) ) in polynomial-based ISS, while that in CRT-based ISS is modular operation (O(k) ); thus, CRT-based ISS has a lower computational cost than that of polynomial-based ISS to reconstruct the secret image.

2. ISS can achieve lossless reconstruction, while most polynomial-based ISS schemes are lossy.

The shadow size of polynomial-based ISS is easily reduced.

The principle of CRT-based ISS is complex and hard to be understood.

The number of owners is not limited in polynomial-based ISS, while that in CRT-based ISS is generally small, such as n \le 6 , since the available value of m_{i} decreases as n increases, which will affect the distribution of shadow pixel values and thus further lead to security issues. However, n \le 6 is applicable in most situations.

We choose CRT in our scheme due to the advantages of lower computation cost and lossless reconstruction, where lower computation cost is significant in mobile applications and lossless reconstruction is important to image details.

Actually, Shamir’s polynomial-based ISS schemes are widely studied, and they can be applied to our scheme as well. When applying Shamir’s polynomial-based ISS to our scheme, Steps 1 and 2 can be removed; in Step 4, we can construct a k-1 degree polynomial as Eq.(9), with the constant coefficient equal to the secret pixel grayscale value and the other coefficients chosen randomly; Step 5 can be preserved. In such a way, we could use polynomial-based ISS. \begin{equation*} f(x) = (a_{0} + a_{1 } x + \cdots + a_{k - 1} x^{k - 1})\bmod P\tag{9}\end{equation*}
View Sourcewhere a_{0}=S(w,h) and a_{i} is random, for i=1,2, \cdots k-1 .

SECTION VI.Conclusion
In this paper, we have introduced a formal definition of reversible image secret sharing (RISS). Based on this definition, our proposed RISS algorithm for a (k,n) -threshold implements the principle of Chinese remainder theorem-based ISS (CRTISS), exhibiting the features of n cover images, no pixel expansion, low recovery operation, lossless recovery and share comprehensibility. The experiments have proven the effectiveness of the algorithm. Available parameters and quality analyses have been provided as well. We have performed experiments and feature comparisons with related schemes to indicate the advantages of our approach. We will focus on the following aspects in future work. First, we will test and theoretically analyze the optical image quality factors TH_{i0} , TH_{i1} and N_{A} to balance the sharing time, image quality and security. Second, we will extend the cover pattern to grayscale and color patterns. Third, we will apply other ISS mechanisms to our scheme, such as polynomial-based ISS. Fourth, we will apply other authentication techniques to our scheme to achieve participant authentication, such as the hash function.