Vehicular Ad-hoc Networks (VANETs) supporting the seamless operation of autonomous vehicles introduce various network-connected devices. The widespread devices are engaged in VANETs so that users can enjoy advantageous computing and reliable services. The combination brings in massive real-time message propagation and dissemination, which would be leveraged by the adversaries to perform data association, integration analysis and privacy mining. To address such challenges, existing authentication schemes use n pseudonym certificates for pre-defined k times and try to keep the vehicles anonymous. These schemes require fresh certificates for each authentication process, which cost more communication and storage resources. In this paper, we propose a novel privacy-preserving authentication protocol (P2BA) in bilinear groups, where a registered vehicle signs a traffic-related message and sends it to the nearby Road-side Unit (RSU) together with its blinded certificate. The RSU is able to independently check the message for validity based on a non-interactive zero-knowledge proof protocol. In this way, the computation time has been reduced from O (n) to O (1) while the storage overhead from O (nk) to O (n) compared to anonymous authentication protocols. Moreover, our scheme provides privacy properties such as anonymity and unlinkability. The simulations show that the message authentication can be processed by individual RSUs within 1 ms under the batch-enabled scheme, which outperforms the existing schemes in terms of computation overhead and latency.

SECTION I.Introduction
Vehicular Ad-hoc Network (VANETs) are a vital part of the Intelligent Transportation Systems (ITS) framework, with the intention of predominantly facilitating the dissemination of real-time traffic information. The network enables vehicles to exchange time-critical information by propagating the safety-related and value-added messages [1]. Content of safety-related messages includes information such as vehicle speed, location, and brake status. Value-added messages can be used to offer convenient entertaining services including toll payment, navigation, instant messenger and advertisements [2]. Typically, the transmission frequency of the safety-related messages is up to 10 times per second, which implies that an Road-side Unit (RSU) should verify around 5000 messages per second with hundreds of vehicles within its coverage. To effectively support information dissemination, reliable authentication schemes are required, particularly with widely deployed RSUs to organize communications and control for the vehicle. In particular, RSUs have been equipped with edge computing devices to handle the computational complexity and transmission overhead, which is a promising solution that enables RSUs to process vehicle authentication requests locally, without relying on time-consuming cloud servers [3].

However, several challenges must be addressed to vehicular networks. First, most of the messages associated with safety are delay intolerant, which require reliability and low latency transmission. As mentioned in [3], the latency requirement of the pre-crash sensing warning task should be less than 20 ms, while to support the automated driving, the delay tolerance is less than 10ms. Second, security and privacy issues should be taken into consideration because vehicles and RSUs communicate through open wireless channels. Once coupled with the mobility and dynamic topology of VANETs, optimizing the communications becomes very challenging.

NHTSA [4] proposed a Security Credential Management System (SCMS) that allowed vehicles to broadcast signed messages using pseudonym certificates. Nevertheless, authenticating per message of one vehicle together with the pseudonym certificate incurs processing delays of about 22ms [5]. The latency is not bad but still not fast enough to satisfy the typical tasks such as pre-crash sensing warning and automated overtake services. Moreover, in SCMS, the pseudonym certificates are issued by the Trusted Third Party (TTP) each time the vehicles sending the safety-related message, which obviously prolongs the authentication latency.

Some sophisticated works [6]–[7][8] combine the pseudonym certificates with batch protocols to pursuit authentication efficiency. Liu [7] designed a batch authentication system, where a proxy vehicle is employed to authenticate the vehicle messages. The batch scheme achieves efficiency by authenticating multiple messages with a verification function at the same time. The RSU can verify whether the outputs of the proxy vehicle are valid, which guarantees the message integrity, authenticity, and nonrepudiation. However, the ability of privacy protection depends on the number of attending vehicles. It is obvious that an optimum number of vehicles joining the group cannot be guaranteed every time, particularly in rural areas with sparse vehicles.

However, the state-of-the-art approaches have three limitations: 1) Operations for signing and verifying messages are time-consuming, which makes it incompatible when supporting the automated driving in VANETs. 2) Storage and communication overhead are heavy for users. In privacy-preserving protocols, different pseudonym certificates are needed for each authentication process. 3) The RSUs are assumed trusted in most schemes. However, the RSUs are located alongside the roads, taken care of by different companies. The semi-trusted RSUs who are curious about privacy may lead to confidential information leakage.

In this paper, our goal is to tackle the aforementioned efficiency and privacy problems of the existing authentication schemes. We propose a privacy-preserving message authentication scheme (P2BA) in the bilinear groups and the main contributions of this paper include the following:

Efficient message authentication. A novel low-latency authentication scheme that checks the message for validity based on a non-interactive zero-knowledge proof protocol. The non-interaction scheme achieves efficiency because we only need one end-to-end (E2E) wireless transmission between the RSU and vehicle in the whole authentication process. The vehicle itself can generate the blinded certificate and sign the message, while the RSU can independently verify the message. The zero-knowledge scheme guarantees the message integrity, authenticity, and nonrepudiation, resisting the semi-trusted RSUs as well.

Batch-enabled function. Our proposal enables batch message verification to reduce not only the computation overhead of the RSUs, but also the authentication latency of VANETs. The simulations show that the message authentication can be processed by individual RSUs within 1 ms under the batch-enabled function. We also demonstrate the efficiency of the scheme by simulating the RSU serving capability and comparing it with the related schemes.

Privacy-preserving properties against semi-trusted RSUs. We provide privacy properties such as anonymity and unlinkability. The semi-trusted RSUs cannot link the messages with the particular vehicle, while no adversary can break anonymity under the security assumptions.

The remainder of our paper is organized as follows: Section II introduces the related work and several preliminaries. The framework and security model are formalized in Section III. Section IV presents P2BA, which is a privacy-preserving authentication scheme suits for VANETs. The analysis of the security and privacy of our model is in Section V. We evaluate our model and compare it with the existing schemes in Section VI. Finally, we conclude our proposal as well as the future work in Section VII.

SECTION II.Related Work and Preliminaries
Recently, a wide range of research works are addressing the authentication problems in VANETs. Particularly, we discuss Privacy-preserving schemes, which can be categorized roughly into pseudonym-based, group signature-based and hybrid approaches.

A. Related Work
In vehicular network, there will be massive real-time messages generated and disseminated by vehicles, which would be leveraged by the adversaries to perform data association, integration analysis, and privacy mining [9]. Applying pseudonyms mechanism [4], [7], [8], [10] to protect the real identity or certificate is a natural idea. The SCMS [4] scheme leverages pseudonym certificates to protect the privacy of users. Fresh pseudonyms certificates for each authentication process are generated by The Trusted Party (TTP). However, the processing delays cannot satisfy applications such as pre-crash sensing warning and automated driving. To overcome the transmission latency from TTP to vehicles, schemes [7], [8], [10] introduced Tamper-proof Devices (TPD) to generate and store the pseudonyms. However, there can be powerful adversaries try to link the new and old pseudonyms by monitoring the temporal and spatial relations [11]. What’s worse, with a large number of pseudonyms reserved in the OBUs, it will be inconvenient to conduct a revocation scheme when the malicious vehicle be found in the network.

Group signature-based [6], [12] approaches seem promising when considering the authentication efficiency in VANETs. An efficient authentication framework of vehicular communication based on group signature is proposed in [6]. Wasef and Shen systematically discussed how to implement the group signature proposed by Boneh and Boyen [12] in VANETs. This work combines zero-knowledge proof with the batch group signature to achieve efficiency. The batch group verification scheme verifies 79 messages in 300 ms. However, the invalid messages may introduce additional verification delay for a rebatch, which fails to meet the critical time requirement.

Hybrid message authentication schemes [13]–[14][15][16] address the efficiency and privacy challenges in particular. Wang et al. [14] proposed a scheme to check whether the road conditions are reported by legitimate vehicles, and distinguish the reported data from different vehicles in ciphertext format for the same place without compromising their confidentiality. It is a practical application scenario for message authentication schemes. Furthermore, the authors assumed the participants such as the Root Authority (RA), Sub-authorities (SAs), and Road Units (RUs) are all trusted. However, the RUs communicate through open wireless channels in VANETs, which are vulnerable to arbitrary attackers. Once the RUs are compromised, the participants face the risk of privacy leakage. Zhang et al. [13] presented a mutual authentication scheme between vehicles and edge computing devices. The work combines pseudonym schemes with Elliptic Curve Cryptography (ECC) to support security authentication without the assistance of trusted Edge computing vehicles (ECVs). To pursuit the users’ privacy, the ECVs leverage TPDs to store the pseudonym certificates. However, once the TPDs falls into the single point of failure, the entire network faces privacy disclosure. David Gabay [16] utilized the concept of Zero-Knowledge proofs to ensure the vehicles remain anonymous and resist the privacy disclosing from public entities. However, the blockchain-based authentication creates high level of scheduling overhead, which restraining the efficiencies of scheme. Yang et al. [15] proposed a threshold identity authentication architecture, which supports fast handover suits for VANETs. The privacy-preserving solutions provide advantages to both edge devices and vehicles. However, they introduced computational and communication overhead. The communication latency is more than 130ms and takes several rounds to authentication a vehicle with the assistant of distributed edge nodes.

To the best of our knowledge, previous approaches face three major challenges in the authentication process: 1) the existing proposals incur prolonged time delay and need several rounds while authenticating; 2) the existing proposals that try to achieve the unlinkability during the authentication messages often burden the computational and communication overhead; and 3) most of the proposals that offload the computational overhead to the edge nodes didn’t provides the solution of resisting the semi-trusted devices.

B. Preliminary
1) Bilinear Pairing:
The properties of the bilinear operation used in this paper are defined as follows: Let G denote an additive cyclic group of prime order q=Θ(2k) and GT denote a multiplicative group of the same prime order q . Let G=<g> and GT=<g> . e : G×G→GT be a bilinear mapping with the following properties:

Bilinear: For all U,V∈G and a,b∈Z , e(Ua,Vb)=e(U,V)ab .

Non-degeneracy: e(U,V)≠1GT .

Computability: There exists an efficient algorithm for computing e(U,V) where U,V∈G .

2) Mathematical Assumptions:
We state the following two number-theoretic assumptions as the basis for our scheme.

Definition 1 (n -DHE Assumption). Diffie-Hellman Exponent (DHE) assumption: Let gi=gηi , η∈RZq . On input g,g1,g2,…,gn,gn+2,…,g2n∈G2n , it is hard to output gn+1 .

Definition 2 (LRSW Assumption). Let X=gx , Y=gy∈G . Let Ox,y(.) be an oracle that on input m∈Zq outputs (R,Rx,Rx+mxy) where R is a random element of G . Then, having access to such oracle and knowing all values but x and y , it is infeasible to compute a new triple (A,B,C) such that A∈G∧B=Ay∧C=Ax+m′xy and m′ has not been queried the oracle.

SECTION III.System Model
We intend to provide an efficient privacy-preserving authentication scheme. In this section, we formalize the architecture, and outline the security requirements briefly.

A. Hierarchical Architecture
As shown in Figure 1, the Law Enforcement Authority (LEA) is a trusted authority who divides the whole precinct into several domains. In Domain A , the vehicular network composes a set of RSUs Rj distributing uniformly. A set of vehicles vi equipped with the modules called On-board Units (OBUs) are randomly distributed and communicate with the RSUs. Wireless communication incorporates two specific types such as Vehicle-to-Infrastructure (V2I) and Vehicle-to-Vehicle (V2V). The communications are carried out by the underlying technology being used: WLAN-based and cellular-based. The wired communications between LEA and RSUs are initiated with the intention to monitor the real-time traffic information dissemination. In our system model, vehicles and RSUs propagate traffic-related messages, which potentially aids transportation system. The main components are described as follows:


Fig. 1.
System model of VANETs.

Show All

1) Law Enforcement Authority (LEA):
LEA is a trusted management center as it is authorized by law. It provides authorization to the RSUs and distributes certificates for vehicles. Moreover, LEA is the only authority in our model to audit the network by revealing the real identities of the misbehavior vehicles.

2) Road-Side Units (RSUs):
RSUs are located alongside the roads to organize and coordinate vehicular communications in an optimized manner. RSUs equipped with edge computing hosts have stronger computation and storage capabilities [9]. Such a model is proposed in both IEEE 802.11 and cellular networks. We assume RSUs are semi-trusted entities, in the sense that they may misbehave on their own but would never conspire with either of the other entities. Under the definition provided in [11], [17], the information stored in RSUs may be known by attackers. RSUs are mainly in charge of message verification, group public key update, and certificate update. Because RSUs are semi-trust, it is not safe that RSUs obtain any private information during the message verification and group key update processes. Thus, we have to design a protocol to ensure that RSUs cannot get any confidential information during the two processes.

3) On-Board Units (OBUs):
The main computing and communication units in vehicles are the OBUs. They are embedded equipment with limited computing capability, which can be used to communicate with each other. Vehicles could communicate with other OBUs through V2V or with RSUs through V2I.

B. Security Model
Following the security hypothesis presented in [18], LEA is a fully-trusted authority. The RSUs are semi-trusted, while the majority of vehicles are honest. The adversary can launch cyber-attacks that may impact message integrity, quality of service, and disrupt the communication between vehicles. In [19], Raya et al. defined five basic attacks including fake information, cheating with sensor information, ID or trajectory disclosure, denial of service, and masquerading. To resist the security threats, state-of-the-art achievements [14]–[15][16] presented the authentication model for VANETs. A secure and private authentication scheme should meet the requirements: authentication correctness, message integrity, and privacy-preserving. [13] extended the attack types by introducing the semi-trusted edge nodes. Here, we take all those security schemes into consideration and proposed our model as follows:

Authentication correctness and integrity: For the correctness property, the authorized vehicles can always be verified that they are indeed the legal entities. The message sent by the authorized vehicles can be proved correct without being modified or forged.

Privacy-preserving: The proposed scheme meets the privacy-preserving requirements as follows:

Identity anonymity: the ability to communicate in VANETs without revealing the identity of the vehicles.

Unlinkability: the ability of a single vehicle to send multiple messages without revealing that the messages were sent by the same vehicle.

Nonrepudiation: Only the LEA has the ability to identify the vehicle associated with the verification message, it can reveal the real identity of an vehicle in case of dispute.

Resisting semi-trusted RSUs: The proposed scheme can resist the semi-trusted RSUs and guarantee the confidentiality of the vehicles.

Resisting attacks: The proposed scheme can resist the typical attacks incurred in VANETs such as the replay attack, the impersonation attack and the modification attack.

SECTION IV.The Proposed Scheme
Here, we introduce P2BA, an efficient privacy-preserving authentication scheme which is based on modified Camenisch-Lysyanskaya (CL) protocol [20]. The frequently used notations, parameters and algorithms are described in Table I.

TABLE I Basic Notations and Description

A. System Initialization
This phase initializes the system parameters for each registered network member, which can be mathematically modeled as follows. We employ bilinear groups, based on the Weil and Tate pairings over elliptic curves [21], as the underlying primitives for our scheme.

LEA’s initialization

The LEA generates a bilinear mapping e:G×G→GT , where G and GT are cyclic groups with prime order q . g is a generator of G , and h,g are two distinct generators of GT . The LEA runs the setup algorithm Setup(1k) and sets the public parameters para=(q,G,GT,g,g,h,e) .

The LEA chooses x,y,x1,x2,x3,x4,x5,λ∈Zq , sets the public key pkLEA=(λ,h,Y1,Y2,Y3,Y4,Y5) , where Y1=gx , Y2=gy , Y3=gx1hx2 , Y4=gx3hx4 , and Y5=gx5 . The secret key of the LEA is skLEA=(x1,x2,x3,x4,x5) .

RSU’s initialization

The RSU randomly chooses an integer skRSU∈RZq , then computes its public key pkRSU=gskRSU .

The RSU preloads with the system parameters para and LEA’s public key pkLEA .

Vehicle’s initialization

The vehicle randomly chooses its membership secret key k∈RZq , then computes P=gk and sends to the LEA. P is the vehicle’s public key can be used to tackle the vehicle.

The LEA chooses a random number r∈RZq and generates a certificate Cert=(a,b,c) for the vehicle as follows:
a=gr,b=ax, c=axPrxy.(1)
View Source

Then the LEA sends the certificate to the vehicle via a security channel.

LEA stores P=e(P,g) together with P and the certificate of the vehicle.

The vehicle reserves the certificate Cert , system parameters para and LEA’s public key pkLEA in the OBU.

In this initialization procedure, LEA should retain the vehicle’s private material and its secret key confidentiality. Thus, we assume that there is no privacy disclosure and security attack risk in this phase.

B. Message Signing
To prevent misbehavior vehicles or adversaries from introducing dubious information in VANETs, messages propagated in the network should be signed by the owners. Any vehicle Vi can sign a message m by executing Algorithm 1. The algorithm returns a signature message Msg=(Cert˜,σ,m,Tstamp) , where Cert˜ is a blinded version of the signer’s certificate, σ is the signature on the message m , and Tstamp is a time stamp. The procedure can be modeled as follows:

Algorithm 1 Message Signing
g,g,h,λ,Y1,Y2,Y3,Y4,Y5,k,P

Select random numbers r1,r2∈RZq

Set T5=ar2 , T6=br2 , T7=cr1r2

Select random number u∈RZq

Set T1=gu , T2=hu , T3=Yu3P , T4=Yu4YuH(T1∥T2∥T3)5

Select random numbers rp,rm,rv∈RZq

Set R1=e(g,T7)rpe(Y1,T5)−rm , R2=grv , R3=hrv , R4=Yrv3grm , R5=Yrv4YrvH(T2∥T3∥T4)5

Set Chash=R1λH(m∥Tstamp) mod q , Sp=r−11Chash+rp , Sm=kChash+rm , Sv=uChash+rv

Set σ=(Chash,R2,R3,R4,R5,Sp,Sm,Sv,T1,T2,T3,T4)

return Msg=(Cert˜,σ,m,Tstamp)

First, in Step 1–2 of Algorithm 1, the vehicle chooses random r1,r2∈Zq and generates the blinded certificate Cert˜
Cert˜=(ar2,br2,cr1r2)=(a~,b~,c~r1)=(T5,T6,T7).(2)
View SourceRight-click on figure for MathML and additional features.

Second, in Step 3-4, by choosing random number u , the vehicle’s membership public key is encrypted under the LEA’s public key (Y3,Y4,Y5) , as shown in formula (3)
T1=gu,T2=hu, T3=Yu3P, T4=Yu4YuH(T1∥T2∥T3)5.(3)
View SourceRight-click on figure for MathML and additional features.

(T1,T2,T3,T4) is the ciphertext of vehicle’s membership public key built on the Cramer-Shoup encryption scheme [22].

Third, in Step 5-7, the vehicle builds a non-interactive zero-knowledge proof designed based on the Fiat-Shamir heuristic [23], which is (Chash,Sp,Sm,Sv) .

In summary, we can conclude that given one certificate, it is easy to generate the blinded version for the vehicle. Furthermore, with the blinded certificate, the computation time for the vehicle signing a message would be reduced to O(1) by using Algorithm 1. Besides, the storage overhead will be reduced to O(n) for signing n messages. That’s the reason why our authentication scheme is particularly suitable for the vehicular application.

C. Message Verification
Any RSU who receives the signature Msg can independently verify it. A valid signature should satisfy the verification equation (4)
e(a,Y)=e(g,b)andChash˜=Chash(4)
View Source

In another word, the verification phase is a zero-knowledge proof protocol includes: 1) check the validity of blinded certificate with respect to the group’s public key, 2) verify the signature on message m , 3) make sure the owner of the blinded certificate is the owner of the signature on message m . Noting that the verifier in our scheme could be any arbitrary RSU or vehicle according to the V2I or V2V communication models.

Theorem 1:
Algorithm 2 is a zero-knowledge proof on signature message Msg .

Proof 1:
The first equation of step (7) in Algorithm 2 holds since
R1~========e(g,T7)Spe(Y1,T6)−Sme(Y1,T5)−Chashe(g,cr1r2)r−11Chash+rpe(gx,br2)−kChash−rm×e(gx,ar2)−Chashe(g,ax+kxy)r1r2)r−11Chash+rpe(gx,ar2y)−kChash−rm×e(gx,ar2)r−11Chashe(g,a)r1r2(x+kxy)(Chash+rp)e(g,a)r2xy(−kChash−rm)×e(g,a)−r2xChashe(g,a)r1r2xrp+r1r2kxyrp−r2xyrme(g,a)r1r2rp(x+kxy)e(g,a)−r2xyrme(g,c)r1r2rpe(Y1,b)−r2rme(g,T7)rpe(Y1,T5)−rm=R1.
View Sourcethe second equation of step (7) in Algorithm 2 holds since
R2~=gSvT−Chash1=guChash+rvg−uChash=grv=R2.
View SourceRight-click on figure for MathML and additional features.

Algorithm 2 Message Verification
Msg,g,g,h,λ,Y1,Y2,Y3,Y4,Y5

Set R1~=e(g,T7)Spe(Y1,T6)−Sme(Y1,T5)−Chash

Set R2~=gSvT−Chash1

Set R3~=hSvT−Chash2

Set R4~=YSv3gSmT−Chash3

Set H~=H(T1∥T2∥T3) , R5~=YSv4YH~Sv5T−Chash4

Set Chash˜=R1~λH(m∥Tstamp) mod q

if Chash˜=?Chash , e(T5,Y2)=?e(g,T6) , R2~=?R2 , R3~=?R3 , R4~=?R4 and R5~=?R5 then

Accept Msg as a valid message

else

Reject Msg

end if

Similarly, the third and the fourth equations hold. Also, the fifth equation in Algorithm 2 holds since
R5~===YSv4YH~Sv5T−Chash4YuChash+rv4YH~(uChash+rv)5(Yu4YuH5)−ChashYrv4YrvH5=R5.
View Source

By conducting Algorithm 2, the verifier (RSU or vehicle) is able to verify Msg sent by any vehicle. We can conclude that our scheme accomplishes the authentication via only one end-to-end (E2E) wireless transmission, which is a significant improvement for communication latency. That’s the reason why our protocol is suitable for vehicular applications.

D. Identity Validation
The identity validation (Algorithm 3) allows LEA to reveal the identity of the message signer, thus, our scheme provides nonrepudiation that the LEA has the ability to trace the illegal vehicles and reveal their real identities. Upon receiving Msg, the RSU generates the signature and sends it to the LEA, which is σRSU=(Msg,TRSU,SigskRSU(Msg∥TRSU)) . LEA parses σRSU and decrpts (T1,T2,T3,T4) by executing Algorithm 3 to identify the signer.

Algorithm 3 Identity Validation
Msg,x1,x2,x3,x4,x5

Set T4~=Tx5H+x31Tx42

if T4~=?T4 then

Set P~=T3T−x11T−x22

SearchinList(P~ )

else

Reject Msg

end if

Theorem 2:
Algorithm 3 is used to reveal the identity of the group member under the Decisional Diffie-Hellman (DDH) assumption.

Proof 2:
Step (1) in Algorithm 3 holds since
T4~=Tx5H+x31Tx42=gu(x5H+X3)hux4=YuH5Yu4=T4.
View Source

Step (3) holds since
P~=T3T−x11T−x22=Yu3Pg−ux1h−ux2=Yu3PY−u3=P.
View Source

E. Batch Message Verification
When receiving multi-messages from several vehicles, the RSU can verify the message Msg1,Msg2,…,Msgn simultaneously by executing Algorithm 4.

Algorithm 4 Batch Message Verification
Msg1,Msg2,…,Msgn,g,g,h,λ,Y1,Y2,Y3,Y4,Y5

for Each Msgi do

Set ∏ni=1R1,i~=e(g,∑ni=1T7,iSp,i)e(Y1,−∑ni=1T6,iSm,i+T5,iChashi)

Set R2,i~=gSv,iT−Chashi1,i

Set R3,i~=hSv,iT−Chashi2,i

Set R4,i~=YSv,i3gSm,iT−Chashi3,i

Set Hi~=H(T1,i∥T2,i∥T3,i) ,

R5,i~=YSv,i4YHi~Sv,i5T−Chashi4,i

end for

if ∏ni=1Chashi=?∏ni=1R1,i~λ∑ni=1H(mi∥Tstampi) mod q

and e(∏ni=1T5,i,Y2)=?e(g,∏ni=1T6,i) then

Accept Msg1,Msg2,…,Msgn as valid messages

else

Reject Msg1,Msg2,…,Msgn

end if

Theorem 3:
Algorithm 4 is a batch verification of zero-knowledge proof on messages (Msg1,Msg2,…,Msgn ).

Proof 3:
Step (8) in Algorithm 4 holds since
=====∏i=1nChash~∏i=1nR1~λ∑ni=1H(mi∥Tstampi)e(g,∑i=1nT7,iSp,i)e(Y1,−∑i=1nT6,iSm,i+T5,iChashi)×λ∑ni=1H(mi∥Tstampi)e(g,T7,1)Sp,1e(Y1,T6,1)Sm,1e(Y1,TChash15,1)…λ∑ni=1H(mi∥Tstampi)R1,1R2,1…Rn,1∏i=1nλH(mi∥Tstampi)∏i=1nChash.
View Source

Step (9) holds since
e(∏i=1nT5,i,Y2)====e(ar211ar222…ar2nn,Y2)e(gr1r21gr2r22…grnr2n,gy)e(g,gy(r1r21+r2r22+…+rnr2n))(g,∏i=1nT6,i).
View Source

The improvement of efficiency is achieved by executing Algorithm 4, which can conduct batch message verification. Because in VANETs, an RSU would verify more than 5000 messages per second. The computation overhead is challenging for an RSU. The batch verification algorithm provides a solution to relieve the computation overhead by verifying multi-messages simultaneously.

F. Periodic Update of Group Public Key
The revocation mechanism is used to punish the dishonest vehicle. Most research achievements leverage Certificate Revocation List (CRL) to make sure the dishonest vehicle cannot communicate with the entities in the network. Vehicles and RSUs would check the CRL to avoid communicating with revoked vehicles upon receiving a message from an unknown entity [8]. The computation overhead in [6] is O(n2) for revoking n vehicles. Thus, instead of adding dishonest entities in the CRL, we revoke vehicles by updating the LEA’s public key. The computation overhead is reduced to O(nk) . We now discuss the revocation procedure. Recall that the LEA’s public key in our system is pkLEA=(λ,h,Y1,Y2,Y3,Y4,Y5) , the following shows the periodic update procedure.

LEA updates part of its public key by choosing random (x′1,x′2,x′3,x′4,x′5)∈Zq and computing formula (5)
Y3˜=gx′1hx′2,Y4˜=gx′3hx′4, Y5˜=gx′5.(5)
View Source

After that, the public key of LEA will be updated as pkLEA=(h,Y1,Y2,Y3˜,Y4˜,Y5˜) . The updated public key will be sent to the RSUs periodically.

The RSUs forward new pkLEA to these vehicles who have been verified by any RSUs in the network. The new signature message of vehicle will be generated as follows:
T1=T4˜=gu,T2=hu, T3˜=Y3˜uP,Y4˜uY5˜uH(T1∥T2∥T3˜).(6)
View Source

Those vehicles who haven’t received the new public key of LEA cannot pass the message verification.

Theorem 4:
Vehicles who sign the message using the LEA’s new public key can always been verified by the RSUs, otherwise, the revoked vehicles who haven’t got the new public key can’t been validated.

The proof directly follows from Theorem 2.

G. Update of Certificates and Secret Keys
Here, we discuss how to update the certificates and corresponding secret keys of vehicles.

The vehicle chooses a random number k′ as its secret key, and computes its new public key p′=gk′ and membership public key P′=e(P′,g) . Then, the vehicle encrypts P′ under the LEA’s public key as follow:
T′1=gu,T′2=hu, T′3=Yu3P′, T′4=Yu4YuH(T1∥T2∥T3)5.
View SourceRight-click on figure for MathML and additional features.

By replacing m with ′update′ , the vehicle generates (Cert˜,σupdate,′update′) using Algorithm 1.

The vehicle sends Msgupdate to the RSU, which is
(Cert˜,σupdate,′update′,Tstamp,T′1,T′2,T′3,T′4)
View Source

Upon receiving the update message, the RSU parses Msgupdate as (Cert˜,σupdate,′update′) and (T′1,T′2,T′3,T′4) . The RSU verifies the first part to make sure it is the certificate owner who sends the message. Then the RSU signs the second part and sends it to the LEA.

The LEA opens (T′1,T′2,T′3,T′4) according to Algorithm 3. With the algorithm’s return value, the LEA updates the vehicle’s membership public key with a new P . The LEA computes a new certificate according to Formula (1). Before sending the new certificate to the RSU, the LEA encrypts the certificate with the vehicle’s public key.

The RSU forwards the encrypted certificate to the vehicle. After that, the update procedure ends.

SECTION V.Security and Privacy Analysis
Here, we analyze the security and privacy achieved in our scheme. The security analysis of our scheme includes the following three aspects, i.e., message integrity, entity authentication,and nonrepudiation. The privacy analysis includes anonymity and unlinkability. Particularly, the message integrity and authentication is one of the basic security requirements in vehicular network.

A. Security Analysis
1) Authentication Correctness and Integrity:
To be authenticated by RSUs, Vi generates the signature proof message Msg=(Cert˜,σ,m,Tstamp) . Without knowing the vehicle’s secret key k , no attacker can forge 1) a valid certificate, 2) a blinded certificate, 3) the corresponding signature on m .

2) Challenge:
Consider an adversary can forge a certificate Cert=(a,b,c) on vehicle’s secret key k to pass the verification equation
e(a,Y)=e(g,b)andChash˜=Chash.
View Source

We assume that the adversary has a forgery certificate Cert=(a,b,c) that passes the verification equation. To pass the verification, the certificate should have the form that b=ay and c=ax+kxy .

Let a=gα , b=gβ , c=gη , if we can show that β/α=y , and η/α=r+kxy , it is clearly this kind of forgery contradicts the LRSW assumption.

From the certification generation Formula (1), we can get that
c=axPrxy=ax(gk)rxy=ax(gr)kxy=ax+kxy.
View Source

Without loss of generality, let g=e(g,g) and g is a generator of GT then
e(a,Y)=e(g,b)=e(gα,gy)=e(g,g)αy=gαye(g,gβ)=gβ.
View SourceFrom the first part of verification equation which is e(a,Y)=e(g,b) , we can obtain that gαy=gβ , thus αy=βmodq , which means b=ay .

The second part of verification equation has been proved in Theorem 1.

Therefore, under the LRSW assumption, no adversary can forge a valid certificate to pass the verification equation.

Then, we discuss the possibilities of forging a blinded certificate. To get a fake blinded certificate, the adversary has to get a valid certificate. As shown in the Formula (2), the blinded version is generated by choosing two random values r1 and r2 to recompute certificate (a,b,c) . It is not hard to see that, the prerequisite of generating a blinded certificate is the knowledge of the valid Cert . Similarly, without the valid blinded certificate acting as a part of signature message Msg , the authentication cannot be conducted successfully.

3) Nonrepudiation:
Given the signature message Msg , only the LEA can reveal the real identity of message sender. We use the Cramer-shoup encryption scheme [22] to encrypt the membership public key, which is the part of the signature Ciper(P)=(T1,T2,T3,T4) . The LEA can decrypt the Ciper(P) with its secret key to identify the vehicle. Consequently, anyone without knowing the LEA’s secret key cannot reveal the real identity of an vehicle.

B. Privacy Analysis
It is worthy of note that our scheme predominantly intends to preserve anonymity and unlinkability.

Lemma 1:
The proposed scheme is a non-interactive zero-knowledge proof on message m .

Proof 4:
First, we prove the zero-knowledge property. The certificate that the RSU receives from the vehicle is independent of the real one. Choosing random r1 and r2 , blinded certificate Cert˜=(ar2,br2,cr1r2)=(a~,b~,c~r1) . We can find that a~ and b~ are random values satisfy e(a~,Y)=e(g,b~) . c~r1 is also a random value in G . Considering the simulator S: Choose random r1 and r2 , and set a~=gr1,b~=Yr1,c~=gr2 . Thus, (a~,b~,c~r1) is distributed correctly, and so the blinded certificate is simulated correctly. The Ciper(P)=(T1,T2,T3,T4) in the Msg is the cipertext of vehicle’s membership public key, where the membership public key is encrypted by the LEA’s public key and randomized with the random value u . For the Ciper(P) , the vehicle and RSU execute a Cramer-shoup scheme, it follows that there exists a simulator S′ for the verification. Choosing random u , and set T1=gu,T2=hu , then (T1,T2) is distributed correctly. Because Y3,Y4,Y5 are random numbers in GT , set T3=Yu3P,T4=Yu4YuH(T1∥T2∥T3)5 , thus (T3,T4) is distributed correctly. Therefore, the Ciper(P) is simulated correctly. Similarly, we can prove the rest part of Msg is distributed correctly.

Next, we prove that the protocol is a proof of knowledge. Assuming a knowledge extractor algorithm E , given access to a vehicle such that the RSU’s acceptance probability is non-negligible. If the extractor outputs a value (Cert˜,σ,m) , the signature σ is valid. The proof of knowledge protocol directly follows the anonymous credentials [20]. The difference between the message signing in [20] and proposed scheme is the calculation of batch parameter λ . We modified the signing algorithm to support batch verification as indicated in Algorithm 4. This change doesn’t affect the zero-knowledge property since the verification equation still holds after the modified function of batch parameter. The details are shown in Proof 4.3.

Third, our protocol is a non-interactive authentication scheme by applying the Fiat-Shamir heuristic [23]. During the authentication process, the protocol requires no interaction between the RSUs and vehicles, which is suitable for the wireless scenario.

1) Anonymity:
The property of anonymity is enhanced in three ways, 1) the blinded certificate mechanism is applied to protect the vehicle’s real certificate, 2) the membership public key P is encrypted with the LEA’s public key and randomized by random number u , 3) proposed scheme is a non-interactive zero-knowledge proof. Let us give a proof sketch for anonymity. If an adversary can break anonymity, then one can break the blinded certificate as Cert˜ . If an adversary can produce an encrypted membership public key that cannot be opened, the one can break the Cramer-shoup encryption scheme. If an adversary can forge a signature message Msg , it can break the verification equation, which is contradict the LRSW assumption and DDH assumption.

2) Unlinkabiltiy:
The proposed scheme provides unlinkability that no verifier can tell whether two signature messages Msg were derived from the same vehicle. We use a probability model to analyze the relationship between the probability that an attacker can successfully trace a vehicle and the number of vehicles in the range of an RSU. The successful linkability denotes the capability to distinguish one vehicle from the others in a given period. If we assume that the number of vehicles in the same coverage areas of one RSU is n . In our scheme, the probability is Pr(n)=1/nl , where l is the number of messages sending by one vehicle. Comparing with ABAKA [2], the probability to trace a particular vehicle is Pr(n)=1/n .

C. Resistance to Attacks
Here, we analyze some active attacks in VANETs and demonstrate that our scheme can withstand these attacks.

1) Impersonation Attack Resistance:
To launch an impersonation attack, the adversary can forge a valid message signature (Cert˜,σ,m,Tstamp) satisfying the verification equation (4), which contradicts the LRSW assumption according to Theorem 1. Thus, our scheme can resist the impersonation attack resistance.

2) Replay Attack Resistance:
Our scheme adopts the timestamp Tstamp to compute message signature in Step 7 of Algorithm 1, which is Chash=R1λH(m∥Tstamp) mod q . Thus, parameter Chash changes with Tstamp , which prevents the outdated message and resist the replay attack.

3) Modification Attack Resistance:
According to Theorem 1, the modification of the message signature (Cert˜,σ,m,Tstamp) could not pass the verification equation (4). Therefore, our proposed scheme can resist the modification attack.

SECTION VI.Performance Evaluation
The performance of our scheme is evaluated in this section through extensive simulations. We first estimate computation overhead in terms of message signing and verification separately. Second, the authentication latency is simulated by Network Simulation (NS-3) [24]. Finally, the message loss ratios under the practical viability are evaluated against the existing state-of-the-art approaches to exhibit the efficiency of our proposed scheme.

A. Computation Overhead
To evaluate the computation overhead of vehicles and RSUs separately, we construct symmetric pairings e:G×G→GT over supersingular elliptic curve E:y2=x3+xmodp with embedding degree 4, where G is an additive group generated by a point P^ with the prime order q^=160 bits and the prime number p^=512 bits. The bilinear pairing achieves the security level of 80 bits. For the accuracy of the evaluation, we ran the cryptographic operations 1000 times and take the average values as the final results. The performances ran on a laptop with AMD R7 4800U by using the MIRACL CORE cryptographic library [25].

Tbp is the time required for performing a bilinear pairing, which is approximately 0.7 ms.

Tsm is the time required for performing a scalar multiplication under G , which is approximately 0.18 ms.

Tmtp is the time required for performing a MapToPoint hash operation of the bilinear pairing, which is approximately 0.09 ms.

Tex is the time required for performing a single exponentiation under GT , which is approximately 0.16 ms.

Th is the time required for performing a hash function, which is approximately 0.0001 ms.

In our model, vehicles propagating the messages in VANETs should register to the LEA and obtain the certificates first. Before sending a message to the nearby RSU, the vehicle should signs the message first. By generating a blinded certificate, the vehicle encrypts its membership public key and sends the signature message Msg to RSUs within its coverage. When the RSU receives Msg , it conducts a zero-knowledge proof to verify the signature. We evaluate the computation overhead required for the vehicle signing phase and the RSU verifying phase.

First, we discuss the computation overhead for a vehicle. For signing a message, the vehicle needs to perform 2 bilinear pairing operations, 11 scalar multiplications, and 12 exponentiation operations, respectively. Thus, the message signing time per vehicle is 5.12 ms. Second, we evaluate the performance of the RSU’s message verification phase. When verifying a single message, the RSU needs to perform 4 bilinear pairing operations, 10 scalar multiplications, and 10 exponentiation operations, respectively. Thus, the verification time per message is 6.2 ms. Third, our scheme supports batch message verification, which significantly speeds up the message authentication process. Based on Algorithm 4, we can calculate that verifying 300 messages synchronously needs about 326.6 ms. Assuming that there are 300 vehicles within an RSU’s coverage, our proposed scheme can handle all the authentication requests synchronously. Therefore, from the computation overhead aspect, our scheme satisfies the requirement latency to support vehicular network applications.

Table II gives the comparison of computation cost among approaches including EADA [15], RCoM [14], and PBAS [7]. To be fair, we compare computation overhead of message verification overhead with the recently proposed schemes. The primary operations in the authentication are Tbp,Tsm , Tex and Tmtp . The computation overhead of P2BA is dominant to the number of bilinear pairing. Because in the bilinear groups, the time for performing Tbp is 0.7 ms, which is the most time-consuming operation. The total computation overhead in terms of authentication n messages within an RSU’s coverage is illustrated in Figure 2. We observe that the computation overhead linearly increases with an increasing number of messages. The computation overhead of RCoM is the largest among these schemes, and our scheme performs better compared with the others. It can be observed that the computation overhead of our scheme is better than 16.17 percent to RCoM, 36.13 percent to EADA, 61.50 percent to PBAS respectively. When the number of messages increases up to 300, our scheme saves 1690 ms compared with RCoM, 576 ms compared with EADA, 204 ms compared with PBAS. Note that the computation overhead of our scheme mostly relies on the RSUs, which means vehicles with limited computation ability can cope with the overhead even for heavy traffic scenarios.

TABLE II Comparison for Computation Overhead
Table II- 
Comparison for Computation Overhead

Fig. 2.
Computation overhead comparison versus the number of messages.

Show All

B. Authentication Latency
The authentication latency is defined as the moment the vehicle signs the message to when the message is successfully verified. It contains the computation time of the vehicle TV , signature propagation time TVR , and the computation time of RSU TR . Therefore, the overall authentication latency is TV+TVR+TR . The computation time of vehicles and RSUs has been evaluated beforehand. The signature propagation latency is mainly TVR affected by three factors, the signature size, velocity of vehicle, and vehicle density. To obtain a more realistic evaluation results, the road scenario is simulated in NS-3.

We first analyze the signature size together with the relevant schemes. The signature is generated based on CL signature [20] and Cramer-shoup [22]. According to Algorithm 2, the signature size of Msg=(Cert˜,σ,m,Tstamp) sent by an vehicle is 768 bytes. We compare the signature size with EADA, RCoM, and PBAS respectively. Table III shows the comparison of signature size and authentication latency in terms of verifying a single message and n messages. We first observe that signature size in our scheme is bigger than PBAS. That’s because our scheme provides a non-interactive zero-knowledge protocol, which increases the signature size.

TABLE III Comparison of Signature Size
Table III- 
Comparison of Signature Size
Second, we perform simulations to reveal the relationship between the average speed of vehicle and authentication latency. Vehicles are evenly distributed over different lanes and the speed of vehicles in each lane is approximately 5–30 m/s. Figure 3 shows that the average authentication latency of each scheme approaches a constant, which is only slightly affected by the speed of the vehicles.


Fig. 3.
Comparison of authentication latency versus average speed.

Show All

Third, the relationship between the traffic density and the authentication latency is shown in Figure 4. We observe that the average latency increases with the vehicle density increasing. Our scheme takes only 330 ms to authenticate 300 messages, which is 14.56 percent better than RCoM, 29.94 percent better than EADA, 61.11 percent better than PBAS respectively.

Fig. 4. - Comparison of authentication latency versus the vehicle density.
Fig. 4.
Comparison of authentication latency versus the vehicle density.

Show All

Furthermore, the average latency of our scheme increases slowly comparing with the other schemes. The average latency of our scheme increases from 60 ms to 330 ms when the vehicle density increases from 50 to 300. The increasing ratio of our scheme is 28.42 percent better than that of EADA, 14.36 percent to that of RCoM, 60 percent to that of PBAS. Therefore, our scheme performs better than EADA, RCoM, and PBAS.

C. Message Loss Ratio
To further evaluate our scheme, we perform simulations about the average message loss ratio. The ratio is defined as the number of messages dropped every 300 ms due to authentication latency. According to [6], vehicles need to disseminate traffic information every 300 ms. Thus, we choose to measure the message loss ratio every 300 ms. Figure 5 shows the simulated average message loss ratio vs. the average number and speed of vehicles. It can be seen that the average message loss ratio raises as the number of vehicles raises. When the vehicle density within one RSU raises to 150, the message loss ratio is about 8%, while in BGS [6], the loss ratio is about 40% and PBAS is about 15%. Accordingly, our proposed scheme, which supports batch verification, outperforms those schemes.


Fig. 5.
Average message loss ratio versus the vehicle density and speed.

Show All

D. RSU Serving Capability
In this section, we follow the method provided in [26] to discuss RSU serving capability and compare the results with related schemes. The test environments reflecting the real VANETs scenario are defined as follows: the coverage area of RSUs is Rcov=300m , the speed of vehicles v is varying from 2m/s to 15m/s, the total number of vehicles N within an RSU’s coverage varies from 50 to 300, the probability for a vehicle to send a request is p=80% . The authentication execution time Tex for P2BA, EADA, PBAS, and RCoM is 3.70ms, 3.95ms, 4.54ms and 6.72ms respectively.

The serving ratio of RSUs Qvr [26] is defined:
Qvr=⎧⎩⎨⎪⎪⎪⎪⎪⎪1QcovTex⋅p∗1v⋅NifQcovTex⋅p∗1v⋅N≥1,otherwise.(7)
View SourceRight-click on figure for MathML and additional features.

Figure 6 illustrated the RSU serving capabilities in the different schemes versus the user numbers and vehicle speed. As the number of users varying from 50 to 300 and vehicle speed varying from 2m/s to 15m/s, the RSU serving capability drops. As shown in Figure 6(a), the RSU in our proposed scheme could handle all the requests when the number of users is less than 200 and the average speed is below 12m/s. Comparing with other related schemes, our scheme can deal with the most requests from vehicles and has the highest RSU serving capabilities.

Fig. 6. - RSU serving capability versus the user numbers and vehicle speed.
Fig. 6.
RSU serving capability versus the user numbers and vehicle speed.

Show All

SECTION VII.Conclusion
Our scheme proposes a Privacy-preserving Protocol with Batch Authentication (P2BA) in bilinear groups, where a registered vehicle signs a traffic-related message and sends it to the nearby RSU together with its blinded certificate. The RSU is able to independently check the message for validity based on a non-interactive zero-knowledge proof protocol. Only the LEA has the ability to identify the vehicle associated with the verification message, which can reveal the real identity of a vehicle in case of disputes. As an authentication scheme, our scheme achieves message integrity, privacy-preserving, nonrepudiation, and resisting semi-trusted RSUs as well. The simulations show that the message authentication can be processed by individual RSUs within 1ms under the batch-enabled scheme, which is more efficient than the existing reported schemes. The future work would focus on implementing the model in an automated way and allowing it to interface with real-world data. This is the concrete step towards practical applications. Besides, the authentication schemes face the efficiency problems. We also plan to explore the efficiency in the heterogeneous network.