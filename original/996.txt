With the current development and popularization of biometrics recognition technology, our biometrics and other identity information may be illegal bulk scalping, and there is the possibility of being used for false enrolment, network fraud and other illegal criminal activities. Although some network platforms based on biometrics recognition adopt multi-identity authentication, network hacking technology is also improving constantly. Therefore, we must not ignore the importance of biometrics data protection. To this end, we propose a complete user authentication protocol and key agreement scheme based on cancelable biometrics and physical unclonable function (PUF). Firstly, cancelable biometrics are generated by efficient biometrics fusion processing which called “PUF-TTM” (Template Transformation Method) using a PUF embedded into the device. Then based on Biometrics-as-a-Service (BaaS) model and secret sharing technology, a complete authentication protocol in multi-server environment is designed, and the robustness, effectiveness and security of our proposed scheme are ensured from the perspective of performance and security analysis.
SECTION I.Introduction
As more and more applications are hosted on different servers, biometrics as remote authentication credentials are becoming more common. Compared with the traditional password-based authentication system, biometric authentication has obvious advantages [1]. Biometric characteristics can be used as the inherent identity of each person and uniquely identify each individual. It not only has the characteristics of durability and uniqueness, and can resist the random copying and malicious tampering of attackers, but also does not rely on the user’s memory, so it is convenient and fast to use. However, along with this comes our consideration of the security and privacy of biometrics. Each biometric is unique, and once biometric data is illegally stolen or attacked, it will be permanently lost to the user. However, with the continuous improvement of network hacking technology, the popularization of multi-server environment and automatic identification technology, we need more secure strategies to protect biometrics data and resist various common attacks. Face recognition, as a popular way of biometric recognition, has the characteristics of real-time, accurate, stable, non-contact, and comprehensive infiltration into all aspects of our lives. And our face information, is not just a group of “face photos”, behind it contains us such as ID number, bank card number and a series of sensitive information and our life and property safety. So, in this situation, all users are in a weak position, we need to use biometrics to complete the identity authentication, but we can’t afford to lose them. Once our face information is lost, the security risks are immeasurable. This is also the reason why more and more researchers have invested in the field of biometric template protection in recent years.

Biometric template protection can be divided into Cancelable Biometrics (CB) and Biometrics Cryptosystem [2]. We will focus on the former here. The concept of CB was first proposed in 2007, and was later defined by Rathageb et al as a method comparison biometric templates in the transformation domain after intentional transformation and distortion of biological data [3]. According to the current situation of research in recent years, many scholars have made outstanding progress in this field, and proposed a series of template protection schemes to meet the requirements of non-invertibility, Unlinkability (Diversity), Revocability and Performance [4]–[5][6][7][8]. Non-invertibility refers to the fact that biometric features can easily generate the protected template, but it is difficult to restore the original biological information by inverse transformation of the protected biometric template. Unlinkability refers to the fact that there is no correlation between different biometric templates generated based on the same user’s biometric. When a biometric template is attacked, the system can reissue a new protected biometric template for replacement, which is called Revocability. It is the performance requirement of CB to maintain the identification accuracy of the system while ensuring the security of biological information.

Existing remote biometric authentication schemes realize effective security and privacy protection, but most of them are based on single server environment, which cannot meet the current market demand and practical application [9]–[10][11]. When a user requests to obtain a variety of services provided by the server, multiple registration activities are required which greatly reduces the user experience and increases the risk of biological information leakage. On the other hand, with the popularity of cloud services, if the authentication scheme is still limited to the single-server environment, the biometric authentication system will eventually lose the trust and use of users. In this regard, we use the popular BaaS model to design a complete remote biometric authentication system based on PUF and cancelable biometrics. We propose a template transformation (PUF-TTM) in combination with the response of PUF to generate protected cancelable biometrics, use secret sharing technology to further protect biometrics template and transformation parameters, and secretly transmit information based on the newly proposed feature that PUF can share key, so as to securely complete user identity authentication.

A. Related Work
In 2015, Patel et al. [12] conducted a study based on cancelable biometrics, pointing out the importance of improving the protection of biometric templates. By 2019, Kumar [13] made a comprehensive overview of CB in terms of the advanced technologies in recent years. It can be seen that CB, as an emerging research field, has been favored by researchers from different research backgrounds. However, there is still much room for improvement in practicability and performance of the current research results. In 2010, Wang [14] pointed out that we were supposed to improve the protection of biometric templates on changeability and privacy protection, and systematically studied the face recognition method based on random transformation. This paper proposed a sort index number (SIN) approach in order to solve the variability and privacy protection problems of biometric identification system. As a representative cancelable biometrics scheme, Index-of-Max (IoM) generates revocable biometrics template by converting biometrics vector of real number domain to index domain hash code, which greatly enhances the concealment of biometrics information [7]. Recently, however, Atighehchi et al. [15] have pointed out that IoM is not as resistant to various attacks as originally claimed, and that this scheme is very vulnerable to both authentication and linking attacks. Compared with IoM, BioHashing, as an instance of random projection, uses the method of projection biometric vector to random subspace, and then binarization processing to generate irreversible binary code to achieve biometric template protection. However, if the transformed biometric and projection matrix are known to the attacker at the same time, all the protection barriers for biological data under this scheme will be broken [16], [17]. The recent rise of deep learning and cloud-based technologies has to some extent promoted the development and innovation of biometric template. Liu et al. [18] used deep learning to generate a cancelable template block based on the face and iris, and finished comparison in hash domain. Although the hash in privacy is one of the best, the biometrics are always affected by a lot of noise, causing biometrics are not exactly the same time, the accuracy of the certification result affected by negative. Yang et al. [19] using Binary Decision Diagrams (BDD) to generate safe, irreversible and revocable fingervein templates, which are then used as inputs to a Multi-Layer Exterior Learning Machine (ML-ELM) for training and prediction. While improving template protection, the recognition rate based on deep learning needs to be improved. Striking the right balance between performance and template security has always been our biggest challenge.

It is understood that remote biometric authentication system is often faced with four types of attacks, namely, spoofing attack on sensors, database attack, comparator attack and interception and eavesdropping on communication channels. In order to improve the security of authentication system, many authentication systems adopt multi-factor model to deal with various attacks [20], [21]. From the original password authentication scheme, it has gradually developed into multiple authentication factors combining smart card, biometric and other auxiliary information to improve the security and privacy of the system [22], [23]. Sarier [20] proposed an effective Multi-Factor Biometric Authentication (MFBA) protocol, which combined zero-knowledge proof and homomorphic encryption scheme to complete the comparison process in the encryption domain. The security concept of MFBA is defined as user privacy to ensure that user privacy can be realized even if the system is attacked by multiple attacks at the same time. However, in this scheme, the conversion parameters are stored in the smart card carried by the user, so the biological data may be easily recovered by attacker and the privacy of the user will be infringed. Yang et al. [22] broke the research bottleneck of the revocability of multi-biometric identification system and proposed a revocable multi-biometric identification system based on fingerprint and finger vein, which comprehensively evaluated and analyzed the comparison performance and safety strength under different fusion conditions. The smart card and secret sharing technology in our scheme can successfully resist the first two of the four attack modes mentioned above. Based on our proposed method, the template transformation method PUF-TTM generates revocable biometric templates and uses PUF shared key to secretly transmit information, which can prevent the attack of comparison model and communication channel.

Recently, smart devices and wireless communication technologies in the Internet of Things era have made rapid progress. First of all, the emergence of a new generation of cloud services enables biometrics to be transmitted as a service through the network to an independent organization to provide secure access, which greatly reduces the pressure on the hardware and management consumption of the demanding users. Alizadeh et al. [21] pointed out the feasibility of implementing multi-factor authentication in mobile cloud computing to solve practical problems with the help of centralized computing resources, while achieving more secure and efficient goals. Kaur and Khanna [25], based on Biometrics-as-a-Service (BaaS), a biometrics platform hosted in the cloud, designed a novel multi-server biometrics authentication scheme, which is different from the previous multi-factor authentication protocols. Kaur integrated the concept of CB into a complete authentication protocol, and used the secret sharing technology to generate multiple shares to strengthen the protection of biological templates in the way of distributed storage, so as to further improve the credibility and security of the authentication system [24], [25]. Secret sharing technology, first proposed in 1979, applies to parties who must cooperate but do not fully trust each other. In 2002, Thien and Lin [26] used this technique to improve the security of stored secret images. Li and Hwang [1] proposed a secure biometric authentication model based on threshold secret sharing technology for the first time. The security of the scheme is guaranteed by the inherent non-repudiation of biometrics and the difficulty of public key cryptography, but the consideration of biometric template protection is ignored. Furthermore, inspired by the successful application of physical unclonable functions (PUFs) in IoT systems for remote authentication and establishing trust relationships between devices, PUF has also been used in remote biometric authentication schemes to improve design security [27], [28]. Arjona and Baturone [29] first proposed the XOR fusion of PUF and fingerprint features to generate protected biological templates. Gope et al. [30] proposed to use the user’s biological fingerprint as PUF input directly to generate the biological key to complete user identity authentication, but then Bian et al. [10] pointed out that the method of biometric as PUF input was not feasible and could not get rid of the interference of noise. Bian et al. [10] and Zhao et al. [11] fully combine the characteristics of PUF and fuzzy extractors for biometric authentication in single server and multi-server environments respectively, but neither can resist perfect forward secrecy attack. In 2021, Chatterjee et al. [31] designed an anonymous authentication protocol (3PAA) using the physical unclonable function itself as user secret key, which solved some problems in existing schemes. But 3PAA scheme only uses PUF as the private key for user authentication, is unable to resist stolen device attack. A common shortcoming of the schemes mentioned above is that they do not consider the influence of physical unclonable function on CB. Physical unclonable function could meet the requirements of CB for non-invertibility, unlinkability and revocability. For this reason, the integration of physical unclonable function and cancelable biometrics makes sense. However, our scheme applies physical unclonable function features to generate cancelable biometric templates well, and ensures the security and privacy of biometric templates from the perspective of devices.

B. Contribution
In order to adapt to the trend of the current multi-server environment and the popularity of cloud service, we propose a complete remote biometric authentication system which can resist all kinds of attacks. Firstly, we propose a novel PUF-TTM method to build the cancelable biometric template based on facial images and realize distributed storage of transformation parameters and transformation templates by using secret sharing technology. Furthermore, we can generate different biometric templates for identity authentication without re- enrolment. Finally, we add the cancelable biometrics to a multi-server authentication system, complete the encryption of the transmitted information based on the configurable ring oscillator (CRO) PUF and verify the applicability of our proposed method through experiments, which not only protects the privacy of users, but also improves the credibility of the authentication system. Then, it’s worth noting that the main contributions of this paper are summarized as follows:

A novel generating method PUF-TTM of cancelable biometrics is designed based on physical unclonable function (PUF) and fuzzy extractor.

A secure biometric authentication and key agreement scheme based on cancelable biometrics and secret sharing is proposed.

Both user and device have their own unique biometrics feature, which can provide the key security properties.

Designs a Biometrics-as-a-Service-based privacy-preserving computation framework which can be extended to other biometrics.

A password free scheme for registration, login, authentication and secure session key establishment in multi-server environment.

The rest of the paper is organized as follows. The preliminary is provided in Section II. Proposed template protection process is introduced briefly in Section III. In Section IV we describe how to construct the proposed architecture for remote authentication. Experiments conducted and relevant analysis are given in Section V. In section VI, we make a security analysis and performance comparison of the proposed scheme, and in Section VII, we summarize our work.

SECTION II.Preliminary
A. BaaS
Biometrics-as-a-Service (BaaS), the final frontier of security, is a relatively new trend, referring to security technologies, systems and applications based on biometrics that are hosted in the cloud. BaaS meets the dual benefits of cloud computing and biometric security, and can be integrated into PC and mobile devices. Unlike traditional biometric services, which encrypt digital images and store them in secure locations on devices such as smartphones, BaaS stores authenticated data in the cloud. In our scheme, we design a privacy protection authentication scheme based on BaaS model, combined with PUF-TTM and secret sharing technology to further reduce and eliminate the possibility of biological data being stolen. On the one hand, it overcomes a potential challenge that biometrics differs from passwords: immutability. When biological information is maliciously attacked and stolen, we can flexibly generate a new biometric template by changing transformation parameters and shared values just like changing passwords. On the other hand, it can ignore the requirements of hardware infrastructure, the cost of system maintenance and other factors, get rid of the expensive and time-consuming process of software acquisition and integration, and easily solve the bottleneck problem of the realization of identity authentication function of the present Bring Your Own Device (BYOD) [32].

B. Fuzzy Extractor
The fuzzy extractor [10] is composed of a pair of functions, namely, FE.Gen (⋅ ) and FE.Rec (⋅ ). When the fingerprint F is used as input to FE.Gen (⋅ ), a public auxiliary data P and a key Ci that does not need to be stored are generated, i.e., (Ci , P)= FE.Gen (F ). If F′ and F prime are close enough, i.e., dis(F , F′ ) ≤ t, enter F′ and P together into the function FE.Rec (⋅ ) to recover the key Ci , i.e., Ci= FE.Rec (F′ , P ). In this process, the fuzzy extractor overcomes the possible interference of noise in fingerprint and the insecurity of key storage. Unlike physical unclonable function, the fuzzy extractor allows the input to have a certain amount of noise, as long as the input is close enough to extract the same random string [33]. During enrolment, the Ci generated by the combination of fingerprint and fuzzy extractor is used as the input of the following physical unclonable function, which can not only replace a trusted random number mechanism in the system as a part of PUF-TTM, but also improve the security and privacy of the system from the perspective of multiple factors.

C. PUF
Physical unclonable function PUF, a hardware function that generates random values in the chip depending on the manufacturing process difference of ICs, is embedded in mobile devices to participate in the authentication as the “fingerprint” of the device. Based on the mathematical formula: R= PUF (C ) generates multiple challenge pairs of CRPs, where C is a set of possible challenges, and R , as the output of PUF, is the corresponding response set. Recently, Zhang and Qu [34], for the first time, proposed the concept that a shared key SK can be generated based on PUF. In our scheme, we choose the lightweight CRO PUF, which can not only protect the biological template, but also encrypt the information transmitted on the public channel with SK. Meanwhile, CRO PUF has the following four properties of all (d , h , l,λ,ε )-secure PUF:

Pr[dH(PUFm(Ci),PUFm(Ci))=0]≥1−ε,1≤m≤M;1≤i≤N

Pr[dH(PUFm(Ci),PUFm(Cj))>d]≥1−ε,1≤m≤M;1≤i,j≤N∧i≠j

Pr[dH(PUFm(Ci),PUFn(Ci))>d]≥1−ε,1≤m,n≤M∧m≠n;1≤i≤N

Pr[H−∞(PUFm(Ci),PUFn(Cj))>λ]≥1−ε,1≤m,n≤M∧m≠n;1≤i,j≤N∧i≠j .

Where dH and H−∞ refer to the hamming distance and minimum entropy of two PUF outputs respectively, PUF = { PUF1(⋅) , PUF2(⋅),…,PUFM(⋅) } represents the set PUFs, and C= {C1 , C2,…,CN }


Show All

s.t. ∀ nCn ∈ {0, 1}k said set of challenges. If you use the same Ci as input of the same PUF, will get the same response. If you use two even if there is a little different Ci and Ci input into the same PUF, get the response will also have very big difference. Likewise, if use the same Cj input to the different PUF, get the response will be different.
D. Secret Sharing
The concept of secret sharing, first proposed by Shamir [35] and Blakley [36] in 1979, refers to the reasonable distribution of secrets to multiple members for common management after encryption, so as to improve the secure storage of secrets. In this paper, we assume that t subsecret information (K0 , K1 , K2 , K3,…,Kt−1 ) is obtained after K is equally divided as a secret, and then embedded as a coefficient in the t-1 degree polynomial f(x) : f(x)=K0+K1x+K2x2+⋯+Kt−1xt−1 . At the same time, there are n points in the two-dimensional plane with different x values satisfying f(xi)=yi , respectively: (x0 , y0 ), (x1 , y1),…,(xn−1 , yn−1 ). If we know any t of these n points, we can recover the coefficients of f(x) using Lagrange interpolation, and get the secret K. But if you know at most t-1 of them, you will don’t know anything about K. Where, the Lagrange interpolation polynomial is:
L(x):=∑j=0t−1yjℓj(x)(1)
View Sourcelj (x) as the basic polynomial Lagrange, its expression is:
ℓj(x):=∏i=0,i≠jt−1x−xixj−xi(2)
View Source

In our scheme, we apply secret sharing technology to generate multiple shares of biometric transformation parameters and transformation templates and store them separately in user token (smart card), remote database and application server database. Only when all shared servers are obtained can conversion parameters and conversion templates be recovered to complete remote biometric authentication of users. Specific secret sharing and secret recovery procedures are described in detail in Section III B and Section III C.

E. System Model
Our system model is shown in Fig. 1. In the system, we assemble CRO PUF and face collector on mobile devices such as notebook, mobile phone, tablet and so on, and form the Endpoint UD with the user. Through the biometric authentication platform based on BaaS, the secure communication and identity authentication between users and multiple servers are completed, and the server is regarded as the trusted party.


Fig. 1.
System model.

Show All

SECTION III.Proposed Template Protection Process
As shown in Fig. 2, the original face data of a user is subjected to a cancelable transformation to generate a transformed biometric template Pf. Since the direct use of the original biometric template information for authentication can easily reveal the user’s private information, the proposal of the cancelable template protection scheme is very important. When a biometric template is under attack, we can generate a new, irreversible Pf by changing the transformation parameters. The process becomes invertible and unsafe if both the transformation template and the transformation parameters are intercepted by an attacker. Therefore, we propose a secret sharing algorithm to further improve the protection of transformation templates and parameters. For authentication, we first use the transformation parameters (K,Ci ) and template Pf that shares used when they were recovered from enrolment, and then apply the same transformation parameters to the user’s real-time biometric data to get the Pf ′ which is compared against Pf to grant or deny access. In this process, template protection is mainly determined by three parts, namely, template transformation process, secret sharing process and secret recovery process. The details of each section are as follows.


Fig. 2.
Overview of the proposed transformation process.

Show All

A. Template Transformation Method With PUF (PUF-TTM)
Based on the current popular face recognition algorithm, we use the model provided by InsightFace to extract features from the face data set of LFW, and obtained 512-dimension feature vectors fe. For the original feature vectors fe, we use the proposed template transformation method with PUF (PUF-TTM) to obtain the cancelable biometric template Pf, as shown in Fig. 3. The detailed steps are described below.

All face images are firstly aligned and cropped to 112 × 112 by MTCNN and then are supposed to send to InsightFace model to generate the 512-dimention embeddings. Let fe be a 1-D feature vector belong to each face image and then to be transformed.

Generate a user-specific random matrix K (512 × 512) whose width and height are similar to the feature vector fe and salt fe with K as fk = fe ×K to get the salted vector fk which is going to be binalized.

Input the user’s fingerprint feature into fuzzy extractor in order to generate a device-specific challenge Ci of the specific user and then input to CRO PUF to get a response Ri which doesn’t need to be stored.

Generate the transformed template Pf by concatenating the values corresponding to the two vectors fk and Ri .


Fig. 3.
Process of biometrics template transformation method (PUF-TTM).

Show All

B. Secret Sharing for Template and Parameters Protection
A single technique based on secret sharing is proposed here for implementing distributed storage of transformation templates and transformation parameters using equations of quadratic polynomials and straight lines. K and Ci in this case are the parameters we use to generate the transformation templates. We divide K into three parts to get k1 , k2 , k3 , and then there are 5 secret information (k1 , k2 , k3 , Ci , Pf) who are supposed to be shared to enhance the protection of biological data. A step wise procedure of the proposed secret sharing is shown in Fig. 4 and described below.

Establish the general equation of a line l1 using the keys k1 , k2 and k3 as l1:y=k1x2+k2x+k3 .

Let P be an innocuous image such that on reshaping its dimension is equal to that of Pf. We get three secrets S1 , S2 , S3 by exporting P as a password using key derivation function 2 (PBKD2). Let x1=S1 , x2=S2 , x3=S3 , then y1 , y2 and y3 are evaluated using the line l1 defined above. This step outputs six shares, namely S1=x1 , S2=x2 , S3=x2 , S4=y1 , S5=y2 , S6=y3 that are mapped as three points P1(x1 , y1 ), P2(x2 , y2 ), P3(x3 , y3 ) on the line l1 .

Define a point P4(x4 , y4 ) on the line l1 whose y-coordinate is defined using transformation parameter Ci and a random share S7 , i.e. y4=Ci+S7 . Evaluate its x-coordinate as x4=(k22+4k1y4−4k1k3−−−−−−−−−−−−−−−√−k2)/2k1 using the equation of line l1 . The obtained value is stored as S8=x4 .

Let l2 be the tangent line of l1 at the point P4 . Establish an equation of line as l2 : y=k4x+b whose slope k4 is equal to 2k1x4+k2 , intercept b is equal to y4−k4x4 .

Let l3 be the normal line of l2 crossing the point P4 . Establish an equation of line as l3 : y=k5x+d whose slope k5 is equal to x4=1/−k4 because of the equation k4k5=−1 , intercept d is equal to y4−k5x4 .

Map the reference template Pf as the x-coordinate of a point l3 , i.e. x5= Pf. Obtain its y-coordinate as y5=k5x5+d using the equation of line l3 and stored as share S9=y5 .


Fig. 4.
Concept of secret sharing using three lines.

Show All

Finally, in order to share five pieces of transformation parameters secretly nine secret shares are created as S1 , S2 , S3 , S4 , S5 , S6 , S7 , S8 and S9 . Shares S1, S2, S3, S4, S5, S6 are generated for the coefficients k1 , k2 , k3 of polynomial l1 , while shares S7 , S8 , S9 are generated for Ci and Pf.

C. Secret Recovery Process for Biometric Authentication
According to the shares we can recover the five needed secrets. The secret recovery process for biometric authentication is given below.

Map three points P1 , P2 , P3 using the first six shares S1=x1 , S2=x2 , S3=x2 , S4=y1 , S5=y2 , S6=y3 and Lagrange’s interpolation to find the equation of line l1 . The coefficients of the line l1 reveals the first three secrets k1 , k2 , k3 .

Define x-coordinate of the point P4 lying on l1 as x4=S8 . Using the equation of l1 evaluate its y-coordinate y4=k1x24+k2x4+k3 which is equal to the transformation parameter Ci+S7 .

Determine the second line l2 of the tangent line at the point P4 , by using the first line l1 and P4 , the equation of line l2 is established whose normal line at the point P4 is the last line l3 .

Recover reference template Pf =x5 by determining the y-coordinate of the point P5 lying on l3 as y5=S9 .

SECTION IV.Proposed Architecture for Remote Authentication
Given that there are few authentication schemes involving cancelable biometrics in a multi-service environment, we propose a novel BaaS-based remote multi-server biometric authentication scheme using the PUF of the device and secret sharing technology. Our authentication approach involves three entities, namely: (i) user-the entity which is authenticating using the biometric identity, (ii) device-the entity which is equipped with an image sensor, Fuzzy extractor and a CRO-PUF, (iii) multi-server-the entity which authenticates the user using secret shares and cancelable biometrics template before allowing the user to perform any services of server. We form a combination of a user and a device as Endpoint UD terminal, and use a cloud-based service called as Biometrics-as-a-Service (BaaS) to complete user identity authentication.

A complete cancelable biometrics-based authentication framework is developed in this work by using PUF-TTM and secret sharing scheme discussed above for multi-server environment. Using Fuzzy extractor, PUF and random number mechanism, PUF-TTM can generate multiple different pseudo-identities for the same biometric sample of users, which can be used to obtain multiple services provided by servers in a multi-server environment. Among them, PUF is a lightweight cryptographic primitive that takes a string of bits as an input challenge and generates a unique response based on the process variations occurring in the semiconductor manufacturing process. It can be used as a device-unique “fingerprint” like a human’s fingerprint to uniquely identify the identity of each device. Combined with the user’s fingerprint, the challenge Ci of PUF is generated by using the user’s fingerprint as input of the fuzzy extractor, which gets rid of the disadvantage that the information stored in the device is vulnerable to attack. The challenge pair (CRPs) of CRO-PUF and random number generation mechanism are combined as transform parameters of cancelable biometrics. CRO-PUF is sufficient for the generation of transformation keys, although it is weak PUF which generates only a small amount of CRPs. The application of secret sharing technology realizes the secure management of biometric template and transformation parameters, which enables users to use their biometrics safely in a multi-server environment. While the current method of generating a cancelable biometric is irreversible, the process becomes meaningless once both the transformation parameters and the transformation template are captured by an attacker. So how to manage the transformation parameters of the biological template is a crucial issue. We use secret sharing technology to generate multiple shares of biological transformation templates and transformation parameters, which are stored separately in the system and remote database. This not only solves the security vulnerability caused by directly storing biometric data, but also makes it a huge challenge for attackers to recover secrets through distributed storage of shares. Our scheme mainly includes verifying the authenticity and legitimacy of users and devices, establishing session key and updating the database. The specific enrolment and authentication process is described below.

A. Enrollment Phase
The enrollment protocol is executed between the Endpoint UD and cloud-based BaaS and the process is illustrated in Fig. 5. For each registered user, we assign a unique identity UDi to the combination of the user and the device they are using. After the registration request is issued, the user provides the preprocessed and feature extracted biometric data fv, which is subjected to the proposed PUF-TTM using user-specific transformation parameters (Ki , Ri ) generated from the random number generation unit, Fuzzy extractor and CRO-PUF embedded in the client device. And then different transformed templates can be obtained by changing any parameter for the same biometric sample. Let the transformation parameter Ri be fixed here and assign different Ki for each application., different transformed templates Pf 1, Pf2,…,Pfn are generated from (K1i,Ri ), (K2i,Ri)…(Kni , Ri ).


Fig. 5.
Enrollment process using PUF and secret sharing for the proposed multi-server architecture over a BaaS model.

Show All

We then use the secret sharing technique to hide the transformation parameters and the transformation template, and then discard the original biological information fv directly after generating the shares without saving processing. According to the secret sharing process we proposed in Section III B, We use an innocuous image signal P as the input of PBKDF2 to get a secret, and then we divide it into three parts to form three secrets, says P1 , P2 , P3 . For the first parameter Ki (Ki1 , Ki2 , Ki3 ), six output shares are generated with the proposed secret sharing approach over a BaaS model. Similarly, three output shares Si7 , Si8 , Si9 are generated from the parameter Ri and transformed template Pf i stored on each application server SVi .

It is worth noting that the shares (S1 , S2 , S3 , S4 , S5 , S6 ) are used as common shares and (Si7 , Si8 , Si9 ) are referred as the specific shares of each application server. To further improve the protection of biometric data in a multi-server environment, shares are stored separately. The common shares S1 , S2 , S3 are stored over remote databases, while the shares S4 , S5 , S6 and user-specific identity UDi are stored in user token, eg. smart card. And the other shares Si7 , Si8 , Si9 are provided to application servers with UDi and S6 . Once registered, users can use their smart cards and real-time biometric information to prove their legal identity to the application server and complete the next full authentication process. Due to the CRO-PUF embedded in user devices, we can obtain the shared key SK for authentication in multi-server environment according to the PUF-based key sharing proposed for the first time recently in the Internet of Things security.

B. Login and Authentication Phases
Fig. 6 shows the login, authentication and key agreement procedures for our proposed architecture. First a user attempting to login an application server SVj via his/her own devices, he/she has to provide a smart card with registration information { UDi, S4 , S5 , S6 } and enter real-time facial information Bioi through biometric extractor, and then the shared key SK generated by CRO PUF is used for secret information exchange between UD_{i} and SV_{j} . SV_{j} uses the secret recovery process mentioned above to restore the user’s biometric transformation template Pf and parameters (Ki, Ri). Then the transformation parameters are passed to UD_{i} in encrypted state and applied to the real-time biometrics of the user to obtain Pf’, which is used to calculate the session key sk_{ij} , and finally the data of the application server is matched to make the decision to reject or accept.

Using the UD_{i} entered by user and pre-shared key SK, Endpoint UD_{i} first computes SUD_{i}= UD_{i}~\oplus SK in order to encrypt the transmitted identity, and then UD_{i} sends the message { SUD_{i} } and authentication request to SV_{j} .

SV_{j} first decodes UD_{i} by computing UD_{i}= SUD_{i}~\oplus SK followed by fetching common shares of UD_{i} from its database.

SV_{j} computes E_{1}=h(S_{6}) \oplus h (UD_{i} ) after fetching S_{6} of UD_{i} and subsequently generates a random number e_{1} and then sends a response message {E_{1} , e_{1} } to UD_{i} .

Upon receipt of the message in step 3, UD_{i} first verifies whether the result of E_{1}\oplus h (UD_{i} ) is equal to h(S_{6}) because only real server has the right secret S_{6} . If not, UD_{i} terminates the session.

UD_{i} fetches the common shares S_{4} , S_{5} from its database and generates a random number e_{2} . Also, it computes ES_{4}=S_{4}\,\,\oplus SK and ES_{5}= [S_{5}\oplus h(S_{4}) ] \oplus ~h(S_{6}\vert \vert e_{2}) for the next encrypted transmission. And then UD_{i} is asked to send the message { ES4, ES5, e_{2} }.

Upon receiving UD_{i} ’s message { ES4, ES5, e_{2} }, SV_{j} first decodes S_{4} by computing S_{4}\,\,= ES_{4}~\oplus SK and then decodes S_{5} by computing S_{5}\,\,= [ES_{5}\oplus h(S_{6}\vert \vert e_{2}) ] \oplus ~h(S_{4}) .

Upon decoding S_{4} and S_{5} , the reference template Pf and transformation parameters (K_{i},C_{i} ) are recovered for further processing combining the shares S_{1} , S_{2} , S_{3} fetched from the remote database and S_{6} , S_{7}^{i} , S_{8}^{i},S_{9}^{i} fetched from the database of application server SV_{j} .

Subsequently SV_{j} generates a random number e_{3} used to encrypt transformation parameters. Next, SV_{j} computes EK =K_{i}\,\,\oplus SK and EC_{i}= [C_{\mathrm {i}}\oplus h(K_{i}) ] \oplus ~ h(S_{6}\vert \vert e_{3}) which are submitted to UD_{i} .

UD_{i} first generates a random number e_{4} and obtains K_{i}^{\prime } and C_{i}^{\prime } by computing K_{i}^{\prime }\,\,= EK \oplus SK and C_{i}^{\prime }\,\,= [EC_{i}\oplus h(S_{6}\vert \vert e_{3}) ] \oplus h(K_{i}) . And then the challenge C_{i}^{\prime } is input to PUF and get R_{\mathrm {i}}^{\prime } using R_{i}^{\prime }\,\,= PUF (C_{i} ’).

UD_{i} generates the transformation template Pf’ from the user’s real-time biometric sample Bio_{i} using the transformation parameters (K_{i}^{\prime } , C_{i}^{\prime } ). Then UD_{i} computes Ee_{4}= e_{4}\oplus SK and the session key sk_{ij} is established by computing sk_{ij}=h (UD_{i}\vert \vert Pf’\vert \vert S_{6}\vert \vert e_{4}\vert \vert e_{3} ). Finally, UD_{i} computes E_{2}=h (sk_{ij}\vert \vert SK \vert \vert e_{4} ) and sends the composite massage {E_{2} , Ee4} to SV_{j} .

Upon receiving the message from UD_{i} , SV_{j} first decodes e_{4} by computing e_{4}\,\,= Ee_{4}\oplus SK, then computes sk_{ij}=h (UD_{i}\vert \vert Pf \vert \vert S_{6}\vert \vert e_{4}\vert \vert e_{3} ) in order to achieve the session key.

Finally, SV_{j} verifies whether the key-hash response h (sk_{ij} \vert \vert SK \vert \vert e_{4} ) is equal to E_{2} . If not, SV_{j} will terminate this session.


Fig. 6.
Login, authentication and key agreement phases for the proposed architecture.

Show All

C. Revocation Phase
In order to meet the revocability requirement of biometric template protection, our system needs to provide the necessary revocability mechanism to resist malicious attacks and user token loss. Protected biometric template is based on the user’s face, fingerprint, fuzzy extractor, PUF and secret sharing technology to create a joint cooperation, none is missing. When the revoke command is issued, on the one hand, the user can generate a new protected biometric template by re- enrolling through the enrolment protocol, on the other hand, the method we proposed can realize the revoke of the biometric template without the trouble of the user re- enrolling. When the user token (smart card) is lost, we can update S_{1} , S_{2} , and S_{3} in the remote database by changing one or more shares in S_{4} , S_{5} or S_{6} without affecting the shared information in the application server. When an application server’s database is maliciously attacked, we can use the same strategy to change only the value of the shared S_{7} , S_{8} and S_{9} will be updated, and the public share will work just fine.

SECTION V.Experimental Results
Based on the popular large face data set LFW [37], we evaluate our scheme in terms of performance, unlinkability and revocability, and compare the computational costs in all phases with some famous schemes, which clearly and intuitively highlight the advantages of our scheme. LFW is a data set for unconstrained face recognition, which is composed of 13,233 facial images of 5749 celebrities collected from the network. Each person may contain more than 1 to 3 facial images. This data set has been applied to many researches on cancelable biometrics schemes. According to the partition method on LFW dataset put forward by Gunther, M. et al., our data can be divided into three categories: training set, gallery set and four different probe sets (C, O1, O2, O3) [38]. The gallery set contains face images of users known to the system, while the samples in probe sets are presented to the system for recognition. Among them, probe C corresponds to different face samples of the user in the gallery set, and the rest of probe sets contain different samples in the presence and absence (which can be called imposters) of the gallery. We first preprocess all the face images using MTCNN to detect the face area and cut them into 112 \times 112 images after alignment, and then input them to the latest face deep model InsightFace for feature extraction, thus obtaining 512-dimension embeddings. Based on the proposed PUF-TTM, we carry out the irreversible transformation, and finally get the cancelable biometric template of human face.

A. Performance Evaluation
In order to ensure the security of the original biological data and achieve good face verification performance, we studied the performance of a variety of popular cancelable biometrics schemes in the open and closed sets for the LFW data set, and based on the cosine similarity completes the comparison of pairs of deep feature vectors in the transform domain. In the Closed-set identification, we use the standard face recognition performance evaluation curve: Cumulative Match Characteristic (CMC) curve and Receiver Operating Characteristic (ROC) curve for experiments. The Detection and Identification Rate (DIR) curve and Detection-Error Tradeoff (DET) curve are used in the open-set identification [39]. Among them, the detection and recognition rate refer to the score that the prob samples are correctly detected and recognized in the gallery, and the false alarm rate refers to the score that false alarms for the imposters, which is different from the false accept rate in the ROC curve. A false alarm occurs when the top match score of an imposter is above the threshold set by the system. DET curve: shows the False Positive Identification Rate (FPIR) and the False Negative Identification Rate (FNIR) with the change threshold both changes. The closer the curve of the image is to the lower left corner, the better the recognition performance is. Table I shows the comparison results of the commonly used Biohashing, IoM hashing schemes and our scheme. We can visually see that our proposed scheme is more reliable and efficient than other schemes, ensuring the irreversibility and revocability of the biometric scheme from many aspects. In terms of irreversibility, we combine user-specific transformation parameters and the uniqueness of PUF to perform irreversible conversion of biological characteristics; for revocability, we use new transformation parameters and secret sharing to resist attacks. In order to further evaluate the performance of proposed scheme, we have drawn Fig. 7 and Fig. 8 to compare the performance of the schemes mentioned above. From the results, we can see that our scheme always approaches the experimental results of the original insight feature and is higher than other schemes. It achieves a good balance between template security and performance maintenance.

TABLE I Comparison of Cancelable Biometric Schemes on LFW


Fig. 7.
Comparison between different methods. The (a) ROC curves and the (b) CMC curves for the closed-set evaluation on probe set C, as well as the open-set DIR curves for (c) probe set O1 and (d) probe set O2 are given for all four evaluated methods.

Show All


Fig. 8.
Recognition performance evaluation for all four evaluated methods on different probe sets (O1, O2, O3).

Show All

B. Unlinkability and Revocability
In order to verify that the template protection scheme we proposed meets the requirements of unlinkability and revocability, we select the first 10 images of 158 users with more than 10 face images in the LFW dataset to form a small dataset LFW10, and based on this conduct experimental analysis. We use two kinds of scores for evaluation defined by Gomez-Barrero et al. [40], namely Mated-imposter score and Non-mated importer score. Mated-imposter score refers to the comparison score of the same user’s face image based on different conversion parameters, and the Non-mated importer score refers to the comparison score of different users’ biometric templates using different parameters for PUF-TTM. Fig. 9 shows the fractional distribution in the case of only changing parameter K and changing all parameters. It can be seen from the figure that in these two cases, the two distributions show obvious overlap and close to the same. To further evaluate this overlap, we compute the global measure D_{\leftrightarrow }^{sys} defined in [40] which can evaluate overall linkability of the system. If D_{\leftrightarrow }^{sys}=0 , shows that our scheme is absolutely no link; if D_{\leftrightarrow }^{sys}=1 , the opposite. Calculation results show that the value of D_{\leftrightarrow }^{sys} in our scheme is almost close to zero. Overall, our analysis and results indicate that the proposed scheme supports unlinkability. Even if the attacker can obtain all the comparison scores of the compromised biometric templates from different applications, it is impossible to distinguish them from the same principal. This is because this property ensures that there is no correlation between the updated biometric templates of the same user and the compromised one. We plot the fraction distribution of genuine, imposter and Mated-imposter, as shown in Fig. 10. We can clearly see that the fraction distributions of Mated-imposter and imposter are extremely similar, with similar mean and variance, while the distributions of Mated-imposter and genuine are obviously different. Therefore, the revocable nature of our scheme is established. When the system suffers a malicious attack, we can replace the compromised template by republishing a brand new protected biometric template.


Fig. 9.
Unlinkability analysis by changing (a) only the parameter K , \boldsymbol {D}_{\leftrightarrow }^{ \boldsymbol {sys}}= \boldsymbol {0.01} . and (b) all parameters (K , Ci), \boldsymbol {D}_{\leftrightarrow }^{ \boldsymbol {sys}}= \boldsymbol {0.00} . on LFW10.

Show All


Fig. 10.
Revocability analysis by the distribution of genuine, imposter and Mated-imposter scores on LFW10.

Show All

C. Computational Performance Comparisons
To further evaluate the performance of our scheme, we have carried out a detailed analysis of the computational costs in all phases between the proposed scheme and other relevant schemes. The comparison results are summarized in Table II. Among them, T_{PUF} represents the time cost for PUF-based operations, T_{h} is the time complexity of the hash function. And the time of FE.Gen () and FE.Rec () are denoted by T_{FEG} and T_{FER} respectively, the time of scalar multiplication operation is expressed as T_{SM} . Based on the experimental results in literature [10], [31], we found that a hash operation at the user and server was 0.026ms and 0.011ms respectively; each PUF operation takes 0.13ms at the user’s device; each FE.Gen (\cdot ) operation takes 2.67ms at user’s device and FE.Rec (\cdot ) operation takes 3.35ms at the server; each SM operation takes 3.5ms. Therefore, our scheme has a total time delay of 0.463ms in the mutual authentication stage. The result shows that the computational cost of our scheme is less than most schemes. Specially, we can see from the fourth part of the proposed remote authentication architecture that we only involve the operations with low time consumption such as hash, XOR and PUF. All the above results have shown the validity and superiority of our scheme for remote user authentication.

TABLE II Computational Cost Comparisons

SECTION VI.Security Analysis
A. Formal Security Analysis Using Burrows-Abadi-Needham (BAN) Logic
We use Burrows-Abadi-Needham (BAN) logic [41] to analyze the security of our proposed scheme, from the definition of basic conformity and reasoning logic, related assumptions and goals, to detailed explanations of the specific reasoning process, so as to draw a conclusion whether the agreement meets our expected goals. Based on our proposal, we conduct formal analysis with UDi and SVj as the main body.

1) The Basic Symbols and Rules of Inference:
As shown in Table III, the basic symbols and definitions involved in BAN logic are explained, and several basic logical inference rules are listed below, which will help us to analyze our own schemes with theoretical basis later.

Message-meaning rule: \frac {A\vert \equiv A \mathop {\leftrightarrow }\limits ^{K} B,A\triangleleft \{X\}_{K}}{A\vert \equiv B\vert \sim X} and \frac {A\vert \equiv A\mathop {\Leftrightarrow }\limits ^{Y} B,A\triangleleft \{X\}_{Y}}{A\vert \equiv B\vert \sim X}

Nonce-verification rule: \frac {A\vert \equiv \# (X),A\vert \equiv B\vert \sim (X)}{A\vert \equiv B\vert \equiv X}

Jurisdiction rule: \frac {A\vert \equiv B\Rightarrow X,A\vert \equiv B\vert \equiv X}{A\vert \equiv X}

Belief rule: \frac {A\vert \equiv (X),A\vert \equiv (Y)}{A\vert \equiv (X,Y)}

Fresh rule: \frac {A\vert \equiv \# (X)}{A\vert \equiv \# (X,Y)}

TABLE III Basic Notations of BAN Logic

2) Relevant Assumptions and Goals:
For our proposed scheme, we use BAN logic language to make relevant assumptions, i.e. A1-A8, and preset the goals realized between UDi and SVj, i.e. G1-G4.

SV_{j} \left |{ \equiv \# \left ({{e_{1}} }\right),SV_{j} }\right |\equiv \# \left ({{e_{3}} }\right)

UD_{i} \left |{ {\equiv \# \left ({{e_{2}} }\right),UD_{i}} }\right |\equiv \# \left ({{e_{4}} }\right)

UD_{i} \vert \equiv UD_{i} \mathop {\leftrightarrow }\limits ^{SK} SV_{j}

SV_{j} \vert \equiv UD_{i} \mathop {\leftrightarrow }\limits ^{SK} SV_{j}

UD_{i} \vert \equiv UD_{i} \mathop {\Leftrightarrow } \limits ^{Pf} SV_{j}

SV_{j} \vert \equiv UD_{i} \mathop {\Leftrightarrow } \limits ^{Pf} SV_{j}

UD_{i} \vert \equiv SV_{j} \Rightarrow UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

SV_{j} \vert \equiv UD_{i} \Rightarrow UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

UD_{i} \left |{ {\equiv SV_{j}} }\right |\equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

UD_{i} \vert \equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

SV_{j} \left |{ {\equiv UD_{i}} }\right |\equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j} G4: SV_{j} \vert \equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

3) Inference Proof:
Based on the above assumptions and goals, we use the following steps to prove that the proposed scheme achieves secure authentication and session key negotiation between UDi and SVj. Firstly, we summarize the information passed on the common channel during the authentication process, as follows:

UD_{i}\to SV_{j} : < SUDi >

SV_{j}\to UD_{i} : < E , E_{1}>

UD_{i}\to SVj: < ES4, ES5, e_{2} >

SV_{j}\to UD_{i} : < EK, ECi, e_{3} >

UD_{i}\to SVj: < E_{2} , Ee_{4} >

Two pieces of information emerge from this combination:

UD_{i}\to SV_{j} : < SUDi, ES4, ES5, e_{2} , E_{2} , Ee_{4} >

SV_{j}\to UD_{i} : < E , E_{1} , EK, ECi, e_{3} >

The basic symbols of BAN logic are used to formalize Message1 and Message2 as:

SV_{j}~\triangleleft < SUDi, ES4, ES5, e_{2} , E_{2} , Ee_{4}> that is:

M1: SV_{j} {\mathrm {SV}}_{\mathrm {j}}\triangleleft { UDi, S_{4} , S_{5} , e_{4} }SK, { sk_{ij} }_{Pf}

UD_{i}~\triangleleft < E , E_{1} , EK, ECi, e_{3} > that is:

M2: UD_{i}\triangleleft { UDi, Ki, Ci, S_{6} }_{SK,Pf}

Based on the previous work, the specific logical analysis process is as follows:

According to information M1, Message-meaning rule R1 and hypothesis A4, A6, we can get:

SV_{j} \left |{ {\equiv UD_{i}} }\right |\sim UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

According to S1 and inference rule R2, we can get:

SV_{j} \left |{ {\equiv UD_{i}} }\right |\equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j} (G3)

Based on S2 and Jurisdiction rule R3, assumption A8, we get:

SV_{j} \vert \equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j} (G4)

From M2, a series of assumptions A1, A2, A3, A5, sk_{ij}=h (UD_{i}\vert \vert Pf’\vert \vert S_{6}\vert \vert e_{4}\vert \vert e_{3} ), and inference rule R1, we get:

UD_{i} \left |{ {\equiv SV_{j}} }\right |\sim UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j}

Based on S4 and R2, we get:

UD_{i} \left |{ {\equiv SV_{j}} }\right |\equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j} (G1)

Finally, according to S5 and hypothesis A7, inference rule R3 can be applied to obtain:

UD_{i} \vert \equiv UD_{i} \mathop {\leftrightarrow }\limits ^{sk_{ij}} SV_{j} (G2)

B. Formal Security Analysis Using Real-Or-Random (ROR) Model
We are using the Real-Or-Random model proposed by Abdalla et al. [42] which proves that the session key security is preserved by the proposed protocol.

1) Real-or-Random (ROR) Model:
In our proposed user authentication and key agreement scheme, there are three parties involved, namely the Endpoint UD of the user and device, the application server SV and cloud-based BaaS. Specific to a session, respectively instantiated as UD_{i} , SV_{j} , BaaS_{.}

a) Participants:
The instances u , t and v of UD_{i} , SV_{j} , BaaS are denoted as {\Pi }_{UDi}^{u}, \Pi _{SVj}^{t} and \Pi _{BaaS}^{v} respectively which are called oracles.

b) Partnering:
We denote that the two instances are partnered if they hold the same non-null session key sk_{ij} in the communication. As an instance {\Pi }_{UDi}^{u} ’s partner, \Pi _{SVj}^{t} is called the partner ID{\mathrm {pid}}_{UDi}^{u} of \Pi _{UDi}^{u} . And sk_{ij} is token to be the partial transcript of authentication process between \Pi _{UDi}^{u}~\mathrm {and}~\mathrm {\Pi }_{SVj}^{t} .

c) Freshness:
\Pi _{UDi}^{u}~\mathrm {or}~\mathrm {\Pi }_{SVj}^{t} is treated as fresh if the session key sk_{ij} is not leaked to every adversary via the following given Reveal () query.

d) Adversary:
An adversary \mathcal {A} can control the communication between \Pi _{UDi}^{u} and \Pi _{SVj}^{t} through the following query access, so as to achieve active and passive attack on protocol, such as eavesdropping, intercepting, deleting, modifying, forging and injecting other messages.

Execute({\Pi }^{t},{\Pi }^{u} ): This query is like modelling an eavesdropping attack executed by \mathcal {A} to obtain the messages transmitted between {\Pi }_{UDi}^{u} and \mathrm {\Pi }_{SVj}^{t} .

Reveal({\Pi }^{t} ): The current session key sk_{ij} generated by {\Pi }^{t} (and its partner) will reveal to adversary by this query.

Send({\Pi }^{t} , m ): This query is modeled as an active attack. By the query, \mathcal {A} will run this query to send a message m to a participant instance {\Pi }^{t} and receives a response message.

CorruptUserToken({\Pi }_{UDi}^{u} ): It corresponds to a user token(smart card) loss/stolen attack wherein \mathcal {A} can get all the sensitive secret information stored in the user token.

Test({\Pi }^{t} ): It is about modeling the semantic security of sk_{ij} established between \Pi _{UDi}^{u} and \mathrm {\Pi }_{SVj}^{t} following the indistinguishability style in this ROR model. Before we start the experiment, a coin c needs to be flipped whose value is the output of Test() query and kept secret from the adversary \mathcal {A} . When the query is executed by \mathcal {A} and the established session key sk_{ij} is fresh, the instance {\Pi }^{t} returns sk_{ij} if c = 1 or a random number in the same domain if c = 0; else, it returns null.

e) Semantic security of the session key:
In the ROR model, \mathcal {A} is challenged in distinguishing between an instance’s real sk_{ij} and a random key. Thus \mathcal {A} is allowed to query numerous Test () query to the instance of \Pi _{UDi}^{u} or \mathrm {\Pi }_{SVj}^{t} . The output of Test () query needs to be consistent with respect to the random bit c. Finally, \mathcal {A} returns a guessed bit c’. and \mathcal {A} will be successful in the game if c’ = c. Let E denote the event in which the \mathcal {A} wins the game. It follows that the gain of \mathcal {A} in breaching the semantic security of our proposed authenticated key-agreement (AKE) protocol, say P is as follows:\begin{equation*} {Adv}_{P}^{AKE}=\vert 2. Pr~\left [{ E }\right]-1\vert\tag{3}\end{equation*}
View SourceRight-click on figure for MathML and additional features.where Pr [X ] stands for the probability of some event X . We say P is a secure multi-server scheme in the ROR sense when {Adv}_{P}^{AKE}\le \varphi , for \varphi is negligible.

f) Random oracle:
As in [43], each participant and \mathcal {A} are provided with a one-way hash function h that is modeled by a random oracle, say Hash. And then the Hash oracle is simulated by a two-tuple (a , b ) table of binary strings. If a hash query h(a) is made, the Hash oracle returns b when a is present in the table; else, it returns a uniform random string b and the pair (a , b ) is kept safe in the corresponding table.

2) Security Proof:
Theorem 1 given below provides the semantic security of our proposed scheme under the ROR model.

Theorem 1:
Assume that \mathcal {A} is an adversary running in polynomial time t alongside our scheme P in random oracle, D denotes a uniformly distributed password dictionary and k denotes the number of bits present in the biometric key. And then, the advantage of A in breaking the session key security of P is:\begin{equation*} {Adv}_{P}^{AKE}\le \frac {q_{h}^{2}}{\left |{ Hash }\right |}+\frac {q_{s}}{2^{k-1}\vert D\vert }\tag{4}\end{equation*}
View SourceRight-click on figure for MathML and additional features.where q_{h} , q_{s} , \vert Hash\vert and \vert D\vert are the number of Hash queries, Send queries, the range space of hash function h and the size of D .

Proof:
We follow a sequence of four games defined as Gi (i=0 , 1, 2, 3) which is similar to that in [11], [43]. Let Ei be an event wherein \mathcal {A} guesses the bit c in game Gi correctly. These games are detailed below.

This corresponds to the actual attack by the adversary \mathcal {A} alongside the proposed scheme P . In this game, the bit c needs to be chosen at the begin of G_{0} . Hence, it follows that:\begin{equation*} {Adv}_{P}^{AKE}=\vert 2. Pr~\left [{ E_{0} }\right]-1\vert\tag{5}\end{equation*}
View SourceRight-click on figure for MathML and additional features.

Under this game G_{1} , \mathcal {A} querys the Execute ({\Pi }^{t},{\mathrm { \Pi }}^{u} ) oracle to implement the eavesdropping attacks. \mathcal {A} querys the Test oracle at the end of G_{1} . The output of Test query is used to decide whether \mathcal {A} could derive the actual session key sk_{ij} between UDi and SVj. In the proposed protocol, the session key is computed by UDi and SVj as sk_{ij}=h (UD_{i}\vert \vert Pf \vert \vert S_{6}\vert \vert e_{4}\vert \vert e_{3} ), where UDi is the unique identification of Endpoint UD, Pf is a cancelable biometric template which is only known to UDi and SVj, S_{6} is a share secret only known to the real server, e3 and e4 are two random numbers generated by SVj and UDi respectively and they are encrypted before the public channel transmission. By intercepting information on a public channel, \mathcal {A} cannot obtain the critical message needed to compute the session key. In other words, the chance of winning game G_{1} by eavesdropping attack is not increased and it is equivalent to the game G_{0} . It then follows that:\begin{equation*} Pr[E_{1}] = Pr[E_{0}].\tag{6}\end{equation*}
View Source

Unlike G_{1} , we add Send and Hash oracles to simulate active attacks in this game G_{2} . Let \mathcal {A} make numerous Hash queries to find whether there is a collision. In our scheme, Message1 and Message2 are the information passed on the common channel during the authentication process. Message1 { SUDi, ES4, ES_{5},e_{2} , E_{2} , Ee4 } contains pre-shared secret key SK, the key authentication information Pf, the share S_{6} only known to real server, the random numbers e_{2} and e_{4} . And Message2 {E , E_{1} , EK, ECi, e_{3} } also contains pre-shared secret key SK, the key authentication information Ki, the share S_{6} only known to real server, the random numbers e_{1} and e_{3} . Due to the random numbers attached in each message, there is no collision when \mathcal {A} queries the Send oracle. According to the birthday paradox results, it follows that:\begin{equation*} \vert Pr[E_{1}]-\Pr [E_{2}]\le \frac {q_{h}^{2}}{2.\vert Hash\vert }\tag{7}\end{equation*}
View Source

This game simulates the CorruptUserToken oracle and it models the user token(smart card) lost/stolen attack. The adversary \mathcal {A} can get the message { UDi, S_{4} , S_{5} , S_{6} } from the user token, but nothing of value came out of it. What is stored in the user token is only a partial share based on the biometric template and transformation parameters, which is useless to an attacker who does not know the biometric key. Assuming our scheme applies a strong fuzzy extractor mechanism for extracting at k random bits, the probability of guessing biometric key by \mathcal {A} is approximated as \frac {1}{2^{k}} . If the frequency of wrong password insertion is kept to a definite limit by the system, it follows that:\begin{equation*} \vert \Pr \left [{ E_{2} }\right]-\mathrm {Pr}[E_{3}]\vert \le \frac {q_{s}}{2^{k}.\vert D\vert }\tag{8}\end{equation*}
View Source

Note that the session key all the random oracles are simulated in the game G_{3} . In order to win the game after querying the Test query, A is only left to guess the bit c and we infer that:\begin{equation*} \Pr \left [{ E_{3} }\right]=\frac {1}{2}\tag{9}\end{equation*}
View Source

According to (5) and (6), we firstly get:\begin{equation*} {\frac {1}{2}Adv}_{P}^{AKE}=\left |{ Pr \left [{ E_{0} }\right]-\frac {1}{2} }\right |=\left |{ Pr \left [{ E_{1} }\right]-\frac {1}{2} }\right |\tag{10}\end{equation*}
View Source

Based on (9) and triangular inequality formula, then we can get:\begin{align*} \left |{ Pr \left [{ E_{1} }\right]-\frac {1}{2} }\right |=&\left |{ Pr \left [{ E_{1} }\right]-Pr \left [{ E_{3} }\right] }\right | \\\le&\left |{ Pr \left [{ E_{1} }\right]-Pr \left [{ E_{2} }\right] }\right |+\left |{ Pr \left [{ E_{2} }\right]-Pr \left [{ E_{3} }\right] }\right | \\\tag{11}\end{align*}
View SourceRight-click on figure for MathML and additional features.

From (7) and (8), we obtain:\begin{equation*} \left |{ Pr \left [{ E_{1} }\right]-\frac {1}{2} }\right |\le \frac {q_{h}^{2}}{2.\left |{ Hash }\right |}+\frac {q_{s}}{2^{k}.\vert D\vert }\tag{12}\end{equation*}
View SourceRight-click on figure for MathML and additional features.

That is:\begin{equation*} {\frac {1}{2}Adv}_{P}^{AKE}\le \frac {q_{h}^{2}}{2.\left |{ Hash }\right |}+\frac {q_{s}}{2^{k}.\vert D\vert }\tag{13}\end{equation*}
View Source

To sum up, we can get the following formula, which proves that our scheme can achieve the session key security.\begin{equation*} {Adv}_{P}^{AKE}\le \frac {q_{h}^{2}}{\left |{ Hash }\right |}+\frac {q_{s}}{2^{k-1}.\vert D\vert }\tag{14}\end{equation*}
View Source

C. Informal Security Analysis
Based on some common security attributes, and assuming that the public communication channel can be controlled by an attacker, we conducted a detailed informal analysis of the proposed scheme, which more scientifically proved that our scheme can perfectly realize the biological information security and privacy and have enough reference significance.

1) User Anonymity:
We use the newly proposed CRO PUF to generate a lightweight key-sharing protocol that generates shared keys for resource-constrained devices to encrypt the original IDs of the communicating parties and the secret information exchanged. At each login, different SUD_{i} can be realized based on the characteristics of personalized configuration of the hardware structure and selection of different RO challenges. Get rid of the commonly used random number mechanism, and realize the anonymity of users from the perspective of hardware.

2) Freshness of Session Key:
We combine the relevant registration information with random numbers to calculate the session key sk_{ij} . The existence of random numbers makes the session key generated every time a connection is established completely different. This feature guarantees the freshness of the session key of our proposed scheme.

3) Database Attacks:
We propose a template transformation method (PUF-TTM) to convert the original biological information to generate CB, and then use secret sharing technology to manage CB and conversion parameters, and store them in the user token (smart card), system server and remote server in the form of multiple secret shares. When an attacker tries to steal user privacy by attacking the database, all efforts may be in vain. First of all, the attacker needs to obtain access to all databases and get all the shares to recover the biometric template CB, which is difficult for the attacker to achieve in the case of using distributed databases. Secondly, even if the attacker successfully recovers the conversion template and conversion parameters, he cannot restore the original biometric template. We have performed irreversible conversion of the original biological template, and the attacker can only pass the identity verification if he has real biological information and equipment at the same time. Obviously, the realization of these conditions is extremely difficult, so our scheme successfully resisted database attacks.

4) Impersonation Attacks:
a) Server impersonation attacks:
In our solution, UDi will first verify the authenticity of SVj’s identity. Because only the real server knows the specific information of the share S_{6} , UDi first decrypts the random number e_{1} generated by the server, and then verifies whether the XOR result of E_{1} and h (UD_{i}\vert \vert e_{1} ) is equal to h(S_{6}) to successfully resist server impersonation attack. Even if an attacker tries to pretend to be a legitimate server, generate a random number instead of e_{1} , and send the response message {E , E_{1} } to UDi, he cannot successfully pass the verification and obtain the useful information.

b) User impersonation attacks:
The attacker may obtain the user token and biometric through covert means and pretend to be a legitimate user to try to gain access to the server. In the proposed scheme, tamper resistant smart cards are combined with a revocation mechanism. If the user’s token is lost, the system can easily issue new token information for it. Therefore, an attacker cannot complete mutual authentication by pretending to be a user or a server.

5) Replay Attacks:
The secret sharing technology and revocation mechanism ensure the ability of the proposed scheme to resist replay attacks. First, the conversion template and conversion parameters are generated by the proposed method to generate multiple shares, and then stored in multiple databases in a distributed manner, combined with random number encryption, and transmitted on a public channel. Secondly, our revocation mechanism can generate new shared data to complete user authentication by changing only one share

6) Man-in-Middle Attacks (MIMA):
The mutual authentication process of UDi and SVj involves the transmission of Message1 and Message2, and the attacker will try to intercept and tamper with them. Among them, SK is the shared secret of UDi and SVj, and Pf is the key authentication information that only UDi and SVj know. Any information obtained by the attacker on the public channel cannot decode the original data, nor can it piece together information about the user’s biological characteristics and privacy related snippets. This shows that our scheme is immune to Man-in-Middle attacks.

7) Cross-Matching Attacks:
When any user uses the same biometrics to apply for the services of different servers, not only are different pseudo-identities assigned to each server, which can prevent cross-matching between different servers, but also generate different shares based on CB and store them in different databases. CB can be recovered only if a certain amount of shares are obtained, except that the attacker cannot obtain any useful information.

8) Insider Attacks:
All secret information is not directly stored in the database. On the one hand, the original biological information is not stored, we complete the biological template comparison in the transformation domain; on the other hand, we distributed storage and sharing based on secret sharing technology. Any malicious insider cannot obtain secret information.

9) Online and Offline Password Guessing Attacks:
Our scheme does not involve the use of passwords. We combine facial and fingerprint information to propose a template transformation method PUF-TTM to generate irreversible, revocable, unlinkable and performance-maintained biometric templates, and manage transformation templates and transformation parameters based on secret sharing technology. Therefore, for an attacker, any online or offline password guessing technology is useless. Our scheme perfectly resists all offline and online password guessing attacks.

10) Perfect Forward Secrecy Attacks:
When the long-term key is intercepted by the attacker, if the attacker cannot calculate the current or previous session key, it means that the proposed scheme supports forward secrecy. In our scheme, our session key is calculated based on the transformation template, shares and random numbers, namely sk_{ij}=h (UD_{i}\vert \vert Pf \vert \vert S_{6}\vert \vert e_{4}\vert \vert e_{3} ), if you don’t know { UD_{i} , Pf, S_{6} , e_{4} , e_{3} } cannot calculate sk_{ij} . In addition, Pf is only known by UD_{i} and SVj, and even if the attacker intercepts all the information on the public channel, sk_{ij} cannot be calculated. In summary, our scheme has perfect forward secrecy.

11) Ephemeral Secret Leakage (ESL) Attacks:
Limited by the computing power of mobile devices, many protocols use precomputation technique to store random numbers ahead of time. This makes the protocol vulnerable to ESL attacks. An adversary can decrypt a user’s private key by combining the ephemeral secrets (or random values) with intercepted exchanges on a public channel. But our protocol does not have that problem. On the one hand, the proposed protocol is a password free scheme for registration, login, authentication and secure session key establishment in multi-server environment. Authentication based on cancelable biometrics and PUF is our strength. Only legitimate users who have both can pass the server authentication. On the other hand, our registration phase occurs in a cloud-based multi-server interaction with the Endpoint UD, where encrypted data is distributed and stored using secret sharing technology. This makes it impossible for an adversary to obtain the ephemeral secrets (or random values) associated with the session key. Even intercepting the exchange is futile. Therefore, our protocol is secure under the ESL attack.

SECTION VII.Conclusion
In this paper, we use PUF-TTM and secret sharing technology to propose a complete BaaS-based multi-server user authentication and key agreement scheme, which achieves more effective biometric template protection and higher security performance. Inspired by the recent success of lightweight authentication systems in the Internet of Things, we introduce PUF into our scheme. On the one hand, we use the properties of PUF to design a template transformation method (PUF-TTM) to generate cancelable biometrics(CB), and combine secret sharing technology to store biological templates and related parameters, on the other hand, ensure the legitimacy of the device during the authentication process, and integrate the device response and biological information in a novel way, which not only protects user privacy, but also further improves the credibility of the biometric authentication system in a multi-server environment. In terms of security and performance analysis, we have carried out security analysis from various aspects and scientific evaluation based on BAN logic, and compared the current research scheme to highlight the innovation and performance advantages of our scheme, ensuring that our proposed scheme can perfectly meet the requirements of non-invertibility, Unlinkability (Diversity), Revocability and Performance. In future work, we will continue to advance research in this field.